Index: frameworks/opt/telephony/src/java/com/android/internal/telephony/imsphone/ImsPhone.java
===================================================================
--- frameworks/opt/telephony/src/java/com/android/internal/telephony/imsphone/ImsPhone.java	(revision 170402)
+++ frameworks/opt/telephony/src/java/com/android/internal/telephony/imsphone/ImsPhone.java	(revision 170403)
@@ -35,6 +35,9 @@
 import android.os.PowerManager.WakeLock;
 import android.os.SystemProperties;
 import android.os.UserHandle;
+import android.app.AlertDialog;
+import android.view.WindowManager;
+import android.content.DialogInterface;
 
 import android.provider.Telephony;
 import android.telephony.CarrierConfigManager;
@@ -116,6 +119,10 @@
     private static final int EVENT_SET_CLIR_DONE                     = EVENT_LAST + 5;
     private static final int EVENT_GET_CLIR_DONE                     = EVENT_LAST + 6;
     private static final int EVENT_DEFAULT_PHONE_DATA_STATE_CHANGED  = EVENT_LAST + 7;
+    /* SPRD: add for VoWiFi @{ */
+    private static final int EVENT_DIAL_PENDING_MMI                  = EVENT_LAST + 8;
+    private static final int EVENT_DIAL_PENDING_MMI_TIME_OUT         = EVENT_LAST + 9;
+    /* @} */
 
     static final int RESTART_ECM_TIMER = 0; // restart Ecm timer
     static final int CANCEL_ECM_TIMER  = 1; // cancel Ecm timer
@@ -157,6 +164,12 @@
         }
     };
 
+    /* SPRD: add for VoWiFi @{ */
+    private boolean mShouldRunUssdInVoLTE;
+    private String mPendingMmiString;
+    private AlertDialog mMmiDialog;
+    /* @} */
+
     // Create Cf (Call forward) so that dialling number &
     // mIsCfu (true if reason is call forward unconditional)
     // mOnComplete (Message object passed by client) can be packed &
@@ -548,6 +561,23 @@
                 ImsPhoneMmiCode.newFromDialString(networkPortion, this);
         if (DBG) Rlog.d(LOG_TAG,
                 "dialing w/ mmi '" + mmi + "'...");
+        /* SPRD: add for VoWiFi @{ */
+        if (DBG) Rlog.d(LOG_TAG,
+                "dialing isWifiCallingEnabled:"+isWifiCallingEnabled());
+        if(mmi != null && isWifiCallingEnabled()){
+            if(mMmiDialog != null){
+                mMmiDialog.dismiss();
+            }
+            mMmiDialog = showVolteCallMediaUpdateAlert(mContext);
+            mMmiDialog.show();
+            mShouldRunUssdInVoLTE = true;
+            mPendingMmiString = dialString;
+            ImsManager.setWfcSetting(mContext,false);
+            Rlog.d(LOG_TAG,
+                    "USSD on VoWiFI is not support in current version.");
+            return null;
+        }
+        /* @} */
 
         if (mmi == null) {
             return mCT.dial(dialString, videoState, intentExtras);
@@ -1224,7 +1254,28 @@
                 if (DBG) Rlog.d(LOG_TAG, "EVENT_DEFAULT_PHONE_DATA_STATE_CHANGED");
                 updateDataServiceState();
                 break;
-
+            /* SPRD: add for VoWiFi @{ */
+            case EVENT_DIAL_PENDING_MMI:
+                Rlog.d(LOG_TAG, "EVENT_DIAL_PENDING_MMI,mPendingMmiString:"+mPendingMmiString);
+                try {
+                    mShouldRunUssdInVoLTE = false;
+                    Message mmiMessage = obtainMessage(EVENT_DIAL_PENDING_MMI_TIME_OUT);
+                    removeMessages(EVENT_DIAL_PENDING_MMI_TIME_OUT);
+                    sendMessageDelayed(mmiMessage, 10000);
+                    if(mPendingMmiString != null) {
+                        ((GsmCdmaPhone) mDefaultPhone).dial(mPendingMmiString, null, 0, new Bundle());
+                    }
+                }catch (CallStateException e){
+                    e.printStackTrace();
+                }
+                break;
+            case EVENT_DIAL_PENDING_MMI_TIME_OUT:
+                Rlog.d(LOG_TAG, "EVENT_DIAL_PENDING_MMI_TIME_OUT");
+                mShouldRunUssdInVoLTE = false;
+                mPendingMmiString = null;
+                ImsManager.setWfcSetting(mContext,true);
+                break;
+            /* @} */
             default:
                 super.handleMessage(msg);
                 break;
@@ -1370,6 +1421,14 @@
     }
 
     public void onFeatureCapabilityChanged() {
+        /* SPRD: add for VoWiFi @{ */
+        Rlog.d(LOG_TAG, "onFeatureCapabilityChanged, mShouldRunUssdInVoLTE: " + mShouldRunUssdInVoLTE +" isWifiCallingEnabled:"+isWifiCallingEnabled()
+        +" isVolteEnabled:"+isVolteEnabled());
+        if(mShouldRunUssdInVoLTE  && !isWifiCallingEnabled() && isVolteEnabled()){
+            Message m = obtainMessage(EVENT_DIAL_PENDING_MMI);
+            sendMessage(m);
+        }
+        /* @} */
         mDefaultPhone.getServiceStateTracker().onImsCapabilityChanged();
     }
 
@@ -1572,6 +1631,15 @@
         return mWakeLock;
     }
 
+    /* SPRD: add for bug665970 @{ */
+    public void setVoiceCallForwardingFlagWithIccRecord(
+            IccRecords r, int line, boolean enable, String number) {
+        if (r != null) {
+            setVoiceCallForwardingFlag(r, line, enable, number);
+        }
+    }
+    /* @} */
+
     @Override
     public void dump(FileDescriptor fd, PrintWriter pw, String[] args) {
         pw.println("ImsPhone extends:");
@@ -1591,4 +1659,23 @@
         pw.println("  mSsnRegistrants = " + mSsnRegistrants);
         pw.flush();
     }
+
+    /* SPRD: add for VoWiFi @{ */
+    public AlertDialog showVolteCallMediaUpdateAlert(Context context) {
+        AlertDialog.Builder builder = new AlertDialog.Builder(context);
+        builder.setTitle("USSI over WiFi is not ready yet, USSI will run over LTE.");
+        builder.setPositiveButton(context.getString(com.android.internal.R.string.ok), new android.content.DialogInterface.OnClickListener() {
+            public void onClick(DialogInterface dialog, int which) {
+                if(dialog != null){
+                    dialog.dismiss();
+                }
+            }
+        });
+        builder.setCancelable(false);
+        AlertDialog dialog = builder.create();
+        dialog.getWindow().setType(WindowManager.LayoutParams.TYPE_KEYGUARD_DIALOG);
+        dialog.getWindow().addFlags(WindowManager.LayoutParams.FLAG_BLUR_BEHIND);
+        return dialog;
+    }
+    /* @} */
 }
