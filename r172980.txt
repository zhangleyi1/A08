Index: vendor/sprd/platform/packages/apps/DreamCamera2/src/com/android/camera/data/FilmstripItemBase.java
===================================================================
--- vendor/sprd/platform/packages/apps/DreamCamera2/src/com/android/camera/data/FilmstripItemBase.java	(revision 172979)
+++ vendor/sprd/platform/packages/apps/DreamCamera2/src/com/android/camera/data/FilmstripItemBase.java	(revision 172980)
@@ -19,9 +19,12 @@
 import android.content.Context;
 import android.view.View;
 
+import android.location.Address;
+import android.location.Geocoder;
 import com.android.camera.Storage;
 import com.android.camera.debug.Log;
 import com.android.camera.util.Size;
+
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.load.Key;
 import com.bumptech.glide.signature.MediaStoreSignature;
@@ -28,7 +31,10 @@
 import com.google.common.base.Optional;
 
 import java.io.File;
+import java.io.IOException;
 import java.text.DateFormat;
+import java.util.Locale;
+import java.util.List;
 
 import javax.annotation.Nonnull;
 
@@ -106,11 +112,28 @@
 
         Location location = mData.getLocation();
         if (location != Location.UNKNOWN) {
-            mediaDetails.addDetail(MediaDetails.INDEX_LOCATION, location.getLocationString());
+            mediaDetails.addDetail(MediaDetails.INDEX_LOCATION, convertAddress(mContext,location.getLatitude(),location.getLongitude()));
         }
         return Optional.of(mediaDetails);
     }
 
+    private static String convertAddress(Context context, double latitude, double longitude) {
+        Geocoder mGeocoder = new Geocoder(context, Locale.getDefault());
+        StringBuilder mStringBuilder = new StringBuilder();
+
+        try {
+            List<Address> mAddresses = mGeocoder.getFromLocation(latitude, longitude, 1);
+            if (!mAddresses.isEmpty()) {
+                Address address = mAddresses.get(0);
+                mStringBuilder.append(address.getAdminArea()).append(", ").append(address.getLocality()).append(", ").append(address.getCountryName());
+            }
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+
+        return mStringBuilder.toString();
+    }
+
     @Override
     public FilmstripItemAttributes getAttributes() {
         return mAttributes;
