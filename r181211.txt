Index: packages/apps/Launcher3/ext/src/com/sprd/ext/root/RootUtil.java
===================================================================
--- packages/apps/Launcher3/ext/src/com/sprd/ext/root/RootUtil.java	(revision 181210)
+++ packages/apps/Launcher3/ext/src/com/sprd/ext/root/RootUtil.java	(revision 181211)
@@ -3,18 +3,26 @@
 import java.io.BufferedReader;
 import java.io.File;
 import java.io.InputStreamReader;
+import android.util.Log;
+import java.io.FileReader;
 
-/**
- * Created by SPRD on 2017/6/24.
- */
 public class RootUtil {
     public static boolean isDeviceRooted() {
-        return checkRootMethod1() || checkRootMethod2() || checkRootMethod3();
+    	boolean isRooted = false;
+    	String value = readFile();
+    	if (value.startsWith("TOOR")) {
+    		Log.d("xiawei", "is Rooted");
+    		return true;
+    	} else {
+            return false;
+            //return /*checkRootMethod1() ||*/ checkRootMethod2() || checkRootMethod3();
+        }
     }
 
     private static boolean checkRootMethod1() {
         String buildTags = android.os.Build.TAGS;
-        return buildTags != null && buildTags.contains("test-keys");
+        boolean result1 = (buildTags != null && buildTags.contains("test-keys"));
+        return result1;
     }
 
     private static boolean checkRootMethod2() {
@@ -21,7 +29,9 @@
         String[] paths = { "/system/app/Superuser.apk", "/sbin/su", "/system/bin/su", "/system/xbin/su",
                 "/data/local/xbin/su", "/data/local/bin/su", "/system/sd/xbin/su"};
         for (String path : paths) {
-            if (new File(path).exists()) return true;
+            if (new File(path).exists()) {
+            	return true;
+            }
         }
         return false;
     }
@@ -31,7 +41,9 @@
         try {
             process = Runtime.getRuntime().exec(new String[] {"/system/xbin/which", "su"});
             BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream()));
-            if (in.readLine() != null) return true;
+            if (in.readLine() != null) {
+            	return true;
+            }
             return false;
         } catch (Throwable t) {
             return false;
@@ -39,4 +51,25 @@
             if (process != null) process.destroy();
         }
     }
+    
+    private static String readFile() {
+        String path = "/sys/root_recorder/rootrecorder";
+        String value = "";
+        File file = new File(path);
+        if (!file.exists()) {
+            return value;
+        }
+        try {
+			int count;
+			char[] buf = new char[1024];
+			FileReader rd = new FileReader(file);
+			count = rd.read(buf, 0, 1024);
+			value = new String(buf).substring(0, count);
+			rd.close();
+		} catch (Exception e) {
+			e.printStackTrace();
+		}
+
+		return value;
+    }
 }
