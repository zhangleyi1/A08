Index: vendor/sprd/platform/packages/apps/SprdContacts/src/com/android/contacts/util/IntentUtil.java
===================================================================
--- vendor/sprd/platform/packages/apps/SprdContacts/src/com/android/contacts/util/IntentUtil.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/SprdContacts/src/com/android/contacts/util/IntentUtil.java	(revision 166645)
@@ -0,0 +1,158 @@
+/*
+ * Copyright (C) 2012 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License
+ */
+
+package com.android.contacts.util;
+
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Bundle;
+import android.provider.ContactsContract;
+import android.telecom.PhoneAccountHandle;
+import android.telecom.TelecomManager;
+import android.telecom.VideoProfile;
+
+import com.android.contacts.common.CallUtil;
+
+/**
+ * Utilities for creation of intents in Dialer, such as {@link Intent#ACTION_CALL}.
+ */
+public class IntentUtil {
+
+    public static final String CALL_ACTION = Intent.ACTION_CALL;
+    private static final String SMS_URI_PREFIX = "sms:";
+    private static final int NO_PHONE_TYPE = -1;
+
+    public static final String EXTRA_CALL_INITIATION_TYPE
+            = "com.android.dialer.EXTRA_CALL_INITIATION_TYPE";
+
+    public static class CallIntentBuilder {
+        private Uri mUri;
+        private int mCallInitiationType;
+        private PhoneAccountHandle mPhoneAccountHandle;
+        private boolean mIsVideoCall = false;
+
+        public CallIntentBuilder(Uri uri) {
+            mUri = uri;
+        }
+
+        public CallIntentBuilder(String number) {
+            this(CallUtil.getCallUri(number));
+        }
+
+        public CallIntentBuilder setCallInitiationType(int initiationType) {
+            mCallInitiationType = initiationType;
+            return this;
+        }
+
+        public CallIntentBuilder setPhoneAccountHandle(PhoneAccountHandle accountHandle) {
+            mPhoneAccountHandle = accountHandle;
+            return this;
+        }
+
+        public CallIntentBuilder setIsVideoCall(boolean isVideoCall) {
+            mIsVideoCall = isVideoCall;
+            return this;
+        }
+
+        public Intent build() {
+            return getCallIntent(
+                    mUri,
+                    mPhoneAccountHandle,
+                    mIsVideoCall ? VideoProfile.STATE_BIDIRECTIONAL : VideoProfile.STATE_AUDIO_ONLY,
+                    mCallInitiationType);
+        }
+    }
+
+    /**
+     * Create a call intent that can be used to place a call.
+     *
+     * @param uri Address to place the call to.
+     * @param accountHandle {@link PhoneAccountHandle} to place the call with.
+     * @param videoState Initial video state of the call.
+     * @param callIntiationType The UI affordance the call was initiated by.
+     * @return Call intent with provided extras and data.
+     */
+    public static Intent getCallIntent(
+            Uri uri, PhoneAccountHandle accountHandle, int videoState, int callIntiationType) {
+        final Intent intent = new Intent(CALL_ACTION, uri);
+        intent.putExtra(TelecomManager.EXTRA_START_CALL_WITH_VIDEO_STATE, videoState);
+
+        final Bundle b = new Bundle();
+        b.putInt(EXTRA_CALL_INITIATION_TYPE, callIntiationType);
+        intent.putExtra(TelecomManager.EXTRA_OUTGOING_CALL_EXTRAS, b);
+
+        if (accountHandle != null) {
+            intent.putExtra(TelecomManager.EXTRA_PHONE_ACCOUNT_HANDLE, accountHandle);
+        }
+
+        return intent;
+    }
+
+    public static Intent getSendSmsIntent(CharSequence phoneNumber) {
+        return new Intent(Intent.ACTION_SENDTO, Uri.parse(SMS_URI_PREFIX + phoneNumber));
+    }
+
+    public static Intent getNewContactIntent() {
+        return new Intent(Intent.ACTION_INSERT, ContactsContract.Contacts.CONTENT_URI);
+    }
+
+    public static Intent getNewContactIntent(CharSequence phoneNumber) {
+        return getNewContactIntent(
+                null /* name */,
+                phoneNumber /* phoneNumber */,
+                NO_PHONE_TYPE);
+    }
+
+    public static Intent getNewContactIntent(
+            CharSequence name, CharSequence phoneNumber, int phoneNumberType) {
+        Intent intent = getNewContactIntent();
+        populateContactIntent(intent, name, phoneNumber, phoneNumberType);
+        return intent;
+    }
+
+    public static Intent getAddToExistingContactIntent() {
+        Intent intent = new Intent(Intent.ACTION_INSERT_OR_EDIT);
+        intent.setType(ContactsContract.Contacts.CONTENT_ITEM_TYPE);
+        return intent;
+    }
+
+    public static Intent getAddToExistingContactIntent(CharSequence phoneNumber) {
+        return getAddToExistingContactIntent(
+                null /* name */,
+                phoneNumber /* phoneNumber */,
+                NO_PHONE_TYPE);
+    }
+
+    public static Intent getAddToExistingContactIntent(
+            CharSequence name, CharSequence phoneNumber, int phoneNumberType) {
+        Intent intent = getAddToExistingContactIntent();
+        populateContactIntent(intent, name, phoneNumber, phoneNumberType);
+        return intent;
+    }
+
+    private static void populateContactIntent(
+            Intent intent, CharSequence name, CharSequence phoneNumber, int phoneNumberType) {
+        if (phoneNumber != null) {
+            intent.putExtra(ContactsContract.Intents.Insert.PHONE, phoneNumber);
+        }
+        if (name != null) {
+            intent.putExtra(ContactsContract.Intents.Insert.NAME, name);
+        }
+        if (phoneNumberType != NO_PHONE_TYPE) {
+            intent.putExtra(ContactsContract.Intents.Insert.PHONE_TYPE, phoneNumberType);
+        }
+    }
+}
Index: vendor/sprd/platform/packages/apps/SprdContacts/src/com/android/contacts/util/DialerUtils.java
===================================================================
--- vendor/sprd/platform/packages/apps/SprdContacts/src/com/android/contacts/util/DialerUtils.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/SprdContacts/src/com/android/contacts/util/DialerUtils.java	(revision 166645)
@@ -0,0 +1,49 @@
+/*
+ * Copyright (C) 2014 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.android.contacts.util;
+
+import android.content.Context;
+import android.content.Intent;
+import android.widget.Toast;
+import com.android.contacts.common.CallUtil;
+import android.telecom.VideoProfile;
+import android.telecom.TelecomManager;
+
+/**
+ * General purpose utility methods for the Dialer.
+ */
+public class DialerUtils {
+
+    /**
+     * Attempts to start an activity and displays a toast with the default error message if the
+     * activity is not found, instead of throwing an exception.
+     *
+     * @param context to start the activity with.
+     * @param intent to start the activity with.
+     */
+    public static void startActivityWithErrorToast(Context context, Intent intent) {
+        /* SPRD: Add feature of low battery for Reliance @{ */
+        if (intent.getExtras() != null && VideoProfile.isBidirectional(intent.getExtras().getInt(
+                TelecomManager.EXTRA_START_CALL_WITH_VIDEO_STATE))
+                && CallUtil.isBatteryLow()) {
+            CallUtil.showLowBatteryDialDialog(context, intent ,true);
+        } else {
+            //startActivityWithErrorToast(context, intent,
+            //        R.string.activity_not_available);
+        }
+        /* @} */
+    }
+}
Index: vendor/sprd/platform/packages/apps/SprdContacts/src/com/android/contacts/quickcontact/QuickContactActivity.java
===================================================================
--- vendor/sprd/platform/packages/apps/SprdContacts/src/com/android/contacts/quickcontact/QuickContactActivity.java	(revision 166644)
+++ vendor/sprd/platform/packages/apps/SprdContacts/src/com/android/contacts/quickcontact/QuickContactActivity.java	(revision 166645)
@@ -194,6 +194,8 @@
 import java.util.Set;
 import java.util.TreeSet;
 import java.util.concurrent.ConcurrentHashMap;
+import android.telecom.PhoneAccountHandle;
+import android.telecom.TelecomManager;
 
 
 import android.Manifest.permission;
@@ -248,6 +250,9 @@
 import android.os.Handler;
 import android.os.HandlerThread;
 import android.telecom.PhoneAccountHandle;
+import com.android.contacts.util.IntentUtil.CallIntentBuilder;
+import com.android.contacts.common.CallUtil;
+import com.android.contacts.util.DialerUtils;
 
 /*
  * @}
@@ -392,7 +397,7 @@
     private int mColorFilterColor;
 
     private final ImageViewDrawableSetter mPhotoSetter = new ImageViewDrawableSetter();
-
+    private static String mCallNumber;
     /**
      * SPRD:
      * Bug 421397: add RingTone „ÄÅsendToVoicemail menu. Bug434958, Bug425322
@@ -499,6 +504,7 @@
             }
 
             // Pass the touch point through the intent for use in the InCallUI
+            /*
             if (Intent.ACTION_CALL.equals(intent.getAction())) {
                 if (TouchPointManager.getInstance().hasValidPoint()) {
                     Bundle extras = new Bundle();
@@ -506,8 +512,22 @@
                             TouchPointManager.getInstance().getPoint());
                     intent.putExtra(TelecomManager.EXTRA_OUTGOING_CALL_EXTRAS, extras);
                 }
+            }*/
+
+            //Added by zhangleyi for 20170323 begin
+            if (Intent.ACTION_CALL.equals(intent.getAction())) {
+                mContext.startActivity(intent);
+                return;
             }
 
+            if ("com.techainsh.action.video_call".equals(intent.getAction())) {
+                Intent it = new CallIntentBuilder(mCallNumber).setIsVideoCall(true).build();
+                if (mContext != null) {
+                    DialerUtils.startActivityWithErrorToast(mContext, it);
+                }
+                return;
+            }
+            //Added by zhangleyi for 20170323 end
             intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
 
             mHasIntentLaunched = true;
@@ -2247,19 +2267,46 @@
                         .getTelephoneTtsSpannable(alternateContentDescription.toString(), header);
 
                 //Added by zhangleyi for 20170309 begin
+                boolean oneSimState = false;
+                boolean twoSimState = false;
+                TelephonyManager tm = (TelephonyManager)context.getSystemService(Context.TELEPHONY_SERVICE);
+
+                for (int i = 0; i < 2; i++) {
+                    if (TelephonyManager.SIM_STATE_READY == tm.getSimState(i)) {
+                        if (0 == i) {
+                            oneSimState = true;
+                        } else {
+                            twoSimState = true;
+                        }
+                    } else {
+                        if (0 == i) {
+                            oneSimState = false;
+                        } else {
+                            twoSimState = false;
+                        }
+                    }
+                }
+
                 TelecomManager telecomManager = (TelecomManager) context.getSystemService(Context.TELECOM_SERVICE);
                 if (telecomManager != null) {
                     List<PhoneAccountHandle> phoneAccountHandleList = telecomManager.getCallCapablePhoneAccounts();
-                    if (2 == (phoneAccountHandleList.size())) {
+                    if (twoSimState) {
                         call2gIntent = new Intent();
                         call2gIntent.setAction(Intent.ACTION_CALL);
                         call2gIntent.setData(Uri.parse("tel:" + phone.getNumber()));
-                        call2gIntent.putExtra(TelecomManager.EXTRA_PHONE_ACCOUNT_HANDLE, phoneAccountHandleList.get(1));
+                        if (oneSimState) {
+                            call2gIntent.putExtra(TelecomManager.EXTRA_PHONE_ACCOUNT_HANDLE, phoneAccountHandleList.get(1));
+                        } else {
+                            call2gIntent.putExtra(TelecomManager.EXTRA_PHONE_ACCOUNT_HANDLE, phoneAccountHandleList.get(0));
+                        }
                     }
-                    call4gIntent = new Intent();
-                    call4gIntent.setAction(Intent.ACTION_CALL);
-                    call4gIntent.setData(Uri.parse("tel:" + phone.getNumber()));
-                    call4gIntent.putExtra(TelecomManager.EXTRA_PHONE_ACCOUNT_HANDLE, phoneAccountHandleList.get(0));
+
+                    if (oneSimState) {
+                        call4gIntent = new Intent();
+                        call4gIntent.setAction(Intent.ACTION_CALL);
+                        call4gIntent.setData(Uri.parse("tel:" + phone.getNumber()));
+                        call4gIntent.putExtra(TelecomManager.EXTRA_PHONE_ACCOUNT_HANDLE, phoneAccountHandleList.get(0));
+                    }
                 }
                 call2gIcon = res.getDrawable(R.drawable.ic_call_2g);
                 call4gIcon = res.getDrawable(R.drawable.ic_call_4g);
@@ -2267,6 +2314,11 @@
                 smsIntent = new Intent(Intent.ACTION_SENDTO,
                         Uri.fromParts(ContactsUtils.SCHEME_SMSTO, phone.getNumber(), null));
                 videoCallIcon = res.getDrawable(R.drawable.ic_video_call);
+                if (CallUtil.isVideoEnabled(context)) {
+                    mCallNumber = phone.getNumber();
+                    videoCallIntent = new Intent("com.techainsh.action.video_call");
+                }
+
                 //Added by zhangleyi for 20170309 end
 
                 int videoCapability = CallUtil.getVideoCallingAvailability(context);
@@ -2790,7 +2842,7 @@
         final int NUMBER_OF_PALETTE_COLORS = 24;
         /**
          * SPRD Bug601021 OutofMemory when click contact
-         * 
+         *
          * @{
          */
         try {

Property changes on: vendor/sprd/platform/packages/apps/SprdContacts/src/com/android/contacts/quickcontact/QuickContactActivity.java
___________________________________________________________________
Modified: svn:mergeinfo
   Merged /A08A/Branch/MOCORDROID7.0_Trunk_K310_17A_W17.03.2_P1_UseA07/vendor/sprd/platform/packages/apps/SprdContacts/src/com/android/contacts/quickcontact/QuickContactActivity.java:r162957
   Merged /A08A/Custom_version/MOCORDROID7.0_Trunk_K310_17A_RLS1_W17.15.1/vendor/sprd/platform/packages/apps/SprdContacts/src/com/android/contacts/quickcontact/QuickContactActivity.java:r165542
   Merged /A08A/Branch/MOCORDROID7.0_Trunk_K310_17A_RLS1_W17.12.4_UseA07/vendor/sprd/platform/packages/apps/SprdContacts/src/com/android/contacts/quickcontact/QuickContactActivity.java:r163726
Index: vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_sms.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_sms.png
===================================================================
--- vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_sms.png	(revision 166644)
+++ vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_sms.png	(revision 166645)

Property changes on: vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_sms.png
___________________________________________________________________
Modified: svn:mergeinfo
   Merged /A08A/Custom_version/MOCORDROID7.0_Trunk_K310_17A_RLS1_W17.15.1/vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_sms.png:r165542
Index: vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_call_4g.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_call_4g.png
===================================================================
--- vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_call_4g.png	(revision 166644)
+++ vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_call_4g.png	(revision 166645)

Property changes on: vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_call_4g.png
___________________________________________________________________
Modified: svn:mergeinfo
   Merged /A08A/Custom_version/MOCORDROID7.0_Trunk_K310_17A_RLS1_W17.15.1/vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_call_4g.png:r165542
Index: vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_video_call.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_video_call.png
===================================================================
--- vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_video_call.png	(revision 166644)
+++ vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_video_call.png	(revision 166645)

Property changes on: vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_video_call.png
___________________________________________________________________
Modified: svn:mergeinfo
   Merged /A08A/Custom_version/MOCORDROID7.0_Trunk_K310_17A_RLS1_W17.15.1/vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_video_call.png:r165542
Index: vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_call_2g.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_call_2g.png
===================================================================
--- vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_call_2g.png	(revision 166644)
+++ vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_call_2g.png	(revision 166645)

Property changes on: vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_call_2g.png
___________________________________________________________________
Modified: svn:mergeinfo
   Merged /A08A/Custom_version/MOCORDROID7.0_Trunk_K310_17A_RLS1_W17.15.1/vendor/sprd/platform/packages/apps/SprdContacts/res/drawable-hdpi/ic_call_2g.png:r165542
Index: packages/apps/Dialer/src/com/android/dialer/DialtactsActivity.java
===================================================================
--- packages/apps/Dialer/src/com/android/dialer/DialtactsActivity.java	(revision 166644)
+++ packages/apps/Dialer/src/com/android/dialer/DialtactsActivity.java	(revision 166645)
@@ -863,7 +863,7 @@
         mActionBarController.onDialpadUp();
 
         mIsDialpadShown = true;
-        mSmartDialSearchFragment.mShowDialpad = mIsDialpadShown;
+        SmartDialSearchFragment.mShowDialpad = mIsDialpadShown;
 
         mListsFragment.setUserVisibleHint(false);
 
@@ -931,7 +931,7 @@
         }
         mIsDialpadShown = false;
 
-        mSmartDialSearchFragment.mShowDialpad = mIsDialpadShown;
+        SmartDialSearchFragment.mShowDialpad = mIsDialpadShown;
 
         mDialpadFragment.setAnimate(animate);
         mListsFragment.setUserVisibleHint(true);

Property changes on: packages/apps/Dialer/src/com/android/dialer/DialtactsActivity.java
___________________________________________________________________
Modified: svn:mergeinfo
   Merged /A08A/Branch/MOCORDROID7.0_Trunk_K310_17A_W17.03.2_P1_UseA07/packages/apps/Dialer/src/com/android/dialer/DialtactsActivity.java:r162957
   Merged /A08A/Custom_version/MOCORDROID7.0_Trunk_K310_17A_RLS1_W17.15.1/packages/apps/Dialer/src/com/android/dialer/DialtactsActivity.java:r165542
   Merged /A08A/Branch/MOCORDROID7.0_Trunk_K310_17A_RLS1_W17.12.4_UseA07/packages/apps/Dialer/src/com/android/dialer/DialtactsActivity.java:r163726
Index: packages/apps/Dialer/src/com/android/dialer/list/SearchFragment.java
===================================================================
--- packages/apps/Dialer/src/com/android/dialer/list/SearchFragment.java	(revision 166644)
+++ packages/apps/Dialer/src/com/android/dialer/list/SearchFragment.java	(revision 166645)
@@ -377,7 +377,7 @@
                             });
                         }
 
-                        if (!oneSimState || twoSimState) {
+                        if (oneSimState || !twoSimState) {
                             view.getLteButtonView().setOnClickListener(new View.OnClickListener() {
                                 @Override
                                 public void onClick(View v) {

Property changes on: packages/apps/Dialer/src/com/android/dialer/list/SearchFragment.java
___________________________________________________________________
Modified: svn:mergeinfo
   Merged /A08A/Custom_version/MOCORDROID7.0_Trunk_K310_17A_RLS1_W17.15.1/packages/apps/Dialer/src/com/android/dialer/list/SearchFragment.java:r165542
