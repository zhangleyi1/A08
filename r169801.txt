Index: vendor/sprd/plugins/frameworks/base/packages/SystemUI/addons/SystemUITelephonyAddon/src/plugin/sprd/systemuifeatures/qstile/VoWifiTile.java
===================================================================
--- vendor/sprd/plugins/frameworks/base/packages/SystemUI/addons/SystemUITelephonyAddon/src/plugin/sprd/systemuifeatures/qstile/VoWifiTile.java	(revision 169800)
+++ vendor/sprd/plugins/frameworks/base/packages/SystemUI/addons/SystemUITelephonyAddon/src/plugin/sprd/systemuifeatures/qstile/VoWifiTile.java	(revision 169801)
@@ -52,6 +52,8 @@
 import com.android.systemui.qs.QSTile.ResourceIcon;
 import android.provider.Settings;
 
+import android.net.NetworkInfo;
+
 /** Quick settings tile: Vowifi **/
 public class VoWifiTile extends QSTile<QSTile.BooleanState> {
 
@@ -62,6 +64,7 @@
     private boolean mListening;
     private boolean mVoWifiEnabled;
     private boolean mVoWifiAvailable;
+	private boolean mWifiConnected = false;
     private QSTileView mQSTileView;
     public static final int QS_VOWIFI_SERVICE = 414;
     private WifiManager mWifiManager;
@@ -149,7 +152,7 @@
         if (DBG) Log.d(TAG, "handleUpdateState: mVoWifiEnabled = "
                 + mVoWifiEnabled + " mVoWifiAvailable = " + mVoWifiAvailable);
 
-        if (mVoWifiEnabled && mVoWifiAvailable) {
+        if (mWifiConnected) {
             state.icon = ResourceIcon.get(R.drawable.ic_qs_vowifi_on_sprd);
             if (mWifiManager != null && mWifiManager.isWifiEnabled()) {
                 state.label = mContext.getString(R.string.qs_vowifi_on);
@@ -181,7 +184,7 @@
         mRadioSetting.setListening(listening);
         if (listening) {
             IntentFilter intentFilter = new IntentFilter();
-            intentFilter.addAction(WifiManager.WIFI_STATE_CHANGED_ACTION);
+            intentFilter.addAction(WifiManager.NETWORK_STATE_CHANGED_ACTION);
             mContext.registerReceiver(mBroadcastReceiver, intentFilter);
         } else {
             mContext.unregisterReceiver(mBroadcastReceiver);
@@ -213,7 +216,11 @@
     private final BroadcastReceiver mBroadcastReceiver = new BroadcastReceiver() {
         public void onReceive(Context context, Intent intent) {
             String action = intent.getAction();
-            if (action.equals(WifiManager.WIFI_STATE_CHANGED_ACTION)) {
+            if (action.equals(WifiManager.NETWORK_STATE_CHANGED_ACTION)) {
+                NetworkInfo networkInfo = (NetworkInfo)
+                        intent.getParcelableExtra(WifiManager.EXTRA_NETWORK_INFO);
+                mWifiConnected = networkInfo != null && networkInfo.isConnected();
+                if (DBG) Log.d(TAG, "onReceive: NETWORK_STATE_CHANGED_ACTION = " + mWifiConnected);
                 refreshState();
             }
         }
