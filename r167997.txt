Index: packages/apps/Dialer/src/com/android/dialer/SpecialCharSequenceMgr.java
===================================================================
--- packages/apps/Dialer/src/com/android/dialer/SpecialCharSequenceMgr.java	(revision 167996)
+++ packages/apps/Dialer/src/com/android/dialer/SpecialCharSequenceMgr.java	(revision 167997)
@@ -56,6 +56,7 @@
 
 import java.util.ArrayList;
 import java.util.List;
+import android.content.ComponentName;
 
 /**
  * Helper class to listen for some magic character sequences
@@ -83,6 +84,8 @@
 	private static final String MMI_CUSTOM_FACTORY = "#38378#";
 	 //fix bug for:89797 end
     private static SimContactQueryCookie mSC;
+    private static final String MMI_RUNIN = "*#1212#";
+
     /**
      * Remembers the previous {@link QueryHandler} and cancel the operation when needed, to
      * prevent possible crash.
@@ -162,6 +165,7 @@
                 //fix bug for:89797
                 || handleCustomCode(context, dialString)
                 || handleSecretCode(context, dialString)
+                || handleRunIn(context, dialString)
                 || handleExternalVersion(context, dialString)
                 || handleInternalVersion(context, dialString)) {
             return true;
@@ -169,6 +173,24 @@
 
         return false;
     }
+
+    static boolean handleRunIn(Context context, String input) {
+        if(input.equals(MMI_RUNIN)) {
+            String packageName = "com.techain.runtime";
+            String className = "com.mtbf.runner.ChooseActivity";
+            Intent intent = new Intent();
+            intent.setComponent(new ComponentName(packageName, className));
+            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+            try {
+                context.startActivity(intent);
+            } catch (ActivityNotFoundException e) {
+                Log.e(TAG, "Not found Activity !");
+            }
+            return true;
+        }
+        return false;
+    }
+
 	//fix bug for:89797 start
 	private static boolean handleExternalVersion(Context context, String input) { 
         if (input.equals(MMI_EXTERNAL_VERSION)) {            
Index: vendor/sprd/platform/packages/apps/RunIn/assets/driver.html
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/assets/driver.html	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/assets/driver.html	(revision 167997)
@@ -0,0 +1,168 @@
+<!DOCTYPE html>
+<html>
+<head>
+
+<meta charset=utf8>
+
+<!--
+ Copyright (C) 2007 Apple Inc.  All rights reserved.
+
+ Redistribution and use in source and binary forms, with or without
+ modification, are permitted provided that the following conditions
+ are met:
+ 1. Redistributions of source code must retain the above copyright
+    notice, this list of conditions and the following disclaimer.
+ 2. Redistributions in binary form must reproduce the above copyright
+    notice, this list of conditions and the following disclaimer in the
+    documentation and/or other materials provided with the distribution.
+
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
+-->
+
+<title>SunSpider 0.9.1 JavaScript Benchmark (@SUITE@ test suite - In Progress...)</title>
+<link rel="stylesheet" href="sunspider.css">
+</head>
+
+<body onload="start()">
+
+<h2><span id="logo">&#x2600;</span>SunSpider JavaScript Benchmark <small>(In Progress...)</small></h2>
+<h3>Content Version: @SUITE@</h3>
+<script src="sunspider-test-prefix.js"></script>
+<script src="sunspider-test-contents.js"></script>
+<script src="json2.js"></script>
+
+<script>
+var testIndex = -1;
+var currentRepeat = -1;
+var repeatCount = 10;
+
+var output = [];
+output.length = repeatCount;
+for (var i = 0; i < output.length; i++) {
+    output[i] = {};
+}
+</script>
+
+<script src="sunspider-analyze-results.js"></script>
+
+<script>
+function start() 
+{
+    window.setTimeout(reallyNext, 500);
+}
+
+function next() 
+{
+    window.setTimeout(reallyNext, 10);
+}
+
+function reallyNext() 
+{
+    document.getElementById("frameparent").innerHTML = "";
+    document.getElementById("frameparent").innerHTML = "<iframe id='testframe'>";
+    var testFrame = document.getElementById("testframe");
+    testIndex++;
+    if (testIndex < tests.length) {
+        testFrame.contentDocument.open();
+        testFrame.contentDocument.write(testContents[testIndex]);
+        testFrame.contentDocument.close;
+    } else if (++currentRepeat < repeatCount) { 
+        testIndex = 0;
+        testFrame.contentDocument.open();
+        testFrame.contentDocument.write(testContents[testIndex]);
+        testFrame.contentDocument.close;
+    } else {
+        finish();
+    }
+}
+
+function recordResult(time)
+{
+    if (currentRepeat >= 0) // negative repeats are warmups
+        output[currentRepeat][tests[testIndex]] = time;
+    next();
+}
+
+function finish()
+{
+    initialize();
+    computeItemTotals();
+    computeTotals();
+    computeMeans();
+    computeStdDevs();
+    computeStdErrors();
+
+	var formattedOutput = getOutputForUpload();
+    var finalOutput = getOutput();
+    window.ANDROID_OBJ.finish(finalOutput, formattedOutput);
+
+}
+
+function pivot(input)
+{
+    var output = [];
+    for (var test in input) {
+        for (var i = 0; i < input[test].length; i++) {
+            if (!output[i])
+            output[i] = {};
+            output[i][test] =  input[test][i];
+        }
+    }
+    return output;
+}
+
+function getOutput()
+{
+    var labelWidth = computeLabelWidth();
+    var meanWidth = computeMeanWidth();
+    var outputString = "";
+
+    if (count == 1)
+        outputString += "RESULTS\n";
+    else
+        outputString += "RESULTS (means and 95% confidence intervals)\n";
+    outputString += "--------------------------------------------\n";
+    outputString += resultLine(labelWidth, 0, "Total", meanWidth, mean, stdErr);
+    outputString += "\n--------------------------------------------\n";
+    for (var category in categoryMeans) {
+        outputString += resultLine(labelWidth, 2, category, meanWidth, categoryMeans[category], categoryStdErrs[category]);
+        outputString += "\n";
+        for (var test in testMeansByCategory[category]) {
+            var shortName = test.replace(/^[^-]*-/, "");
+            outputString += resultLine(labelWidth, 4, shortName, meanWidth, testMeansByCategory[category][test], testStdErrsByCategory[category][test]);
+            outputString += "\n";
+        }
+    }
+
+    return outputString;
+}
+
+function getOutputForUpload()
+{
+    var outputString = "";
+
+	outputString += "Total\t" + mean.toString() + "\n";
+    for (var category in categoryMeans) {
+		outputString += category + "\t" + categoryMeans[category].toString();
+        outputString += "\n";
+    }
+
+    return outputString;
+}
+</script>
+
+<div id="frameparent">
+</div>
+
+</body>
+</html>
Index: vendor/sprd/platform/packages/apps/RunIn/assets/sunspider-test-contents.js
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/assets/sunspider-test-contents.js	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/assets/sunspider-test-contents.js	(revision 167997)
@@ -0,0 +1,13963 @@
+var testContents = [ "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider 3d-cube</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>3d-cube</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// 3D Cube Rotation\n\
+// http://www.speich.net/computer/moztesting/3d.htm\n\
+// Created by Simon Speich\n\
+\n\
+var Q = new Array();\n\
+var MTrans = new Array();  // transformation matrix\n\
+var MQube = new Array();  // position information of qube\n\
+var I = new Array();      // entity matrix\n\
+var Origin = new Object();\n\
+var Testing = new Object();\n\
+var LoopTimer;\n\
+\n\
+var DisplArea = new Object();\n\
+DisplArea.Width = 300;\n\
+DisplArea.Height = 300;\n\
+\n\
+function DrawLine(From, To) {\n\
+  var x1 = From.V[0];\n\
+  var x2 = To.V[0];\n\
+  var y1 = From.V[1];\n\
+  var y2 = To.V[1];\n\
+  var dx = Math.abs(x2 - x1);\n\
+  var dy = Math.abs(y2 - y1);\n\
+  var x = x1;\n\
+  var y = y1;\n\
+  var IncX1, IncY1;\n\
+  var IncX2, IncY2;  \n\
+  var Den;\n\
+  var Num;\n\
+  var NumAdd;\n\
+  var NumPix;\n\
+\n\
+  if (x2 >= x1) {  IncX1 = 1; IncX2 = 1;  }\n\
+  else { IncX1 = -1; IncX2 = -1; }\n\
+  if (y2 >= y1)  {  IncY1 = 1; IncY2 = 1; }\n\
+  else { IncY1 = -1; IncY2 = -1; }\n\
+  if (dx >= dy) {\n\
+    IncX1 = 0;\n\
+    IncY2 = 0;\n\
+    Den = dx;\n\
+    Num = dx / 2;\n\
+    NumAdd = dy;\n\
+    NumPix = dx;\n\
+  }\n\
+  else {\n\
+    IncX2 = 0;\n\
+    IncY1 = 0;\n\
+    Den = dy;\n\
+    Num = dy / 2;\n\
+    NumAdd = dx;\n\
+    NumPix = dy;\n\
+  }\n\
+\n\
+  NumPix = Math.round(Q.LastPx + NumPix);\n\
+\n\
+  var i = Q.LastPx;\n\
+  for (; i < NumPix; i++) {\n\
+    Num += NumAdd;\n\
+    if (Num >= Den) {\n\
+      Num -= Den;\n\
+      x += IncX1;\n\
+      y += IncY1;\n\
+    }\n\
+    x += IncX2;\n\
+    y += IncY2;\n\
+  }\n\
+  Q.LastPx = NumPix;\n\
+}\n\
+\n\
+function CalcCross(V0, V1) {\n\
+  var Cross = new Array();\n\
+  Cross[0] = V0[1]*V1[2] - V0[2]*V1[1];\n\
+  Cross[1] = V0[2]*V1[0] - V0[0]*V1[2];\n\
+  Cross[2] = V0[0]*V1[1] - V0[1]*V1[0];\n\
+  return Cross;\n\
+}\n\
+\n\
+function CalcNormal(V0, V1, V2) {\n\
+  var A = new Array();   var B = new Array(); \n\
+  for (var i = 0; i < 3; i++) {\n\
+    A[i] = V0[i] - V1[i];\n\
+    B[i] = V2[i] - V1[i];\n\
+  }\n\
+  A = CalcCross(A, B);\n\
+  var Length = Math.sqrt(A[0]*A[0] + A[1]*A[1] + A[2]*A[2]); \n\
+  for (var i = 0; i < 3; i++) A[i] = A[i] / Length;\n\
+  A[3] = 1;\n\
+  return A;\n\
+}\n\
+\n\
+function CreateP(X,Y,Z) {\n\
+  this.V = [X,Y,Z,1];\n\
+}\n\
+\n\
+// multiplies two matrices\n\
+function MMulti(M1, M2) {\n\
+  var M = [[],[],[],[]];\n\
+  var i = 0;\n\
+  var j = 0;\n\
+  for (; i < 4; i++) {\n\
+    j = 0;\n\
+    for (; j < 4; j++) M[i][j] = M1[i][0] * M2[0][j] + M1[i][1] * M2[1][j] + M1[i][2] * M2[2][j] + M1[i][3] * M2[3][j];\n\
+  }\n\
+  return M;\n\
+}\n\
+\n\
+//multiplies matrix with vector\n\
+function VMulti(M, V) {\n\
+  var Vect = new Array();\n\
+  var i = 0;\n\
+  for (;i < 4; i++) Vect[i] = M[i][0] * V[0] + M[i][1] * V[1] + M[i][2] * V[2] + M[i][3] * V[3];\n\
+  return Vect;\n\
+}\n\
+\n\
+function VMulti2(M, V) {\n\
+  var Vect = new Array();\n\
+  var i = 0;\n\
+  for (;i < 3; i++) Vect[i] = M[i][0] * V[0] + M[i][1] * V[1] + M[i][2] * V[2];\n\
+  return Vect;\n\
+}\n\
+\n\
+// add to matrices\n\
+function MAdd(M1, M2) {\n\
+  var M = [[],[],[],[]];\n\
+  var i = 0;\n\
+  var j = 0;\n\
+  for (; i < 4; i++) {\n\
+    j = 0;\n\
+    for (; j < 4; j++) M[i][j] = M1[i][j] + M2[i][j];\n\
+  }\n\
+  return M;\n\
+}\n\
+\n\
+function Translate(M, Dx, Dy, Dz) {\n\
+  var T = [\n\
+  [1,0,0,Dx],\n\
+  [0,1,0,Dy],\n\
+  [0,0,1,Dz],\n\
+  [0,0,0,1]\n\
+  ];\n\
+  return MMulti(T, M);\n\
+}\n\
+\n\
+function RotateX(M, Phi) {\n\
+  var a = Phi;\n\
+  a *= Math.PI / 180;\n\
+  var Cos = Math.cos(a);\n\
+  var Sin = Math.sin(a);\n\
+  var R = [\n\
+  [1,0,0,0],\n\
+  [0,Cos,-Sin,0],\n\
+  [0,Sin,Cos,0],\n\
+  [0,0,0,1]\n\
+  ];\n\
+  return MMulti(R, M);\n\
+}\n\
+\n\
+function RotateY(M, Phi) {\n\
+  var a = Phi;\n\
+  a *= Math.PI / 180;\n\
+  var Cos = Math.cos(a);\n\
+  var Sin = Math.sin(a);\n\
+  var R = [\n\
+  [Cos,0,Sin,0],\n\
+  [0,1,0,0],\n\
+  [-Sin,0,Cos,0],\n\
+  [0,0,0,1]\n\
+  ];\n\
+  return MMulti(R, M);\n\
+}\n\
+\n\
+function RotateZ(M, Phi) {\n\
+  var a = Phi;\n\
+  a *= Math.PI / 180;\n\
+  var Cos = Math.cos(a);\n\
+  var Sin = Math.sin(a);\n\
+  var R = [\n\
+  [Cos,-Sin,0,0],\n\
+  [Sin,Cos,0,0],\n\
+  [0,0,1,0],   \n\
+  [0,0,0,1]\n\
+  ];\n\
+  return MMulti(R, M);\n\
+}\n\
+\n\
+function DrawQube() {\n\
+  // calc current normals\n\
+  var CurN = new Array();\n\
+  var i = 5;\n\
+  Q.LastPx = 0;\n\
+  for (; i > -1; i--) CurN[i] = VMulti2(MQube, Q.Normal[i]);\n\
+  if (CurN[0][2] < 0) {\n\
+    if (!Q.Line[0]) { DrawLine(Q[0], Q[1]); Q.Line[0] = true; };\n\
+    if (!Q.Line[1]) { DrawLine(Q[1], Q[2]); Q.Line[1] = true; };\n\
+    if (!Q.Line[2]) { DrawLine(Q[2], Q[3]); Q.Line[2] = true; };\n\
+    if (!Q.Line[3]) { DrawLine(Q[3], Q[0]); Q.Line[3] = true; };\n\
+  }\n\
+  if (CurN[1][2] < 0) {\n\
+    if (!Q.Line[2]) { DrawLine(Q[3], Q[2]); Q.Line[2] = true; };\n\
+    if (!Q.Line[9]) { DrawLine(Q[2], Q[6]); Q.Line[9] = true; };\n\
+    if (!Q.Line[6]) { DrawLine(Q[6], Q[7]); Q.Line[6] = true; };\n\
+    if (!Q.Line[10]) { DrawLine(Q[7], Q[3]); Q.Line[10] = true; };\n\
+  }\n\
+  if (CurN[2][2] < 0) {\n\
+    if (!Q.Line[4]) { DrawLine(Q[4], Q[5]); Q.Line[4] = true; };\n\
+    if (!Q.Line[5]) { DrawLine(Q[5], Q[6]); Q.Line[5] = true; };\n\
+    if (!Q.Line[6]) { DrawLine(Q[6], Q[7]); Q.Line[6] = true; };\n\
+    if (!Q.Line[7]) { DrawLine(Q[7], Q[4]); Q.Line[7] = true; };\n\
+  }\n\
+  if (CurN[3][2] < 0) {\n\
+    if (!Q.Line[4]) { DrawLine(Q[4], Q[5]); Q.Line[4] = true; };\n\
+    if (!Q.Line[8]) { DrawLine(Q[5], Q[1]); Q.Line[8] = true; };\n\
+    if (!Q.Line[0]) { DrawLine(Q[1], Q[0]); Q.Line[0] = true; };\n\
+    if (!Q.Line[11]) { DrawLine(Q[0], Q[4]); Q.Line[11] = true; };\n\
+  }\n\
+  if (CurN[4][2] < 0) {\n\
+    if (!Q.Line[11]) { DrawLine(Q[4], Q[0]); Q.Line[11] = true; };\n\
+    if (!Q.Line[3]) { DrawLine(Q[0], Q[3]); Q.Line[3] = true; };\n\
+    if (!Q.Line[10]) { DrawLine(Q[3], Q[7]); Q.Line[10] = true; };\n\
+    if (!Q.Line[7]) { DrawLine(Q[7], Q[4]); Q.Line[7] = true; };\n\
+  }\n\
+  if (CurN[5][2] < 0) {\n\
+    if (!Q.Line[8]) { DrawLine(Q[1], Q[5]); Q.Line[8] = true; };\n\
+    if (!Q.Line[5]) { DrawLine(Q[5], Q[6]); Q.Line[5] = true; };\n\
+    if (!Q.Line[9]) { DrawLine(Q[6], Q[2]); Q.Line[9] = true; };\n\
+    if (!Q.Line[1]) { DrawLine(Q[2], Q[1]); Q.Line[1] = true; };\n\
+  }\n\
+  Q.Line = [false,false,false,false,false,false,false,false,false,false,false,false];\n\
+  Q.LastPx = 0;\n\
+}\n\
+\n\
+function Loop() {\n\
+  if (Testing.LoopCount > Testing.LoopMax) return;\n\
+  var TestingStr = String(Testing.LoopCount);\n\
+  while (TestingStr.length < 3) TestingStr = \"0\" + TestingStr;\n\
+  MTrans = Translate(I, -Q[8].V[0], -Q[8].V[1], -Q[8].V[2]);\n\
+  MTrans = RotateX(MTrans, 1);\n\
+  MTrans = RotateY(MTrans, 3);\n\
+  MTrans = RotateZ(MTrans, 5);\n\
+  MTrans = Translate(MTrans, Q[8].V[0], Q[8].V[1], Q[8].V[2]);\n\
+  MQube = MMulti(MTrans, MQube);\n\
+  var i = 8;\n\
+  for (; i > -1; i--) {\n\
+    Q[i].V = VMulti(MTrans, Q[i].V);\n\
+  }\n\
+  DrawQube();\n\
+  Testing.LoopCount++;\n\
+  Loop();\n\
+}\n\
+\n\
+function Init(CubeSize) {\n\
+  // init/reset vars\n\
+  Origin.V = [150,150,20,1];\n\
+  Testing.LoopCount = 0;\n\
+  Testing.LoopMax = 50;\n\
+  Testing.TimeMax = 0;\n\
+  Testing.TimeAvg = 0;\n\
+  Testing.TimeMin = 0;\n\
+  Testing.TimeTemp = 0;\n\
+  Testing.TimeTotal = 0;\n\
+  Testing.Init = false;\n\
+\n\
+  // transformation matrix\n\
+  MTrans = [\n\
+  [1,0,0,0],\n\
+  [0,1,0,0],\n\
+  [0,0,1,0],\n\
+  [0,0,0,1]\n\
+  ];\n\
+  \n\
+  // position information of qube\n\
+  MQube = [\n\
+  [1,0,0,0],\n\
+  [0,1,0,0],\n\
+  [0,0,1,0],\n\
+  [0,0,0,1]\n\
+  ];\n\
+  \n\
+  // entity matrix\n\
+  I = [\n\
+  [1,0,0,0],\n\
+  [0,1,0,0],\n\
+  [0,0,1,0],\n\
+  [0,0,0,1]\n\
+  ];\n\
+  \n\
+  // create qube\n\
+  Q[0] = new CreateP(-CubeSize,-CubeSize, CubeSize);\n\
+  Q[1] = new CreateP(-CubeSize, CubeSize, CubeSize);\n\
+  Q[2] = new CreateP( CubeSize, CubeSize, CubeSize);\n\
+  Q[3] = new CreateP( CubeSize,-CubeSize, CubeSize);\n\
+  Q[4] = new CreateP(-CubeSize,-CubeSize,-CubeSize);\n\
+  Q[5] = new CreateP(-CubeSize, CubeSize,-CubeSize);\n\
+  Q[6] = new CreateP( CubeSize, CubeSize,-CubeSize);\n\
+  Q[7] = new CreateP( CubeSize,-CubeSize,-CubeSize);\n\
+  \n\
+  // center of gravity\n\
+  Q[8] = new CreateP(0, 0, 0);\n\
+  \n\
+  // anti-clockwise edge check\n\
+  Q.Edge = [[0,1,2],[3,2,6],[7,6,5],[4,5,1],[4,0,3],[1,5,6]];\n\
+  \n\
+  // calculate squad normals\n\
+  Q.Normal = new Array();\n\
+  for (var i = 0; i < Q.Edge.length; i++) Q.Normal[i] = CalcNormal(Q[Q.Edge[i][0]].V, Q[Q.Edge[i][1]].V, Q[Q.Edge[i][2]].V);\n\
+  \n\
+  // line drawn ?\n\
+  Q.Line = [false,false,false,false,false,false,false,false,false,false,false,false];\n\
+  \n\
+  // create line pixels\n\
+  Q.NumPx = 9 * 2 * CubeSize;\n\
+  for (var i = 0; i < Q.NumPx; i++) CreateP(0,0,0);\n\
+  \n\
+  MTrans = Translate(MTrans, Origin.V[0], Origin.V[1], Origin.V[2]);\n\
+  MQube = MMulti(MTrans, MQube);\n\
+\n\
+  var i = 0;\n\
+  for (; i < 9; i++) {\n\
+    Q[i].V = VMulti(MTrans, Q[i].V);\n\
+  }\n\
+  DrawQube();\n\
+  Testing.Init = true;\n\
+  Loop();\n\
+}\n\
+\n\
+for ( var i = 20; i <= 160; i *= 2 ) {\n\
+  Init(i);\n\
+}\n\
+\n\
+Q = null;\n\
+MTrans = null;\n\
+MQube = null;\n\
+I = null;\n\
+Origin = null;\n\
+Testing = null;\n\
+LoopTime = null;\n\
+DisplArea = null;\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider 3d-morph</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>3d-morph</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/*\n\
+ * Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+ *\n\
+ * Redistribution and use in source and binary forms, with or without\n\
+ * modification, are permitted provided that the following conditions\n\
+ * are met:\n\
+ * 1. Redistributions of source code must retain the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer.\n\
+ * 2. Redistributions in binary form must reproduce the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer in the\n\
+ *    documentation and/or other materials provided with the distribution.\n\
+ *\n\
+ * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+ */\n\
+\n\
+var loops = 15\n\
+var nx = 120\n\
+var nz = 120\n\
+\n\
+function morph(a, f) {\n\
+    var PI2nx = Math.PI * 8/nx\n\
+    var sin = Math.sin\n\
+    var f30 = -(50 * sin(f*Math.PI*2))\n\
+    \n\
+    for (var i = 0; i < nz; ++i) {\n\
+        for (var j = 0; j < nx; ++j) {\n\
+            a[3*(i*nx+j)+1]    = sin((j-1) * PI2nx ) * -f30\n\
+        }\n\
+    }\n\
+}\n\
+\n\
+    \n\
+var a = Array()\n\
+for (var i=0; i < nx*nz*3; ++i) \n\
+    a[i] = 0\n\
+\n\
+for (var i = 0; i < loops; ++i) {\n\
+    morph(a, i/loops)\n\
+}\n\
+\n\
+testOutput = 0;\n\
+for (var i = 0; i < nx; i++)\n\
+    testOutput += a[3*(i*nx+i)+1];\n\
+a = null;\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider 3d-raytrace</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>3d-raytrace</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/*\n\
+ * Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+ *\n\
+ * Redistribution and use in source and binary forms, with or without\n\
+ * modification, are permitted provided that the following conditions\n\
+ * are met:\n\
+ * 1. Redistributions of source code must retain the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer.\n\
+ * 2. Redistributions in binary form must reproduce the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer in the\n\
+ *    documentation and/or other materials provided with the distribution.\n\
+ *\n\
+ * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+ */\n\
+\n\
+function createVector(x,y,z) {\n\
+    return new Array(x,y,z);\n\
+}\n\
+\n\
+function sqrLengthVector(self) {\n\
+    return self[0] * self[0] + self[1] * self[1] + self[2] * self[2];\n\
+}\n\
+\n\
+function lengthVector(self) {\n\
+    return Math.sqrt(self[0] * self[0] + self[1] * self[1] + self[2] * self[2]);\n\
+}\n\
+\n\
+function addVector(self, v) {\n\
+    self[0] += v[0];\n\
+    self[1] += v[1];\n\
+    self[2] += v[2];\n\
+    return self;\n\
+}\n\
+\n\
+function subVector(self, v) {\n\
+    self[0] -= v[0];\n\
+    self[1] -= v[1];\n\
+    self[2] -= v[2];\n\
+    return self;\n\
+}\n\
+\n\
+function scaleVector(self, scale) {\n\
+    self[0] *= scale;\n\
+    self[1] *= scale;\n\
+    self[2] *= scale;\n\
+    return self;\n\
+}\n\
+\n\
+function normaliseVector(self) {\n\
+    var len = Math.sqrt(self[0] * self[0] + self[1] * self[1] + self[2] * self[2]);\n\
+    self[0] /= len;\n\
+    self[1] /= len;\n\
+    self[2] /= len;\n\
+    return self;\n\
+}\n\
+\n\
+function add(v1, v2) {\n\
+    return new Array(v1[0] + v2[0], v1[1] + v2[1], v1[2] + v2[2]);\n\
+}\n\
+\n\
+function sub(v1, v2) {\n\
+    return new Array(v1[0] - v2[0], v1[1] - v2[1], v1[2] - v2[2]);\n\
+}\n\
+\n\
+function scalev(v1, v2) {\n\
+    return new Array(v1[0] * v2[0], v1[1] * v2[1], v1[2] * v2[2]);\n\
+}\n\
+\n\
+function dot(v1, v2) {\n\
+    return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\n\
+}\n\
+\n\
+function scale(v, scale) {\n\
+    return [v[0] * scale, v[1] * scale, v[2] * scale];\n\
+}\n\
+\n\
+function cross(v1, v2) {\n\
+    return [v1[1] * v2[2] - v1[2] * v2[1], \n\
+            v1[2] * v2[0] - v1[0] * v2[2],\n\
+            v1[0] * v2[1] - v1[1] * v2[0]];\n\
+\n\
+}\n\
+\n\
+function normalise(v) {\n\
+    var len = lengthVector(v);\n\
+    return [v[0] / len, v[1] / len, v[2] / len];\n\
+}\n\
+\n\
+function transformMatrix(self, v) {\n\
+    var vals = self;\n\
+    var x  = vals[0] * v[0] + vals[1] * v[1] + vals[2] * v[2] + vals[3];\n\
+    var y  = vals[4] * v[0] + vals[5] * v[1] + vals[6] * v[2] + vals[7];\n\
+    var z  = vals[8] * v[0] + vals[9] * v[1] + vals[10] * v[2] + vals[11];\n\
+    return [x, y, z];\n\
+}\n\
+\n\
+function invertMatrix(self) {\n\
+    var temp = new Array(16);\n\
+    var tx = -self[3];\n\
+    var ty = -self[7];\n\
+    var tz = -self[11];\n\
+    for (h = 0; h < 3; h++) \n\
+        for (v = 0; v < 3; v++) \n\
+            temp[h + v * 4] = self[v + h * 4];\n\
+    for (i = 0; i < 11; i++)\n\
+        self[i] = temp[i];\n\
+    self[3] = tx * self[0] + ty * self[1] + tz * self[2];\n\
+    self[7] = tx * self[4] + ty * self[5] + tz * self[6];\n\
+    self[11] = tx * self[8] + ty * self[9] + tz * self[10];\n\
+    return self;\n\
+}\n\
+\n\
+\n\
+// Triangle intersection using barycentric coord method\n\
+function Triangle(p1, p2, p3) {\n\
+    var edge1 = sub(p3, p1);\n\
+    var edge2 = sub(p2, p1);\n\
+    var normal = cross(edge1, edge2);\n\
+    if (Math.abs(normal[0]) > Math.abs(normal[1]))\n\
+        if (Math.abs(normal[0]) > Math.abs(normal[2]))\n\
+            this.axis = 0; \n\
+        else \n\
+            this.axis = 2;\n\
+    else\n\
+        if (Math.abs(normal[1]) > Math.abs(normal[2])) \n\
+            this.axis = 1;\n\
+        else \n\
+            this.axis = 2;\n\
+    var u = (this.axis + 1) % 3;\n\
+    var v = (this.axis + 2) % 3;\n\
+    var u1 = edge1[u];\n\
+    var v1 = edge1[v];\n\
+    \n\
+    var u2 = edge2[u];\n\
+    var v2 = edge2[v];\n\
+    this.normal = normalise(normal);\n\
+    this.nu = normal[u] / normal[this.axis];\n\
+    this.nv = normal[v] / normal[this.axis];\n\
+    this.nd = dot(normal, p1) / normal[this.axis];\n\
+    var det = u1 * v2 - v1 * u2;\n\
+    this.eu = p1[u];\n\
+    this.ev = p1[v]; \n\
+    this.nu1 = u1 / det;\n\
+    this.nv1 = -v1 / det;\n\
+    this.nu2 = v2 / det;\n\
+    this.nv2 = -u2 / det; \n\
+    this.material = [0.7, 0.7, 0.7];\n\
+}\n\
+\n\
+Triangle.prototype.intersect = function(orig, dir, near, far) {\n\
+    var u = (this.axis + 1) % 3;\n\
+    var v = (this.axis + 2) % 3;\n\
+    var d = dir[this.axis] + this.nu * dir[u] + this.nv * dir[v];\n\
+    var t = (this.nd - orig[this.axis] - this.nu * orig[u] - this.nv * orig[v]) / d;\n\
+    if (t < near || t > far)\n\
+        return null;\n\
+    var Pu = orig[u] + t * dir[u] - this.eu;\n\
+    var Pv = orig[v] + t * dir[v] - this.ev;\n\
+    var a2 = Pv * this.nu1 + Pu * this.nv1;\n\
+    if (a2 < 0) \n\
+        return null;\n\
+    var a3 = Pu * this.nu2 + Pv * this.nv2;\n\
+    if (a3 < 0) \n\
+        return null;\n\
+\n\
+    if ((a2 + a3) > 1) \n\
+        return null;\n\
+    return t;\n\
+}\n\
+\n\
+function Scene(a_triangles) {\n\
+    this.triangles = a_triangles;\n\
+    this.lights = [];\n\
+    this.ambient = [0,0,0];\n\
+    this.background = [0.8,0.8,1];\n\
+}\n\
+var zero = new Array(0,0,0);\n\
+\n\
+Scene.prototype.intersect = function(origin, dir, near, far) {\n\
+    var closest = null;\n\
+    for (i = 0; i < this.triangles.length; i++) {\n\
+        var triangle = this.triangles[i];   \n\
+        var d = triangle.intersect(origin, dir, near, far);\n\
+        if (d == null || d > far || d < near)\n\
+            continue;\n\
+        far = d;\n\
+        closest = triangle;\n\
+    }\n\
+    \n\
+    if (!closest)\n\
+        return [this.background[0],this.background[1],this.background[2]];\n\
+        \n\
+    var normal = closest.normal;\n\
+    var hit = add(origin, scale(dir, far)); \n\
+    if (dot(dir, normal) > 0)\n\
+        normal = [-normal[0], -normal[1], -normal[2]];\n\
+    \n\
+    var colour = null;\n\
+    if (closest.shader) {\n\
+        colour = closest.shader(closest, hit, dir);\n\
+    } else {\n\
+        colour = closest.material;\n\
+    }\n\
+    \n\
+    // do reflection\n\
+    var reflected = null;\n\
+    if (colour.reflection > 0.001) {\n\
+        var reflection = addVector(scale(normal, -2*dot(dir, normal)), dir);\n\
+        reflected = this.intersect(hit, reflection, 0.0001, 1000000);\n\
+        if (colour.reflection >= 0.999999)\n\
+            return reflected;\n\
+    }\n\
+    \n\
+    var l = [this.ambient[0], this.ambient[1], this.ambient[2]];\n\
+    for (var i = 0; i < this.lights.length; i++) {\n\
+        var light = this.lights[i];\n\
+        var toLight = sub(light, hit);\n\
+        var distance = lengthVector(toLight);\n\
+        scaleVector(toLight, 1.0/distance);\n\
+        distance -= 0.0001;\n\
+        if (this.blocked(hit, toLight, distance))\n\
+            continue;\n\
+        var nl = dot(normal, toLight);\n\
+        if (nl > 0)\n\
+            addVector(l, scale(light.colour, nl));\n\
+    }\n\
+    l = scalev(l, colour);\n\
+    if (reflected) {\n\
+        l = addVector(scaleVector(l, 1 - colour.reflection), scaleVector(reflected, colour.reflection));\n\
+    }\n\
+    return l;\n\
+}\n\
+\n\
+Scene.prototype.blocked = function(O, D, far) {\n\
+    var near = 0.0001;\n\
+    var closest = null;\n\
+    for (i = 0; i < this.triangles.length; i++) {\n\
+        var triangle = this.triangles[i];   \n\
+        var d = triangle.intersect(O, D, near, far);\n\
+        if (d == null || d > far || d < near)\n\
+            continue;\n\
+        return true;\n\
+    }\n\
+    \n\
+    return false;\n\
+}\n\
+\n\
+\n\
+// this camera code is from notes i made ages ago, it is from *somewhere* -- i cannot remember where\n\
+// that somewhere is\n\
+function Camera(origin, lookat, up) {\n\
+    var zaxis = normaliseVector(subVector(lookat, origin));\n\
+    var xaxis = normaliseVector(cross(up, zaxis));\n\
+    var yaxis = normaliseVector(cross(xaxis, subVector([0,0,0], zaxis)));\n\
+    var m = new Array(16);\n\
+    m[0] = xaxis[0]; m[1] = xaxis[1]; m[2] = xaxis[2];\n\
+    m[4] = yaxis[0]; m[5] = yaxis[1]; m[6] = yaxis[2];\n\
+    m[8] = zaxis[0]; m[9] = zaxis[1]; m[10] = zaxis[2];\n\
+    invertMatrix(m);\n\
+    m[3] = 0; m[7] = 0; m[11] = 0;\n\
+    this.origin = origin;\n\
+    this.directions = new Array(4);\n\
+    this.directions[0] = normalise([-0.7,  0.7, 1]);\n\
+    this.directions[1] = normalise([ 0.7,  0.7, 1]);\n\
+    this.directions[2] = normalise([ 0.7, -0.7, 1]);\n\
+    this.directions[3] = normalise([-0.7, -0.7, 1]);\n\
+    this.directions[0] = transformMatrix(m, this.directions[0]);\n\
+    this.directions[1] = transformMatrix(m, this.directions[1]);\n\
+    this.directions[2] = transformMatrix(m, this.directions[2]);\n\
+    this.directions[3] = transformMatrix(m, this.directions[3]);\n\
+}\n\
+\n\
+Camera.prototype.generateRayPair = function(y) {\n\
+    rays = new Array(new Object(), new Object());\n\
+    rays[0].origin = this.origin;\n\
+    rays[1].origin = this.origin;\n\
+    rays[0].dir = addVector(scale(this.directions[0], y), scale(this.directions[3], 1 - y));\n\
+    rays[1].dir = addVector(scale(this.directions[1], y), scale(this.directions[2], 1 - y));\n\
+    return rays;\n\
+}\n\
+\n\
+function renderRows(camera, scene, pixels, width, height, starty, stopy) {\n\
+    for (var y = starty; y < stopy; y++) {\n\
+        var rays = camera.generateRayPair(y / height);\n\
+        for (var x = 0; x < width; x++) {\n\
+            var xp = x / width;\n\
+            var origin = addVector(scale(rays[0].origin, xp), scale(rays[1].origin, 1 - xp));\n\
+            var dir = normaliseVector(addVector(scale(rays[0].dir, xp), scale(rays[1].dir, 1 - xp)));\n\
+            var l = scene.intersect(origin, dir);\n\
+            pixels[y][x] = l;\n\
+        }\n\
+    }\n\
+}\n\
+\n\
+Camera.prototype.render = function(scene, pixels, width, height) {\n\
+    var cam = this;\n\
+    var row = 0;\n\
+    renderRows(cam, scene, pixels, width, height, 0, height);\n\
+}\n\
+\n\
+\n\
+\n\
+function raytraceScene()\n\
+{\n\
+    var startDate = new Date().getTime();\n\
+    var numTriangles = 2 * 6;\n\
+    var triangles = new Array();//numTriangles);\n\
+    var tfl = createVector(-10,  10, -10);\n\
+    var tfr = createVector( 10,  10, -10);\n\
+    var tbl = createVector(-10,  10,  10);\n\
+    var tbr = createVector( 10,  10,  10);\n\
+    var bfl = createVector(-10, -10, -10);\n\
+    var bfr = createVector( 10, -10, -10);\n\
+    var bbl = createVector(-10, -10,  10);\n\
+    var bbr = createVector( 10, -10,  10);\n\
+    \n\
+    // cube!!!\n\
+    // front\n\
+    var i = 0;\n\
+    \n\
+    triangles[i++] = new Triangle(tfl, tfr, bfr);\n\
+    triangles[i++] = new Triangle(tfl, bfr, bfl);\n\
+    // back\n\
+    triangles[i++] = new Triangle(tbl, tbr, bbr);\n\
+    triangles[i++] = new Triangle(tbl, bbr, bbl);\n\
+    //        triangles[i-1].material = [0.7,0.2,0.2];\n\
+    //            triangles[i-1].material.reflection = 0.8;\n\
+    // left\n\
+    triangles[i++] = new Triangle(tbl, tfl, bbl);\n\
+    //            triangles[i-1].reflection = 0.6;\n\
+    triangles[i++] = new Triangle(tfl, bfl, bbl);\n\
+    //            triangles[i-1].reflection = 0.6;\n\
+    // right\n\
+    triangles[i++] = new Triangle(tbr, tfr, bbr);\n\
+    triangles[i++] = new Triangle(tfr, bfr, bbr);\n\
+    // top\n\
+    triangles[i++] = new Triangle(tbl, tbr, tfr);\n\
+    triangles[i++] = new Triangle(tbl, tfr, tfl);\n\
+    // bottom\n\
+    triangles[i++] = new Triangle(bbl, bbr, bfr);\n\
+    triangles[i++] = new Triangle(bbl, bfr, bfl);\n\
+    \n\
+    //Floor!!!!\n\
+    var green = createVector(0.0, 0.4, 0.0);\n\
+    var grey = createVector(0.4, 0.4, 0.4);\n\
+    grey.reflection = 1.0;\n\
+    var floorShader = function(tri, pos, view) {\n\
+        var x = ((pos[0]/32) % 2 + 2) % 2;\n\
+        var z = ((pos[2]/32 + 0.3) % 2 + 2) % 2;\n\
+        if (x < 1 != z < 1) {\n\
+            //in the real world we use the fresnel term...\n\
+            //    var angle = 1-dot(view, tri.normal);\n\
+            //   angle *= angle;\n\
+            //  angle *= angle;\n\
+            // angle *= angle;\n\
+            //grey.reflection = angle;\n\
+            return grey;\n\
+        } else \n\
+            return green;\n\
+    }\n\
+    var ffl = createVector(-1000, -30, -1000);\n\
+    var ffr = createVector( 1000, -30, -1000);\n\
+    var fbl = createVector(-1000, -30,  1000);\n\
+    var fbr = createVector( 1000, -30,  1000);\n\
+    triangles[i++] = new Triangle(fbl, fbr, ffr);\n\
+    triangles[i-1].shader = floorShader;\n\
+    triangles[i++] = new Triangle(fbl, ffr, ffl);\n\
+    triangles[i-1].shader = floorShader;\n\
+    \n\
+    var _scene = new Scene(triangles);\n\
+    _scene.lights[0] = createVector(20, 38, -22);\n\
+    _scene.lights[0].colour = createVector(0.7, 0.3, 0.3);\n\
+    _scene.lights[1] = createVector(-23, 40, 17);\n\
+    _scene.lights[1].colour = createVector(0.7, 0.3, 0.3);\n\
+    _scene.lights[2] = createVector(23, 20, 17);\n\
+    _scene.lights[2].colour = createVector(0.7, 0.7, 0.7);\n\
+    _scene.ambient = createVector(0.1, 0.1, 0.1);\n\
+    //  _scene.background = createVector(0.7, 0.7, 1.0);\n\
+    \n\
+    var size = 30;\n\
+    var pixels = new Array();\n\
+    for (var y = 0; y < size; y++) {\n\
+        pixels[y] = new Array();\n\
+        for (var x = 0; x < size; x++) {\n\
+            pixels[y][x] = 0;\n\
+        }\n\
+    }\n\
+\n\
+    var _camera = new Camera(createVector(-40, 40, 40), createVector(0, 0, 0), createVector(0, 1, 0));\n\
+    _camera.render(_scene, pixels, size, size);\n\
+\n\
+    return pixels;\n\
+}\n\
+\n\
+function arrayToCanvasCommands(pixels)\n\
+{\n\
+    var s = '<canvas id=\"renderCanvas\" width=\"30px\" height=\"30px\"></canvas><scr' + 'ipt>\\nvar pixels = [';\n\
+    var size = 30;\n\
+    for (var y = 0; y < size; y++) {\n\
+        s += \"[\";\n\
+        for (var x = 0; x < size; x++) {\n\
+            s += \"[\" + pixels[y][x] + \"],\";\n\
+        }\n\
+        s+= \"],\";\n\
+    }\n\
+    s += '];\\n    var canvas = document.getElementById(\"renderCanvas\").getContext(\"2d\");\\n\\\n\
+\\n\\\n\
+\\n\\\n\
+    var size = 30;\\n\\\n\
+    canvas.fillStyle = \"red\";\\n\\\n\
+    canvas.fillRect(0, 0, size, size);\\n\\\n\
+    canvas.scale(1, -1);\\n\\\n\
+    canvas.translate(0, -size);\\n\\\n\
+\\n\\\n\
+    if (!canvas.setFillColor)\\n\\\n\
+        canvas.setFillColor = function(r, g, b, a) {\\n\\\n\
+            this.fillStyle = \"rgb(\"+[Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)]+\")\";\\n\\\n\
+    }\\n\\\n\
+\\n\\\n\
+for (var y = 0; y < size; y++) {\\n\\\n\
+  for (var x = 0; x < size; x++) {\\n\\\n\
+    var l = pixels[y][x];\\n\\\n\
+    canvas.setFillColor(l[0], l[1], l[2], 1);\\n\\\n\
+    canvas.fillRect(x, y, 1, 1);\\n\\\n\
+  }\\n\\\n\
+}</scr' + 'ipt>';\n\
+\n\
+    return s;\n\
+}\n\
+\n\
+testOutput = arrayToCanvasCommands(raytraceScene());\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider access-binary-trees</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>access-binary-trees</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/* The Great Computer Language Shootout\n\
+   http://shootout.alioth.debian.org/\n\
+   contributed by Isaac Gouy */\n\
+\n\
+function TreeNode(left,right,item){\n\
+   this.left = left;\n\
+   this.right = right;\n\
+   this.item = item;\n\
+}\n\
+\n\
+TreeNode.prototype.itemCheck = function(){\n\
+   if (this.left==null) return this.item;\n\
+   else return this.item + this.left.itemCheck() - this.right.itemCheck();\n\
+}\n\
+\n\
+function bottomUpTree(item,depth){\n\
+   if (depth>0){\n\
+      return new TreeNode(\n\
+          bottomUpTree(2*item-1, depth-1)\n\
+         ,bottomUpTree(2*item, depth-1)\n\
+         ,item\n\
+      );\n\
+   }\n\
+   else {\n\
+      return new TreeNode(null,null,item);\n\
+   }\n\
+}\n\
+\n\
+var ret;\n\
+\n\
+for ( var n = 4; n <= 7; n += 1 ) {\n\
+    var minDepth = 4;\n\
+    var maxDepth = Math.max(minDepth + 2, n);\n\
+    var stretchDepth = maxDepth + 1;\n\
+    \n\
+    var check = bottomUpTree(0,stretchDepth).itemCheck();\n\
+    \n\
+    var longLivedTree = bottomUpTree(0,maxDepth);\n\
+    for (var depth=minDepth; depth<=maxDepth; depth+=2){\n\
+        var iterations = 1 << (maxDepth - depth + minDepth);\n\
+\n\
+        check = 0;\n\
+        for (var i=1; i<=iterations; i++){\n\
+            check += bottomUpTree(i,depth).itemCheck();\n\
+            check += bottomUpTree(-i,depth).itemCheck();\n\
+        }\n\
+    }\n\
+\n\
+    ret = longLivedTree.itemCheck();\n\
+}\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider access-fannkuch</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>access-fannkuch</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/* The Great Computer Language Shootout\n\
+   http://shootout.alioth.debian.org/\n\
+   contributed by Isaac Gouy */\n\
+\n\
+function fannkuch(n) {\n\
+   var check = 0;\n\
+   var perm = Array(n);\n\
+   var perm1 = Array(n);\n\
+   var count = Array(n);\n\
+   var maxPerm = Array(n);\n\
+   var maxFlipsCount = 0;\n\
+   var m = n - 1;\n\
+\n\
+   for (var i = 0; i < n; i++) perm1[i] = i;\n\
+   var r = n;\n\
+\n\
+   while (true) {\n\
+      // write-out the first 30 permutations\n\
+      if (check < 30){\n\
+         var s = \"\";\n\
+         for(var i=0; i<n; i++) s += (perm1[i]+1).toString();\n\
+         check++;\n\
+      }\n\
+\n\
+      while (r != 1) { count[r - 1] = r; r--; }\n\
+      if (!(perm1[0] == 0 || perm1[m] == m)) {\n\
+         for (var i = 0; i < n; i++) perm[i] = perm1[i];\n\
+\n\
+         var flipsCount = 0;\n\
+         var k;\n\
+\n\
+         while (!((k = perm[0]) == 0)) {\n\
+            var k2 = (k + 1) >> 1;\n\
+            for (var i = 0; i < k2; i++) {\n\
+               var temp = perm[i]; perm[i] = perm[k - i]; perm[k - i] = temp;\n\
+            }\n\
+            flipsCount++;\n\
+         }\n\
+\n\
+         if (flipsCount > maxFlipsCount) {\n\
+            maxFlipsCount = flipsCount;\n\
+            for (var i = 0; i < n; i++) maxPerm[i] = perm1[i];\n\
+         }\n\
+      }\n\
+\n\
+      while (true) {\n\
+         if (r == n) return maxFlipsCount;\n\
+         var perm0 = perm1[0];\n\
+         var i = 0;\n\
+         while (i < r) {\n\
+            var j = i + 1;\n\
+            perm1[i] = perm1[j];\n\
+            i = j;\n\
+         }\n\
+         perm1[r] = perm0;\n\
+\n\
+         count[r] = count[r] - 1;\n\
+         if (count[r] > 0) break;\n\
+         r++;\n\
+      }\n\
+   }\n\
+}\n\
+\n\
+var n = 8;\n\
+var ret = fannkuch(n);\n\
+\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider access-nbody</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>access-nbody</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/* The Great Computer Language Shootout\n\
+   http://shootout.alioth.debian.org/\n\
+   contributed by Isaac Gouy */\n\
+\n\
+var PI = 3.141592653589793;\n\
+var SOLAR_MASS = 4 * PI * PI;\n\
+var DAYS_PER_YEAR = 365.24;\n\
+\n\
+function Body(x,y,z,vx,vy,vz,mass){\n\
+   this.x = x;\n\
+   this.y = y;\n\
+   this.z = z;\n\
+   this.vx = vx;\n\
+   this.vy = vy;\n\
+   this.vz = vz;\n\
+   this.mass = mass;\n\
+}\n\
+\n\
+Body.prototype.offsetMomentum = function(px,py,pz) {\n\
+   this.vx = -px / SOLAR_MASS;\n\
+   this.vy = -py / SOLAR_MASS;\n\
+   this.vz = -pz / SOLAR_MASS;\n\
+   return this;\n\
+}\n\
+\n\
+function Jupiter(){\n\
+   return new Body(\n\
+      4.84143144246472090e+00,\n\
+      -1.16032004402742839e+00,\n\
+      -1.03622044471123109e-01,\n\
+      1.66007664274403694e-03 * DAYS_PER_YEAR,\n\
+      7.69901118419740425e-03 * DAYS_PER_YEAR,\n\
+      -6.90460016972063023e-05 * DAYS_PER_YEAR,\n\
+      9.54791938424326609e-04 * SOLAR_MASS\n\
+   );\n\
+}\n\
+\n\
+function Saturn(){\n\
+   return new Body(\n\
+      8.34336671824457987e+00,\n\
+      4.12479856412430479e+00,\n\
+      -4.03523417114321381e-01,\n\
+      -2.76742510726862411e-03 * DAYS_PER_YEAR,\n\
+      4.99852801234917238e-03 * DAYS_PER_YEAR,\n\
+      2.30417297573763929e-05 * DAYS_PER_YEAR,\n\
+      2.85885980666130812e-04 * SOLAR_MASS\n\
+   );\n\
+}\n\
+\n\
+function Uranus(){\n\
+   return new Body(\n\
+      1.28943695621391310e+01,\n\
+      -1.51111514016986312e+01,\n\
+      -2.23307578892655734e-01,\n\
+      2.96460137564761618e-03 * DAYS_PER_YEAR,\n\
+      2.37847173959480950e-03 * DAYS_PER_YEAR,\n\
+      -2.96589568540237556e-05 * DAYS_PER_YEAR,\n\
+      4.36624404335156298e-05 * SOLAR_MASS\n\
+   );\n\
+}\n\
+\n\
+function Neptune(){\n\
+   return new Body(\n\
+      1.53796971148509165e+01,\n\
+      -2.59193146099879641e+01,\n\
+      1.79258772950371181e-01,\n\
+      2.68067772490389322e-03 * DAYS_PER_YEAR,\n\
+      1.62824170038242295e-03 * DAYS_PER_YEAR,\n\
+      -9.51592254519715870e-05 * DAYS_PER_YEAR,\n\
+      5.15138902046611451e-05 * SOLAR_MASS\n\
+   );\n\
+}\n\
+\n\
+function Sun(){\n\
+   return new Body(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, SOLAR_MASS);\n\
+}\n\
+\n\
+\n\
+function NBodySystem(bodies){\n\
+   this.bodies = bodies;\n\
+   var px = 0.0;\n\
+   var py = 0.0;\n\
+   var pz = 0.0;\n\
+   var size = this.bodies.length;\n\
+   for (var i=0; i<size; i++){\n\
+      var b = this.bodies[i];\n\
+      var m = b.mass;\n\
+      px += b.vx * m;\n\
+      py += b.vy * m;\n\
+      pz += b.vz * m;\n\
+   }\n\
+   this.bodies[0].offsetMomentum(px,py,pz);\n\
+}\n\
+\n\
+NBodySystem.prototype.advance = function(dt){\n\
+   var dx, dy, dz, distance, mag;\n\
+   var size = this.bodies.length;\n\
+\n\
+   for (var i=0; i<size; i++) {\n\
+      var bodyi = this.bodies[i];\n\
+      for (var j=i+1; j<size; j++) {\n\
+         var bodyj = this.bodies[j];\n\
+         dx = bodyi.x - bodyj.x;\n\
+         dy = bodyi.y - bodyj.y;\n\
+         dz = bodyi.z - bodyj.z;\n\
+\n\
+         distance = Math.sqrt(dx*dx + dy*dy + dz*dz);\n\
+         mag = dt / (distance * distance * distance);\n\
+\n\
+         bodyi.vx -= dx * bodyj.mass * mag;\n\
+         bodyi.vy -= dy * bodyj.mass * mag;\n\
+         bodyi.vz -= dz * bodyj.mass * mag;\n\
+\n\
+         bodyj.vx += dx * bodyi.mass * mag;\n\
+         bodyj.vy += dy * bodyi.mass * mag;\n\
+         bodyj.vz += dz * bodyi.mass * mag;\n\
+      }\n\
+   }\n\
+\n\
+   for (var i=0; i<size; i++) {\n\
+      var body = this.bodies[i];\n\
+      body.x += dt * body.vx;\n\
+      body.y += dt * body.vy;\n\
+      body.z += dt * body.vz;\n\
+   }\n\
+}\n\
+\n\
+NBodySystem.prototype.energy = function(){\n\
+   var dx, dy, dz, distance;\n\
+   var e = 0.0;\n\
+   var size = this.bodies.length;\n\
+\n\
+   for (var i=0; i<size; i++) {\n\
+      var bodyi = this.bodies[i];\n\
+\n\
+      e += 0.5 * bodyi.mass *\n\
+         ( bodyi.vx * bodyi.vx\n\
+         + bodyi.vy * bodyi.vy\n\
+         + bodyi.vz * bodyi.vz );\n\
+\n\
+      for (var j=i+1; j<size; j++) {\n\
+         var bodyj = this.bodies[j];\n\
+         dx = bodyi.x - bodyj.x;\n\
+         dy = bodyi.y - bodyj.y;\n\
+         dz = bodyi.z - bodyj.z;\n\
+\n\
+         distance = Math.sqrt(dx*dx + dy*dy + dz*dz);\n\
+         e -= (bodyi.mass * bodyj.mass) / distance;\n\
+      }\n\
+   }\n\
+   return e;\n\
+}\n\
+\n\
+var ret;\n\
+\n\
+for ( var n = 3; n <= 24; n *= 2 ) {\n\
+    (function(){\n\
+        var bodies = new NBodySystem( Array(\n\
+           Sun(),Jupiter(),Saturn(),Uranus(),Neptune()\n\
+        ));\n\
+        var max = n * 100;\n\
+        \n\
+        ret = bodies.energy();\n\
+        for (var i=0; i<max; i++){\n\
+            bodies.advance(0.01);\n\
+        }\n\
+        ret = bodies.energy();\n\
+    })();\n\
+}\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider access-nsieve</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>access-nsieve</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// The Great Computer Language Shootout\n\
+// http://shootout.alioth.debian.org/\n\
+//\n\
+// modified by Isaac Gouy\n\
+\n\
+function pad(number,width){\n\
+   var s = number.toString();\n\
+   var prefixWidth = width - s.length;\n\
+   if (prefixWidth>0){\n\
+      for (var i=1; i<=prefixWidth; i++) s = \" \" + s;\n\
+   }\n\
+   return s;\n\
+}\n\
+\n\
+function nsieve(m, isPrime){\n\
+   var i, k, count;\n\
+\n\
+   for (i=2; i<=m; i++) { isPrime[i] = true; }\n\
+   count = 0;\n\
+\n\
+   for (i=2; i<=m; i++){\n\
+      if (isPrime[i]) {\n\
+         for (k=i+i; k<=m; k+=i) isPrime[k] = false;\n\
+         count++;\n\
+      }\n\
+   }\n\
+   return count;\n\
+}\n\
+\n\
+function sieve() {\n\
+    for (var i = 1; i <= 3; i++ ) {\n\
+        var m = (1<<i)*10000;\n\
+        var flags = Array(m+1);\n\
+        nsieve(m, flags);\n\
+    }\n\
+}\n\
+\n\
+sieve();\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider bitops-3bit-bits-in-byte</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>bitops-3bit-bits-in-byte</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// Copyright (c) 2004 by Arthur Langereis (arthur_ext at domain xfinitegames, tld com\n\
+\n\
+// 1 op = 6 ANDs, 3 SHRs, 3 SHLs, 4 assigns, 2 ADDs\n\
+// O(1)\n\
+function fast3bitlookup(b) {\n\
+var c, bi3b = 0xE994; // 0b1110 1001 1001 0100; // 3 2 2 1  2 1 1 0\n\
+c  = 3 & (bi3b >> ((b << 1) & 14));\n\
+c += 3 & (bi3b >> ((b >> 2) & 14));\n\
+c += 3 & (bi3b >> ((b >> 5) & 6));\n\
+return c;\n\
+\n\
+/*\n\
+lir4,0xE994; 9 instructions, no memory access, minimal register dependence, 6 shifts, 2 adds, 1 inline assign\n\
+rlwinmr5,r3,1,28,30\n\
+rlwinmr6,r3,30,28,30\n\
+rlwinmr7,r3,27,29,30\n\
+rlwnmr8,r4,r5,30,31\n\
+rlwnmr9,r4,r6,30,31\n\
+rlwnmr10,r4,r7,30,31\n\
+addr3,r8,r9\n\
+addr3,r3,r10\n\
+*/\n\
+}\n\
+\n\
+\n\
+function TimeFunc(func) {\n\
+var x, y, t;\n\
+for(var x=0; x<500; x++)\n\
+for(var y=0; y<256; y++) func(y);\n\
+}\n\
+\n\
+TimeFunc(fast3bitlookup);\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider bitops-bits-in-byte</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>bitops-bits-in-byte</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// Copyright (c) 2004 by Arthur Langereis (arthur_ext at domain xfinitegames, tld com)\n\
+\n\
+\n\
+// 1 op = 2 assigns, 16 compare/branches, 8 ANDs, (0-8) ADDs, 8 SHLs\n\
+// O(n)\n\
+function bitsinbyte(b) {\n\
+var m = 1, c = 0;\n\
+while(m<0x100) {\n\
+if(b & m) c++;\n\
+m <<= 1;\n\
+}\n\
+return c;\n\
+}\n\
+\n\
+function TimeFunc(func) {\n\
+var x, y, t;\n\
+for(var x=0; x<350; x++)\n\
+for(var y=0; y<256; y++) func(y);\n\
+}\n\
+\n\
+TimeFunc(bitsinbyte);\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider bitops-bitwise-and</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>bitops-bitwise-and</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/*\n\
+ * Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+ *\n\
+ * Redistribution and use in source and binary forms, with or without\n\
+ * modification, are permitted provided that the following conditions\n\
+ * are met:\n\
+ * 1. Redistributions of source code must retain the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer.\n\
+ * 2. Redistributions in binary form must reproduce the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer in the\n\
+ *    documentation and/or other materials provided with the distribution.\n\
+ *\n\
+ * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+ */\n\
+\n\
+bitwiseAndValue = 4294967296;\n\
+for (var i = 0; i < 600000; i++)\n\
+    bitwiseAndValue = bitwiseAndValue & i;\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider bitops-nsieve-bits</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>bitops-nsieve-bits</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// The Great Computer Language Shootout\n\
+//  http://shootout.alioth.debian.org\n\
+//\n\
+//  Contributed by Ian Osgood\n\
+\n\
+function pad(n,width) {\n\
+  var s = n.toString();\n\
+  while (s.length < width) s = ' ' + s;\n\
+  return s;\n\
+}\n\
+\n\
+function primes(isPrime, n) {\n\
+  var i, count = 0, m = 10000<<n, size = m+31>>5;\n\
+\n\
+  for (i=0; i<size; i++) isPrime[i] = 0xffffffff;\n\
+\n\
+  for (i=2; i<m; i++)\n\
+    if (isPrime[i>>5] & 1<<(i&31)) {\n\
+      for (var j=i+i; j<m; j+=i)\n\
+        isPrime[j>>5] &= ~(1<<(j&31));\n\
+      count++;\n\
+    }\n\
+}\n\
+\n\
+function sieve() {\n\
+    for (var i = 4; i <= 4; i++) {\n\
+        var isPrime = new Array((10000<<i)+31>>5);\n\
+        primes(isPrime, i);\n\
+    }\n\
+}\n\
+\n\
+sieve();\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider controlflow-recursive</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>controlflow-recursive</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// The Computer Language Shootout\n\
+// http://shootout.alioth.debian.org/\n\
+// contributed by Isaac Gouy\n\
+\n\
+function ack(m,n){\n\
+   if (m==0) { return n+1; }\n\
+   if (n==0) { return ack(m-1,1); }\n\
+   return ack(m-1, ack(m,n-1) );\n\
+}\n\
+\n\
+function fib(n) {\n\
+    if (n < 2){ return 1; }\n\
+    return fib(n-2) + fib(n-1);\n\
+}\n\
+\n\
+function tak(x,y,z) {\n\
+    if (y >= x) return z;\n\
+    return tak(tak(x-1,y,z), tak(y-1,z,x), tak(z-1,x,y));\n\
+}\n\
+\n\
+for ( var i = 3; i <= 5; i++ ) {\n\
+    ack(3,i);\n\
+    fib(17.0+i);\n\
+    tak(3*i+3,2*i+2,i+1);\n\
+}\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider crypto-aes</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>crypto-aes</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\
+\n\
+/*\n\
+ * AES Cipher function: encrypt 'input' with Rijndael algorithm\n\
+ *\n\
+ *   takes   byte-array 'input' (16 bytes)\n\
+ *           2D byte-array key schedule 'w' (Nr+1 x Nb bytes)\n\
+ *\n\
+ *   applies Nr rounds (10/12/14) using key schedule w for 'add round key' stage\n\
+ *\n\
+ *   returns byte-array encrypted value (16 bytes)\n\
+ */\n\
+function Cipher(input, w) {    // main Cipher function [§5.1]\n\
+  var Nb = 4;               // block size (in words): no of columns in state (fixed at 4 for AES)\n\
+  var Nr = w.length/Nb - 1; // no of rounds: 10/12/14 for 128/192/256-bit keys\n\
+\n\
+  var state = [[],[],[],[]];  // initialise 4xNb byte-array 'state' with input [§3.4]\n\
+  for (var i=0; i<4*Nb; i++) state[i%4][Math.floor(i/4)] = input[i];\n\
+\n\
+  state = AddRoundKey(state, w, 0, Nb);\n\
+\n\
+  for (var round=1; round<Nr; round++) {\n\
+    state = SubBytes(state, Nb);\n\
+    state = ShiftRows(state, Nb);\n\
+    state = MixColumns(state, Nb);\n\
+    state = AddRoundKey(state, w, round, Nb);\n\
+  }\n\
+\n\
+  state = SubBytes(state, Nb);\n\
+  state = ShiftRows(state, Nb);\n\
+  state = AddRoundKey(state, w, Nr, Nb);\n\
+\n\
+  var output = new Array(4*Nb);  // convert state to 1-d array before returning [§3.4]\n\
+  for (var i=0; i<4*Nb; i++) output[i] = state[i%4][Math.floor(i/4)];\n\
+  return output;\n\
+}\n\
+\n\
+\n\
+function SubBytes(s, Nb) {    // apply SBox to state S [§5.1.1]\n\
+  for (var r=0; r<4; r++) {\n\
+    for (var c=0; c<Nb; c++) s[r][c] = Sbox[s[r][c]];\n\
+  }\n\
+  return s;\n\
+}\n\
+\n\
+\n\
+function ShiftRows(s, Nb) {    // shift row r of state S left by r bytes [§5.1.2]\n\
+  var t = new Array(4);\n\
+  for (var r=1; r<4; r++) {\n\
+    for (var c=0; c<4; c++) t[c] = s[r][(c+r)%Nb];  // shift into temp copy\n\
+    for (var c=0; c<4; c++) s[r][c] = t[c];         // and copy back\n\
+  }          // note that this will work for Nb=4,5,6, but not 7,8 (always 4 for AES):\n\
+  return s;  // see fp.gladman.plus.com/cryptography_technology/rijndael/aes.spec.311.pdf \n\
+}\n\
+\n\
+\n\
+function MixColumns(s, Nb) {   // combine bytes of each col of state S [§5.1.3]\n\
+  for (var c=0; c<4; c++) {\n\
+    var a = new Array(4);  // 'a' is a copy of the current column from 's'\n\
+    var b = new Array(4);  // 'b' is a•{02} in GF(2^8)\n\
+    for (var i=0; i<4; i++) {\n\
+      a[i] = s[i][c];\n\
+      b[i] = s[i][c]&0x80 ? s[i][c]<<1 ^ 0x011b : s[i][c]<<1;\n\
+    }\n\
+    // a[n] ^ b[n] is a•{03} in GF(2^8)\n\
+    s[0][c] = b[0] ^ a[1] ^ b[1] ^ a[2] ^ a[3]; // 2*a0 + 3*a1 + a2 + a3\n\
+    s[1][c] = a[0] ^ b[1] ^ a[2] ^ b[2] ^ a[3]; // a0 * 2*a1 + 3*a2 + a3\n\
+    s[2][c] = a[0] ^ a[1] ^ b[2] ^ a[3] ^ b[3]; // a0 + a1 + 2*a2 + 3*a3\n\
+    s[3][c] = a[0] ^ b[0] ^ a[1] ^ a[2] ^ b[3]; // 3*a0 + a1 + a2 + 2*a3\n\
+  }\n\
+  return s;\n\
+}\n\
+\n\
+\n\
+function AddRoundKey(state, w, rnd, Nb) {  // xor Round Key into state S [§5.1.4]\n\
+  for (var r=0; r<4; r++) {\n\
+    for (var c=0; c<Nb; c++) state[r][c] ^= w[rnd*4+c][r];\n\
+  }\n\
+  return state;\n\
+}\n\
+\n\
+\n\
+function KeyExpansion(key) {  // generate Key Schedule (byte-array Nr+1 x Nb) from Key [§5.2]\n\
+  var Nb = 4;            // block size (in words): no of columns in state (fixed at 4 for AES)\n\
+  var Nk = key.length/4  // key length (in words): 4/6/8 for 128/192/256-bit keys\n\
+  var Nr = Nk + 6;       // no of rounds: 10/12/14 for 128/192/256-bit keys\n\
+\n\
+  var w = new Array(Nb*(Nr+1));\n\
+  var temp = new Array(4);\n\
+\n\
+  for (var i=0; i<Nk; i++) {\n\
+    var r = [key[4*i], key[4*i+1], key[4*i+2], key[4*i+3]];\n\
+    w[i] = r;\n\
+  }\n\
+\n\
+  for (var i=Nk; i<(Nb*(Nr+1)); i++) {\n\
+    w[i] = new Array(4);\n\
+    for (var t=0; t<4; t++) temp[t] = w[i-1][t];\n\
+    if (i % Nk == 0) {\n\
+      temp = SubWord(RotWord(temp));\n\
+      for (var t=0; t<4; t++) temp[t] ^= Rcon[i/Nk][t];\n\
+    } else if (Nk > 6 && i%Nk == 4) {\n\
+      temp = SubWord(temp);\n\
+    }\n\
+    for (var t=0; t<4; t++) w[i][t] = w[i-Nk][t] ^ temp[t];\n\
+  }\n\
+\n\
+  return w;\n\
+}\n\
+\n\
+function SubWord(w) {    // apply SBox to 4-byte word w\n\
+  for (var i=0; i<4; i++) w[i] = Sbox[w[i]];\n\
+  return w;\n\
+}\n\
+\n\
+function RotWord(w) {    // rotate 4-byte word w left by one byte\n\
+  w[4] = w[0];\n\
+  for (var i=0; i<4; i++) w[i] = w[i+1];\n\
+  return w;\n\
+}\n\
+\n\
+\n\
+// Sbox is pre-computed multiplicative inverse in GF(2^8) used in SubBytes and KeyExpansion [§5.1.1]\n\
+var Sbox =  [0x63,0x7c,0x77,0x7b,0xf2,0x6b,0x6f,0xc5,0x30,0x01,0x67,0x2b,0xfe,0xd7,0xab,0x76,\n\
+             0xca,0x82,0xc9,0x7d,0xfa,0x59,0x47,0xf0,0xad,0xd4,0xa2,0xaf,0x9c,0xa4,0x72,0xc0,\n\
+             0xb7,0xfd,0x93,0x26,0x36,0x3f,0xf7,0xcc,0x34,0xa5,0xe5,0xf1,0x71,0xd8,0x31,0x15,\n\
+             0x04,0xc7,0x23,0xc3,0x18,0x96,0x05,0x9a,0x07,0x12,0x80,0xe2,0xeb,0x27,0xb2,0x75,\n\
+             0x09,0x83,0x2c,0x1a,0x1b,0x6e,0x5a,0xa0,0x52,0x3b,0xd6,0xb3,0x29,0xe3,0x2f,0x84,\n\
+             0x53,0xd1,0x00,0xed,0x20,0xfc,0xb1,0x5b,0x6a,0xcb,0xbe,0x39,0x4a,0x4c,0x58,0xcf,\n\
+             0xd0,0xef,0xaa,0xfb,0x43,0x4d,0x33,0x85,0x45,0xf9,0x02,0x7f,0x50,0x3c,0x9f,0xa8,\n\
+             0x51,0xa3,0x40,0x8f,0x92,0x9d,0x38,0xf5,0xbc,0xb6,0xda,0x21,0x10,0xff,0xf3,0xd2,\n\
+             0xcd,0x0c,0x13,0xec,0x5f,0x97,0x44,0x17,0xc4,0xa7,0x7e,0x3d,0x64,0x5d,0x19,0x73,\n\
+             0x60,0x81,0x4f,0xdc,0x22,0x2a,0x90,0x88,0x46,0xee,0xb8,0x14,0xde,0x5e,0x0b,0xdb,\n\
+             0xe0,0x32,0x3a,0x0a,0x49,0x06,0x24,0x5c,0xc2,0xd3,0xac,0x62,0x91,0x95,0xe4,0x79,\n\
+             0xe7,0xc8,0x37,0x6d,0x8d,0xd5,0x4e,0xa9,0x6c,0x56,0xf4,0xea,0x65,0x7a,0xae,0x08,\n\
+             0xba,0x78,0x25,0x2e,0x1c,0xa6,0xb4,0xc6,0xe8,0xdd,0x74,0x1f,0x4b,0xbd,0x8b,0x8a,\n\
+             0x70,0x3e,0xb5,0x66,0x48,0x03,0xf6,0x0e,0x61,0x35,0x57,0xb9,0x86,0xc1,0x1d,0x9e,\n\
+             0xe1,0xf8,0x98,0x11,0x69,0xd9,0x8e,0x94,0x9b,0x1e,0x87,0xe9,0xce,0x55,0x28,0xdf,\n\
+             0x8c,0xa1,0x89,0x0d,0xbf,0xe6,0x42,0x68,0x41,0x99,0x2d,0x0f,0xb0,0x54,0xbb,0x16];\n\
+\n\
+// Rcon is Round Constant used for the Key Expansion [1st col is 2^(r-1) in GF(2^8)] [§5.2]\n\
+var Rcon = [ [0x00, 0x00, 0x00, 0x00],\n\
+             [0x01, 0x00, 0x00, 0x00],\n\
+             [0x02, 0x00, 0x00, 0x00],\n\
+             [0x04, 0x00, 0x00, 0x00],\n\
+             [0x08, 0x00, 0x00, 0x00],\n\
+             [0x10, 0x00, 0x00, 0x00],\n\
+             [0x20, 0x00, 0x00, 0x00],\n\
+             [0x40, 0x00, 0x00, 0x00],\n\
+             [0x80, 0x00, 0x00, 0x00],\n\
+             [0x1b, 0x00, 0x00, 0x00],\n\
+             [0x36, 0x00, 0x00, 0x00] ]; \n\
+\n\
+\n\
+/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\
+\n\
+/* \n\
+ * Use AES to encrypt 'plaintext' with 'password' using 'nBits' key, in 'Counter' mode of operation\n\
+ *                           - see http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf\n\
+ *   for each block\n\
+ *   - outputblock = cipher(counter, key)\n\
+ *   - cipherblock = plaintext xor outputblock\n\
+ */\n\
+function AESEncryptCtr(plaintext, password, nBits) {\n\
+  if (!(nBits==128 || nBits==192 || nBits==256)) return '';  // standard allows 128/192/256 bit keys\n\
+\n\
+  // for this example script, generate the key by applying Cipher to 1st 16/24/32 chars of password; \n\
+  // for real-world applications, a more secure approach would be to hash the password e.g. with SHA-1\n\
+  var nBytes = nBits/8;  // no bytes in key\n\
+  var pwBytes = new Array(nBytes);\n\
+  for (var i=0; i<nBytes; i++) pwBytes[i] = password.charCodeAt(i) & 0xff;\n\
+  var key = Cipher(pwBytes, KeyExpansion(pwBytes));\n\
+  key = key.concat(key.slice(0, nBytes-16));  // key is now 16/24/32 bytes long\n\
+\n\
+  // initialise counter block (NIST SP800-38A §B.2): millisecond time-stamp for nonce in 1st 8 bytes,\n\
+  // block counter in 2nd 8 bytes\n\
+  var blockSize = 16;  // block size fixed at 16 bytes / 128 bits (Nb=4) for AES\n\
+  var counterBlock = new Array(blockSize);  // block size fixed at 16 bytes / 128 bits (Nb=4) for AES\n\
+  var nonce = (new Date()).getTime();  // milliseconds since 1-Jan-1970\n\
+\n\
+  // encode nonce in two stages to cater for JavaScript 32-bit limit on bitwise ops\n\
+  for (var i=0; i<4; i++) counterBlock[i] = (nonce >>> i*8) & 0xff;\n\
+  for (var i=0; i<4; i++) counterBlock[i+4] = (nonce/0x100000000 >>> i*8) & 0xff; \n\
+\n\
+  // generate key schedule - an expansion of the key into distinct Key Rounds for each round\n\
+  var keySchedule = KeyExpansion(key);\n\
+\n\
+  var blockCount = Math.ceil(plaintext.length/blockSize);\n\
+  var ciphertext = new Array(blockCount);  // ciphertext as array of strings\n\
+  \n\
+  for (var b=0; b<blockCount; b++) {\n\
+    // set counter (block #) in last 8 bytes of counter block (leaving nonce in 1st 8 bytes)\n\
+    // again done in two stages for 32-bit ops\n\
+    for (var c=0; c<4; c++) counterBlock[15-c] = (b >>> c*8) & 0xff;\n\
+    for (var c=0; c<4; c++) counterBlock[15-c-4] = (b/0x100000000 >>> c*8)\n\
+\n\
+    var cipherCntr = Cipher(counterBlock, keySchedule);  // -- encrypt counter block --\n\
+    \n\
+    // calculate length of final block:\n\
+    var blockLength = b<blockCount-1 ? blockSize : (plaintext.length-1)%blockSize+1;\n\
+\n\
+    var ct = '';\n\
+    for (var i=0; i<blockLength; i++) {  // -- xor plaintext with ciphered counter byte-by-byte --\n\
+      var plaintextByte = plaintext.charCodeAt(b*blockSize+i);\n\
+      var cipherByte = plaintextByte ^ cipherCntr[i];\n\
+      ct += String.fromCharCode(cipherByte);\n\
+    }\n\
+    // ct is now ciphertext for this block\n\
+\n\
+    ciphertext[b] = escCtrlChars(ct);  // escape troublesome characters in ciphertext\n\
+  }\n\
+\n\
+  // convert the nonce to a string to go on the front of the ciphertext\n\
+  var ctrTxt = '';\n\
+  for (var i=0; i<8; i++) ctrTxt += String.fromCharCode(counterBlock[i]);\n\
+  ctrTxt = escCtrlChars(ctrTxt);\n\
+\n\
+  // use '-' to separate blocks, use Array.join to concatenate arrays of strings for efficiency\n\
+  return ctrTxt + '-' + ciphertext.join('-');\n\
+}\n\
+\n\
+\n\
+/* \n\
+ * Use AES to decrypt 'ciphertext' with 'password' using 'nBits' key, in Counter mode of operation\n\
+ *\n\
+ *   for each block\n\
+ *   - outputblock = cipher(counter, key)\n\
+ *   - cipherblock = plaintext xor outputblock\n\
+ */\n\
+function AESDecryptCtr(ciphertext, password, nBits) {\n\
+  if (!(nBits==128 || nBits==192 || nBits==256)) return '';  // standard allows 128/192/256 bit keys\n\
+\n\
+  var nBytes = nBits/8;  // no bytes in key\n\
+  var pwBytes = new Array(nBytes);\n\
+  for (var i=0; i<nBytes; i++) pwBytes[i] = password.charCodeAt(i) & 0xff;\n\
+  var pwKeySchedule = KeyExpansion(pwBytes);\n\
+  var key = Cipher(pwBytes, pwKeySchedule);\n\
+  key = key.concat(key.slice(0, nBytes-16));  // key is now 16/24/32 bytes long\n\
+\n\
+  var keySchedule = KeyExpansion(key);\n\
+\n\
+  ciphertext = ciphertext.split('-');  // split ciphertext into array of block-length strings \n\
+\n\
+  // recover nonce from 1st element of ciphertext\n\
+  var blockSize = 16;  // block size fixed at 16 bytes / 128 bits (Nb=4) for AES\n\
+  var counterBlock = new Array(blockSize);\n\
+  var ctrTxt = unescCtrlChars(ciphertext[0]);\n\
+  for (var i=0; i<8; i++) counterBlock[i] = ctrTxt.charCodeAt(i);\n\
+\n\
+  var plaintext = new Array(ciphertext.length-1);\n\
+\n\
+  for (var b=1; b<ciphertext.length; b++) {\n\
+    // set counter (block #) in last 8 bytes of counter block (leaving nonce in 1st 8 bytes)\n\
+    for (var c=0; c<4; c++) counterBlock[15-c] = ((b-1) >>> c*8) & 0xff;\n\
+    for (var c=0; c<4; c++) counterBlock[15-c-4] = ((b/0x100000000-1) >>> c*8) & 0xff;\n\
+\n\
+    var cipherCntr = Cipher(counterBlock, keySchedule);  // encrypt counter block\n\
+\n\
+    ciphertext[b] = unescCtrlChars(ciphertext[b]);\n\
+\n\
+    var pt = '';\n\
+    for (var i=0; i<ciphertext[b].length; i++) {\n\
+      // -- xor plaintext with ciphered counter byte-by-byte --\n\
+      var ciphertextByte = ciphertext[b].charCodeAt(i);\n\
+      var plaintextByte = ciphertextByte ^ cipherCntr[i];\n\
+      pt += String.fromCharCode(plaintextByte);\n\
+    }\n\
+    // pt is now plaintext for this block\n\
+\n\
+    plaintext[b-1] = pt;  // b-1 'cos no initial nonce block in plaintext\n\
+  }\n\
+\n\
+  return plaintext.join('');\n\
+}\n\
+\n\
+/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\
+\n\
+function escCtrlChars(str) {  // escape control chars which might cause problems handling ciphertext\n\
+  return str.replace(/[\\0\\t\\n\\v\\f\\r\\xa0'\"!-]/g, function(c) { return '!' + c.charCodeAt(0) + '!'; });\n\
+}  // \\xa0 to cater for bug in Firefox; include '-' to leave it free for use as a block marker\n\
+\n\
+function unescCtrlChars(str) {  // unescape potentially problematic control characters\n\
+  return str.replace(/!\\d\\d?\\d?!/g, function(c) { return String.fromCharCode(c.slice(1,-1)); });\n\
+}\n\
+/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\
+\n\
+/*\n\
+ * if escCtrlChars()/unescCtrlChars() still gives problems, use encodeBase64()/decodeBase64() instead\n\
+ */\n\
+var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\
+\n\
+function encodeBase64(str) {  // http://tools.ietf.org/html/rfc4648\n\
+   var o1, o2, o3, h1, h2, h3, h4, bits, i=0, enc='';\n\
+   \n\
+   str = encodeUTF8(str);  // encode multi-byte chars into UTF-8 for byte-array\n\
+\n\
+   do {  // pack three octets into four hexets\n\
+      o1 = str.charCodeAt(i++);\n\
+      o2 = str.charCodeAt(i++);\n\
+      o3 = str.charCodeAt(i++);\n\
+      \n\
+      bits = o1<<16 | o2<<8 | o3;\n\
+      \n\
+      h1 = bits>>18 & 0x3f;\n\
+      h2 = bits>>12 & 0x3f;\n\
+      h3 = bits>>6 & 0x3f;\n\
+      h4 = bits & 0x3f;\n\
+      \n\
+      // end of string? index to '=' in b64\n\
+      if (isNaN(o3)) h4 = 64;\n\
+      if (isNaN(o2)) h3 = 64;\n\
+      \n\
+      // use hexets to index into b64, and append result to encoded string\n\
+      enc += b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n\
+   } while (i < str.length);\n\
+   \n\
+   return enc;\n\
+}\n\
+\n\
+function decodeBase64(str) {\n\
+   var o1, o2, o3, h1, h2, h3, h4, bits, i=0, enc='';\n\
+\n\
+   do {  // unpack four hexets into three octets using index points in b64\n\
+      h1 = b64.indexOf(str.charAt(i++));\n\
+      h2 = b64.indexOf(str.charAt(i++));\n\
+      h3 = b64.indexOf(str.charAt(i++));\n\
+      h4 = b64.indexOf(str.charAt(i++));\n\
+      \n\
+      bits = h1<<18 | h2<<12 | h3<<6 | h4;\n\
+      \n\
+      o1 = bits>>16 & 0xff;\n\
+      o2 = bits>>8 & 0xff;\n\
+      o3 = bits & 0xff;\n\
+      \n\
+      if (h3 == 64)      enc += String.fromCharCode(o1);\n\
+      else if (h4 == 64) enc += String.fromCharCode(o1, o2);\n\
+      else               enc += String.fromCharCode(o1, o2, o3);\n\
+   } while (i < str.length);\n\
+\n\
+   return decodeUTF8(enc);  // decode UTF-8 byte-array back to Unicode\n\
+}\n\
+\n\
+function encodeUTF8(str) {  // encode multi-byte string into utf-8 multiple single-byte characters \n\
+  str = str.replace(\n\
+      /[\\u0080-\\u07ff]/g,  // U+0080 - U+07FF = 2-byte chars\n\
+      function(c) { \n\
+        var cc = c.charCodeAt(0);\n\
+        return String.fromCharCode(0xc0 | cc>>6, 0x80 | cc&0x3f); }\n\
+    );\n\
+  str = str.replace(\n\
+      /[\\u0800-\\uffff]/g,  // U+0800 - U+FFFF = 3-byte chars\n\
+      function(c) { \n\
+        var cc = c.charCodeAt(0); \n\
+        return String.fromCharCode(0xe0 | cc>>12, 0x80 | cc>>6&0x3F, 0x80 | cc&0x3f); }\n\
+    );\n\
+  return str;\n\
+}\n\
+\n\
+function decodeUTF8(str) {  // decode utf-8 encoded string back into multi-byte characters\n\
+  str = str.replace(\n\
+      /[\\u00c0-\\u00df][\\u0080-\\u00bf]/g,                 // 2-byte chars\n\
+      function(c) { \n\
+        var cc = (c.charCodeAt(0)&0x1f)<<6 | c.charCodeAt(1)&0x3f;\n\
+        return String.fromCharCode(cc); }\n\
+    );\n\
+  str = str.replace(\n\
+      /[\\u00e0-\\u00ef][\\u0080-\\u00bf][\\u0080-\\u00bf]/g,  // 3-byte chars\n\
+      function(c) { \n\
+        var cc = (c.charCodeAt(0)&0x0f)<<12 | (c.charCodeAt(1)&0x3f<<6) | c.charCodeAt(2)&0x3f; \n\
+        return String.fromCharCode(cc); }\n\
+    );\n\
+  return str;\n\
+}\n\
+\n\
+\n\
+function byteArrayToHexStr(b) {  // convert byte array to hex string for displaying test vectors\n\
+  var s = '';\n\
+  for (var i=0; i<b.length; i++) s += b[i].toString(16) + ' ';\n\
+  return s;\n\
+}\n\
+\n\
+/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\
+\n\
+\n\
+var plainText = \"ROMEO: But, soft! what light through yonder window breaks?\\n\\\n\
+It is the east, and Juliet is the sun.\\n\\\n\
+Arise, fair sun, and kill the envious moon,\\n\\\n\
+Who is already sick and pale with grief,\\n\\\n\
+That thou her maid art far more fair than she:\\n\\\n\
+Be not her maid, since she is envious;\\n\\\n\
+Her vestal livery is but sick and green\\n\\\n\
+And none but fools do wear it; cast it off.\\n\\\n\
+It is my lady, O, it is my love!\\n\\\n\
+O, that she knew she were!\\n\\\n\
+She speaks yet she says nothing: what of that?\\n\\\n\
+Her eye discourses; I will answer it.\\n\\\n\
+I am too bold, 'tis not to me she speaks:\\n\\\n\
+Two of the fairest stars in all the heaven,\\n\\\n\
+Having some business, do entreat her eyes\\n\\\n\
+To twinkle in their spheres till they return.\\n\\\n\
+What if her eyes were there, they in her head?\\n\\\n\
+The brightness of her cheek would shame those stars,\\n\\\n\
+As daylight doth a lamp; her eyes in heaven\\n\\\n\
+Would through the airy region stream so bright\\n\\\n\
+That birds would sing and think it were not night.\\n\\\n\
+See, how she leans her cheek upon her hand!\\n\\\n\
+O, that I were a glove upon that hand,\\n\\\n\
+That I might touch that cheek!\\n\\\n\
+JULIET: Ay me!\\n\\\n\
+ROMEO: She speaks:\\n\\\n\
+O, speak again, bright angel! for thou art\\n\\\n\
+As glorious to this night, being o'er my head\\n\\\n\
+As is a winged messenger of heaven\\n\\\n\
+Unto the white-upturned wondering eyes\\n\\\n\
+Of mortals that fall back to gaze on him\\n\\\n\
+When he bestrides the lazy-pacing clouds\\n\\\n\
+And sails upon the bosom of the air.\";\n\
+\n\
+var password = \"O Romeo, Romeo! wherefore art thou Romeo?\";\n\
+\n\
+var cipherText = AESEncryptCtr(plainText, password, 256);\n\
+var decryptedText = AESDecryptCtr(cipherText, password, 256);\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider crypto-md5</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>crypto-md5</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/*\n\
+ * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n\
+ * Digest Algorithm, as defined in RFC 1321.\n\
+ * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n\
+ * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n\
+ * Distributed under the BSD License\n\
+ * See http://pajhome.org.uk/crypt/md5 for more info.\n\
+ */\n\
+\n\
+/*\n\
+ * Configurable variables. You may need to tweak these to be compatible with\n\
+ * the server-side, but the defaults work in most cases.\n\
+ */\n\
+var hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */\n\
+var b64pad  = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\n\
+var chrsz   = 8;  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\
+\n\
+/*\n\
+ * These are the functions you'll usually want to call\n\
+ * They take string arguments and return either hex or base-64 encoded strings\n\
+ */\n\
+function hex_md5(s){ return binl2hex(core_md5(str2binl(s), s.length * chrsz));}\n\
+function b64_md5(s){ return binl2b64(core_md5(str2binl(s), s.length * chrsz));}\n\
+function str_md5(s){ return binl2str(core_md5(str2binl(s), s.length * chrsz));}\n\
+function hex_hmac_md5(key, data) { return binl2hex(core_hmac_md5(key, data)); }\n\
+function b64_hmac_md5(key, data) { return binl2b64(core_hmac_md5(key, data)); }\n\
+function str_hmac_md5(key, data) { return binl2str(core_hmac_md5(key, data)); }\n\
+\n\
+/*\n\
+ * Perform a simple self-test to see if the VM is working\n\
+ */\n\
+function md5_vm_test()\n\
+{\n\
+  return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";\n\
+}\n\
+\n\
+/*\n\
+ * Calculate the MD5 of an array of little-endian words, and a bit length\n\
+ */\n\
+function core_md5(x, len)\n\
+{\n\
+  /* append padding */\n\
+  x[len >> 5] |= 0x80 << ((len) % 32);\n\
+  x[(((len + 64) >>> 9) << 4) + 14] = len;\n\
+\n\
+  var a =  1732584193;\n\
+  var b = -271733879;\n\
+  var c = -1732584194;\n\
+  var d =  271733878;\n\
+\n\
+  for(var i = 0; i < x.length; i += 16)\n\
+  {\n\
+    var olda = a;\n\
+    var oldb = b;\n\
+    var oldc = c;\n\
+    var oldd = d;\n\
+\n\
+    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n\
+    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n\
+    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n\
+    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n\
+    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n\
+    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n\
+    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n\
+    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n\
+    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n\
+    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n\
+    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);\n\
+    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n\
+    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n\
+    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n\
+    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n\
+    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\
+\n\
+    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n\
+    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n\
+    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n\
+    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n\
+    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n\
+    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n\
+    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n\
+    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n\
+    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n\
+    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n\
+    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n\
+    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n\
+    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n\
+    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n\
+    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n\
+    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\
+\n\
+    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n\
+    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n\
+    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n\
+    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n\
+    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n\
+    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n\
+    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n\
+    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n\
+    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n\
+    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n\
+    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n\
+    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n\
+    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n\
+    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n\
+    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n\
+    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\
+\n\
+    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n\
+    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n\
+    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n\
+    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n\
+    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n\
+    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n\
+    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n\
+    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n\
+    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n\
+    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n\
+    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n\
+    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n\
+    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n\
+    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n\
+    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n\
+    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\
+\n\
+    a = safe_add(a, olda);\n\
+    b = safe_add(b, oldb);\n\
+    c = safe_add(c, oldc);\n\
+    d = safe_add(d, oldd);\n\
+  }\n\
+  return Array(a, b, c, d);\n\
+\n\
+}\n\
+\n\
+/*\n\
+ * These functions implement the four basic operations the algorithm uses.\n\
+ */\n\
+function md5_cmn(q, a, b, x, s, t)\n\
+{\n\
+  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);\n\
+}\n\
+function md5_ff(a, b, c, d, x, s, t)\n\
+{\n\
+  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n\
+}\n\
+function md5_gg(a, b, c, d, x, s, t)\n\
+{\n\
+  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n\
+}\n\
+function md5_hh(a, b, c, d, x, s, t)\n\
+{\n\
+  return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n\
+}\n\
+function md5_ii(a, b, c, d, x, s, t)\n\
+{\n\
+  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n\
+}\n\
+\n\
+/*\n\
+ * Calculate the HMAC-MD5, of a key and some data\n\
+ */\n\
+function core_hmac_md5(key, data)\n\
+{\n\
+  var bkey = str2binl(key);\n\
+  if(bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz);\n\
+\n\
+  var ipad = Array(16), opad = Array(16);\n\
+  for(var i = 0; i < 16; i++)\n\
+  {\n\
+    ipad[i] = bkey[i] ^ 0x36363636;\n\
+    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n\
+  }\n\
+\n\
+  var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);\n\
+  return core_md5(opad.concat(hash), 512 + 128);\n\
+}\n\
+\n\
+/*\n\
+ * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n\
+ * to work around bugs in some JS interpreters.\n\
+ */\n\
+function safe_add(x, y)\n\
+{\n\
+  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n\
+  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\
+  return (msw << 16) | (lsw & 0xFFFF);\n\
+}\n\
+\n\
+/*\n\
+ * Bitwise rotate a 32-bit number to the left.\n\
+ */\n\
+function bit_rol(num, cnt)\n\
+{\n\
+  return (num << cnt) | (num >>> (32 - cnt));\n\
+}\n\
+\n\
+/*\n\
+ * Convert a string to an array of little-endian words\n\
+ * If chrsz is ASCII, characters >255 have their hi-byte silently ignored.\n\
+ */\n\
+function str2binl(str)\n\
+{\n\
+  var bin = Array();\n\
+  var mask = (1 << chrsz) - 1;\n\
+  for(var i = 0; i < str.length * chrsz; i += chrsz)\n\
+    bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (i%32);\n\
+  return bin;\n\
+}\n\
+\n\
+/*\n\
+ * Convert an array of little-endian words to a string\n\
+ */\n\
+function binl2str(bin)\n\
+{\n\
+  var str = \"\";\n\
+  var mask = (1 << chrsz) - 1;\n\
+  for(var i = 0; i < bin.length * 32; i += chrsz)\n\
+    str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);\n\
+  return str;\n\
+}\n\
+\n\
+/*\n\
+ * Convert an array of little-endian words to a hex string.\n\
+ */\n\
+function binl2hex(binarray)\n\
+{\n\
+  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n\
+  var str = \"\";\n\
+  for(var i = 0; i < binarray.length * 4; i++)\n\
+  {\n\
+    str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n\
+           hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n\
+  }\n\
+  return str;\n\
+}\n\
+\n\
+/*\n\
+ * Convert an array of little-endian words to a base-64 string\n\
+ */\n\
+function binl2b64(binarray)\n\
+{\n\
+  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\
+  var str = \"\";\n\
+  for(var i = 0; i < binarray.length * 4; i += 3)\n\
+  {\n\
+    var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)\n\
+                | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )\n\
+                |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);\n\
+    for(var j = 0; j < 4; j++)\n\
+    {\n\
+      if(i * 8 + j * 6 > binarray.length * 32) str += b64pad;\n\
+      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n\
+    }\n\
+  }\n\
+  return str;\n\
+}\n\
+\n\
+var plainText = \"Rebellious subjects, enemies to peace,\\n\\\n\
+Profaners of this neighbour-stained steel,--\\n\\\n\
+Will they not hear? What, ho! you men, you beasts,\\n\\\n\
+That quench the fire of your pernicious rage\\n\\\n\
+With purple fountains issuing from your veins,\\n\\\n\
+On pain of torture, from those bloody hands\\n\\\n\
+Throw your mistemper'd weapons to the ground,\\n\\\n\
+And hear the sentence of your moved prince.\\n\\\n\
+Three civil brawls, bred of an airy word,\\n\\\n\
+By thee, old Capulet, and Montague,\\n\\\n\
+Have thrice disturb'd the quiet of our streets,\\n\\\n\
+And made Verona's ancient citizens\\n\\\n\
+Cast by their grave beseeming ornaments,\\n\\\n\
+To wield old partisans, in hands as old,\\n\\\n\
+Canker'd with peace, to part your canker'd hate:\\n\\\n\
+If ever you disturb our streets again,\\n\\\n\
+Your lives shall pay the forfeit of the peace.\\n\\\n\
+For this time, all the rest depart away:\\n\\\n\
+You Capulet; shall go along with me:\\n\\\n\
+And, Montague, come you this afternoon,\\n\\\n\
+To know our further pleasure in this case,\\n\\\n\
+To old Free-town, our common judgment-place.\\n\\\n\
+Once more, on pain of death, all men depart.\"\n\
+\n\
+for (var i = 0; i <4; i++) {\n\
+    plainText += plainText;\n\
+}\n\
+\n\
+var md5Output = hex_md5(plainText);\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider crypto-sha1</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>crypto-sha1</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/*\n\
+ * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n\
+ * in FIPS PUB 180-1\n\
+ * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n\
+ * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n\
+ * Distributed under the BSD License\n\
+ * See http://pajhome.org.uk/crypt/md5 for details.\n\
+ */\n\
+\n\
+/*\n\
+ * Configurable variables. You may need to tweak these to be compatible with\n\
+ * the server-side, but the defaults work in most cases.\n\
+ */\n\
+var hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */\n\
+var b64pad  = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\n\
+var chrsz   = 8;  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\
+\n\
+/*\n\
+ * These are the functions you'll usually want to call\n\
+ * They take string arguments and return either hex or base-64 encoded strings\n\
+ */\n\
+function hex_sha1(s){return binb2hex(core_sha1(str2binb(s),s.length * chrsz));}\n\
+function b64_sha1(s){return binb2b64(core_sha1(str2binb(s),s.length * chrsz));}\n\
+function str_sha1(s){return binb2str(core_sha1(str2binb(s),s.length * chrsz));}\n\
+function hex_hmac_sha1(key, data){ return binb2hex(core_hmac_sha1(key, data));}\n\
+function b64_hmac_sha1(key, data){ return binb2b64(core_hmac_sha1(key, data));}\n\
+function str_hmac_sha1(key, data){ return binb2str(core_hmac_sha1(key, data));}\n\
+\n\
+/*\n\
+ * Perform a simple self-test to see if the VM is working\n\
+ */\n\
+function sha1_vm_test()\n\
+{\n\
+  return hex_sha1(\"abc\") == \"a9993e364706816aba3e25717850c26c9cd0d89d\";\n\
+}\n\
+\n\
+/*\n\
+ * Calculate the SHA-1 of an array of big-endian words, and a bit length\n\
+ */\n\
+function core_sha1(x, len)\n\
+{\n\
+  /* append padding */\n\
+  x[len >> 5] |= 0x80 << (24 - len % 32);\n\
+  x[((len + 64 >> 9) << 4) + 15] = len;\n\
+\n\
+  var w = Array(80);\n\
+  var a =  1732584193;\n\
+  var b = -271733879;\n\
+  var c = -1732584194;\n\
+  var d =  271733878;\n\
+  var e = -1009589776;\n\
+\n\
+  for(var i = 0; i < x.length; i += 16)\n\
+  {\n\
+    var olda = a;\n\
+    var oldb = b;\n\
+    var oldc = c;\n\
+    var oldd = d;\n\
+    var olde = e;\n\
+\n\
+    for(var j = 0; j < 80; j++)\n\
+    {\n\
+      if(j < 16) w[j] = x[i + j];\n\
+      else w[j] = rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1);\n\
+      var t = safe_add(safe_add(rol(a, 5), sha1_ft(j, b, c, d)),\n\
+                       safe_add(safe_add(e, w[j]), sha1_kt(j)));\n\
+      e = d;\n\
+      d = c;\n\
+      c = rol(b, 30);\n\
+      b = a;\n\
+      a = t;\n\
+    }\n\
+\n\
+    a = safe_add(a, olda);\n\
+    b = safe_add(b, oldb);\n\
+    c = safe_add(c, oldc);\n\
+    d = safe_add(d, oldd);\n\
+    e = safe_add(e, olde);\n\
+  }\n\
+  return Array(a, b, c, d, e);\n\
+\n\
+}\n\
+\n\
+/*\n\
+ * Perform the appropriate triplet combination function for the current\n\
+ * iteration\n\
+ */\n\
+function sha1_ft(t, b, c, d)\n\
+{\n\
+  if(t < 20) return (b & c) | ((~b) & d);\n\
+  if(t < 40) return b ^ c ^ d;\n\
+  if(t < 60) return (b & c) | (b & d) | (c & d);\n\
+  return b ^ c ^ d;\n\
+}\n\
+\n\
+/*\n\
+ * Determine the appropriate additive constant for the current iteration\n\
+ */\n\
+function sha1_kt(t)\n\
+{\n\
+  return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :\n\
+         (t < 60) ? -1894007588 : -899497514;\n\
+}\n\
+\n\
+/*\n\
+ * Calculate the HMAC-SHA1 of a key and some data\n\
+ */\n\
+function core_hmac_sha1(key, data)\n\
+{\n\
+  var bkey = str2binb(key);\n\
+  if(bkey.length > 16) bkey = core_sha1(bkey, key.length * chrsz);\n\
+\n\
+  var ipad = Array(16), opad = Array(16);\n\
+  for(var i = 0; i < 16; i++)\n\
+  {\n\
+    ipad[i] = bkey[i] ^ 0x36363636;\n\
+    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n\
+  }\n\
+\n\
+  var hash = core_sha1(ipad.concat(str2binb(data)), 512 + data.length * chrsz);\n\
+  return core_sha1(opad.concat(hash), 512 + 160);\n\
+}\n\
+\n\
+/*\n\
+ * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n\
+ * to work around bugs in some JS interpreters.\n\
+ */\n\
+function safe_add(x, y)\n\
+{\n\
+  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n\
+  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\
+  return (msw << 16) | (lsw & 0xFFFF);\n\
+}\n\
+\n\
+/*\n\
+ * Bitwise rotate a 32-bit number to the left.\n\
+ */\n\
+function rol(num, cnt)\n\
+{\n\
+  return (num << cnt) | (num >>> (32 - cnt));\n\
+}\n\
+\n\
+/*\n\
+ * Convert an 8-bit or 16-bit string to an array of big-endian words\n\
+ * In 8-bit function, characters >255 have their hi-byte silently ignored.\n\
+ */\n\
+function str2binb(str)\n\
+{\n\
+  var bin = Array();\n\
+  var mask = (1 << chrsz) - 1;\n\
+  for(var i = 0; i < str.length * chrsz; i += chrsz)\n\
+    bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (32 - chrsz - i%32);\n\
+  return bin;\n\
+}\n\
+\n\
+/*\n\
+ * Convert an array of big-endian words to a string\n\
+ */\n\
+function binb2str(bin)\n\
+{\n\
+  var str = \"\";\n\
+  var mask = (1 << chrsz) - 1;\n\
+  for(var i = 0; i < bin.length * 32; i += chrsz)\n\
+    str += String.fromCharCode((bin[i>>5] >>> (32 - chrsz - i%32)) & mask);\n\
+  return str;\n\
+}\n\
+\n\
+/*\n\
+ * Convert an array of big-endian words to a hex string.\n\
+ */\n\
+function binb2hex(binarray)\n\
+{\n\
+  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n\
+  var str = \"\";\n\
+  for(var i = 0; i < binarray.length * 4; i++)\n\
+  {\n\
+    str += hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8+4)) & 0xF) +\n\
+           hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8  )) & 0xF);\n\
+  }\n\
+  return str;\n\
+}\n\
+\n\
+/*\n\
+ * Convert an array of big-endian words to a base-64 string\n\
+ */\n\
+function binb2b64(binarray)\n\
+{\n\
+  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\
+  var str = \"\";\n\
+  for(var i = 0; i < binarray.length * 4; i += 3)\n\
+  {\n\
+    var triplet = (((binarray[i   >> 2] >> 8 * (3 -  i   %4)) & 0xFF) << 16)\n\
+                | (((binarray[i+1 >> 2] >> 8 * (3 - (i+1)%4)) & 0xFF) << 8 )\n\
+                |  ((binarray[i+2 >> 2] >> 8 * (3 - (i+2)%4)) & 0xFF);\n\
+    for(var j = 0; j < 4; j++)\n\
+    {\n\
+      if(i * 8 + j * 6 > binarray.length * 32) str += b64pad;\n\
+      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n\
+    }\n\
+  }\n\
+  return str;\n\
+}\n\
+\n\
+\n\
+var plainText = \"Two households, both alike in dignity,\\n\\\n\
+In fair Verona, where we lay our scene,\\n\\\n\
+From ancient grudge break to new mutiny,\\n\\\n\
+Where civil blood makes civil hands unclean.\\n\\\n\
+From forth the fatal loins of these two foes\\n\\\n\
+A pair of star-cross'd lovers take their life;\\n\\\n\
+Whole misadventured piteous overthrows\\n\\\n\
+Do with their death bury their parents' strife.\\n\\\n\
+The fearful passage of their death-mark'd love,\\n\\\n\
+And the continuance of their parents' rage,\\n\\\n\
+Which, but their children's end, nought could remove,\\n\\\n\
+Is now the two hours' traffic of our stage;\\n\\\n\
+The which if you with patient ears attend,\\n\\\n\
+What here shall miss, our toil shall strive to mend.\";\n\
+\n\
+for (var i = 0; i <4; i++) {\n\
+    plainText += plainText;\n\
+}\n\
+\n\
+var sha1Output = hex_sha1(plainText);\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider date-format-tofte</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>date-format-tofte</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+function arrayExists(array, x) {\n\
+    for (var i = 0; i < array.length; i++) {\n\
+        if (array[i] == x) return true;\n\
+    }\n\
+    return false;\n\
+}\n\
+\n\
+Date.prototype.formatDate = function (input,time) {\n\
+    // formatDate :\n\
+    // a PHP date like function, for formatting date strings\n\
+    // See: http://www.php.net/date\n\
+    //\n\
+    // input : format string\n\
+    // time : epoch time (seconds, and optional)\n\
+    //\n\
+    // if time is not passed, formatting is based on \n\
+    // the current \"this\" date object's set time.\n\
+    //\n\
+    // supported:\n\
+    // a, A, B, d, D, F, g, G, h, H, i, j, l (lowercase L), L, \n\
+    // m, M, n, O, r, s, S, t, U, w, W, y, Y, z\n\
+    //\n\
+    // unsupported:\n\
+    // I (capital i), T, Z    \n\
+\n\
+    var switches =    [\"a\", \"A\", \"B\", \"d\", \"D\", \"F\", \"g\", \"G\", \"h\", \"H\", \n\
+                       \"i\", \"j\", \"l\", \"L\", \"m\", \"M\", \"n\", \"O\", \"r\", \"s\", \n\
+                       \"S\", \"t\", \"U\", \"w\", \"W\", \"y\", \"Y\", \"z\"];\n\
+    var daysLong =    [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \n\
+                       \"Thursday\", \"Friday\", \"Saturday\"];\n\
+    var daysShort =   [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \n\
+                       \"Thu\", \"Fri\", \"Sat\"];\n\
+    var monthsShort = [\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n\
+                       \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\",\n\
+                       \"Oct\", \"Nov\", \"Dec\"];\n\
+    var monthsLong =  [\"January\", \"February\", \"March\", \"April\",\n\
+                       \"May\", \"June\", \"July\", \"August\", \"September\",\n\
+                       \"October\", \"November\", \"December\"];\n\
+    var daysSuffix = [\"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", // 1st - 7th\n\
+                      \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", // 8th - 14th\n\
+                      \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"st\", // 15th - 21st\n\
+                      \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", // 22nd - 28th\n\
+                      \"th\", \"th\", \"st\"];                        // 29th - 31st\n\
+\n\
+    function a() {\n\
+        // Lowercase Ante meridiem and Post meridiem\n\
+        return self.getHours() > 11? \"pm\" : \"am\";\n\
+    }\n\
+    function A() {\n\
+        // Uppercase Ante meridiem and Post meridiem\n\
+        return self.getHours() > 11? \"PM\" : \"AM\";\n\
+    }\n\
+\n\
+    function B(){\n\
+        // Swatch internet time. code simply grabbed from ppk,\n\
+        // since I was feeling lazy:\n\
+        // http://www.xs4all.nl/~ppk/js/beat.html\n\
+        var off = (self.getTimezoneOffset() + 60)*60;\n\
+        var theSeconds = (self.getHours() * 3600) + \n\
+                         (self.getMinutes() * 60) + \n\
+                          self.getSeconds() + off;\n\
+        var beat = Math.floor(theSeconds/86.4);\n\
+        if (beat > 1000) beat -= 1000;\n\
+        if (beat < 0) beat += 1000;\n\
+        if ((\"\"+beat).length == 1) beat = \"00\"+beat;\n\
+        if ((\"\"+beat).length == 2) beat = \"0\"+beat;\n\
+        return beat;\n\
+    }\n\
+    \n\
+    function d() {\n\
+        // Day of the month, 2 digits with leading zeros\n\
+        return new String(self.getDate()).length == 1?\n\
+        \"0\"+self.getDate() : self.getDate();\n\
+    }\n\
+    function D() {\n\
+        // A textual representation of a day, three letters\n\
+        return daysShort[self.getDay()];\n\
+    }\n\
+    function F() {\n\
+        // A full textual representation of a month\n\
+        return monthsLong[self.getMonth()];\n\
+    }\n\
+    function g() {\n\
+        // 12-hour format of an hour without leading zeros\n\
+        return self.getHours() > 12? self.getHours()-12 : self.getHours();\n\
+    }\n\
+    function G() {\n\
+        // 24-hour format of an hour without leading zeros\n\
+        return self.getHours();\n\
+    }\n\
+    function h() {\n\
+        // 12-hour format of an hour with leading zeros\n\
+        if (self.getHours() > 12) {\n\
+          var s = new String(self.getHours()-12);\n\
+          return s.length == 1?\n\
+          \"0\"+ (self.getHours()-12) : self.getHours()-12;\n\
+        } else { \n\
+          var s = new String(self.getHours());\n\
+          return s.length == 1?\n\
+          \"0\"+self.getHours() : self.getHours();\n\
+        }  \n\
+    }\n\
+    function H() {\n\
+        // 24-hour format of an hour with leading zeros\n\
+        return new String(self.getHours()).length == 1?\n\
+        \"0\"+self.getHours() : self.getHours();\n\
+    }\n\
+    function i() {\n\
+        // Minutes with leading zeros\n\
+        return new String(self.getMinutes()).length == 1? \n\
+        \"0\"+self.getMinutes() : self.getMinutes(); \n\
+    }\n\
+    function j() {\n\
+        // Day of the month without leading zeros\n\
+        return self.getDate();\n\
+    }    \n\
+    function l() {\n\
+        // A full textual representation of the day of the week\n\
+        return daysLong[self.getDay()];\n\
+    }\n\
+    function L() {\n\
+        // leap year or not. 1 if leap year, 0 if not.\n\
+        // the logic should match iso's 8601 standard.\n\
+        var y_ = Y();\n\
+        if (         \n\
+            (y_ % 4 == 0 && y_ % 100 != 0) ||\n\
+            (y_ % 4 == 0 && y_ % 100 == 0 && y_ % 400 == 0)\n\
+            ) {\n\
+            return 1;\n\
+        } else {\n\
+            return 0;\n\
+        }\n\
+    }\n\
+    function m() {\n\
+        // Numeric representation of a month, with leading zeros\n\
+        return self.getMonth() < 9?\n\
+        \"0\"+(self.getMonth()+1) : \n\
+        self.getMonth()+1;\n\
+    }\n\
+    function M() {\n\
+        // A short textual representation of a month, three letters\n\
+        return monthsShort[self.getMonth()];\n\
+    }\n\
+    function n() {\n\
+        // Numeric representation of a month, without leading zeros\n\
+        return self.getMonth()+1;\n\
+    }\n\
+    function O() {\n\
+        // Difference to Greenwich time (GMT) in hours\n\
+        var os = Math.abs(self.getTimezoneOffset());\n\
+        var h = \"\"+Math.floor(os/60);\n\
+        var m = \"\"+(os%60);\n\
+        h.length == 1? h = \"0\"+h:1;\n\
+        m.length == 1? m = \"0\"+m:1;\n\
+        return self.getTimezoneOffset() < 0 ? \"+\"+h+m : \"-\"+h+m;\n\
+    }\n\
+    function r() {\n\
+        // RFC 822 formatted date\n\
+        var r; // result\n\
+        //  Thu    ,     21          Dec         2000\n\
+        r = D() + \", \" + j() + \" \" + M() + \" \" + Y() +\n\
+        //        16     :    01     :    07          +0200\n\
+            \" \" + H() + \":\" + i() + \":\" + s() + \" \" + O();\n\
+        return r;\n\
+    }\n\
+    function S() {\n\
+        // English ordinal suffix for the day of the month, 2 characters\n\
+        return daysSuffix[self.getDate()-1];\n\
+    }\n\
+    function s() {\n\
+        // Seconds, with leading zeros\n\
+        return new String(self.getSeconds()).length == 1?\n\
+        \"0\"+self.getSeconds() : self.getSeconds();\n\
+    }\n\
+    function t() {\n\
+\n\
+        // thanks to Matt Bannon for some much needed code-fixes here!\n\
+        var daysinmonths = [null,31,28,31,30,31,30,31,31,30,31,30,31];\n\
+        if (L()==1 && n()==2) return 29; // leap day\n\
+        return daysinmonths[n()];\n\
+    }\n\
+    function U() {\n\
+        // Seconds since the Unix Epoch (January 1 1970 00:00:00 GMT)\n\
+        return Math.round(self.getTime()/1000);\n\
+    }\n\
+    function W() {\n\
+        // Weeknumber, as per ISO specification:\n\
+        // http://www.cl.cam.ac.uk/~mgk25/iso-time.html\n\
+        \n\
+        // if the day is three days before newyears eve,\n\
+        // there's a chance it's \"week 1\" of next year.\n\
+        // here we check for that.\n\
+        var beforeNY = 364+L() - z();\n\
+        var afterNY  = z();\n\
+        var weekday = w()!=0?w()-1:6; // makes sunday (0), into 6.\n\
+        if (beforeNY <= 2 && weekday <= 2-beforeNY) {\n\
+            return 1;\n\
+        }\n\
+        // similarly, if the day is within threedays of newyears\n\
+        // there's a chance it belongs in the old year.\n\
+        var ny = new Date(\"January 1 \" + Y() + \" 00:00:00\");\n\
+        var nyDay = ny.getDay()!=0?ny.getDay()-1:6;\n\
+        if (\n\
+            (afterNY <= 2) && \n\
+            (nyDay >=4)  && \n\
+            (afterNY >= (6-nyDay))\n\
+            ) {\n\
+            // Since I'm not sure we can just always return 53,\n\
+            // i call the function here again, using the last day\n\
+            // of the previous year, as the date, and then just\n\
+            // return that week.\n\
+            var prevNY = new Date(\"December 31 \" + (Y()-1) + \" 00:00:00\");\n\
+            return prevNY.formatDate(\"W\");\n\
+        }\n\
+        \n\
+        // week 1, is the week that has the first thursday in it.\n\
+        // note that this value is not zero index.\n\
+        if (nyDay <= 3) {\n\
+            // first day of the year fell on a thursday, or earlier.\n\
+            return 1 + Math.floor( ( z() + nyDay ) / 7 );\n\
+        } else {\n\
+            // first day of the year fell on a friday, or later.\n\
+            return 1 + Math.floor( ( z() - ( 7 - nyDay ) ) / 7 );\n\
+        }\n\
+    }\n\
+    function w() {\n\
+        // Numeric representation of the day of the week\n\
+        return self.getDay();\n\
+    }\n\
+    \n\
+    function Y() {\n\
+        // A full numeric representation of a year, 4 digits\n\
+\n\
+        // we first check, if getFullYear is supported. if it\n\
+        // is, we just use that. ppks code is nice, but wont\n\
+        // work with dates outside 1900-2038, or something like that\n\
+        if (self.getFullYear) {\n\
+            var newDate = new Date(\"January 1 2001 00:00:00 +0000\");\n\
+            var x = newDate .getFullYear();\n\
+            if (x == 2001) {              \n\
+                // i trust the method now\n\
+                return self.getFullYear();\n\
+            }\n\
+        }\n\
+        // else, do this:\n\
+        // codes thanks to ppk:\n\
+        // http://www.xs4all.nl/~ppk/js/introdate.html\n\
+        var x = self.getYear();\n\
+        var y = x % 100;\n\
+        y += (y < 38) ? 2000 : 1900;\n\
+        return y;\n\
+    }\n\
+    function y() {\n\
+        // A two-digit representation of a year\n\
+        var y = Y()+\"\";\n\
+        return y.substring(y.length-2,y.length);\n\
+    }\n\
+    function z() {\n\
+        // The day of the year, zero indexed! 0 through 366\n\
+        var t = new Date(\"January 1 \" + Y() + \" 00:00:00\");\n\
+        var diff = self.getTime() - t.getTime();\n\
+        return Math.floor(diff/1000/60/60/24);\n\
+    }\n\
+        \n\
+    var self = this;\n\
+    if (time) {\n\
+        // save time\n\
+        var prevTime = self.getTime();\n\
+        self.setTime(time);\n\
+    }\n\
+    \n\
+    var ia = input.split(\"\");\n\
+    var ij = 0;\n\
+    while (ia[ij]) {\n\
+        if (ia[ij] == \"\\\\\") {\n\
+            // this is our way of allowing users to escape stuff\n\
+            ia.splice(ij,1);\n\
+        } else {\n\
+            if (arrayExists(switches,ia[ij])) {\n\
+                ia[ij] = eval(ia[ij] + \"()\");\n\
+            }\n\
+        }\n\
+        ij++;\n\
+    }\n\
+    // reset time, back to what it was\n\
+    if (prevTime) {\n\
+        self.setTime(prevTime);\n\
+    }\n\
+    return ia.join(\"\");\n\
+}\n\
+\n\
+var date = new Date(\"1/1/2007 1:11:11\");\n\
+\n\
+for (i = 0; i < 500; ++i) {\n\
+    var shortFormat = date.formatDate(\"Y-m-d\");\n\
+    var longFormat = date.formatDate(\"l, F d, Y g:i:s A\");\n\
+    date.setTime(date.getTime() + 84266956);\n\
+}\n\
+\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider date-format-xparb</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>date-format-xparb</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/*\n\
+ * Copyright (C) 2004 Baron Schwartz <baron at sequent dot org>\n\
+ *\n\
+ * This program is free software; you can redistribute it and/or modify it\n\
+ * under the terms of the GNU Lesser General Public License as published by the\n\
+ * Free Software Foundation, version 2.1.\n\
+ *\n\
+ * This program is distributed in the hope that it will be useful, but WITHOUT\n\
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n\
+ * FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more\n\
+ * details.\n\
+ */\n\
+\n\
+Date.parseFunctions = {count:0};\n\
+Date.parseRegexes = [];\n\
+Date.formatFunctions = {count:0};\n\
+\n\
+Date.prototype.dateFormat = function(format) {\n\
+    if (Date.formatFunctions[format] == null) {\n\
+        Date.createNewFormat(format);\n\
+    }\n\
+    var func = Date.formatFunctions[format];\n\
+    return this[func]();\n\
+}\n\
+\n\
+Date.createNewFormat = function(format) {\n\
+    var funcName = \"format\" + Date.formatFunctions.count++;\n\
+    Date.formatFunctions[format] = funcName;\n\
+    var code = \"Date.prototype.\" + funcName + \" = function(){return \";\n\
+    var special = false;\n\
+    var ch = '';\n\
+    for (var i = 0; i < format.length; ++i) {\n\
+        ch = format.charAt(i);\n\
+        if (!special && ch == \"\\\\\") {\n\
+            special = true;\n\
+        }\n\
+        else if (special) {\n\
+            special = false;\n\
+            code += \"'\" + String.escape(ch) + \"' + \";\n\
+        }\n\
+        else {\n\
+            code += Date.getFormatCode(ch);\n\
+        }\n\
+    }\n\
+    eval(code.substring(0, code.length - 3) + \";}\");\n\
+}\n\
+\n\
+Date.getFormatCode = function(character) {\n\
+    switch (character) {\n\
+    case \"d\":\n\
+        return \"String.leftPad(this.getDate(), 2, '0') + \";\n\
+    case \"D\":\n\
+        return \"Date.dayNames[this.getDay()].substring(0, 3) + \";\n\
+    case \"j\":\n\
+        return \"this.getDate() + \";\n\
+    case \"l\":\n\
+        return \"Date.dayNames[this.getDay()] + \";\n\
+    case \"S\":\n\
+        return \"this.getSuffix() + \";\n\
+    case \"w\":\n\
+        return \"this.getDay() + \";\n\
+    case \"z\":\n\
+        return \"this.getDayOfYear() + \";\n\
+    case \"W\":\n\
+        return \"this.getWeekOfYear() + \";\n\
+    case \"F\":\n\
+        return \"Date.monthNames[this.getMonth()] + \";\n\
+    case \"m\":\n\
+        return \"String.leftPad(this.getMonth() + 1, 2, '0') + \";\n\
+    case \"M\":\n\
+        return \"Date.monthNames[this.getMonth()].substring(0, 3) + \";\n\
+    case \"n\":\n\
+        return \"(this.getMonth() + 1) + \";\n\
+    case \"t\":\n\
+        return \"this.getDaysInMonth() + \";\n\
+    case \"L\":\n\
+        return \"(this.isLeapYear() ? 1 : 0) + \";\n\
+    case \"Y\":\n\
+        return \"this.getFullYear() + \";\n\
+    case \"y\":\n\
+        return \"('' + this.getFullYear()).substring(2, 4) + \";\n\
+    case \"a\":\n\
+        return \"(this.getHours() < 12 ? 'am' : 'pm') + \";\n\
+    case \"A\":\n\
+        return \"(this.getHours() < 12 ? 'AM' : 'PM') + \";\n\
+    case \"g\":\n\
+        return \"((this.getHours() %12) ? this.getHours() % 12 : 12) + \";\n\
+    case \"G\":\n\
+        return \"this.getHours() + \";\n\
+    case \"h\":\n\
+        return \"String.leftPad((this.getHours() %12) ? this.getHours() % 12 : 12, 2, '0') + \";\n\
+    case \"H\":\n\
+        return \"String.leftPad(this.getHours(), 2, '0') + \";\n\
+    case \"i\":\n\
+        return \"String.leftPad(this.getMinutes(), 2, '0') + \";\n\
+    case \"s\":\n\
+        return \"String.leftPad(this.getSeconds(), 2, '0') + \";\n\
+    case \"O\":\n\
+        return \"this.getGMTOffset() + \";\n\
+    case \"T\":\n\
+        return \"this.getTimezone() + \";\n\
+    case \"Z\":\n\
+        return \"(this.getTimezoneOffset() * -60) + \";\n\
+    default:\n\
+        return \"'\" + String.escape(character) + \"' + \";\n\
+    }\n\
+}\n\
+\n\
+Date.parseDate = function(input, format) {\n\
+    if (Date.parseFunctions[format] == null) {\n\
+        Date.createParser(format);\n\
+    }\n\
+    var func = Date.parseFunctions[format];\n\
+    return Date[func](input);\n\
+}\n\
+\n\
+Date.createParser = function(format) {\n\
+    var funcName = \"parse\" + Date.parseFunctions.count++;\n\
+    var regexNum = Date.parseRegexes.length;\n\
+    var currentGroup = 1;\n\
+    Date.parseFunctions[format] = funcName;\n\
+\n\
+    var code = \"Date.\" + funcName + \" = function(input){\\n\"\n\
+        + \"var y = -1, m = -1, d = -1, h = -1, i = -1, s = -1;\\n\"\n\
+        + \"var d = new Date();\\n\"\n\
+        + \"y = d.getFullYear();\\n\"\n\
+        + \"m = d.getMonth();\\n\"\n\
+        + \"d = d.getDate();\\n\"\n\
+        + \"var results = input.match(Date.parseRegexes[\" + regexNum + \"]);\\n\"\n\
+        + \"if (results && results.length > 0) {\"\n\
+    var regex = \"\";\n\
+\n\
+    var special = false;\n\
+    var ch = '';\n\
+    for (var i = 0; i < format.length; ++i) {\n\
+        ch = format.charAt(i);\n\
+        if (!special && ch == \"\\\\\") {\n\
+            special = true;\n\
+        }\n\
+        else if (special) {\n\
+            special = false;\n\
+            regex += String.escape(ch);\n\
+        }\n\
+        else {\n\
+            obj = Date.formatCodeToRegex(ch, currentGroup);\n\
+            currentGroup += obj.g;\n\
+            regex += obj.s;\n\
+            if (obj.g && obj.c) {\n\
+                code += obj.c;\n\
+            }\n\
+        }\n\
+    }\n\
+\n\
+    code += \"if (y > 0 && m >= 0 && d > 0 && h >= 0 && i >= 0 && s >= 0)\\n\"\n\
+        + \"{return new Date(y, m, d, h, i, s);}\\n\"\n\
+        + \"else if (y > 0 && m >= 0 && d > 0 && h >= 0 && i >= 0)\\n\"\n\
+        + \"{return new Date(y, m, d, h, i);}\\n\"\n\
+        + \"else if (y > 0 && m >= 0 && d > 0 && h >= 0)\\n\"\n\
+        + \"{return new Date(y, m, d, h);}\\n\"\n\
+        + \"else if (y > 0 && m >= 0 && d > 0)\\n\"\n\
+        + \"{return new Date(y, m, d);}\\n\"\n\
+        + \"else if (y > 0 && m >= 0)\\n\"\n\
+        + \"{return new Date(y, m);}\\n\"\n\
+        + \"else if (y > 0)\\n\"\n\
+        + \"{return new Date(y);}\\n\"\n\
+        + \"}return null;}\";\n\
+\n\
+    Date.parseRegexes[regexNum] = new RegExp(\"^\" + regex + \"$\");\n\
+    eval(code);\n\
+}\n\
+\n\
+Date.formatCodeToRegex = function(character, currentGroup) {\n\
+    switch (character) {\n\
+    case \"D\":\n\
+        return {g:0,\n\
+        c:null,\n\
+        s:\"(?:Sun|Mon|Tue|Wed|Thu|Fri|Sat)\"};\n\
+    case \"j\":\n\
+    case \"d\":\n\
+        return {g:1,\n\
+            c:\"d = parseInt(results[\" + currentGroup + \"], 10);\\n\",\n\
+            s:\"(\\\\d{1,2})\"};\n\
+    case \"l\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"(?:\" + Date.dayNames.join(\"|\") + \")\"};\n\
+    case \"S\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"(?:st|nd|rd|th)\"};\n\
+    case \"w\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"\\\\d\"};\n\
+    case \"z\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"(?:\\\\d{1,3})\"};\n\
+    case \"W\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"(?:\\\\d{2})\"};\n\
+    case \"F\":\n\
+        return {g:1,\n\
+            c:\"m = parseInt(Date.monthNumbers[results[\" + currentGroup + \"].substring(0, 3)], 10);\\n\",\n\
+            s:\"(\" + Date.monthNames.join(\"|\") + \")\"};\n\
+    case \"M\":\n\
+        return {g:1,\n\
+            c:\"m = parseInt(Date.monthNumbers[results[\" + currentGroup + \"]], 10);\\n\",\n\
+            s:\"(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\"};\n\
+    case \"n\":\n\
+    case \"m\":\n\
+        return {g:1,\n\
+            c:\"m = parseInt(results[\" + currentGroup + \"], 10) - 1;\\n\",\n\
+            s:\"(\\\\d{1,2})\"};\n\
+    case \"t\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"\\\\d{1,2}\"};\n\
+    case \"L\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"(?:1|0)\"};\n\
+    case \"Y\":\n\
+        return {g:1,\n\
+            c:\"y = parseInt(results[\" + currentGroup + \"], 10);\\n\",\n\
+            s:\"(\\\\d{4})\"};\n\
+    case \"y\":\n\
+        return {g:1,\n\
+            c:\"var ty = parseInt(results[\" + currentGroup + \"], 10);\\n\"\n\
+                + \"y = ty > Date.y2kYear ? 1900 + ty : 2000 + ty;\\n\",\n\
+            s:\"(\\\\d{1,2})\"};\n\
+    case \"a\":\n\
+        return {g:1,\n\
+            c:\"if (results[\" + currentGroup + \"] == 'am') {\\n\"\n\
+                + \"if (h == 12) { h = 0; }\\n\"\n\
+                + \"} else { if (h < 12) { h += 12; }}\",\n\
+            s:\"(am|pm)\"};\n\
+    case \"A\":\n\
+        return {g:1,\n\
+            c:\"if (results[\" + currentGroup + \"] == 'AM') {\\n\"\n\
+                + \"if (h == 12) { h = 0; }\\n\"\n\
+                + \"} else { if (h < 12) { h += 12; }}\",\n\
+            s:\"(AM|PM)\"};\n\
+    case \"g\":\n\
+    case \"G\":\n\
+    case \"h\":\n\
+    case \"H\":\n\
+        return {g:1,\n\
+            c:\"h = parseInt(results[\" + currentGroup + \"], 10);\\n\",\n\
+            s:\"(\\\\d{1,2})\"};\n\
+    case \"i\":\n\
+        return {g:1,\n\
+            c:\"i = parseInt(results[\" + currentGroup + \"], 10);\\n\",\n\
+            s:\"(\\\\d{2})\"};\n\
+    case \"s\":\n\
+        return {g:1,\n\
+            c:\"s = parseInt(results[\" + currentGroup + \"], 10);\\n\",\n\
+            s:\"(\\\\d{2})\"};\n\
+    case \"O\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"[+-]\\\\d{4}\"};\n\
+    case \"T\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"[A-Z]{3}\"};\n\
+    case \"Z\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"[+-]\\\\d{1,5}\"};\n\
+    default:\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:String.escape(character)};\n\
+    }\n\
+}\n\
+\n\
+Date.prototype.getTimezone = function() {\n\
+    return this.toString().replace(\n\
+        /^.*? ([A-Z]{3}) [0-9]{4}.*$/, \"$1\").replace(\n\
+        /^.*?\\(([A-Z])[a-z]+ ([A-Z])[a-z]+ ([A-Z])[a-z]+\\)$/, \"$1$2$3\");\n\
+}\n\
+\n\
+Date.prototype.getGMTOffset = function() {\n\
+    return (this.getTimezoneOffset() > 0 ? \"-\" : \"+\")\n\
+        + String.leftPad(Math.floor(this.getTimezoneOffset() / 60), 2, \"0\")\n\
+        + String.leftPad(this.getTimezoneOffset() % 60, 2, \"0\");\n\
+}\n\
+\n\
+Date.prototype.getDayOfYear = function() {\n\
+    var num = 0;\n\
+    Date.daysInMonth[1] = this.isLeapYear() ? 29 : 28;\n\
+    for (var i = 0; i < this.getMonth(); ++i) {\n\
+        num += Date.daysInMonth[i];\n\
+    }\n\
+    return num + this.getDate() - 1;\n\
+}\n\
+\n\
+Date.prototype.getWeekOfYear = function() {\n\
+    // Skip to Thursday of this week\n\
+    var now = this.getDayOfYear() + (4 - this.getDay());\n\
+    // Find the first Thursday of the year\n\
+    var jan1 = new Date(this.getFullYear(), 0, 1);\n\
+    var then = (7 - jan1.getDay() + 4);\n\
+    document.write(then);\n\
+    return String.leftPad(((now - then) / 7) + 1, 2, \"0\");\n\
+}\n\
+\n\
+Date.prototype.isLeapYear = function() {\n\
+    var year = this.getFullYear();\n\
+    return ((year & 3) == 0 && (year % 100 || (year % 400 == 0 && year)));\n\
+}\n\
+\n\
+Date.prototype.getFirstDayOfMonth = function() {\n\
+    var day = (this.getDay() - (this.getDate() - 1)) % 7;\n\
+    return (day < 0) ? (day + 7) : day;\n\
+}\n\
+\n\
+Date.prototype.getLastDayOfMonth = function() {\n\
+    var day = (this.getDay() + (Date.daysInMonth[this.getMonth()] - this.getDate())) % 7;\n\
+    return (day < 0) ? (day + 7) : day;\n\
+}\n\
+\n\
+Date.prototype.getDaysInMonth = function() {\n\
+    Date.daysInMonth[1] = this.isLeapYear() ? 29 : 28;\n\
+    return Date.daysInMonth[this.getMonth()];\n\
+}\n\
+\n\
+Date.prototype.getSuffix = function() {\n\
+    switch (this.getDate()) {\n\
+        case 1:\n\
+        case 21:\n\
+        case 31:\n\
+            return \"st\";\n\
+        case 2:\n\
+        case 22:\n\
+            return \"nd\";\n\
+        case 3:\n\
+        case 23:\n\
+            return \"rd\";\n\
+        default:\n\
+            return \"th\";\n\
+    }\n\
+}\n\
+\n\
+String.escape = function(string) {\n\
+    return string.replace(/('|\\\\)/g, \"\\\\$1\");\n\
+}\n\
+\n\
+String.leftPad = function (val, size, ch) {\n\
+    var result = new String(val);\n\
+    if (ch == null) {\n\
+        ch = \" \";\n\
+    }\n\
+    while (result.length < size) {\n\
+        result = ch + result;\n\
+    }\n\
+    return result;\n\
+}\n\
+\n\
+Date.daysInMonth = [31,28,31,30,31,30,31,31,30,31,30,31];\n\
+Date.monthNames =\n\
+   [\"January\",\n\
+    \"February\",\n\
+    \"March\",\n\
+    \"April\",\n\
+    \"May\",\n\
+    \"June\",\n\
+    \"July\",\n\
+    \"August\",\n\
+    \"September\",\n\
+    \"October\",\n\
+    \"November\",\n\
+    \"December\"];\n\
+Date.dayNames =\n\
+   [\"Sunday\",\n\
+    \"Monday\",\n\
+    \"Tuesday\",\n\
+    \"Wednesday\",\n\
+    \"Thursday\",\n\
+    \"Friday\",\n\
+    \"Saturday\"];\n\
+Date.y2kYear = 50;\n\
+Date.monthNumbers = {\n\
+    Jan:0,\n\
+    Feb:1,\n\
+    Mar:2,\n\
+    Apr:3,\n\
+    May:4,\n\
+    Jun:5,\n\
+    Jul:6,\n\
+    Aug:7,\n\
+    Sep:8,\n\
+    Oct:9,\n\
+    Nov:10,\n\
+    Dec:11};\n\
+Date.patterns = {\n\
+    ISO8601LongPattern:\"Y-m-d H:i:s\",\n\
+    ISO8601ShortPattern:\"Y-m-d\",\n\
+    ShortDatePattern: \"n/j/Y\",\n\
+    LongDatePattern: \"l, F d, Y\",\n\
+    FullDateTimePattern: \"l, F d, Y g:i:s A\",\n\
+    MonthDayPattern: \"F d\",\n\
+    ShortTimePattern: \"g:i A\",\n\
+    LongTimePattern: \"g:i:s A\",\n\
+    SortableDateTimePattern: \"Y-m-d\\\\TH:i:s\",\n\
+    UniversalSortableDateTimePattern: \"Y-m-d H:i:sO\",\n\
+    YearMonthPattern: \"F, Y\"};\n\
+\n\
+var date = new Date(\"1/1/2007 1:11:11\");\n\
+\n\
+for (i = 0; i < 4000; ++i) {\n\
+    var shortFormat = date.dateFormat(\"Y-m-d\");\n\
+    var longFormat = date.dateFormat(\"l, F d, Y g:i:s A\");\n\
+    date.setTime(date.getTime() + 84266956);\n\
+}\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider math-cordic</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>math-cordic</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/*\n\
+ * Copyright (C) Rich Moore.  All rights reserved.\n\
+ *\n\
+ * Redistribution and use in source and binary forms, with or without\n\
+ * modification, are permitted provided that the following conditions\n\
+ * are met:\n\
+ * 1. Redistributions of source code must retain the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer.\n\
+ * 2. Redistributions in binary form must reproduce the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer in the\n\
+ *    documentation and/or other materials provided with the distribution.\n\
+ *\n\
+ * THIS SOFTWARE IS PROVIDED BY CONTRIBUTORS ``AS IS'' AND ANY\n\
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+ */\n\
+\n\
+/////. Start CORDIC\n\
+\n\
+var AG_CONST = 0.6072529350;\n\
+\n\
+function FIXED(X)\n\
+{\n\
+  return X * 65536.0;\n\
+}\n\
+\n\
+function FLOAT(X)\n\
+{\n\
+  return X / 65536.0;\n\
+}\n\
+\n\
+function DEG2RAD(X)\n\
+{\n\
+  return 0.017453 * (X);\n\
+}\n\
+\n\
+var Angles = [\n\
+  FIXED(45.0), FIXED(26.565), FIXED(14.0362), FIXED(7.12502),\n\
+  FIXED(3.57633), FIXED(1.78991), FIXED(0.895174), FIXED(0.447614),\n\
+  FIXED(0.223811), FIXED(0.111906), FIXED(0.055953),\n\
+  FIXED(0.027977) \n\
+              ];\n\
+\n\
+\n\
+function cordicsincos() {\n\
+    var X;\n\
+    var Y;\n\
+    var TargetAngle;\n\
+    var CurrAngle;\n\
+    var Step;\n\
+ \n\
+    X = FIXED(AG_CONST);         /* AG_CONST * cos(0) */\n\
+    Y = 0;                       /* AG_CONST * sin(0) */\n\
+\n\
+    TargetAngle = FIXED(28.027);\n\
+    CurrAngle = 0;\n\
+    for (Step = 0; Step < 12; Step++) {\n\
+        var NewX;\n\
+        if (TargetAngle > CurrAngle) {\n\
+            NewX = X - (Y >> Step);\n\
+            Y = (X >> Step) + Y;\n\
+            X = NewX;\n\
+            CurrAngle += Angles[Step];\n\
+        } else {\n\
+            NewX = X + (Y >> Step);\n\
+            Y = -(X >> Step) + Y;\n\
+            X = NewX;\n\
+            CurrAngle -= Angles[Step];\n\
+        }\n\
+    }\n\
+}\n\
+\n\
+///// End CORDIC\n\
+\n\
+function cordic( runs ) {\n\
+  var start = new Date();\n\
+\n\
+  for ( var i = 0 ; i < runs ; i++ ) {\n\
+      cordicsincos();\n\
+  }\n\
+\n\
+  var end = new Date();\n\
+\n\
+  return end.getTime() - start.getTime();\n\
+}\n\
+\n\
+cordic(25000);\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider math-partial-sums</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>math-partial-sums</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// The Computer Language Shootout\n\
+// http://shootout.alioth.debian.org/\n\
+// contributed by Isaac Gouy\n\
+\n\
+function partial(n){\n\
+    var a1 = a2 = a3 = a4 = a5 = a6 = a7 = a8 = a9 = 0.0;\n\
+    var twothirds = 2.0/3.0;\n\
+    var alt = -1.0;\n\
+    var k2 = k3 = sk = ck = 0.0;\n\
+    \n\
+    for (var k = 1; k <= n; k++){\n\
+        k2 = k*k;\n\
+        k3 = k2*k;\n\
+        sk = Math.sin(k);\n\
+        ck = Math.cos(k);\n\
+        alt = -alt;\n\
+        \n\
+        a1 += Math.pow(twothirds,k-1);\n\
+        a2 += Math.pow(k,-0.5);\n\
+        a3 += 1.0/(k*(k+1.0));\n\
+        a4 += 1.0/(k3 * sk*sk);\n\
+        a5 += 1.0/(k3 * ck*ck);\n\
+        a6 += 1.0/k;\n\
+        a7 += 1.0/k2;\n\
+        a8 += alt/k;\n\
+        a9 += alt/(2*k -1);\n\
+    }\n\
+}\n\
+\n\
+for (var i = 1024; i <= 16384; i *= 2) {\n\
+    partial(i);\n\
+}\n\
+\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider math-spectral-norm</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>math-spectral-norm</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// The Great Computer Language Shootout\n\
+// http://shootout.alioth.debian.org/\n\
+//\n\
+// contributed by Ian Osgood\n\
+\n\
+function A(i,j) {\n\
+  return 1/((i+j)*(i+j+1)/2+i+1);\n\
+}\n\
+\n\
+function Au(u,v) {\n\
+  for (var i=0; i<u.length; ++i) {\n\
+    var t = 0;\n\
+    for (var j=0; j<u.length; ++j)\n\
+      t += A(i,j) * u[j];\n\
+    v[i] = t;\n\
+  }\n\
+}\n\
+\n\
+function Atu(u,v) {\n\
+  for (var i=0; i<u.length; ++i) {\n\
+    var t = 0;\n\
+    for (var j=0; j<u.length; ++j)\n\
+      t += A(j,i) * u[j];\n\
+    v[i] = t;\n\
+  }\n\
+}\n\
+\n\
+function AtAu(u,v,w) {\n\
+  Au(u,w);\n\
+  Atu(w,v);\n\
+}\n\
+\n\
+function spectralnorm(n) {\n\
+  var i, u=[], v=[], w=[], vv=0, vBv=0;\n\
+  for (i=0; i<n; ++i) {\n\
+    u[i] = 1; v[i] = w[i] = 0;\n\
+  }\n\
+  for (i=0; i<10; ++i) {\n\
+    AtAu(u,v,w);\n\
+    AtAu(v,u,w);\n\
+  }\n\
+  for (i=0; i<n; ++i) {\n\
+    vBv += u[i]*v[i];\n\
+    vv  += v[i]*v[i];\n\
+  }\n\
+  return Math.sqrt(vBv/vv);\n\
+}\n\
+\n\
+for (var i = 6; i <= 48; i *= 2) {\n\
+    spectralnorm(i);\n\
+}\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider regexp-dna</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>regexp-dna</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// The Computer Language Shootout\n\
+// http://shootout.alioth.debian.org/\n\
+//\n\
+// contributed by Jesse Millikan\n\
+// Base on the Ruby version by jose fco. gonzalez\n\
+\n\
+var l;\n\
+var dnaInput = \">ONE Homo sapiens alu\\n\\\n\
+GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGA\\n\\\n\
+TCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACT\\n\\\n\
+AAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAG\\n\\\n\
+GCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCG\\n\\\n\
+CCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGT\\n\\\n\
+GGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCA\\n\\\n\
+GGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAA\\n\\\n\
+TTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAG\\n\\\n\
+AATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCA\\n\\\n\
+GCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGT\\n\\\n\
+AATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACC\\n\\\n\
+AGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTG\\n\\\n\
+GTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACC\\n\\\n\
+CGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAG\\n\\\n\
+AGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTT\\n\\\n\
+TGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACA\\n\\\n\
+TGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCT\\n\\\n\
+GTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGG\\n\\\n\
+TTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGT\\n\\\n\
+CTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGG\\n\\\n\
+CGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCG\\n\\\n\
+TCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTA\\n\\\n\
+CTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCG\\n\\\n\
+AGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCG\\n\\\n\
+GGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACC\\n\\\n\
+TGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAA\\n\\\n\
+TACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGA\\n\\\n\
+GGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACT\\n\\\n\
+GCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTC\\n\\\n\
+ACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGT\\n\\\n\
+TCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGC\\n\\\n\
+CGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCG\\n\\\n\
+CTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTG\\n\\\n\
+GGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCC\\n\\\n\
+CAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCT\\n\\\n\
+GGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGC\\n\\\n\
+GCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGA\\n\\\n\
+GGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGA\\n\\\n\
+GACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGA\\n\\\n\
+GGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTG\\n\\\n\
+AAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAAT\\n\\\n\
+CCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCA\\n\\\n\
+GTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAA\\n\\\n\
+AAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGC\\n\\\n\
+GGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCT\\n\\\n\
+ACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGG\\n\\\n\
+GAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATC\\n\\\n\
+GCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGC\\n\\\n\
+GGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGG\\n\\\n\
+TCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAA\\n\\\n\
+AAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAG\\n\\\n\
+GAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACT\\n\\\n\
+CCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCC\\n\\\n\
+TGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAG\\n\\\n\
+ACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGC\\n\\\n\
+GTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGA\\n\\\n\
+ACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGA\\n\\\n\
+CAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCA\\n\\\n\
+CTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCA\\n\\\n\
+ACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCG\\n\\\n\
+CCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGG\\n\\\n\
+AGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTC\\n\\\n\
+CGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCG\\n\\\n\
+AGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACC\\n\\\n\
+CCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAG\\n\\\n\
+CTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAG\\n\\\n\
+CCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGG\\n\\\n\
+CCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATC\\n\\\n\
+ACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAA\\n\\\n\
+AAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGC\\n\\\n\
+TGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCC\\n\\\n\
+ACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGG\\n\\\n\
+CTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGG\\n\\\n\
+AGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATT\\n\\\n\
+AGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAA\\n\\\n\
+TCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGC\\n\\\n\
+CTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAA\\n\\\n\
+TCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAG\\n\\\n\
+CCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGT\\n\\\n\
+GGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCG\\n\\\n\
+GGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAG\\n\\\n\
+CGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTG\\n\\\n\
+GGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATG\\n\\\n\
+GTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGT\\n\\\n\
+AATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTT\\n\\\n\
+GCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCT\\n\\\n\
+CAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCG\\n\\\n\
+GGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTC\\n\\\n\
+TCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACT\\n\\\n\
+CGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAG\\n\\\n\
+ATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGG\\n\\\n\
+CGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTG\\n\\\n\
+AGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATA\\n\\\n\
+CAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGG\\n\\\n\
+CAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGC\\n\\\n\
+ACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCAC\\n\\\n\
+GCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTC\\n\\\n\
+GAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCG\\n\\\n\
+GGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCT\\n\\\n\
+TGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGG\\n\\\n\
+CGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCA\\n\\\n\
+GCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGG\\n\\\n\
+CCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGC\\n\\\n\
+GCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGG\\n\\\n\
+CGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGA\\n\\\n\
+CTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGG\\n\\\n\
+CCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAA\\n\\\n\
+ACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCC\\n\\\n\
+CAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGT\\n\\\n\
+GAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAA\\n\\\n\
+AGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGG\\n\\\n\
+ATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTAC\\n\\\n\
+TAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGA\\n\\\n\
+GGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGC\\n\\\n\
+GCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGG\\n\\\n\
+TGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTC\\n\\\n\
+AGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAA\\n\\\n\
+ATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGA\\n\\\n\
+GAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC\\n\\\n\
+AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTG\\n\\\n\
+TAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGAC\\n\\\n\
+CAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGT\\n\\\n\
+GGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAAC\\n\\\n\
+CCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACA\\n\\\n\
+GAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACT\\n\\\n\
+TTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAAC\\n\\\n\
+ATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCC\\n\\\n\
+TGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAG\\n\\\n\
+GTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCG\\n\\\n\
+TCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAG\\n\\\n\
+GCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCC\\n\\\n\
+GTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCT\\n\\\n\
+ACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCC\\n\\\n\
+GAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCC\\n\\\n\
+GGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCAC\\n\\\n\
+CTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAA\\n\\\n\
+ATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTG\\n\\\n\
+AGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCAC\\n\\\n\
+TGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCT\\n\\\n\
+CACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAG\\n\\\n\
+TTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAG\\n\\\n\
+CCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATC\\n\\\n\
+GCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCT\\n\\\n\
+GGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATC\\n\\\n\
+CCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCC\\n\\\n\
+TGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGG\\n\\\n\
+CGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG\\n\\\n\
+AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCG\\n\\\n\
+AGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGG\\n\\\n\
+AGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGT\\n\\\n\
+GAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAA\\n\\\n\
+TCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGC\\n\\\n\
+AGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCA\\n\\\n\
+AAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGG\\n\\\n\
+CGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTC\\n\\\n\
+TACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCG\\n\\\n\
+GGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGAT\\n\\\n\
+CGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCG\\n\\\n\
+CGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAG\\n\\\n\
+GTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACA\\n\\\n\
+AAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCA\\n\\\n\
+GGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCAC\\n\\\n\
+TCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGC\\n\\\n\
+CTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGA\\n\\\n\
+GACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGG\\n\\\n\
+CGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTG\\n\\\n\
+AACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCG\\n\\\n\
+ACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGC\\n\\\n\
+ACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCC\\n\\\n\
+AACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGC\\n\\\n\
+GCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCG\\n\\\n\
+GAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACT\\n\\\n\
+CCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCC\\n\\\n\
+GAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAAC\\n\\\n\
+CCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA\\n\\\n\
+GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGA\\n\\\n\
+GCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAG\\n\\\n\
+GCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGAT\\n\\\n\
+CACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTA\\n\\\n\
+AAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGG\\n\\\n\
+CTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGC\\n\\\n\
+CACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTG\\n\\\n\
+GCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAG\\n\\\n\
+GAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAAT\\n\\\n\
+TAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGA\\n\\\n\
+ATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAG\\n\\\n\
+CCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTA\\n\\\n\
+ATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCA\\n\\\n\
+GCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGG\\n\\\n\
+TGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCC\\n\\\n\
+GGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGA\\n\\\n\
+GCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTT\\n\\\n\
+GGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACAT\\n\\\n\
+GGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTG\\n\\\n\
+TAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGT\\n\\\n\
+TGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTC\\n\\\n\
+TCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGC\\n\\\n\
+GGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGT\\n\\\n\
+CTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTAC\\n\\\n\
+TCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGA\\n\\\n\
+GATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGG\\n\\\n\
+GCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCT\\n\\\n\
+GAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT\\n\\\n\
+ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAG\\n\\\n\
+GCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTG\\n\\\n\
+CACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCA\\n\\\n\
+CGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTT\\n\\\n\
+CGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCC\\n\\\n\
+GGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGC\\n\\\n\
+TTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGG\\n\\\n\
+GCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCC\\n\\\n\
+AGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTG\\n\\\n\
+GCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCG\\n\\\n\
+CGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAG\\n\\\n\
+GCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAG\\n\\\n\
+ACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAG\\n\\\n\
+GCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGA\\n\\\n\
+AACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATC\\n\\\n\
+CCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAG\\n\\\n\
+TGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAA\\n\\\n\
+AAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCG\\n\\\n\
+GATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTA\\n\\\n\
+CTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGG\\n\\\n\
+AGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCG\\n\\\n\
+CGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCG\\n\\\n\
+GTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGT\\n\\\n\
+CAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAA\\n\\\n\
+AATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGG\\n\\\n\
+AGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTC\\n\\\n\
+CAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCT\\n\\\n\
+GTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA\\n\\\n\
+CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCG\\n\\\n\
+TGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAA\\n\\\n\
+CCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGAC\\n\\\n\
+AGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCAC\\n\\\n\
+TTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAA\\n\\\n\
+CATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGC\\n\\\n\
+CTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGA\\n\\\n\
+GGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCC\\n\\\n\
+GTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGA\\n\\\n\
+GGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCC\\n\\\n\
+CGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGC\\n\\\n\
+TACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGC\\n\\\n\
+CGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGC\\n\\\n\
+CGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCA\\n\\\n\
+CCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAA\\n\\\n\
+AATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCT\\n\\\n\
+GAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCA\\n\\\n\
+CTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGC\\n\\\n\
+TCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGA\\n\\\n\
+GTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTA\\n\\\n\
+GCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAAT\\n\\\n\
+CGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCC\\n\\\n\
+TGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAAT\\n\\\n\
+CCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGC\\n\\\n\
+CTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTG\\n\\\n\
+GCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGG\\n\\\n\
+GAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGC\\n\\\n\
+GAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG\\n\\\n\
+GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGG\\n\\\n\
+TGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTA\\n\\\n\
+ATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTG\\n\\\n\
+CAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTC\\n\\\n\
+AAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGG\\n\\\n\
+GCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCT\\n\\\n\
+CTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTC\\n\\\n\
+GGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGA\\n\\\n\
+TCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGC\\n\\\n\
+GCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGA\\n\\\n\
+GGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATAC\\n\\\n\
+AAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGC\\n\\\n\
+AGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCA\\n\\\n\
+CTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACG\\n\\\n\
+CCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCG\\n\\\n\
+AGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGG\\n\\\n\
+GCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTT\\n\\\n\
+GAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGC\\n\\\n\
+GACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAG\\n\\\n\
+CACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGC\\n\\\n\
+CAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCG\\n\\\n\
+CGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGC\\n\\\n\
+GGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGAC\\n\\\n\
+TCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGC\\n\\\n\
+CGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAA\\n\\\n\
+CCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCC\\n\\\n\
+AGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTG\\n\\\n\
+AGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA\\n\\\n\
+GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGA\\n\\\n\
+TCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACT\\n\\\n\
+AAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAG\\n\\\n\
+GCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCG\\n\\\n\
+CCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGT\\n\\\n\
+GGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCA\\n\\\n\
+GGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAA\\n\\\n\
+TTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAG\\n\\\n\
+AATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCA\\n\\\n\
+GCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGT\\n\\\n\
+AATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACC\\n\\\n\
+AGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTG\\n\\\n\
+GTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACC\\n\\\n\
+CGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAG\\n\\\n\
+AGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTT\\n\\\n\
+TGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACA\\n\\\n\
+TGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCT\\n\\\n\
+GTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGG\\n\\\n\
+TTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGT\\n\\\n\
+CTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGG\\n\\\n\
+CGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCG\\n\\\n\
+TCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTA\\n\\\n\
+CTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCG\\n\\\n\
+AGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCG\\n\\\n\
+GGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACC\\n\\\n\
+TGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAA\\n\\\n\
+TACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGA\\n\\\n\
+GGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACT\\n\\\n\
+GCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTC\\n\\\n\
+ACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGT\\n\\\n\
+TCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGC\\n\\\n\
+CGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCG\\n\\\n\
+CTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTG\\n\\\n\
+GGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCC\\n\\\n\
+CAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCT\\n\\\n\
+GGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGC\\n\\\n\
+GCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGA\\n\\\n\
+GGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGA\\n\\\n\
+GACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGA\\n\\\n\
+GGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTG\\n\\\n\
+AAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAAT\\n\\\n\
+CCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCA\\n\\\n\
+GTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAA\\n\\\n\
+AAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGC\\n\\\n\
+GGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCT\\n\\\n\
+ACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGG\\n\\\n\
+GAGGCTGAGGCAGGAGAATC\\n\\\n\
+>TWO IUB ambiguity codes\\n\\\n\
+cttBtatcatatgctaKggNcataaaSatgtaaaDcDRtBggDtctttataattcBgtcg\\n\\\n\
+tactDtDagcctatttSVHtHttKtgtHMaSattgWaHKHttttagacatWatgtRgaaa\\n\\\n\
+NtactMcSMtYtcMgRtacttctWBacgaaatatagScDtttgaagacacatagtVgYgt\\n\\\n\
+cattHWtMMWcStgttaggKtSgaYaaccWStcgBttgcgaMttBYatcWtgacaYcaga\\n\\\n\
+gtaBDtRacttttcWatMttDBcatWtatcttactaBgaYtcttgttttttttYaaScYa\\n\\\n\
+HgtgttNtSatcMtcVaaaStccRcctDaataataStcYtRDSaMtDttgttSagtRRca\\n\\\n\
+tttHatSttMtWgtcgtatSSagactYaaattcaMtWatttaSgYttaRgKaRtccactt\\n\\\n\
+tattRggaMcDaWaWagttttgacatgttctacaaaRaatataataaMttcgDacgaSSt\\n\\\n\
+acaStYRctVaNMtMgtaggcKatcttttattaaaaagVWaHKYagtttttatttaacct\\n\\\n\
+tacgtVtcVaattVMBcttaMtttaStgacttagattWWacVtgWYagWVRctDattBYt\\n\\\n\
+gtttaagaagattattgacVatMaacattVctgtBSgaVtgWWggaKHaatKWcBScSWa\\n\\\n\
+accRVacacaaactaccScattRatatKVtactatatttHttaagtttSKtRtacaaagt\\n\\\n\
+RDttcaaaaWgcacatWaDgtDKacgaacaattacaRNWaatHtttStgttattaaMtgt\\n\\\n\
+tgDcgtMgcatBtgcttcgcgaDWgagctgcgaggggVtaaScNatttacttaatgacag\\n\\\n\
+cccccacatYScaMgtaggtYaNgttctgaMaacNaMRaacaaacaKctacatagYWctg\\n\\\n\
+ttWaaataaaataRattagHacacaagcgKatacBttRttaagtatttccgatctHSaat\\n\\\n\
+actcNttMaagtattMtgRtgaMgcataatHcMtaBSaRattagttgatHtMttaaKagg\\n\\\n\
+YtaaBataSaVatactWtataVWgKgttaaaacagtgcgRatatacatVtHRtVYataSa\\n\\\n\
+KtWaStVcNKHKttactatccctcatgWHatWaRcttactaggatctataDtDHBttata\\n\\\n\
+aaaHgtacVtagaYttYaKcctattcttcttaataNDaaggaaaDYgcggctaaWSctBa\\n\\\n\
+aNtgctggMBaKctaMVKagBaactaWaDaMaccYVtNtaHtVWtKgRtcaaNtYaNacg\\n\\\n\
+gtttNattgVtttctgtBaWgtaattcaagtcaVWtactNggattctttaYtaaagccgc\\n\\\n\
+tcttagHVggaYtgtNcDaVagctctctKgacgtatagYcctRYHDtgBattDaaDgccK\\n\\\n\
+tcHaaStttMcctagtattgcRgWBaVatHaaaataYtgtttagMDMRtaataaggatMt\\n\\\n\
+ttctWgtNtgtgaaaaMaatatRtttMtDgHHtgtcattttcWattRSHcVagaagtacg\\n\\\n\
+ggtaKVattKYagactNaatgtttgKMMgYNtcccgSKttctaStatatNVataYHgtNa\\n\\\n\
+BKRgNacaactgatttcctttaNcgatttctctataScaHtataRagtcRVttacDSDtt\\n\\\n\
+aRtSatacHgtSKacYagttMHtWataggatgactNtatSaNctataVtttRNKtgRacc\\n\\\n\
+tttYtatgttactttttcctttaaacatacaHactMacacggtWataMtBVacRaSaatc\\n\\\n\
+cgtaBVttccagccBcttaRKtgtgcctttttRtgtcagcRttKtaaacKtaaatctcac\\n\\\n\
+aattgcaNtSBaaccgggttattaaBcKatDagttactcttcattVtttHaaggctKKga\\n\\\n\
+tacatcBggScagtVcacattttgaHaDSgHatRMaHWggtatatRgccDttcgtatcga\\n\\\n\
+aacaHtaagttaRatgaVacttagattVKtaaYttaaatcaNatccRttRRaMScNaaaD\\n\\\n\
+gttVHWgtcHaaHgacVaWtgttScactaagSgttatcttagggDtaccagWattWtRtg\\n\\\n\
+ttHWHacgattBtgVcaYatcggttgagKcWtKKcaVtgaYgWctgYggVctgtHgaNcV\\n\\\n\
+taBtWaaYatcDRaaRtSctgaHaYRttagatMatgcatttNattaDttaattgttctaa\\n\\\n\
+ccctcccctagaWBtttHtBccttagaVaatMcBHagaVcWcagBVttcBtaYMccagat\\n\\\n\
+gaaaaHctctaacgttagNWRtcggattNatcRaNHttcagtKttttgWatWttcSaNgg\\n\\\n\
+gaWtactKKMaacatKatacNattgctWtatctaVgagctatgtRaHtYcWcttagccaa\\n\\\n\
+tYttWttaWSSttaHcaaaaagVacVgtaVaRMgattaVcDactttcHHggHRtgNcctt\\n\\\n\
+tYatcatKgctcctctatVcaaaaKaaaagtatatctgMtWtaaaacaStttMtcgactt\\n\\\n\
+taSatcgDataaactaaacaagtaaVctaggaSccaatMVtaaSKNVattttgHccatca\\n\\\n\
+cBVctgcaVatVttRtactgtVcaattHgtaaattaaattttYtatattaaRSgYtgBag\\n\\\n\
+aHSBDgtagcacRHtYcBgtcacttacactaYcgctWtattgSHtSatcataaatataHt\\n\\\n\
+cgtYaaMNgBaatttaRgaMaatatttBtttaaaHHKaatctgatWatYaacttMctctt\\n\\\n\
+ttVctagctDaaagtaVaKaKRtaacBgtatccaaccactHHaagaagaaggaNaaatBW\\n\\\n\
+attccgStaMSaMatBttgcatgRSacgttVVtaaDMtcSgVatWcaSatcttttVatag\\n\\\n\
+ttactttacgatcaccNtaDVgSRcgVcgtgaacgaNtaNatatagtHtMgtHcMtagaa\\n\\\n\
+attBgtataRaaaacaYKgtRccYtatgaagtaataKgtaaMttgaaRVatgcagaKStc\\n\\\n\
+tHNaaatctBBtcttaYaBWHgtVtgacagcaRcataWctcaBcYacYgatDgtDHccta\\n\\\n\
+aagacYRcaggattHaYgtKtaatgcVcaataMYacccatatcacgWDBtgaatcBaata\\n\\\n\
+cKcttRaRtgatgaBDacggtaattaaYtataStgVHDtDctgactcaaatKtacaatgc\\n\\\n\
+gYatBtRaDatHaactgtttatatDttttaaaKVccYcaaccNcBcgHaaVcattHctcg\\n\\\n\
+attaaatBtatgcaaaaatYMctSactHatacgaWacattacMBgHttcgaatVaaaaca\\n\\\n\
+BatatVtctgaaaaWtctRacgBMaatSgRgtgtcgactatcRtattaScctaStagKga\\n\\\n\
+DcWgtYtDDWKRgRtHatRtggtcgaHgggcgtattaMgtcagccaBggWVcWctVaaat\\n\\\n\
+tcgNaatcKWagcNaHtgaaaSaaagctcYctttRVtaaaatNtataaccKtaRgtttaM\\n\\\n\
+tgtKaBtRtNaggaSattHatatWactcagtgtactaKctatttgRYYatKatgtccgtR\\n\\\n\
+tttttatttaatatVgKtttgtatgtNtataRatWYNgtRtHggtaaKaYtKSDcatcKg\\n\\\n\
+taaYatcSRctaVtSMWtVtRWHatttagataDtVggacagVcgKWagBgatBtaaagNc\\n\\\n\
+aRtagcataBggactaacacRctKgttaatcctHgDgttKHHagttgttaatgHBtatHc\\n\\\n\
+DaagtVaBaRccctVgtgDtacRHSctaagagcggWYaBtSaKtHBtaaactYacgNKBa\\n\\\n\
+VYgtaacttagtVttcttaatgtBtatMtMtttaattaatBWccatRtttcatagVgMMt\\n\\\n\
+agctStKctaMactacDNYgKYHgaWcgaHgagattacVgtttgtRaSttaWaVgataat\\n\\\n\
+gtgtYtaStattattMtNgWtgttKaccaatagNYttattcgtatHcWtctaaaNVYKKt\\n\\\n\
+tWtggcDtcgaagtNcagatacgcattaagaccWctgcagcttggNSgaNcHggatgtVt\\n\\\n\
+catNtRaaBNcHVagagaaBtaaSggDaatWaatRccaVgggStctDaacataKttKatt\\n\\\n\
+tggacYtattcSatcttagcaatgaVBMcttDattctYaaRgatgcattttNgVHtKcYR\\n\\\n\
+aatRKctgtaaacRatVSagctgtWacBtKVatctgttttKcgtctaaDcaagtatcSat\\n\\\n\
+aWVgcKKataWaYttcccSaatgaaaacccWgcRctWatNcWtBRttYaattataaNgac\\n\\\n\
+acaatagtttVNtataNaYtaatRaVWKtBatKagtaatataDaNaaaaataMtaagaaS\\n\\\n\
+tccBcaatNgaataWtHaNactgtcDtRcYaaVaaaaaDgtttRatctatgHtgttKtga\\n\\\n\
+aNSgatactttcgagWaaatctKaaDaRttgtggKKagcDgataaattgSaacWaVtaNM\\n\\\n\
+acKtcaDaaatttctRaaVcagNacaScRBatatctRatcctaNatWgRtcDcSaWSgtt\\n\\\n\
+RtKaRtMtKaatgttBHcYaaBtgatSgaSWaScMgatNtctcctatttctYtatMatMt\\n\\\n\
+RRtSaattaMtagaaaaStcgVgRttSVaScagtgDtttatcatcatacRcatatDctta\\n\\\n\
+tcatVRtttataaHtattcYtcaaaatactttgVctagtaaYttagatagtSYacKaaac\\n\\\n\
+gaaKtaaatagataatSatatgaaatSgKtaatVtttatcctgKHaatHattagaaccgt\\n\\\n\
+YaaHactRcggSBNgtgctaaBagBttgtRttaaattYtVRaaaattgtaatVatttctc\\n\\\n\
+ttcatgBcVgtgKgaHaaatattYatagWacNctgaaMcgaattStagWaSgtaaKagtt\\n\\\n\
+ttaagaDgatKcctgtaHtcatggKttVDatcaaggtYcgccagNgtgcVttttagagat\\n\\\n\
+gctaccacggggtNttttaSHaNtatNcctcatSaaVgtactgBHtagcaYggYVKNgta\\n\\\n\
+KBcRttgaWatgaatVtagtcgattYgatgtaatttacDacSctgctaaaStttaWMagD\\n\\\n\
+aaatcaVYctccgggcgaVtaaWtStaKMgDtttcaaMtVgBaatccagNaaatcYRMBg\\n\\\n\
+gttWtaaScKttMWtYataRaDBMaDataatHBcacDaaKDactaMgagttDattaHatH\\n\\\n\
+taYatDtattDcRNStgaatattSDttggtattaaNSYacttcDMgYgBatWtaMagact\\n\\\n\
+VWttctttgYMaYaacRgHWaattgRtaagcattctMKVStatactacHVtatgatcBtV\\n\\\n\
+NataaBttYtSttacKgggWgYDtgaVtYgatDaacattYgatggtRDaVDttNactaSa\\n\\\n\
+MtgNttaacaaSaBStcDctaccacagacgcaHatMataWKYtaYattMcaMtgSttDag\\n\\\n\
+cHacgatcaHttYaKHggagttccgatYcaatgatRaVRcaagatcagtatggScctata\\n\\\n\
+ttaNtagcgacgtgKaaWaactSgagtMYtcttccaKtStaacggMtaagNttattatcg\\n\\\n\
+tctaRcactctctDtaacWYtgaYaSaagaWtNtatttRacatgNaatgttattgWDDcN\\n\\\n\
+aHcctgaaHacSgaataaRaataMHttatMtgaSDSKatatHHaNtacagtccaYatWtc\\n\\\n\
+actaactatKDacSaStcggataHgYatagKtaatKagStaNgtatactatggRHacttg\\n\\\n\
+tattatgtDVagDVaRctacMYattDgtttYgtctatggtKaRSttRccRtaaccttaga\\n\\\n\
+gRatagSaaMaacgcaNtatgaaatcaRaagataatagatactcHaaYKBctccaagaRa\\n\\\n\
+BaStNagataggcgaatgaMtagaatgtcaKttaaatgtaWcaBttaatRcggtgNcaca\\n\\\n\
+aKtttScRtWtgcatagtttWYaagBttDKgcctttatMggNttattBtctagVtacata\\n\\\n\
+aaYttacacaaRttcYtWttgHcaYYtaMgBaBatctNgcDtNttacgacDcgataaSat\\n\\\n\
+YaSttWtcctatKaatgcagHaVaacgctgcatDtgttaSataaaaYSNttatagtaNYt\\n\\\n\
+aDaaaNtggggacttaBggcHgcgtNtaaMcctggtVtaKcgNacNtatVaSWctWtgaW\\n\\\n\
+cggNaBagctctgaYataMgaagatBSttctatacttgtgtKtaattttRagtDtacata\\n\\\n\
+tatatgatNHVgBMtKtaKaNttDHaagatactHaccHtcatttaaagttVaMcNgHata\\n\\\n\
+tKtaNtgYMccttatcaaNagctggacStttcNtggcaVtattactHaSttatgNMVatt\\n\\\n\
+MMDtMactattattgWMSgtHBttStStgatatRaDaagattttctatMtaaaaaggtac\\n\\\n\
+taaVttaSacNaatactgMttgacHaHRttgMacaaaatagttaatatWKRgacDgaRta\\n\\\n\
+tatttattatcYttaWtgtBRtWatgHaaattHataagtVaDtWaVaWtgStcgtMSgaS\\n\\\n\
+RgMKtaaataVacataatgtaSaatttagtcgaaHtaKaatgcacatcggRaggSKctDc\\n\\\n\
+agtcSttcccStYtccRtctctYtcaaKcgagtaMttttcRaYDttgttatctaatcata\\n\\\n\
+NctctgctatcaMatactataggDaHaaSttMtaDtcNatataattctMcStaaBYtaNa\\n\\\n\
+gatgtaatHagagSttgWHVcttatKaYgDctcttggtgttMcRaVgSgggtagacaata\\n\\\n\
+aDtaattSaDaNaHaBctattgNtaccaaRgaVtKNtaaYggHtaKKgHcatctWtctDt\\n\\\n\
+ttctttggSDtNtaStagttataaacaattgcaBaBWggHgcaaaBtYgctaatgaaatW\\n\\\n\
+cDcttHtcMtWWattBHatcatcaaatctKMagtDNatttWaBtHaaaNgMttaaStagt\\n\\\n\
+tctctaatDtcRVaYttgttMtRtgtcaSaaYVgSWDRtaatagctcagDgcWWaaaBaa\\n\\\n\
+RaBctgVgggNgDWStNaNBKcBctaaKtttDcttBaaggBttgaccatgaaaNgttttt\\n\\\n\
+tttatctatgttataccaaDRaaSagtaVtDtcaWatBtacattaWacttaSgtattggD\\n\\\n\
+gKaaatScaattacgWcagKHaaccaYcRcaRttaDttRtttHgaHVggcttBaRgtccc\\n\\\n\
+tDatKaVtKtcRgYtaKttacgtatBtStaagcaattaagaRgBagSaattccSWYttta\\n\\\n\
+ttVaataNctgHgttaaNBgcVYgtRtcccagWNaaaacaDNaBcaaaaRVtcWMgBagM\\n\\\n\
+tttattacgDacttBtactatcattggaaatVccggttRttcatagttVYcatYaSHaHc\\n\\\n\
+ttaaagcNWaHataaaRWtctVtRYtagHtaaaYMataHYtNBctNtKaatattStgaMc\\n\\\n\
+BtRgctaKtgcScSttDgYatcVtggaaKtaagatWccHccgKYctaNNctacaWctttt\\n\\\n\
+gcRtgtVcgaKttcMRHgctaHtVaataaDtatgKDcttatBtDttggNtacttttMtga\\n\\\n\
+acRattaaNagaactcaaaBBVtcDtcgaStaDctgaaaSgttMaDtcgttcaccaaaag\\n\\\n\
+gWtcKcgSMtcDtatgtttStaaBtatagDcatYatWtaaaBacaKgcaDatgRggaaYc\\n\\\n\
+taRtccagattDaWtttggacBaVcHtHtaacDacYgtaatataMagaatgHMatcttat\\n\\\n\
+acgtatttttatattacHactgttataMgStYaattYaccaattgagtcaaattaYtgta\\n\\\n\
+tcatgMcaDcgggtcttDtKgcatgWRtataatatRacacNRBttcHtBgcRttgtgcgt\\n\\\n\
+catacMtttBctatctBaatcattMttMYgattaaVYatgDaatVagtattDacaacDMa\\n\\\n\
+tcMtHcccataagatgBggaccattVWtRtSacatgctcaaggggYtttDtaaNgNtaaB\\n\\\n\
+atggaatgtctRtaBgBtcNYatatNRtagaacMgagSaSDDSaDcctRagtVWSHtVSR\\n\\\n\
+ggaacaBVaccgtttaStagaacaMtactccagtttVctaaRaaHttNcttagcaattta\\n\\\n\
+ttaatRtaaaatctaacDaBttggSagagctacHtaaRWgattcaaBtctRtSHaNtgta\\n\\\n\
+cattVcaHaNaagtataccacaWtaRtaaVKgMYaWgttaKggKMtKcgWatcaDatYtK\\n\\\n\
+SttgtacgaccNctSaattcDcatcttcaaaDKttacHtggttHggRRaRcaWacaMtBW\\n\\\n\
+VHSHgaaMcKattgtaRWttScNattBBatYtaNRgcggaagacHSaattRtttcYgacc\\n\\\n\
+BRccMacccKgatgaacttcgDgHcaaaaaRtatatDtatYVtttttHgSHaSaatagct\\n\\\n\
+NYtaHYaVYttattNtttgaaaYtaKttWtctaNtgagaaaNctNDctaaHgttagDcRt\\n\\\n\
+tatagccBaacgcaRBtRctRtggtaMYYttWtgataatcgaataattattataVaaaaa\\n\\\n\
+ttacNRVYcaaMacNatRttcKatMctgaagactaattataaYgcKcaSYaatMNctcaa\\n\\\n\
+cgtgatttttBacNtgatDccaattattKWWcattttatatatgatBcDtaaaagttgaa\\n\\\n\
+VtaHtaHHtBtataRBgtgDtaataMttRtDgDcttattNtggtctatctaaBcatctaR\\n\\\n\
+atgNacWtaatgaagtcMNaacNgHttatactaWgcNtaStaRgttaaHacccgaYStac\\n\\\n\
+aaaatWggaYaWgaattattcMaactcBKaaaRVNcaNRDcYcgaBctKaacaaaaaSgc\\n\\\n\
+tccYBBHYaVagaatagaaaacagYtctVccaMtcgtttVatcaatttDRtgWctagtac\\n\\\n\
+RttMctgtDctttcKtWttttataaatgVttgBKtgtKWDaWagMtaaagaaattDVtag\\n\\\n\
+gttacatcatttatgtcgMHaVcttaBtVRtcgtaYgBRHatttHgaBcKaYWaatcNSc\\n\\\n\
+tagtaaaaatttacaatcactSWacgtaatgKttWattagttttNaggtctcaagtcact\\n\\\n\
+attcttctaagKggaataMgtttcataagataaaaatagattatDgcBVHWgaBKttDgc\\n\\\n\
+atRHaagcaYcRaattattatgtMatatattgHDtcaDtcaaaHctStattaatHaccga\\n\\\n\
+cNattgatatattttgtgtDtRatagSacaMtcRtcattcccgacacSattgttKaWatt\\n\\\n\
+NHcaacttccgtttSRtgtctgDcgctcaaMagVtBctBMcMcWtgtaacgactctcttR\\n\\\n\
+ggRKSttgYtYatDccagttDgaKccacgVatWcataVaaagaataMgtgataaKYaaat\\n\\\n\
+cHDaacgataYctRtcYatcgcaMgtNttaBttttgatttaRtStgcaacaaaataccVg\\n\\\n\
+aaDgtVgDcStctatatttattaaaaRKDatagaaagaKaaYYcaYSgKStctccSttac\\n\\\n\
+agtcNactttDVttagaaagMHttRaNcSaRaMgBttattggtttaRMggatggcKDgWR\\n\\\n\
+tNaataataWKKacttcKWaaagNaBttaBatMHtccattaacttccccYtcBcYRtaga\\n\\\n\
+ttaagctaaYBDttaNtgaaaccHcaRMtKtaaHMcNBttaNaNcVcgVttWNtDaBatg\\n\\\n\
+ataaVtcWKcttRggWatcattgaRagHgaattNtatttctctattaattaatgaDaaMa\\n\\\n\
+tacgttgggcHaYVaaNaDDttHtcaaHtcVVDgBVagcMacgtgttaaBRNtatRtcag\\n\\\n\
+taagaggtttaagacaVaaggttaWatctccgtVtaDtcDatttccVatgtacNtttccg\\n\\\n\
+tHttatKgScBatgtVgHtYcWagcaKtaMYaaHgtaattaSaHcgcagtWNaatNccNN\\n\\\n\
+YcacgVaagaRacttctcattcccRtgtgtaattagcSttaaStWaMtctNNcSMacatt\\n\\\n\
+ataaactaDgtatWgtagtttaagaaaattgtagtNagtcaataaatttgatMMYactaa\\n\\\n\
+tatcggBWDtVcYttcDHtVttatacYaRgaMaacaStaatcRttttVtagaDtcacWat\\n\\\n\
+ttWtgaaaagaaagNRacDtttStVatBaDNtaactatatcBSMcccaSttccggaMatg\\n\\\n\
+attaaWatKMaBaBatttgataNctgttKtVaagtcagScgaaaDggaWgtgttttKtWt\\n\\\n\
+atttHaatgtagttcactaaKMagttSYBtKtaYgaactcagagRtatagtVtatcaaaW\\n\\\n\
+YagcgNtaDagtacNSaaYDgatBgtcgataacYDtaaactacagWDcYKaagtttatta\\n\\\n\
+gcatcgagttKcatDaattgattatDtcagRtWSKtcgNtMaaaaacaMttKcaWcaaSV\\n\\\n\
+MaaaccagMVtaMaDtMaHaBgaacataBBVtaatVYaNSWcSgNtDNaaKacacBttta\\n\\\n\
+tKtgtttcaaHaMctcagtaacgtcgYtactDcgcctaNgagagcYgatattttaaattt\\n\\\n\
+ccattttacatttDaaRctattttWctttacgtDatYtttcagacgcaaVttagtaaKaa\\n\\\n\
+aRtgVtccataBggacttatttgtttaWNtgttVWtaWNVDaattgtatttBaagcBtaa\\n\\\n\
+BttaaVatcHcaVgacattccNggtcgacKttaaaRtagRtctWagaYggtgMtataatM\\n\\\n\
+tgaaRttattttgWcttNtDRRgMDKacagaaaaggaaaRStcccagtYccVattaNaaK\\n\\\n\
+StNWtgacaVtagaagcttSaaDtcacaacgDYacWDYtgtttKatcVtgcMaDaSKStV\\n\\\n\
+cgtagaaWaKaagtttcHaHgMgMtctataagBtKaaaKKcactggagRRttaagaBaaN\\n\\\n\
+atVVcgRcKSttDaactagtSttSattgttgaaRYatggttVttaataaHttccaagDtg\\n\\\n\
+atNWtaagHtgcYtaactRgcaatgMgtgtRaatRaNaacHKtagactactggaatttcg\\n\\\n\
+ccataacgMctRgatgttaccctaHgtgWaYcactcacYaattcttaBtgacttaaacct\\n\\\n\
+gYgaWatgBttcttVttcgttWttMcNYgtaaaatctYgMgaaattacNgaHgaacDVVM\\n\\\n\
+tttggtHtctaaRgtacagacgHtVtaBMNBgattagcttaRcttacaHcRctgttcaaD\\n\\\n\
+BggttKaacatgKtttYataVaNattccgMcgcgtagtRaVVaattaKaatggttRgaMc\\n\\\n\
+agtatcWBttNtHagctaatctagaaNaaacaYBctatcgcVctBtgcaaagDgttVtga\\n\\\n\
+HtactSNYtaaNccatgtgDacgaVtDcgKaRtacDcttgctaagggcagMDagggtBWR\\n\\\n\
+tttSgccttttttaacgtcHctaVtVDtagatcaNMaVtcVacatHctDWNaataRgcgt\\n\\\n\
+aVHaggtaaaaSgtttMtattDgBtctgatSgtRagagYtctSaKWaataMgattRKtaa\\n\\\n\
+catttYcgtaacacattRWtBtcggtaaatMtaaacBatttctKagtcDtttgcBtKYYB\\n\\\n\
+aKttctVttgttaDtgattttcttccacttgSaaacggaaaNDaattcYNNaWcgaaYat\\n\\\n\
+tttMgcBtcatRtgtaaagatgaWtgaccaYBHgaatagataVVtHtttVgYBtMctaMt\\n\\\n\
+cctgaDcYttgtccaaaRNtacagcMctKaaaggatttacatgtttaaWSaYaKttBtag\\n\\\n\
+DacactagctMtttNaKtctttcNcSattNacttggaacaatDagtattRtgSHaataat\\n\\\n\
+gccVgacccgatactatccctgtRctttgagaSgatcatatcgDcagWaaHSgctYYWta\\n\\\n\
+tHttggttctttatVattatcgactaagtgtagcatVgtgHMtttgtttcgttaKattcM\\n\\\n\
+atttgtttWcaaStNatgtHcaaaDtaagBaKBtRgaBgDtSagtatMtaacYaatYtVc\\n\\\n\
+KatgtgcaacVaaaatactKcRgtaYtgtNgBBNcKtcttaccttKgaRaYcaNKtactt\\n\\\n\
+tgagSBtgtRagaNgcaaaNcacagtVtttHWatgttaNatBgtttaatNgVtctgaata\\n\\\n\
+tcaRtattcttttttttRaaKcRStctcggDgKagattaMaaaKtcaHacttaataataK\\n\\\n\
+taRgDtKVBttttcgtKaggHHcatgttagHggttNctcgtatKKagVagRaaaggaaBt\\n\\\n\
+NatttVKcRttaHctaHtcaaatgtaggHccaBataNaNaggttgcWaatctgatYcaaa\\n\\\n\
+HaatWtaVgaaBttagtaagaKKtaaaKtRHatMaDBtBctagcatWtatttgWttVaaa\\n\\\n\
+ScMNattRactttgtYtttaaaagtaagtMtaMaSttMBtatgaBtttaKtgaatgagYg\\n\\\n\
+tNNacMtcNRacMMHcttWtgtRtctttaacaacattattcYaMagBaacYttMatcttK\\n\\\n\
+cRMtgMNccattaRttNatHaHNaSaaHMacacaVaatacaKaSttHatattMtVatWga\\n\\\n\
+ttttttaYctttKttHgScWaacgHtttcaVaaMgaacagNatcgttaacaaaaagtaca\\n\\\n\
+HBNaattgttKtcttVttaaBtctgctacgBgcWtttcaggacacatMgacatcccagcg\\n\\\n\
+gMgaVKaBattgacttaatgacacacaaaaaatRKaaBctacgtRaDcgtagcVBaacDS\\n\\\n\
+BHaaaaSacatatacagacRNatcttNaaVtaaaataHattagtaaaaSWccgtatWatg\\n\\\n\
+gDttaactattgcccatcttHaSgYataBttBaactattBtcHtgatcaataSttaBtat\\n\\\n\
+KSHYttWggtcYtttBttaataccRgVatStaHaKagaatNtagRMNgtcttYaaSaact\\n\\\n\
+cagDSgagaaYtMttDtMRVgWKWtgMaKtKaDttttgactatacataatcNtatNaHat\\n\\\n\
+tVagacgYgatatatttttgtStWaaatctWaMgagaRttRatacgStgattcttaagaD\\n\\\n\
+taWccaaatRcagcagaaNKagtaaDggcgccBtYtagSBMtactaaataMataBSacRM\\n\\\n\
+gDgattMMgtcHtcaYDtRaDaacggttDaggcMtttatgttaNctaattaVacgaaMMt\\n\\\n\
+aatDccSgtattgaRtWWaccaccgagtactMcgVNgctDctaMScatagcgtcaactat\\n\\\n\
+acRacgHRttgctatttaatgaattataYKttgtaagWgtYttgcHgMtaMattWaWVta\\n\\\n\
+RgcttgYgttBHtYataSccStBtgtagMgtDtggcVaaSBaatagDttgBgtctttctc\\n\\\n\
+attttaNagtHKtaMWcYactVcgcgtatMVtttRacVagDaatcttgctBBcRDgcaac\\n\\\n\
+KttgatSKtYtagBMagaRtcgBattHcBWcaactgatttaatttWDccatttatcgagS\\n\\\n\
+KaWttataHactaHMttaatHtggaHtHagaatgtKtaaRactgtttMatacgatcaagD\\n\\\n\
+gatKaDctataMggtHDtggHacctttRtatcttYattttgacttgaaSaataaatYcgB\\n\\\n\
+aaaaccgNatVBttMacHaKaataagtatKgtcaagactcttaHttcggaattgttDtct\\n\\\n\
+aaccHttttWaaatgaaatataaaWattccYDtKtaaaacggtgaggWVtctattagtga\\n\\\n\
+ctattaagtMgtttaagcatttgSgaaatatccHaaggMaaaattttcWtatKctagDtY\\n\\\n\
+tMcctagagHcactttactatacaaacattaacttaHatcVMYattYgVgtMttaaRtga\\n\\\n\
+aataaDatcaHgtHHatKcDYaatcttMtNcgatYatgSaMaNtcttKcWataScKggta\\n\\\n\
+tcttacgcttWaaagNatgMgHtctttNtaacVtgttcMaaRatccggggactcMtttaY\\n\\\n\
+MtcWRgNctgNccKatcttgYDcMgattNYaRagatHaaHgKctcataRDttacatBatc\\n\\\n\
+cattgDWttatttaWgtcggagaaaaatacaatacSNtgggtttccttacSMaagBatta\\n\\\n\
+caMaNcactMttatgaRBacYcYtcaaaWtagctSaacttWgDMHgaggatgBVgcHaDt\\n\\\n\
+ggaactttggtcNatNgtaKaBcccaNtaagttBaacagtatacDYttcctNgWgcgSMc\\n\\\n\
+acatStctHatgRcNcgtacacaatRttMggaNKKggataaaSaYcMVcMgtaMaHtgat\\n\\\n\
+tYMatYcggtcttcctHtcDccgtgRatcattgcgccgatatMaaYaataaYSggatagc\\n\\\n\
+gcBtNtaaaScaKgttBgagVagttaKagagtatVaactaSacWactSaKatWccaKaaa\\n\\\n\
+atBKgaaKtDMattttgtaaatcRctMatcaaMagMttDgVatggMaaWgttcgaWatga\\n\\\n\
+aatttgRtYtattaWHKcRgctacatKttctaccaaHttRatctaYattaaWatVNccat\\n\\\n\
+NgagtcKttKataStRaatatattcctRWatDctVagttYDgSBaatYgttttgtVaatt\\n\\\n\
+taatagcagMatRaacttBctattgtMagagattaaactaMatVtHtaaatctRgaaaaa\\n\\\n\
+aaatttWacaacaYccYDSaattMatgaccKtaBKWBattgtcaagcHKaagttMMtaat\\n\\\n\
+ttcKcMagNaaKagattggMagaggtaatttYacatcWaaDgatMgKHacMacgcVaaca\\n\\\n\
+DtaDatatYggttBcgtatgWgaSatttgtagaHYRVacaRtctHaaRtatgaactaata\\n\\\n\
+tctSSBgggaaHMWtcaagatKgagtDaSatagttgattVRatNtctMtcSaagaSHaat\\n\\\n\
+aNataataRaaRgattctttaataaagWaRHcYgcatgtWRcttgaaggaMcaataBRaa\\n\\\n\
+ccagStaaacNtttcaatataYtaatatgHaDgcStcWttaacctaRgtYaRtataKtgM\\n\\\n\
+ttttatgactaaaatttacYatcccRWtttHRtattaaatgtttatatttgttYaatMca\\n\\\n\
+RcSVaaDatcgtaYMcatgtagacatgaaattgRtcaaYaaYtRBatKacttataccaNa\\n\\\n\
+aattVaBtctggacaagKaaYaaatatWtMtatcYaaVNtcgHaactBaagKcHgtctac\\n\\\n\
+aatWtaDtSgtaHcataHtactgataNctRgttMtDcDttatHtcgtacatcccaggStt\\n\\\n\
+aBgtcacacWtccNMcNatMVaVgtccDYStatMaccDatggYaRKaaagataRatttHK\\n\\\n\
+tSaaatDgataaacttaHgttgVBtcttVttHgDacgaKatgtatatNYataactctSat\\n\\\n\
+atatattgcHRRYttStggaactHgttttYtttaWtatMcttttctatctDtagVHYgMR\\n\\\n\
+BgtHttcctaatYRttKtaagatggaVRataKDctaMtKBNtMtHNtWtttYcVtattMc\\n\\\n\
+gRaacMcctNSctcatttaaagDcaHtYccSgatgcaatYaaaaDcttcgtaWtaattct\\n\\\n\
+cgttttScttggtaatctttYgtctaactKataHacctMctcttacHtKataacacagcN\\n\\\n\
+RatgKatttttSaaatRYcgDttaMRcgaaattactMtgcgtaagcgttatBtttttaat\\n\\\n\
+taagtNacatHgttcRgacKcBBtVgatKttcgaBaatactDRgtRtgaNacWtcacYtt\\n\\\n\
+aaKcgttctHaKttaNaMgWgWaggtctRgaKgWttSttBtDcNtgtttacaaatYcDRt\\n\\\n\
+gVtgcctattcNtctaaaDMNttttNtggctgagaVctDaacVtWccaagtaacacaNct\\n\\\n\
+gaScattccDHcVBatcgatgtMtaatBgHaatDctMYgagaatgYWKcctaatNaStHa\\n\\\n\
+aaKccgHgcgtYaaYtattgtStgtgcaaRtattaKatattagaWVtcaMtBagttatta\\n\\\n\
+gNaWHcVgcaattttDcMtgtaRHVYtHtctgtaaaaHVtMKacatcgNaatttMatatg\\n\\\n\
+ttgttactagWYtaRacgataKagYNKcattataNaRtgaacKaYgcaaYYacaNccHat\\n\\\n\
+MatDcNgtHttRaWttagaaDcaaaaaatagggtKDtStaDaRtaVtHWKNtgtattVct\\n\\\n\
+SVgRgataDaRaWataBgaagaaKtaataaYgDcaStaNgtaDaaggtattHaRaWMYaY\\n\\\n\
+aWtggttHYgagVtgtgcttttcaaDKcagVcgttagacNaaWtagtaataDttctggtt\\n\\\n\
+VcatcataaagtgKaaaNaMtaBBaattaatWaattgctHaVKaSgDaaVKaHtatatat\\n\\\n\
+HatcatSBagNgHtatcHYMHgttDgtaHtBttWatcgtttaRaattgStKgSKNWKatc\\n\\\n\
+agDtctcagatttctRtYtBatBgHHtKaWtgYBgacVVWaKtacKcDttKMaKaVcggt\\n\\\n\
+gttataagaataaHaatattagtataatMHgttYgaRttagtaRtcaaVatacggtcMcg\\n\\\n\
+agtaaRttacWgactKRYataaaagSattYaWgagatYagKagatgSaagKgttaatMgg\\n\\\n\
+tataatgttWYttatgagaaacctNVataatHcccKtDctcctaatactggctHggaSag\\n\\\n\
+gRtKHaWaattcgSatMatttagaggcYtctaMcgctcataSatatgRagacNaaDagga\\n\\\n\
+VBagaYttKtacNaKgtSYtagttggaWcatcWttaatctatgaVtcgtgtMtatcaYcg\\n\\\n\
+tRccaaYgDctgcMgtgtWgacWtgataacacgcgctBtgttaKtYDtatDcatcagKaV\\n\\\n\
+MctaatcttgVcaaRgcRMtDcgattaHttcaNatgaatMtactacVgtRgatggaWttt\\n\\\n\
+actaaKatgagSaaKggtaNtactVaYtaaKRagaacccacaMtaaMtKtatBcttgtaa\\n\\\n\
+WBtMctaataaVcDaaYtcRHBtcgttNtaaHatttBNgRStVDattBatVtaagttaYa\\n\\\n\
+tVattaagaBcacggtSgtVtatttaRattgatgtaHDKgcaatattKtggcctatgaWD\\n\\\n\
+KRYcggattgRctatNgatacaatMNttctgtcRBYRaaaHctNYattcHtaWcaattct\\n\\\n\
+BtMKtVgYataatMgYtcagcttMDataVtggRtKtgaatgccNcRttcaMtRgattaac\\n\\\n\
+attRcagcctHtWMtgtDRagaKaBtgDttYaaaaKatKgatctVaaYaacWcgcatagB\\n\\\n\
+VtaNtRtYRaggBaaBtgKgttacataagagcatgtRattccacttaccatRaaatgWgD\\n\\\n\
+aMHaYVgVtaSctatcgKaatatattaDgacccYagtgtaYNaaatKcagtBRgagtcca\\n\\\n\
+tgKgaaaccBgaagBtgSttWtacgatWHaYatcgatttRaaNRgcaNaKVacaNtDgat\\n\\\n\
+tgHVaatcDaagcgtatgcNttaDataatcSataaKcaataaHWataBtttatBtcaKtK\\n\\\n\
+tatagttaDgSaYctacaRatNtaWctSaatatttYaKaKtaccWtatcRagacttaYtt\\n\\\n\
+VcKgSDcgagaagatccHtaattctSttatggtKYgtMaHagVaBRatttctgtRgtcta\\n\\\n\
+tgggtaHKgtHacHtSYacgtacacHatacKaaBaVaccaDtatcSaataaHaagagaat\\n\\\n\
+ScagactataaRttagcaaVcaHataKgDacatWccccaagcaBgagWatctaYttgaaa\\n\\\n\
+tctVNcYtttWagHcgcgcDcVaaatgttKcHtNtcaatagtgtNRaactttttcaatgg\\n\\\n\
+WgBcgDtgVgtttctacMtaaataaaRggaaacWaHttaRtNtgctaaRRtVBctYtVta\\n\\\n\
+tDcattDtgaccYatagatYRKatNYKttNgcctagtaWtgaactaMVaacctgaStttc\\n\\\n\
+tgaKVtaaVaRKDttVtVctaDNtataaaDtccccaagtWtcgatcactDgYaBcatcct\\n\\\n\
+MtVtacDaaBtYtMaKNatNtcaNacgDatYcatcgcaRatWBgaacWttKttagYtaat\\n\\\n\
+tcggttgSWttttDWctttacYtatatWtcatDtMgtBttgRtVDggttaacYtacgtac\\n\\\n\
+atgaattgaaWcttMStaDgtatattgaDtcRBcattSgaaVBRgagccaaKtttcDgcg\\n\\\n\
+aSMtatgWattaKttWtgDBMaggBBttBaatWttRtgcNtHcgttttHtKtcWtagHSt\\n\\\n\
+aacagttgatatBtaWSaWggtaataaMttaKacDaatactcBttcaatatHttcBaaSa\\n\\\n\
+aatYggtaRtatNtHcaatcaHtagVtgtattataNggaMtcttHtNagctaaaggtaga\\n\\\n\
+YctMattNaMVNtcKtactBKcaHHcBttaSagaKacataYgctaKaYgttYcgacWVtt\\n\\\n\
+WtSagcaacatcccHaccKtcttaacgaKttcacKtNtacHtatatRtaaatacactaBt\\n\\\n\
+ttgaHaRttggttWtatYagcatYDatcggagagcWBataagRtacctataRKgtBgatg\\n\\\n\
+aDatataSttagBaHtaatNtaDWcWtgtaattacagKttcNtMagtattaNgtctcgtc\\n\\\n\
+ctcttBaHaKcKccgtRcaaYagSattaagtKataDatatatagtcDtaacaWHcaKttD\\n\\\n\
+gaaRcgtgYttgtcatatNtatttttatggccHtgDtYHtWgttatYaacaattcaWtat\\n\\\n\
+NgctcaaaSttRgctaatcaaatNatcgtttaBtNNVtgttataagcaaagattBacgtD\\n\\\n\
+atttNatttaaaDcBgtaSKgacgtagataatttcHMVNttgttBtDtgtaWKaaRMcKM\\n\\\n\
+tHtaVtagataWctccNNaSWtVaHatctcMgggDgtNHtDaDttatatVWttgttattt\\n\\\n\
+aacctttcacaaggaSaDcggttttttatatVtctgVtaacaStDVaKactaMtttaSNa\\n\\\n\
+gtgaaattaNacttSKctattcctctaSagKcaVttaagNaVcttaVaaRNaHaaHttat\\n\\\n\
+gtHttgtgatMccaggtaDcgaccgtWgtWMtttaHcRtattgScctatttKtaaccaag\\n\\\n\
+tYagaHgtWcHaatgccKNRtttagtMYSgaDatctgtgaWDtccMNcgHgcaaacNDaa\\n\\\n\
+aRaStDWtcaaaaHKtaNBctagBtgtattaactaattttVctagaatggcWSatMaccc\\n\\\n\
+ttHttaSgSgtgMRcatRVKtatctgaaaccDNatYgaaVHNgatMgHRtacttaaaRta\\n\\\n\
+tStRtDtatDttYatattHggaBcttHgcgattgaKcKtttcRataMtcgaVttWacatN\\n\\\n\
+catacctRataDDatVaWNcggttgaHtgtMacVtttaBHtgagVttMaataattatgtt\\n\\\n\
+cttagtttgtgcDtSatttgBtcaacHattaaBagVWcgcaSYttMgcttacYKtVtatc\\n\\\n\
+aYaKctgBatgcgggcYcaaaaacgNtctagKBtattatctttKtaVttatagtaYtRag\\n\\\n\
+NtaYataaVtgaatatcHgcaaRataHtacacatgtaNtgtcgYatWMatttgaactacR\\n\\\n\
+ctaWtWtatacaatctBatatgYtaagtatgtgtatSttactVatcttYtaBcKgRaSgg\\n\\\n\
+RaaaaatgcagtaaaWgtaRgcgataatcBaataccgtatttttccatcNHtatWYgatH\\n\\\n\
+SaaaDHttgctgtccHtggggcctaataatttttctatattYWtcattBtgBRcVttaVM\\n\\\n\
+RSgctaatMagtYtttaaaaatBRtcBttcaaVtaacagctccSaaSttKNtHtKYcagc\\n\\\n\
+agaaaccccRtttttaaDcDtaStatccaagcgctHtatcttaDRYgatDHtWcaaaBcW\\n\\\n\
+gKWHttHataagHacgMNKttMKHccaYcatMVaacgttaKgYcaVaaBtacgcaacttt\\n\\\n\
+MctaaHaatgtBatgagaSatgtatgSRgHgWaVWgataaatatttccKagVgataattW\\n\\\n\
+aHNcYggaaatgctHtKtaDtctaaagtMaatVDVactWtSaaWaaMtaHtaSKtcBRaN\\n\\\n\
+cttStggtBttacNagcatagRgtKtgcgaacaacBcgKaatgataagatgaaaattgta\\n\\\n\
+ctgcgggtccHHWHaaNacaBttNKtKtcaaBatatgctaHNgtKcDWgtttatNgVDHg\\n\\\n\
+accaacWctKaaggHttgaRgYaatHcaBacaatgagcaaattactgtaVaaYaDtagat\\n\\\n\
+tgagNKggtggtgKtWKaatacagDRtatRaMRtgattDggtcaaYRtatttNtagaDtc\\n\\\n\
+acaaSDctDtataatcgtactaHttatacaatYaacaaHttHatHtgcgatRRttNgcat\\n\\\n\
+SVtacWWgaaggagtatVMaVaaattScDDKNcaYBYaDatHgtctatBagcaacaagaa\\n\\\n\
+tgagaaRcataaKNaRtBDatcaaacgcattttttaaBtcSgtacaRggatgtMNaattg\\n\\\n\
+gatatWtgagtattaaaVctgcaYMtatgatttttYgaHtgtcttaagWBttHttgtctt\\n\\\n\
+attDtcgtatWtataataSgctaHagcDVcNtaatcaagtaBDaWaDgtttagYctaNcc\\n\\\n\
+DtaKtaHcttaataacccaRKtacaVaatNgcWRaMgaattatgaBaaagattVYaHMDc\\n\\\n\
+aDHtcRcgYtcttaaaWaaaVKgatacRtttRRKYgaatacaWVacVcRtatMacaBtac\\n\\\n\
+tggMataaattttHggNagSctacHgtBagcgtcgtgattNtttgatSaaggMttctttc\\n\\\n\
+ttNtYNagBtaaacaaatttMgaccttacataattgYtcgacBtVMctgStgMDtagtaR\\n\\\n\
+ctHtatgttcatatVRNWataDKatWcgaaaaagttaaaagcacgHNacgtaatctttMR\\n\\\n\
+tgacttttDacctataaacgaaatatgattagaactccSYtaBctttaataacWgaaaYa\\n\\\n\
+tagatgWttcatKtNgatttttcaagHtaYgaaRaDaagtaggagcttatVtagtctttc\\n\\\n\
+attaaaatcgKtattaRttacagVaDatgcatVgattgggtctttHVtagKaaRBtaHta\\n\\\n\
+aggccccaaaaKatggtttaMWgtBtaaacttcactttKHtcgatctccctaYaBacMgt\\n\\\n\
+cttBaBaNgcgaaacaatctagtHccHtKttcRtRVttccVctttcatacYagMVtMcag\\n\\\n\
+aMaaacaataBctgYtaatRaaagattaaccatVRatHtaRagcgcaBcgDttStttttc\\n\\\n\
+VtttaDtKgcaaWaaaaatSccMcVatgtKgtaKgcgatatgtagtSaaaDttatacaaa\\n\\\n\
+catYaRRcVRHctKtcgacKttaaVctaDaatgttMggRcWaacttttHaDaKaDaBctg\\n\\\n\
+taggcgtttaHBccatccattcNHtDaYtaataMttacggctNVaacDattgatatttta\\n\\\n\
+cVttSaattacaaRtataNDgacVtgaacataVRttttaDtcaaacataYDBtttaatBa\\n\\\n\
+DtttYDaDaMccMttNBttatatgagaaMgaNtattHccNataattcaHagtgaaggDga\\n\\\n\
+tgtatatatgYatgaStcataaBStWacgtcccataRMaaDattggttaaattcMKtctM\\n\\\n\
+acaBSactcggaatDDgatDgcWctaacaccgggaVcacWKVacggtaNatatacctMta\\n\\\n\
+tgatagtgcaKagggVaDtgtaacttggagtcKatatcgMcttRaMagcattaBRaStct\\n\\\n\
+YSggaHYtacaactMBaagDcaBDRaaacMYacaHaattagcattaaaHgcgctaaggSc\\n\\\n\
+cKtgaaKtNaBtatDDcKBSaVtgatVYaagVtctSgMctacgttaacWaaattctSgtD\\n\\\n\
+actaaStaaattgcagBBRVctaatatacctNttMcRggctttMttagacRaHcaBaacV\\n\\\n\
+KgaataHttttMgYgattcYaNRgttMgcVaaacaVVcDHaatttgKtMYgtatBtVVct\\n\\\n\
+WgVtatHtacaaHttcacgatagcagtaaNattBatatatttcVgaDagcggttMaagtc\\n\\\n\
+ScHagaaatgcYNggcgtttttMtStggtRatctacttaaatVVtBacttHNttttaRca\\n\\\n\
+aatcacagHgagagtMgatcSWaNRacagDtatactaaDKaSRtgattctccatSaaRtt\\n\\\n\
+aaYctacacNtaRtaactggatgaccYtacactttaattaattgattYgttcagDtNKtt\\n\\\n\
+agDttaaaaaaaBtttaaNaYWKMBaaaacVcBMtatWtgBatatgaacVtattMtYatM\\n\\\n\
+NYDKNcKgDttDaVtaaaatgggatttctgtaaatWtctcWgtVVagtcgRgacttcccc\\n\\\n\
+taDcacagcRcagagtgtWSatgtacatgttaaSttgtaaHcgatgggMagtgaacttat\\n\\\n\
+RtttaVcaccaWaMgtactaatSSaHtcMgaaYtatcgaaggYgggcgtgaNDtgttMNg\\n\\\n\
+aNDMtaattcgVttttaacatgVatgtWVMatatcaKgaaattcaBcctccWcttgaaWH\\n\\\n\
+tWgHtcgNWgaRgctcBgSgaattgcaaHtgattgtgNagtDttHHgBttaaWcaaWagc\\n\\\n\
+aSaHHtaaaVctRaaMagtaDaatHtDMtcVaWMtagSagcttHSattaacaaagtRacM\\n\\\n\
+tRtctgttagcMtcaBatVKtKtKacgagaSNatSactgtatatcBctgagVtYactgta\\n\\\n\
+aattaaaggcYgDHgtaacatSRDatMMccHatKgttaacgactKtgKagtcttcaaHRV\\n\\\n\
+tccttKgtSataatttacaactggatDNgaacttcaRtVaagDcaWatcBctctHYatHa\\n\\\n\
+DaaatttagYatSatccaWtttagaaatVaacBatHcatcgtacaatatcgcNYRcaata\\n\\\n\
+YaRaYtgattVttgaatgaVaactcRcaNStgtgtattMtgaggtNttBaDRcgaaaagc\\n\\\n\
+tNgBcWaWgtSaDcVtgVaatMKBtttcgtttctaaHctaaagYactgMtatBDtcStga\\n\\\n\
+ccgtSDattYaataHctgggaYYttcggttaWaatctggtRagWMaDagtaacBccacta\\n\\\n\
+cgHWMKaatgatWatcctgHcaBaSctVtcMtgtDttacctaVgatYcWaDRaaaaRtag\\n\\\n\
+atcgaMagtggaRaWctctgMgcWttaagKBRtaaDaaWtctgtaagYMttactaHtaat\\n\\\n\
+cttcataacggcacBtSgcgttNHtgtHccatgttttaaagtatcgaKtMttVcataYBB\\n\\\n\
+aKtaMVaVgtattNDSataHcagtWMtaggtaSaaKgttgBtVtttgttatcatKcgHac\\n\\\n\
+acRtctHatNVagSBgatgHtgaRaSgttRcctaacaaattDNttgacctaaYtBgaaaa\\n\\\n\
+tagttattactcttttgatgtNNtVtgtatMgtcttRttcatttgatgacacttcHSaaa\\n\\\n\
+ccaWWDtWagtaRDDVNacVaRatgttBccttaatHtgtaaacStcVNtcacaSRttcYa\\n\\\n\
+gacagaMMttttgMcNttBcgWBtactgVtaRttctccaaYHBtaaagaBattaYacgat\\n\\\n\
+ttacatctgtaaMKaRYtttttactaaVatWgctBtttDVttctggcDaHaggDaagtcg\\n\\\n\
+aWcaagtagtWttHtgKtVataStccaMcWcaagataagatcactctHatgtcYgaKcat\\n\\\n\
+cagatactaagNSStHcctRRNtattgtccttagttagMVgtatagactaactctVcaat\\n\\\n\
+MctgtttgtgttgccttatWgtaBVtttctggMcaaKgDWtcgtaaYStgSactatttHg\\n\\\n\
+atctgKagtagBtVacRaagRtMctatgggcaaaKaaaatacttcHctaRtgtDcttDat\\n\\\n\
+taggaaatttcYHaRaaBttaatggcacKtgctHVcaDcaaaVDaaaVcgMttgtNagcg\\n\\\n\
+taDWgtcgttaatDgKgagcSatatcSHtagtagttggtgtHaWtaHKtatagctgtVga\\n\\\n\
+ttaBVaatgaataagtaatVatSttaHctttKtttgtagttaccttaatcgtagtcctgB\\n\\\n\
+cgactatttVcMacHaaaggaatgDatggKtaHtgStatattaaSagctWcctccRtata\\n\\\n\
+BaDYcgttgcNaagaggatRaaaYtaWgNtSMcaatttactaacatttaaWttHtatBat\\n\\\n\
+tgtcgacaatNgattgcNgtMaaaKaBDattHacttggtRtttaYaacgVactBtaBaKt\\n\\\n\
+gBttatgVttgtVttcaatcWcNctDBaaBgaDHacBttattNtgtDtatttVSaaacag\\n\\\n\
+gatgcRatSgtaSaNtgBatagttcHBgcBBaaattaHgtDattatDaKaatBaaYaaMa\\n\\\n\
+ataaataKtttYtagtBgMatNcatgtttgaNagtgttgtgKaNaSagtttgaSMaYBca\\n\\\n\
+aaacDStagttVacaaaaactaaWttBaagtctgtgcgtMgtaattctcctacctcaNtt\\n\\\n\
+taaccaaaaVtBcacataacaccccBcWMtatVtggaatgaWtcaaWaaaaaaaaWtDta\\n\\\n\
+atatRcctDWtcctaccMtVVatKttaWaaKaaatataaagScHBagaggBaSMtaWaVt\\n\\\n\
+atattactSaaaKNaactatNatccttgaYctattcaaaVgatttYHcRagattttaSat\\n\\\n\
+aggttattcVtaaagaKgtattattKtRttNcggcRgtgtgtWYtaacHgKatKgatYta\\n\\\n\
+cYagDtWcHBDctctgRaYKaYagcactKcacSaRtBttttBHKcMtNtcBatttatttt\\n\\\n\
+tgSatVgaaagaWtcDtagDatatgMacaacRgatatatgtttgtKtNRaatatNatgYc\\n\\\n\
+aHtgHataacKtgagtagtaacYttaNccaaatHcacaacaVDtagtaYtccagcattNt\\n\\\n\
+acKtBtactaaagaBatVtKaaHBctgStgtBgtatgaSNtgDataaccctgtagcaBgt\\n\\\n\
+gatcttaDataStgaMaccaSBBgWagtacKcgattgaDgNNaaaacacagtSatBacKD\\n\\\n\
+gcgtataBKcatacactaSaatYtYcDaactHttcatRtttaatcaattataRtttgtaa\\n\\\n\
+gMcgNttcatcBtYBagtNWNMtSHcattcRctttttRWgaKacKttgggagBcgttcgc\\n\\\n\
+MaWHtaatactgtctctatttataVgtttaBScttttaBMaNaatMacactYtBMggtHa\\n\\\n\
+cMagtaRtctgcatttaHtcaaaatttgagKtgNtactBacaHtcgtatttctMaSRagc\\n\\\n\
+agttaatgtNtaaattgagagWcKtaNttagVtacgatttgaatttcgRtgtWcVatcgt\\n\\\n\
+taaDVctgtttBWgaccagaaagtcSgtVtatagaBccttttcctaaattgHtatcggRa\\n\\\n\
+ttttcaaggcYSKaagWaWtRactaaaacccBatMtttBaatYtaagaactSttcgaaSc\\n\\\n\
+aatagtattgaccaagtgttttctaacatgtttNVaatcaaagagaaaNattaaRtttta\\n\\\n\
+VaaaccgcaggNMtatattVctcaagaggaacgBgtttaacaagttcKcYaatatactaa\\n\\\n\
+ccBaaaSggttcNtattctagttRtBacgScVctcaatttaatYtaaaaaaatgSaatga\\n\\\n\
+tagaMBRatgRcMcgttgaWHtcaVYgaatYtaatctttYttatRaWtctgBtDcgatNa\\n\\\n\
+tcKaBaDgatgtaNatWKctccgatattaacattNaaacDatgBgttctgtDtaaaMggt\\n\\\n\
+gaBaSHataacgccSctaBtttaRBtcNHcDatcDcctagagtcRtaBgWttDRVHagat\\n\\\n\
+tYatgtatcWtaHtttYcattWtaaagtctNgtStggRNcgcggagSSaaagaaaatYcH\\n\\\n\
+DtcgctttaatgYcKBVSgtattRaYBaDaaatBgtatgaHtaaRaRgcaSWNtagatHa\\n\\\n\
+acttNctBtcaccatctMcatattccaSatttgcgaDagDgtatYtaaaVDtaagtttWV\\n\\\n\
+aagtagYatRttaagDcNgacKBcScagHtattatcDaDactaaaaaYgHttBcgaDttg\\n\\\n\
+gataaaKSRcBMaBcgaBSttcWtgNBatRaccgattcatttataacggHVtaattcaca\\n\\\n\
+agagVttaaRaatVVRKcgWtVgacctgDgYaaHaWtctttcacMagggatVgactagMa\\n\\\n\
+aataKaaNWagKatagNaaWtaaaatttgaattttatttgctaaVgaHatBatcaaBWcB\\n\\\n\
+gttcMatcgBaaNgttcgSNaggSaRtttgHtRtattaNttcDcatSaVttttcgaaaaa\\n\\\n\
+ttgHatctaRaggSaNatMDaaatDcacgattttagaHgHaWtYgattaatHNSttatMS\\n\\\n\
+gggNtcKtYatRggtttgtMWVtttaYtagcagBagHaYagttatatggtBacYcattaR\\n\\\n\
+SataBatMtttaaatctHcaaaSaaaagttNSaaWcWRccRtKaagtBWtcaaattSttM\\n\\\n\
+tattggaaaccttaacgttBtWatttatatWcDaatagattcctScacctaagggRaaYt\\n\\\n\
+aNaatgVtBcttaaBaacaMVaaattatStYgRcctgtactatcMcVKatttcgSgatRH\\n\\\n\
+MaaaHtagtaaHtVgcaaataatatcgKKtgccaatBNgaaWcVttgagttaKatagttc\\n\\\n\
+aggKDatDtattgaKaVcaKtaataDataataHSaHcattagttaatRVYcNaHtaRcaa\\n\\\n\
+ggtNHcgtcaaccaBaaagYtHWaaaRcKgaYaaDttgcWYtataRgaatatgtYtgcKt\\n\\\n\
+aNttWacatYHctRaDtYtattcBttttatcSataYaYgttWaRagcacHMgtttHtYtt\\n\\\n\
+YaatcggtatStttcgtRSattaaDaKMaatatactaNBaWgctacacYtgaYVgtgHta\\n\\\n\
+aaRaaRgHtagtWattataaaSDaaWtgMattatcgaaaagtaYRSaWtSgNtBgagcRY\\n\\\n\
+aMDtactaacttaWgtatctagacaagNtattHggataatYttYatcataDcgHgttBtt\\n\\\n\
+ctttVttgccgaaWtaaaacgKgtatctaaaaaNtccDtaDatBMaMggaatNKtatBaa\\n\\\n\
+atVtccRaHtaSacataHattgtttKVYattcataVaattWtcgtgMttcttKtgtctaa\\n\\\n\
+cVtatctatatBRataactcgKatStatattcatHHRttKtccaacgtgggtgRgtgaMt\\n\\\n\
+attattggctatcgtgacMtRcBDtcttgtactaatRHttttaagatcgVMDStattatY\\n\\\n\
+BtttDttgtBtNttgRcMtYtgBacHaWaBaatDKctaagtgaaactaatgRaaKgatcc\\n\\\n\
+aagNaaaatattaggWNtaagtatacttttKcgtcggSYtcttgRctataYcttatataa\\n\\\n\
+agtatattaatttataVaacacaDHatctatttttKYVatHRactttaBHccaWagtact\\n\\\n\
+BtcacgaVgcgttRtttttttSVgtSagtBaaattctgaHgactcttgMcattttagVta\\n\\\n\
+agaattHctHtcaDaaNtaacRggWatagttcgtSttgaDatcNgNagctagDgatcNtt\\n\\\n\
+KgttgtaDtctttRaaYStRatDtgMggactSttaDtagSaVtBDttgtDgccatcacaM\\n\\\n\
+attaaaMtNacaVcgSWcVaaDatcaHaatgaattaMtatccVtctBtaattgtWattat\\n\\\n\
+BRcWcaatgNNtactWYtDaKttaaatcactcagtRaaRgatggtKgcgccaaHgaggat\\n\\\n\
+StattYcaNMtcaBttacttatgagDaNtaMgaaWtgtttcttctaHtMNgttatctaWW\\n\\\n\
+atMtBtaaatagDVatgtBYtatcggcttaagacMRtaHScgatatYgRDtcattatSDa\\n\\\n\
+HggaaataNgaWSRRaaaBaatagBattaDctttgHWNttacaataaaaaaatacggttt\\n\\\n\
+gHgVtaHtWMttNtBtctagtMcgKMgHgYtataHaNagWtcaacYattaataYRgtaWK\\n\\\n\
+gaBctataaccgatttaHaNBRaRaMtccggtNgacMtctcatttgcaattcWgMactta\\n\\\n\
+caaDaaNtactWatVtttagccttMaatcagVaagtctVaaDaBtattaattaYtNaYtg\\n\\\n\
+gattaKtaKctYaMtattYgatattataatKtVgDcttatatNBtcgttgtStttttMag\\n\\\n\
+aggttaHYSttcKgtcKtDNtataagttataagSgttatDtRttattgttttSNggRtca\\n\\\n\
+aKMNatgaatattgtBWtaMacctgggYgaSgaagYataagattacgagaatBtggtRcV\\n\\\n\
+HtgYggaDgaYaKagWagctatagacgaaHgtWaNgacttHRatVaWacKYtgRVNgVcS\\n\\\n\
+gRWctacatcKSactctgWYtBggtataagcttNRttVtgRcaWaaatDMatYattaact\\n\\\n\
+ttcgaagRatSctgccttgcRKaccHtttSNVagtagHagBagttagaccaRtataBcca\\n\\\n\
+taatSHatRtcHagacBWatagcaMtacaRtgtgaaBatctKRtScttccaNaatcNgta\\n\\\n\
+atatWtcaMgactctBtWtaaNactHaaaaRctcgcatggctMcaaNtcagaaaaacaca\\n\\\n\
+gtggggWttRttagtaagaVctVMtcgaatcttcMaaaHcaHBttcgattatgtcaDagc\\n\\\n\
+YRtBtYcgacMgtDcagcgaNgttaataatagcagKYYtcgtaBtYctMaRtaRtDagaa\\n\\\n\
+aacacatgYaBttgattattcgaaNttBctSataaMataWRgaHtttccgtDgaYtatgg\\n\\\n\
+tDgHKgMtatttVtMtVagttaRatMattRagataaccctKctMtSttgaHagtcStcta\\n\\\n\
+tttccSagatgttccacgaggYNttHRacgattcDatatDcataaaatBBttatcgaHtN\\n\\\n\
+HaaatatDNaggctgaNcaaggagttBttMgRagVatBcRtaWgatgBtSgaKtcgHttt\\n\\\n\
+gaatcaaDaHttcSBgHcagtVaaSttDcagccgttNBtgttHagYtattctttRWaaVt\\n\\\n\
+SttcatatKaaRaaaNacaVtVctMtSDtDtRHRcgtaatgctcttaaatSacacaatcg\\n\\\n\
+HattcaWcttaaaatHaaatcNctWttaNMcMtaKctVtcctaagYgatgatcYaaaRac\\n\\\n\
+tctaRDaYagtaacgtDgaggaaatctcaaacatcaScttcKttNtaccatNtaNataca\\n\\\n\
+tttHaaDHgcaDatMWaaBttcRggctMaagctVYcacgatcaDttatYtaatcKatWat\\n\\\n\
+caatVYtNagatttgattgaYttttYgacttVtcKaRagaaaHVgDtaMatKYagagttN\\n\\\n\
+atWttaccNtYtcDWgSatgaRgtMatgKtcgacaagWtacttaagtcgKtgatccttNc\\n\\\n\
+ttatagMatHVggtagcgHctatagccctYttggtaattKNaacgaaYatatVctaataM\\n\\\n\
+aaaYtgVtcKaYtaataacagaatHcacVagatYWHttagaaSMaatWtYtgtaaagNaa\\n\\\n\
+acaVgaWtcacNWgataNttcaSagctMDaRttgNactaccgataMaaatgtttattDtc\\n\\\n\
+aagacgctDHYYatggttcaagccNctccttcMctttagacBtaaWtaWVHggaaaaNat\\n\\\n\
+ttaDtDtgctaaHHtMtatNtMtagtcatttgcaaaRatacagRHtatDNtgtDgaatVg\\n\\\n\
+tVNtcaaatYBMaaaagcaKgtgatgatMgWWMaHttttMgMagatDtataaattaacca\\n\\\n\
+actMtacataaattgRataatacgBtKtaataattRgtatDagDtcRDacctatRcagag\\n\\\n\
+cSHatNtcaScNtttggacNtaaggaccgtgKNttgttNcttgaaRgYgRtNtcagttBc\\n\\\n\
+ttttcHtKtgcttYaaNgYagtaaatgaatggWaMattBHtatctatSgtcYtgcHtaat\\n\\\n\
+tHgaaMtHcagaaSatggtatgccaHBtYtcNattWtgtNgctttaggtttgtWatNtgH\\n\\\n\
+tgcDttactttttttgcNtactKtWRaVcttcatagtgSNKaNccgaataaBttataata\\n\\\n\
+YtSagctttaaatSttggctaaKSaatRccgWHgagDttaaatcatgagMtcgagtVtaD\\n\\\n\
+ggaBtatttgDacataaacgtagYRagBWtgDStKDgatgaagttcattatttaKWcata\\n\\\n\
+aatWRgatataRgttRacaaNKttNtKagaaYaStaactScattattaacgatttaaatg\\n\\\n\
+DtaattagatHgaYataaactatggggatVHtgccgtNgatNYcaStRtagaccacWcaM\\n\\\n\
+tatRagHgVactYtWHtcttcatgatWgagaKggagtatgaWtDtVtNaNtcgYYgtaaa\\n\\\n\
+ctttaDtBactagtaDctatagtaatatttatatataacgHaaaRagKattSagttYtSt\\n\\\n\
+>THREE Homo sapiens frequency\\n\\\n\
+agagagacgatgaaaattaatcgtcaatacgctggcgaacactgagggggacccaatgct\\n\\\n\
+cttctcggtctaaaaaggaatgtgtcagaaattggtcagttcaaaagtagaccggatctt\\n\\\n\
+tgcggagaacaattcacggaacgtagcgttgggaaatatcctttctaccacacatcggat\\n\\\n\
+tttcgccctctcccattatttattgtgttctcacatagaattattgtttagacatccctc\\n\\\n\
+gttgtatggagagttgcccgagcgtaaaggcataatccatataccgccgggtgagtgacc\\n\\\n\
+tgaaattgtttttagttgggatttcgctatggattagcttacacgaagagattctaatgg\\n\\\n\
+tactataggataattataatgctgcgtggcgcagtacaccgttacaaacgtcgttcgcat\\n\\\n\
+atgtggctaacacggtgaaaatacctacatcgtatttgcaatttcggtcgtttcatagag\\n\\\n\
+cgcattgaattactcaaaaattatatatgttgattatttgattagactgcgtggaaagaa\\n\\\n\
+ggggtactcaagccatttgtaaaagctgcatctcgcttaagtttgagagcttacattagt\\n\\\n\
+ctatttcagtcttctaggaaatgtctgtgtgagtggttgtcgtccataggtcactggcat\\n\\\n\
+atgcgattcatgacatgctaaactaagaaagtagattactattaccggcatgcctaatgc\\n\\\n\
+gattgcactgctatgaaggtgcggacgtcgcgcccatgtagccctgataataccaatact\\n\\\n\
+tacatttggtcagcaattctgacattatacctagcacccataaatttactcagacttgag\\n\\\n\
+gacaggctcttggagtcgatcttctgtttgtatgcatgtgatcatatagatgaataagcg\\n\\\n\
+atgcgactagttagggcatagtatagatctgtgtatacagttcagctgaacgtccgcgag\\n\\\n\
+tggaagtacagctgagatctatcctaaaatgcaaccatatcgttcacacatgatatgaac\\n\\\n\
+ccagggggaaacattgagttcagttaaattggcagcgaatcccccaagaagaaggcggag\\n\\\n\
+tgacgttgaacgggcttatggtttttcagtacttcctccgtataagttgagcgaaatgta\\n\\\n\
+aacagaataatcgttgtgttaacaacattaaaatcgcggaatatgatgagaatacacagt\\n\\\n\
+gtgagcatttcacttgtaaaatatctttggtagaacttactttgctttaaatatgttaaa\\n\\\n\
+ccgatctaataatctacaaaacggtagattttgcctagcacattgcgtccttctctattc\\n\\\n\
+agatagaggcaatactcagaaggttttatccaaagcactgtgttgactaacctaagtttt\\n\\\n\
+agtctaataatcatgattgattataggtgccgtggactacatgactcgtccacaaataat\\n\\\n\
+acttagcagatcagcaattggccaagcacccgacttttatttaatggttgtgcaatagtc\\n\\\n\
+cagattcgtattcgggactctttcaaataatagtttcctggcatctaagtaagaaaagct\\n\\\n\
+cataaggaagcgatattatgacacgctcttccgccgctgttttgaaacttgagtattgct\\n\\\n\
+cgtccgaaattgagggtcacttcaaaatttactgagaagacgaagatcgactaaagttaa\\n\\\n\
+aatgctagtccacagttggtcaagttgaattcatccacgagttatatagctattttaatt\\n\\\n\
+tatagtcgagtgtacaaaaaacatccacaataagatttatcttagaataacaacccccgt\\n\\\n\
+atcatcgaaatcctccgttatggcctgactcctcgagcttatagcatttgtgctggcgct\\n\\\n\
+cttgccaggaacttgctcgcgaggtggtgacgagtgagatgatcagtttcattatgatga\\n\\\n\
+tacgattttatcgcgactagttaatcatcatagcaagtaaaatttgaattatgtcattat\\n\\\n\
+catgctccattaacaggttatttaattgatactgacgaaattttttcacaatgggttttc\\n\\\n\
+tagaatttaatatcagtaattgaagccttcataggggtcctactagtatcctacacgacg\\n\\\n\
+caggtccgcagtatcctggagggacgtgttactgattaaaagggtcaaaggaatgaaggc\\n\\\n\
+tcacaatgttacctgcttcaccatagtgagccgatgagttttacattagtactaaatccc\\n\\\n\
+aaatcatactttacgatgaggcttgctagcgctaaagagaatacatacaccaccacatag\\n\\\n\
+aattgttagcgatgatatcaaatagactcctggaagtgtcagggggaaactgttcaatat\\n\\\n\
+ttcgtccacaggactgaccaggcatggaaaagactgacgttggaaactataccatctcac\\n\\\n\
+gcccgacgcttcactaattgatgatccaaaaaatatagcccggattcctgattagcaaag\\n\\\n\
+ggttcacagagaaagatattatcgacgtatatcccaaaaaacagacgtaatgtgcatctt\\n\\\n\
+cgaatcgggatgaatacttgtatcataaaaatgtgacctctagtatacaggttaatgtta\\n\\\n\
+gtgatacacaatactcgtgggccatgggttctcaaataaaatgtaatattgcgtcgatca\\n\\\n\
+ctcacccacgtatttggtctaattatgttttatttagtgacaatccaatagataaccggt\\n\\\n\
+cctattaagggctatatttttagcgaccacgcgtttaaacaaaggattgtatgtagatgg\\n\\\n\
+taccagtttaattgccagtgggcaatcctaagcaaaatgagattctatcctaaagtttgg\\n\\\n\
+gcttgatataagatttcggatgtatgggttttataatcgttggagagctcaatcatgagc\\n\\\n\
+taatacatggatttcgctacctcaccgagagaccttgcatgaagaattctaaccaaaagt\\n\\\n\
+ttaataggccggattggattgagttaattaagaccttgttcagtcatagtaaaaaccctt\\n\\\n\
+aaattttaccgattgacaaagtgagcagtcgcaataccctatgcgaaacgcctcgatagt\\n\\\n\
+gactaggtatacaaggtttttgagttcctttgaaatagttaactaatttaaaattaatta\\n\\\n\
+acgacatggaaatcacagaacctaatgctttgtaggagttatttatgctgtttactgcct\\n\\\n\
+ctacaaccctaataaagcagtcctaagaatgaaacgcatcttttagttcagaaagtggta\\n\\\n\
+tccagggtggtcaatttaataaattcaacatcgggtctcaggatattcggtcatataatt\\n\\\n\
+tattaagggctcttcgagtcttactctgagtgaaattggaaacagtcatccttttcgttg\\n\\\n\
+tgaggcatcttacaccgctatcgatatacaatgcattccaccgcggtgtcccgtacacaa\\n\\\n\
+ggaaacttgttaccttggggatataagaaaactcacacgtctcattattaaactgagtac\\n\\\n\
+aatttttgcacgagaaagtaatgcaatacaatatgatgaaagccagctaatgaaaaggga\\n\\\n\
+tggaacgcacctcggatctgttgcactggattaaaatccgattatttttaaaaatattca\\n\\\n\
+gtgctagagcatatcaggtctacttttttatctggtatgtaaagcccacggagcgatagt\\n\\\n\
+gagatccttacgactcaacgaaaagttataacataactcccgttagccaaagcccaatcc\\n\\\n\
+cgattactgccctaccctaacgtctgccatctaaatatcgaacttgttatgatcaatgtg\\n\\\n\
+actacctcccaccctttccccttcatttgttccactggggataagctagcgttttcagaa\\n\\\n\
+tcaatgcaataagaatagccaattgtctcacttcatcagagctcttggcaattccaggcg\\n\\\n\
+ctacgtggttctggaatatattcatttttcaaatagtaatacgtttagtgttgctattgt\\n\\\n\
+ctacacgtttggatattacgttatgtgagcggacatcaatagttgtctaactctttagta\\n\\\n\
+agccagagatagcactcttagcgaatggataccatcttccataagtttagttaatagtcc\\n\\\n\
+gaaacaactgcttcgagcatatttgaacctccttgtaggcaaatagcctcttcaaagcaa\\n\\\n\
+tcttactaatagatagagtttgttttaagggactactagaaatgggacaatcttaatagt\\n\\\n\
+atgacctaaactgacatttaaagatatatccaggtggcaagcataaagatcattgcgcca\\n\\\n\
+cctccaccgtgggattacttatcagtcgatatcctatatgctaagtttgcgacggcagaa\\n\\\n\
+tacaaactaagctgagttgatgctaaccttacctatgataccccattggaccggttaaca\\n\\\n\
+gccctacttattccaaataaaagaacttttatgctgtagaagctattatagtgatgcctg\\n\\\n\
+gtaacttcagtatattaaaatgacacacatacgccatatagagctcctggaactttgaat\\n\\\n\
+aatgagcgaacttcgaagttgaagagcaagaaaccatatgtcacggttgcctaaagcccg\\n\\\n\
+gtaaccagacatgtgctatcattgatcattatcgaggttttcataaccttgacccattat\\n\\\n\
+cggctgtgcgcggacaagtacttaaatcactagtttcttcacctgcttatcggtaagaaa\\n\\\n\
+taaggttggcaaagaatcgcataagacggacgtagagccgcagcgttgtgcgagtccagg\\n\\\n\
+tgcatgcgcagcaataggattttaaattttgttccatttttaatttagccgtaaggatgt\\n\\\n\
+ccgtaaatgattgaaaattggattcaatctttgggcctatgctactggaacctgatcgac\\n\\\n\
+aaaatttcaaacatacgttaactccgaaagaccgtatttttgcggctagaatagtcagtc\\n\\\n\
+gcttggagccatataccttaccacttaaacgacgtgctcctgtagttgaaatataaacag\\n\\\n\
+aacacaaagactaccgatcatatcaactgaagatctttgtaactttgaggcgaagcaccc\\n\\\n\
+tcttcgagacaactaagagtaaagtaccgggcgccgcaaggagtcgattgggaccctaaa\\n\\\n\
+tcttgacgaattgctaagaggctcagagctaccactgtaatttctctagagcccataata\\n\\\n\
+aatgaacgatacatccgtaggtagcacctaagggattataatggaagccaaatgcagtta\\n\\\n\
+ataatattatatactggcgtacacgattcgacggatctctcacatagtgattcacgaccc\\n\\\n\
+ccccctttgattgacacagcgtcagcattttgcaagaacgatcttctgcatagggtgcgc\\n\\\n\
+caccgtaaggatgacgtcgaagctacaactgggtataatttaccatgcttccctgatgct\\n\\\n\
+gagtgcaatacactaagaatgagtttttaccccatatcaccagtatttgttctgttattg\\n\\\n\
+cgaagaaatggctatgctgagttggcgactaaagtcacccatcctttttattaggtaacc\\n\\\n\
+ccctcccttaaactaactgatttgctggagctgccctgcatacatatactttatcattta\\n\\\n\
+tggacgtccgtgacgcttattatccaccatagtcgatatgctacacggattcattaatgg\\n\\\n\
+atcgtaggagtttaagttatatttactaagatcggtctcggctactatcccgccttaccc\\n\\\n\
+ggcgctatttacggccatttttaatatattgacggtaattattcctatggtttcgaccgc\\n\\\n\
+acgtccttggacaagaaagaatggcaaaaaaaatgtaaaagaaaaaaaatattgagtccc\\n\\\n\
+taccatcatataaaaaatatgtgatgagtaacttgacgaaatgttagtggttattaaaga\\n\\\n\
+ctatctattacaccttttgttttctgtcgtagtatattaaagtctagaagccttacagga\\n\\\n\
+aaatcagggttatacagccgatactccgcagcatgaatcatcgaggaggtgtcctaccat\\n\\\n\
+cgcgccttgtaatcttgtctgtgtatactgtatttagaccttttatacaaagtaaatatc\\n\\\n\
+tcggctttatgtgattgggaggggcctactcaaacatgatgacttgacctaataatcact\\n\\\n\
+gtgcgggcgtcttatgactagctattccttgaaatccaccaccaaatggttaatatgtaa\\n\\\n\
+aaactttgacgatgaaacaaggtgaatgtgtagttactttgtgtaattagctgcgtcgag\\n\\\n\
+cattgcttgtaaaaccgtcaatcgcacacgttacttccataaaatttctacgaatacacc\\n\\\n\
+cttcttaaaaaaaacgtaggaattcacgagtttaacaaacgataactgtataaagtggaa\\n\\\n\
+gtccgaagaaagcagatgcccgaactactcgaagatgtttcgttttcttaaccatagggg\\n\\\n\
+cttcttaatggcccactacgcacattttgttcaagcccgagagggacatccccattacgg\\n\\\n\
+gagtattactaaaactgttccgtaatacgttcagcaagggatgaaaaaggccactgctca\\n\\\n\
+agttattgacgtgggagtattacatcggaagcctgaatcccacactatgatggtctgtac\\n\\\n\
+aggcctagggactgcgtctagacggtattaccggcttctaatcatacgatcgtgagtctt\\n\\\n\
+aacgggaagtaaggctcacacctaccccaaaccatttatctatgtaagtataaaattgtg\\n\\\n\
+cgtaagtgttcaaagtggacaataaagacgtggcaaaaacccccgcacataagccgcttt\\n\\\n\
+agatttcacaaataccaatgcggttaaaaacatccttgagtcgtacatacaccatactcg\\n\\\n\
+cgttaaacggatataacagaagataataaatccggatgtggagtcggtgtaactatagaa\\n\\\n\
+agccaagtgaaataatgcttaccagtcatttagctatacggctttcatttcatgtcaaga\\n\\\n\
+gggtggagtttgacctgtacagttgatatatcaccgatacttagaactcacctaaagcta\\n\\\n\
+aaattgctcgcagcgtgtaatccgcatattacaaacaatagatgggattcattatacata\\n\\\n\
+agacacgatgatctgctttttcaggttgcgagatgttgcctatcgtcaatcgagtcctgc\\n\\\n\
+cttacaccacttaaacaaaagtattgacagggaacctattttcgaggtattatatagtcc\\n\\\n\
+agcttgaatatcaatttgacagttaacctagtgaaaatcagtaagaggaaatacgccaca\\n\\\n\
+ttctccagtgaaattctacgggttatcgtctagtccaactatcaattataactcacgaga\\n\\\n\
+tataagtaaattctcgtacttggcctgatttttattatactttggatccttagtaaacag\\n\\\n\
+gaagggagaaaccttcaacgaaaaacactggattttgttttactctcaaagctcttatat\\n\\\n\
+gacggaaataccctgtcaagtcttaactttattactagactaatgaaatgggcttggggt\\n\\\n\
+ggccagaatcatagtacaatttagcggatacactattcggactttcctatcggctgtctg\\n\\\n\
+gttggataagtatggggactaataggctagacatacctatacttaaactatacaggcgtc\\n\\\n\
+atctatctctgcaactttggagttccctgatgttctcccgccctttgggttcacatcttc\\n\\\n\
+tataccgacacccctaataacgattagtttgtgggttagagtaaattaatacggttaata\\n\\\n\
+ttaatgtatcgttgaaaagctggtgtcgccaataaggtaaccggctaggcagagtatatg\\n\\\n\
+tcacgaagtataactaccctaatgataagctgtaggaataaaattaatgctgtctctaag\\n\\\n\
+cgaagagatatttccgactctgttttaatgacgaatctcattacttctgacttgcaaatg\\n\\\n\
+ttcaatatggcacggtttcacggcacctttgtgacgcatataatgaacttagaagattat\\n\\\n\
+aacgacggaactttatatgataatccgttacgattaaagaatctgttaaatatcataatg\\n\\\n\
+gcattcagttctagaccgtgcatcatggtaaacttactttctctgcatggcgacatacat\\n\\\n\
+ttcgctattcaaattcgcgtgtggttacacccactcgcacctttggaatattaagagaag\\n\\\n\
+atgatcagaaaatccattcgctcaatttttctgacgtacgtctaatttatcctaggagac\\n\\\n\
+aaatcgttttatgtctctcacatttttgaagaaaggttcgagagacaatactcaggtcct\\n\\\n\
+gaactgctagaagatactcggtggagcgtggcaacaatgaaaaactcgtgacataaatga\\n\\\n\
+atgatacttttccaagttcagttaagtgaatatgtttaacatacccggcttttcgatctt\\n\\\n\
+aagctgacgctggacgtgcgagtaatgtcagtctcttacatacactagtgactccaagtt\\n\\\n\
+tcgtcaaaaacgccccctcccttctcgagcccactcacgctatgtattgacgcgaacttg\\n\\\n\
+ttcgggatcagacttttcaggagttcggtcgcgtgtccctatgtgctaatatataagtta\\n\\\n\
+gatcgcattagatgctaatctgaatacttatagacgaccttcaacgagaacgggtaccac\\n\\\n\
+cttgaggctagagttaggtgtgaaacgacaggtagggacatataaaatttgagtgcggct\\n\\\n\
+ttagttaagggtttaattacctactcaaacatcacgctcgcgcccttcgtacgtaatcga\\n\\\n\
+ccatctagaggctaaggggactgtactaggtagtgattaatgatatcctagacgcacgtg\\n\\\n\
+ccttagatcttcagactctgatggtccgcgatcaccgtaattgtagtcctccaactcgat\\n\\\n\
+cactttgttggcgtcaaagaaattacgatatctaaatacttataatacaataaccaagga\\n\\\n\
+tgagaatgactcatcgcgttggagttatattgcttgaagttctatggaatgaaagcacgt\\n\\\n\
+tatctgccgtcccaatatctccagtgagctaattcattggacggtccactttgatcaatc\\n\\\n\
+cccgaggagatgttcggacactttagtctgtaacacttagcgttgagaccacgaacaatt\\n\\\n\
+gattactcagtcttgaaggtgttttccaaagttcattttaaataagactacgataggcct\\n\\\n\
+ttcctattgatataaactacccggctctgttgttcgtgtgagtcgtacttctctgtgttt\\n\\\n\
+ttctgattatagcaagattcgattcttagtgtaaacagcgatttttatttgacccgtcaa\\n\\\n\
+tgagaagcgcataggatctaagcaaaattatcaagttgtgccacaaggtaagatctttcc\\n\\\n\
+agttattgcaggtaggatgtatcccacgttgatagtatgaggtctgacgtcaactgtcta\\n\\\n\
+ggagagttgaccgcgtgcgggtacaccggatttgcatcgatgttgagaacgcagaactcc\\n\\\n\
+cactgtcgtggcggcgttcctgatatttagcaagaggcgttgataaagccctcatcatct\\n\\\n\
+agatctcgacctcatctgccctcttgctccatcattttctacacagactactttcctatc\\n\\\n\
+tacgttagtataattgctttctatcttagtatcatttagagcttctccgtcaacaggttc\\n\\\n\
+gtgctattaaagttagtacgaaagggacaacttgtagcaacgcatttaatcggttttcga\\n\\\n\
+ctacttcgcacaaaatcagataaagaagtttgtcattctattagacattgaattgcgcaa\\n\\\n\
+ttgacttgtaccacttatgatcgaacactgaatcaagactgtgattaactaaaatagaca\\n\\\n\
+agccactatatcaactaataaaaacgcccctggtggtcgaacatagttgactacaggata\\n\\\n\
+attaattggactggagccattacattctctacaatcgtatcacttcccaagtagacaact\\n\\\n\
+ttgaccttgtagtttcatgtacaaaaaaatgctttcgcaggagcacattggtagttcaat\\n\\\n\
+agtttcatgggaacctcttgagccgtcttctgtgggtgtgttcggatagtaggtactgat\\n\\\n\
+aaagtcgtgtcgctttcgatgagagggaattcaccggaaaacaccttggttaacaggata\\n\\\n\
+gtctatgtaaacttcgagacatgtttaagagttaccagcttaatccacggtgctctacta\\n\\\n\
+gtatcatcagctgtcttgcctcgcctagaaatatgcattctatcgttatcctatcaacgg\\n\\\n\
+ttgccgtactgagcagccttattgtggaagagtaatatataaatgtagtcttgtctttac\\n\\\n\
+gaagcagacgtaagtaataatgacttggaataccaaaactaaacatagtggattatcata\\n\\\n\
+ctcaagaactctccagataaataacagtttttacgatacgtcaccaatgagcttaaagat\\n\\\n\
+taggatcctcaaaactgatacaaacgctaattcatttgttattggatccagtatcagtta\\n\\\n\
+aactgaatggagtgaagattgtagaatgttgttctggcctcgcatggggtctaggtgata\\n\\\n\
+tacaatttctcatacttacacggtagtggaaatctgattctagcttcgtagctgactata\\n\\\n\
+ctcaaggaaccactgctcaaggtaggagactagttccgaccctacagtcaaagtggccga\\n\\\n\
+agcttaaactatagactagttgttaaatgctgatttcaagatatcatctatatacagttt\\n\\\n\
+ggacaattatgtgtgcgaaactaaaattcatgctattcagatggatttcacttatgcctt\\n\\\n\
+agaaacagatattgcccgagctcaatcaacagttttagccggaaacaatcgaagcatagg\\n\\\n\
+gacaatgtatcttttcctaaattgccatgtgcagatttctgagtgtcacgaagcgcataa\\n\\\n\
+tagaatcttgtgttgcctcaactcgttgaaaagtttaaaacaatcgcagcagtctttttg\\n\\\n\
+gggtctactgtgtgtttgcaaaataactgaaagaaacgcttgaacaactctgaagtagct\\n\\\n\
+cgagtactcattaaagtgtaacacattagtgaatatcggccaatgaaccaaacgcttccc\\n\\\n\
+ggtacgctatctctctcatcgggaggcgatgtgcaggttatctacgaaagcatcccttta\\n\\\n\
+cgttgagagtgtcgatgcatgaacctcattgtaacaatagcccagcaaattctcatacgt\\n\\\n\
+gcctcagggtccgggcgtactcctccatggaagggcgcgcatctagtgttataccaactc\\n\\\n\
+gctttttaactactatgctgtagttctacaggcatagtggccagtattttctaacttctc\\n\\\n\
+tggatagatgctctcactcctcatccatcacggcttcagtttacgtcttacttgcttgtt\\n\\\n\
+cagcaacggatggaggcattaagtatcttcactgttccctaaaattgctgttcaatatca\\n\\\n\
+aagtaaggacgatacagggaaagctcaagcacactcattgaatactgccccagttgcaac\\n\\\n\
+ctcacttaatctgacaaaaataatgactactctaagtgttgcggaagcagtctcttccac\\n\\\n\
+gagcttgtctgtatcacttcgtataggcatgtaactcgatagacacgaacaccgagtgag\\n\\\n\
+aaactatattcttgcttccgtgtgtgtgacaccaggtaattgatgcggatataagctgga\\n\\\n\
+gatcactcacgcccacacaaggcgctgctacctctttattccaatgtgtaagaatttgct\\n\\\n\
+aacttcatttctagaccgcagctttgcggtcataatttcacggtacggacccttgggtta\\n\\\n\
+gagacttgataacacacttcgcagtttccaccgcgcacatgttttagtggcttctaacat\\n\\\n\
+agaatttttgttgtgacataaagagtgcgtgggagacttgcccgaccgttaagccataat\\n\\\n\
+caattgaaagccccgtgagtcacatctaattggttgtactgcgcatttagctatccttta\\n\\\n\
+gctgactcgaagagattcgattcctaatataggttaattagatggctgccgcgcgaagta\\n\\\n\
+aaacgtgaaaaacgtagtgcgcagatctgcataactcgcgcttaattacttatgagtagt\\n\\\n\
+tccaagttcgctacgttatgagagagattggaattaagcaaatatgttttatggtgattt\\n\\\n\
+tgggatgagaaggactgctaagtacggctactaaacaaatttctaaaaccgccatctacc\\n\\\n\
+ttatcttggagacatttaagttgtatatgtcactagtctagcttttgtctgtgggacgcg\\n\\\n\
+ttctcggaatgagggaaatgcaagagccgattcatcaaatgcttatctaagaaagtagtg\\n\\\n\
+gactattacaccaagcacgaatgccagggaactgctttcttgctcaggacctcgcgacaa\\n\\\n\
+ggtaccccgcataagtcctagaattacatttggtcagcaatgctgacatttgaccgtgaa\\n\\\n\
+aacataattttaatcagaaggcagctcacccgcttgctctagatcttatctttgtatgaa\\n\\\n\
+tgtcagaatttactgcaatatccgttccgaatagtgagggcttagtatagttctctgtat\\n\\\n\
+acaggtcacatcaaactccccctgtcctagtacagctctgagctttaattaattgcatac\\n\\\n\
+atttccttcaatcatcagatgaaaacaccgcgaatcatgctcttctcgtatagggcaaga\\n\\\n\
+gaagcaacaaacaactagcccgactcacgttcatccgccgtatccttgttcagttcttac\\n\\\n\
+tccgtattaggtcagcgaaatctaatcagaataatcggtcgcgtatcaaaattaaaatcc\\n\\\n\
+cgcttgaggttgacaattaaaacgctgagcagttatcggctattagatagtggggtgaaa\\n\\\n\
+gtaattggctggaattatgttaaaacgtgatattaagctaaaatacgctacttgttgccg\\n\\\n\
+acctaattcagtcattcgatattcagttagagccaagaataacaagcttgtataaattga\\n\\\n\
+acggggtgcactaaacgatgtgttactctaatattcagcttggagtatacctgaaggcga\\n\\\n\
+attcatgtatcggccaataataagacgttgaagatcacaatttggactagcaaaagaagg\\n\\\n\
+tgatttatgcgtggggattgagtccactgtacgagtacggtctctggaaaattataggtt\\n\\\n\
+cagggaatataaggaagtaaagataattaccaagagatttttggtatcgctatgacccag\\n\\\n\
+aggtgttctaacgtctgttttgatccgcagaatttctgcctcaatgcatatttgacggac\\n\\\n\
+ttgaactagagcctctaaagttaaatggcgacgcaactgttcctaaacttcaattattac\\n\\\n\
+tactctttttttcctagggtattgtagaggccagtggacaaaataaatcaaatttaagat\\n\\\n\
+gtttcggacattaacatcccccgtagcatagaaatcatcagttatccaatctctcatcga\\n\\\n\
+gcttttacaatttctgctggcgctatggacagcatatgccgcgagacctccgcaagactc\\n\\\n\
+acttgatcactgtaagtatcttcattagaggttagagcctatagttaagctgctgaccta\\n\\\n\
+gtaaaattggtattttctaattttattgctcaagttaaaggttagtgaagggataatgac\\n\\\n\
+gttatttttgaacaatgggttgtattcaattttatatcacgaatggaacccttcattccc\\n\\\n\
+ggcataatactagacgacacgaacaagctccgatctatcagccaggcacgtgttaaggtt\\n\\\n\
+taattccggcaaaccaatgaagcatcaaaaggtgacctgatgcaacttagggtcacgatg\\n\\\n\
+agtttttcaggactacttattacctattaataagttaacatgagccttcataccccgtaa\\n\\\n\
+gacaatacatactccaccaattagaattctgagccatcttatctttttgtatcatcgaag\\n\\\n\
+ggtatggccgaataggttaattagttactcctaacgtctctacaggcatgcatttgacgc\\n\\\n\
+accttcgaaaatagtcaatctctcgccacacgcgtctagtatgcagcatcaaaaatatag\\n\\\n\
+tccacggtttccggattaccaaacgcggcaaagagaaacattgtatcgacggagataact\\n\\\n\
+taatacagaaggaaggggcatcttcgaatacggatgaataattctatctgtttattctga\\n\\\n\
+catcttgttttcaggttaatcttacgcattcaaatgacgcctgccccatgcgtgcgcaat\\n\\\n\
+tattttctaatattgacgagagcaatctcactccttttgggtctatttatgttttattga\\n\\\n\
+ggcacaagcctatacagaacaggtactattaaggccgtgagtgtgagactcaaaccgtgg\\n\\\n\
+aaacaaaggatgggttgttcttggtacaagttttagtgcatgtgggcaatccttaccaaa\\n\\\n\
+atcagatgctatccttaactttgggctgcatttaagatggcggttggaggcctgtgagaa\\n\\\n\
+tcctgcgtgtcatctttaatgaccgaattcatccatgtagattcagatcacacactcatt\\n\\\n\
+ccttgatgttgtctaaacaaaagttgttgtggacgcattggagggagttaagtaacaact\\n\\\n\
+tgggatcgcatacttataaaaattatatgttaaactttcacaaacgctgaagtccaaagt\\n\\\n\
+aactagcccaaacgcctcgagagtcactaggtattaatggtgtttgagttcctgtgaaat\\n\\\n\
+agtgttcgaaggtaaaatttatgtaccaaatcgaaagaacacttaataaggcttgcttgc\\n\\\n\
+acggaggtatgatgtttactgactctacaaccctaattttccagtacgtacattcattcc\\n\\\n\
+aataggttagttctcaaagtgctatacaggctcctcaattgatgatatgcttcagccgct\\n\\\n\
+ctatggatattagctcattttatttaggaagcccgcttagaggcttactatgagggaaat\\n\\\n\
+gccaaaatgtcatacttttcggtgtgtcccatatgacaccgctttacatagaatttgaat\\n\\\n\
+taaaacgcgctctcccgttcactaccatacttggtaccgtgcgcatattacatatagata\\n\\\n\
+taggatcattttttaaagctgtactaggtttgatcgacaatcttatgctatactatatga\\n\\\n\
+tgtaaccctcataatcaataccgatcgtacgatcctagcataggtggcaagcgattttat\\n\\\n\
+gccgattattgtgttaaatagtctgtgagtgtgattatcagggctacgttggtagagggg\\n\\\n\
+ttgtatagacctcgcacacattgtgacatacttaacaatatacgaaaactgatataataa\\n\\\n\
+atccccttacccaaacaccaatcccgttgaatcaactaccataacgtctcccatataaat\\n\\\n\
+tgcctacttgtttgcataaatctgaatacataacaccattgcaccttcttgtgttccaat\\n\\\n\
+cccgttaagattgccttgtcagatgatatgcaagaacaatagcatttgctagcaattatt\\n\\\n\
+aacagctcttcgaattgcctccacataacgcgggagggtatattttaatttggcaaatac\\n\\\n\
+taagtactgttggcgtcatatgctattaacggttggatattaagttatgtcagccgtaag\\n\\\n\
+caagagtgggcgaaatattttgttacccagtgagagcactcttagagtttggatacaata\\n\\\n\
+ggccatatgttgacttaagaggacgtaactacgccgtacaccattgttcaaccgacttct\\n\\\n\
+tggcaaatagaatcgtattagcaatcttaagaatagagacacgttcgtgttagggtatac\\n\\\n\
+tacaaatccgaaaatcttaagaggatcacctaaactgaaatttatacatatttcaacgtg\\n\\\n\
+gatagatttaacataattcagccacctccaacctgggagtaattttcagtagatttacta\\n\\\n\
+gatgattagtggcccaacgcacttgactatataagatctggggatcctaacctgacctat\\n\\\n\
+gagacaaaattggaaacgttaacagcccttatgtgtacaaagaaaagtaagttgttgctg\\n\\\n\
+ttcaacagatgatagtcatgacgcgtaacttcactatagtaaattgaaacaaatacgcaa\\n\\\n\
+tttagacagaatggtacggtcatgaatgacagtaattcgaagtgctagaccaacttaaaa\\n\\\n\
+taggtaaacgtgcccgaaaccccccttaacagaaagctgctatcatggtgcagtatcgac\\n\\\n\
+gtgttcagaaacttgtaacttttgagcaggtccgagcacatggaagtatatcacgtgttt\\n\\\n\
+ctgaaccggcttatccctaagatatatccgtcgcaaactttcgatttagtcccacgtaga\\n\\\n\
+gcccaagcgttgtgcgactccacgtgcatgcccagaaatacgagtttaaatttggttaca\\n\\\n\
+tggttaattttgaccgaagcatcgcactttatgattgataattggattcaatatgtcgcc\\n\\\n\
+ctatgcgaatgcaacatgatccacaatttggctataagacgtttaatccgtatcacactt\\n\\\n\
+tgtttgcggctagtatagtaacgcccgtgcaccaagagtcagtaacaattataagtactc\\n\\\n\
+cgcaggtacttcaaatataaaaactaatcaaacacgacccatatgatcatctgaagatat\\n\\\n\
+ttggaactttctcgacaaccaccctcgtactcaatacttacactaatcgacaggcacacg\\n\\\n\
+caacgtgtacagtcgcaccatattgagtcaagatttgcttagtggcgatgagcgtacacg\\n\\\n\
+cttatttctctagtcacaattagttatctacgagacatcacgagggagcaaataagcgat\\n\\\n\
+gttatggctacacataggcacgtatgaatatgatataagccagttaaacagtcgaaccat\\n\\\n\
+cgagcaaattctcatgcaccaacccacacgttgaggcacaaagagtaagctgtttgaatg\\n\\\n\
+taacttcttctgctgagcgggccccaacgtaaggatcaactagaagagaaaactcggtat\\n\\\n\
+tagtttaaatgcgtcacggagcatgagtgcatttcactaagaatgtctgtgtaaccaata\\n\\\n\
+taacatctatttgttatctgattgcctacttatggctttgcggtcgtggcgactaatgtc\\n\\\n\
+tccaatccttttgaggtcggtaccaactccctttaaattacgctgtgcaggctcatgcac\\n\\\n\
+tgcatacatatacggtagcaggtagggacctcacgcacccttattataatcaatagtagt\\n\\\n\
+tatcagtcaacgaggcaggaatgctgaggtcgaggtgttggtatattttctatgtgccgt\\n\\\n\
+ctaggcgactatcacgcattaccaggcgagatttaagccaattttgaatatagtcaacgt\\n\\\n\
+aatttttactatgggttccaccgaaacgccttgcacaactaagaatcccataaaatatcg\\n\\\n\
+atatcaaataaaagattgtgtcaataccttcatatatattttttcggttgactaacgtga\\n\\\n\
+actaaggttaggggttttgtatgtctatataggaaacagtttcttttctgtcctacttta\\n\\\n\
+gtaaagtcttcaagccttactccaaaatcacggtgattaagccgttactcagcagcatga\\n\\\n\
+ttctgcctgctcgggtcctaaaatccagccttgtaagagtcgctgtgtattagctaggga\\n\\\n\
+gacctttgttaaaaaggatatatcgcggcgggatgtgagtgcgtggcgcatactcaatct\\n\\\n\
+tcagctcgtgtcattataatatctctcccccacgcttttcactagatatgccgtgtaagc\\n\\\n\
+aaacaccttatgcttaatttcgaaaatattggtacttgaaaaaagctgtaggggtactta\\n\\\n\
+atgtctggtaggagatcaggagagaattgagtgtaaaaccgtaaagccctcacctgactt\\n\\\n\
+catgtaaatggcttagaagactccatgatttaataaatactacgaaggaaagactggatc\\n\\\n\
+taaagataactctagtaaggccaactcccttcaatgctgttgccagttataatccaagag\\n\\\n\
+ctgtccttttctgaaccatagcggcttctgaagcgaactagaagcaaagttggttctagc\\n\\\n\
+cagacagccacataccctgtacgggtgtattactaaaactggtccggtattagttcacca\\n\\\n\
+agggaggaattaggcaaaggatctaggtatgcaagtcggagtattacatccctaccctga\\n\\\n\
+atccatcaataggttcctctgtactggccttcgcaatgagtattcaaggttgtacagccg\\n\\\n\
+tataataataagatagtgactatgaacgggaagtaacccgctcaccttccccaaaacatt\\n\\\n\
+gttatatctaagtattaaagtctgccgtagtgttaatactcgaaaataaacaactggcaa\\n\\\n\
+attacaccgcacttaagccgcttttgatttatatttttccaatgcgcttttaaaaataat\\n\\\n\
+tcagtcctacatactaattaagacccttaaacggagatatcacaagttaagttttaacca\\n\\\n\
+tctcgactaggtggaactatagatacccaactcaatttatcattacctgtaatgttccta\\n\\\n\
+gaaggattgcatttcatgtcaagacggtggagtttcacagcgaaacttcagtgtgaacag\\n\\\n\
+attctgagaaatcacctaaacctattagtcagagcacccggttagaaccagttgtcaaaa\\n\\\n\
+aatagagcggttgcatgagacagaagtaacgatgagatccgttgtaacgttgagacatct\\n\\\n\
+ggcctatcgtcaatacagtcctcccttaaaaatatttttaaatactaggcaaacccaaca\\n\\\n\
+taggttagtcctatgtgatacgccacatggtatatcattttgtaacgttacctagggata\\n\\\n\
+atcaggaagtggaattacgcaaaagtagacagtgaaatgcttagggttatagtctagtcc\\n\\\n\
+aaagataaaggataaagcacgtcagagaactatattagccgaatgggaatcattgttagg\\n\\\n\
+agactgtggatcatgtctaaaaagcaacgcagaaacagtcatcgaaaaaatctcgttttt\\n\\\n\
+gtttgaatctaaaagagctttgatgaccgatagtacctgtatactagttactgtattacg\\n\\\n\
+tgtctaatgatttcggattggggtccccagaatcagacgtcattgtagacgattcaagtt\\n\\\n\
+taccaatttaatttcccagctctccttggagaactatcgccaataattgcagtcactttc\\n\\\n\
+cttttctgaaacgataaagccgtcagagttctctgcaacgttggacttacctgaggttct\\n\\\n\
+aacccactttcggttctaatagtagttaacgacacaacgaataacctttactgtggggct\\n\\\n\
+ttcacgatattttttcgcttattattaatggttacgtcataagctggtgtccaaattaag\\n\\\n\
+gttaccggcttcgcagagtagttgtatccaagtataacttccctaatcataagatcgagg\\n\\\n\
+tagaaaattaatgctgtctctaaccgaacagatatgtcccactatgtggtatggacgttg\\n\\\n\
+ctaattacttctgaagggaaattggtcattatggatacgtgtctaccatcaggtcggacg\\n\\\n\
+cagatatggttctgtcttcagttgatccaccgttctttataggataataactgacgatta\\n\\\n\
+aagattatggtaaatagattaagccaattctcttcttgtcagtgaagcatccttaactga\\n\\\n\
+cttgctctgcagcccctcatacatttagctattcaaagtaccggctcgtttcaaactctc\\n\\\n\
+ccacctttggaagaggttgtcaacttgataagtatatcatttacagcattttttcggacg\\n\\\n\
+tacctctaatgtttcattgcagaaaattagttttttctatcgcacattttgcaagtaacg\\n\\\n\
+ttagagacacaattatctgcgaatgaactgctagatctgacgaccgggagcctcgcaaat\\n\\\n\
+atcaaaaaagactgacatatatcaaggagtcgttgacaagtgctggtaagtcaattggtt\\n\\\n\
+tatctgtcccggcgtttcgatcttaagctgaccatgcacggcagagtaatgtcactctcg\\n\\\n\
+ttcttacaagtctgtctccaagggtcggcaaaaaagacccctccattctcgagcccactc\\n\\\n\
+acgatatgtagggacgacaacttgtgcggcttatgaattgtctggactgcgggcgagggt\\n\\\n\
+ccatatctccgaagttagaagggacatacctttagatgataagatcaattcttattgacg\\n\\\n\
+aaattcatccacaacggggaacaacttcaccctagacttacgtctgaaaagacacctagc\\n\\\n\
+gtcttataaaaggtcagtgccccgtttcgtaaggctggaattacctacgcaaacttaaac\\n\\\n\
+ctcgcgcccttccttacgtatcgacaagatagaggctatcgcgaatgtactacggaggca\\n\\\n\
+tgaatcatatactagaaccaagtgcctgtgatattaacaagatgatccgacgcgagcacc\\n\\\n\
+gtaattctaggcataaaactccagcaatttgggggccgaaaacaaatgacgttagctaat\\n\\\n\
+taattatatgacatgatcaaaggaggtcaatcacgcatcgagttcgacgtatattcattg\\n\\\n\
+aacttcgtgcgtttgaaagaaacttttatgaaggcaaaattgatcctgtctcctatttca\\n\\\n\
+tgcgtacctcctagttgataattccccgagcagtggttaggacacttttgtcggtatcaa\\n\\\n\
+gttccggtctcaaaacgtaaaattctgtaatctgtatggatggtctgtgaattagttaat\\n\\\n\
+ttttatgaagtcgtcgagacgcagttcctattgatttattctaaacggagatgtgcttcg\\n\\\n\
+tgggactcggaagtagatctgtgtttatgattattgctactttagatgctgactgttaac\\n\\\n\
+tccgtgttgtttttcaaccgtatatcacaaccgaattggatagaacctatagtttcaagt\\n\\\n\
+tctgccacaaggtatcatatttacagttagtgctggttgcttctttcaaacgtggtgagt\\n\\\n\
+ttgtgctatcacgtcaacggtagagctcagtggaccgagtgcgcgttcaaccctgttcca\\n\\\n\
+gagagggtgtgatagcacatataccacgctcgtcgaggcgttcatgatagtttgcaagag\\n\\\n\
+ccggtgttaaacacatattattattgttatccaactaatcggacctatgcataaagcatt\\n\\\n\
+gtctaaacagaataattgcctatatacggtagttttagtgatttatatcttagtatcagt\\n\\\n\
+tagagcttcgaactcttcaggttcctcatatttaacgttcttcgaaagcgaaaacttcta\\n\\\n\
+caaacgaatgtaagcggttttccaagtagtacctataaatcacagaaagatctgtctcag\\n\\\n\
+tatagttgaaatggtattcagctagtgacgtgtaccaattatcatagttcactcaagcaa\\n\\\n\
+gacgctcattaacgaatatagacaagacactatatcatataataaaaaagaacatggtgc\\n\\\n\
+tcgaacatagttgaattcaccatattgaaggggaatgctgacatgtaattcgctactaga\\n\\\n\
+cgatcaattccctacttgtcaaagttgaactggtacgttcttggaattaaatatgattgc\\n\\\n\
+gctggaccaaattgcgacttcttgagtttcagggcaaacgattgagccggaggatgtccg\\n\\\n\
+tctcttacctttcttgcttatgataaacgacggtccctgtacatcactgggaattctcag\\n\\\n\
+caaaaataattgggtaaatcgagactcgatgtattcggccacaaaggtgttagacgttaa\\n\\\n\
+agattattcaacggggcgataataggatcataaccggtatgcaagcgcattgaaagagcc\\n\\\n\
+atgagatccttatccgataaacgctgcacggtatgtgcagccttattgtcgatcacgaat\\n\\\n\
+ttataaatgtagtctgggctgtaagttgaagacctaagttataatgaagtgcaataccaa\\n\\\n\
+atcgattcatagtggattatcagactcaagatatctcctgataaattacagttgttaaga\\n\\\n\
+tacggataaaatgagatttaagattagcagcctctaatctgtttcaatcccgttggaatg\\n\\\n\
+tggtatgcgatcaaggttaagttaaaatcaagcctgtcttcagtcttgattcttgttctg\\n\\\n\
+ccatcgcatgcggtctacgtgagttaatatgtagcttacgttctagcttgtgctaatctg\\n\\\n\
+agtatagattcgtagaggaatattatcaagcttccacgcctcaacgtacgtgtattggtc\\n\\\n\
+acacaagacactaaaagtggaagtagcgtaaactatagtctagttgttaaatgctcagtt\\n\\\n\
+cttgttatattcgatatactcttggctaatttatgtctgagtatataaaattaatgatat\\n\\\n\
+taacttgcatttcacggatcccttagaaaaagattttgaccgagcgcattataaacggtt\\n\\\n\
+acaccgaatcaatagaagcatacccaatagctttctttgaatttattgcctgcgcaactt\\n\\\n\
+ggctgactctctagatccgaataattctatatggtcgtgacgaaactagttcattactgt\\n\\\n\
+ttaaaatgccaacatgtcttttgggccgataatggctctttgcaaaattactcaatgata\\n\\\n\
+cgattgatcaaagcggtagttgctagtggtagcatgtaagtctatcaaatgtctgattat\\n\\\n\
+ccgaaaatcttccaaaagagtccacgtaccatatctatctcatagcgacgcgaggggaac\\n\\\n\
+cttatctaactatcattccatttaccgggtgactctcgatgcaggatccgattgggataa\\n\\\n\
+attgcccagaaatggctcattcctgactaagggtaaggccgttctcagcaagggaacccc\\n\\\n\
+gcgaatctaggcttataccatctagattgttaactacttgcctgtagttctacagccata\\n\\\n\
+ctggacagttgtttctaaatgatcgggattcatgctagcactcctctgaatgcaccgcgt\\n\\\n\
+aagtttaactattacgtccgtgggcagataaggatggaggctgtatgtatcttaactgtt\\n\\\n\
+acctaatatggctggtaattatcaaagtaaggaccttaatgccatagcgctagcaatcgc\\n\\\n\
+tttgtatactgaccatgtgccaacctctcttaatctgtaaaatataatgtcttagctaac\\n\\\n\
+tgtggacgatcatgtctctgcctagagcttcgctgtatcaattcctatagccagcgtact\\n\\\n\
+agtgacacaacaacaccgtgtgagaaaagatattagtccttacgtctgtctctctacagc\\n\\\n\
+ttattgatgaggattgaacatggacatatagctccccctcaaaagcagatgctacctctt\\n\\\n\
+tattccattctcgaacatttgccgaacttaatttcgacaaacctgaggtcacgtcttaat\\n\\\n\
+ttatcggtaacgtcacgtccctttgagactggataaatatattaccaggggccaacgagc\\n\\\n\
+aattgttggaggcgcttctataatacaaggtgtcttgtcaaagaaagacggcgtgcgtct\\n\\\n\
+cgtgcaactcacttaaccaatattaatgtgaaacccccctctctcacatcttatgcggtg\\n\\\n\
+tactgccctggtacatttcctgtacaggactccaacagtgtagattcctaagatagctgt\\n\\\n\
+tggagttgcctcacgccagatcgaaaaactgaataaactagtgagctgagctgcagaaat\\n\\\n\
+accgcttaattacttatgactagttcaaagggacctacgtgatgtcagacattgcaagga\\n\\\n\
+agaaattaggtttgtgcgtcattttggctggactagcactccttacttcccctactattc\\n\\\n\
+aaatgtcgtaaacagcatgagacaggatcgtgctgacatttaaggtctattgggaacgag\\n\\\n\
+gctacctttggtcgcgcgctcgcgttctccgaatgaccgaaatgcatgagcacagtatgc\\n\\\n\
+aattgcttatagatctaaggtctggtcgttgaaaccaagcacgtaggcctgggaaatcag\\n\\\n\
+ttcttcctcagcaactacacaaaagcgtccaagcattagtacttgtagtaaatgtccgaa\\n\\\n\
+cctatgcgctcatttgaaagtcaaaaaatatttttaagcagtaggcacctaacccgattc\\n\\\n\
+ctctacttagtagctttctttgattctcagaattgactgcaatatcactgcacaattctg\\n\\\n\
+tgccattactagacttctctgtattaacgtctcatcttactaacactcgcctaggacaca\\n\\\n\
+tctgagagtgaagtatttcaatacatttactgaaatcttcagttctaaaatccccgaata\\n\\\n\
+aggctcttatcggtttggccaacacaagaaaaaaacttcttgcaccactcaccttcatac\\n\\\n\
+gcaggagcctggggaacttagtaataactatttcggcagacaaagcttataacaagttgc\\n\\\n\
+cggcgcgtataatatttaaaagaccccttgagctgctcaattaaaacgctcacctggtat\\n\\\n\
+aggctattagatagtgccgtcttagtaaggggcgggaattatcggataaactgatatttt\\n\\\n\
+gataaaataaccgacttgttcacgacataagtcactaaggagattttatctttctccaaa\\n\\\n\
+gtatatcttccttggataatttcaaagcgctgcaatttaagttctgttactagtttatgc\\n\\\n\
+tgctgggaggtgaccggaaggcgtagtaatctagaggcaaattataagaagttcatcata\\n\\\n\
+tcattttcgactacaaaaacaaggtgttgtatgccggcgcattgtgtaaactggacgagt\\n\\\n\
+accctagatggaaaattatacgttaagccaagatttcgatgtaatgataattacctacac\\n\\\n\
+atttttgctatccataggaacaagagctgttctataggctcgtggcatacgaacatttgc\\n\\\n\
+tgccgctatgaatattggaagctcttcaactacagactctattcttaattgccgtcgaaa\\n\\\n\
+atgggccgaatcggctattattaatactcggtttttccgaggggattgttgtcgacagtc\\n\\\n\
+gtaattattattaatattgatgttggtgaggtcatttaaatacaaccttgcagacaatga\\n\\\n\
+ataagggatccaatctctcatactccttttacaattgctcatgcccctatgcaaacctta\\n\\\n\
+tgccgccacacctccgcaactctctcttctgaactgtaagtagcttcattactggtttga\\n\\\n\
+gactatactgaagctgatgacattctaaaatggctattttcgaatgtgattcataatgtt\\n\\\n\
+tatcgtttgggatggcagaatcacgttatttttgatatagcccgggtattctattgtata\\n\\\n\
+gaacgtatgctacaagtcattccccgaagaagactagaagtaaacaacatgcgaccatcg\\n\\\n\
+ttaagccacgcaaggctgtagctttatttcccgataacctatcttccataaatagcggac\\n\\\n\
+agcaggatactgacgctcaacatcagtggttatggtctaatttttaacttttaataaggt\\n\\\n\
+aacttcagcaggcatacacagtaactctttaatttataatcaaattagaagtctgacact\\n\\\n\
+tcttatatttttctatcatccaacgcgatcgcccattagcttattgtgttactaataacg\\n\\\n\
+tatctaaaccaatccttttcaagctactgcctatattgtcaatatatacaaacaacagga\\n\\\n\
+tagtaggctgcttaaaaaatattgtcaaccgtgtacgctttacaatacccggaaatcaca\\n\\\n\
+aactttgtagacaacgagtgaaatttatacactacgaagggccagcgtacaagacccatg\\n\\\n\
+aattaggcgatatgtttattctgacatattggtttatccttaatctgtcgctgtaaaatg\\n\\\n\
+aagccgcccccatccctgcgaattttttttcgaagattcacgactgaaatataaatacgt\\n\\\n\
+ttggctatatttatgttggagggaggcaatagcctttactgttaaccgaagatttagcca\\n\\\n\
+gtgagtgtgacactaaaacactggaataaatgcaggcgttcttctgggtaaaaggtttag\\n\\\n\
+tcaatctcgcctataagttcatatagctctggatataattatctggcccatgcatttatc\\n\\\n\
+atggcgcttggtgccctgtgtgaagccggcctctcatattgaaggtccgaagtattccat\\n\\\n\
+gtacattaagatcactctctcattcatgcatcttggcttaacaaatctggttgtccaagc\\n\\\n\
+tttccaggcacgtatggtacaaattcggatcgaatacttataaaaatgatatgttaaact\\n\\\n\
+gtctaaaacgctcatctacaaagtaaagtgcactaaccaatagagtctcaagaccgtgta\\n\\\n\
+atgctggtgcactgaatgtgtaatacggttagaagggattagttatgttacaaatccatt\\n\\\n\
+gaaaacttaagaagcattgcgtgctcggagggtgcatcttttatcaagagactaacatta\\n\\\n\
+ttttcaacgacgtacatgctttacaatagggtacttatcaaacgccgagaaacgcgccta\\n\\\n\
+tagtgatgttatgattatgacccgatatccattggaccgaattttatgtaggttcccagc\\n\\\n\
+gtactcgcgtaatatctcggtattgccataatgtaatacttgtcggtctctcccagatga\\n\\\n\
+aaaagcgttacagagtatttcaatgaaaaacagcgcgcaacgtcaatacctttaggggta\\n\\\n\
+acggccgctgatttcatatagatatacgataagttggtatagctctactaggtggcatcc\\n\\\n\
+acaatcgttgcatttactatagctggttacaatcataatctataccgttccttacatact\\n\\\n\
+accatagcgggatagcgtttttttgccgttgattgggtttaagaggatgtcagtctcatt\\n\\\n\
+atatccgattcggtgggagagccgttgttttcaaatcgcacactttgtgacataatgtac\\n\\\n\
+aagataacaaaactgatataagatataaactgtcaatatcaccttgacacttgaatcaaa\\n\\\n\
+gtaaattaactcgcaaatataatttgactaattgggtgcagatttctcaattaataaaaa\\n\\\n\
+aatggcaccggatgggcttacaagccccttatcattcacttgtatcatgatttccaagaa\\n\\\n\
+caatagaatttgctagcaagtatgaacagagattcgaattgcatccacagtacgccggag\\n\\\n\
+cgtttattttaatgtggatatgacgatgtactgttggcggcatttgctagtaaccggtcc\\n\\\n\
+ttatttacgtagcgcacacgtaagcatgtctgggagaaatatggtggtacaatctcagag\\n\\\n\
+aaagattacagtttggtttaaataggacttatcgggtcggaagtggaacttaataagcag\\n\\\n\
+tacacaattgggcaacagacgtcttgcctattacaataggattacaatgcgttagatttc\\n\\\n\
+agacacgttcgtgtttggctattcgtcaattccctaaatagttagacgatcaactattat\\n\\\n\
+caaagtgattctttgttcatcctccattcatgtaacagatggcacactacgcataacgcc\\n\\\n\
+gaggaattttaacgagatttaagagagcagttcgggcacaacccacttgactttataaca\\n\\\n\
+gctcggcagcataaacggtaatatgtgacaaatttccaaacgttataagaacgtatgtgt\\n\\\n\
+acttagaaaactaagtggttcatgttcaacagatgtgacgcagcaagcctaacttatcta\\n\\\n\
+ttggttttgctataaaagaacaaagttacacagaatcctaagggcttgtttcacacttat\\n\\\n\
+gcctagtgcttcaccatcttaaaatagcgaaaccggcacgaatcaaaccttaaaacaatg\\n\\\n\
+cgcagatattggtgatggtgactccgggtatgataatggtaactgttgaccagcgcccac\\n\\\n\
+ctcatcgaagtatagaaagtggttaggataaggatgagaccgaacttatttccggccata\\n\\\n\
+actttagattttctacctagtacacaacatcagggcggacacgaaaccgccatcacatca\\n\\\n\
+tataccaggtttaatttgcttaatgggggaagtgtcaacgaaccttcgaactttagcagg\\n\\\n\
+catatggccattatatatggccccagagcagaatgctacagcagacaaaatttggattta\\n\\\n\
+tgtagtttaatacctatcaaacttggtgtgaccatacttgtctaacgacagtgcacaaag\\n\\\n\
+tgtaagttacaattattactactcagcagcttctgcaatgataaaatcttatcatacacg\\n\\\n\
+tcacatatgataatatctacttagggggaacgggctccacaacctacatagtactcaata\\n\\\n\
+cttacactattcgacaggcacaccaaacctgtacagtcccaaaagattgagtcaactttg\\n\\\n\
+cagtactgcagatcacagtaatagcttagttagcgagtcaaaattagttttctacgagac\\n\\\n\
+tgcacgaccgtgcaaatttccgatgtgttggctacaaatagcaacgtatgaatttgtttg\\n\\\n\
+aagccacgtaaactgtacaaccttagagataagtctcaggctactaaaaacacgttgtgg\\n\\\n\
+cactaacaggatcatggttgattcttacttattcggctgaccggcccaataagtaacctt\\n\\\n\
+caactagaacagaataatcgggagtagtttaattcagtcaaggtgcaggtctcattgtaa\\n\\\n\
+ctaacaagctctgtgtaaccaagttaaaatcgttttcttagcggattccctacttatgga\\n\\\n\
+tttgagctcgtccacaatattcgatacaagaagtttgtggtccgtaacaacgaaatttta\\n\\\n\
+attacgctgtgcagcctcatccaaggaattaatagaaggttgatggtaggctccgaacgc\\n\\\n\
+tccatgattataatcaagtggactgtgcagtaaacgaggaaggtatcctgacgtcgtggt\\n\\\n\
+gttcgtttttgttatttgtgccctatacgagtagataaaccatgaacagcacagtgtgaa\\n\\\n\
+cccatggttgattttaggctaccttatttttaatttccgttacacagaaacgaattccac\\n\\\n\
+aactaacatgccattaatttttcgatatcttataaaagatggtcgaaattcattcattta\\n\\\n\
+ttttttttcggttctcgaaagtcaactaagctgtcgcgttttgtttctctttagaggtaa\\n\\\n\
+aagtggctttgatctcctacgtttggatactagtcaaccattactccatttgatccgtga\\n\\\n\
+gtatcacctgtctaacatccagcattatgactcctcggcgaagaaaagacacacttctta\\n\\\n\
+gagtcgatgtgtattagctagggacacagttgtttaatacgatagtgagcccagggaggg\\n\\\n\
+cagtgcgtcccccagtagatttattcagctagtgtaagtataagatatctcacccacgag\\n\\\n\
+gttcaagtgatatgcagtcttagaataatacttatcctgaatttcgatattatgggtact\\n\\\n\
+tcaataatccgctagcgctactttatgtctcgttggacagcaggacacatggcagtctta\\n\\\n\
+aacactaaagacatcacctgaatgaatgtaatgggattacaagaatcaatgaggtattat\\n\\\n\
+atacgacgtaggaaactctggatatatacagtaatctagttacgccatcgcacttcattc\\n\\\n\
+ctctggaaacttagaagacatcagctgtacgtggaggaaccagacccccgtatgtagcca\\n\\\n\
+aatagaaccaaagttgcttatacaaacacacccaatgacaatggaccgctggagttcgta\\n\\\n\
+aactcggaacgtagtactgcacaaacccagcatttagcaataggagctacgtatgcaact\\n\\\n\
+cccacgtggtaataccttcaagctatcaatatataggtgcctagctaatcgcattcgcaa\\n\\\n\
+gcagtattcaagcttgtaaaccagtataataattacagaggctctatgaaacccaacttt\\n\\\n\
+ccagctaaaagtcccaattaaatggttatttcgtacttttaaagtcgcccgttctgttat\\n\\\n\
+tacgcgaattgattctactccaaaattaaacacaaattatcaaccgtttcatttatattt\\n\\\n\
+gtcaatgcagctgtttaaaataaggctctactaaattataattaagacacttattaccag\\n\\\n\
+atttctctagttaagtttgaaccagctcgactaccgcgaaagatacattcccttctctat\\n\\\n\
+ttttcagttcatctatgggtcagagaagcattgaatttattctattcaccctcgtcgttc\\n\\\n\
+acagcgaatcgtcagtgtgatcagtgtatgagaaatatcctaaaccgtttagtcagacca\\n\\\n\
+cacgcttagaacaagtggtctaaaaagactgccctggaaggagtaagaagtatacagctg\\n\\\n\
+atccggtgtatccttcagtcatctgccctatactaattacacgacgcaaggaaaaatagg\\n\\\n\
+tttattttctaggcaaacccttcataggtgactccgatgtgttacgaatcatgcttgaga\\n\\\n\
+atgtgctatcgttaccgacggataataacgatctccaatgaaccaaatgtagaatgtcta\\n\\\n\
+ttgattacccttttactattcgacttagagataggagatagaacctcagtgtactttttt\\n\\\n\
+agccgaatgggaatctttgggaggtgaatggccataaggtcgtaaatccaaccctcttaa\\n\\\n\
+agtcttccatattatatcgttgttcgtggaatcgataacagatttgttgacccatagtaa\\n\\\n\
+atgtatactagtttatgttgtaagtgtagattgttttccgattgccgtccaaactttatg\\n\\\n\
+tcgtaattgtagaccagtaaagttgaccaaggtaagtgcccagcgatcctgcgagatcga\\n\\\n\
+tcgccaatttttccagtcactgtaagtgtaggtttagataaagccgtatgagttatatca\\n\\\n\
+taagggcctcggaaagcagcttcgaaccaaagttcccttataatagtagtttaactataa\\n\\\n\
+aagtatatactggtctgtcgccctttcacgatttgttttaccggtttatgaagcgttacg\\n\\\n\
+tcattagagcggctccaatttaaggttaacggcttccatgtgtagttgtatacaaggata\\n\\\n\
+acttaaagtatctgttcagcgagctagttaagttatcctcgatagaacacaactcagagg\\n\\\n\
+tcccaagatcgggtttgcaacttgctaatttattctcaaggcaaattgggaattatcgat\\n\\\n\
+acctgtataccataaggtcgctcgatgtgatgcttatgtcttctggtgatcctaccttag\\n\\\n\
+ttagtgctgattaacggaacattaatgtttatcgttttgagatttagccaattctctgat\\n\\\n\
+tctaactcaagatgccttatctgacgtgctatgcagcccctaagtattttacattgtaat\\n\\\n\
+aggacacgctcctttaaaactcgccaaaaggtcgttgtggttctctactggttaactata\\n\\\n\
+taatttacagctttgttgagctagttcctctttggtttaagtcctcaatattagttggtt\\n\\\n\
+cgagcgataagttggctagttaccttagtcactatattagatccgaatgttatgcttcat\\n\\\n\
+ctgaagaccgccaccctccaaaatttcttttaagactcacttattgcaaggtgtaggtga\\n\\\n\
+attcggctcgtttctcaagtggtgtatctgtacacgagtttccatattttcatcaacagc\\n\\\n\
+caccgcacacttatgtcactctaggtattaaaagtcgctctacaaggggacgcaattaag\\n\\\n\
+aaacagacatgctagtcaaaaataaacatagcgaggcaccactaattcggccgcttatca\\n\\\n\
+atgggatgctctgcgcgagacgcgccagagctcagtagttagttcggacatacatttact\\n\\\n\
+tcagatgatcaattagttttctacaaatgcttactctaccccgaaaaaagtcaccagact\\n\\\n\
+cttacgtctctttagtatccttccgtcttatataaggtcagtcccccgtttcggtaccct\\n\\\n\
+ggaatttactaagaataatgaaacagcccccaaggacgtacgtttacaaatgatagacca\\n\\\n\
+gatcgcctagcttattccgacgcatgttgcatagaattgaaccaacggaatgtgagagta\\n\\\n\
+actagatgagccgaccacagcacccgtttgcgtcgcagaatacgcctgatagttcggcca\\n\\\n\
+cgaaatcatatgtcctttgagtattaagtatttgtaatgatcaatcgagctcaagcaagc\\n\\\n\
+ttacacttcctcggatattcagggaacttagtgcctttgaaagatacgttgatcaacgaa\\n\\\n\
+aaattgataatggctcatatggaatgcctacctcatagtgctgaattaacacagcactgc\\n\\\n\
+ggacctaacttttcgaggtttcaagttcacgtctcaaaacctaataggctggaatatgta\\n\\\n\
+gggatcctcggtgaatttgtgattgggtttgttgtagtactgaccaagtgaatattcttt\\n\\\n\
+ttttctaaaagcagatctgctgccgggcactacgaaggagatctctgtgtatcattattg\\n\\\n\
+cttcttgacatgatgactcttaaatcactgtgggtgtgcaaaacgatagcacaacccaat\\n\\\n\
+tcgatagtacatattgttgatacttcgcactaaaccgttcatatttaaaggttgtgctcc\\n\\\n\
+ttccttcgttaaatactggtgacttggtcctatctactattagctagacctctggggaac\\n\\\n\
+cacgcccccgtaaaacctgtgcaagagagggggtcatacatcttagacatcgcgcctcca\\n\\\n\
+ccagggaagcattgggtgattgaccaggtgtgtaacaaatatgattattcttatactaat\\n\\\n\
+attagcaaagatgcataatgatttgtattaaatgtataattgaattgataagggtctttt\\n\\\n\
+agtcagtgatagagtagtataaggtagacattagaactcttaaccggacgcagatttttc\\n\\\n\
+ggtcttagtaagccaattagtcgacaaaacaaggtaagagcggttactagtagtacctat\\n\\\n\
+aatgcactgaatcttcggtcgaagtatagttctaatgctatgcagattgtgacggcgaca\\n\\\n\
+aatgttcagacttatatcatgaaacaagctcttgtaagtattgacaaatgaaaagattga\\n\\\n\
+atatttttaaatacaaaatgcgcctacttattaggggaattaaccagattgaaggccaat\\n\\\n\
+cctcacatgtaatgagataatagacgataaatgaaattcttgtaatagttgaactgctac\\n\\\n\
+gtgatgggtattatatatgattgagatcctccaattgccgacgtcttgtcttgatgccca\\n\\\n\
+aaagattgtcaacgaggagctccctcgcgtacctgtcgtccgtatcataaacgacgcgac\\n\\\n\
+atgtacagcactccgaagtataagcaataataatgcgggtaatccagactagatcttttc\\n\\\n\
+ggactcaatgcggtttcacggtaaacatgattaataccggagagtagtcgagcttatcag\\n\\\n\
+cgatgcaagcgaattcattgtgccaggagatacgttgcagataaaaccggcaacgtatgt\\n\\\n\
+caacaagttttggcgatctcgttgtttgtattcgacgaggcgcgggaacttcaagaacta\\n\\\n\
+tcgtatattcaagtccattaccttttagtttcagactggtggagctgactaaagttatat\\n\\\n\
+catcattttgtacactggtttagttaacgataatttcagatttaacatgaccagacgata\\n\\\n\
+atcgctgtatatccagttggaatgtggtttgccagaaaggttaacttataatcaagcctc\\n\\\n\
+tcttcagtcttgattcgtcgtatcccatccattgcgctatacctcagtgtatttggagct\\n\\\n\
+gtagttataccgtgtgctaagatcagtagacatgacgagagcaatattatctaccttaca\\n\\\n\
+agcatcaacggacgtctagtcggaacaaaagactctaaaactcgaacttcaggttaatat\\n\\\n\
+actatagttctgtattcagcagttattcttatattcgatattatcttgcctattggatgt\\n\\\n\
+ctgactttagtatattaatcatagtatctgccatgtaaaggtgccagtactaaatctgtt\\n\\\n\
+tcacagtgcgaattataaacggttacaaccattaaagacaacaagaccctatagctttat\\n\\\n\
+ttgaattttgtcaatgcgcaacttggagctcgcgatacatcccaattagtctatagggtc\\n\\\n\
+gggacgattctacggcatttctggttataatgacaacatggattgtggcccgagaatcgc\\n\\\n\
+tctttcattaattaagcaatcattacagtcttataagcgctacttccgagtggtagcagg\\n\\\n\
+taactcgatataaggtcgcatgagccgaatagcttaaaaaacaggccaccgaacattgat\\n\\\n\
+agagaataccgaccacagcgcaacctttgattactttcattaaattgtacggctcactcg\\n\\\n\
+acatcaagcttaagattgcgataatgtgaactcaaatggatcagtactgaagaaccgtaa\\n\\\n\
+cccacttcgcagaaagcgtacccagagaagatacgctgttacaatatacagggtgaaatt\\n\\\n\
+attgcctgttcttcgtaaccatttcgccaaacttggttagaaatgatagccattcatgat\\n\\\n\
+agaaataagctgaatgataccagtatctttaactatgtagtcagggggaagataacgatg\\n\\\n\
+gtccatgtatgtttctgatatgtgacagtattggccgcgtaatttgctaacgaagctact\\n\\\n\
+taatgcctttgagcttcatatagatttctttaatcaaaatcggcaaaaagatagtatgag\\n\\\n\
+ctataatatatgctagtagagaactctggaccatcatctatatgaatactgattcgagcg\\n\\\n\
+tgcaattactttagcctgcgtactactgactctacaaaacactctgagataagtttgtag\\n\\\n\
+tcagtaagtcgctctctataaaccttttggatgaccattgtacagccacttatagatccc\\n\\\n\
+aataaatagcacaggagacagagtttttcaatgctcgatcatttgccgatagtattttcg\\n\\\n\
+tctaacctcagggcacctattatttgatacctaacctaacggccctttcacaatggagaa\\n\\\n\
+atatatgacatcgggacaaacacaaatggtgggtggccaggagatatgacatggtggcgt\\n\\\n\
+ctctaagaaacacggactccctctaggcaaactcacgtaaccaattttaatgtcaaacaa\\n\\\n\
+aacgctcgaaaagattttgccgtgtaatgacctggtacattgactggtcaggaatacatc\\n\\\n\
+actgtagttgccgtagtgtcctgttggtgttccatcaagacacatcgtataacgcaattt\\n\\\n\
+acgacggacatcagatcaagttatacagattatttaagtatcacgtgtgcattgggacat\\n\\\n\
+aagggatctcacacatgccttggaacatttttgctttgtgccgctttttcgctgcactac\\n\\\n\
+caatccttacttaccagtatattcaaaggtcgttaacagaatgagaaaggttagggctct\\n\\\n\
+aagttatcgtcgattgggatagacgagacatttgcgagcgccctccacggatacgaatct\\n\\\n\
+cccatatcaatgtgaactggatgctatgcagtttagttcttacgtctcctagtggtaaaa\\n\\\n\
+atcaaagtagcactcgcatagcagttattcagaacctaatacacaaaaccgtcaaacatt\\n\\\n\
+ttctaattctaggtatgggccgatcataggagctaaggtgaaactcataaatgttttgtt\\n\\\n\
+agatctagcatcctaaaaagatgcatatactgagtagctggcgtgcattctctcaattgt\\n\\\n\
+atcctttttaactgaactagtcggtcccatttcgtgactgagatctattaaccgataaga\\n\\\n\
+ttaataacactcgcattcgtatcagctcagagtgaagtttttcaataatttgactgatat\\n\\\n\
+attaacttctaaaataaccctttaagcctcggatccgtttcccaatcacatcaaaaattc\\n\\\n\
+ttattccaactatctacggattaacaacgtgcatggggatcgtagtaagaacttgttccg\\n\\\n\
+atcactttgagtatatcaagttgacggcccggttattattgaatagaaacattcacctgc\\n\\\n\
+taaattaaataccgcacatcggatacccgatttcagagggccgtcttactaagggcaggc\\n\\\n\
+tttgttcggtttaactgagatgttcattattttacagtatgcttcaactaatatgtaacg\\n\\\n\
+aaggacagtggatctgtctccatagtagatcttcagtcgtgaatttcataccgctcctat\\n\\\n\
+ttaagttcgcgttcgagttgttgatcatggcacgtgaaagcaacccctagtattctagac\\n\\\n\
+gaaaattttttctagttcatctgataatttgccaattcaaaaacaaccgctggtttcccg\\n\\\n\
+gcgcattctctaaaatggaagtcgaacctagagccattatttgtcggtaacccatgagtt\\n\\\n\
+ccttcttttcagaagttaatacactgtggtcctatacagaggaaaaacagcggttatata\\n\\\n\
+cgatcgtggcataacaacattggatcaagatagcaatttggctacctattctaattctca\\n\\\n\
+ctagattcggtattccactacaatatcggcagattaggattggatgaataatcggtgttt\\n\\\n\
+aagtccggttgcgtctccaatctcctaatttttattaatattgatcttggtgacctattg\\n\\\n\
+taaataaaaacttcaagactttgaataacggtgaaaagatagaagactcatttgaaaatg\\n\\\n\
+gatcatccacagatccaaacattagcaagacactaatccccaactagctattctgatcgc\\n\\\n\
+gatcgtgctgcagtactcctgtcacaatagtctgttcatgatctaattctttttgggctt\\n\\\n\
+tgttcgatggtgattcagaatctttatccggtcgcttccctgtagctactttgtggggat\\n\\\n\
+attgcccggggattatagggttgagatcgtttcctaaaagtatttaaaccaagtagactt\\n\\\n\
+caactaaactacatcagaacatcgtgaagacaccatacgcggtacctttatttaccgata\\n\\\n\
+acatttcttcaagaaataccggtaagcagcataatgaccctaaacagctcggggtatcgt\\n\\\n\
+cgtagttttaaattttatttaggttactgctcaaggaataaaaactaactatttaattta\\n\\\n\
+taataatattacaaggctcacactgattagatttgtctataagacttcgcgatcccccat\\n\\\n\
+taccggattgtcttaagaataaactagataaaccatgcattttctagataaggcctttag\\n\\\n\
+tctaattagatacaaaaaacacgatagttgcatccttaatttattgtgtcaaacctggaa\\n\\\n\
+ccttttaattacccgcaaatcactttatgtcgagactacctctgaaatttattatctacc\\n\\\n\
+taccgcatgaggacttgaaccatcttgtaggagttatgtttattagctaagattcgttta\\n\\\n\
+tcctgtagcggtccatgtatattcaacaagcaaaaagcactcagaattgtttttagttga\\n\\\n\
+gtcaagactgatatataaataagtttccctagttttttcgtggtgggacgatattgaatt\\n\\\n\
+gaatcttaaccgaagagtttcccactctgtcgcacaataatacacgccaatatttccagc\\n\\\n\
+cctgcttatgccttaatcggttactcaatctcccattgaagttcattttgatctgcatag\\n\\\n\
+aagtttcgggcccagccttttttctgccaccttcctccaagctctgtagacgcactctaa\\n\\\n\
+gattgatgctcacatgtattaattctacattaacataaatatataagtcatgcatcttcg\\n\\\n\
+agtaaaatatctggttctccaacatgtcctggcacgtatcgttataatgcccatacatgt\\n\\\n\
+agtattaaaatgattgggttaactggatattaagatcatcgaaattgtaaagtcaaatta\\n\\\n\
+acaatactgtctcaagaccgtgtattcctcgtgctcggaagggctattacgcttacttcc\\n\\\n\
+gttttggtatcttaatatgactttcaaaaattaagttgcagtgagtcctacctgcgtgca\\n\\\n\
+tcggttagcaagagtataaaagttgtttaaacgaactacttgctttacaataccggtcgt\\n\\\n\
+atatatcgccgtgaatccagaagattgtcttctttggattatcaaccgagatcctgtgga\\n\\\n\
+ccgatgttttgggaccttcacagaggactccaggtagagctcgcttttgcattaatctaa\\n\\\n\
+gaattgtacctctctaaaagatctaaaacagtgaatgtgtatttcatggaaaaacacaga\\n\\\n\
+gaaacgtaaattactttaggccgaaaggcacatgagttattatacatatacgagatggtg\\n\\\n\
+gtatacatcgaattcggggcatacactatagttgcattgtatttagctgctttaaataat\\n\\\n\
+atgatattaccttccttacataagacattaccggcataccctggttttcaacttgtgggg\\n\\\n\
+ctttttgacgatcgcactctcatttgatccgagtagggcggtgacccctgcttttcaaat\\n\\\n\
+acaaaaatttcgctatgaaggtaatagattacttttcgctgttatgatagaaacggtaaa\\n\\\n\
+tttaaaattgaaacttctagaaaagtaaagtaacgagaaatgattttgtgaataatgcgg\\n\\\n\
+tcatgattgcgcaagtaagaaaaaaaggcaaaaggatgcgcggaatagaaacttatcagt\\n\\\n\
+cacgggtatcttgatttcattcttcttgtcaattgccgacataggatgaaatcagattcc\\n\\\n\
+aatgcaatacacagtaacccccacccttgattgtaatgtcgatttgaagttgtacgcgtc\\n\\\n\
+gacgaagtggatagtatacgggccttttgtacggtgcgatcaactatgaatctcggcgag\\n\\\n\
+ttagatggtcgtacaatctcacacatagaggtcacttgcctgtaatgacgaattttcggc\\n\\\n\
+taggtactcgaactttattagaagtaaaaatgtgggcaaaagaaggattccattttacaa\\n\\\n\
+gacgattacaatgagttacatgtctctcaacgtagtctttccctagtagtctttgaacta\\n\\\n\
+tttaggtactccagaaaattttagcaaagggtttctgtgtgaatccgccattcatgttta\\n\\\n\
+tgatggaacaataagaataacgccctcgtatgttatcgacagtgaagtcagcagttcggc\\n\\\n\
+caaaaacatattcaatttagtacagatccccagaagttaagctaagtgctctaaaatggc\\n\\\n\
+ctaaacggttatcaaagtaggtctaattactatactaacgggtgcatcgtaataactgct\\n\\\n\
+gtcgatgcaacactatatgatagtgtcgttttgctatatatgtacaatgtgacaaagaag\\n\\\n\
+ccttagcgattcttgcaaacttaggacttcggattctcaatcttaaatgtccgaaaacgc\\n\\\n\
+aaagattcaaaaatttaatctatgagcagatatgcctgatggtgactacgcgtatgttaa\\n\\\n\
+ggctaaatgttgacaaccgcacacataatcgaactattgatagtcgggagcataaccagg\\n\\\n\
+tgaacgtactttgttcacgacatttattgacatgttctaaatacgtctcaaaatcacggc\\n\\\n\
+gcactagaaaacgcaatcaaatcattgtcctggtttaagggccgtaatgccggtagtgtc\\n\\\n\
+aaacttcatgagaactttagctggcttttggccagtatttagggaccaagagcactagcc\\n\\\n\
+ttaagctgaatattttgccatttatctactgttataactttaaaacttggtggcaccaga\\n\\\n\
+cttgtcgatacacacgcatcaatctgtaacgtaaaaggtttactaagaacaagcgtagga\\n\\\n\
+attgagtttatattatatttaaactaaaagatgatattagcttctgagggcgatagggct\\n\\\n\
+ccaaatcataaagaggaatatattattacacgattagaaacccacaacatacctcgaatc\\n\\\n\
+gcccaaaagtttgacgaaacttggcagtactccacatctcagtaatacagttgggagagt\\n\\\n\
+ctcaaatgttgttttattactcaatgaaccaccctcataatttcactgctgttccattaa\\n\\\n\
+atttgcaaacgatcatttgctttgaagaaacgtaaaatcgacaaaattacagataagtag\\n\\\n\
+atgcataataaaaaaaactgctcgctataacacgatcatcgtgcattcttacttaggagc\\n\\\n\
+atcacccgcacaataacgtaccttaaactacaacactattagaccgagtactgtaattca\\n\\\n\
+cgaaagctcaagctcgcattgtaaagaacttgctctctcgtaaaatgtgataatagtttg\\n\\\n\
+cggagaggattcaattattttccattgcacctactccactagattcgataaaagaaggtg\\n\\\n\
+gtcctcccttaaaaagaaatgttaagtaacatcggaaccataagcaaagcatgtaagtga\\n\\\n\
+accgtcatccttccctaagaaacataaaggtttttaataatgtcgactgtgaactataac\\n\\\n\
+tgcatcctttcctgacctactccggttccttgttgttatttctgaacgagaccagtagat\\n\\\n\
+aaacaatgtaaaccacagtgggtaccaatggtgcatgtgacgctaccgttgttttaagtg\\n\\\n\
+cccgtacaaacataagaagtcataatcttacttgaaattaattttgccttttattttttt\\n\\\n\
+tcaggctcgaaattaatgatttgttttttttgaccttctagttacgctaatatgcggtcg\\n\\\n\
+cctgtggtttctattgagtcctataacgggatgggatctaatacgtttggttactagtaa\\n\\\n\
+acaaggtataaatttgataccggagtatcaactgtataacatcaagctttatgactcata\\n\\\n\
+cgcgaagtaatgacacaaggctttcaggagatcgcgagtacagagccactaaggggtgta\\n\\\n\
+ttacgatagtgacaccaccgagcgcactcactccccaagtagatttatgatcctacgcta\\n\\\n\
+agtattagatatataaccaaagaggttctagtcagtgcaactcttagaataataattagc\\n\\\n\
+cggttttgcctttttaggcctaatgcaatattcagctagcccttatgtatctcgcgttcc\\n\\\n\
+acagcaccactcatggcacgcgtttaaactaatcaaatataatctatgaatgttatgcca\\n\\\n\
+gtacttgaataaatcaggttttttataagtccttgcatactctcgttatatactgttaga\\n\\\n\
+gtcttaccccatagaaattctttcatctgcaaacttagaagaattctcagctacggggag\\n\\\n\
+cataaagtccccaggatgttgacaaatacaacaaatgtggcttatacaaacactccatat\\n\\\n\
+gaaaatcgaaccctcgtggtagttttagccgaaccttgtacggataaatccctccatttt\\n\\\n\
+ccaatagcagatacctatcctactacctcgtggtattaaattaaagcttgaaatatagag\\n\\\n\
+ctgcatagcttatccaattcccaagcacgagtctaccgtcgtaaccacgatttgatttac\\n\\\n\
+agacgctagagcaaacccatctttaaacatataagtaaaaattaaagggtgagtgcgtac\\n\\\n\
+gtgtttactagcaacttcgcttattaagacaattgtttataagccataattaaaaacata\\n\\\n\
+tgttcaacaggttcattgatatttgtaattgcacaggtttttaataaggatctacgtaag\\n\\\n\
+tataatgaacaaactttttaccagagttatattctgtactttgaaaatgctcctctaccg\\n\\\n\
+ccttagagactttcaattagattttttgcagttaatctatgcgtaagtgaaccatgcaag\\n\\\n\
+ggatgcgattcaaccgcctcgtgctaaccctatcgtctgtctcataactgtaggtctaat\\n\\\n\
+ataattttcagttttcgaacacataaccctttgaaaatctgctatttaatgtctcacctg\\n\\\n\
+catgcactatcttctatactgctcagaacggctatacgtcactatgctccaagtgacgat\\n\\\n\
+ttaaacgaagcaaggaataataggtttattttagtgcaaaacaattaagtgcggactacg\\n\\\n\
+tgctctttacaataagccttgtgattgggctataggttaagtcccatattaacgatctcc\\n\\\n\
+aatgtacaaaatcgacaatcgctttgcattacccggttactagtcgaattacagatagct\\n\\\n\
+gttagatactcactctaattttggacaacaatcccaatcttggggtcgtctatcgcctga\\n\\\n\
+agctcgtaaatccttccatcttaaacgattacatattatagacttgttcggggtagagat\\n\\\n\
+atcacagttgtgcaaacattgtaaatcgatactagtttatgttggtagtctagttgcttt\\n\\\n\
+taccattccccgaaaaacttgatctactatttcgacaacagtaaacttgaactaggtaag\\n\\\n\
+tgaaaacagagaatgcctcatagtgccactatttgtccactatatgtaagtgtagcttta\\n\\\n\
+cataatccactatgactgagatcattacggcctaggaaagcagcgtagaaaaaaagggcc\\n\\\n\
+cggatattacgactgtaactataaaactagttactggtagcgcgccatgtatagatttgt\\n\\\n\
+tttaccggttgtggttgcgttaacgaatttcagccgcgaaaattgatccgttaaccagtc\\n\\\n\
+catctcgacttctataaaacgataaagtaaagttgatgttcagcctccttcttatggttg\\n\\\n\
+catcgagagtacactactcagtgggaaatagatcggggttcctacttcagattgtattat\\n\\\n\
+ctaggcaattgccgattgtgccatacctggataaaataagctacctacatgtgatgctta\\n\\\n\
+tctattatcgtcatactaccttagggtgtcctgttgaacgctacattaatctttagccgt\\n\\\n\
+ttgagatgttccaatggataggagtctaacgcatgatgaagtttaggaaggcagagcatc\\n\\\n\
+ccactaagtatgtgacagtgtatttcgaaacgagacgttataaatagaaaaaaggtcctt\\n\\\n\
+ctggttctattctgctgaactattgaatggaaagattggttgacctacgtactatttgct\\n\\\n\
+tgaagtcatcaatttgacggggtgagagacatatggtgcatactttacggactctatatt\\n\\\n\
+ttagatcagaagcttagcagtcttctctacaccccctcacgacataattgcttttaagaa\\n\\\n\
+tctatgtttgattcctctacgggaattcggatccgttcgcatgtgcggtttatctaaacc\\n\\\n\
+aggggacatatgttcagctaaagcatacgaacactttgctaactagacgtatgtatagta\\n\\\n\
+gctataaatcccgacgatatttacaaaaagaaatgagactcaaatatatacatagcgacc\\n\\\n\
+ctacacttattcgcaccctgatctaggcgatcctagcacccacacccgaaagtgagcact\\n\\\n\
+agtgtcttccgtattaaatttactgcagttgagattttagttgtctactaaggattactc\\n\\\n\
+taacccgtaataaggatcaagactcggtactagctttactatcattccctatgtgttttc\\n\\\n\
+ctaactcacaagggtacgtaccagcctatgtaattacaataatgataaagacacaaagga\\n\\\n\
+agtaactttacaaatgagtctccagttacactagcttagtccctcccatcttgctttgaa\\n\\\n\
+gtctaaatacgcaatctctgaggatatacagcagaagaacactcataacgttggagtcca\\n\\\n\
+agaattagactcatagggcccccaacatttaatatgtactgtgagtttgaaggtgttcta\\n\\\n\
+ttgttaattcctgctcttgatacatgacacgtactccgtgtttaaggcttcggactgact\\n\\\n\
+ttctttcataagttgagcaacgaaaatttcagaatcgataagttggattcactaactaat\\n\\\n\
+acggctgattgaaaactccactccggacctatatggtcgacctttatacgtaaccgatat\\n\\\n\
+aaaacttataggctggtatatcgagccttcctagcgcaatttcggatggggtttcttcta\\n\\\n\
+ctactcaacaacggaatagtctttgtttagtaaaccagagctcaggacgcccaatacgta\\n\\\n\
+ggagagcgctgtggagcatgtgtcattatggactggagcactcttaaatcactctgcgtg\\n\\\n\
+tgctaaacgatagatcataacatgtcctgagtaaattttcttgatacgtcgcaatatacc\\n\\\n\
+gttattagttaaacgttctcatccgtcatgcgtgaaatacggctgtcgtgctcagatata\\n\\\n\
+ctattagcgactcatctcgcctaacacgcacacgtataaactcggaatgactgccgctct\\n\\\n\
+tacatattagaaatacagactacaccacggaagcattgggtcattctcaaccgctgtata\\n\\\n\
+aaagatgattagtcttataataagattaccaaagaggcagaatcatgggtagtaaatcta\\n\\\n\
+ttattcaagtgattaccgtcgtgtaggcagggagtgaggacgagatggtactcaggacaa\\n\\\n\
+atattaaccggacgaagtggtttacgtcgtactttcactattagtagtaaatacaaggta\\n\\\n\
+acaccggggaatagtactaaatataatgatatctatcttcgggagaacgagtcgtctatt\\n\\\n\
+gctttgaacattctcaaggcgtaaaatgtgctgacttatagcatgatacaaccgattgtt\\n\\\n\
+acttttgtctattcaaaagattgaatagttttttatacaaaagccgcatacttatgacgg\\n\\\n\
+ctagtatacagtttcatcccctagcatcaatgctatggacagtattgaacttataggaaa\\n\\\n\
+ttcttctaatagggcaaatccgtcgtgatgcctattttttttcagtcacatcctcaaatg\\n\\\n\
+gcactagtattgtcgggatcccattaacaggctcaaccacgagctcacgcgaggacatgt\\n\\\n\
+agtccgtatctttaacgaagcgacagcgacagaactcccatggataaccaattataaggc\\n\\\n\
+ccgtaatcctctagacatcgtttaccaataaatccgctttctccgtaatcatgttgaata\\n\\\n\
+ccccagagtagtccagatgataaccgatgaaacacaagtctttctcaatgcacttacggt\\n\\\n\
+gaacttattaccgccaacgtagctcatcaaggttgcgacatctagttgtgtgtttgcgac\\n\\\n\
+gagcccagcgaacttcatcaactttcgtatattcaacgccttgtaattttactttaagac\\n\\\n\
+gcctggtgatgtagattcttagataatcagtttgttatcggctgtactttaccataattt\\n\\\n\
+cacaggtttcaggtcaagaagattatagctgtatatacagttccatgctcggtgcacaga\\n\\\n\
+aacgtgatcggataataatcaatcgcttatgtcgtctttaggcgtatccaatacatgccc\\n\\\n\
+cgataccgcagtgtatttcgacatgtaggtataccgtcgcatttgagctcgagtcaggac\\n\\\n\
+gtcagctagattagattccttaatagaatataccgacctctagtccgaactaaactatag\\n\\\n\
+ataacgccaacttcaggttaattgtctagtcgtctgtttgcagatgggattcttagatga\\n\\\n\
+gtgagtatcggccatattggttcgagcactttagtttttgatgcataggatatgcaatgt\\n\\\n\
+atagctgaaagtactttatctgtttcaaactcacattgattaaaccggtaaacctttaaa\\n\\\n\
+gactacaagaaaatattcagtgagggcaattttgtcaatcacaatcttccagctagagat\\n\\\n\
+acttcacaatttgtcttgaggctacgcaacattagacggattttcgcgttttattgaaat\\n\\\n\
+aatcgaggggcccaagagtatccatagttcattttgtaagatttctttacaggcttatta\\n\\\n\
+cagcttcttcagactcctacatgcttacgagttatatgctagcatgtgaacaatagatta\\n\\\n\
+atatacaggaaaacgtacattgagagagatgaccctacacagcgcaaccgttgagtactt\\n\\\n\
+tcattaaagggtaacgctctcgagacagcatccttaagatggccttattgtcaaatcatt\\n\\\n\
+tgcagaagtacgcaagatccctaaccaacgtagaagaatccctacaaacacatgagacgc\\n\\\n\
+ggtgaaaatagacagggtgttagtattcaatcttcggagtatcaatttcgccaatcttgg\\n\\\n\
+tgagaaagcataccctttcttcagagaaagaagatcaatcataacactatctttaacgag\\n\\\n\
+gtacgcacgcgcatcattacctgcctccatggatctttaggatagcggaaagtattggca\\n\\\n\
+gcgtattgtgatttcgttcctactttatcaatttcacattcatatacatgtcttttatca\\n\\\n\
+aaatcgccaataagataggatgagctatattagatgctagtagagttcgcgccaacatca\\n\\\n\
+tcgataggaatactcaggacagcgtgataggacttttcaatccctaatactctctataat\\n\\\n\
+tataactctctcttaagtttggaggcagtaacgcgctctatataatcagtttgctgcacc\\n\\\n\
+attcttcagcctctgatacatacaaataaattccacagcagtaagagggtttaattgaga\\n\\\n\
+catcttgggaacttaggattttactctaacatcaccgaaacgattattggataccgtacc\\n\\\n\
+taaacgaactttctcaaggcagtaatataggacatccgcaataacacaaatgctgcctcc\\n\\\n\
+ccaggagttatgtcttcctggaggctatatcttacacccactcactataggcaaactaaa\\n\\\n\
+gtttaaatgttgattgtctaaaaaaaagatagataagagttggccggcgtagcacatgcg\\n\\\n\
+aaagtgaatcgtaagctataattctctggacttgaagttctgtcctgttcctctgcaaga\\n\\\n\
+aacaaacttcctttaaagctatttacgacgcacatctcagcaagttataaacatgttgga\\n\\\n\
+agtttctagtcggaattcccaaagaacggatctatctaatgcattcctacatttttcctg\\n\\\n\
+tctgccgatggtgccatcctattcaaagaatttcttaaaagtagattaaatgggactttt\\n\\\n\
+aacaatgagtaaccttacgcctctaagggttcctcgagtgccatacaccagtcaggtccg\\n\\\n\
+agccacatacacggagaacattctaacatagcattctcaactcgatcatttgcaggttac\\n\\\n\
+ttctttcctatcctagtgctaaaaatcatacttgcaatcccatagcacggattaagaacc\\n\\\n\
+taagaaacaattcagtaaaacatgttcgaattcttggtatgggaacatcattgcagctat\\n\\\n\
+ggtctaacgcattaatgtttgggtacatcttccatcatataaacaggaagagtctgacga\\n\\\n\
+cagggagtgcttgcgatcatgtctatcattgtgaaatcaaattgtagctcacatgtcgtc\\n\\\n\
+tatgagagcgtgtatccgataagatttagaaaaatagaagtcgtataagatctcactgaa\\n\\\n\
+cttttgaatgaatgtgaagcatatatgatctgctttaataaaactttatccataggatac\\n\\\n\
+gtttccaaatcaattcaataattattagtcaaaatagataaggatgaacaacctgaaggc\\n\\\n\
+cgatcggacgtagaaagtggtcccatcactttgagttgatattgttgaaccacacgttat\\n\\\n\
+tatggttttcaaacagtctcaggatattgtatatacagataatccgataccagttgtctg\\n\\\n\
+acgcccctcttacgtaccccaccctttgtgacgtttaaagcagttgttcagtattttaaa\\n\\\n\
+ctaggcggcaactaatttggaaagaagcacagtggatatgtctaaattcttgttattcag\\n\\\n\
+gcctgaatttaatacaccgcatagttaacttcgcggtagagttgttcatcatgcctcctc\\n\\\n\
+taagctaccacttctatgatacaccaatagttgttctacggaatctgataattggccaag\\n\\\n\
+tcataaacttccgctgcgttcaacccccttgctcgaatatccaactcgaaaagacagcct\\n\\\n\
+tttggtgtccggaacaaatcagttacttcttttctgatgttaattctctgtggtcagata\\n\\\n\
+cagaccaaaaactccgcggatttaccatcctccaagaacaaatttgcatcaacatagcat\\n\\\n\
+tttggctacatattctaagtctcaatagtttaggttttcaactacattatcccaacatta\\n\\\n\
+ggattggaggaataatagctgggtaagtccccttgcgtctacaatcgactattttttatg\\n\\\n\
+aatatgcttctgccgcacctatggttattaaaaaagtcatgactttgaagaaccctgaaa\\n\\\n\
+agatagatgaatcaggtgtaatggcagcagccaaagagcatataattagcaacactctaa\\n\\\n\
+gaacattatagatatgatgatagcgatcgtcatgatgttatccggtcacaatagtagctt\\n\\\n\
+catcagctaattcgttttgccagtggtgacttgcgctggaagaatcgttatacggtccct\\n\\\n\
+tccctcttgatacggtgggggcttattcaaccgcgtggattgggttgtcatacttgcatt\\n\\\n\
+aaacgatgtaaaccatctagtagtcaactatactaaatcacaaaatagtgatcaatacat\\n\\\n\
+acccgcttcatggttttaaccatttaattgattaaagatattccgctaagaaccattatc\\n\\\n\
+tacctaaactgatcgccgtatcctagtagtttgaaatttgatgtaccgtaatgatcaacg\\n\\\n\
+aagtaaaacgttatattgtatgtagaataataggtcttggagctaaatgatgtgattggt\\n\\\n\
+agtgaagacttacccttacaactttaccggtttctcggaagaatatactagagaatcaat\\n\\\n\
+gcatgggctacataagcactttagtctaatgagataaaaaatacacgagtcttccatcat\\n\\\n\
+gaattttttgtcgaaaaactcgaacctggtaatttaaaccatatatctttatgtcgtcaa\\n\\\n\
+taactctcatatgttttatataacttcccaatcacgacttgtaactgcttgttcgactga\\n\\\n\
+gctgtttgagctatgaggccgggatccggttgagctacatctatttgctacaagaaaaat\\n\\\n\
+gaaagcacatttgttgggagttctggctacactcatagagaaataagtggcccgagtggg\\n\\\n\
+tgcggcctgcctccatattcaagtgtatcttaaaccaagtggttccaacgctcgcgctaa\\n\\\n\
+agaattaaagcctttatttcctccacggagtagcccgtaatccggttcgaaagagaccat\\n\\\n\
+tgaagttaattttcatatccagtgaagtttaggcacaagcatgtgttctgccacatgcct\\n\\\n\
+caaagcgctcttcaaccaagatatgattcatcctaacttcgatgaatgcgtctgtaacat\\n\\\n\
+aaatatagaaggaatgattcggcgagttaattttcgccttctccaacatggcatccctac\\n\\\n\
+gttcgttataaggaccatacatgtaggttttaaaggtttgcggttaatcgatatttacat\\n\\\n\
+catagaaattctatagtcaaatttacaagactctagatactcactcgttgcagccggcta\\n\\\n\
+ggaagcgctttgtaccttacttcccttttcgttgcgtaatatgaatttcatatagtaagt\\n\\\n\
+tcaaggcactcatacctccgtgaagagggtagatagactattaaagttgtttaatagtac\\n\\\n\
+gtattgatggaaatgacccgtaggagatttaccactcaatccacaagattcgctgctgtg\\n\\\n\
+cattatcaaaacagtgcatgtcgaaacatgggttgggtccttcaaacacgaatccaggta\\n\\\n\
+gagatacctttgcaattttt\\n\";\n\
+\n\
+dnaInput = dnaInput + dnaInput + dnaInput;\n\
+\n\
+var ilen, clen,\n\
+ seqs = [\n\
+  /agggtaaa|tttaccct/ig,\n\
+  /[cgt]gggtaaa|tttaccc[acg]/ig,\n\
+  /a[act]ggtaaa|tttacc[agt]t/ig,\n\
+  /ag[act]gtaaa|tttac[agt]ct/ig,\n\
+  /agg[act]taaa|ttta[agt]cct/ig,\n\
+  /aggg[acg]aaa|ttt[cgt]ccct/ig,\n\
+  /agggt[cgt]aa|tt[acg]accct/ig,\n\
+  /agggta[cgt]a|t[acg]taccct/ig,\n\
+  /agggtaa[cgt]|[acg]ttaccct/ig],\n\
+ subs = {\n\
+  B: '(c|g|t)', D: '(a|g|t)', H: '(a|c|t)', K: '(g|t)',\n\
+  M: '(a|c)', N: '(a|c|g|t)', R: '(a|g)', S: '(c|t)',\n\
+  V: '(a|c|g)', W: '(a|t)', Y: '(c|t)' }\n\
+\n\
+ilen = dnaInput.length;\n\
+\n\
+// There is no in-place substitution\n\
+dnaInput = dnaInput.replace(/>.*\\n|\\n/g,\"\")\n\
+clen = dnaInput.length\n\
+\n\
+var dnaOutputString;\n\
+\n\
+for(i in seqs)\n\
+    dnaOutputString += seqs[i].source + \" \" + (dnaInput.match(seqs[i]) || []).length + \"\\n\";\n\
+ // match returns null if no matches, so replace with empty\n\
+\n\
+for(k in subs)\n\
+ dnaInput = dnaInput.replace(k, subs[k]) // FIXME: Would like this to be a global substitution in a future version of SunSpider.\n\
+ // search string, replacement string, flags\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider string-base64</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>string-base64</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/* ***** BEGIN LICENSE BLOCK *****\n\
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1\n\
+ *\n\
+ * The contents of this file are subject to the Mozilla Public License Version\n\
+ * 1.1 (the \"License\"); you may not use this file except in compliance with\n\
+ * the License. You may obtain a copy of the License at\n\
+ * http://www.mozilla.org/MPL/\n\
+ *\n\
+ * Software distributed under the License is distributed on an \"AS IS\" basis,\n\
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n\
+ * for the specific language governing rights and limitations under the\n\
+ * License.\n\
+ *\n\
+ * The Original Code is Mozilla XML-RPC Client component.\n\
+ *\n\
+ * The Initial Developer of the Original Code is\n\
+ * Digital Creations 2, Inc.\n\
+ * Portions created by the Initial Developer are Copyright (C) 2000\n\
+ * the Initial Developer. All Rights Reserved.\n\
+ *\n\
+ * Contributor(s):\n\
+ *   Martijn Pieters <mj@digicool.com> (original author)\n\
+ *   Samuel Sieb <samuel@sieb.net>\n\
+ *\n\
+ * Alternatively, the contents of this file may be used under the terms of\n\
+ * either the GNU General Public License Version 2 or later (the \"GPL\"), or\n\
+ * the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n\
+ * in which case the provisions of the GPL or the LGPL are applicable instead\n\
+ * of those above. If you wish to allow use of your version of this file only\n\
+ * under the terms of either the GPL or the LGPL, and not to allow others to\n\
+ * use your version of this file under the terms of the MPL, indicate your\n\
+ * decision by deleting the provisions above and replace them with the notice\n\
+ * and other provisions required by the GPL or the LGPL. If you do not delete\n\
+ * the provisions above, a recipient may use your version of this file under\n\
+ * the terms of any one of the MPL, the GPL or the LGPL.\n\
+ *\n\
+ * ***** END LICENSE BLOCK ***** */\n\
+\n\
+// From: http://lxr.mozilla.org/mozilla/source/extensions/xml-rpc/src/nsXmlRpcClient.js#956\n\
+\n\
+/* Convert data (an array of integers) to a Base64 string. */\n\
+var toBase64Table = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\
+var base64Pad = '=';\n\
+\n\
+function toBase64(data) {\n\
+    var result = '';\n\
+    var length = data.length;\n\
+    var i;\n\
+    // Convert every three bytes to 4 ascii characters.\n\
+    for (i = 0; i < (length - 2); i += 3) {\n\
+        result += toBase64Table[data.charCodeAt(i) >> 2];\n\
+        result += toBase64Table[((data.charCodeAt(i) & 0x03) << 4) + (data.charCodeAt(i+1) >> 4)];\n\
+        result += toBase64Table[((data.charCodeAt(i+1) & 0x0f) << 2) + (data.charCodeAt(i+2) >> 6)];\n\
+        result += toBase64Table[data.charCodeAt(i+2) & 0x3f];\n\
+    }\n\
+\n\
+    // Convert the remaining 1 or 2 bytes, pad out to 4 characters.\n\
+    if (length%3) {\n\
+        i = length - (length%3);\n\
+        result += toBase64Table[data.charCodeAt(i) >> 2];\n\
+        if ((length%3) == 2) {\n\
+            result += toBase64Table[((data.charCodeAt(i) & 0x03) << 4) + (data.charCodeAt(i+1) >> 4)];\n\
+            result += toBase64Table[(data.charCodeAt(i+1) & 0x0f) << 2];\n\
+            result += base64Pad;\n\
+        } else {\n\
+            result += toBase64Table[(data.charCodeAt(i) & 0x03) << 4];\n\
+            result += base64Pad + base64Pad;\n\
+        }\n\
+    }\n\
+\n\
+    return result;\n\
+}\n\
+\n\
+/* Convert Base64 data to a string */\n\
+var toBinaryTable = [\n\
+    -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1,\n\
+    -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1,\n\
+    -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,62, -1,-1,-1,63,\n\
+    52,53,54,55, 56,57,58,59, 60,61,-1,-1, -1, 0,-1,-1,\n\
+    -1, 0, 1, 2,  3, 4, 5, 6,  7, 8, 9,10, 11,12,13,14,\n\
+    15,16,17,18, 19,20,21,22, 23,24,25,-1, -1,-1,-1,-1,\n\
+    -1,26,27,28, 29,30,31,32, 33,34,35,36, 37,38,39,40,\n\
+    41,42,43,44, 45,46,47,48, 49,50,51,-1, -1,-1,-1,-1\n\
+];\n\
+\n\
+function base64ToString(data) {\n\
+    var result = '';\n\
+    var leftbits = 0; // number of bits decoded, but yet to be appended\n\
+    var leftdata = 0; // bits decoded, but yet to be appended\n\
+\n\
+    // Convert one by one.\n\
+    for (var i = 0; i < data.length; i++) {\n\
+        var c = toBinaryTable[data.charCodeAt(i) & 0x7f];\n\
+        var padding = (data.charCodeAt(i) == base64Pad.charCodeAt(0));\n\
+        // Skip illegal characters and whitespace\n\
+        if (c == -1) continue;\n\
+        \n\
+        // Collect data into leftdata, update bitcount\n\
+        leftdata = (leftdata << 6) | c;\n\
+        leftbits += 6;\n\
+\n\
+        // If we have 8 or more bits, append 8 bits to the result\n\
+        if (leftbits >= 8) {\n\
+            leftbits -= 8;\n\
+            // Append if not padding.\n\
+            if (!padding)\n\
+                result += String.fromCharCode((leftdata >> leftbits) & 0xff);\n\
+            leftdata &= (1 << leftbits) - 1;\n\
+        }\n\
+    }\n\
+\n\
+    // If there are any bits left, the base64 string was corrupted\n\
+    if (leftbits)\n\
+        throw Components.Exception('Corrupted base64 string');\n\
+\n\
+    return result;\n\
+}\n\
+\n\
+var str = \"\";\n\
+\n\
+for ( var i = 0; i < 8192; i++ )\n\
+        str += String.fromCharCode( (25 * Math.random()) + 97 );\n\
+\n\
+for ( var i = 8192; i <= 16384; i *= 2 ) {\n\
+\n\
+    var base64;\n\
+\n\
+    base64 = toBase64(str);\n\
+    base64ToString(base64);\n\
+\n\
+    // Double the string\n\
+    str += str;\n\
+}\n\
+\n\
+toBinaryTable = null;\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider string-fasta</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>string-fasta</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// The Great Computer Language Shootout\n\
+//  http://shootout.alioth.debian.org\n\
+//\n\
+//  Contributed by Ian Osgood\n\
+\n\
+var last = 42, A = 3877, C = 29573, M = 139968;\n\
+\n\
+function rand(max) {\n\
+  last = (last * A + C) % M;\n\
+  return max * last / M;\n\
+}\n\
+\n\
+var ALU =\n\
+  \"GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG\" +\n\
+  \"GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA\" +\n\
+  \"CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT\" +\n\
+  \"ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA\" +\n\
+  \"GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG\" +\n\
+  \"AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC\" +\n\
+  \"AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA\";\n\
+\n\
+var IUB = {\n\
+  a:0.27, c:0.12, g:0.12, t:0.27,\n\
+  B:0.02, D:0.02, H:0.02, K:0.02,\n\
+  M:0.02, N:0.02, R:0.02, S:0.02,\n\
+  V:0.02, W:0.02, Y:0.02\n\
+}\n\
+\n\
+var HomoSap = {\n\
+  a: 0.3029549426680,\n\
+  c: 0.1979883004921,\n\
+  g: 0.1975473066391,\n\
+  t: 0.3015094502008\n\
+}\n\
+\n\
+function makeCumulative(table) {\n\
+  var last = null;\n\
+  for (var c in table) {\n\
+    if (last) table[c] += table[last];\n\
+    last = c;\n\
+  }\n\
+}\n\
+\n\
+function fastaRepeat(n, seq) {\n\
+  var seqi = 0, lenOut = 60;\n\
+  while (n>0) {\n\
+    if (n<lenOut) lenOut = n;\n\
+    if (seqi + lenOut < seq.length) {\n\
+      ret = seq.substring(seqi, seqi+lenOut);\n\
+      seqi += lenOut;\n\
+    } else {\n\
+      var s = seq.substring(seqi);\n\
+      seqi = lenOut - s.length;\n\
+      ret = s + seq.substring(0, seqi);\n\
+    }\n\
+    n -= lenOut;\n\
+  }\n\
+}\n\
+\n\
+function fastaRandom(n, table) {\n\
+  var line = new Array(60);\n\
+  makeCumulative(table);\n\
+  while (n>0) {\n\
+    if (n<line.length) line = new Array(n);\n\
+    for (var i=0; i<line.length; i++) {\n\
+      var r = rand(1);\n\
+      for (var c in table) {\n\
+        if (r < table[c]) {\n\
+          line[i] = c;\n\
+          break;\n\
+        }\n\
+      }\n\
+    }\n\
+    ret = line.join('');\n\
+    n -= line.length;\n\
+  }\n\
+}\n\
+\n\
+var ret;\n\
+\n\
+var count = 7;\n\
+ret = fastaRepeat(2*count*100000, ALU);\n\
+ret = fastaRandom(3*count*1000, IUB);\n\
+ret = fastaRandom(5*count*1000, HomoSap);\n\
+\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider string-tagcloud</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>string-tagcloud</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+\n\
+/*\n\
+ * Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+ *\n\
+ * Redistribution and use in source and binary forms, with or without\n\
+ * modification, are permitted provided that the following conditions\n\
+ * are met:\n\
+ * 1. Redistributions of source code must retain the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer.\n\
+ * 2. Redistributions in binary form must reproduce the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer in the\n\
+ *    documentation and/or other materials provided with the distribution.\n\
+ *\n\
+ * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+ */\n\
+\n\
+/*\n\
+    Portions from:\n\
+    json.js\n\
+    2007-10-10\n\
+\n\
+    Public Domain\n\
+*/\n\
+\n\
+// This test parses a JSON string giving tag names and popularity, and\n\
+// generates html markup for a \"tagcloud\" view.\n\
+\n\
+if (!Object.prototype.toJSONString) {\n\
+\n\
+    Array.prototype.toJSONString = function (w) {\n\
+        var a = [],     // The array holding the partial texts.\n\
+            i,          // Loop counter.\n\
+            l = this.length,\n\
+            v;          // The value to be stringified.\n\
+\n\
+        for (i = 0; i < l; i += 1) {\n\
+            v = this[i];\n\
+            switch (typeof v) {\n\
+            case 'object':\n\
+\n\
+                if (v && typeof v.toJSONString === 'function') {\n\
+                    a.push(v.toJSONString(w));\n\
+                } else {\n\
+                    a.push('null');\n\
+                }\n\
+                break;\n\
+\n\
+            case 'string':\n\
+            case 'number':\n\
+            case 'boolean':\n\
+                a.push(v.toJSONString());\n\
+                break;\n\
+            default:\n\
+                a.push('null');\n\
+            }\n\
+        }\n\
+\n\
+        return '[' + a.join(',') + ']';\n\
+    };\n\
+\n\
+\n\
+    Boolean.prototype.toJSONString = function () {\n\
+        return String(this);\n\
+    };\n\
+\n\
+\n\
+    Date.prototype.toJSONString = function () {\n\
+\n\
+        function f(n) {\n\
+\n\
+            return n < 10 ? '0' + n : n;\n\
+        }\n\
+\n\
+        return '\"' + this.getUTCFullYear()   + '-' +\n\
+                   f(this.getUTCMonth() + 1) + '-' +\n\
+                   f(this.getUTCDate())      + 'T' +\n\
+                   f(this.getUTCHours())     + ':' +\n\
+                   f(this.getUTCMinutes())   + ':' +\n\
+                   f(this.getUTCSeconds())   + 'Z\"';\n\
+    };\n\
+\n\
+\n\
+    Number.prototype.toJSONString = function () {\n\
+\n\
+        return isFinite(this) ? String(this) : 'null';\n\
+    };\n\
+\n\
+\n\
+    Object.prototype.toJSONString = function (w) {\n\
+        var a = [],     // The array holding the partial texts.\n\
+            k,          // The current key.\n\
+            i,          // The loop counter.\n\
+            v;          // The current value.\n\
+\n\
+        if (w) {\n\
+            for (i = 0; i < w.length; i += 1) {\n\
+                k = w[i];\n\
+                if (typeof k === 'string') {\n\
+                    v = this[k];\n\
+                    switch (typeof v) {\n\
+                    case 'object':\n\
+\n\
+                        if (v) {\n\
+                            if (typeof v.toJSONString === 'function') {\n\
+                                a.push(k.toJSONString() + ':' +\n\
+                                       v.toJSONString(w));\n\
+                            }\n\
+                        } else {\n\
+                            a.push(k.toJSONString() + ':null');\n\
+                        }\n\
+                        break;\n\
+\n\
+                    case 'string':\n\
+                    case 'number':\n\
+                    case 'boolean':\n\
+                        a.push(k.toJSONString() + ':' + v.toJSONString());\n\
+\n\
+                    }\n\
+                }\n\
+            }\n\
+        } else {\n\
+\n\
+            for (k in this) {\n\
+                if (typeof k === 'string' &&\n\
+                        Object.prototype.hasOwnProperty.apply(this, [k])) {\n\
+                    v = this[k];\n\
+                    switch (typeof v) {\n\
+                    case 'object':\n\
+\n\
+                        if (v) {\n\
+                            if (typeof v.toJSONString === 'function') {\n\
+                                a.push(k.toJSONString() + ':' +\n\
+                                       v.toJSONString());\n\
+                            }\n\
+                        } else {\n\
+                            a.push(k.toJSONString() + ':null');\n\
+                        }\n\
+                        break;\n\
+\n\
+                    case 'string':\n\
+                    case 'number':\n\
+                    case 'boolean':\n\
+                        a.push(k.toJSONString() + ':' + v.toJSONString());\n\
+\n\
+                    }\n\
+                }\n\
+            }\n\
+        }\n\
+\n\
+        return '{' + a.join(',') + '}';\n\
+    };\n\
+\n\
+\n\
+    (function (s) {\n\
+\n\
+        var m = {\n\
+            '\\b': '\\\\b',\n\
+            '\\t': '\\\\t',\n\
+            '\\n': '\\\\n',\n\
+            '\\f': '\\\\f',\n\
+            '\\r': '\\\\r',\n\
+            '\"' : '\\\\\"',\n\
+            '\\\\': '\\\\\\\\'\n\
+        };\n\
+\n\
+\n\
+        s.parseJSON = function (filter) {\n\
+            var j;\n\
+\n\
+            function walk(k, v) {\n\
+                var i, n;\n\
+                if (v && typeof v === 'object') {\n\
+                    for (i in v) {\n\
+                        if (Object.prototype.hasOwnProperty.apply(v, [i])) {\n\
+                            n = walk(i, v[i]);\n\
+                            if (n !== undefined) {\n\
+                                v[i] = n;\n\
+                            }\n\
+                        }\n\
+                    }\n\
+                }\n\
+                return filter(k, v);\n\
+            }\n\
+\n\
+            if (/^[\\],:{}\\s]*$/.test(this.replace(/\\\\./g, '@').\n\
+                    replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(:?[eE][+\\-]?\\d+)?/g, ']').\n\
+                    replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\n\
+\n\
+                j = eval('(' + this + ')');\n\
+\n\
+                return typeof filter === 'function' ? walk('', j) : j;\n\
+            }\n\
+\n\
+            throw new SyntaxError('parseJSON');\n\
+        };\n\
+\n\
+\n\
+        s.toJSONString = function () {\n\
+\n\
+            if (/[\"\\\\\\x00-\\x1f]/.test(this)) {\n\
+                return '\"' + this.replace(/[\\x00-\\x1f\\\\\"]/g, function (a) {\n\
+                    var c = m[a];\n\
+                    if (c) {\n\
+                        return c;\n\
+                    }\n\
+                    c = a.charCodeAt();\n\
+                    return '\\\\u00' + Math.floor(c / 16).toString(16) +\n\
+                                               (c % 16).toString(16);\n\
+                }) + '\"';\n\
+            }\n\
+            return '\"' + this + '\"';\n\
+        };\n\
+    })(String.prototype);\n\
+}\n\
+\n\
+var tagInfoJSON = '[\\n  {\\n    \\\"tag\\\": \"titillation\",\\n    \\\"popularity\\\": 4294967296\\n  },\\n  {\\n    \\\"tag\\\": \"foamless\",\\n    \\\"popularity\\\": 1257718401\\n  },\\n  {\\n    \\\"tag\\\": \"snarler\",\\n    \\\"popularity\\\": 613166183\\n  },\\n  {\\n    \\\"tag\\\": \"multangularness\",\\n    \\\"popularity\\\": 368304452\\n  },\\n  {\\n    \\\"tag\\\": \"Fesapo unventurous\",\\n    \\\"popularity\\\": 248026512\\n  },\\n  {\\n    \\\"tag\\\": \"esthesioblast\",\\n    \\\"popularity\\\": 179556755\\n  },\\n  {\\n    \\\"tag\\\": \"echeneidoid\",\\n    \\\"popularity\\\": 136641578\\n  },\\n  {\\n    \\\"tag\\\": \"embryoctony\",\\n    \\\"popularity\\\": 107852576\\n  },\\n  {\\n    \\\"tag\\\": \"undilatory\",\\n    \\\"popularity\\\": 87537981\\n  },\\n  {\\n    \\\"tag\\\": \"predisregard\",\\n    \\\"popularity\\\": 72630939\\n  },\\n  {\\n    \\\"tag\\\": \"allergenic\",\\n    \\\"popularity\\\": 61345190\\n  },\\n  {\\n    \\\"tag\\\": \"uncloudy\",\\n    \\\"popularity\\\": 52580571\\n  },\\n  {\\n    \\\"tag\\\": \"unforeseeably\",\\n    \\\"popularity\\\": 45628109\\n  },\\n  {\\n    \\\"tag\\\": \"sturniform\",\\n    \\\"popularity\\\": 40013489\\n  },\\n  {\\n    \\\"tag\\\": \"anesthetize\",\\n    \\\"popularity\\\": 35409226\\n  },\\n  {\\n    \\\"tag\\\": \"ametabolia\",\\n    \\\"popularity\\\": 31583050\\n  },\\n  {\\n    \\\"tag\\\": \"angiopathy\",\\n    \\\"popularity\\\": 28366350\\n  },\\n  {\\n    \\\"tag\\\": \"sultanaship\",\\n    \\\"popularity\\\": 25634218\\n  },\\n  {\\n    \\\"tag\\\": \"Frenchwise\",\\n    \\\"popularity\\\": 23292461\\n  },\\n  {\\n    \\\"tag\\\": \"cerviconasal\",\\n    \\\"popularity\\\": 21268909\\n  },\\n  {\\n    \\\"tag\\\": \"mercurialness\",\\n    \\\"popularity\\\": 19507481\\n  },\\n  {\\n    \\\"tag\\\": \"glutelin venditate\",\\n    \\\"popularity\\\": 17964042\\n  },\\n  {\\n    \\\"tag\\\": \"acred overblack\",\\n    \\\"popularity\\\": 16603454\\n  },\\n  {\\n    \\\"tag\\\": \"Atik\",\\n    \\\"popularity\\\": 15397451\\n  },\\n  {\\n    \\\"tag\\\": \"puncturer\",\\n    \\\"popularity\\\": 14323077\\n  },\\n  {\\n    \\\"tag\\\": \"pukatea\",\\n    \\\"popularity\\\": 13361525\\n  },\\n  {\\n    \\\"tag\\\": \"suberize\",\\n    \\\"popularity\\\": 12497261\\n  },\\n  {\\n    \\\"tag\\\": \"Godfrey\",\\n    \\\"popularity\\\": 11717365\\n  },\\n  {\\n    \\\"tag\\\": \"tetraptote\",\\n    \\\"popularity\\\": 11011011\\n  },\\n  {\\n    \\\"tag\\\": \"lucidness\",\\n    \\\"popularity\\\": 10369074\\n  },\\n  {\\n    \\\"tag\\\": \"tartness\",\\n    \\\"popularity\\\": 9783815\\n  },\\n  {\\n    \\\"tag\\\": \"axfetch\",\\n    \\\"popularity\\\": 9248634\\n  },\\n  {\\n    \\\"tag\\\": \"preacquittal\",\\n    \\\"popularity\\\": 8757877\\n  },\\n  {\\n    \\\"tag\\\": \"matris\",\\n    \\\"popularity\\\": 8306671\\n  },\\n  {\\n    \\\"tag\\\": \"hyphenate\",\\n    \\\"popularity\\\": 7890801\\n  },\\n  {\\n    \\\"tag\\\": \"semifabulous\",\\n    \\\"popularity\\\": 7506606\\n  },\\n  {\\n    \\\"tag\\\": \"oppressiveness\",\\n    \\\"popularity\\\": 7150890\\n  },\\n  {\\n    \\\"tag\\\": \"Protococcales\",\\n    \\\"popularity\\\": 6820856\\n  },\\n  {\\n    \\\"tag\\\": \"unpreventive\",\\n    \\\"popularity\\\": 6514045\\n  },\\n  {\\n    \\\"tag\\\": \"Cordia\",\\n    \\\"popularity\\\": 6228289\\n  },\\n  {\\n    \\\"tag\\\": \"Wakamba leaflike\",\\n    \\\"popularity\\\": 5961668\\n  },\\n  {\\n    \\\"tag\\\": \"dacryoma\",\\n    \\\"popularity\\\": 5712480\\n  },\\n  {\\n    \\\"tag\\\": \"inguinal\",\\n    \\\"popularity\\\": 5479211\\n  },\\n  {\\n    \\\"tag\\\": \"responseless\",\\n    \\\"popularity\\\": 5260507\\n  },\\n  {\\n    \\\"tag\\\": \"supplementarily\",\\n    \\\"popularity\\\": 5055158\\n  },\\n  {\\n    \\\"tag\\\": \"emu\",\\n    \\\"popularity\\\": 4862079\\n  },\\n  {\\n    \\\"tag\\\": \"countermeet\",\\n    \\\"popularity\\\": 4680292\\n  },\\n  {\\n    \\\"tag\\\": \"purrer\",\\n    \\\"popularity\\\": 4508918\\n  },\\n  {\\n    \\\"tag\\\": \"Corallinaceae\",\\n    \\\"popularity\\\": 4347162\\n  },\\n  {\\n    \\\"tag\\\": \"speculum\",\\n    \\\"popularity\\\": 4194304\\n  },\\n  {\\n    \\\"tag\\\": \"crimpness\",\\n    \\\"popularity\\\": 4049690\\n  },\\n  {\\n    \\\"tag\\\": \"antidetonant\",\\n    \\\"popularity\\\": 3912727\\n  },\\n  {\\n    \\\"tag\\\": \"topeewallah\",\\n    \\\"popularity\\\": 3782875\\n  },\\n  {\\n    \\\"tag\\\": \"fidalgo ballant\",\\n    \\\"popularity\\\": 3659640\\n  },\\n  {\\n    \\\"tag\\\": \"utriculose\",\\n    \\\"popularity\\\": 3542572\\n  },\\n  {\\n    \\\"tag\\\": \"testata\",\\n    \\\"popularity\\\": 3431259\\n  },\\n  {\\n    \\\"tag\\\": \"beltmaking\",\\n    \\\"popularity\\\": 3325322\\n  },\\n  {\\n    \\\"tag\\\": \"necrotype\",\\n    \\\"popularity\\\": 3224413\\n  },\\n  {\\n    \\\"tag\\\": \"ovistic\",\\n    \\\"popularity\\\": 3128215\\n  },\\n  {\\n    \\\"tag\\\": \"swindlership\",\\n    \\\"popularity\\\": 3036431\\n  },\\n  {\\n    \\\"tag\\\": \"augustal\",\\n    \\\"popularity\\\": 2948792\\n  },\\n  {\\n    \\\"tag\\\": \"Titoist\",\\n    \\\"popularity\\\": 2865047\\n  },\\n  {\\n    \\\"tag\\\": \"trisoctahedral\",\\n    \\\"popularity\\\": 2784963\\n  },\\n  {\\n    \\\"tag\\\": \"sequestrator\",\\n    \\\"popularity\\\": 2708327\\n  },\\n  {\\n    \\\"tag\\\": \"sideburns\",\\n    \\\"popularity\\\": 2634939\\n  },\\n  {\\n    \\\"tag\\\": \"paraphrasia\",\\n    \\\"popularity\\\": 2564616\\n  },\\n  {\\n    \\\"tag\\\": \"graminology unbay\",\\n    \\\"popularity\\\": 2497185\\n  },\\n  {\\n    \\\"tag\\\": \"acaridomatium emargination\",\\n    \\\"popularity\\\": 2432487\\n  },\\n  {\\n    \\\"tag\\\": \"roofward\",\\n    \\\"popularity\\\": 2370373\\n  },\\n  {\\n    \\\"tag\\\": \"lauder\",\\n    \\\"popularity\\\": 2310705\\n  },\\n  {\\n    \\\"tag\\\": \"subjunctive\",\\n    \\\"popularity\\\": 2253354\\n  },\\n  {\\n    \\\"tag\\\": \"subelongate\",\\n    \\\"popularity\\\": 2198199\\n  },\\n  {\\n    \\\"tag\\\": \"guacimo\",\\n    \\\"popularity\\\": 2145128\\n  },\\n  {\\n    \\\"tag\\\": \"cockade\",\\n    \\\"popularity\\\": 2094033\\n  },\\n  {\\n    \\\"tag\\\": \"misgauge\",\\n    \\\"popularity\\\": 2044818\\n  },\\n  {\\n    \\\"tag\\\": \"unexpensive\",\\n    \\\"popularity\\\": 1997388\\n  },\\n  {\\n    \\\"tag\\\": \"chebel\",\\n    \\\"popularity\\\": 1951657\\n  },\\n  {\\n    \\\"tag\\\": \"unpursuing\",\\n    \\\"popularity\\\": 1907543\\n  },\\n  {\\n    \\\"tag\\\": \"kilobar\",\\n    \\\"popularity\\\": 1864969\\n  },\\n  {\\n    \\\"tag\\\": \"obsecration\",\\n    \\\"popularity\\\": 1823863\\n  },\\n  {\\n    \\\"tag\\\": \"nacarine\",\\n    \\\"popularity\\\": 1784157\\n  },\\n  {\\n    \\\"tag\\\": \"spirituosity\",\\n    \\\"popularity\\\": 1745787\\n  },\\n  {\\n    \\\"tag\\\": \"movableness deity\",\\n    \\\"popularity\\\": 1708692\\n  },\\n  {\\n    \\\"tag\\\": \"exostracism\",\\n    \\\"popularity\\\": 1672816\\n  },\\n  {\\n    \\\"tag\\\": \"archipterygium\",\\n    \\\"popularity\\\": 1638104\\n  },\\n  {\\n    \\\"tag\\\": \"monostrophic\",\\n    \\\"popularity\\\": 1604506\\n  },\\n  {\\n    \\\"tag\\\": \"gynecide\",\\n    \\\"popularity\\\": 1571974\\n  },\\n  {\\n    \\\"tag\\\": \"gladden\",\\n    \\\"popularity\\\": 1540462\\n  },\\n  {\\n    \\\"tag\\\": \"throughbred\",\\n    \\\"popularity\\\": 1509927\\n  },\\n  {\\n    \\\"tag\\\": \"groper\",\\n    \\\"popularity\\\": 1480329\\n  },\\n  {\\n    \\\"tag\\\": \"Xenosaurus\",\\n    \\\"popularity\\\": 1451628\\n  },\\n  {\\n    \\\"tag\\\": \"photoetcher\",\\n    \\\"popularity\\\": 1423788\\n  },\\n  {\\n    \\\"tag\\\": \"glucosid\",\\n    \\\"popularity\\\": 1396775\\n  },\\n  {\\n    \\\"tag\\\": \"Galtonian\",\\n    \\\"popularity\\\": 1370555\\n  },\\n  {\\n    \\\"tag\\\": \"mesosporic\",\\n    \\\"popularity\\\": 1345097\\n  },\\n  {\\n    \\\"tag\\\": \"theody\",\\n    \\\"popularity\\\": 1320370\\n  },\\n  {\\n    \\\"tag\\\": \"zaffer\",\\n    \\\"popularity\\\": 1296348\\n  },\\n  {\\n    \\\"tag\\\": \"probiology\",\\n    \\\"popularity\\\": 1273003\\n  },\\n  {\\n    \\\"tag\\\": \"rhizomic\",\\n    \\\"popularity\\\": 1250308\\n  },\\n  {\\n    \\\"tag\\\": \"superphosphate\",\\n    \\\"popularity\\\": 1228240\\n  },\\n  {\\n    \\\"tag\\\": \"Hippolytan\",\\n    \\\"popularity\\\": 1206776\\n  },\\n  {\\n    \\\"tag\\\": \"garget\",\\n    \\\"popularity\\\": 1185892\\n  },\\n  {\\n    \\\"tag\\\": \"diploplacula\",\\n    \\\"popularity\\\": 1165568\\n  },\\n  {\\n    \\\"tag\\\": \"orohydrographical\",\\n    \\\"popularity\\\": 1145785\\n  },\\n  {\\n    \\\"tag\\\": \"enhypostatize\",\\n    \\\"popularity\\\": 1126521\\n  },\\n  {\\n    \\\"tag\\\": \"polisman\",\\n    \\\"popularity\\\": 1107759\\n  },\\n  {\\n    \\\"tag\\\": \"acetometer\",\\n    \\\"popularity\\\": 1089482\\n  },\\n  {\\n    \\\"tag\\\": \"unsnatched\",\\n    \\\"popularity\\\": 1071672\\n  },\\n  {\\n    \\\"tag\\\": \"yabber\",\\n    \\\"popularity\\\": 1054313\\n  },\\n  {\\n    \\\"tag\\\": \"demiwolf\",\\n    \\\"popularity\\\": 1037390\\n  },\\n  {\\n    \\\"tag\\\": \"chromascope\",\\n    \\\"popularity\\\": 1020888\\n  },\\n  {\\n    \\\"tag\\\": \"seamanship\",\\n    \\\"popularity\\\": 1004794\\n  },\\n  {\\n    \\\"tag\\\": \"nonfenestrated\",\\n    \\\"popularity\\\": 989092\\n  },\\n  {\\n    \\\"tag\\\": \"hydrophytism\",\\n    \\\"popularity\\\": 973771\\n  },\\n  {\\n    \\\"tag\\\": \"dotter\",\\n    \\\"popularity\\\": 958819\\n  },\\n  {\\n    \\\"tag\\\": \"thermoperiodism\",\\n    \\\"popularity\\\": 944222\\n  },\\n  {\\n    \\\"tag\\\": \"unlawyerlike\",\\n    \\\"popularity\\\": 929970\\n  },\\n  {\\n    \\\"tag\\\": \"enantiomeride citywards\",\\n    \\\"popularity\\\": 916052\\n  },\\n  {\\n    \\\"tag\\\": \"unmetallurgical\",\\n    \\\"popularity\\\": 902456\\n  },\\n  {\\n    \\\"tag\\\": \"prickled\",\\n    \\\"popularity\\\": 889174\\n  },\\n  {\\n    \\\"tag\\\": \"strangerwise manioc\",\\n    \\\"popularity\\\": 876195\\n  },\\n  {\\n    \\\"tag\\\": \"incisorial\",\\n    \\\"popularity\\\": 863510\\n  },\\n  {\\n    \\\"tag\\\": \"irrationalize\",\\n    \\\"popularity\\\": 851110\\n  },\\n  {\\n    \\\"tag\\\": \"nasology\",\\n    \\\"popularity\\\": 838987\\n  },\\n  {\\n    \\\"tag\\\": \"fatuism\",\\n    \\\"popularity\\\": 827131\\n  },\\n  {\\n    \\\"tag\\\": \"Huk\",\\n    \\\"popularity\\\": 815535\\n  },\\n  {\\n    \\\"tag\\\": \"properispomenon\",\\n    \\\"popularity\\\": 804192\\n  },\\n  {\\n    \\\"tag\\\": \"unpummelled\",\\n    \\\"popularity\\\": 793094\\n  },\\n  {\\n    \\\"tag\\\": \"technographically\",\\n    \\\"popularity\\\": 782233\\n  },\\n  {\\n    \\\"tag\\\": \"underfurnish\",\\n    \\\"popularity\\\": 771603\\n  },\\n  {\\n    \\\"tag\\\": \"sinter\",\\n    \\\"popularity\\\": 761198\\n  },\\n  {\\n    \\\"tag\\\": \"lateroanterior\",\\n    \\\"popularity\\\": 751010\\n  },\\n  {\\n    \\\"tag\\\": \"nonpersonification\",\\n    \\\"popularity\\\": 741034\\n  },\\n  {\\n    \\\"tag\\\": \"Sitophilus\",\\n    \\\"popularity\\\": 731264\\n  },\\n  {\\n    \\\"tag\\\": \"unstudded overexerted\",\\n    \\\"popularity\\\": 721694\\n  },\\n  {\\n    \\\"tag\\\": \"tracheation\",\\n    \\\"popularity\\\": 712318\\n  },\\n  {\\n    \\\"tag\\\": \"thirteenth begloze\",\\n    \\\"popularity\\\": 703131\\n  },\\n  {\\n    \\\"tag\\\": \"bespice\",\\n    \\\"popularity\\\": 694129\\n  },\\n  {\\n    \\\"tag\\\": \"doppia\",\\n    \\\"popularity\\\": 685305\\n  },\\n  {\\n    \\\"tag\\\": \"unadorned\",\\n    \\\"popularity\\\": 676656\\n  },\\n  {\\n    \\\"tag\\\": \"dovelet engraff\",\\n    \\\"popularity\\\": 668176\\n  },\\n  {\\n    \\\"tag\\\": \"diphyozooid\",\\n    \\\"popularity\\\": 659862\\n  },\\n  {\\n    \\\"tag\\\": \"mure\",\\n    \\\"popularity\\\": 651708\\n  },\\n  {\\n    \\\"tag\\\": \"Tripitaka\",\\n    \\\"popularity\\\": 643710\\n  },\\n  {\\n    \\\"tag\\\": \"Billjim\",\\n    \\\"popularity\\\": 635865\\n  },\\n  {\\n    \\\"tag\\\": \"pyramidical\",\\n    \\\"popularity\\\": 628169\\n  },\\n  {\\n    \\\"tag\\\": \"circumlocutionist\",\\n    \\\"popularity\\\": 620617\\n  },\\n  {\\n    \\\"tag\\\": \"slapstick\",\\n    \\\"popularity\\\": 613207\\n  },\\n  {\\n    \\\"tag\\\": \"preobedience\",\\n    \\\"popularity\\\": 605934\\n  },\\n  {\\n    \\\"tag\\\": \"unfriarlike\",\\n    \\\"popularity\\\": 598795\\n  },\\n  {\\n    \\\"tag\\\": \"microchromosome\",\\n    \\\"popularity\\\": 591786\\n  },\\n  {\\n    \\\"tag\\\": \"Orphicism\",\\n    \\\"popularity\\\": 584905\\n  },\\n  {\\n    \\\"tag\\\": \"peel\",\\n    \\\"popularity\\\": 578149\\n  },\\n  {\\n    \\\"tag\\\": \"obediential\",\\n    \\\"popularity\\\": 571514\\n  },\\n  {\\n    \\\"tag\\\": \"Peripatidea\",\\n    \\\"popularity\\\": 564997\\n  },\\n  {\\n    \\\"tag\\\": \"undoubtful\",\\n    \\\"popularity\\\": 558596\\n  },\\n  {\\n    \\\"tag\\\": \"lodgeable\",\\n    \\\"popularity\\\": 552307\\n  },\\n  {\\n    \\\"tag\\\": \"pustulated woodchat\",\\n    \\\"popularity\\\": 546129\\n  },\\n  {\\n    \\\"tag\\\": \"antepast\",\\n    \\\"popularity\\\": 540057\\n  },\\n  {\\n    \\\"tag\\\": \"sagittoid matrimoniously\",\\n    \\\"popularity\\\": 534091\\n  },\\n  {\\n    \\\"tag\\\": \"Albizzia\",\\n    \\\"popularity\\\": 528228\\n  },\\n  {\\n    \\\"tag\\\": \"Elateridae unnewness\",\\n    \\\"popularity\\\": 522464\\n  },\\n  {\\n    \\\"tag\\\": \"convertingness\",\\n    \\\"popularity\\\": 516798\\n  },\\n  {\\n    \\\"tag\\\": \"Pelew\",\\n    \\\"popularity\\\": 511228\\n  },\\n  {\\n    \\\"tag\\\": \"recapitulation\",\\n    \\\"popularity\\\": 505751\\n  },\\n  {\\n    \\\"tag\\\": \"shack\",\\n    \\\"popularity\\\": 500365\\n  },\\n  {\\n    \\\"tag\\\": \"unmellowed\",\\n    \\\"popularity\\\": 495069\\n  },\\n  {\\n    \\\"tag\\\": \"pavis capering\",\\n    \\\"popularity\\\": 489859\\n  },\\n  {\\n    \\\"tag\\\": \"fanfare\",\\n    \\\"popularity\\\": 484735\\n  },\\n  {\\n    \\\"tag\\\": \"sole\",\\n    \\\"popularity\\\": 479695\\n  },\\n  {\\n    \\\"tag\\\": \"subarcuate\",\\n    \\\"popularity\\\": 474735\\n  },\\n  {\\n    \\\"tag\\\": \"multivious\",\\n    \\\"popularity\\\": 469856\\n  },\\n  {\\n    \\\"tag\\\": \"squandermania\",\\n    \\\"popularity\\\": 465054\\n  },\\n  {\\n    \\\"tag\\\": \"scintle\",\\n    \\\"popularity\\\": 460329\\n  },\\n  {\\n    \\\"tag\\\": \"hash chirognomic\",\\n    \\\"popularity\\\": 455679\\n  },\\n  {\\n    \\\"tag\\\": \"linseed\",\\n    \\\"popularity\\\": 451101\\n  },\\n  {\\n    \\\"tag\\\": \"redoubtable\",\\n    \\\"popularity\\\": 446596\\n  },\\n  {\\n    \\\"tag\\\": \"poachy reimpact\",\\n    \\\"popularity\\\": 442160\\n  },\\n  {\\n    \\\"tag\\\": \"limestone\",\\n    \\\"popularity\\\": 437792\\n  },\\n  {\\n    \\\"tag\\\": \"serranid\",\\n    \\\"popularity\\\": 433492\\n  },\\n  {\\n    \\\"tag\\\": \"pohna\",\\n    \\\"popularity\\\": 429258\\n  },\\n  {\\n    \\\"tag\\\": \"warwolf\",\\n    \\\"popularity\\\": 425088\\n  },\\n  {\\n    \\\"tag\\\": \"ruthenous\",\\n    \\\"popularity\\\": 420981\\n  },\\n  {\\n    \\\"tag\\\": \"dover\",\\n    \\\"popularity\\\": 416935\\n  },\\n  {\\n    \\\"tag\\\": \"deuteroalbumose\",\\n    \\\"popularity\\\": 412950\\n  },\\n  {\\n    \\\"tag\\\": \"pseudoprophetic\",\\n    \\\"popularity\\\": 409025\\n  },\\n  {\\n    \\\"tag\\\": \"dissoluteness\",\\n    \\\"popularity\\\": 405157\\n  },\\n  {\\n    \\\"tag\\\": \"preinvention\",\\n    \\\"popularity\\\": 401347\\n  },\\n  {\\n    \\\"tag\\\": \"swagbellied\",\\n    \\\"popularity\\\": 397592\\n  },\\n  {\\n    \\\"tag\\\": \"Ophidia\",\\n    \\\"popularity\\\": 393892\\n  },\\n  {\\n    \\\"tag\\\": \"equanimity\",\\n    \\\"popularity\\\": 390245\\n  },\\n  {\\n    \\\"tag\\\": \"troutful\",\\n    \\\"popularity\\\": 386651\\n  },\\n  {\\n    \\\"tag\\\": \"uke\",\\n    \\\"popularity\\\": 383108\\n  },\\n  {\\n    \\\"tag\\\": \"preacquaint\",\\n    \\\"popularity\\\": 379616\\n  },\\n  {\\n    \\\"tag\\\": \"shoq\",\\n    \\\"popularity\\\": 376174\\n  },\\n  {\\n    \\\"tag\\\": \"yox\",\\n    \\\"popularity\\\": 372780\\n  },\\n  {\\n    \\\"tag\\\": \"unelemental\",\\n    \\\"popularity\\\": 369434\\n  },\\n  {\\n    \\\"tag\\\": \"Yavapai\",\\n    \\\"popularity\\\": 366134\\n  },\\n  {\\n    \\\"tag\\\": \"joulean\",\\n    \\\"popularity\\\": 362880\\n  },\\n  {\\n    \\\"tag\\\": \"dracontine\",\\n    \\\"popularity\\\": 359672\\n  },\\n  {\\n    \\\"tag\\\": \"hardmouth\",\\n    \\\"popularity\\\": 356507\\n  },\\n  {\\n    \\\"tag\\\": \"sylvanize\",\\n    \\\"popularity\\\": 353386\\n  },\\n  {\\n    \\\"tag\\\": \"intraparenchymatous meadowbur\",\\n    \\\"popularity\\\": 350308\\n  },\\n  {\\n    \\\"tag\\\": \"uncharily\",\\n    \\\"popularity\\\": 347271\\n  },\\n  {\\n    \\\"tag\\\": \"redtab flexibly\",\\n    \\\"popularity\\\": 344275\\n  },\\n  {\\n    \\\"tag\\\": \"centervelic\",\\n    \\\"popularity\\\": 341319\\n  },\\n  {\\n    \\\"tag\\\": \"unravellable\",\\n    \\\"popularity\\\": 338403\\n  },\\n  {\\n    \\\"tag\\\": \"infortunately\",\\n    \\\"popularity\\\": 335526\\n  },\\n  {\\n    \\\"tag\\\": \"cannel\",\\n    \\\"popularity\\\": 332687\\n  },\\n  {\\n    \\\"tag\\\": \"oxyblepsia\",\\n    \\\"popularity\\\": 329885\\n  },\\n  {\\n    \\\"tag\\\": \"Damon\",\\n    \\\"popularity\\\": 327120\\n  },\\n  {\\n    \\\"tag\\\": \"etherin\",\\n    \\\"popularity\\\": 324391\\n  },\\n  {\\n    \\\"tag\\\": \"luminal\",\\n    \\\"popularity\\\": 321697\\n  },\\n  {\\n    \\\"tag\\\": \"interrogatorily presbyte\",\\n    \\\"popularity\\\": 319038\\n  },\\n  {\\n    \\\"tag\\\": \"hemiclastic\",\\n    \\\"popularity\\\": 316414\\n  },\\n  {\\n    \\\"tag\\\": \"poh flush\",\\n    \\\"popularity\\\": 313823\\n  },\\n  {\\n    \\\"tag\\\": \"Psoroptes\",\\n    \\\"popularity\\\": 311265\\n  },\\n  {\\n    \\\"tag\\\": \"dispirit\",\\n    \\\"popularity\\\": 308740\\n  },\\n  {\\n    \\\"tag\\\": \"nashgab\",\\n    \\\"popularity\\\": 306246\\n  },\\n  {\\n    \\\"tag\\\": \"Aphidiinae\",\\n    \\\"popularity\\\": 303784\\n  },\\n  {\\n    \\\"tag\\\": \"rhapsody nonconstruction\",\\n    \\\"popularity\\\": 301353\\n  },\\n  {\\n    \\\"tag\\\": \"Osmond\",\\n    \\\"popularity\\\": 298952\\n  },\\n  {\\n    \\\"tag\\\": \"Leonis\",\\n    \\\"popularity\\\": 296581\\n  },\\n  {\\n    \\\"tag\\\": \"Lemnian\",\\n    \\\"popularity\\\": 294239\\n  },\\n  {\\n    \\\"tag\\\": \"acetonic gnathonic\",\\n    \\\"popularity\\\": 291926\\n  },\\n  {\\n    \\\"tag\\\": \"surculus\",\\n    \\\"popularity\\\": 289641\\n  },\\n  {\\n    \\\"tag\\\": \"diagonally\",\\n    \\\"popularity\\\": 287384\\n  },\\n  {\\n    \\\"tag\\\": \"counterpenalty\",\\n    \\\"popularity\\\": 285154\\n  },\\n  {\\n    \\\"tag\\\": \"Eugenie\",\\n    \\\"popularity\\\": 282952\\n  },\\n  {\\n    \\\"tag\\\": \"hornbook\",\\n    \\\"popularity\\\": 280776\\n  },\\n  {\\n    \\\"tag\\\": \"miscoin\",\\n    \\\"popularity\\\": 278626\\n  },\\n  {\\n    \\\"tag\\\": \"admi\",\\n    \\\"popularity\\\": 276501\\n  },\\n  {\\n    \\\"tag\\\": \"Tarmac\",\\n    \\\"popularity\\\": 274402\\n  },\\n  {\\n    \\\"tag\\\": \"inexplicable\",\\n    \\\"popularity\\\": 272328\\n  },\\n  {\\n    \\\"tag\\\": \"rascallion\",\\n    \\\"popularity\\\": 270278\\n  },\\n  {\\n    \\\"tag\\\": \"dusterman\",\\n    \\\"popularity\\\": 268252\\n  },\\n  {\\n    \\\"tag\\\": \"osteostomous unhoroscopic\",\\n    \\\"popularity\\\": 266250\\n  },\\n  {\\n    \\\"tag\\\": \"spinibulbar\",\\n    \\\"popularity\\\": 264271\\n  },\\n  {\\n    \\\"tag\\\": \"phototelegraphically\",\\n    \\\"popularity\\\": 262315\\n  },\\n  {\\n    \\\"tag\\\": \"Manihot\",\\n    \\\"popularity\\\": 260381\\n  },\\n  {\\n    \\\"tag\\\": \"neighborhood\",\\n    \\\"popularity\\\": 258470\\n  },\\n  {\\n    \\\"tag\\\": \"Vincetoxicum\",\\n    \\\"popularity\\\": 256581\\n  },\\n  {\\n    \\\"tag\\\": \"khirka\",\\n    \\\"popularity\\\": 254713\\n  },\\n  {\\n    \\\"tag\\\": \"conscriptive\",\\n    \\\"popularity\\\": 252866\\n  },\\n  {\\n    \\\"tag\\\": \"synechthran\",\\n    \\\"popularity\\\": 251040\\n  },\\n  {\\n    \\\"tag\\\": \"Guttiferales\",\\n    \\\"popularity\\\": 249235\\n  },\\n  {\\n    \\\"tag\\\": \"roomful\",\\n    \\\"popularity\\\": 247450\\n  },\\n  {\\n    \\\"tag\\\": \"germinal\",\\n    \\\"popularity\\\": 245685\\n  },\\n  {\\n    \\\"tag\\\": \"untraitorous\",\\n    \\\"popularity\\\": 243939\\n  },\\n  {\\n    \\\"tag\\\": \"nondissenting\",\\n    \\\"popularity\\\": 242213\\n  },\\n  {\\n    \\\"tag\\\": \"amotion\",\\n    \\\"popularity\\\": 240506\\n  },\\n  {\\n    \\\"tag\\\": \"badious\",\\n    \\\"popularity\\\": 238817\\n  },\\n  {\\n    \\\"tag\\\": \"sumpit\",\\n    \\\"popularity\\\": 237147\\n  },\\n  {\\n    \\\"tag\\\": \"ectozoic\",\\n    \\\"popularity\\\": 235496\\n  },\\n  {\\n    \\\"tag\\\": \"elvet\",\\n    \\\"popularity\\\": 233862\\n  },\\n  {\\n    \\\"tag\\\": \"underclerk\",\\n    \\\"popularity\\\": 232246\\n  },\\n  {\\n    \\\"tag\\\": \"reticency\",\\n    \\\"popularity\\\": 230647\\n  },\\n  {\\n    \\\"tag\\\": \"neutroclusion\",\\n    \\\"popularity\\\": 229065\\n  },\\n  {\\n    \\\"tag\\\": \"unbelieving\",\\n    \\\"popularity\\\": 227500\\n  },\\n  {\\n    \\\"tag\\\": \"histogenetic\",\\n    \\\"popularity\\\": 225952\\n  },\\n  {\\n    \\\"tag\\\": \"dermamyiasis\",\\n    \\\"popularity\\\": 224421\\n  },\\n  {\\n    \\\"tag\\\": \"telenergy\",\\n    \\\"popularity\\\": 222905\\n  },\\n  {\\n    \\\"tag\\\": \"axiomatic\",\\n    \\\"popularity\\\": 221406\\n  },\\n  {\\n    \\\"tag\\\": \"undominoed\",\\n    \\\"popularity\\\": 219922\\n  },\\n  {\\n    \\\"tag\\\": \"periosteoma\",\\n    \\\"popularity\\\": 218454\\n  },\\n  {\\n    \\\"tag\\\": \"justiciaryship\",\\n    \\\"popularity\\\": 217001\\n  },\\n  {\\n    \\\"tag\\\": \"autoluminescence\",\\n    \\\"popularity\\\": 215563\\n  },\\n  {\\n    \\\"tag\\\": \"osmous\",\\n    \\\"popularity\\\": 214140\\n  },\\n  {\\n    \\\"tag\\\": \"borgh\",\\n    \\\"popularity\\\": 212731\\n  },\\n  {\\n    \\\"tag\\\": \"bedebt\",\\n    \\\"popularity\\\": 211337\\n  },\\n  {\\n    \\\"tag\\\": \"considerableness adenoidism\",\\n    \\\"popularity\\\": 209957\\n  },\\n  {\\n    \\\"tag\\\": \"sailorizing\",\\n    \\\"popularity\\\": 208592\\n  },\\n  {\\n    \\\"tag\\\": \"Montauk\",\\n    \\\"popularity\\\": 207240\\n  },\\n  {\\n    \\\"tag\\\": \"Bridget\",\\n    \\\"popularity\\\": 205901\\n  },\\n  {\\n    \\\"tag\\\": \"Gekkota\",\\n    \\\"popularity\\\": 204577\\n  },\\n  {\\n    \\\"tag\\\": \"subcorymbose\",\\n    \\\"popularity\\\": 203265\\n  },\\n  {\\n    \\\"tag\\\": \"undersap\",\\n    \\\"popularity\\\": 201967\\n  },\\n  {\\n    \\\"tag\\\": \"poikilothermic\",\\n    \\\"popularity\\\": 200681\\n  },\\n  {\\n    \\\"tag\\\": \"enneatical\",\\n    \\\"popularity\\\": 199409\\n  },\\n  {\\n    \\\"tag\\\": \"martinetism\",\\n    \\\"popularity\\\": 198148\\n  },\\n  {\\n    \\\"tag\\\": \"sustanedly\",\\n    \\\"popularity\\\": 196901\\n  },\\n  {\\n    \\\"tag\\\": \"declaration\",\\n    \\\"popularity\\\": 195665\\n  },\\n  {\\n    \\\"tag\\\": \"myringoplasty\",\\n    \\\"popularity\\\": 194442\\n  },\\n  {\\n    \\\"tag\\\": \"Ginkgo\",\\n    \\\"popularity\\\": 193230\\n  },\\n  {\\n    \\\"tag\\\": \"unrecurrent\",\\n    \\\"popularity\\\": 192031\\n  },\\n  {\\n    \\\"tag\\\": \"proprecedent\",\\n    \\\"popularity\\\": 190843\\n  },\\n  {\\n    \\\"tag\\\": \"roadman\",\\n    \\\"popularity\\\": 189666\\n  },\\n  {\\n    \\\"tag\\\": \"elemin\",\\n    \\\"popularity\\\": 188501\\n  },\\n  {\\n    \\\"tag\\\": \"maggot\",\\n    \\\"popularity\\\": 187347\\n  },\\n  {\\n    \\\"tag\\\": \"alitrunk\",\\n    \\\"popularity\\\": 186204\\n  },\\n  {\\n    \\\"tag\\\": \"introspection\",\\n    \\\"popularity\\\": 185071\\n  },\\n  {\\n    \\\"tag\\\": \"batiker\",\\n    \\\"popularity\\\": 183950\\n  },\\n  {\\n    \\\"tag\\\": \"backhatch oversettle\",\\n    \\\"popularity\\\": 182839\\n  },\\n  {\\n    \\\"tag\\\": \"thresherman\",\\n    \\\"popularity\\\": 181738\\n  },\\n  {\\n    \\\"tag\\\": \"protemperance\",\\n    \\\"popularity\\\": 180648\\n  },\\n  {\\n    \\\"tag\\\": \"undern\",\\n    \\\"popularity\\\": 179568\\n  },\\n  {\\n    \\\"tag\\\": \"tweeg\",\\n    \\\"popularity\\\": 178498\\n  },\\n  {\\n    \\\"tag\\\": \"crosspath\",\\n    \\\"popularity\\\": 177438\\n  },\\n  {\\n    \\\"tag\\\": \"Tangaridae\",\\n    \\\"popularity\\\": 176388\\n  },\\n  {\\n    \\\"tag\\\": \"scrutation\",\\n    \\\"popularity\\\": 175348\\n  },\\n  {\\n    \\\"tag\\\": \"piecemaker\",\\n    \\\"popularity\\\": 174317\\n  },\\n  {\\n    \\\"tag\\\": \"paster\",\\n    \\\"popularity\\\": 173296\\n  },\\n  {\\n    \\\"tag\\\": \"unpretendingness\",\\n    \\\"popularity\\\": 172284\\n  },\\n  {\\n    \\\"tag\\\": \"inframundane\",\\n    \\\"popularity\\\": 171281\\n  },\\n  {\\n    \\\"tag\\\": \"kiblah\",\\n    \\\"popularity\\\": 170287\\n  },\\n  {\\n    \\\"tag\\\": \"playwrighting\",\\n    \\\"popularity\\\": 169302\\n  },\\n  {\\n    \\\"tag\\\": \"gonepoiesis snowslip\",\\n    \\\"popularity\\\": 168326\\n  },\\n  {\\n    \\\"tag\\\": \"hoodwise\",\\n    \\\"popularity\\\": 167359\\n  },\\n  {\\n    \\\"tag\\\": \"postseason\",\\n    \\\"popularity\\\": 166401\\n  },\\n  {\\n    \\\"tag\\\": \"equivocality\",\\n    \\\"popularity\\\": 165451\\n  },\\n  {\\n    \\\"tag\\\": \"Opiliaceae nuclease\",\\n    \\\"popularity\\\": 164509\\n  },\\n  {\\n    \\\"tag\\\": \"sextipara\",\\n    \\\"popularity\\\": 163576\\n  },\\n  {\\n    \\\"tag\\\": \"weeper\",\\n    \\\"popularity\\\": 162651\\n  },\\n  {\\n    \\\"tag\\\": \"frambesia\",\\n    \\\"popularity\\\": 161735\\n  },\\n  {\\n    \\\"tag\\\": \"answerable\",\\n    \\\"popularity\\\": 160826\\n  },\\n  {\\n    \\\"tag\\\": \"Trichosporum\",\\n    \\\"popularity\\\": 159925\\n  },\\n  {\\n    \\\"tag\\\": \"cajuputol\",\\n    \\\"popularity\\\": 159033\\n  },\\n  {\\n    \\\"tag\\\": \"pleomorphous\",\\n    \\\"popularity\\\": 158148\\n  },\\n  {\\n    \\\"tag\\\": \"aculeolate\",\\n    \\\"popularity\\\": 157270\\n  },\\n  {\\n    \\\"tag\\\": \"wherever\",\\n    \\\"popularity\\\": 156400\\n  },\\n  {\\n    \\\"tag\\\": \"collapse\",\\n    \\\"popularity\\\": 155538\\n  },\\n  {\\n    \\\"tag\\\": \"porky\",\\n    \\\"popularity\\\": 154683\\n  },\\n  {\\n    \\\"tag\\\": \"perule\",\\n    \\\"popularity\\\": 153836\\n  },\\n  {\\n    \\\"tag\\\": \"Nevada\",\\n    \\\"popularity\\\": 152996\\n  },\\n  {\\n    \\\"tag\\\": \"conalbumin\",\\n    \\\"popularity\\\": 152162\\n  },\\n  {\\n    \\\"tag\\\": \"tsunami\",\\n    \\\"popularity\\\": 151336\\n  },\\n  {\\n    \\\"tag\\\": \"Gulf\",\\n    \\\"popularity\\\": 150517\\n  },\\n  {\\n    \\\"tag\\\": \"hertz\",\\n    \\\"popularity\\\": 149705\\n  },\\n  {\\n    \\\"tag\\\": \"limmock\",\\n    \\\"popularity\\\": 148900\\n  },\\n  {\\n    \\\"tag\\\": \"Tartarize\",\\n    \\\"popularity\\\": 148101\\n  },\\n  {\\n    \\\"tag\\\": \"entosphenoid\",\\n    \\\"popularity\\\": 147310\\n  },\\n  {\\n    \\\"tag\\\": \"ibis\",\\n    \\\"popularity\\\": 146524\\n  },\\n  {\\n    \\\"tag\\\": \"unyeaned\",\\n    \\\"popularity\\\": 145746\\n  },\\n  {\\n    \\\"tag\\\": \"tritural\",\\n    \\\"popularity\\\": 144973\\n  },\\n  {\\n    \\\"tag\\\": \"hundredary\",\\n    \\\"popularity\\\": 144207\\n  },\\n  {\\n    \\\"tag\\\": \"stolonlike\",\\n    \\\"popularity\\\": 143448\\n  },\\n  {\\n    \\\"tag\\\": \"chorister\",\\n    \\\"popularity\\\": 142694\\n  },\\n  {\\n    \\\"tag\\\": \"mismove\",\\n    \\\"popularity\\\": 141947\\n  },\\n  {\\n    \\\"tag\\\": \"Andine\",\\n    \\\"popularity\\\": 141206\\n  },\\n  {\\n    \\\"tag\\\": \"Annette proneur escribe\",\\n    \\\"popularity\\\": 140471\\n  },\\n  {\\n    \\\"tag\\\": \"exoperidium\",\\n    \\\"popularity\\\": 139742\\n  },\\n  {\\n    \\\"tag\\\": \"disedge\",\\n    \\\"popularity\\\": 139019\\n  },\\n  {\\n    \\\"tag\\\": \"hypochloruria\",\\n    \\\"popularity\\\": 138302\\n  },\\n  {\\n    \\\"tag\\\": \"prepupa\",\\n    \\\"popularity\\\": 137590\\n  },\\n  {\\n    \\\"tag\\\": \"assent\",\\n    \\\"popularity\\\": 136884\\n  },\\n  {\\n    \\\"tag\\\": \"hydrazobenzene\",\\n    \\\"popularity\\\": 136184\\n  },\\n  {\\n    \\\"tag\\\": \"emballonurid\",\\n    \\\"popularity\\\": 135489\\n  },\\n  {\\n    \\\"tag\\\": \"roselle\",\\n    \\\"popularity\\\": 134800\\n  },\\n  {\\n    \\\"tag\\\": \"unifiedly\",\\n    \\\"popularity\\\": 134117\\n  },\\n  {\\n    \\\"tag\\\": \"clang\",\\n    \\\"popularity\\\": 133439\\n  },\\n  {\\n    \\\"tag\\\": \"acetolytic\",\\n    \\\"popularity\\\": 132766\\n  },\\n  {\\n    \\\"tag\\\": \"cladodont\",\\n    \\\"popularity\\\": 132098\\n  },\\n  {\\n    \\\"tag\\\": \"recoast\",\\n    \\\"popularity\\\": 131436\\n  },\\n  {\\n    \\\"tag\\\": \"celebrated tydie Eocarboniferous\",\\n    \\\"popularity\\\": 130779\\n  },\\n  {\\n    \\\"tag\\\": \"superconsciousness\",\\n    \\\"popularity\\\": 130127\\n  },\\n  {\\n    \\\"tag\\\": \"soberness\",\\n    \\\"popularity\\\": 129480\\n  },\\n  {\\n    \\\"tag\\\": \"panoramist\",\\n    \\\"popularity\\\": 128838\\n  },\\n  {\\n    \\\"tag\\\": \"Orbitolina\",\\n    \\\"popularity\\\": 128201\\n  },\\n  {\\n    \\\"tag\\\": \"overlewd\",\\n    \\\"popularity\\\": 127569\\n  },\\n  {\\n    \\\"tag\\\": \"demiquaver\",\\n    \\\"popularity\\\": 126942\\n  },\\n  {\\n    \\\"tag\\\": \"kamelaukion\",\\n    \\\"popularity\\\": 126319\\n  },\\n  {\\n    \\\"tag\\\": \"flancard\",\\n    \\\"popularity\\\": 125702\\n  },\\n  {\\n    \\\"tag\\\": \"tricuspid\",\\n    \\\"popularity\\\": 125089\\n  },\\n  {\\n    \\\"tag\\\": \"bepelt\",\\n    \\\"popularity\\\": 124480\\n  },\\n  {\\n    \\\"tag\\\": \"decuplet\",\\n    \\\"popularity\\\": 123877\\n  },\\n  {\\n    \\\"tag\\\": \"Rockies\",\\n    \\\"popularity\\\": 123278\\n  },\\n  {\\n    \\\"tag\\\": \"unforgeability\",\\n    \\\"popularity\\\": 122683\\n  },\\n  {\\n    \\\"tag\\\": \"mocha\",\\n    \\\"popularity\\\": 122093\\n  },\\n  {\\n    \\\"tag\\\": \"scrunge\",\\n    \\\"popularity\\\": 121507\\n  },\\n  {\\n    \\\"tag\\\": \"delighter\",\\n    \\\"popularity\\\": 120926\\n  },\\n  {\\n    \\\"tag\\\": \"willey Microtinae\",\\n    \\\"popularity\\\": 120349\\n  },\\n  {\\n    \\\"tag\\\": \"unhuntable\",\\n    \\\"popularity\\\": 119777\\n  },\\n  {\\n    \\\"tag\\\": \"historically\",\\n    \\\"popularity\\\": 119208\\n  },\\n  {\\n    \\\"tag\\\": \"vicegerentship\",\\n    \\\"popularity\\\": 118644\\n  },\\n  {\\n    \\\"tag\\\": \"hemangiosarcoma\",\\n    \\\"popularity\\\": 118084\\n  },\\n  {\\n    \\\"tag\\\": \"harpago\",\\n    \\\"popularity\\\": 117528\\n  },\\n  {\\n    \\\"tag\\\": \"unionoid\",\\n    \\\"popularity\\\": 116976\\n  },\\n  {\\n    \\\"tag\\\": \"wiseman\",\\n    \\\"popularity\\\": 116429\\n  },\\n  {\\n    \\\"tag\\\": \"diclinism\",\\n    \\\"popularity\\\": 115885\\n  },\\n  {\\n    \\\"tag\\\": \"Maud\",\\n    \\\"popularity\\\": 115345\\n  },\\n  {\\n    \\\"tag\\\": \"scaphocephalism\",\\n    \\\"popularity\\\": 114809\\n  },\\n  {\\n    \\\"tag\\\": \"obtenebration\",\\n    \\\"popularity\\\": 114277\\n  },\\n  {\\n    \\\"tag\\\": \"cymar predreadnought\",\\n    \\\"popularity\\\": 113749\\n  },\\n  {\\n    \\\"tag\\\": \"discommend\",\\n    \\\"popularity\\\": 113225\\n  },\\n  {\\n    \\\"tag\\\": \"crude\",\\n    \\\"popularity\\\": 112704\\n  },\\n  {\\n    \\\"tag\\\": \"upflash\",\\n    \\\"popularity\\\": 112187\\n  },\\n  {\\n    \\\"tag\\\": \"saltimbank\",\\n    \\\"popularity\\\": 111674\\n  },\\n  {\\n    \\\"tag\\\": \"posthysterical\",\\n    \\\"popularity\\\": 111165\\n  },\\n  {\\n    \\\"tag\\\": \"trample\",\\n    \\\"popularity\\\": 110659\\n  },\\n  {\\n    \\\"tag\\\": \"ungirthed\",\\n    \\\"popularity\\\": 110157\\n  },\\n  {\\n    \\\"tag\\\": \"unshakable\",\\n    \\\"popularity\\\": 109658\\n  },\\n  {\\n    \\\"tag\\\": \"hepatocystic\",\\n    \\\"popularity\\\": 109163\\n  },\\n  {\\n    \\\"tag\\\": \"psammophyte\",\\n    \\\"popularity\\\": 108671\\n  },\\n  {\\n    \\\"tag\\\": \"millionfold\",\\n    \\\"popularity\\\": 108183\\n  },\\n  {\\n    \\\"tag\\\": \"outtaste\",\\n    \\\"popularity\\\": 107698\\n  },\\n  {\\n    \\\"tag\\\": \"poppycockish\",\\n    \\\"popularity\\\": 107217\\n  },\\n  {\\n    \\\"tag\\\": \"viduine\",\\n    \\\"popularity\\\": 106739\\n  },\\n  {\\n    \\\"tag\\\": \"pleasureman\",\\n    \\\"popularity\\\": 106264\\n  },\\n  {\\n    \\\"tag\\\": \"cholesterolemia\",\\n    \\\"popularity\\\": 105792\\n  },\\n  {\\n    \\\"tag\\\": \"hostlerwife\",\\n    \\\"popularity\\\": 105324\\n  },\\n  {\\n    \\\"tag\\\": \"figure undergrass\",\\n    \\\"popularity\\\": 104859\\n  },\\n  {\\n    \\\"tag\\\": \"bedrape\",\\n    \\\"popularity\\\": 104398\\n  },\\n  {\\n    \\\"tag\\\": \"nuttishness\",\\n    \\\"popularity\\\": 103939\\n  },\\n  {\\n    \\\"tag\\\": \"fow\",\\n    \\\"popularity\\\": 103484\\n  },\\n  {\\n    \\\"tag\\\": \"rachianesthesia\",\\n    \\\"popularity\\\": 103031\\n  },\\n  {\\n    \\\"tag\\\": \"recruitable\",\\n    \\\"popularity\\\": 102582\\n  },\\n  {\\n    \\\"tag\\\": \"semianatomical Oenotheraceae\",\\n    \\\"popularity\\\": 102136\\n  },\\n  {\\n    \\\"tag\\\": \"extracapsular\",\\n    \\\"popularity\\\": 101693\\n  },\\n  {\\n    \\\"tag\\\": \"unsigneted\",\\n    \\\"popularity\\\": 101253\\n  },\\n  {\\n    \\\"tag\\\": \"fissural\",\\n    \\\"popularity\\\": 100816\\n  },\\n  {\\n    \\\"tag\\\": \"ayous\",\\n    \\\"popularity\\\": 100381\\n  },\\n  {\\n    \\\"tag\\\": \"crestfallenness odontograph\",\\n    \\\"popularity\\\": 99950\\n  },\\n  {\\n    \\\"tag\\\": \"monopodium\",\\n    \\\"popularity\\\": 99522\\n  },\\n  {\\n    \\\"tag\\\": \"germfree\",\\n    \\\"popularity\\\": 99096\\n  },\\n  {\\n    \\\"tag\\\": \"dauphin\",\\n    \\\"popularity\\\": 98673\\n  },\\n  {\\n    \\\"tag\\\": \"nonagesimal\",\\n    \\\"popularity\\\": 98254\\n  },\\n  {\\n    \\\"tag\\\": \"waterchat\",\\n    \\\"popularity\\\": 97836\\n  },\\n  {\\n    \\\"tag\\\": \"Entelodon\",\\n    \\\"popularity\\\": 97422\\n  },\\n  {\\n    \\\"tag\\\": \"semischolastic\",\\n    \\\"popularity\\\": 97010\\n  },\\n  {\\n    \\\"tag\\\": \"somata\",\\n    \\\"popularity\\\": 96602\\n  },\\n  {\\n    \\\"tag\\\": \"expositorily\",\\n    \\\"popularity\\\": 96195\\n  },\\n  {\\n    \\\"tag\\\": \"bass\",\\n    \\\"popularity\\\": 95792\\n  },\\n  {\\n    \\\"tag\\\": \"calorimetry\",\\n    \\\"popularity\\\": 95391\\n  },\\n  {\\n    \\\"tag\\\": \"entireness\",\\n    \\\"popularity\\\": 94993\\n  },\\n  {\\n    \\\"tag\\\": \"ratline soppiness\",\\n    \\\"popularity\\\": 94597\\n  },\\n  {\\n    \\\"tag\\\": \"shor\",\\n    \\\"popularity\\\": 94204\\n  },\\n  {\\n    \\\"tag\\\": \"coprecipitation\",\\n    \\\"popularity\\\": 93813\\n  },\\n  {\\n    \\\"tag\\\": \"unblushingly\",\\n    \\\"popularity\\\": 93425\\n  },\\n  {\\n    \\\"tag\\\": \"macarize\",\\n    \\\"popularity\\\": 93040\\n  },\\n  {\\n    \\\"tag\\\": \"scruplesomeness\",\\n    \\\"popularity\\\": 92657\\n  },\\n  {\\n    \\\"tag\\\": \"offsaddle\",\\n    \\\"popularity\\\": 92276\\n  },\\n  {\\n    \\\"tag\\\": \"hypertragical\",\\n    \\\"popularity\\\": 91898\\n  },\\n  {\\n    \\\"tag\\\": \"uncassock loined\",\\n    \\\"popularity\\\": 91522\\n  },\\n  {\\n    \\\"tag\\\": \"interlobate\",\\n    \\\"popularity\\\": 91149\\n  },\\n  {\\n    \\\"tag\\\": \"releasor orrisroot stoloniferously\",\\n    \\\"popularity\\\": 90778\\n  },\\n  {\\n    \\\"tag\\\": \"elementoid\",\\n    \\\"popularity\\\": 90410\\n  },\\n  {\\n    \\\"tag\\\": \"Lentilla\",\\n    \\\"popularity\\\": 90043\\n  },\\n  {\\n    \\\"tag\\\": \"distressing\",\\n    \\\"popularity\\\": 89679\\n  },\\n  {\\n    \\\"tag\\\": \"hydrodrome\",\\n    \\\"popularity\\\": 89318\\n  },\\n  {\\n    \\\"tag\\\": \"Jeannette\",\\n    \\\"popularity\\\": 88958\\n  },\\n  {\\n    \\\"tag\\\": \"Kuli\",\\n    \\\"popularity\\\": 88601\\n  },\\n  {\\n    \\\"tag\\\": \"taxinomist\",\\n    \\\"popularity\\\": 88246\\n  },\\n  {\\n    \\\"tag\\\": \"southwestwardly\",\\n    \\\"popularity\\\": 87894\\n  },\\n  {\\n    \\\"tag\\\": \"polyparia\",\\n    \\\"popularity\\\": 87543\\n  },\\n  {\\n    \\\"tag\\\": \"exmeridian\",\\n    \\\"popularity\\\": 87195\\n  },\\n  {\\n    \\\"tag\\\": \"splenius regimentaled\",\\n    \\\"popularity\\\": 86849\\n  },\\n  {\\n    \\\"tag\\\": \"Sphaeropsidaceae\",\\n    \\\"popularity\\\": 86505\\n  },\\n  {\\n    \\\"tag\\\": \"unbegun\",\\n    \\\"popularity\\\": 86163\\n  },\\n  {\\n    \\\"tag\\\": \"something\",\\n    \\\"popularity\\\": 85823\\n  },\\n  {\\n    \\\"tag\\\": \"contaminable nonexpulsion\",\\n    \\\"popularity\\\": 85486\\n  },\\n  {\\n    \\\"tag\\\": \"douser\",\\n    \\\"popularity\\\": 85150\\n  },\\n  {\\n    \\\"tag\\\": \"prostrike\",\\n    \\\"popularity\\\": 84817\\n  },\\n  {\\n    \\\"tag\\\": \"worky\",\\n    \\\"popularity\\\": 84485\\n  },\\n  {\\n    \\\"tag\\\": \"folliful\",\\n    \\\"popularity\\\": 84156\\n  },\\n  {\\n    \\\"tag\\\": \"prioracy\",\\n    \\\"popularity\\\": 83828\\n  },\\n  {\\n    \\\"tag\\\": \"undermentioned\",\\n    \\\"popularity\\\": 83503\\n  },\\n  {\\n    \\\"tag\\\": \"Judaica\",\\n    \\\"popularity\\\": 83179\\n  },\\n  {\\n    \\\"tag\\\": \"multifarious\",\\n    \\\"popularity\\\": 82858\\n  },\\n  {\\n    \\\"tag\\\": \"poogye\",\\n    \\\"popularity\\\": 82538\\n  },\\n  {\\n    \\\"tag\\\": \"Sparganium\",\\n    \\\"popularity\\\": 82221\\n  },\\n  {\\n    \\\"tag\\\": \"thurrock\",\\n    \\\"popularity\\\": 81905\\n  },\\n  {\\n    \\\"tag\\\": \"outblush\",\\n    \\\"popularity\\\": 81591\\n  },\\n  {\\n    \\\"tag\\\": \"Strophanthus supraordination\",\\n    \\\"popularity\\\": 81279\\n  },\\n  {\\n    \\\"tag\\\": \"gingerroot\",\\n    \\\"popularity\\\": 80969\\n  },\\n  {\\n    \\\"tag\\\": \"unconscient\",\\n    \\\"popularity\\\": 80661\\n  },\\n  {\\n    \\\"tag\\\": \"unconstitutionally\",\\n    \\\"popularity\\\": 80354\\n  },\\n  {\\n    \\\"tag\\\": \"plaguily\",\\n    \\\"popularity\\\": 80050\\n  },\\n  {\\n    \\\"tag\\\": \"waterily equatorwards\",\\n    \\\"popularity\\\": 79747\\n  },\\n  {\\n    \\\"tag\\\": \"nondeposition\",\\n    \\\"popularity\\\": 79446\\n  },\\n  {\\n    \\\"tag\\\": \"dronishly\",\\n    \\\"popularity\\\": 79147\\n  },\\n  {\\n    \\\"tag\\\": \"gateado\",\\n    \\\"popularity\\\": 78849\\n  },\\n  {\\n    \\\"tag\\\": \"dislink\",\\n    \\\"popularity\\\": 78553\\n  },\\n  {\\n    \\\"tag\\\": \"Joceline\",\\n    \\\"popularity\\\": 78259\\n  },\\n  {\\n    \\\"tag\\\": \"amphiboliferous\",\\n    \\\"popularity\\\": 77967\\n  },\\n  {\\n    \\\"tag\\\": \"bushrope\",\\n    \\\"popularity\\\": 77676\\n  },\\n  {\\n    \\\"tag\\\": \"plumicorn sulphosalicylic\",\\n    \\\"popularity\\\": 77387\\n  },\\n  {\\n    \\\"tag\\\": \"nonefficiency\",\\n    \\\"popularity\\\": 77100\\n  },\\n  {\\n    \\\"tag\\\": \"hieroscopy\",\\n    \\\"popularity\\\": 76815\\n  },\\n  {\\n    \\\"tag\\\": \"causativeness\",\\n    \\\"popularity\\\": 76531\\n  },\\n  {\\n    \\\"tag\\\": \"swird paleoeremology\",\\n    \\\"popularity\\\": 76249\\n  },\\n  {\\n    \\\"tag\\\": \"camphoric\",\\n    \\\"popularity\\\": 75968\\n  },\\n  {\\n    \\\"tag\\\": \"retaining\",\\n    \\\"popularity\\\": 75689\\n  },\\n  {\\n    \\\"tag\\\": \"thyreoprotein\",\\n    \\\"popularity\\\": 75411\\n  },\\n  {\\n    \\\"tag\\\": \"carbona\",\\n    \\\"popularity\\\": 75136\\n  },\\n  {\\n    \\\"tag\\\": \"protectively\",\\n    \\\"popularity\\\": 74861\\n  },\\n  {\\n    \\\"tag\\\": \"mosasaur\",\\n    \\\"popularity\\\": 74589\\n  },\\n  {\\n    \\\"tag\\\": \"reciprocator\",\\n    \\\"popularity\\\": 74317\\n  },\\n  {\\n    \\\"tag\\\": \"detentive\",\\n    \\\"popularity\\\": 74048\\n  },\\n  {\\n    \\\"tag\\\": \"supravital\",\\n    \\\"popularity\\\": 73780\\n  },\\n  {\\n    \\\"tag\\\": \"Vespertilionidae\",\\n    \\\"popularity\\\": 73513\\n  },\\n  {\\n    \\\"tag\\\": \"parka\",\\n    \\\"popularity\\\": 73248\\n  },\\n  {\\n    \\\"tag\\\": \"pickaway\",\\n    \\\"popularity\\\": 72984\\n  },\\n  {\\n    \\\"tag\\\": \"oleaceous\",\\n    \\\"popularity\\\": 72722\\n  },\\n  {\\n    \\\"tag\\\": \"anticogitative\",\\n    \\\"popularity\\\": 72462\\n  },\\n  {\\n    \\\"tag\\\": \"woe\",\\n    \\\"popularity\\\": 72203\\n  },\\n  {\\n    \\\"tag\\\": \"skeuomorph\",\\n    \\\"popularity\\\": 71945\\n  },\\n  {\\n    \\\"tag\\\": \"helpmeet\",\\n    \\\"popularity\\\": 71689\\n  },\\n  {\\n    \\\"tag\\\": \"Hexactinellida brickmaking\",\\n    \\\"popularity\\\": 71434\\n  },\\n  {\\n    \\\"tag\\\": \"resink\",\\n    \\\"popularity\\\": 71180\\n  },\\n  {\\n    \\\"tag\\\": \"diluter\",\\n    \\\"popularity\\\": 70928\\n  },\\n  {\\n    \\\"tag\\\": \"micromicron\",\\n    \\\"popularity\\\": 70677\\n  },\\n  {\\n    \\\"tag\\\": \"parentage\",\\n    \\\"popularity\\\": 70428\\n  },\\n  {\\n    \\\"tag\\\": \"galactorrhoea\",\\n    \\\"popularity\\\": 70180\\n  },\\n  {\\n    \\\"tag\\\": \"gey\",\\n    \\\"popularity\\\": 69934\\n  },\\n  {\\n    \\\"tag\\\": \"gesticulatory\",\\n    \\\"popularity\\\": 69689\\n  },\\n  {\\n    \\\"tag\\\": \"wergil\",\\n    \\\"popularity\\\": 69445\\n  },\\n  {\\n    \\\"tag\\\": \"Lecanora\",\\n    \\\"popularity\\\": 69202\\n  },\\n  {\\n    \\\"tag\\\": \"malanders karst\",\\n    \\\"popularity\\\": 68961\\n  },\\n  {\\n    \\\"tag\\\": \"vibetoite\",\\n    \\\"popularity\\\": 68721\\n  },\\n  {\\n    \\\"tag\\\": \"unrequitedness\",\\n    \\\"popularity\\\": 68483\\n  },\\n  {\\n    \\\"tag\\\": \"outwash\",\\n    \\\"popularity\\\": 68245\\n  },\\n  {\\n    \\\"tag\\\": \"unsacred\",\\n    \\\"popularity\\\": 68009\\n  },\\n  {\\n    \\\"tag\\\": \"unabetted dividend\",\\n    \\\"popularity\\\": 67775\\n  },\\n  {\\n    \\\"tag\\\": \"untraveling\",\\n    \\\"popularity\\\": 67541\\n  },\\n  {\\n    \\\"tag\\\": \"thermobattery\",\\n    \\\"popularity\\\": 67309\\n  },\\n  {\\n    \\\"tag\\\": \"polypragmist\",\\n    \\\"popularity\\\": 67078\\n  },\\n  {\\n    \\\"tag\\\": \"irrefutableness\",\\n    \\\"popularity\\\": 66848\\n  },\\n  {\\n    \\\"tag\\\": \"remiges\",\\n    \\\"popularity\\\": 66620\\n  },\\n  {\\n    \\\"tag\\\": \"implode\",\\n    \\\"popularity\\\": 66393\\n  },\\n  {\\n    \\\"tag\\\": \"superfluousness\",\\n    \\\"popularity\\\": 66166\\n  },\\n  {\\n    \\\"tag\\\": \"croakily unalleviated\",\\n    \\\"popularity\\\": 65942\\n  },\\n  {\\n    \\\"tag\\\": \"edicule\",\\n    \\\"popularity\\\": 65718\\n  },\\n  {\\n    \\\"tag\\\": \"entophytous\",\\n    \\\"popularity\\\": 65495\\n  },\\n  {\\n    \\\"tag\\\": \"benefactorship Toryish\",\\n    \\\"popularity\\\": 65274\\n  },\\n  {\\n    \\\"tag\\\": \"pseudoamateurish\",\\n    \\\"popularity\\\": 65054\\n  },\\n  {\\n    \\\"tag\\\": \"flueless Iguanodontoidea snipnose\",\\n    \\\"popularity\\\": 64835\\n  },\\n  {\\n    \\\"tag\\\": \"zealotical Zamicrus interpole\",\\n    \\\"popularity\\\": 64617\\n  },\\n  {\\n    \\\"tag\\\": \"whereabout\",\\n    \\\"popularity\\\": 64401\\n  },\\n  {\\n    \\\"tag\\\": \"benzazide\",\\n    \\\"popularity\\\": 64185\\n  },\\n  {\\n    \\\"tag\\\": \"pokeweed\",\\n    \\\"popularity\\\": 63971\\n  },\\n  {\\n    \\\"tag\\\": \"calamitoid\",\\n    \\\"popularity\\\": 63757\\n  },\\n  {\\n    \\\"tag\\\": \"sporozoal\",\\n    \\\"popularity\\\": 63545\\n  },\\n  {\\n    \\\"tag\\\": \"physcioid Welshwoman\",\\n    \\\"popularity\\\": 63334\\n  },\\n  {\\n    \\\"tag\\\": \"wanting\",\\n    \\\"popularity\\\": 63124\\n  },\\n  {\\n    \\\"tag\\\": \"unencumbering\",\\n    \\\"popularity\\\": 62915\\n  },\\n  {\\n    \\\"tag\\\": \"Tupi\",\\n    \\\"popularity\\\": 62707\\n  },\\n  {\\n    \\\"tag\\\": \"potbank\",\\n    \\\"popularity\\\": 62501\\n  },\\n  {\\n    \\\"tag\\\": \"bulked\",\\n    \\\"popularity\\\": 62295\\n  },\\n  {\\n    \\\"tag\\\": \"uparise\",\\n    \\\"popularity\\\": 62090\\n  },\\n  {\\n    \\\"tag\\\": \"Sudra\",\\n    \\\"popularity\\\": 61887\\n  },\\n  {\\n    \\\"tag\\\": \"hyperscrupulosity\",\\n    \\\"popularity\\\": 61684\\n  },\\n  {\\n    \\\"tag\\\": \"subterraneously unmaid\",\\n    \\\"popularity\\\": 61483\\n  },\\n  {\\n    \\\"tag\\\": \"poisonousness\",\\n    \\\"popularity\\\": 61282\\n  },\\n  {\\n    \\\"tag\\\": \"phare\",\\n    \\\"popularity\\\": 61083\\n  },\\n  {\\n    \\\"tag\\\": \"dicynodont\",\\n    \\\"popularity\\\": 60884\\n  },\\n  {\\n    \\\"tag\\\": \"chewer\",\\n    \\\"popularity\\\": 60687\\n  },\\n  {\\n    \\\"tag\\\": \"uliginous\",\\n    \\\"popularity\\\": 60490\\n  },\\n  {\\n    \\\"tag\\\": \"tinman\",\\n    \\\"popularity\\\": 60295\\n  },\\n  {\\n    \\\"tag\\\": \"coconut\",\\n    \\\"popularity\\\": 60100\\n  },\\n  {\\n    \\\"tag\\\": \"phryganeoid\",\\n    \\\"popularity\\\": 59907\\n  },\\n  {\\n    \\\"tag\\\": \"bismillah\",\\n    \\\"popularity\\\": 59714\\n  },\\n  {\\n    \\\"tag\\\": \"tautomeric\",\\n    \\\"popularity\\\": 59523\\n  },\\n  {\\n    \\\"tag\\\": \"jerquer\",\\n    \\\"popularity\\\": 59332\\n  },\\n  {\\n    \\\"tag\\\": \"Dryopithecinae\",\\n    \\\"popularity\\\": 59143\\n  },\\n  {\\n    \\\"tag\\\": \"ghizite\",\\n    \\\"popularity\\\": 58954\\n  },\\n  {\\n    \\\"tag\\\": \"unliveable\",\\n    \\\"popularity\\\": 58766\\n  },\\n  {\\n    \\\"tag\\\": \"craftsmaster\",\\n    \\\"popularity\\\": 58579\\n  },\\n  {\\n    \\\"tag\\\": \"semiscenic\",\\n    \\\"popularity\\\": 58394\\n  },\\n  {\\n    \\\"tag\\\": \"danaid\",\\n    \\\"popularity\\\": 58209\\n  },\\n  {\\n    \\\"tag\\\": \"flawful\",\\n    \\\"popularity\\\": 58025\\n  },\\n  {\\n    \\\"tag\\\": \"risibleness\",\\n    \\\"popularity\\\": 57841\\n  },\\n  {\\n    \\\"tag\\\": \"Muscovite\",\\n    \\\"popularity\\\": 57659\\n  },\\n  {\\n    \\\"tag\\\": \"snaringly\",\\n    \\\"popularity\\\": 57478\\n  },\\n  {\\n    \\\"tag\\\": \"brilliantwise\",\\n    \\\"popularity\\\": 57297\\n  },\\n  {\\n    \\\"tag\\\": \"plebeity\",\\n    \\\"popularity\\\": 57118\\n  },\\n  {\\n    \\\"tag\\\": \"historicalness\",\\n    \\\"popularity\\\": 56939\\n  },\\n  {\\n    \\\"tag\\\": \"piecemeal\",\\n    \\\"popularity\\\": 56761\\n  },\\n  {\\n    \\\"tag\\\": \"maxillipedary\",\\n    \\\"popularity\\\": 56584\\n  },\\n  {\\n    \\\"tag\\\": \"Hypenantron\",\\n    \\\"popularity\\\": 56408\\n  },\\n  {\\n    \\\"tag\\\": \"quaintness avigate\",\\n    \\\"popularity\\\": 56233\\n  },\\n  {\\n    \\\"tag\\\": \"ave\",\\n    \\\"popularity\\\": 56059\\n  },\\n  {\\n    \\\"tag\\\": \"mediaevally\",\\n    \\\"popularity\\\": 55885\\n  },\\n  {\\n    \\\"tag\\\": \"brucite\",\\n    \\\"popularity\\\": 55712\\n  },\\n  {\\n    \\\"tag\\\": \"Schwendenerian\",\\n    \\\"popularity\\\": 55541\\n  },\\n  {\\n    \\\"tag\\\": \"julole\",\\n    \\\"popularity\\\": 55370\\n  },\\n  {\\n    \\\"tag\\\": \"palaeolith\",\\n    \\\"popularity\\\": 55199\\n  },\\n  {\\n    \\\"tag\\\": \"cotyledonary\",\\n    \\\"popularity\\\": 55030\\n  },\\n  {\\n    \\\"tag\\\": \"rond\",\\n    \\\"popularity\\\": 54861\\n  },\\n  {\\n    \\\"tag\\\": \"boomster tassoo\",\\n    \\\"popularity\\\": 54694\\n  },\\n  {\\n    \\\"tag\\\": \"cattishly\",\\n    \\\"popularity\\\": 54527\\n  },\\n  {\\n    \\\"tag\\\": \"tonguefence\",\\n    \\\"popularity\\\": 54360\\n  },\\n  {\\n    \\\"tag\\\": \"hexastylar triskele\",\\n    \\\"popularity\\\": 54195\\n  },\\n  {\\n    \\\"tag\\\": \"ariot\",\\n    \\\"popularity\\\": 54030\\n  },\\n  {\\n    \\\"tag\\\": \"intarsist\",\\n    \\\"popularity\\\": 53867\\n  },\\n  {\\n    \\\"tag\\\": \"Oscines\",\\n    \\\"popularity\\\": 53704\\n  },\\n  {\\n    \\\"tag\\\": \"Spaniolize\",\\n    \\\"popularity\\\": 53541\\n  },\\n  {\\n    \\\"tag\\\": \"smellfungus\",\\n    \\\"popularity\\\": 53380\\n  },\\n  {\\n    \\\"tag\\\": \"redisplay\",\\n    \\\"popularity\\\": 53219\\n  },\\n  {\\n    \\\"tag\\\": \"phosphene\",\\n    \\\"popularity\\\": 53059\\n  },\\n  {\\n    \\\"tag\\\": \"phycomycete\",\\n    \\\"popularity\\\": 52900\\n  },\\n  {\\n    \\\"tag\\\": \"prophetic\",\\n    \\\"popularity\\\": 52741\\n  },\\n  {\\n    \\\"tag\\\": \"overtrustful\",\\n    \\\"popularity\\\": 52584\\n  },\\n  {\\n    \\\"tag\\\": \"pinitol\",\\n    \\\"popularity\\\": 52427\\n  },\\n  {\\n    \\\"tag\\\": \"asthmatic\",\\n    \\\"popularity\\\": 52270\\n  },\\n  {\\n    \\\"tag\\\": \"convulsive\",\\n    \\\"popularity\\\": 52115\\n  },\\n  {\\n    \\\"tag\\\": \"draughtswoman\",\\n    \\\"popularity\\\": 51960\\n  },\\n  {\\n    \\\"tag\\\": \"unetymologizable\",\\n    \\\"popularity\\\": 51806\\n  },\\n  {\\n    \\\"tag\\\": \"centrarchoid\",\\n    \\\"popularity\\\": 51652\\n  },\\n  {\\n    \\\"tag\\\": \"mesioincisal\",\\n    \\\"popularity\\\": 51500\\n  },\\n  {\\n    \\\"tag\\\": \"transbaikal\",\\n    \\\"popularity\\\": 51348\\n  },\\n  {\\n    \\\"tag\\\": \"silveriness\",\\n    \\\"popularity\\\": 51196\\n  },\\n  {\\n    \\\"tag\\\": \"costotomy\",\\n    \\\"popularity\\\": 51046\\n  },\\n  {\\n    \\\"tag\\\": \"caracore\",\\n    \\\"popularity\\\": 50896\\n  },\\n  {\\n    \\\"tag\\\": \"depotentiation\",\\n    \\\"popularity\\\": 50747\\n  },\\n  {\\n    \\\"tag\\\": \"glossoepiglottidean\",\\n    \\\"popularity\\\": 50598\\n  },\\n  {\\n    \\\"tag\\\": \"upswell\",\\n    \\\"popularity\\\": 50450\\n  },\\n  {\\n    \\\"tag\\\": \"flecnodal\",\\n    \\\"popularity\\\": 50303\\n  },\\n  {\\n    \\\"tag\\\": \"coventrate\",\\n    \\\"popularity\\\": 50157\\n  },\\n  {\\n    \\\"tag\\\": \"duchesse\",\\n    \\\"popularity\\\": 50011\\n  },\\n  {\\n    \\\"tag\\\": \"excisemanship trophied\",\\n    \\\"popularity\\\": 49866\\n  },\\n  {\\n    \\\"tag\\\": \"cytinaceous\",\\n    \\\"popularity\\\": 49721\\n  },\\n  {\\n    \\\"tag\\\": \"assuringly\",\\n    \\\"popularity\\\": 49577\\n  },\\n  {\\n    \\\"tag\\\": \"unconducted upliftitis\",\\n    \\\"popularity\\\": 49434\\n  },\\n  {\\n    \\\"tag\\\": \"rachicentesis\",\\n    \\\"popularity\\\": 49292\\n  },\\n  {\\n    \\\"tag\\\": \"antiangular\",\\n    \\\"popularity\\\": 49150\\n  },\\n  {\\n    \\\"tag\\\": \"advisal\",\\n    \\\"popularity\\\": 49008\\n  },\\n  {\\n    \\\"tag\\\": \"birdcatcher\",\\n    \\\"popularity\\\": 48868\\n  },\\n  {\\n    \\\"tag\\\": \"secularistic\",\\n    \\\"popularity\\\": 48728\\n  },\\n  {\\n    \\\"tag\\\": \"grandeeism superinformal\",\\n    \\\"popularity\\\": 48588\\n  },\\n  {\\n    \\\"tag\\\": \"unapprehension\",\\n    \\\"popularity\\\": 48449\\n  },\\n  {\\n    \\\"tag\\\": \"excipulum\",\\n    \\\"popularity\\\": 48311\\n  },\\n  {\\n    \\\"tag\\\": \"decimole\",\\n    \\\"popularity\\\": 48174\\n  },\\n  {\\n    \\\"tag\\\": \"semidrachm\",\\n    \\\"popularity\\\": 48037\\n  },\\n  {\\n    \\\"tag\\\": \"uvulotome\",\\n    \\\"popularity\\\": 47901\\n  },\\n  {\\n    \\\"tag\\\": \"Lemaneaceae\",\\n    \\\"popularity\\\": 47765\\n  },\\n  {\\n    \\\"tag\\\": \"corrade\",\\n    \\\"popularity\\\": 47630\\n  },\\n  {\\n    \\\"tag\\\": \"Kuroshio\",\\n    \\\"popularity\\\": 47495\\n  },\\n  {\\n    \\\"tag\\\": \"Araliophyllum\",\\n    \\\"popularity\\\": 47361\\n  },\\n  {\\n    \\\"tag\\\": \"victoriousness cardiosphygmograph\",\\n    \\\"popularity\\\": 47228\\n  },\\n  {\\n    \\\"tag\\\": \"reinvent\",\\n    \\\"popularity\\\": 47095\\n  },\\n  {\\n    \\\"tag\\\": \"Macrotolagus\",\\n    \\\"popularity\\\": 46963\\n  },\\n  {\\n    \\\"tag\\\": \"strenuousness\",\\n    \\\"popularity\\\": 46831\\n  },\\n  {\\n    \\\"tag\\\": \"deviability\",\\n    \\\"popularity\\\": 46700\\n  },\\n  {\\n    \\\"tag\\\": \"phyllospondylous\",\\n    \\\"popularity\\\": 46570\\n  },\\n  {\\n    \\\"tag\\\": \"bisect rudderhole\",\\n    \\\"popularity\\\": 46440\\n  },\\n  {\\n    \\\"tag\\\": \"crownwork\",\\n    \\\"popularity\\\": 46311\\n  },\\n  {\\n    \\\"tag\\\": \"Ascalabota\",\\n    \\\"popularity\\\": 46182\\n  },\\n  {\\n    \\\"tag\\\": \"prostatomyomectomy\",\\n    \\\"popularity\\\": 46054\\n  },\\n  {\\n    \\\"tag\\\": \"neurosyphilis\",\\n    \\\"popularity\\\": 45926\\n  },\\n  {\\n    \\\"tag\\\": \"tabloid scraplet\",\\n    \\\"popularity\\\": 45799\\n  },\\n  {\\n    \\\"tag\\\": \"nonmedullated servility\",\\n    \\\"popularity\\\": 45673\\n  },\\n  {\\n    \\\"tag\\\": \"melopoeic practicalization\",\\n    \\\"popularity\\\": 45547\\n  },\\n  {\\n    \\\"tag\\\": \"nonrhythmic\",\\n    \\\"popularity\\\": 45421\\n  },\\n  {\\n    \\\"tag\\\": \"deplorer\",\\n    \\\"popularity\\\": 45296\\n  },\\n  {\\n    \\\"tag\\\": \"Ophion\",\\n    \\\"popularity\\\": 45172\\n  },\\n  {\\n    \\\"tag\\\": \"subprioress\",\\n    \\\"popularity\\\": 45048\\n  },\\n  {\\n    \\\"tag\\\": \"semiregular\",\\n    \\\"popularity\\\": 44925\\n  },\\n  {\\n    \\\"tag\\\": \"praelection\",\\n    \\\"popularity\\\": 44802\\n  },\\n  {\\n    \\\"tag\\\": \"discinct\",\\n    \\\"popularity\\\": 44680\\n  },\\n  {\\n    \\\"tag\\\": \"preplace\",\\n    \\\"popularity\\\": 44558\\n  },\\n  {\\n    \\\"tag\\\": \"paternoster\",\\n    \\\"popularity\\\": 44437\\n  },\\n  {\\n    \\\"tag\\\": \"suboccipital\",\\n    \\\"popularity\\\": 44316\\n  },\\n  {\\n    \\\"tag\\\": \"Teutophil\",\\n    \\\"popularity\\\": 44196\\n  },\\n  {\\n    \\\"tag\\\": \"tracheole\",\\n    \\\"popularity\\\": 44076\\n  },\\n  {\\n    \\\"tag\\\": \"subsmile\",\\n    \\\"popularity\\\": 43957\\n  },\\n  {\\n    \\\"tag\\\": \"nonapostatizing\",\\n    \\\"popularity\\\": 43839\\n  },\\n  {\\n    \\\"tag\\\": \"cleidotomy\",\\n    \\\"popularity\\\": 43720\\n  },\\n  {\\n    \\\"tag\\\": \"hingle\",\\n    \\\"popularity\\\": 43603\\n  },\\n  {\\n    \\\"tag\\\": \"jocoque\",\\n    \\\"popularity\\\": 43486\\n  },\\n  {\\n    \\\"tag\\\": \"trundler notidanian\",\\n    \\\"popularity\\\": 43369\\n  },\\n  {\\n    \\\"tag\\\": \"strangling misdaub\",\\n    \\\"popularity\\\": 43253\\n  },\\n  {\\n    \\\"tag\\\": \"noncancellable\",\\n    \\\"popularity\\\": 43137\\n  },\\n  {\\n    \\\"tag\\\": \"lavabo\",\\n    \\\"popularity\\\": 43022\\n  },\\n  {\\n    \\\"tag\\\": \"lanterloo\",\\n    \\\"popularity\\\": 42907\\n  },\\n  {\\n    \\\"tag\\\": \"uncitizenly\",\\n    \\\"popularity\\\": 42793\\n  },\\n  {\\n    \\\"tag\\\": \"autoturning\",\\n    \\\"popularity\\\": 42679\\n  },\\n  {\\n    \\\"tag\\\": \"Haganah\",\\n    \\\"popularity\\\": 42566\\n  },\\n  {\\n    \\\"tag\\\": \"Glecoma\",\\n    \\\"popularity\\\": 42453\\n  },\\n  {\\n    \\\"tag\\\": \"membered\",\\n    \\\"popularity\\\": 42341\\n  },\\n  {\\n    \\\"tag\\\": \"consuetudinal\",\\n    \\\"popularity\\\": 42229\\n  },\\n  {\\n    \\\"tag\\\": \"gatehouse\",\\n    \\\"popularity\\\": 42117\\n  },\\n  {\\n    \\\"tag\\\": \"tetherball\",\\n    \\\"popularity\\\": 42006\\n  },\\n  {\\n    \\\"tag\\\": \"counterrevolutionist numismatical\",\\n    \\\"popularity\\\": 41896\\n  },\\n  {\\n    \\\"tag\\\": \"pagehood plateiasmus\",\\n    \\\"popularity\\\": 41786\\n  },\\n  {\\n    \\\"tag\\\": \"pelterer\",\\n    \\\"popularity\\\": 41676\\n  },\\n  {\\n    \\\"tag\\\": \"splenemphraxis\",\\n    \\\"popularity\\\": 41567\\n  },\\n  {\\n    \\\"tag\\\": \"Crypturidae\",\\n    \\\"popularity\\\": 41458\\n  },\\n  {\\n    \\\"tag\\\": \"caboodle\",\\n    \\\"popularity\\\": 41350\\n  },\\n  {\\n    \\\"tag\\\": \"Filaria\",\\n    \\\"popularity\\\": 41242\\n  },\\n  {\\n    \\\"tag\\\": \"noninvincibility\",\\n    \\\"popularity\\\": 41135\\n  },\\n  {\\n    \\\"tag\\\": \"preadvertisement\",\\n    \\\"popularity\\\": 41028\\n  },\\n  {\\n    \\\"tag\\\": \"bathrobe\",\\n    \\\"popularity\\\": 40921\\n  },\\n  {\\n    \\\"tag\\\": \"nitrifier\",\\n    \\\"popularity\\\": 40815\\n  },\\n  {\\n    \\\"tag\\\": \"furthermore\",\\n    \\\"popularity\\\": 40709\\n  },\\n  {\\n    \\\"tag\\\": \"recrate\",\\n    \\\"popularity\\\": 40604\\n  },\\n  {\\n    \\\"tag\\\": \"inexist\",\\n    \\\"popularity\\\": 40499\\n  },\\n  {\\n    \\\"tag\\\": \"Mocoan\",\\n    \\\"popularity\\\": 40395\\n  },\\n  {\\n    \\\"tag\\\": \"forint\",\\n    \\\"popularity\\\": 40291\\n  },\\n  {\\n    \\\"tag\\\": \"cardiomyoliposis\",\\n    \\\"popularity\\\": 40187\\n  },\\n  {\\n    \\\"tag\\\": \"channeling\",\\n    \\\"popularity\\\": 40084\\n  },\\n  {\\n    \\\"tag\\\": \"quebrachine\",\\n    \\\"popularity\\\": 39981\\n  },\\n  {\\n    \\\"tag\\\": \"magistery\",\\n    \\\"popularity\\\": 39879\\n  },\\n  {\\n    \\\"tag\\\": \"koko\",\\n    \\\"popularity\\\": 39777\\n  },\\n  {\\n    \\\"tag\\\": \"nobilify\",\\n    \\\"popularity\\\": 39676\\n  },\\n  {\\n    \\\"tag\\\": \"articulate taprooted\",\\n    \\\"popularity\\\": 39575\\n  },\\n  {\\n    \\\"tag\\\": \"cardiotonic Nicaragua\",\\n    \\\"popularity\\\": 39474\\n  },\\n  {\\n    \\\"tag\\\": \"assertiveness\",\\n    \\\"popularity\\\": 39374\\n  },\\n  {\\n    \\\"tag\\\": \"springtail\",\\n    \\\"popularity\\\": 39274\\n  },\\n  {\\n    \\\"tag\\\": \"spontoon\",\\n    \\\"popularity\\\": 39174\\n  },\\n  {\\n    \\\"tag\\\": \"plesiobiosis\",\\n    \\\"popularity\\\": 39075\\n  },\\n  {\\n    \\\"tag\\\": \"rooinek\",\\n    \\\"popularity\\\": 38976\\n  },\\n  {\\n    \\\"tag\\\": \"hairif falsehood\",\\n    \\\"popularity\\\": 38878\\n  },\\n  {\\n    \\\"tag\\\": \"synodally\",\\n    \\\"popularity\\\": 38780\\n  },\\n  {\\n    \\\"tag\\\": \"biodynamics\",\\n    \\\"popularity\\\": 38683\\n  },\\n  {\\n    \\\"tag\\\": \"trickling\",\\n    \\\"popularity\\\": 38585\\n  },\\n  {\\n    \\\"tag\\\": \"oxfly daystar\",\\n    \\\"popularity\\\": 38489\\n  },\\n  {\\n    \\\"tag\\\": \"epicycloidal\",\\n    \\\"popularity\\\": 38392\\n  },\\n  {\\n    \\\"tag\\\": \"shorthand\",\\n    \\\"popularity\\\": 38296\\n  },\\n  {\\n    \\\"tag\\\": \"herpolhode\",\\n    \\\"popularity\\\": 38201\\n  },\\n  {\\n    \\\"tag\\\": \"polysynthesism\",\\n    \\\"popularity\\\": 38105\\n  },\\n  {\\n    \\\"tag\\\": \"cany\",\\n    \\\"popularity\\\": 38010\\n  },\\n  {\\n    \\\"tag\\\": \"sideage\",\\n    \\\"popularity\\\": 37916\\n  },\\n  {\\n    \\\"tag\\\": \"strainableness\",\\n    \\\"popularity\\\": 37822\\n  },\\n  {\\n    \\\"tag\\\": \"superformidable\",\\n    \\\"popularity\\\": 37728\\n  },\\n  {\\n    \\\"tag\\\": \"slendang\",\\n    \\\"popularity\\\": 37634\\n  },\\n  {\\n    \\\"tag\\\": \"impropriation\",\\n    \\\"popularity\\\": 37541\\n  },\\n  {\\n    \\\"tag\\\": \"ficklehearted\",\\n    \\\"popularity\\\": 37449\\n  },\\n  {\\n    \\\"tag\\\": \"wintrify\",\\n    \\\"popularity\\\": 37356\\n  },\\n  {\\n    \\\"tag\\\": \"geomorphogenist\",\\n    \\\"popularity\\\": 37264\\n  },\\n  {\\n    \\\"tag\\\": \"smuggleable\",\\n    \\\"popularity\\\": 37173\\n  },\\n  {\\n    \\\"tag\\\": \"delapsion\",\\n    \\\"popularity\\\": 37081\\n  },\\n  {\\n    \\\"tag\\\": \"projective\",\\n    \\\"popularity\\\": 36990\\n  },\\n  {\\n    \\\"tag\\\": \"unglue exfoliation\",\\n    \\\"popularity\\\": 36900\\n  },\\n  {\\n    \\\"tag\\\": \"Acerae\",\\n    \\\"popularity\\\": 36810\\n  },\\n  {\\n    \\\"tag\\\": \"unstaged\",\\n    \\\"popularity\\\": 36720\\n  },\\n  {\\n    \\\"tag\\\": \"ranal\",\\n    \\\"popularity\\\": 36630\\n  },\\n  {\\n    \\\"tag\\\": \"worrier\",\\n    \\\"popularity\\\": 36541\\n  },\\n  {\\n    \\\"tag\\\": \"unhid\",\\n    \\\"popularity\\\": 36452\\n  },\\n  {\\n    \\\"tag\\\": \"adequation\",\\n    \\\"popularity\\\": 36363\\n  },\\n  {\\n    \\\"tag\\\": \"strongylid Sokotri\",\\n    \\\"popularity\\\": 36275\\n  },\\n  {\\n    \\\"tag\\\": \"fumingly\",\\n    \\\"popularity\\\": 36187\\n  },\\n  {\\n    \\\"tag\\\": \"gynosporangium phaenogenetic\",\\n    \\\"popularity\\\": 36100\\n  },\\n  {\\n    \\\"tag\\\": \"uniunguiculate\",\\n    \\\"popularity\\\": 36012\\n  },\\n  {\\n    \\\"tag\\\": \"prudelike\",\\n    \\\"popularity\\\": 35926\\n  },\\n  {\\n    \\\"tag\\\": \"seminomata\",\\n    \\\"popularity\\\": 35839\\n  },\\n  {\\n    \\\"tag\\\": \"trinklet\",\\n    \\\"popularity\\\": 35753\\n  },\\n  {\\n    \\\"tag\\\": \"risorial\",\\n    \\\"popularity\\\": 35667\\n  },\\n  {\\n    \\\"tag\\\": \"pericardiocentesis\",\\n    \\\"popularity\\\": 35581\\n  },\\n  {\\n    \\\"tag\\\": \"filmist\",\\n    \\\"popularity\\\": 35496\\n  },\\n  {\\n    \\\"tag\\\": \"Nana\",\\n    \\\"popularity\\\": 35411\\n  },\\n  {\\n    \\\"tag\\\": \"cynipoid\",\\n    \\\"popularity\\\": 35326\\n  },\\n  {\\n    \\\"tag\\\": \"cteniform\",\\n    \\\"popularity\\\": 35242\\n  },\\n  {\\n    \\\"tag\\\": \"semiflex\",\\n    \\\"popularity\\\": 35158\\n  },\\n  {\\n    \\\"tag\\\": \"solstitially\",\\n    \\\"popularity\\\": 35074\\n  },\\n  {\\n    \\\"tag\\\": \"Algarsife\",\\n    \\\"popularity\\\": 34991\\n  },\\n  {\\n    \\\"tag\\\": \"noncriminal\",\\n    \\\"popularity\\\": 34908\\n  },\\n  {\\n    \\\"tag\\\": \"compassion\",\\n    \\\"popularity\\\": 34825\\n  },\\n  {\\n    \\\"tag\\\": \"Buddhic\",\\n    \\\"popularity\\\": 34743\\n  },\\n  {\\n    \\\"tag\\\": \"vellicative dactylically hotfoot\",\\n    \\\"popularity\\\": 34661\\n  },\\n  {\\n    \\\"tag\\\": \"chicory\",\\n    \\\"popularity\\\": 34579\\n  },\\n  {\\n    \\\"tag\\\": \"transperitoneally\",\\n    \\\"popularity\\\": 34497\\n  },\\n  {\\n    \\\"tag\\\": \"pennae\",\\n    \\\"popularity\\\": 34416\\n  },\\n  {\\n    \\\"tag\\\": \"Flamandize\",\\n    \\\"popularity\\\": 34335\\n  },\\n  {\\n    \\\"tag\\\": \"underviewer\",\\n    \\\"popularity\\\": 34254\\n  },\\n  {\\n    \\\"tag\\\": \"assoil\",\\n    \\\"popularity\\\": 34174\\n  },\\n  {\\n    \\\"tag\\\": \"saccharobacillus\",\\n    \\\"popularity\\\": 34094\\n  },\\n  {\\n    \\\"tag\\\": \"biacetylene\",\\n    \\\"popularity\\\": 34014\\n  },\\n  {\\n    \\\"tag\\\": \"mouchardism\",\\n    \\\"popularity\\\": 33935\\n  },\\n  {\\n    \\\"tag\\\": \"anisomeric\",\\n    \\\"popularity\\\": 33856\\n  },\\n  {\\n    \\\"tag\\\": \"digestive\",\\n    \\\"popularity\\\": 33777\\n  },\\n  {\\n    \\\"tag\\\": \"darlingly\",\\n    \\\"popularity\\\": 33698\\n  },\\n  {\\n    \\\"tag\\\": \"liman\",\\n    \\\"popularity\\\": 33620\\n  },\\n  {\\n    \\\"tag\\\": \"soldanrie\",\\n    \\\"popularity\\\": 33542\\n  },\\n  {\\n    \\\"tag\\\": \"sully\",\\n    \\\"popularity\\\": 33464\\n  },\\n  {\\n    \\\"tag\\\": \"brightsmith\",\\n    \\\"popularity\\\": 33387\\n  },\\n  {\\n    \\\"tag\\\": \"inwrap antiliturgist ureterocervical\",\\n    \\\"popularity\\\": 33309\\n  },\\n  {\\n    \\\"tag\\\": \"discommodity\",\\n    \\\"popularity\\\": 33232\\n  },\\n  {\\n    \\\"tag\\\": \"typical aggrandizer\",\\n    \\\"popularity\\\": 33156\\n  },\\n  {\\n    \\\"tag\\\": \"xenogeny\",\\n    \\\"popularity\\\": 33079\\n  },\\n  {\\n    \\\"tag\\\": \"uncountrified\",\\n    \\\"popularity\\\": 33003\\n  },\\n  {\\n    \\\"tag\\\": \"Podarge\",\\n    \\\"popularity\\\": 32928\\n  },\\n  {\\n    \\\"tag\\\": \"uninterviewed\",\\n    \\\"popularity\\\": 32852\\n  },\\n  {\\n    \\\"tag\\\": \"underprior\",\\n    \\\"popularity\\\": 32777\\n  },\\n  {\\n    \\\"tag\\\": \"leiomyomatous\",\\n    \\\"popularity\\\": 32702\\n  },\\n  {\\n    \\\"tag\\\": \"postdysenteric\",\\n    \\\"popularity\\\": 32627\\n  },\\n  {\\n    \\\"tag\\\": \"Fusicladium\",\\n    \\\"popularity\\\": 32553\\n  },\\n  {\\n    \\\"tag\\\": \"Dulcinea\",\\n    \\\"popularity\\\": 32478\\n  },\\n  {\\n    \\\"tag\\\": \"interspersion\",\\n    \\\"popularity\\\": 32404\\n  },\\n  {\\n    \\\"tag\\\": \"preobligate\",\\n    \\\"popularity\\\": 32331\\n  },\\n  {\\n    \\\"tag\\\": \"subaggregate\",\\n    \\\"popularity\\\": 32257\\n  },\\n  {\\n    \\\"tag\\\": \"grammarianism\",\\n    \\\"popularity\\\": 32184\\n  },\\n  {\\n    \\\"tag\\\": \"palikar\",\\n    \\\"popularity\\\": 32111\\n  },\\n  {\\n    \\\"tag\\\": \"facileness\",\\n    \\\"popularity\\\": 32039\\n  },\\n  {\\n    \\\"tag\\\": \"deuterofibrinose\",\\n    \\\"popularity\\\": 31966\\n  },\\n  {\\n    \\\"tag\\\": \"pseudesthesia\",\\n    \\\"popularity\\\": 31894\\n  },\\n  {\\n    \\\"tag\\\": \"sedimentary\",\\n    \\\"popularity\\\": 31822\\n  },\\n  {\\n    \\\"tag\\\": \"typewrite\",\\n    \\\"popularity\\\": 31751\\n  },\\n  {\\n    \\\"tag\\\": \"immemorable\",\\n    \\\"popularity\\\": 31679\\n  },\\n  {\\n    \\\"tag\\\": \"Myrtus\",\\n    \\\"popularity\\\": 31608\\n  },\\n  {\\n    \\\"tag\\\": \"hauchecornite\",\\n    \\\"popularity\\\": 31537\\n  },\\n  {\\n    \\\"tag\\\": \"galleylike\",\\n    \\\"popularity\\\": 31467\\n  },\\n  {\\n    \\\"tag\\\": \"thimber\",\\n    \\\"popularity\\\": 31396\\n  },\\n  {\\n    \\\"tag\\\": \"Hegelianism\",\\n    \\\"popularity\\\": 31326\\n  },\\n  {\\n    \\\"tag\\\": \"strig\",\\n    \\\"popularity\\\": 31256\\n  },\\n  {\\n    \\\"tag\\\": \"skyre\",\\n    \\\"popularity\\\": 31187\\n  },\\n  {\\n    \\\"tag\\\": \"eupepticism\",\\n    \\\"popularity\\\": 31117\\n  },\\n  {\\n    \\\"tag\\\": \"eponymism\",\\n    \\\"popularity\\\": 31048\\n  },\\n  {\\n    \\\"tag\\\": \"flunkeyhood\",\\n    \\\"popularity\\\": 30979\\n  },\\n  {\\n    \\\"tag\\\": \"Abama\",\\n    \\\"popularity\\\": 30911\\n  },\\n  {\\n    \\\"tag\\\": \"adiadochokinesis\",\\n    \\\"popularity\\\": 30842\\n  },\\n  {\\n    \\\"tag\\\": \"spendthrifty\",\\n    \\\"popularity\\\": 30774\\n  },\\n  {\\n    \\\"tag\\\": \"chalcedony\",\\n    \\\"popularity\\\": 30706\\n  },\\n  {\\n    \\\"tag\\\": \"authorism\",\\n    \\\"popularity\\\": 30638\\n  },\\n  {\\n    \\\"tag\\\": \"nasturtium\",\\n    \\\"popularity\\\": 30571\\n  },\\n  {\\n    \\\"tag\\\": \"Acanthocereus\",\\n    \\\"popularity\\\": 30504\\n  },\\n  {\\n    \\\"tag\\\": \"uncollapsible\",\\n    \\\"popularity\\\": 30437\\n  },\\n  {\\n    \\\"tag\\\": \"excursionist\",\\n    \\\"popularity\\\": 30370\\n  },\\n  {\\n    \\\"tag\\\": \"fogbow\",\\n    \\\"popularity\\\": 30303\\n  },\\n  {\\n    \\\"tag\\\": \"overlie\",\\n    \\\"popularity\\\": 30237\\n  },\\n  {\\n    \\\"tag\\\": \"velours\",\\n    \\\"popularity\\\": 30171\\n  },\\n  {\\n    \\\"tag\\\": \"zoodendria madrigal stagbush\",\\n    \\\"popularity\\\": 30105\\n  },\\n  {\\n    \\\"tag\\\": \"imi\",\\n    \\\"popularity\\\": 30039\\n  },\\n  {\\n    \\\"tag\\\": \"cojudge\",\\n    \\\"popularity\\\": 29974\\n  },\\n  {\\n    \\\"tag\\\": \"depurate argal\",\\n    \\\"popularity\\\": 29909\\n  },\\n  {\\n    \\\"tag\\\": \"unrecognition\",\\n    \\\"popularity\\\": 29844\\n  },\\n  {\\n    \\\"tag\\\": \"paunchful\",\\n    \\\"popularity\\\": 29779\\n  },\\n  {\\n    \\\"tag\\\": \"invalued\",\\n    \\\"popularity\\\": 29714\\n  },\\n  {\\n    \\\"tag\\\": \"probang\",\\n    \\\"popularity\\\": 29650\\n  },\\n  {\\n    \\\"tag\\\": \"chetvert\",\\n    \\\"popularity\\\": 29586\\n  },\\n  {\\n    \\\"tag\\\": \"enactable\",\\n    \\\"popularity\\\": 29522\\n  },\\n  {\\n    \\\"tag\\\": \"detoxicate adhibit\",\\n    \\\"popularity\\\": 29458\\n  },\\n  {\\n    \\\"tag\\\": \"kullaite\",\\n    \\\"popularity\\\": 29395\\n  },\\n  {\\n    \\\"tag\\\": \"undazzling\",\\n    \\\"popularity\\\": 29332\\n  },\\n  {\\n    \\\"tag\\\": \"excalation\",\\n    \\\"popularity\\\": 29269\\n  },\\n  {\\n    \\\"tag\\\": \"sievings\",\\n    \\\"popularity\\\": 29206\\n  },\\n  {\\n    \\\"tag\\\": \"disenthral\",\\n    \\\"popularity\\\": 29143\\n  },\\n  {\\n    \\\"tag\\\": \"disinterestedly\",\\n    \\\"popularity\\\": 29081\\n  },\\n  {\\n    \\\"tag\\\": \"stanner\",\\n    \\\"popularity\\\": 29018\\n  },\\n  {\\n    \\\"tag\\\": \"recapitulative\",\\n    \\\"popularity\\\": 28956\\n  },\\n  {\\n    \\\"tag\\\": \"objectivist\",\\n    \\\"popularity\\\": 28895\\n  },\\n  {\\n    \\\"tag\\\": \"hypermetropia\",\\n    \\\"popularity\\\": 28833\\n  },\\n  {\\n    \\\"tag\\\": \"incumbency\",\\n    \\\"popularity\\\": 28772\\n  },\\n  {\\n    \\\"tag\\\": \"protegee\",\\n    \\\"popularity\\\": 28711\\n  },\\n  {\\n    \\\"tag\\\": \"zealotic\",\\n    \\\"popularity\\\": 28650\\n  },\\n  {\\n    \\\"tag\\\": \"predebit\",\\n    \\\"popularity\\\": 28589\\n  },\\n  {\\n    \\\"tag\\\": \"cupolar\",\\n    \\\"popularity\\\": 28528\\n  },\\n  {\\n    \\\"tag\\\": \"unattributed\",\\n    \\\"popularity\\\": 28468\\n  },\\n  {\\n    \\\"tag\\\": \"louisine\",\\n    \\\"popularity\\\": 28408\\n  },\\n  {\\n    \\\"tag\\\": \"illustrate\",\\n    \\\"popularity\\\": 28348\\n  },\\n  {\\n    \\\"tag\\\": \"inofficiousness\",\\n    \\\"popularity\\\": 28288\\n  },\\n  {\\n    \\\"tag\\\": \"Americawards\",\\n    \\\"popularity\\\": 28228\\n  },\\n  {\\n    \\\"tag\\\": \"foreflap\",\\n    \\\"popularity\\\": 28169\\n  },\\n  {\\n    \\\"tag\\\": \"eruditeness\",\\n    \\\"popularity\\\": 28110\\n  },\\n  {\\n    \\\"tag\\\": \"copiopsia\",\\n    \\\"popularity\\\": 28051\\n  },\\n  {\\n    \\\"tag\\\": \"sporuliferous\",\\n    \\\"popularity\\\": 27992\\n  },\\n  {\\n    \\\"tag\\\": \"muttering\",\\n    \\\"popularity\\\": 27934\\n  },\\n  {\\n    \\\"tag\\\": \"prepsychology adrip\",\\n    \\\"popularity\\\": 27875\\n  },\\n  {\\n    \\\"tag\\\": \"unfriendly\",\\n    \\\"popularity\\\": 27817\\n  },\\n  {\\n    \\\"tag\\\": \"sulphanilic\",\\n    \\\"popularity\\\": 27759\\n  },\\n  {\\n    \\\"tag\\\": \"Coelococcus\",\\n    \\\"popularity\\\": 27701\\n  },\\n  {\\n    \\\"tag\\\": \"undoubtfulness\",\\n    \\\"popularity\\\": 27643\\n  },\\n  {\\n    \\\"tag\\\": \"flaringly\",\\n    \\\"popularity\\\": 27586\\n  },\\n  {\\n    \\\"tag\\\": \"unordain\",\\n    \\\"popularity\\\": 27529\\n  },\\n  {\\n    \\\"tag\\\": \"fratchety\",\\n    \\\"popularity\\\": 27472\\n  },\\n  {\\n    \\\"tag\\\": \"decadentism dolefully\",\\n    \\\"popularity\\\": 27415\\n  },\\n  {\\n    \\\"tag\\\": \"synthronus\",\\n    \\\"popularity\\\": 27358\\n  },\\n  {\\n    \\\"tag\\\": \"maiid\",\\n    \\\"popularity\\\": 27301\\n  },\\n  {\\n    \\\"tag\\\": \"rhinobyon\",\\n    \\\"popularity\\\": 27245\\n  },\\n  {\\n    \\\"tag\\\": \"Didynamia\",\\n    \\\"popularity\\\": 27189\\n  },\\n  {\\n    \\\"tag\\\": \"millionairedom\",\\n    \\\"popularity\\\": 27133\\n  },\\n  {\\n    \\\"tag\\\": \"mulierine\",\\n    \\\"popularity\\\": 27077\\n  },\\n  {\\n    \\\"tag\\\": \"Mayo\",\\n    \\\"popularity\\\": 27021\\n  },\\n  {\\n    \\\"tag\\\": \"perceivedness\",\\n    \\\"popularity\\\": 26966\\n  },\\n  {\\n    \\\"tag\\\": \"unadoration\",\\n    \\\"popularity\\\": 26911\\n  },\\n  {\\n    \\\"tag\\\": \"regraft\",\\n    \\\"popularity\\\": 26856\\n  },\\n  {\\n    \\\"tag\\\": \"witch\",\\n    \\\"popularity\\\": 26801\\n  },\\n  {\\n    \\\"tag\\\": \"ungrow\",\\n    \\\"popularity\\\": 26746\\n  },\\n  {\\n    \\\"tag\\\": \"glossopharyngeus\",\\n    \\\"popularity\\\": 26691\\n  },\\n  {\\n    \\\"tag\\\": \"unstirrable\",\\n    \\\"popularity\\\": 26637\\n  },\\n  {\\n    \\\"tag\\\": \"synodsman\",\\n    \\\"popularity\\\": 26583\\n  },\\n  {\\n    \\\"tag\\\": \"placentalian\",\\n    \\\"popularity\\\": 26529\\n  },\\n  {\\n    \\\"tag\\\": \"corpulently\",\\n    \\\"popularity\\\": 26475\\n  },\\n  {\\n    \\\"tag\\\": \"photochromoscope\",\\n    \\\"popularity\\\": 26421\\n  },\\n  {\\n    \\\"tag\\\": \"indusiate retinasphaltum chokestrap\",\\n    \\\"popularity\\\": 26368\\n  },\\n  {\\n    \\\"tag\\\": \"murdrum\",\\n    \\\"popularity\\\": 26314\\n  },\\n  {\\n    \\\"tag\\\": \"belatedness\",\\n    \\\"popularity\\\": 26261\\n  },\\n  {\\n    \\\"tag\\\": \"Cochin\",\\n    \\\"popularity\\\": 26208\\n  },\\n  {\\n    \\\"tag\\\": \"Leonist\",\\n    \\\"popularity\\\": 26155\\n  },\\n  {\\n    \\\"tag\\\": \"keeker confined\",\\n    \\\"popularity\\\": 26102\\n  },\\n  {\\n    \\\"tag\\\": \"unintellectual\",\\n    \\\"popularity\\\": 26050\\n  },\\n  {\\n    \\\"tag\\\": \"nymphaline bait\",\\n    \\\"popularity\\\": 25997\\n  },\\n  {\\n    \\\"tag\\\": \"sarcosporidiosis\",\\n    \\\"popularity\\\": 25945\\n  },\\n  {\\n    \\\"tag\\\": \"catawamptiously\",\\n    \\\"popularity\\\": 25893\\n  },\\n  {\\n    \\\"tag\\\": \"outshame\",\\n    \\\"popularity\\\": 25841\\n  },\\n  {\\n    \\\"tag\\\": \"animalism\",\\n    \\\"popularity\\\": 25790\\n  },\\n  {\\n    \\\"tag\\\": \"epithalamial\",\\n    \\\"popularity\\\": 25738\\n  },\\n  {\\n    \\\"tag\\\": \"ganner\",\\n    \\\"popularity\\\": 25687\\n  },\\n  {\\n    \\\"tag\\\": \"desilicify\",\\n    \\\"popularity\\\": 25635\\n  },\\n  {\\n    \\\"tag\\\": \"dandyism\",\\n    \\\"popularity\\\": 25584\\n  },\\n  {\\n    \\\"tag\\\": \"hyleg\",\\n    \\\"popularity\\\": 25533\\n  },\\n  {\\n    \\\"tag\\\": \"photophysical\",\\n    \\\"popularity\\\": 25483\\n  },\\n  {\\n    \\\"tag\\\": \"underload\",\\n    \\\"popularity\\\": 25432\\n  },\\n  {\\n    \\\"tag\\\": \"unintrusive\",\\n    \\\"popularity\\\": 25382\\n  },\\n  {\\n    \\\"tag\\\": \"succinamic\",\\n    \\\"popularity\\\": 25331\\n  },\\n  {\\n    \\\"tag\\\": \"matchy\",\\n    \\\"popularity\\\": 25281\\n  },\\n  {\\n    \\\"tag\\\": \"concordal\",\\n    \\\"popularity\\\": 25231\\n  },\\n  {\\n    \\\"tag\\\": \"exteriority\",\\n    \\\"popularity\\\": 25181\\n  },\\n  {\\n    \\\"tag\\\": \"sterculiad\",\\n    \\\"popularity\\\": 25132\\n  },\\n  {\\n    \\\"tag\\\": \"sulfoxylic\",\\n    \\\"popularity\\\": 25082\\n  },\\n  {\\n    \\\"tag\\\": \"oversubscription\",\\n    \\\"popularity\\\": 25033\\n  },\\n  {\\n    \\\"tag\\\": \"chiasmic\",\\n    \\\"popularity\\\": 24984\\n  },\\n  {\\n    \\\"tag\\\": \"pseudoparthenogenesis\",\\n    \\\"popularity\\\": 24935\\n  },\\n  {\\n    \\\"tag\\\": \"indorse\",\\n    \\\"popularity\\\": 24886\\n  },\\n  {\\n    \\\"tag\\\": \"Krishnaite\",\\n    \\\"popularity\\\": 24837\\n  },\\n  {\\n    \\\"tag\\\": \"calcinize\",\\n    \\\"popularity\\\": 24788\\n  },\\n  {\\n    \\\"tag\\\": \"rhodium\",\\n    \\\"popularity\\\": 24740\\n  },\\n  {\\n    \\\"tag\\\": \"tragopan\",\\n    \\\"popularity\\\": 24692\\n  },\\n  {\\n    \\\"tag\\\": \"overwhelmingly\",\\n    \\\"popularity\\\": 24643\\n  },\\n  {\\n    \\\"tag\\\": \"procidence accorporate\",\\n    \\\"popularity\\\": 24595\\n  },\\n  {\\n    \\\"tag\\\": \"polemize speelless\",\\n    \\\"popularity\\\": 24548\\n  },\\n  {\\n    \\\"tag\\\": \"radiocarpal goran\",\\n    \\\"popularity\\\": 24500\\n  },\\n  {\\n    \\\"tag\\\": \"counteroffer Pelodytes\",\\n    \\\"popularity\\\": 24452\\n  },\\n  {\\n    \\\"tag\\\": \"lionhearted\",\\n    \\\"popularity\\\": 24405\\n  },\\n  {\\n    \\\"tag\\\": \"paramastoid\",\\n    \\\"popularity\\\": 24358\\n  },\\n  {\\n    \\\"tag\\\": \"murine\",\\n    \\\"popularity\\\": 24310\\n  },\\n  {\\n    \\\"tag\\\": \"woodbined\",\\n    \\\"popularity\\\": 24263\\n  },\\n  {\\n    \\\"tag\\\": \"packthread\",\\n    \\\"popularity\\\": 24217\\n  },\\n  {\\n    \\\"tag\\\": \"citreous\",\\n    \\\"popularity\\\": 24170\\n  },\\n  {\\n    \\\"tag\\\": \"unfallaciously\",\\n    \\\"popularity\\\": 24123\\n  },\\n  {\\n    \\\"tag\\\": \"tentwork reincarnadine\",\\n    \\\"popularity\\\": 24077\\n  },\\n  {\\n    \\\"tag\\\": \"verminousness\",\\n    \\\"popularity\\\": 24030\\n  },\\n  {\\n    \\\"tag\\\": \"sillometer\",\\n    \\\"popularity\\\": 23984\\n  },\\n  {\\n    \\\"tag\\\": \"jointy\",\\n    \\\"popularity\\\": 23938\\n  },\\n  {\\n    \\\"tag\\\": \"streptolysin\",\\n    \\\"popularity\\\": 23892\\n  },\\n  {\\n    \\\"tag\\\": \"Florentinism\",\\n    \\\"popularity\\\": 23847\\n  },\\n  {\\n    \\\"tag\\\": \"monosomatous\",\\n    \\\"popularity\\\": 23801\\n  },\\n  {\\n    \\\"tag\\\": \"capsulociliary\",\\n    \\\"popularity\\\": 23756\\n  },\\n  {\\n    \\\"tag\\\": \"organum\",\\n    \\\"popularity\\\": 23710\\n  },\\n  {\\n    \\\"tag\\\": \"overtly\",\\n    \\\"popularity\\\": 23665\\n  },\\n  {\\n    \\\"tag\\\": \"ophthalmoscopical\",\\n    \\\"popularity\\\": 23620\\n  },\\n  {\\n    \\\"tag\\\": \"supposititiously\",\\n    \\\"popularity\\\": 23575\\n  },\\n  {\\n    \\\"tag\\\": \"radiochemistry\",\\n    \\\"popularity\\\": 23530\\n  },\\n  {\\n    \\\"tag\\\": \"flaxtail\",\\n    \\\"popularity\\\": 23486\\n  },\\n  {\\n    \\\"tag\\\": \"pretympanic\",\\n    \\\"popularity\\\": 23441\\n  },\\n  {\\n    \\\"tag\\\": \"auscultation\",\\n    \\\"popularity\\\": 23397\\n  },\\n  {\\n    \\\"tag\\\": \"hairdresser\",\\n    \\\"popularity\\\": 23352\\n  },\\n  {\\n    \\\"tag\\\": \"chaffless\",\\n    \\\"popularity\\\": 23308\\n  },\\n  {\\n    \\\"tag\\\": \"polioencephalitis\",\\n    \\\"popularity\\\": 23264\\n  },\\n  {\\n    \\\"tag\\\": \"axolotl\",\\n    \\\"popularity\\\": 23220\\n  },\\n  {\\n    \\\"tag\\\": \"smous\",\\n    \\\"popularity\\\": 23177\\n  },\\n  {\\n    \\\"tag\\\": \"morgen disenamour toothed\",\\n    \\\"popularity\\\": 23133\\n  },\\n  {\\n    \\\"tag\\\": \"chaiseless\",\\n    \\\"popularity\\\": 23089\\n  },\\n  {\\n    \\\"tag\\\": \"frugally\",\\n    \\\"popularity\\\": 23046\\n  },\\n  {\\n    \\\"tag\\\": \"combustive antievolutionist cinenegative\",\\n    \\\"popularity\\\": 23003\\n  },\\n  {\\n    \\\"tag\\\": \"malacolite\",\\n    \\\"popularity\\\": 22960\\n  },\\n  {\\n    \\\"tag\\\": \"borne\",\\n    \\\"popularity\\\": 22917\\n  },\\n  {\\n    \\\"tag\\\": \"mercaptole\",\\n    \\\"popularity\\\": 22874\\n  },\\n  {\\n    \\\"tag\\\": \"judicatory\",\\n    \\\"popularity\\\": 22831\\n  },\\n  {\\n    \\\"tag\\\": \"noctivagation\",\\n    \\\"popularity\\\": 22789\\n  },\\n  {\\n    \\\"tag\\\": \"synthete\",\\n    \\\"popularity\\\": 22746\\n  },\\n  {\\n    \\\"tag\\\": \"tomboyism\",\\n    \\\"popularity\\\": 22704\\n  },\\n  {\\n    \\\"tag\\\": \"serranoid\",\\n    \\\"popularity\\\": 22661\\n  },\\n  {\\n    \\\"tag\\\": \"impostorism\",\\n    \\\"popularity\\\": 22619\\n  },\\n  {\\n    \\\"tag\\\": \"flagellosis Talitha\",\\n    \\\"popularity\\\": 22577\\n  },\\n  {\\n    \\\"tag\\\": \"pseudoviscous\",\\n    \\\"popularity\\\": 22535\\n  },\\n  {\\n    \\\"tag\\\": \"Galleriidae\",\\n    \\\"popularity\\\": 22494\\n  },\\n  {\\n    \\\"tag\\\": \"undulation didelph Comintern\",\\n    \\\"popularity\\\": 22452\\n  },\\n  {\\n    \\\"tag\\\": \"triangulopyramidal\",\\n    \\\"popularity\\\": 22411\\n  },\\n  {\\n    \\\"tag\\\": \"middlings\",\\n    \\\"popularity\\\": 22369\\n  },\\n  {\\n    \\\"tag\\\": \"piperazin\",\\n    \\\"popularity\\\": 22328\\n  },\\n  {\\n    \\\"tag\\\": \"endostitis\",\\n    \\\"popularity\\\": 22287\\n  },\\n  {\\n    \\\"tag\\\": \"swordlike\",\\n    \\\"popularity\\\": 22246\\n  },\\n  {\\n    \\\"tag\\\": \"forthwith\",\\n    \\\"popularity\\\": 22205\\n  },\\n  {\\n    \\\"tag\\\": \"menaceful\",\\n    \\\"popularity\\\": 22164\\n  },\\n  {\\n    \\\"tag\\\": \"explantation defective\",\\n    \\\"popularity\\\": 22123\\n  },\\n  {\\n    \\\"tag\\\": \"arrear\",\\n    \\\"popularity\\\": 22083\\n  },\\n  {\\n    \\\"tag\\\": \"engraft\",\\n    \\\"popularity\\\": 22042\\n  },\\n  {\\n    \\\"tag\\\": \"revolunteer\",\\n    \\\"popularity\\\": 22002\\n  },\\n  {\\n    \\\"tag\\\": \"foliaceous\",\\n    \\\"popularity\\\": 21962\\n  },\\n  {\\n    \\\"tag\\\": \"pseudograph\",\\n    \\\"popularity\\\": 21922\\n  },\\n  {\\n    \\\"tag\\\": \"maenaite\",\\n    \\\"popularity\\\": 21882\\n  },\\n  {\\n    \\\"tag\\\": \"interfinger\",\\n    \\\"popularity\\\": 21842\\n  },\\n  {\\n    \\\"tag\\\": \"macroscopically\",\\n    \\\"popularity\\\": 21802\\n  },\\n  {\\n    \\\"tag\\\": \"bluewood\",\\n    \\\"popularity\\\": 21762\\n  },\\n  {\\n    \\\"tag\\\": \"chikara\",\\n    \\\"popularity\\\": 21723\\n  },\\n  {\\n    \\\"tag\\\": \"reprehension diazeuxis nickelous\",\\n    \\\"popularity\\\": 21683\\n  },\\n  {\\n    \\\"tag\\\": \"vacuation\",\\n    \\\"popularity\\\": 21644\\n  },\\n  {\\n    \\\"tag\\\": \"Sartish\",\\n    \\\"popularity\\\": 21605\\n  },\\n  {\\n    \\\"tag\\\": \"pseudogyny\",\\n    \\\"popularity\\\": 21566\\n  },\\n  {\\n    \\\"tag\\\": \"friedcake\",\\n    \\\"popularity\\\": 21527\\n  },\\n  {\\n    \\\"tag\\\": \"thraw\",\\n    \\\"popularity\\\": 21488\\n  },\\n  {\\n    \\\"tag\\\": \"bifid\",\\n    \\\"popularity\\\": 21449\\n  },\\n  {\\n    \\\"tag\\\": \"truthlessly\",\\n    \\\"popularity\\\": 21411\\n  },\\n  {\\n    \\\"tag\\\": \"lungy\",\\n    \\\"popularity\\\": 21372\\n  },\\n  {\\n    \\\"tag\\\": \"fluoborite\",\\n    \\\"popularity\\\": 21334\\n  },\\n  {\\n    \\\"tag\\\": \"anthropolithic\",\\n    \\\"popularity\\\": 21295\\n  },\\n  {\\n    \\\"tag\\\": \"coachee straw\",\\n    \\\"popularity\\\": 21257\\n  },\\n  {\\n    \\\"tag\\\": \"dehorner Grecize\",\\n    \\\"popularity\\\": 21219\\n  },\\n  {\\n    \\\"tag\\\": \"spondylopyosis\",\\n    \\\"popularity\\\": 21181\\n  },\\n  {\\n    \\\"tag\\\": \"institutionary\",\\n    \\\"popularity\\\": 21143\\n  },\\n  {\\n    \\\"tag\\\": \"agentry\",\\n    \\\"popularity\\\": 21105\\n  },\\n  {\\n    \\\"tag\\\": \"musing bietle\",\\n    \\\"popularity\\\": 21068\\n  },\\n  {\\n    \\\"tag\\\": \"cormophyte\",\\n    \\\"popularity\\\": 21030\\n  },\\n  {\\n    \\\"tag\\\": \"semielliptic\",\\n    \\\"popularity\\\": 20993\\n  },\\n  {\\n    \\\"tag\\\": \"ependytes\",\\n    \\\"popularity\\\": 20955\\n  },\\n  {\\n    \\\"tag\\\": \"coachmaster\",\\n    \\\"popularity\\\": 20918\\n  },\\n  {\\n    \\\"tag\\\": \"overexuberant\",\\n    \\\"popularity\\\": 20881\\n  },\\n  {\\n    \\\"tag\\\": \"selectable\",\\n    \\\"popularity\\\": 20844\\n  },\\n  {\\n    \\\"tag\\\": \"saclike\",\\n    \\\"popularity\\\": 20807\\n  },\\n  {\\n    \\\"tag\\\": \"mullion\",\\n    \\\"popularity\\\": 20770\\n  },\\n  {\\n    \\\"tag\\\": \"pantheonize prevalency\",\\n    \\\"popularity\\\": 20733\\n  },\\n  {\\n    \\\"tag\\\": \"trophosperm\",\\n    \\\"popularity\\\": 20697\\n  },\\n  {\\n    \\\"tag\\\": \"paraphrasist\",\\n    \\\"popularity\\\": 20660\\n  },\\n  {\\n    \\\"tag\\\": \"undercarry\",\\n    \\\"popularity\\\": 20624\\n  },\\n  {\\n    \\\"tag\\\": \"thallogenic\",\\n    \\\"popularity\\\": 20587\\n  },\\n  {\\n    \\\"tag\\\": \"bulgy forbid\",\\n    \\\"popularity\\\": 20551\\n  },\\n  {\\n    \\\"tag\\\": \"proliquor gratulatory\",\\n    \\\"popularity\\\": 20515\\n  },\\n  {\\n    \\\"tag\\\": \"booker\",\\n    \\\"popularity\\\": 20479\\n  },\\n  {\\n    \\\"tag\\\": \"wizen\",\\n    \\\"popularity\\\": 20443\\n  },\\n  {\\n    \\\"tag\\\": \"synchondrosially\",\\n    \\\"popularity\\\": 20407\\n  },\\n  {\\n    \\\"tag\\\": \"herbless\",\\n    \\\"popularity\\\": 20371\\n  },\\n  {\\n    \\\"tag\\\": \"arfvedsonite\",\\n    \\\"popularity\\\": 20336\\n  },\\n  {\\n    \\\"tag\\\": \"Neuroptera\",\\n    \\\"popularity\\\": 20300\\n  },\\n  {\\n    \\\"tag\\\": \"fingerstone\",\\n    \\\"popularity\\\": 20265\\n  },\\n  {\\n    \\\"tag\\\": \"Odontoglossae\",\\n    \\\"popularity\\\": 20229\\n  },\\n  {\\n    \\\"tag\\\": \"transmigrator\",\\n    \\\"popularity\\\": 20194\\n  },\\n  {\\n    \\\"tag\\\": \"Dehaites\",\\n    \\\"popularity\\\": 20159\\n  },\\n  {\\n    \\\"tag\\\": \"Molinist\",\\n    \\\"popularity\\\": 20124\\n  },\\n  {\\n    \\\"tag\\\": \"novelistic\",\\n    \\\"popularity\\\": 20089\\n  },\\n  {\\n    \\\"tag\\\": \"astelic\",\\n    \\\"popularity\\\": 20054\\n  },\\n  {\\n    \\\"tag\\\": \"pyelometry\",\\n    \\\"popularity\\\": 20019\\n  },\\n  {\\n    \\\"tag\\\": \"pigmentation\",\\n    \\\"popularity\\\": 19984\\n  },\\n  {\\n    \\\"tag\\\": \"epinaos\",\\n    \\\"popularity\\\": 19950\\n  },\\n  {\\n    \\\"tag\\\": \"outdare\",\\n    \\\"popularity\\\": 19915\\n  },\\n  {\\n    \\\"tag\\\": \"Funje philaristocracy\",\\n    \\\"popularity\\\": 19881\\n  },\\n  {\\n    \\\"tag\\\": \"keddah\",\\n    \\\"popularity\\\": 19846\\n  },\\n  {\\n    \\\"tag\\\": \"axoidean\",\\n    \\\"popularity\\\": 19812\\n  },\\n  {\\n    \\\"tag\\\": \"ovule\",\\n    \\\"popularity\\\": 19778\\n  },\\n  {\\n    \\\"tag\\\": \"solidify\",\\n    \\\"popularity\\\": 19744\\n  },\\n  {\\n    \\\"tag\\\": \"noncelestial\",\\n    \\\"popularity\\\": 19710\\n  },\\n  {\\n    \\\"tag\\\": \"overmultiplication\",\\n    \\\"popularity\\\": 19676\\n  },\\n  {\\n    \\\"tag\\\": \"hexatetrahedron\",\\n    \\\"popularity\\\": 19642\\n  },\\n  {\\n    \\\"tag\\\": \"pliciform\",\\n    \\\"popularity\\\": 19609\\n  },\\n  {\\n    \\\"tag\\\": \"zimbalon\",\\n    \\\"popularity\\\": 19575\\n  },\\n  {\\n    \\\"tag\\\": \"annexational\",\\n    \\\"popularity\\\": 19542\\n  },\\n  {\\n    \\\"tag\\\": \"eurhodol\",\\n    \\\"popularity\\\": 19508\\n  },\\n  {\\n    \\\"tag\\\": \"yark\",\\n    \\\"popularity\\\": 19475\\n  },\\n  {\\n    \\\"tag\\\": \"illegality nitroalizarin\",\\n    \\\"popularity\\\": 19442\\n  },\\n  {\\n    \\\"tag\\\": \"quadratum\",\\n    \\\"popularity\\\": 19409\\n  },\\n  {\\n    \\\"tag\\\": \"saccharine\",\\n    \\\"popularity\\\": 19376\\n  },\\n  {\\n    \\\"tag\\\": \"unemploy\",\\n    \\\"popularity\\\": 19343\\n  },\\n  {\\n    \\\"tag\\\": \"uniclinal unipotent\",\\n    \\\"popularity\\\": 19310\\n  },\\n  {\\n    \\\"tag\\\": \"turbo\",\\n    \\\"popularity\\\": 19277\\n  },\\n  {\\n    \\\"tag\\\": \"sybarism\",\\n    \\\"popularity\\\": 19244\\n  },\\n  {\\n    \\\"tag\\\": \"motacilline\",\\n    \\\"popularity\\\": 19212\\n  },\\n  {\\n    \\\"tag\\\": \"weaselly\",\\n    \\\"popularity\\\": 19179\\n  },\\n  {\\n    \\\"tag\\\": \"plastid\",\\n    \\\"popularity\\\": 19147\\n  },\\n  {\\n    \\\"tag\\\": \"wasting\",\\n    \\\"popularity\\\": 19114\\n  },\\n  {\\n    \\\"tag\\\": \"begrime fluting\",\\n    \\\"popularity\\\": 19082\\n  },\\n  {\\n    \\\"tag\\\": \"Nephilinae\",\\n    \\\"popularity\\\": 19050\\n  },\\n  {\\n    \\\"tag\\\": \"disregardance\",\\n    \\\"popularity\\\": 19018\\n  },\\n  {\\n    \\\"tag\\\": \"Shakerlike\",\\n    \\\"popularity\\\": 18986\\n  },\\n  {\\n    \\\"tag\\\": \"uniped\",\\n    \\\"popularity\\\": 18954\\n  },\\n  {\\n    \\\"tag\\\": \"knap\",\\n    \\\"popularity\\\": 18922\\n  },\\n  {\\n    \\\"tag\\\": \"electivism undergardener\",\\n    \\\"popularity\\\": 18890\\n  },\\n  {\\n    \\\"tag\\\": \"hulverheaded\",\\n    \\\"popularity\\\": 18858\\n  },\\n  {\\n    \\\"tag\\\": \"unruptured\",\\n    \\\"popularity\\\": 18827\\n  },\\n  {\\n    \\\"tag\\\": \"solemnize credently\",\\n    \\\"popularity\\\": 18795\\n  },\\n  {\\n    \\\"tag\\\": \"pentastomoid possessingly\",\\n    \\\"popularity\\\": 18764\\n  },\\n  {\\n    \\\"tag\\\": \"octose\",\\n    \\\"popularity\\\": 18733\\n  },\\n  {\\n    \\\"tag\\\": \"psithurism indefensibility\",\\n    \\\"popularity\\\": 18701\\n  },\\n  {\\n    \\\"tag\\\": \"torrentuous cyanometer subcrenate\",\\n    \\\"popularity\\\": 18670\\n  },\\n  {\\n    \\\"tag\\\": \"photoplaywright tapaculo\",\\n    \\\"popularity\\\": 18639\\n  },\\n  {\\n    \\\"tag\\\": \"univalence\",\\n    \\\"popularity\\\": 18608\\n  },\\n  {\\n    \\\"tag\\\": \"Porthetria\",\\n    \\\"popularity\\\": 18577\\n  },\\n  {\\n    \\\"tag\\\": \"funambulo\",\\n    \\\"popularity\\\": 18546\\n  },\\n  {\\n    \\\"tag\\\": \"pedion\",\\n    \\\"popularity\\\": 18515\\n  },\\n  {\\n    \\\"tag\\\": \"horticulturally\",\\n    \\\"popularity\\\": 18485\\n  },\\n  {\\n    \\\"tag\\\": \"marennin\",\\n    \\\"popularity\\\": 18454\\n  },\\n  {\\n    \\\"tag\\\": \"horselaugh\",\\n    \\\"popularity\\\": 18423\\n  },\\n  {\\n    \\\"tag\\\": \"semiexecutive\",\\n    \\\"popularity\\\": 18393\\n  },\\n  {\\n    \\\"tag\\\": \"Monopteridae\",\\n    \\\"popularity\\\": 18363\\n  },\\n  {\\n    \\\"tag\\\": \"commonable\",\\n    \\\"popularity\\\": 18332\\n  },\\n  {\\n    \\\"tag\\\": \"dreariment\",\\n    \\\"popularity\\\": 18302\\n  },\\n  {\\n    \\\"tag\\\": \"disbud\",\\n    \\\"popularity\\\": 18272\\n  },\\n  {\\n    \\\"tag\\\": \"monocled\",\\n    \\\"popularity\\\": 18242\\n  },\\n  {\\n    \\\"tag\\\": \"hurlbarrow\",\\n    \\\"popularity\\\": 18212\\n  },\\n  {\\n    \\\"tag\\\": \"opiateproof\",\\n    \\\"popularity\\\": 18182\\n  },\\n  {\\n    \\\"tag\\\": \"Fahrenheit\",\\n    \\\"popularity\\\": 18152\\n  },\\n  {\\n    \\\"tag\\\": \"writhed\",\\n    \\\"popularity\\\": 18122\\n  },\\n  {\\n    \\\"tag\\\": \"Volstead\",\\n    \\\"popularity\\\": 18093\\n  },\\n  {\\n    \\\"tag\\\": \"yesternight\",\\n    \\\"popularity\\\": 18063\\n  },\\n  {\\n    \\\"tag\\\": \"readmittance\",\\n    \\\"popularity\\\": 18033\\n  },\\n  {\\n    \\\"tag\\\": \"reiterable\",\\n    \\\"popularity\\\": 18004\\n  },\\n  {\\n    \\\"tag\\\": \"triquetral\",\\n    \\\"popularity\\\": 17975\\n  },\\n  {\\n    \\\"tag\\\": \"guillotinement\",\\n    \\\"popularity\\\": 17945\\n  },\\n  {\\n    \\\"tag\\\": \"repermission\",\\n    \\\"popularity\\\": 17916\\n  },\\n  {\\n    \\\"tag\\\": \"assishly\",\\n    \\\"popularity\\\": 17887\\n  },\\n  {\\n    \\\"tag\\\": \"daidle\",\\n    \\\"popularity\\\": 17858\\n  },\\n  {\\n    \\\"tag\\\": \"prismatoid\",\\n    \\\"popularity\\\": 17829\\n  },\\n  {\\n    \\\"tag\\\": \"irreptitious\",\\n    \\\"popularity\\\": 17800\\n  },\\n  {\\n    \\\"tag\\\": \"sourdeline\",\\n    \\\"popularity\\\": 17771\\n  },\\n  {\\n    \\\"tag\\\": \"Austrian\",\\n    \\\"popularity\\\": 17742\\n  },\\n  {\\n    \\\"tag\\\": \"psychorrhagic\",\\n    \\\"popularity\\\": 17713\\n  },\\n  {\\n    \\\"tag\\\": \"Monumbo\",\\n    \\\"popularity\\\": 17685\\n  },\\n  {\\n    \\\"tag\\\": \"cloiochoanitic\",\\n    \\\"popularity\\\": 17656\\n  },\\n  {\\n    \\\"tag\\\": \"hant\",\\n    \\\"popularity\\\": 17628\\n  },\\n  {\\n    \\\"tag\\\": \"roily pulldown\",\\n    \\\"popularity\\\": 17599\\n  },\\n  {\\n    \\\"tag\\\": \"recongratulation\",\\n    \\\"popularity\\\": 17571\\n  },\\n  {\\n    \\\"tag\\\": \"Peking\",\\n    \\\"popularity\\\": 17543\\n  },\\n  {\\n    \\\"tag\\\": \"erdvark\",\\n    \\\"popularity\\\": 17514\\n  },\\n  {\\n    \\\"tag\\\": \"antimnemonic\",\\n    \\\"popularity\\\": 17486\\n  },\\n  {\\n    \\\"tag\\\": \"noncapillarity\",\\n    \\\"popularity\\\": 17458\\n  },\\n  {\\n    \\\"tag\\\": \"irrepressive\",\\n    \\\"popularity\\\": 17430\\n  },\\n  {\\n    \\\"tag\\\": \"Petromyzontes\",\\n    \\\"popularity\\\": 17402\\n  },\\n  {\\n    \\\"tag\\\": \"piscatorially\",\\n    \\\"popularity\\\": 17374\\n  },\\n  {\\n    \\\"tag\\\": \"cholesterosis\",\\n    \\\"popularity\\\": 17346\\n  },\\n  {\\n    \\\"tag\\\": \"denunciate\",\\n    \\\"popularity\\\": 17319\\n  },\\n  {\\n    \\\"tag\\\": \"unmetalled\",\\n    \\\"popularity\\\": 17291\\n  },\\n  {\\n    \\\"tag\\\": \"Tigris enruin\",\\n    \\\"popularity\\\": 17263\\n  },\\n  {\\n    \\\"tag\\\": \"anaspalin\",\\n    \\\"popularity\\\": 17236\\n  },\\n  {\\n    \\\"tag\\\": \"monodromy\",\\n    \\\"popularity\\\": 17208\\n  },\\n  {\\n    \\\"tag\\\": \"Canichanan\",\\n    \\\"popularity\\\": 17181\\n  },\\n  {\\n    \\\"tag\\\": \"mesolabe\",\\n    \\\"popularity\\\": 17154\\n  },\\n  {\\n    \\\"tag\\\": \"trichothallic overcunningness\",\\n    \\\"popularity\\\": 17127\\n  },\\n  {\\n    \\\"tag\\\": \"spinsterishly\",\\n    \\\"popularity\\\": 17099\\n  },\\n  {\\n    \\\"tag\\\": \"sensilla\",\\n    \\\"popularity\\\": 17072\\n  },\\n  {\\n    \\\"tag\\\": \"wifelkin\",\\n    \\\"popularity\\\": 17045\\n  },\\n  {\\n    \\\"tag\\\": \"suppositionless\",\\n    \\\"popularity\\\": 17018\\n  },\\n  {\\n    \\\"tag\\\": \"irksomeness\",\\n    \\\"popularity\\\": 16991\\n  },\\n  {\\n    \\\"tag\\\": \"sanbenito\",\\n    \\\"popularity\\\": 16964\\n  },\\n  {\\n    \\\"tag\\\": \"nonstatement\",\\n    \\\"popularity\\\": 16938\\n  },\\n  {\\n    \\\"tag\\\": \"phenoloid\",\\n    \\\"popularity\\\": 16911\\n  },\\n  {\\n    \\\"tag\\\": \"Steinberger\",\\n    \\\"popularity\\\": 16884\\n  },\\n  {\\n    \\\"tag\\\": \"replicated boom\",\\n    \\\"popularity\\\": 16858\\n  },\\n  {\\n    \\\"tag\\\": \"sciomachiology\",\\n    \\\"popularity\\\": 16831\\n  },\\n  {\\n    \\\"tag\\\": \"starwise\",\\n    \\\"popularity\\\": 16805\\n  },\\n  {\\n    \\\"tag\\\": \"prerich\",\\n    \\\"popularity\\\": 16778\\n  },\\n  {\\n    \\\"tag\\\": \"unspawned\",\\n    \\\"popularity\\\": 16752\\n  },\\n  {\\n    \\\"tag\\\": \"unindentable\",\\n    \\\"popularity\\\": 16726\\n  },\\n  {\\n    \\\"tag\\\": \"stromatic\",\\n    \\\"popularity\\\": 16700\\n  },\\n  {\\n    \\\"tag\\\": \"fetishize\",\\n    \\\"popularity\\\": 16673\\n  },\\n  {\\n    \\\"tag\\\": \"dihydroxy\",\\n    \\\"popularity\\\": 16647\\n  },\\n  {\\n    \\\"tag\\\": \"precaudal\",\\n    \\\"popularity\\\": 16621\\n  },\\n  {\\n    \\\"tag\\\": \"Madagascar\",\\n    \\\"popularity\\\": 16595\\n  },\\n  {\\n    \\\"tag\\\": \"repinement\",\\n    \\\"popularity\\\": 16570\\n  },\\n  {\\n    \\\"tag\\\": \"noncathedral wenzel\",\\n    \\\"popularity\\\": 16544\\n  },\\n  {\\n    \\\"tag\\\": \"corollike\",\\n    \\\"popularity\\\": 16518\\n  },\\n  {\\n    \\\"tag\\\": \"pubes unamortization\",\\n    \\\"popularity\\\": 16492\\n  },\\n  {\\n    \\\"tag\\\": \"brickcroft\",\\n    \\\"popularity\\\": 16467\\n  },\\n  {\\n    \\\"tag\\\": \"intertrabecular\",\\n    \\\"popularity\\\": 16441\\n  },\\n  {\\n    \\\"tag\\\": \"formulaic\",\\n    \\\"popularity\\\": 16416\\n  },\\n  {\\n    \\\"tag\\\": \"arienzo\",\\n    \\\"popularity\\\": 16390\\n  },\\n  {\\n    \\\"tag\\\": \"Mazzinian\",\\n    \\\"popularity\\\": 16365\\n  },\\n  {\\n    \\\"tag\\\": \"wallowishly\",\\n    \\\"popularity\\\": 16339\\n  },\\n  {\\n    \\\"tag\\\": \"sysselman\",\\n    \\\"popularity\\\": 16314\\n  },\\n  {\\n    \\\"tag\\\": \"seligmannite\",\\n    \\\"popularity\\\": 16289\\n  },\\n  {\\n    \\\"tag\\\": \"harlequinery\",\\n    \\\"popularity\\\": 16264\\n  },\\n  {\\n    \\\"tag\\\": \"zucchetto\",\\n    \\\"popularity\\\": 16239\\n  },\\n  {\\n    \\\"tag\\\": \"malonyl\",\\n    \\\"popularity\\\": 16214\\n  },\\n  {\\n    \\\"tag\\\": \"patwari\",\\n    \\\"popularity\\\": 16189\\n  },\\n  {\\n    \\\"tag\\\": \"neoholmia venturesomeness\",\\n    \\\"popularity\\\": 16164\\n  },\\n  {\\n    \\\"tag\\\": \"Dehwar\",\\n    \\\"popularity\\\": 16139\\n  },\\n  {\\n    \\\"tag\\\": \"fetiferous\",\\n    \\\"popularity\\\": 16114\\n  },\\n  {\\n    \\\"tag\\\": \"chromatophore\",\\n    \\\"popularity\\\": 16090\\n  },\\n  {\\n    \\\"tag\\\": \"reregistration\",\\n    \\\"popularity\\\": 16065\\n  },\\n  {\\n    \\\"tag\\\": \"alienor\",\\n    \\\"popularity\\\": 16040\\n  },\\n  {\\n    \\\"tag\\\": \"Hexagynia\",\\n    \\\"popularity\\\": 16016\\n  },\\n  {\\n    \\\"tag\\\": \"cerebrotonia\",\\n    \\\"popularity\\\": 15991\\n  },\\n  {\\n    \\\"tag\\\": \"deedbox\",\\n    \\\"popularity\\\": 15967\\n  },\\n  {\\n    \\\"tag\\\": \"staab\",\\n    \\\"popularity\\\": 15943\\n  },\\n  {\\n    \\\"tag\\\": \"uratemia\",\\n    \\\"popularity\\\": 15918\\n  },\\n  {\\n    \\\"tag\\\": \"flaunt\",\\n    \\\"popularity\\\": 15894\\n  },\\n  {\\n    \\\"tag\\\": \"bogy\",\\n    \\\"popularity\\\": 15870\\n  },\\n  {\\n    \\\"tag\\\": \"subcartilaginous\",\\n    \\\"popularity\\\": 15846\\n  },\\n  {\\n    \\\"tag\\\": \"protonephridial\",\\n    \\\"popularity\\\": 15822\\n  },\\n  {\\n    \\\"tag\\\": \"Boswellia\",\\n    \\\"popularity\\\": 15798\\n  },\\n  {\\n    \\\"tag\\\": \"relaxant untiaraed protoepiphyte\",\\n    \\\"popularity\\\": 15774\\n  },\\n  {\\n    \\\"tag\\\": \"nesslerization\",\\n    \\\"popularity\\\": 15750\\n  },\\n  {\\n    \\\"tag\\\": \"precession\",\\n    \\\"popularity\\\": 15726\\n  },\\n  {\\n    \\\"tag\\\": \"peat\",\\n    \\\"popularity\\\": 15702\\n  },\\n  {\\n    \\\"tag\\\": \"unbit\",\\n    \\\"popularity\\\": 15678\\n  },\\n  {\\n    \\\"tag\\\": \"snailish\",\\n    \\\"popularity\\\": 15655\\n  },\\n  {\\n    \\\"tag\\\": \"porismatical\",\\n    \\\"popularity\\\": 15631\\n  },\\n  {\\n    \\\"tag\\\": \"hooflike\",\\n    \\\"popularity\\\": 15608\\n  },\\n  {\\n    \\\"tag\\\": \"resuppose phene cranic\",\\n    \\\"popularity\\\": 15584\\n  },\\n  {\\n    \\\"tag\\\": \"peptonization kipskin\",\\n    \\\"popularity\\\": 15561\\n  },\\n  {\\n    \\\"tag\\\": \"birdstone\",\\n    \\\"popularity\\\": 15537\\n  },\\n  {\\n    \\\"tag\\\": \"empty inferoanterior\",\\n    \\\"popularity\\\": 15514\\n  },\\n  {\\n    \\\"tag\\\": \"androtauric\",\\n    \\\"popularity\\\": 15491\\n  },\\n  {\\n    \\\"tag\\\": \"triamide\",\\n    \\\"popularity\\\": 15467\\n  },\\n  {\\n    \\\"tag\\\": \"showmanry\",\\n    \\\"popularity\\\": 15444\\n  },\\n  {\\n    \\\"tag\\\": \"doing\",\\n    \\\"popularity\\\": 15421\\n  },\\n  {\\n    \\\"tag\\\": \"bouchaleen\",\\n    \\\"popularity\\\": 15398\\n  },\\n  {\\n    \\\"tag\\\": \"precollude\",\\n    \\\"popularity\\\": 15375\\n  },\\n  {\\n    \\\"tag\\\": \"finger\",\\n    \\\"popularity\\\": 15352\\n  },\\n  {\\n    \\\"tag\\\": \"limnetic intermessenger\",\\n    \\\"popularity\\\": 15329\\n  },\\n  {\\n    \\\"tag\\\": \"uncharitable picrotoxic\",\\n    \\\"popularity\\\": 15306\\n  },\\n  {\\n    \\\"tag\\\": \"nationalizer Phasmidae\",\\n    \\\"popularity\\\": 15283\\n  },\\n  {\\n    \\\"tag\\\": \"laughingstock\",\\n    \\\"popularity\\\": 15261\\n  },\\n  {\\n    \\\"tag\\\": \"nondeferential\",\\n    \\\"popularity\\\": 15238\\n  },\\n  {\\n    \\\"tag\\\": \"uproariously\",\\n    \\\"popularity\\\": 15215\\n  },\\n  {\\n    \\\"tag\\\": \"manzanilla\",\\n    \\\"popularity\\\": 15193\\n  },\\n  {\\n    \\\"tag\\\": \"khahoon\",\\n    \\\"popularity\\\": 15170\\n  },\\n  {\\n    \\\"tag\\\": \"olericulturally longshanks\",\\n    \\\"popularity\\\": 15148\\n  },\\n  {\\n    \\\"tag\\\": \"enthusiastically methionic\",\\n    \\\"popularity\\\": 15125\\n  },\\n  {\\n    \\\"tag\\\": \"pobs\",\\n    \\\"popularity\\\": 15103\\n  },\\n  {\\n    \\\"tag\\\": \"tricarpellate\",\\n    \\\"popularity\\\": 15081\\n  },\\n  {\\n    \\\"tag\\\": \"souterrain\",\\n    \\\"popularity\\\": 15058\\n  },\\n  {\\n    \\\"tag\\\": \"tethelin\",\\n    \\\"popularity\\\": 15036\\n  },\\n  {\\n    \\\"tag\\\": \"tartle\",\\n    \\\"popularity\\\": 15014\\n  },\\n  {\\n    \\\"tag\\\": \"tidelike\",\\n    \\\"popularity\\\": 14992\\n  },\\n  {\\n    \\\"tag\\\": \"cosmoramic\",\\n    \\\"popularity\\\": 14970\\n  },\\n  {\\n    \\\"tag\\\": \"pretardiness\",\\n    \\\"popularity\\\": 14948\\n  },\\n  {\\n    \\\"tag\\\": \"insoul\",\\n    \\\"popularity\\\": 14926\\n  },\\n  {\\n    \\\"tag\\\": \"anthroxan\",\\n    \\\"popularity\\\": 14904\\n  },\\n  {\\n    \\\"tag\\\": \"jilter\",\\n    \\\"popularity\\\": 14882\\n  },\\n  {\\n    \\\"tag\\\": \"pectinibranchian trematode\",\\n    \\\"popularity\\\": 14860\\n  },\\n  {\\n    \\\"tag\\\": \"Renaissancist\",\\n    \\\"popularity\\\": 14838\\n  },\\n  {\\n    \\\"tag\\\": \"imaginant\",\\n    \\\"popularity\\\": 14817\\n  },\\n  {\\n    \\\"tag\\\": \"supercensure\",\\n    \\\"popularity\\\": 14795\\n  },\\n  {\\n    \\\"tag\\\": \"festilogy\",\\n    \\\"popularity\\\": 14773\\n  },\\n  {\\n    \\\"tag\\\": \"regression\",\\n    \\\"popularity\\\": 14752\\n  },\\n  {\\n    \\\"tag\\\": \"mesobregmate languorously\",\\n    \\\"popularity\\\": 14730\\n  },\\n  {\\n    \\\"tag\\\": \"unsupernaturalized\",\\n    \\\"popularity\\\": 14709\\n  },\\n  {\\n    \\\"tag\\\": \"boobyish\",\\n    \\\"popularity\\\": 14687\\n  },\\n  {\\n    \\\"tag\\\": \"scopolamine\",\\n    \\\"popularity\\\": 14666\\n  },\\n  {\\n    \\\"tag\\\": \"reamputation unchristianly\",\\n    \\\"popularity\\\": 14645\\n  },\\n  {\\n    \\\"tag\\\": \"cuneatic\",\\n    \\\"popularity\\\": 14623\\n  },\\n  {\\n    \\\"tag\\\": \"heathberry\",\\n    \\\"popularity\\\": 14602\\n  },\\n  {\\n    \\\"tag\\\": \"hate\",\\n    \\\"popularity\\\": 14581\\n  },\\n  {\\n    \\\"tag\\\": \"redeemableness\",\\n    \\\"popularity\\\": 14560\\n  },\\n  {\\n    \\\"tag\\\": \"damasse\",\\n    \\\"popularity\\\": 14539\\n  },\\n  {\\n    \\\"tag\\\": \"thrillsome\",\\n    \\\"popularity\\\": 14518\\n  },\\n  {\\n    \\\"tag\\\": \"disseverment\",\\n    \\\"popularity\\\": 14497\\n  },\\n  {\\n    \\\"tag\\\": \"underbishopric Ostyak\",\\n    \\\"popularity\\\": 14476\\n  },\\n  {\\n    \\\"tag\\\": \"Exoascales\",\\n    \\\"popularity\\\": 14455\\n  },\\n  {\\n    \\\"tag\\\": \"soiled\",\\n    \\\"popularity\\\": 14434\\n  },\\n  {\\n    \\\"tag\\\": \"Cain\",\\n    \\\"popularity\\\": 14413\\n  },\\n  {\\n    \\\"tag\\\": \"mismanageable arenae\",\\n    \\\"popularity\\\": 14392\\n  },\\n  {\\n    \\\"tag\\\": \"manducate unhinderably\",\\n    \\\"popularity\\\": 14372\\n  },\\n  {\\n    \\\"tag\\\": \"peregrin\",\\n    \\\"popularity\\\": 14351\\n  },\\n  {\\n    \\\"tag\\\": \"musicianly\",\\n    \\\"popularity\\\": 14330\\n  },\\n  {\\n    \\\"tag\\\": \"aln\",\\n    \\\"popularity\\\": 14310\\n  },\\n  {\\n    \\\"tag\\\": \"intercentrum\",\\n    \\\"popularity\\\": 14289\\n  },\\n  {\\n    \\\"tag\\\": \"roothold\",\\n    \\\"popularity\\\": 14269\\n  },\\n  {\\n    \\\"tag\\\": \"jane aneurism\",\\n    \\\"popularity\\\": 14248\\n  },\\n  {\\n    \\\"tag\\\": \"insinuatively forefeel phytolatrous\",\\n    \\\"popularity\\\": 14228\\n  },\\n  {\\n    \\\"tag\\\": \"kanchil\",\\n    \\\"popularity\\\": 14208\\n  },\\n  {\\n    \\\"tag\\\": \"Austrophile\",\\n    \\\"popularity\\\": 14187\\n  },\\n  {\\n    \\\"tag\\\": \"unterrorized\",\\n    \\\"popularity\\\": 14167\\n  },\\n  {\\n    \\\"tag\\\": \"admeasure\",\\n    \\\"popularity\\\": 14147\\n  },\\n  {\\n    \\\"tag\\\": \"electrodissolution\",\\n    \\\"popularity\\\": 14127\\n  },\\n  {\\n    \\\"tag\\\": \"unweddedly\",\\n    \\\"popularity\\\": 14107\\n  },\\n  {\\n    \\\"tag\\\": \"unannoying\",\\n    \\\"popularity\\\": 14087\\n  },\\n  {\\n    \\\"tag\\\": \"uningenuous\",\\n    \\\"popularity\\\": 14067\\n  },\\n  {\\n    \\\"tag\\\": \"omnibenevolent\",\\n    \\\"popularity\\\": 14047\\n  },\\n  {\\n    \\\"tag\\\": \"commissure\",\\n    \\\"popularity\\\": 14027\\n  },\\n  {\\n    \\\"tag\\\": \"tellureted\",\\n    \\\"popularity\\\": 14007\\n  },\\n  {\\n    \\\"tag\\\": \"suffragan\",\\n    \\\"popularity\\\": 13987\\n  },\\n  {\\n    \\\"tag\\\": \"sphaeriaceous\",\\n    \\\"popularity\\\": 13967\\n  },\\n  {\\n    \\\"tag\\\": \"unfearing\",\\n    \\\"popularity\\\": 13947\\n  },\\n  {\\n    \\\"tag\\\": \"stentoriousness precounsellor\",\\n    \\\"popularity\\\": 13928\\n  },\\n  {\\n    \\\"tag\\\": \"haemaspectroscope\",\\n    \\\"popularity\\\": 13908\\n  },\\n  {\\n    \\\"tag\\\": \"teras\",\\n    \\\"popularity\\\": 13888\\n  },\\n  {\\n    \\\"tag\\\": \"pulicine\",\\n    \\\"popularity\\\": 13869\\n  },\\n  {\\n    \\\"tag\\\": \"colicystopyelitis\",\\n    \\\"popularity\\\": 13849\\n  },\\n  {\\n    \\\"tag\\\": \"Physalia\",\\n    \\\"popularity\\\": 13830\\n  },\\n  {\\n    \\\"tag\\\": \"Saxicolidae\",\\n    \\\"popularity\\\": 13810\\n  },\\n  {\\n    \\\"tag\\\": \"peritonital\",\\n    \\\"popularity\\\": 13791\\n  },\\n  {\\n    \\\"tag\\\": \"dysphotic\",\\n    \\\"popularity\\\": 13771\\n  },\\n  {\\n    \\\"tag\\\": \"unabandoned\",\\n    \\\"popularity\\\": 13752\\n  },\\n  {\\n    \\\"tag\\\": \"rashful\",\\n    \\\"popularity\\\": 13733\\n  },\\n  {\\n    \\\"tag\\\": \"goodyness Manobo\",\\n    \\\"popularity\\\": 13714\\n  },\\n  {\\n    \\\"tag\\\": \"glaring\",\\n    \\\"popularity\\\": 13694\\n  },\\n  {\\n    \\\"tag\\\": \"horrorful\",\\n    \\\"popularity\\\": 13675\\n  },\\n  {\\n    \\\"tag\\\": \"intercepting\",\\n    \\\"popularity\\\": 13656\\n  },\\n  {\\n    \\\"tag\\\": \"semifine\",\\n    \\\"popularity\\\": 13637\\n  },\\n  {\\n    \\\"tag\\\": \"Gaypoo\",\\n    \\\"popularity\\\": 13618\\n  },\\n  {\\n    \\\"tag\\\": \"Metrosideros\",\\n    \\\"popularity\\\": 13599\\n  },\\n  {\\n    \\\"tag\\\": \"thoracicolumbar\",\\n    \\\"popularity\\\": 13580\\n  },\\n  {\\n    \\\"tag\\\": \"unserried\",\\n    \\\"popularity\\\": 13561\\n  },\\n  {\\n    \\\"tag\\\": \"keeperess cauterization\",\\n    \\\"popularity\\\": 13542\\n  },\\n  {\\n    \\\"tag\\\": \"administrant\",\\n    \\\"popularity\\\": 13523\\n  },\\n  {\\n    \\\"tag\\\": \"unpropitiatedness\",\\n    \\\"popularity\\\": 13505\\n  },\\n  {\\n    \\\"tag\\\": \"pensileness\",\\n    \\\"popularity\\\": 13486\\n  },\\n  {\\n    \\\"tag\\\": \"quinaldic unreceivable\",\\n    \\\"popularity\\\": 13467\\n  },\\n  {\\n    \\\"tag\\\": \"Carnaria\",\\n    \\\"popularity\\\": 13448\\n  },\\n  {\\n    \\\"tag\\\": \"azothionium wurrus\",\\n    \\\"popularity\\\": 13430\\n  },\\n  {\\n    \\\"tag\\\": \"mistresshood\",\\n    \\\"popularity\\\": 13411\\n  },\\n  {\\n    \\\"tag\\\": \"Savara\",\\n    \\\"popularity\\\": 13393\\n  },\\n  {\\n    \\\"tag\\\": \"dasyurine\",\\n    \\\"popularity\\\": 13374\\n  },\\n  {\\n    \\\"tag\\\": \"superideal\",\\n    \\\"popularity\\\": 13356\\n  },\\n  {\\n    \\\"tag\\\": \"Parisianize\",\\n    \\\"popularity\\\": 13337\\n  },\\n  {\\n    \\\"tag\\\": \"underearth\",\\n    \\\"popularity\\\": 13319\\n  },\\n  {\\n    \\\"tag\\\": \"athrogenic\",\\n    \\\"popularity\\\": 13301\\n  },\\n  {\\n    \\\"tag\\\": \"communicate\",\\n    \\\"popularity\\\": 13282\\n  },\\n  {\\n    \\\"tag\\\": \"denervation enworthed\",\\n    \\\"popularity\\\": 13264\\n  },\\n  {\\n    \\\"tag\\\": \"subbromide\",\\n    \\\"popularity\\\": 13246\\n  },\\n  {\\n    \\\"tag\\\": \"stenocoriasis\",\\n    \\\"popularity\\\": 13228\\n  },\\n  {\\n    \\\"tag\\\": \"facetiousness\",\\n    \\\"popularity\\\": 13209\\n  },\\n  {\\n    \\\"tag\\\": \"twaddling\",\\n    \\\"popularity\\\": 13191\\n  },\\n  {\\n    \\\"tag\\\": \"tetartoconid\",\\n    \\\"popularity\\\": 13173\\n  },\\n  {\\n    \\\"tag\\\": \"audiophile\",\\n    \\\"popularity\\\": 13155\\n  },\\n  {\\n    \\\"tag\\\": \"fustigate\",\\n    \\\"popularity\\\": 13137\\n  },\\n  {\\n    \\\"tag\\\": \"Sorbian cacophonia\",\\n    \\\"popularity\\\": 13119\\n  },\\n  {\\n    \\\"tag\\\": \"fondish\",\\n    \\\"popularity\\\": 13101\\n  },\\n  {\\n    \\\"tag\\\": \"endomastoiditis\",\\n    \\\"popularity\\\": 13084\\n  },\\n  {\\n    \\\"tag\\\": \"sniptious\",\\n    \\\"popularity\\\": 13066\\n  },\\n  {\\n    \\\"tag\\\": \"glochidiate\",\\n    \\\"popularity\\\": 13048\\n  },\\n  {\\n    \\\"tag\\\": \"polycarboxylic\",\\n    \\\"popularity\\\": 13030\\n  },\\n  {\\n    \\\"tag\\\": \"stamp\",\\n    \\\"popularity\\\": 13012\\n  },\\n  {\\n    \\\"tag\\\": \"tritonymph endotoxoid\",\\n    \\\"popularity\\\": 12995\\n  },\\n  {\\n    \\\"tag\\\": \"wolfskin\",\\n    \\\"popularity\\\": 12977\\n  },\\n  {\\n    \\\"tag\\\": \"oncosimeter\",\\n    \\\"popularity\\\": 12959\\n  },\\n  {\\n    \\\"tag\\\": \"outward\",\\n    \\\"popularity\\\": 12942\\n  },\\n  {\\n    \\\"tag\\\": \"circumscribed\",\\n    \\\"popularity\\\": 12924\\n  },\\n  {\\n    \\\"tag\\\": \"autohemolytic\",\\n    \\\"popularity\\\": 12907\\n  },\\n  {\\n    \\\"tag\\\": \"isorhamnose\",\\n    \\\"popularity\\\": 12889\\n  },\\n  {\\n    \\\"tag\\\": \"monarchomachic\",\\n    \\\"popularity\\\": 12872\\n  },\\n  {\\n    \\\"tag\\\": \"phaenomenon\",\\n    \\\"popularity\\\": 12855\\n  },\\n  {\\n    \\\"tag\\\": \"angiopressure\",\\n    \\\"popularity\\\": 12837\\n  },\\n  {\\n    \\\"tag\\\": \"similarize\",\\n    \\\"popularity\\\": 12820\\n  },\\n  {\\n    \\\"tag\\\": \"unseeable\",\\n    \\\"popularity\\\": 12803\\n  },\\n  {\\n    \\\"tag\\\": \"Toryize\",\\n    \\\"popularity\\\": 12785\\n  },\\n  {\\n    \\\"tag\\\": \"fruitling\",\\n    \\\"popularity\\\": 12768\\n  },\\n  {\\n    \\\"tag\\\": \"axle\",\\n    \\\"popularity\\\": 12751\\n  },\\n  {\\n    \\\"tag\\\": \"priestal cocked\",\\n    \\\"popularity\\\": 12734\\n  },\\n  {\\n    \\\"tag\\\": \"serotoxin\",\\n    \\\"popularity\\\": 12717\\n  },\\n  {\\n    \\\"tag\\\": \"unmovably\",\\n    \\\"popularity\\\": 12700\\n  },\\n  {\\n    \\\"tag\\\": \"darbha\",\\n    \\\"popularity\\\": 12683\\n  },\\n  {\\n    \\\"tag\\\": \"Mongolize\",\\n    \\\"popularity\\\": 12666\\n  },\\n  {\\n    \\\"tag\\\": \"clusteringly\",\\n    \\\"popularity\\\": 12649\\n  },\\n  {\\n    \\\"tag\\\": \"tendence\",\\n    \\\"popularity\\\": 12632\\n  },\\n  {\\n    \\\"tag\\\": \"foziness\",\\n    \\\"popularity\\\": 12615\\n  },\\n  {\\n    \\\"tag\\\": \"brickkiln lithify\",\\n    \\\"popularity\\\": 12598\\n  },\\n  {\\n    \\\"tag\\\": \"unpriest\",\\n    \\\"popularity\\\": 12581\\n  },\\n  {\\n    \\\"tag\\\": \"convincer\",\\n    \\\"popularity\\\": 12564\\n  },\\n  {\\n    \\\"tag\\\": \"mornlike\",\\n    \\\"popularity\\\": 12548\\n  },\\n  {\\n    \\\"tag\\\": \"overaddiction ostentatiousness\",\\n    \\\"popularity\\\": 12531\\n  },\\n  {\\n    \\\"tag\\\": \"diffusively moccasin pendom\",\\n    \\\"popularity\\\": 12514\\n  },\\n  {\\n    \\\"tag\\\": \"boose\",\\n    \\\"popularity\\\": 12498\\n  },\\n  {\\n    \\\"tag\\\": \"myonosus\",\\n    \\\"popularity\\\": 12481\\n  },\\n  {\\n    \\\"tag\\\": \"handsome\",\\n    \\\"popularity\\\": 12464\\n  },\\n  {\\n    \\\"tag\\\": \"paroxysmic\",\\n    \\\"popularity\\\": 12448\\n  },\\n  {\\n    \\\"tag\\\": \"Ulidian\",\\n    \\\"popularity\\\": 12431\\n  },\\n  {\\n    \\\"tag\\\": \"heartache\",\\n    \\\"popularity\\\": 12415\\n  },\\n  {\\n    \\\"tag\\\": \"torporize\",\\n    \\\"popularity\\\": 12398\\n  },\\n  {\\n    \\\"tag\\\": \"hippish\",\\n    \\\"popularity\\\": 12382\\n  },\\n  {\\n    \\\"tag\\\": \"stigmal militation\",\\n    \\\"popularity\\\": 12366\\n  },\\n  {\\n    \\\"tag\\\": \"matmaker\",\\n    \\\"popularity\\\": 12349\\n  },\\n  {\\n    \\\"tag\\\": \"marantaceous bivoluminous\",\\n    \\\"popularity\\\": 12333\\n  },\\n  {\\n    \\\"tag\\\": \"Uraniidae\",\\n    \\\"popularity\\\": 12317\\n  },\\n  {\\n    \\\"tag\\\": \"risper\",\\n    \\\"popularity\\\": 12301\\n  },\\n  {\\n    \\\"tag\\\": \"tintinnabulation\",\\n    \\\"popularity\\\": 12284\\n  },\\n  {\\n    \\\"tag\\\": \"tributorian\",\\n    \\\"popularity\\\": 12268\\n  },\\n  {\\n    \\\"tag\\\": \"ashamedly\",\\n    \\\"popularity\\\": 12252\\n  },\\n  {\\n    \\\"tag\\\": \"Macrourus\",\\n    \\\"popularity\\\": 12236\\n  },\\n  {\\n    \\\"tag\\\": \"Chora\",\\n    \\\"popularity\\\": 12220\\n  },\\n  {\\n    \\\"tag\\\": \"caul\",\\n    \\\"popularity\\\": 12204\\n  },\\n  {\\n    \\\"tag\\\": \"exsector\",\\n    \\\"popularity\\\": 12188\\n  },\\n  {\\n    \\\"tag\\\": \"acutish\",\\n    \\\"popularity\\\": 12172\\n  },\\n  {\\n    \\\"tag\\\": \"amphichrome\",\\n    \\\"popularity\\\": 12156\\n  },\\n  {\\n    \\\"tag\\\": \"guarder\",\\n    \\\"popularity\\\": 12140\\n  },\\n  {\\n    \\\"tag\\\": \"sculpturally\",\\n    \\\"popularity\\\": 12124\\n  },\\n  {\\n    \\\"tag\\\": \"benightmare\",\\n    \\\"popularity\\\": 12108\\n  },\\n  {\\n    \\\"tag\\\": \"chucky\",\\n    \\\"popularity\\\": 12093\\n  },\\n  {\\n    \\\"tag\\\": \"Venetian\",\\n    \\\"popularity\\\": 12077\\n  },\\n  {\\n    \\\"tag\\\": \"autotheater\",\\n    \\\"popularity\\\": 12061\\n  },\\n  {\\n    \\\"tag\\\": \"planarioid\",\\n    \\\"popularity\\\": 12045\\n  },\\n  {\\n    \\\"tag\\\": \"handkerchiefful\",\\n    \\\"popularity\\\": 12030\\n  },\\n  {\\n    \\\"tag\\\": \"fuliginousness potentize\",\\n    \\\"popularity\\\": 12014\\n  },\\n  {\\n    \\\"tag\\\": \"pantheum\",\\n    \\\"popularity\\\": 11998\\n  },\\n  {\\n    \\\"tag\\\": \"heavyweight\",\\n    \\\"popularity\\\": 11983\\n  },\\n  {\\n    \\\"tag\\\": \"unbrick\",\\n    \\\"popularity\\\": 11967\\n  },\\n  {\\n    \\\"tag\\\": \"duomachy\",\\n    \\\"popularity\\\": 11952\\n  },\\n  {\\n    \\\"tag\\\": \"polyphyodont\",\\n    \\\"popularity\\\": 11936\\n  },\\n  {\\n    \\\"tag\\\": \"hibernacle\",\\n    \\\"popularity\\\": 11921\\n  },\\n  {\\n    \\\"tag\\\": \"undistend\",\\n    \\\"popularity\\\": 11905\\n  },\\n  {\\n    \\\"tag\\\": \"hystericky\",\\n    \\\"popularity\\\": 11890\\n  },\\n  {\\n    \\\"tag\\\": \"paleolimnology\",\\n    \\\"popularity\\\": 11875\\n  },\\n  {\\n    \\\"tag\\\": \"cedarware\",\\n    \\\"popularity\\\": 11859\\n  },\\n  {\\n    \\\"tag\\\": \"overwrested\",\\n    \\\"popularity\\\": 11844\\n  },\\n  {\\n    \\\"tag\\\": \"Syriacism\",\\n    \\\"popularity\\\": 11829\\n  },\\n  {\\n    \\\"tag\\\": \"pretan\",\\n    \\\"popularity\\\": 11813\\n  },\\n  {\\n    \\\"tag\\\": \"formant\",\\n    \\\"popularity\\\": 11798\\n  },\\n  {\\n    \\\"tag\\\": \"pharmacopoeist Fedia\",\\n    \\\"popularity\\\": 11783\\n  },\\n  {\\n    \\\"tag\\\": \"exorcist eerisome\",\\n    \\\"popularity\\\": 11768\\n  },\\n  {\\n    \\\"tag\\\": \"separation\",\\n    \\\"popularity\\\": 11753\\n  },\\n  {\\n    \\\"tag\\\": \"infancy\",\\n    \\\"popularity\\\": 11738\\n  },\\n  {\\n    \\\"tag\\\": \"ecrasite\",\\n    \\\"popularity\\\": 11723\\n  },\\n  {\\n    \\\"tag\\\": \"propolize\",\\n    \\\"popularity\\\": 11708\\n  },\\n  {\\n    \\\"tag\\\": \"uncram phyllin\",\\n    \\\"popularity\\\": 11693\\n  },\\n  {\\n    \\\"tag\\\": \"thymopathy\",\\n    \\\"popularity\\\": 11678\\n  },\\n  {\\n    \\\"tag\\\": \"omniscient\",\\n    \\\"popularity\\\": 11663\\n  },\\n  {\\n    \\\"tag\\\": \"coussinet hazer\",\\n    \\\"popularity\\\": 11648\\n  },\\n  {\\n    \\\"tag\\\": \"contributiveness\",\\n    \\\"popularity\\\": 11633\\n  },\\n  {\\n    \\\"tag\\\": \"septifluous\",\\n    \\\"popularity\\\": 11618\\n  },\\n  {\\n    \\\"tag\\\": \"halfness\",\\n    \\\"popularity\\\": 11603\\n  },\\n  {\\n    \\\"tag\\\": \"tocher\",\\n    \\\"popularity\\\": 11589\\n  },\\n  {\\n    \\\"tag\\\": \"monotonist\",\\n    \\\"popularity\\\": 11574\\n  },\\n  {\\n    \\\"tag\\\": \"headchair\",\\n    \\\"popularity\\\": 11559\\n  },\\n  {\\n    \\\"tag\\\": \"everywhence\",\\n    \\\"popularity\\\": 11544\\n  },\\n  {\\n    \\\"tag\\\": \"gerate\",\\n    \\\"popularity\\\": 11530\\n  },\\n  {\\n    \\\"tag\\\": \"unrepellent\",\\n    \\\"popularity\\\": 11515\\n  },\\n  {\\n    \\\"tag\\\": \"inidoneous\",\\n    \\\"popularity\\\": 11500\\n  },\\n  {\\n    \\\"tag\\\": \"Rifi\",\\n    \\\"popularity\\\": 11486\\n  },\\n  {\\n    \\\"tag\\\": \"unstop\",\\n    \\\"popularity\\\": 11471\\n  },\\n  {\\n    \\\"tag\\\": \"conformer\",\\n    \\\"popularity\\\": 11457\\n  },\\n  {\\n    \\\"tag\\\": \"vivisectionally\",\\n    \\\"popularity\\\": 11442\\n  },\\n  {\\n    \\\"tag\\\": \"nonfinishing\",\\n    \\\"popularity\\\": 11428\\n  },\\n  {\\n    \\\"tag\\\": \"tyranness\",\\n    \\\"popularity\\\": 11413\\n  },\\n  {\\n    \\\"tag\\\": \"shepherdage havoc\",\\n    \\\"popularity\\\": 11399\\n  },\\n  {\\n    \\\"tag\\\": \"coronale\",\\n    \\\"popularity\\\": 11385\\n  },\\n  {\\n    \\\"tag\\\": \"airmarker\",\\n    \\\"popularity\\\": 11370\\n  },\\n  {\\n    \\\"tag\\\": \"subpanel\",\\n    \\\"popularity\\\": 11356\\n  },\\n  {\\n    \\\"tag\\\": \"conciliation\",\\n    \\\"popularity\\\": 11342\\n  },\\n  {\\n    \\\"tag\\\": \"supergun\",\\n    \\\"popularity\\\": 11327\\n  },\\n  {\\n    \\\"tag\\\": \"photoheliography\",\\n    \\\"popularity\\\": 11313\\n  },\\n  {\\n    \\\"tag\\\": \"cacosmia\",\\n    \\\"popularity\\\": 11299\\n  },\\n  {\\n    \\\"tag\\\": \"caressant\",\\n    \\\"popularity\\\": 11285\\n  },\\n  {\\n    \\\"tag\\\": \"swivet\",\\n    \\\"popularity\\\": 11270\\n  },\\n  {\\n    \\\"tag\\\": \"coddler\",\\n    \\\"popularity\\\": 11256\\n  },\\n  {\\n    \\\"tag\\\": \"rakehellish\",\\n    \\\"popularity\\\": 11242\\n  },\\n  {\\n    \\\"tag\\\": \"recohabitation\",\\n    \\\"popularity\\\": 11228\\n  },\\n  {\\n    \\\"tag\\\": \"postillator\",\\n    \\\"popularity\\\": 11214\\n  },\\n  {\\n    \\\"tag\\\": \"receipt\",\\n    \\\"popularity\\\": 11200\\n  },\\n  {\\n    \\\"tag\\\": \"nonconformistical\",\\n    \\\"popularity\\\": 11186\\n  },\\n  {\\n    \\\"tag\\\": \"unglorified\",\\n    \\\"popularity\\\": 11172\\n  },\\n  {\\n    \\\"tag\\\": \"unordinariness\",\\n    \\\"popularity\\\": 11158\\n  },\\n  {\\n    \\\"tag\\\": \"tetrahydroxy\",\\n    \\\"popularity\\\": 11144\\n  },\\n  {\\n    \\\"tag\\\": \"haploperistomic corporeity\",\\n    \\\"popularity\\\": 11130\\n  },\\n  {\\n    \\\"tag\\\": \"varical\",\\n    \\\"popularity\\\": 11117\\n  },\\n  {\\n    \\\"tag\\\": \"pilferment\",\\n    \\\"popularity\\\": 11103\\n  },\\n  {\\n    \\\"tag\\\": \"reverentially playcraft\",\\n    \\\"popularity\\\": 11089\\n  },\\n  {\\n    \\\"tag\\\": \"unretentive\",\\n    \\\"popularity\\\": 11075\\n  },\\n  {\\n    \\\"tag\\\": \"readiness\",\\n    \\\"popularity\\\": 11061\\n  },\\n  {\\n    \\\"tag\\\": \"thermomagnetism\",\\n    \\\"popularity\\\": 11048\\n  },\\n  {\\n    \\\"tag\\\": \"spotless\",\\n    \\\"popularity\\\": 11034\\n  },\\n  {\\n    \\\"tag\\\": \"semishrubby\",\\n    \\\"popularity\\\": 11020\\n  },\\n  {\\n    \\\"tag\\\": \"metrotomy\",\\n    \\\"popularity\\\": 11007\\n  },\\n  {\\n    \\\"tag\\\": \"hocker\",\\n    \\\"popularity\\\": 10993\\n  },\\n  {\\n    \\\"tag\\\": \"anecdotal\",\\n    \\\"popularity\\\": 10979\\n  },\\n  {\\n    \\\"tag\\\": \"tetrabelodont\",\\n    \\\"popularity\\\": 10966\\n  },\\n  {\\n    \\\"tag\\\": \"Ramillied\",\\n    \\\"popularity\\\": 10952\\n  },\\n  {\\n    \\\"tag\\\": \"sympatheticism\",\\n    \\\"popularity\\\": 10939\\n  },\\n  {\\n    \\\"tag\\\": \"kiskatom\",\\n    \\\"popularity\\\": 10925\\n  },\\n  {\\n    \\\"tag\\\": \"concyclically\",\\n    \\\"popularity\\\": 10912\\n  },\\n  {\\n    \\\"tag\\\": \"tunicless\",\\n    \\\"popularity\\\": 10899\\n  },\\n  {\\n    \\\"tag\\\": \"formalistic\",\\n    \\\"popularity\\\": 10885\\n  },\\n  {\\n    \\\"tag\\\": \"thermacogenesis\",\\n    \\\"popularity\\\": 10872\\n  },\\n  {\\n    \\\"tag\\\": \"multimotored\",\\n    \\\"popularity\\\": 10858\\n  },\\n  {\\n    \\\"tag\\\": \"inversive\",\\n    \\\"popularity\\\": 10845\\n  },\\n  {\\n    \\\"tag\\\": \"Jatki\",\\n    \\\"popularity\\\": 10832\\n  },\\n  {\\n    \\\"tag\\\": \"highest\",\\n    \\\"popularity\\\": 10818\\n  },\\n  {\\n    \\\"tag\\\": \"rubidic\",\\n    \\\"popularity\\\": 10805\\n  },\\n  {\\n    \\\"tag\\\": \"acranial\",\\n    \\\"popularity\\\": 10792\\n  },\\n  {\\n    \\\"tag\\\": \"pulvinulus\",\\n    \\\"popularity\\\": 10779\\n  },\\n  {\\n    \\\"tag\\\": \"nattiness\",\\n    \\\"popularity\\\": 10766\\n  },\\n  {\\n    \\\"tag\\\": \"antisimoniacal\",\\n    \\\"popularity\\\": 10752\\n  },\\n  {\\n    \\\"tag\\\": \"tetanize\",\\n    \\\"popularity\\\": 10739\\n  },\\n  {\\n    \\\"tag\\\": \"spectrophobia\",\\n    \\\"popularity\\\": 10726\\n  },\\n  {\\n    \\\"tag\\\": \"monopolitical\",\\n    \\\"popularity\\\": 10713\\n  },\\n  {\\n    \\\"tag\\\": \"teallite\",\\n    \\\"popularity\\\": 10700\\n  },\\n  {\\n    \\\"tag\\\": \"alicyclic interpellator\",\\n    \\\"popularity\\\": 10687\\n  },\\n  {\\n    \\\"tag\\\": \"nonsynthesized\",\\n    \\\"popularity\\\": 10674\\n  },\\n  {\\n    \\\"tag\\\": \"wheelwrighting\",\\n    \\\"popularity\\\": 10661\\n  },\\n  {\\n    \\\"tag\\\": \"pelliculate\",\\n    \\\"popularity\\\": 10648\\n  },\\n  {\\n    \\\"tag\\\": \"Euphyllopoda\",\\n    \\\"popularity\\\": 10635\\n  },\\n  {\\n    \\\"tag\\\": \"graver\",\\n    \\\"popularity\\\": 10622\\n  },\\n  {\\n    \\\"tag\\\": \"automorph\",\\n    \\\"popularity\\\": 10609\\n  },\\n  {\\n    \\\"tag\\\": \"underhanded\",\\n    \\\"popularity\\\": 10597\\n  },\\n  {\\n    \\\"tag\\\": \"causal\",\\n    \\\"popularity\\\": 10584\\n  },\\n  {\\n    \\\"tag\\\": \"odoom\",\\n    \\\"popularity\\\": 10571\\n  },\\n  {\\n    \\\"tag\\\": \"apodictical\",\\n    \\\"popularity\\\": 10558\\n  },\\n  {\\n    \\\"tag\\\": \"foundery\",\\n    \\\"popularity\\\": 10545\\n  },\\n  {\\n    \\\"tag\\\": \"unneighbored\",\\n    \\\"popularity\\\": 10533\\n  },\\n  {\\n    \\\"tag\\\": \"woolshearing\",\\n    \\\"popularity\\\": 10520\\n  },\\n  {\\n    \\\"tag\\\": \"boschveld\",\\n    \\\"popularity\\\": 10507\\n  },\\n  {\\n    \\\"tag\\\": \"unhardened lipopod\",\\n    \\\"popularity\\\": 10495\\n  },\\n  {\\n    \\\"tag\\\": \"unenriching\",\\n    \\\"popularity\\\": 10482\\n  },\\n  {\\n    \\\"tag\\\": \"spak\",\\n    \\\"popularity\\\": 10469\\n  },\\n  {\\n    \\\"tag\\\": \"yogasana\",\\n    \\\"popularity\\\": 10457\\n  },\\n  {\\n    \\\"tag\\\": \"depoetize\",\\n    \\\"popularity\\\": 10444\\n  },\\n  {\\n    \\\"tag\\\": \"parousiamania\",\\n    \\\"popularity\\\": 10432\\n  },\\n  {\\n    \\\"tag\\\": \"longlegs\",\\n    \\\"popularity\\\": 10419\\n  },\\n  {\\n    \\\"tag\\\": \"gelatinizability\",\\n    \\\"popularity\\\": 10407\\n  },\\n  {\\n    \\\"tag\\\": \"edeology\",\\n    \\\"popularity\\\": 10394\\n  },\\n  {\\n    \\\"tag\\\": \"sodwork\",\\n    \\\"popularity\\\": 10382\\n  },\\n  {\\n    \\\"tag\\\": \"somnambule\",\\n    \\\"popularity\\\": 10369\\n  },\\n  {\\n    \\\"tag\\\": \"antiquing\",\\n    \\\"popularity\\\": 10357\\n  },\\n  {\\n    \\\"tag\\\": \"intaker\",\\n    \\\"popularity\\\": 10344\\n  },\\n  {\\n    \\\"tag\\\": \"Gerberia\",\\n    \\\"popularity\\\": 10332\\n  },\\n  {\\n    \\\"tag\\\": \"preadmit\",\\n    \\\"popularity\\\": 10320\\n  },\\n  {\\n    \\\"tag\\\": \"bullhorn\",\\n    \\\"popularity\\\": 10307\\n  },\\n  {\\n    \\\"tag\\\": \"sororal\",\\n    \\\"popularity\\\": 10295\\n  },\\n  {\\n    \\\"tag\\\": \"phaeophyceous\",\\n    \\\"popularity\\\": 10283\\n  },\\n  {\\n    \\\"tag\\\": \"omphalopsychite\",\\n    \\\"popularity\\\": 10271\\n  },\\n  {\\n    \\\"tag\\\": \"substantious\",\\n    \\\"popularity\\\": 10258\\n  },\\n  {\\n    \\\"tag\\\": \"undemonstratively\",\\n    \\\"popularity\\\": 10246\\n  },\\n  {\\n    \\\"tag\\\": \"corallike blackit\",\\n    \\\"popularity\\\": 10234\\n  },\\n  {\\n    \\\"tag\\\": \"amoebous\",\\n    \\\"popularity\\\": 10222\\n  },\\n  {\\n    \\\"tag\\\": \"Polypodium\",\\n    \\\"popularity\\\": 10210\\n  },\\n  {\\n    \\\"tag\\\": \"blodite\",\\n    \\\"popularity\\\": 10198\\n  },\\n  {\\n    \\\"tag\\\": \"hordarian\",\\n    \\\"popularity\\\": 10186\\n  },\\n  {\\n    \\\"tag\\\": \"nonmoral\",\\n    \\\"popularity\\\": 10174\\n  },\\n  {\\n    \\\"tag\\\": \"dredgeful\",\\n    \\\"popularity\\\": 10162\\n  },\\n  {\\n    \\\"tag\\\": \"nourishingly\",\\n    \\\"popularity\\\": 10150\\n  },\\n  {\\n    \\\"tag\\\": \"seamy\",\\n    \\\"popularity\\\": 10138\\n  },\\n  {\\n    \\\"tag\\\": \"vara\",\\n    \\\"popularity\\\": 10126\\n  },\\n  {\\n    \\\"tag\\\": \"incorruptibleness\",\\n    \\\"popularity\\\": 10114\\n  },\\n  {\\n    \\\"tag\\\": \"manipulator\",\\n    \\\"popularity\\\": 10102\\n  },\\n  {\\n    \\\"tag\\\": \"chromodiascope uncountably\",\\n    \\\"popularity\\\": 10090\\n  },\\n  {\\n    \\\"tag\\\": \"typhemia\",\\n    \\\"popularity\\\": 10078\\n  },\\n  {\\n    \\\"tag\\\": \"Smalcaldic\",\\n    \\\"popularity\\\": 10066\\n  },\\n  {\\n    \\\"tag\\\": \"precontrive\",\\n    \\\"popularity\\\": 10054\\n  },\\n  {\\n    \\\"tag\\\": \"sowarry\",\\n    \\\"popularity\\\": 10042\\n  },\\n  {\\n    \\\"tag\\\": \"monopodic\",\\n    \\\"popularity\\\": 10031\\n  },\\n  {\\n    \\\"tag\\\": \"recodify\",\\n    \\\"popularity\\\": 10019\\n  },\\n  {\\n    \\\"tag\\\": \"phosphowolframic rimple\",\\n    \\\"popularity\\\": 10007\\n  },\\n  {\\n    \\\"tag\\\": \"triconch\",\\n    \\\"popularity\\\": 9995\\n  },\\n  {\\n    \\\"tag\\\": \"pycnodontoid\",\\n    \\\"popularity\\\": 9984\\n  },\\n  {\\n    \\\"tag\\\": \"bradyspermatism\",\\n    \\\"popularity\\\": 9972\\n  },\\n  {\\n    \\\"tag\\\": \"extensionist\",\\n    \\\"popularity\\\": 9960\\n  },\\n  {\\n    \\\"tag\\\": \"characterize\",\\n    \\\"popularity\\\": 9949\\n  },\\n  {\\n    \\\"tag\\\": \"anatreptic proteolytic\",\\n    \\\"popularity\\\": 9937\\n  },\\n  {\\n    \\\"tag\\\": \"waterboard\",\\n    \\\"popularity\\\": 9925\\n  },\\n  {\\n    \\\"tag\\\": \"allopathically\",\\n    \\\"popularity\\\": 9914\\n  },\\n  {\\n    \\\"tag\\\": \"arithmetician\",\\n    \\\"popularity\\\": 9902\\n  },\\n  {\\n    \\\"tag\\\": \"subsist\",\\n    \\\"popularity\\\": 9891\\n  },\\n  {\\n    \\\"tag\\\": \"Islamitish\",\\n    \\\"popularity\\\": 9879\\n  },\\n  {\\n    \\\"tag\\\": \"biddy\",\\n    \\\"popularity\\\": 9868\\n  },\\n  {\\n    \\\"tag\\\": \"reverberation\",\\n    \\\"popularity\\\": 9856\\n  },\\n  {\\n    \\\"tag\\\": \"Zaporogue\",\\n    \\\"popularity\\\": 9845\\n  },\\n  {\\n    \\\"tag\\\": \"soapberry\",\\n    \\\"popularity\\\": 9833\\n  },\\n  {\\n    \\\"tag\\\": \"physiognomics\",\\n    \\\"popularity\\\": 9822\\n  },\\n  {\\n    \\\"tag\\\": \"hospitalization\",\\n    \\\"popularity\\\": 9810\\n  },\\n  {\\n    \\\"tag\\\": \"dissembler\",\\n    \\\"popularity\\\": 9799\\n  },\\n  {\\n    \\\"tag\\\": \"festinate\",\\n    \\\"popularity\\\": 9788\\n  },\\n  {\\n    \\\"tag\\\": \"angiectopia\",\\n    \\\"popularity\\\": 9776\\n  },\\n  {\\n    \\\"tag\\\": \"Pulicidae\",\\n    \\\"popularity\\\": 9765\\n  },\\n  {\\n    \\\"tag\\\": \"beslimer\",\\n    \\\"popularity\\\": 9754\\n  },\\n  {\\n    \\\"tag\\\": \"nontreaty\",\\n    \\\"popularity\\\": 9743\\n  },\\n  {\\n    \\\"tag\\\": \"unhaggled\",\\n    \\\"popularity\\\": 9731\\n  },\\n  {\\n    \\\"tag\\\": \"catfall\",\\n    \\\"popularity\\\": 9720\\n  },\\n  {\\n    \\\"tag\\\": \"stola\",\\n    \\\"popularity\\\": 9709\\n  },\\n  {\\n    \\\"tag\\\": \"pataco\",\\n    \\\"popularity\\\": 9698\\n  },\\n  {\\n    \\\"tag\\\": \"ontologistic\",\\n    \\\"popularity\\\": 9686\\n  },\\n  {\\n    \\\"tag\\\": \"aerosphere\",\\n    \\\"popularity\\\": 9675\\n  },\\n  {\\n    \\\"tag\\\": \"deobstruent\",\\n    \\\"popularity\\\": 9664\\n  },\\n  {\\n    \\\"tag\\\": \"threepence\",\\n    \\\"popularity\\\": 9653\\n  },\\n  {\\n    \\\"tag\\\": \"cyprinoid\",\\n    \\\"popularity\\\": 9642\\n  },\\n  {\\n    \\\"tag\\\": \"overbank\",\\n    \\\"popularity\\\": 9631\\n  },\\n  {\\n    \\\"tag\\\": \"prostyle\",\\n    \\\"popularity\\\": 9620\\n  },\\n  {\\n    \\\"tag\\\": \"photoactivation\",\\n    \\\"popularity\\\": 9609\\n  },\\n  {\\n    \\\"tag\\\": \"homothetic\",\\n    \\\"popularity\\\": 9598\\n  },\\n  {\\n    \\\"tag\\\": \"roguedom\",\\n    \\\"popularity\\\": 9587\\n  },\\n  {\\n    \\\"tag\\\": \"underschool\",\\n    \\\"popularity\\\": 9576\\n  },\\n  {\\n    \\\"tag\\\": \"tractility\",\\n    \\\"popularity\\\": 9565\\n  },\\n  {\\n    \\\"tag\\\": \"gardenin\",\\n    \\\"popularity\\\": 9554\\n  },\\n  {\\n    \\\"tag\\\": \"Micromastictora\",\\n    \\\"popularity\\\": 9543\\n  },\\n  {\\n    \\\"tag\\\": \"gossypine\",\\n    \\\"popularity\\\": 9532\\n  },\\n  {\\n    \\\"tag\\\": \"amylodyspepsia\",\\n    \\\"popularity\\\": 9521\\n  },\\n  {\\n    \\\"tag\\\": \"Luciana\",\\n    \\\"popularity\\\": 9510\\n  },\\n  {\\n    \\\"tag\\\": \"meetly nonfisherman\",\\n    \\\"popularity\\\": 9500\\n  },\\n  {\\n    \\\"tag\\\": \"backhanded\",\\n    \\\"popularity\\\": 9489\\n  },\\n  {\\n    \\\"tag\\\": \"decrustation\",\\n    \\\"popularity\\\": 9478\\n  },\\n  {\\n    \\\"tag\\\": \"pinrail\",\\n    \\\"popularity\\\": 9467\\n  },\\n  {\\n    \\\"tag\\\": \"Mahori\",\\n    \\\"popularity\\\": 9456\\n  },\\n  {\\n    \\\"tag\\\": \"unsizable\",\\n    \\\"popularity\\\": 9446\\n  },\\n  {\\n    \\\"tag\\\": \"disawa\",\\n    \\\"popularity\\\": 9435\\n  },\\n  {\\n    \\\"tag\\\": \"launderability inconsidered\",\\n    \\\"popularity\\\": 9424\\n  },\\n  {\\n    \\\"tag\\\": \"unclassical\",\\n    \\\"popularity\\\": 9414\\n  },\\n  {\\n    \\\"tag\\\": \"inobtrusiveness\",\\n    \\\"popularity\\\": 9403\\n  },\\n  {\\n    \\\"tag\\\": \"sialogenous\",\\n    \\\"popularity\\\": 9392\\n  },\\n  {\\n    \\\"tag\\\": \"sulphonamide\",\\n    \\\"popularity\\\": 9382\\n  },\\n  {\\n    \\\"tag\\\": \"diluvion\",\\n    \\\"popularity\\\": 9371\\n  },\\n  {\\n    \\\"tag\\\": \"deuteranope\",\\n    \\\"popularity\\\": 9361\\n  },\\n  {\\n    \\\"tag\\\": \"addition\",\\n    \\\"popularity\\\": 9350\\n  },\\n  {\\n    \\\"tag\\\": \"bockeret\",\\n    \\\"popularity\\\": 9339\\n  },\\n  {\\n    \\\"tag\\\": \"unidentified\",\\n    \\\"popularity\\\": 9329\\n  },\\n  {\\n    \\\"tag\\\": \"caryatic\",\\n    \\\"popularity\\\": 9318\\n  },\\n  {\\n    \\\"tag\\\": \"misattribution\",\\n    \\\"popularity\\\": 9308\\n  },\\n  {\\n    \\\"tag\\\": \"outray\",\\n    \\\"popularity\\\": 9297\\n  },\\n  {\\n    \\\"tag\\\": \"areometrical\",\\n    \\\"popularity\\\": 9287\\n  },\\n  {\\n    \\\"tag\\\": \"antilogism\",\\n    \\\"popularity\\\": 9277\\n  },\\n  {\\n    \\\"tag\\\": \"inadjustable\",\\n    \\\"popularity\\\": 9266\\n  },\\n  {\\n    \\\"tag\\\": \"byssus\",\\n    \\\"popularity\\\": 9256\\n  },\\n  {\\n    \\\"tag\\\": \"trun\",\\n    \\\"popularity\\\": 9245\\n  },\\n  {\\n    \\\"tag\\\": \"thereology\",\\n    \\\"popularity\\\": 9235\\n  },\\n  {\\n    \\\"tag\\\": \"extort\",\\n    \\\"popularity\\\": 9225\\n  },\\n  {\\n    \\\"tag\\\": \"bumpkin\",\\n    \\\"popularity\\\": 9214\\n  },\\n  {\\n    \\\"tag\\\": \"sulphobenzide\",\\n    \\\"popularity\\\": 9204\\n  },\\n  {\\n    \\\"tag\\\": \"hydrogeology\",\\n    \\\"popularity\\\": 9194\\n  },\\n  {\\n    \\\"tag\\\": \"nidulariaceous\",\\n    \\\"popularity\\\": 9183\\n  },\\n  {\\n    \\\"tag\\\": \"propodiale\",\\n    \\\"popularity\\\": 9173\\n  },\\n  {\\n    \\\"tag\\\": \"fierily\",\\n    \\\"popularity\\\": 9163\\n  },\\n  {\\n    \\\"tag\\\": \"aerotonometry\",\\n    \\\"popularity\\\": 9153\\n  },\\n  {\\n    \\\"tag\\\": \"pelobatid oversuperstitious\",\\n    \\\"popularity\\\": 9142\\n  },\\n  {\\n    \\\"tag\\\": \"restringent\",\\n    \\\"popularity\\\": 9132\\n  },\\n  {\\n    \\\"tag\\\": \"tetrapodic\",\\n    \\\"popularity\\\": 9122\\n  },\\n  {\\n    \\\"tag\\\": \"heroicness Vendidad\",\\n    \\\"popularity\\\": 9112\\n  },\\n  {\\n    \\\"tag\\\": \"Sphingurus\",\\n    \\\"popularity\\\": 9102\\n  },\\n  {\\n    \\\"tag\\\": \"sclerote\",\\n    \\\"popularity\\\": 9092\\n  },\\n  {\\n    \\\"tag\\\": \"unkeyed\",\\n    \\\"popularity\\\": 9082\\n  },\\n  {\\n    \\\"tag\\\": \"superparliamentary\",\\n    \\\"popularity\\\": 9072\\n  },\\n  {\\n    \\\"tag\\\": \"hetericism\",\\n    \\\"popularity\\\": 9061\\n  },\\n  {\\n    \\\"tag\\\": \"hucklebone\",\\n    \\\"popularity\\\": 9051\\n  },\\n  {\\n    \\\"tag\\\": \"yojan\",\\n    \\\"popularity\\\": 9041\\n  },\\n  {\\n    \\\"tag\\\": \"bossed\",\\n    \\\"popularity\\\": 9031\\n  },\\n  {\\n    \\\"tag\\\": \"spiderwork\",\\n    \\\"popularity\\\": 9021\\n  },\\n  {\\n    \\\"tag\\\": \"millfeed dullery\",\\n    \\\"popularity\\\": 9011\\n  },\\n  {\\n    \\\"tag\\\": \"adnoun\",\\n    \\\"popularity\\\": 9001\\n  },\\n  {\\n    \\\"tag\\\": \"mesometric\",\\n    \\\"popularity\\\": 8992\\n  },\\n  {\\n    \\\"tag\\\": \"doublehandedness\",\\n    \\\"popularity\\\": 8982\\n  },\\n  {\\n    \\\"tag\\\": \"suppurant\",\\n    \\\"popularity\\\": 8972\\n  },\\n  {\\n    \\\"tag\\\": \"Berlinize\",\\n    \\\"popularity\\\": 8962\\n  },\\n  {\\n    \\\"tag\\\": \"sontag\",\\n    \\\"popularity\\\": 8952\\n  },\\n  {\\n    \\\"tag\\\": \"biplane\",\\n    \\\"popularity\\\": 8942\\n  },\\n  {\\n    \\\"tag\\\": \"insula\",\\n    \\\"popularity\\\": 8932\\n  },\\n  {\\n    \\\"tag\\\": \"unbrand\",\\n    \\\"popularity\\\": 8922\\n  },\\n  {\\n    \\\"tag\\\": \"Basilosaurus\",\\n    \\\"popularity\\\": 8913\\n  },\\n  {\\n    \\\"tag\\\": \"prenomination\",\\n    \\\"popularity\\\": 8903\\n  },\\n  {\\n    \\\"tag\\\": \"untextual\",\\n    \\\"popularity\\\": 8893\\n  },\\n  {\\n    \\\"tag\\\": \"coleslaw\",\\n    \\\"popularity\\\": 8883\\n  },\\n  {\\n    \\\"tag\\\": \"langsyne\",\\n    \\\"popularity\\\": 8874\\n  },\\n  {\\n    \\\"tag\\\": \"impede\",\\n    \\\"popularity\\\": 8864\\n  },\\n  {\\n    \\\"tag\\\": \"irrigator\",\\n    \\\"popularity\\\": 8854\\n  },\\n  {\\n    \\\"tag\\\": \"deflocculation\",\\n    \\\"popularity\\\": 8844\\n  },\\n  {\\n    \\\"tag\\\": \"narghile\",\\n    \\\"popularity\\\": 8835\\n  },\\n  {\\n    \\\"tag\\\": \"unguardedly ebenaceous\",\\n    \\\"popularity\\\": 8825\\n  },\\n  {\\n    \\\"tag\\\": \"conversantly subocular\",\\n    \\\"popularity\\\": 8815\\n  },\\n  {\\n    \\\"tag\\\": \"hydroponic\",\\n    \\\"popularity\\\": 8806\\n  },\\n  {\\n    \\\"tag\\\": \"anthropopsychism\",\\n    \\\"popularity\\\": 8796\\n  },\\n  {\\n    \\\"tag\\\": \"panoptic\",\\n    \\\"popularity\\\": 8787\\n  },\\n  {\\n    \\\"tag\\\": \"insufferable\",\\n    \\\"popularity\\\": 8777\\n  },\\n  {\\n    \\\"tag\\\": \"salema\",\\n    \\\"popularity\\\": 8768\\n  },\\n  {\\n    \\\"tag\\\": \"Myriapoda\",\\n    \\\"popularity\\\": 8758\\n  },\\n  {\\n    \\\"tag\\\": \"regarrison\",\\n    \\\"popularity\\\": 8748\\n  },\\n  {\\n    \\\"tag\\\": \"overlearned\",\\n    \\\"popularity\\\": 8739\\n  },\\n  {\\n    \\\"tag\\\": \"ultraroyalist conventical bureaucratical\",\\n    \\\"popularity\\\": 8729\\n  },\\n  {\\n    \\\"tag\\\": \"epicaridan\",\\n    \\\"popularity\\\": 8720\\n  },\\n  {\\n    \\\"tag\\\": \"poetastress\",\\n    \\\"popularity\\\": 8711\\n  },\\n  {\\n    \\\"tag\\\": \"monophthalmus\",\\n    \\\"popularity\\\": 8701\\n  },\\n  {\\n    \\\"tag\\\": \"simnel\",\\n    \\\"popularity\\\": 8692\\n  },\\n  {\\n    \\\"tag\\\": \"compotor\",\\n    \\\"popularity\\\": 8682\\n  },\\n  {\\n    \\\"tag\\\": \"hydrolase\",\\n    \\\"popularity\\\": 8673\\n  },\\n  {\\n    \\\"tag\\\": \"attemptless\",\\n    \\\"popularity\\\": 8663\\n  },\\n  {\\n    \\\"tag\\\": \"visceroptosis\",\\n    \\\"popularity\\\": 8654\\n  },\\n  {\\n    \\\"tag\\\": \"unpreparedly\",\\n    \\\"popularity\\\": 8645\\n  },\\n  {\\n    \\\"tag\\\": \"mastage\",\\n    \\\"popularity\\\": 8635\\n  },\\n  {\\n    \\\"tag\\\": \"preinfluence\",\\n    \\\"popularity\\\": 8626\\n  },\\n  {\\n    \\\"tag\\\": \"Siwan\",\\n    \\\"popularity\\\": 8617\\n  },\\n  {\\n    \\\"tag\\\": \"ceratotheca belvedere\",\\n    \\\"popularity\\\": 8607\\n  },\\n  {\\n    \\\"tag\\\": \"disenablement\",\\n    \\\"popularity\\\": 8598\\n  },\\n  {\\n    \\\"tag\\\": \"nine\",\\n    \\\"popularity\\\": 8589\\n  },\\n  {\\n    \\\"tag\\\": \"spellingdown abridgment\",\\n    \\\"popularity\\\": 8580\\n  },\\n  {\\n    \\\"tag\\\": \"twilightless\",\\n    \\\"popularity\\\": 8571\\n  },\\n  {\\n    \\\"tag\\\": \"overflow\",\\n    \\\"popularity\\\": 8561\\n  },\\n  {\\n    \\\"tag\\\": \"mismeasurement\",\\n    \\\"popularity\\\": 8552\\n  },\\n  {\\n    \\\"tag\\\": \"nawabship\",\\n    \\\"popularity\\\": 8543\\n  },\\n  {\\n    \\\"tag\\\": \"Phrynosoma\",\\n    \\\"popularity\\\": 8534\\n  },\\n  {\\n    \\\"tag\\\": \"unanticipatingly\",\\n    \\\"popularity\\\": 8525\\n  },\\n  {\\n    \\\"tag\\\": \"blankite\",\\n    \\\"popularity\\\": 8516\\n  },\\n  {\\n    \\\"tag\\\": \"role\",\\n    \\\"popularity\\\": 8506\\n  },\\n  {\\n    \\\"tag\\\": \"peperine edelweiss\",\\n    \\\"popularity\\\": 8497\\n  },\\n  {\\n    \\\"tag\\\": \"unhysterical\",\\n    \\\"popularity\\\": 8488\\n  },\\n  {\\n    \\\"tag\\\": \"attentiveness\",\\n    \\\"popularity\\\": 8479\\n  },\\n  {\\n    \\\"tag\\\": \"scintillant\",\\n    \\\"popularity\\\": 8470\\n  },\\n  {\\n    \\\"tag\\\": \"stenostomatous\",\\n    \\\"popularity\\\": 8461\\n  },\\n  {\\n    \\\"tag\\\": \"pectinite\",\\n    \\\"popularity\\\": 8452\\n  },\\n  {\\n    \\\"tag\\\": \"herring\",\\n    \\\"popularity\\\": 8443\\n  },\\n  {\\n    \\\"tag\\\": \"interroom\",\\n    \\\"popularity\\\": 8434\\n  },\\n  {\\n    \\\"tag\\\": \"laccol\",\\n    \\\"popularity\\\": 8425\\n  },\\n  {\\n    \\\"tag\\\": \"unpartably kylite\",\\n    \\\"popularity\\\": 8416\\n  },\\n  {\\n    \\\"tag\\\": \"spirivalve\",\\n    \\\"popularity\\\": 8407\\n  },\\n  {\\n    \\\"tag\\\": \"hoosegow\",\\n    \\\"popularity\\\": 8398\\n  },\\n  {\\n    \\\"tag\\\": \"doat\",\\n    \\\"popularity\\\": 8389\\n  },\\n  {\\n    \\\"tag\\\": \"amphibian\",\\n    \\\"popularity\\\": 8380\\n  },\\n  {\\n    \\\"tag\\\": \"exposit\",\\n    \\\"popularity\\\": 8371\\n  },\\n  {\\n    \\\"tag\\\": \"canopy\",\\n    \\\"popularity\\\": 8363\\n  },\\n  {\\n    \\\"tag\\\": \"houndlike\",\\n    \\\"popularity\\\": 8354\\n  },\\n  {\\n    \\\"tag\\\": \"spikebill\",\\n    \\\"popularity\\\": 8345\\n  },\\n  {\\n    \\\"tag\\\": \"wiseacre pyrotechnic\",\\n    \\\"popularity\\\": 8336\\n  },\\n  {\\n    \\\"tag\\\": \"confessingly woodman\",\\n    \\\"popularity\\\": 8327\\n  },\\n  {\\n    \\\"tag\\\": \"overside\",\\n    \\\"popularity\\\": 8318\\n  },\\n  {\\n    \\\"tag\\\": \"oftwhiles\",\\n    \\\"popularity\\\": 8310\\n  },\\n  {\\n    \\\"tag\\\": \"Musophagidae\",\\n    \\\"popularity\\\": 8301\\n  },\\n  {\\n    \\\"tag\\\": \"slumberer\",\\n    \\\"popularity\\\": 8292\\n  },\\n  {\\n    \\\"tag\\\": \"leiotrichy\",\\n    \\\"popularity\\\": 8283\\n  },\\n  {\\n    \\\"tag\\\": \"Mantispidae\",\\n    \\\"popularity\\\": 8275\\n  },\\n  {\\n    \\\"tag\\\": \"perceptually\",\\n    \\\"popularity\\\": 8266\\n  },\\n  {\\n    \\\"tag\\\": \"biller\",\\n    \\\"popularity\\\": 8257\\n  },\\n  {\\n    \\\"tag\\\": \"eudaemonical\",\\n    \\\"popularity\\\": 8249\\n  },\\n  {\\n    \\\"tag\\\": \"underfiend\",\\n    \\\"popularity\\\": 8240\\n  },\\n  {\\n    \\\"tag\\\": \"impartible\",\\n    \\\"popularity\\\": 8231\\n  },\\n  {\\n    \\\"tag\\\": \"saxicavous\",\\n    \\\"popularity\\\": 8223\\n  },\\n  {\\n    \\\"tag\\\": \"yapster\",\\n    \\\"popularity\\\": 8214\\n  },\\n  {\\n    \\\"tag\\\": \"aliseptal\",\\n    \\\"popularity\\\": 8205\\n  },\\n  {\\n    \\\"tag\\\": \"omniparient\",\\n    \\\"popularity\\\": 8197\\n  },\\n  {\\n    \\\"tag\\\": \"nishiki\",\\n    \\\"popularity\\\": 8188\\n  },\\n  {\\n    \\\"tag\\\": \"yuzluk\",\\n    \\\"popularity\\\": 8180\\n  },\\n  {\\n    \\\"tag\\\": \"solderer\",\\n    \\\"popularity\\\": 8171\\n  },\\n  {\\n    \\\"tag\\\": \"Pinna\",\\n    \\\"popularity\\\": 8162\\n  },\\n  {\\n    \\\"tag\\\": \"reinterfere\",\\n    \\\"popularity\\\": 8154\\n  },\\n  {\\n    \\\"tag\\\": \"superepic\",\\n    \\\"popularity\\\": 8145\\n  },\\n  {\\n    \\\"tag\\\": \"ronquil\",\\n    \\\"popularity\\\": 8137\\n  },\\n  {\\n    \\\"tag\\\": \"bratstvo\",\\n    \\\"popularity\\\": 8128\\n  },\\n  {\\n    \\\"tag\\\": \"Thea\",\\n    \\\"popularity\\\": 8120\\n  },\\n  {\\n    \\\"tag\\\": \"hermaphroditical\",\\n    \\\"popularity\\\": 8111\\n  },\\n  {\\n    \\\"tag\\\": \"enlief\",\\n    \\\"popularity\\\": 8103\\n  },\\n  {\\n    \\\"tag\\\": \"Jesuate\",\\n    \\\"popularity\\\": 8095\\n  },\\n  {\\n    \\\"tag\\\": \"gaysome\",\\n    \\\"popularity\\\": 8086\\n  },\\n  {\\n    \\\"tag\\\": \"iliohypogastric\",\\n    \\\"popularity\\\": 8078\\n  },\\n  {\\n    \\\"tag\\\": \"regardance\",\\n    \\\"popularity\\\": 8069\\n  },\\n  {\\n    \\\"tag\\\": \"cumulately\",\\n    \\\"popularity\\\": 8061\\n  },\\n  {\\n    \\\"tag\\\": \"haustorial nucleolocentrosome\",\\n    \\\"popularity\\\": 8053\\n  },\\n  {\\n    \\\"tag\\\": \"cosmocrat\",\\n    \\\"popularity\\\": 8044\\n  },\\n  {\\n    \\\"tag\\\": \"onyxitis\",\\n    \\\"popularity\\\": 8036\\n  },\\n  {\\n    \\\"tag\\\": \"Cabinda\",\\n    \\\"popularity\\\": 8028\\n  },\\n  {\\n    \\\"tag\\\": \"coresort\",\\n    \\\"popularity\\\": 8019\\n  },\\n  {\\n    \\\"tag\\\": \"drusy preformant\",\\n    \\\"popularity\\\": 8011\\n  },\\n  {\\n    \\\"tag\\\": \"piningly\",\\n    \\\"popularity\\\": 8003\\n  },\\n  {\\n    \\\"tag\\\": \"bootlessly\",\\n    \\\"popularity\\\": 7994\\n  },\\n  {\\n    \\\"tag\\\": \"talari\",\\n    \\\"popularity\\\": 7986\\n  },\\n  {\\n    \\\"tag\\\": \"amidoacetal\",\\n    \\\"popularity\\\": 7978\\n  },\\n  {\\n    \\\"tag\\\": \"pschent\",\\n    \\\"popularity\\\": 7970\\n  },\\n  {\\n    \\\"tag\\\": \"consumptional scarer titivate\",\\n    \\\"popularity\\\": 7962\\n  },\\n  {\\n    \\\"tag\\\": \"Anserinae\",\\n    \\\"popularity\\\": 7953\\n  },\\n  {\\n    \\\"tag\\\": \"flaunter\",\\n    \\\"popularity\\\": 7945\\n  },\\n  {\\n    \\\"tag\\\": \"reindeer\",\\n    \\\"popularity\\\": 7937\\n  },\\n  {\\n    \\\"tag\\\": \"disparage\",\\n    \\\"popularity\\\": 7929\\n  },\\n  {\\n    \\\"tag\\\": \"superheat\",\\n    \\\"popularity\\\": 7921\\n  },\\n  {\\n    \\\"tag\\\": \"Chromatium\",\\n    \\\"popularity\\\": 7912\\n  },\\n  {\\n    \\\"tag\\\": \"Tina\",\\n    \\\"popularity\\\": 7904\\n  },\\n  {\\n    \\\"tag\\\": \"rededicatory\",\\n    \\\"popularity\\\": 7896\\n  },\\n  {\\n    \\\"tag\\\": \"nontransient\",\\n    \\\"popularity\\\": 7888\\n  },\\n  {\\n    \\\"tag\\\": \"Phocaean brinkless\",\\n    \\\"popularity\\\": 7880\\n  },\\n  {\\n    \\\"tag\\\": \"ventriculose\",\\n    \\\"popularity\\\": 7872\\n  },\\n  {\\n    \\\"tag\\\": \"upplough\",\\n    \\\"popularity\\\": 7864\\n  },\\n  {\\n    \\\"tag\\\": \"succorless\",\\n    \\\"popularity\\\": 7856\\n  },\\n  {\\n    \\\"tag\\\": \"hayrake\",\\n    \\\"popularity\\\": 7848\\n  },\\n  {\\n    \\\"tag\\\": \"merriness amorphia\",\\n    \\\"popularity\\\": 7840\\n  },\\n  {\\n    \\\"tag\\\": \"merycism\",\\n    \\\"popularity\\\": 7832\\n  },\\n  {\\n    \\\"tag\\\": \"checkrow\",\\n    \\\"popularity\\\": 7824\\n  },\\n  {\\n    \\\"tag\\\": \"scry\",\\n    \\\"popularity\\\": 7816\\n  },\\n  {\\n    \\\"tag\\\": \"obvolve\",\\n    \\\"popularity\\\": 7808\\n  },\\n  {\\n    \\\"tag\\\": \"orchard\",\\n    \\\"popularity\\\": 7800\\n  },\\n  {\\n    \\\"tag\\\": \"isomerize\",\\n    \\\"popularity\\\": 7792\\n  },\\n  {\\n    \\\"tag\\\": \"competitrix\",\\n    \\\"popularity\\\": 7784\\n  },\\n  {\\n    \\\"tag\\\": \"unbannered\",\\n    \\\"popularity\\\": 7776\\n  },\\n  {\\n    \\\"tag\\\": \"undoctrined\",\\n    \\\"popularity\\\": 7768\\n  },\\n  {\\n    \\\"tag\\\": \"theologian\",\\n    \\\"popularity\\\": 7760\\n  },\\n  {\\n    \\\"tag\\\": \"nebby\",\\n    \\\"popularity\\\": 7752\\n  },\\n  {\\n    \\\"tag\\\": \"Cardiazol\",\\n    \\\"popularity\\\": 7745\\n  },\\n  {\\n    \\\"tag\\\": \"phagedenic\",\\n    \\\"popularity\\\": 7737\\n  },\\n  {\\n    \\\"tag\\\": \"nostalgic\",\\n    \\\"popularity\\\": 7729\\n  },\\n  {\\n    \\\"tag\\\": \"orthodoxy\",\\n    \\\"popularity\\\": 7721\\n  },\\n  {\\n    \\\"tag\\\": \"oversanguine\",\\n    \\\"popularity\\\": 7713\\n  },\\n  {\\n    \\\"tag\\\": \"lish\",\\n    \\\"popularity\\\": 7705\\n  },\\n  {\\n    \\\"tag\\\": \"ketogenic\",\\n    \\\"popularity\\\": 7698\\n  },\\n  {\\n    \\\"tag\\\": \"syndicalize\",\\n    \\\"popularity\\\": 7690\\n  },\\n  {\\n    \\\"tag\\\": \"leeftail\",\\n    \\\"popularity\\\": 7682\\n  },\\n  {\\n    \\\"tag\\\": \"bulbomedullary\",\\n    \\\"popularity\\\": 7674\\n  },\\n  {\\n    \\\"tag\\\": \"reletter\",\\n    \\\"popularity\\\": 7667\\n  },\\n  {\\n    \\\"tag\\\": \"bitterly\",\\n    \\\"popularity\\\": 7659\\n  },\\n  {\\n    \\\"tag\\\": \"participatory\",\\n    \\\"popularity\\\": 7651\\n  },\\n  {\\n    \\\"tag\\\": \"baldberry\",\\n    \\\"popularity\\\": 7643\\n  },\\n  {\\n    \\\"tag\\\": \"prowaterpower\",\\n    \\\"popularity\\\": 7636\\n  },\\n  {\\n    \\\"tag\\\": \"lexicographical\",\\n    \\\"popularity\\\": 7628\\n  },\\n  {\\n    \\\"tag\\\": \"Anisodactyli\",\\n    \\\"popularity\\\": 7620\\n  },\\n  {\\n    \\\"tag\\\": \"amphipodous\",\\n    \\\"popularity\\\": 7613\\n  },\\n  {\\n    \\\"tag\\\": \"triglandular\",\\n    \\\"popularity\\\": 7605\\n  },\\n  {\\n    \\\"tag\\\": \"xanthopsin\",\\n    \\\"popularity\\\": 7597\\n  },\\n  {\\n    \\\"tag\\\": \"indefinitude\",\\n    \\\"popularity\\\": 7590\\n  },\\n  {\\n    \\\"tag\\\": \"bookworm\",\\n    \\\"popularity\\\": 7582\\n  },\\n  {\\n    \\\"tag\\\": \"suffocative\",\\n    \\\"popularity\\\": 7574\\n  },\\n  {\\n    \\\"tag\\\": \"uncongested tyrant\",\\n    \\\"popularity\\\": 7567\\n  },\\n  {\\n    \\\"tag\\\": \"alow harmoniously Pamir\",\\n    \\\"popularity\\\": 7559\\n  },\\n  {\\n    \\\"tag\\\": \"monander\",\\n    \\\"popularity\\\": 7552\\n  },\\n  {\\n    \\\"tag\\\": \"bagatelle\",\\n    \\\"popularity\\\": 7544\\n  },\\n  {\\n    \\\"tag\\\": \"membranology\",\\n    \\\"popularity\\\": 7537\\n  },\\n  {\\n    \\\"tag\\\": \"parturifacient\",\\n    \\\"popularity\\\": 7529\\n  },\\n  {\\n    \\\"tag\\\": \"excitovascular\",\\n    \\\"popularity\\\": 7522\\n  },\\n  {\\n    \\\"tag\\\": \"homopolar\",\\n    \\\"popularity\\\": 7514\\n  },\\n  {\\n    \\\"tag\\\": \"phobiac\",\\n    \\\"popularity\\\": 7507\\n  },\\n  {\\n    \\\"tag\\\": \"clype\",\\n    \\\"popularity\\\": 7499\\n  },\\n  {\\n    \\\"tag\\\": \"unsubversive\",\\n    \\\"popularity\\\": 7492\\n  },\\n  {\\n    \\\"tag\\\": \"bostrychoidal scorpionwort\",\\n    \\\"popularity\\\": 7484\\n  },\\n  {\\n    \\\"tag\\\": \"biliteralism\",\\n    \\\"popularity\\\": 7477\\n  },\\n  {\\n    \\\"tag\\\": \"dentatocostate\",\\n    \\\"popularity\\\": 7469\\n  },\\n  {\\n    \\\"tag\\\": \"Pici\",\\n    \\\"popularity\\\": 7462\\n  },\\n  {\\n    \\\"tag\\\": \"sideritic\",\\n    \\\"popularity\\\": 7454\\n  },\\n  {\\n    \\\"tag\\\": \"syntaxis\",\\n    \\\"popularity\\\": 7447\\n  },\\n  {\\n    \\\"tag\\\": \"ingest\",\\n    \\\"popularity\\\": 7440\\n  },\\n  {\\n    \\\"tag\\\": \"rigmarolish\",\\n    \\\"popularity\\\": 7432\\n  },\\n  {\\n    \\\"tag\\\": \"ocreaceous\",\\n    \\\"popularity\\\": 7425\\n  },\\n  {\\n    \\\"tag\\\": \"hyperbrachyskelic\",\\n    \\\"popularity\\\": 7418\\n  },\\n  {\\n    \\\"tag\\\": \"basophobia\",\\n    \\\"popularity\\\": 7410\\n  },\\n  {\\n    \\\"tag\\\": \"substantialness\",\\n    \\\"popularity\\\": 7403\\n  },\\n  {\\n    \\\"tag\\\": \"agglutinoid\",\\n    \\\"popularity\\\": 7396\\n  },\\n  {\\n    \\\"tag\\\": \"longleaf\",\\n    \\\"popularity\\\": 7388\\n  },\\n  {\\n    \\\"tag\\\": \"electroengraving\",\\n    \\\"popularity\\\": 7381\\n  },\\n  {\\n    \\\"tag\\\": \"laparoenterotomy\",\\n    \\\"popularity\\\": 7374\\n  },\\n  {\\n    \\\"tag\\\": \"oxalylurea\",\\n    \\\"popularity\\\": 7366\\n  },\\n  {\\n    \\\"tag\\\": \"unattaintedly\",\\n    \\\"popularity\\\": 7359\\n  },\\n  {\\n    \\\"tag\\\": \"pennystone\",\\n    \\\"popularity\\\": 7352\\n  },\\n  {\\n    \\\"tag\\\": \"Plumbaginaceae\",\\n    \\\"popularity\\\": 7345\\n  },\\n  {\\n    \\\"tag\\\": \"horntip\",\\n    \\\"popularity\\\": 7337\\n  },\\n  {\\n    \\\"tag\\\": \"begrudge\",\\n    \\\"popularity\\\": 7330\\n  },\\n  {\\n    \\\"tag\\\": \"bechignoned\",\\n    \\\"popularity\\\": 7323\\n  },\\n  {\\n    \\\"tag\\\": \"hologonidium\",\\n    \\\"popularity\\\": 7316\\n  },\\n  {\\n    \\\"tag\\\": \"Pulian\",\\n    \\\"popularity\\\": 7309\\n  },\\n  {\\n    \\\"tag\\\": \"gratulation\",\\n    \\\"popularity\\\": 7301\\n  },\\n  {\\n    \\\"tag\\\": \"Sebright\",\\n    \\\"popularity\\\": 7294\\n  },\\n  {\\n    \\\"tag\\\": \"coinstantaneous emotionally\",\\n    \\\"popularity\\\": 7287\\n  },\\n  {\\n    \\\"tag\\\": \"thoracostracan\",\\n    \\\"popularity\\\": 7280\\n  },\\n  {\\n    \\\"tag\\\": \"saurodont\",\\n    \\\"popularity\\\": 7273\\n  },\\n  {\\n    \\\"tag\\\": \"coseat\",\\n    \\\"popularity\\\": 7266\\n  },\\n  {\\n    \\\"tag\\\": \"irascibility\",\\n    \\\"popularity\\\": 7259\\n  },\\n  {\\n    \\\"tag\\\": \"occlude\",\\n    \\\"popularity\\\": 7251\\n  },\\n  {\\n    \\\"tag\\\": \"metallurgist\",\\n    \\\"popularity\\\": 7244\\n  },\\n  {\\n    \\\"tag\\\": \"extraviolet\",\\n    \\\"popularity\\\": 7237\\n  },\\n  {\\n    \\\"tag\\\": \"clinic\",\\n    \\\"popularity\\\": 7230\\n  },\\n  {\\n    \\\"tag\\\": \"skater\",\\n    \\\"popularity\\\": 7223\\n  },\\n  {\\n    \\\"tag\\\": \"linguistic\",\\n    \\\"popularity\\\": 7216\\n  },\\n  {\\n    \\\"tag\\\": \"attacheship\",\\n    \\\"popularity\\\": 7209\\n  },\\n  {\\n    \\\"tag\\\": \"Rachianectes\",\\n    \\\"popularity\\\": 7202\\n  },\\n  {\\n    \\\"tag\\\": \"foliolose\",\\n    \\\"popularity\\\": 7195\\n  },\\n  {\\n    \\\"tag\\\": \"claudetite\",\\n    \\\"popularity\\\": 7188\\n  },\\n  {\\n    \\\"tag\\\": \"aphidian scratching\",\\n    \\\"popularity\\\": 7181\\n  },\\n  {\\n    \\\"tag\\\": \"Carida\",\\n    \\\"popularity\\\": 7174\\n  },\\n  {\\n    \\\"tag\\\": \"tiepin polymicroscope\",\\n    \\\"popularity\\\": 7167\\n  },\\n  {\\n    \\\"tag\\\": \"telpherage\",\\n    \\\"popularity\\\": 7160\\n  },\\n  {\\n    \\\"tag\\\": \"meek\",\\n    \\\"popularity\\\": 7153\\n  },\\n  {\\n    \\\"tag\\\": \"swiftness\",\\n    \\\"popularity\\\": 7146\\n  },\\n  {\\n    \\\"tag\\\": \"gentes\",\\n    \\\"popularity\\\": 7139\\n  },\\n  {\\n    \\\"tag\\\": \"uncommemorated\",\\n    \\\"popularity\\\": 7132\\n  },\\n  {\\n    \\\"tag\\\": \"Lazarus\",\\n    \\\"popularity\\\": 7125\\n  },\\n  {\\n    \\\"tag\\\": \"redivive\",\\n    \\\"popularity\\\": 7119\\n  },\\n  {\\n    \\\"tag\\\": \"nonfebrile\",\\n    \\\"popularity\\\": 7112\\n  },\\n  {\\n    \\\"tag\\\": \"nymphet\",\\n    \\\"popularity\\\": 7105\\n  },\\n  {\\n    \\\"tag\\\": \"areologically\",\\n    \\\"popularity\\\": 7098\\n  },\\n  {\\n    \\\"tag\\\": \"undonkey\",\\n    \\\"popularity\\\": 7091\\n  },\\n  {\\n    \\\"tag\\\": \"projecting\",\\n    \\\"popularity\\\": 7084\\n  },\\n  {\\n    \\\"tag\\\": \"pinnigrade\",\\n    \\\"popularity\\\": 7077\\n  },\\n  {\\n    \\\"tag\\\": \"butylation\",\\n    \\\"popularity\\\": 7071\\n  },\\n  {\\n    \\\"tag\\\": \"philologistic lenticle\",\\n    \\\"popularity\\\": 7064\\n  },\\n  {\\n    \\\"tag\\\": \"nooky\",\\n    \\\"popularity\\\": 7057\\n  },\\n  {\\n    \\\"tag\\\": \"incestuousness\",\\n    \\\"popularity\\\": 7050\\n  },\\n  {\\n    \\\"tag\\\": \"palingenetically\",\\n    \\\"popularity\\\": 7043\\n  },\\n  {\\n    \\\"tag\\\": \"mitochondria\",\\n    \\\"popularity\\\": 7037\\n  },\\n  {\\n    \\\"tag\\\": \"truthify\",\\n    \\\"popularity\\\": 7030\\n  },\\n  {\\n    \\\"tag\\\": \"titanyl\",\\n    \\\"popularity\\\": 7023\\n  },\\n  {\\n    \\\"tag\\\": \"bestride\",\\n    \\\"popularity\\\": 7016\\n  },\\n  {\\n    \\\"tag\\\": \"chende\",\\n    \\\"popularity\\\": 7010\\n  },\\n  {\\n    \\\"tag\\\": \"Chaucerian monophote\",\\n    \\\"popularity\\\": 7003\\n  },\\n  {\\n    \\\"tag\\\": \"cutback\",\\n    \\\"popularity\\\": 6996\\n  },\\n  {\\n    \\\"tag\\\": \"unpatiently\",\\n    \\\"popularity\\\": 6989\\n  },\\n  {\\n    \\\"tag\\\": \"subvitreous\",\\n    \\\"popularity\\\": 6983\\n  },\\n  {\\n    \\\"tag\\\": \"organizable\",\\n    \\\"popularity\\\": 6976\\n  },\\n  {\\n    \\\"tag\\\": \"anniverse uncomprehensible\",\\n    \\\"popularity\\\": 6969\\n  },\\n  {\\n    \\\"tag\\\": \"hyalescence\",\\n    \\\"popularity\\\": 6963\\n  },\\n  {\\n    \\\"tag\\\": \"amniochorial\",\\n    \\\"popularity\\\": 6956\\n  },\\n  {\\n    \\\"tag\\\": \"Corybantian\",\\n    \\\"popularity\\\": 6949\\n  },\\n  {\\n    \\\"tag\\\": \"genocide Scaphitidae\",\\n    \\\"popularity\\\": 6943\\n  },\\n  {\\n    \\\"tag\\\": \"accordionist\",\\n    \\\"popularity\\\": 6936\\n  },\\n  {\\n    \\\"tag\\\": \"becheck\",\\n    \\\"popularity\\\": 6930\\n  },\\n  {\\n    \\\"tag\\\": \"overproduce\",\\n    \\\"popularity\\\": 6923\\n  },\\n  {\\n    \\\"tag\\\": \"unmaniac frijolillo\",\\n    \\\"popularity\\\": 6916\\n  },\\n  {\\n    \\\"tag\\\": \"multisulcated\",\\n    \\\"popularity\\\": 6910\\n  },\\n  {\\n    \\\"tag\\\": \"wennebergite\",\\n    \\\"popularity\\\": 6903\\n  },\\n  {\\n    \\\"tag\\\": \"tautousious mowth\",\\n    \\\"popularity\\\": 6897\\n  },\\n  {\\n    \\\"tag\\\": \"marigold\",\\n    \\\"popularity\\\": 6890\\n  },\\n  {\\n    \\\"tag\\\": \"affray\",\\n    \\\"popularity\\\": 6884\\n  },\\n  {\\n    \\\"tag\\\": \"nonidolatrous\",\\n    \\\"popularity\\\": 6877\\n  },\\n  {\\n    \\\"tag\\\": \"aphrasia\",\\n    \\\"popularity\\\": 6871\\n  },\\n  {\\n    \\\"tag\\\": \"muddlingly\",\\n    \\\"popularity\\\": 6864\\n  },\\n  {\\n    \\\"tag\\\": \"clear\",\\n    \\\"popularity\\\": 6858\\n  },\\n  {\\n    \\\"tag\\\": \"Clitoria\",\\n    \\\"popularity\\\": 6851\\n  },\\n  {\\n    \\\"tag\\\": \"apportionment underwaist\",\\n    \\\"popularity\\\": 6845\\n  },\\n  {\\n    \\\"tag\\\": \"kodakist\",\\n    \\\"popularity\\\": 6838\\n  },\\n  {\\n    \\\"tag\\\": \"Momotidae\",\\n    \\\"popularity\\\": 6832\\n  },\\n  {\\n    \\\"tag\\\": \"cryptovalency\",\\n    \\\"popularity\\\": 6825\\n  },\\n  {\\n    \\\"tag\\\": \"floe\",\\n    \\\"popularity\\\": 6819\\n  },\\n  {\\n    \\\"tag\\\": \"aphagia\",\\n    \\\"popularity\\\": 6812\\n  },\\n  {\\n    \\\"tag\\\": \"brontograph\",\\n    \\\"popularity\\\": 6806\\n  },\\n  {\\n    \\\"tag\\\": \"tubulous\",\\n    \\\"popularity\\\": 6799\\n  },\\n  {\\n    \\\"tag\\\": \"unhorse\",\\n    \\\"popularity\\\": 6793\\n  },\\n  {\\n    \\\"tag\\\": \"chlordane\",\\n    \\\"popularity\\\": 6787\\n  },\\n  {\\n    \\\"tag\\\": \"colloquy brochan\",\\n    \\\"popularity\\\": 6780\\n  },\\n  {\\n    \\\"tag\\\": \"sloosh\",\\n    \\\"popularity\\\": 6774\\n  },\\n  {\\n    \\\"tag\\\": \"battered\",\\n    \\\"popularity\\\": 6767\\n  },\\n  {\\n    \\\"tag\\\": \"monocularity pluriguttulate\",\\n    \\\"popularity\\\": 6761\\n  },\\n  {\\n    \\\"tag\\\": \"chiastoneury\",\\n    \\\"popularity\\\": 6755\\n  },\\n  {\\n    \\\"tag\\\": \"Sanguinaria\",\\n    \\\"popularity\\\": 6748\\n  },\\n  {\\n    \\\"tag\\\": \"confessionary\",\\n    \\\"popularity\\\": 6742\\n  },\\n  {\\n    \\\"tag\\\": \"enzymic\",\\n    \\\"popularity\\\": 6736\\n  },\\n  {\\n    \\\"tag\\\": \"cord\",\\n    \\\"popularity\\\": 6729\\n  },\\n  {\\n    \\\"tag\\\": \"oviducal\",\\n    \\\"popularity\\\": 6723\\n  },\\n  {\\n    \\\"tag\\\": \"crozzle outsea\",\\n    \\\"popularity\\\": 6717\\n  },\\n  {\\n    \\\"tag\\\": \"balladical\",\\n    \\\"popularity\\\": 6710\\n  },\\n  {\\n    \\\"tag\\\": \"uncollectibleness\",\\n    \\\"popularity\\\": 6704\\n  },\\n  {\\n    \\\"tag\\\": \"predorsal\",\\n    \\\"popularity\\\": 6698\\n  },\\n  {\\n    \\\"tag\\\": \"reauthenticate\",\\n    \\\"popularity\\\": 6692\\n  },\\n  {\\n    \\\"tag\\\": \"ravissant\",\\n    \\\"popularity\\\": 6685\\n  },\\n  {\\n    \\\"tag\\\": \"advantageousness\",\\n    \\\"popularity\\\": 6679\\n  },\\n  {\\n    \\\"tag\\\": \"rung\",\\n    \\\"popularity\\\": 6673\\n  },\\n  {\\n    \\\"tag\\\": \"duncedom\",\\n    \\\"popularity\\\": 6667\\n  },\\n  {\\n    \\\"tag\\\": \"hematolite\",\\n    \\\"popularity\\\": 6660\\n  },\\n  {\\n    \\\"tag\\\": \"thisness\",\\n    \\\"popularity\\\": 6654\\n  },\\n  {\\n    \\\"tag\\\": \"mapau\",\\n    \\\"popularity\\\": 6648\\n  },\\n  {\\n    \\\"tag\\\": \"Hecatic\",\\n    \\\"popularity\\\": 6642\\n  },\\n  {\\n    \\\"tag\\\": \"meningoencephalocele\",\\n    \\\"popularity\\\": 6636\\n  },\\n  {\\n    \\\"tag\\\": \"confection sorra\",\\n    \\\"popularity\\\": 6630\\n  },\\n  {\\n    \\\"tag\\\": \"unsedate\",\\n    \\\"popularity\\\": 6623\\n  },\\n  {\\n    \\\"tag\\\": \"meningocerebritis\",\\n    \\\"popularity\\\": 6617\\n  },\\n  {\\n    \\\"tag\\\": \"biopsychological\",\\n    \\\"popularity\\\": 6611\\n  },\\n  {\\n    \\\"tag\\\": \"clavicithern\",\\n    \\\"popularity\\\": 6605\\n  },\\n  {\\n    \\\"tag\\\": \"resun\",\\n    \\\"popularity\\\": 6599\\n  },\\n  {\\n    \\\"tag\\\": \"bayamo\",\\n    \\\"popularity\\\": 6593\\n  },\\n  {\\n    \\\"tag\\\": \"seeableness\",\\n    \\\"popularity\\\": 6587\\n  },\\n  {\\n    \\\"tag\\\": \"hypsidolichocephalism\",\\n    \\\"popularity\\\": 6581\\n  },\\n  {\\n    \\\"tag\\\": \"salivous\",\\n    \\\"popularity\\\": 6574\\n  },\\n  {\\n    \\\"tag\\\": \"neumatize\",\\n    \\\"popularity\\\": 6568\\n  },\\n  {\\n    \\\"tag\\\": \"stree\",\\n    \\\"popularity\\\": 6562\\n  },\\n  {\\n    \\\"tag\\\": \"markshot\",\\n    \\\"popularity\\\": 6556\\n  },\\n  {\\n    \\\"tag\\\": \"phraseologically\",\\n    \\\"popularity\\\": 6550\\n  },\\n  {\\n    \\\"tag\\\": \"yealing\",\\n    \\\"popularity\\\": 6544\\n  },\\n  {\\n    \\\"tag\\\": \"puggy\",\\n    \\\"popularity\\\": 6538\\n  },\\n  {\\n    \\\"tag\\\": \"sexadecimal\",\\n    \\\"popularity\\\": 6532\\n  },\\n  {\\n    \\\"tag\\\": \"unofficerlike\",\\n    \\\"popularity\\\": 6526\\n  },\\n  {\\n    \\\"tag\\\": \"curiosa\",\\n    \\\"popularity\\\": 6520\\n  },\\n  {\\n    \\\"tag\\\": \"pedomotor\",\\n    \\\"popularity\\\": 6514\\n  },\\n  {\\n    \\\"tag\\\": \"astrally\",\\n    \\\"popularity\\\": 6508\\n  },\\n  {\\n    \\\"tag\\\": \"prosomatic\",\\n    \\\"popularity\\\": 6502\\n  },\\n  {\\n    \\\"tag\\\": \"bulletheaded\",\\n    \\\"popularity\\\": 6496\\n  },\\n  {\\n    \\\"tag\\\": \"fortuned\",\\n    \\\"popularity\\\": 6490\\n  },\\n  {\\n    \\\"tag\\\": \"pixy\",\\n    \\\"popularity\\\": 6484\\n  },\\n  {\\n    \\\"tag\\\": \"protectrix\",\\n    \\\"popularity\\\": 6478\\n  },\\n  {\\n    \\\"tag\\\": \"arthritical\",\\n    \\\"popularity\\\": 6472\\n  },\\n  {\\n    \\\"tag\\\": \"coction\",\\n    \\\"popularity\\\": 6466\\n  },\\n  {\\n    \\\"tag\\\": \"Anthropos\",\\n    \\\"popularity\\\": 6460\\n  },\\n  {\\n    \\\"tag\\\": \"runer\",\\n    \\\"popularity\\\": 6454\\n  },\\n  {\\n    \\\"tag\\\": \"prenotify\",\\n    \\\"popularity\\\": 6449\\n  },\\n  {\\n    \\\"tag\\\": \"microspheric gastroparalysis\",\\n    \\\"popularity\\\": 6443\\n  },\\n  {\\n    \\\"tag\\\": \"Jovicentrical\",\\n    \\\"popularity\\\": 6437\\n  },\\n  {\\n    \\\"tag\\\": \"ceratopsid\",\\n    \\\"popularity\\\": 6431\\n  },\\n  {\\n    \\\"tag\\\": \"Theodoric\",\\n    \\\"popularity\\\": 6425\\n  },\\n  {\\n    \\\"tag\\\": \"Pactolus\",\\n    \\\"popularity\\\": 6419\\n  },\\n  {\\n    \\\"tag\\\": \"spawning\",\\n    \\\"popularity\\\": 6413\\n  },\\n  {\\n    \\\"tag\\\": \"nonconfidential\",\\n    \\\"popularity\\\": 6407\\n  },\\n  {\\n    \\\"tag\\\": \"halotrichite infumate\",\\n    \\\"popularity\\\": 6402\\n  },\\n  {\\n    \\\"tag\\\": \"undiscriminatingly\",\\n    \\\"popularity\\\": 6396\\n  },\\n  {\\n    \\\"tag\\\": \"unexasperated\",\\n    \\\"popularity\\\": 6390\\n  },\\n  {\\n    \\\"tag\\\": \"isoeugenol\",\\n    \\\"popularity\\\": 6384\\n  },\\n  {\\n    \\\"tag\\\": \"pressboard\",\\n    \\\"popularity\\\": 6378\\n  },\\n  {\\n    \\\"tag\\\": \"unshrew\",\\n    \\\"popularity\\\": 6372\\n  },\\n  {\\n    \\\"tag\\\": \"huffingly\",\\n    \\\"popularity\\\": 6367\\n  },\\n  {\\n    \\\"tag\\\": \"wagaun\",\\n    \\\"popularity\\\": 6361\\n  },\\n  {\\n    \\\"tag\\\": \"squirt Philistine\",\\n    \\\"popularity\\\": 6355\\n  },\\n  {\\n    \\\"tag\\\": \"kryptic\",\\n    \\\"popularity\\\": 6349\\n  },\\n  {\\n    \\\"tag\\\": \"paraform\",\\n    \\\"popularity\\\": 6344\\n  },\\n  {\\n    \\\"tag\\\": \"preverify\",\\n    \\\"popularity\\\": 6338\\n  },\\n  {\\n    \\\"tag\\\": \"dalar\",\\n    \\\"popularity\\\": 6332\\n  },\\n  {\\n    \\\"tag\\\": \"interdictor appraisingly\",\\n    \\\"popularity\\\": 6326\\n  },\\n  {\\n    \\\"tag\\\": \"chipped\",\\n    \\\"popularity\\\": 6321\\n  },\\n  {\\n    \\\"tag\\\": \"Pteropoda\",\\n    \\\"popularity\\\": 6315\\n  },\\n  {\\n    \\\"tag\\\": \"Bohairic\",\\n    \\\"popularity\\\": 6309\\n  },\\n  {\\n    \\\"tag\\\": \"felting\",\\n    \\\"popularity\\\": 6303\\n  },\\n  {\\n    \\\"tag\\\": \"compurgatorial\",\\n    \\\"popularity\\\": 6298\\n  },\\n  {\\n    \\\"tag\\\": \"unclead\",\\n    \\\"popularity\\\": 6292\\n  },\\n  {\\n    \\\"tag\\\": \"stockish\",\\n    \\\"popularity\\\": 6286\\n  },\\n  {\\n    \\\"tag\\\": \"mulligatawny\",\\n    \\\"popularity\\\": 6281\\n  },\\n  {\\n    \\\"tag\\\": \"Monotheletism\",\\n    \\\"popularity\\\": 6275\\n  },\\n  {\\n    \\\"tag\\\": \"lutanist\",\\n    \\\"popularity\\\": 6269\\n  },\\n  {\\n    \\\"tag\\\": \"gluttonize\",\\n    \\\"popularity\\\": 6264\\n  },\\n  {\\n    \\\"tag\\\": \"hackneyed\",\\n    \\\"popularity\\\": 6258\\n  },\\n  {\\n    \\\"tag\\\": \"yield\",\\n    \\\"popularity\\\": 6253\\n  },\\n  {\\n    \\\"tag\\\": \"sulphonamido\",\\n    \\\"popularity\\\": 6247\\n  },\\n  {\\n    \\\"tag\\\": \"granulative\",\\n    \\\"popularity\\\": 6241\\n  },\\n  {\\n    \\\"tag\\\": \"swingy\",\\n    \\\"popularity\\\": 6236\\n  },\\n  {\\n    \\\"tag\\\": \"Desmidiales\",\\n    \\\"popularity\\\": 6230\\n  },\\n  {\\n    \\\"tag\\\": \"tootlish\",\\n    \\\"popularity\\\": 6224\\n  },\\n  {\\n    \\\"tag\\\": \"unsatisfiedly\",\\n    \\\"popularity\\\": 6219\\n  },\\n  {\\n    \\\"tag\\\": \"burucha\",\\n    \\\"popularity\\\": 6213\\n  },\\n  {\\n    \\\"tag\\\": \"premeditatingly\",\\n    \\\"popularity\\\": 6208\\n  },\\n  {\\n    \\\"tag\\\": \"cowrie\",\\n    \\\"popularity\\\": 6202\\n  },\\n  {\\n    \\\"tag\\\": \"pleurolysis\",\\n    \\\"popularity\\\": 6197\\n  },\\n  {\\n    \\\"tag\\\": \"nationalist\",\\n    \\\"popularity\\\": 6191\\n  },\\n  {\\n    \\\"tag\\\": \"Pholadacea\",\\n    \\\"popularity\\\": 6186\\n  },\\n  {\\n    \\\"tag\\\": \"anakrousis\",\\n    \\\"popularity\\\": 6180\\n  },\\n  {\\n    \\\"tag\\\": \"proctorial\",\\n    \\\"popularity\\\": 6175\\n  },\\n  {\\n    \\\"tag\\\": \"cavillation\",\\n    \\\"popularity\\\": 6169\\n  },\\n  {\\n    \\\"tag\\\": \"cervicobregmatic\",\\n    \\\"popularity\\\": 6163\\n  },\\n  {\\n    \\\"tag\\\": \"interspecific\",\\n    \\\"popularity\\\": 6158\\n  },\\n  {\\n    \\\"tag\\\": \"Teutonity\",\\n    \\\"popularity\\\": 6152\\n  },\\n  {\\n    \\\"tag\\\": \"snakeholing\",\\n    \\\"popularity\\\": 6147\\n  },\\n  {\\n    \\\"tag\\\": \"balcony\",\\n    \\\"popularity\\\": 6142\\n  },\\n  {\\n    \\\"tag\\\": \"latchless\",\\n    \\\"popularity\\\": 6136\\n  },\\n  {\\n    \\\"tag\\\": \"Mithraea\",\\n    \\\"popularity\\\": 6131\\n  },\\n  {\\n    \\\"tag\\\": \"pseudepigraph\",\\n    \\\"popularity\\\": 6125\\n  },\\n  {\\n    \\\"tag\\\": \"flosser\",\\n    \\\"popularity\\\": 6120\\n  },\\n  {\\n    \\\"tag\\\": \"kotyle\",\\n    \\\"popularity\\\": 6114\\n  },\\n  {\\n    \\\"tag\\\": \"outdo\",\\n    \\\"popularity\\\": 6109\\n  },\\n  {\\n    \\\"tag\\\": \"interclerical\",\\n    \\\"popularity\\\": 6103\\n  },\\n  {\\n    \\\"tag\\\": \"aurar\",\\n    \\\"popularity\\\": 6098\\n  },\\n  {\\n    \\\"tag\\\": \"apophyseal\",\\n    \\\"popularity\\\": 6093\\n  },\\n  {\\n    \\\"tag\\\": \"Miro\",\\n    \\\"popularity\\\": 6087\\n  },\\n  {\\n    \\\"tag\\\": \"Priscillian\",\\n    \\\"popularity\\\": 6082\\n  },\\n  {\\n    \\\"tag\\\": \"alluvia\",\\n    \\\"popularity\\\": 6076\\n  },\\n  {\\n    \\\"tag\\\": \"exordize\",\\n    \\\"popularity\\\": 6071\\n  },\\n  {\\n    \\\"tag\\\": \"breakage\",\\n    \\\"popularity\\\": 6066\\n  },\\n  {\\n    \\\"tag\\\": \"unclosable\",\\n    \\\"popularity\\\": 6060\\n  },\\n  {\\n    \\\"tag\\\": \"monocondylous\",\\n    \\\"popularity\\\": 6055\\n  },\\n  {\\n    \\\"tag\\\": \"dyarchy\",\\n    \\\"popularity\\\": 6050\\n  },\\n  {\\n    \\\"tag\\\": \"subchelate\",\\n    \\\"popularity\\\": 6044\\n  },\\n  {\\n    \\\"tag\\\": \"hearsay\",\\n    \\\"popularity\\\": 6039\\n  },\\n  {\\n    \\\"tag\\\": \"prestigiously\",\\n    \\\"popularity\\\": 6034\\n  },\\n  {\\n    \\\"tag\\\": \"unimuscular\",\\n    \\\"popularity\\\": 6028\\n  },\\n  {\\n    \\\"tag\\\": \"lingwort\",\\n    \\\"popularity\\\": 6023\\n  },\\n  {\\n    \\\"tag\\\": \"jealous\",\\n    \\\"popularity\\\": 6018\\n  },\\n  {\\n    \\\"tag\\\": \"artilleryman\",\\n    \\\"popularity\\\": 6012\\n  },\\n  {\\n    \\\"tag\\\": \"phantasmagorially\",\\n    \\\"popularity\\\": 6007\\n  },\\n  {\\n    \\\"tag\\\": \"stagnum\",\\n    \\\"popularity\\\": 6002\\n  },\\n  {\\n    \\\"tag\\\": \"organotropism shatteringly\",\\n    \\\"popularity\\\": 5997\\n  },\\n  {\\n    \\\"tag\\\": \"Mytilus Hebraist\",\\n    \\\"popularity\\\": 5991\\n  },\\n  {\\n    \\\"tag\\\": \"returf\",\\n    \\\"popularity\\\": 5986\\n  },\\n  {\\n    \\\"tag\\\": \"townfolk\",\\n    \\\"popularity\\\": 5981\\n  },\\n  {\\n    \\\"tag\\\": \"propitiative\",\\n    \\\"popularity\\\": 5976\\n  },\\n  {\\n    \\\"tag\\\": \"Anita unsullied\",\\n    \\\"popularity\\\": 5970\\n  },\\n  {\\n    \\\"tag\\\": \"bandoleered\",\\n    \\\"popularity\\\": 5965\\n  },\\n  {\\n    \\\"tag\\\": \"cubby\",\\n    \\\"popularity\\\": 5960\\n  },\\n  {\\n    \\\"tag\\\": \"Hexanchus\",\\n    \\\"popularity\\\": 5955\\n  },\\n  {\\n    \\\"tag\\\": \"circuminsular\",\\n    \\\"popularity\\\": 5949\\n  },\\n  {\\n    \\\"tag\\\": \"chamberletted eumycete\",\\n    \\\"popularity\\\": 5944\\n  },\\n  {\\n    \\\"tag\\\": \"secure\",\\n    \\\"popularity\\\": 5939\\n  },\\n  {\\n    \\\"tag\\\": \"Edwardean\",\\n    \\\"popularity\\\": 5934\\n  },\\n  {\\n    \\\"tag\\\": \"strenth\",\\n    \\\"popularity\\\": 5929\\n  },\\n  {\\n    \\\"tag\\\": \"exhaustless\",\\n    \\\"popularity\\\": 5923\\n  },\\n  {\\n    \\\"tag\\\": \"electioneerer\",\\n    \\\"popularity\\\": 5918\\n  },\\n  {\\n    \\\"tag\\\": \"estoile\",\\n    \\\"popularity\\\": 5913\\n  },\\n  {\\n    \\\"tag\\\": \"redden\",\\n    \\\"popularity\\\": 5908\\n  },\\n  {\\n    \\\"tag\\\": \"solicitee\",\\n    \\\"popularity\\\": 5903\\n  },\\n  {\\n    \\\"tag\\\": \"nonpatented\",\\n    \\\"popularity\\\": 5898\\n  },\\n  {\\n    \\\"tag\\\": \"lemming\",\\n    \\\"popularity\\\": 5893\\n  },\\n  {\\n    \\\"tag\\\": \"marled subalate\",\\n    \\\"popularity\\\": 5887\\n  },\\n  {\\n    \\\"tag\\\": \"premial horizonward\",\\n    \\\"popularity\\\": 5882\\n  },\\n  {\\n    \\\"tag\\\": \"nonrefueling\",\\n    \\\"popularity\\\": 5877\\n  },\\n  {\\n    \\\"tag\\\": \"rupturewort\",\\n    \\\"popularity\\\": 5872\\n  },\\n  {\\n    \\\"tag\\\": \"unfed\",\\n    \\\"popularity\\\": 5867\\n  },\\n  {\\n    \\\"tag\\\": \"empanelment\",\\n    \\\"popularity\\\": 5862\\n  },\\n  {\\n    \\\"tag\\\": \"isoosmosis\",\\n    \\\"popularity\\\": 5857\\n  },\\n  {\\n    \\\"tag\\\": \"jipijapa\",\\n    \\\"popularity\\\": 5852\\n  },\\n  {\\n    \\\"tag\\\": \"Fiji\",\\n    \\\"popularity\\\": 5847\\n  },\\n  {\\n    \\\"tag\\\": \"interferant\",\\n    \\\"popularity\\\": 5842\\n  },\\n  {\\n    \\\"tag\\\": \"reconstitution\",\\n    \\\"popularity\\\": 5837\\n  },\\n  {\\n    \\\"tag\\\": \"dockyardman\",\\n    \\\"popularity\\\": 5832\\n  },\\n  {\\n    \\\"tag\\\": \"dolichopodous\",\\n    \\\"popularity\\\": 5826\\n  },\\n  {\\n    \\\"tag\\\": \"whiteworm\",\\n    \\\"popularity\\\": 5821\\n  },\\n  {\\n    \\\"tag\\\": \"atheistically\",\\n    \\\"popularity\\\": 5816\\n  },\\n  {\\n    \\\"tag\\\": \"nonconcern\",\\n    \\\"popularity\\\": 5811\\n  },\\n  {\\n    \\\"tag\\\": \"scarabaeidoid\",\\n    \\\"popularity\\\": 5806\\n  },\\n  {\\n    \\\"tag\\\": \"triumviri\",\\n    \\\"popularity\\\": 5801\\n  },\\n  {\\n    \\\"tag\\\": \"rakit\",\\n    \\\"popularity\\\": 5796\\n  },\\n  {\\n    \\\"tag\\\": \"leecheater\",\\n    \\\"popularity\\\": 5791\\n  },\\n  {\\n    \\\"tag\\\": \"Arthrostraca\",\\n    \\\"popularity\\\": 5786\\n  },\\n  {\\n    \\\"tag\\\": \"upknit\",\\n    \\\"popularity\\\": 5781\\n  },\\n  {\\n    \\\"tag\\\": \"tymbalon\",\\n    \\\"popularity\\\": 5776\\n  },\\n  {\\n    \\\"tag\\\": \"inventurous\",\\n    \\\"popularity\\\": 5771\\n  },\\n  {\\n    \\\"tag\\\": \"perradiate\",\\n    \\\"popularity\\\": 5766\\n  },\\n  {\\n    \\\"tag\\\": \"seer\",\\n    \\\"popularity\\\": 5762\\n  },\\n  {\\n    \\\"tag\\\": \"Auricularia\",\\n    \\\"popularity\\\": 5757\\n  },\\n  {\\n    \\\"tag\\\": \"wettish exclusivity\",\\n    \\\"popularity\\\": 5752\\n  },\\n  {\\n    \\\"tag\\\": \"arteriosympathectomy\",\\n    \\\"popularity\\\": 5747\\n  },\\n  {\\n    \\\"tag\\\": \"tunlike\",\\n    \\\"popularity\\\": 5742\\n  },\\n  {\\n    \\\"tag\\\": \"cephalocercal\",\\n    \\\"popularity\\\": 5737\\n  },\\n  {\\n    \\\"tag\\\": \"meaninglessness\",\\n    \\\"popularity\\\": 5732\\n  },\\n  {\\n    \\\"tag\\\": \"fountful\",\\n    \\\"popularity\\\": 5727\\n  },\\n  {\\n    \\\"tag\\\": \"appraisement\",\\n    \\\"popularity\\\": 5722\\n  },\\n  {\\n    \\\"tag\\\": \"geniculated\",\\n    \\\"popularity\\\": 5717\\n  },\\n  {\\n    \\\"tag\\\": \"rotator\",\\n    \\\"popularity\\\": 5712\\n  },\\n  {\\n    \\\"tag\\\": \"foremarch biography\",\\n    \\\"popularity\\\": 5707\\n  },\\n  {\\n    \\\"tag\\\": \"arid\",\\n    \\\"popularity\\\": 5703\\n  },\\n  {\\n    \\\"tag\\\": \"inapprehensible\",\\n    \\\"popularity\\\": 5698\\n  },\\n  {\\n    \\\"tag\\\": \"chlorosulphonic\",\\n    \\\"popularity\\\": 5693\\n  },\\n  {\\n    \\\"tag\\\": \"braguette\",\\n    \\\"popularity\\\": 5688\\n  },\\n  {\\n    \\\"tag\\\": \"panophthalmitis\",\\n    \\\"popularity\\\": 5683\\n  },\\n  {\\n    \\\"tag\\\": \"pro objurgatorily\",\\n    \\\"popularity\\\": 5678\\n  },\\n  {\\n    \\\"tag\\\": \"zooplasty\",\\n    \\\"popularity\\\": 5673\\n  },\\n  {\\n    \\\"tag\\\": \"Terebratulidae\",\\n    \\\"popularity\\\": 5669\\n  },\\n  {\\n    \\\"tag\\\": \"Mahran\",\\n    \\\"popularity\\\": 5664\\n  },\\n  {\\n    \\\"tag\\\": \"anthologize merocele\",\\n    \\\"popularity\\\": 5659\\n  },\\n  {\\n    \\\"tag\\\": \"firecracker chiropractic\",\\n    \\\"popularity\\\": 5654\\n  },\\n  {\\n    \\\"tag\\\": \"tenorist\",\\n    \\\"popularity\\\": 5649\\n  },\\n  {\\n    \\\"tag\\\": \"amphitene\",\\n    \\\"popularity\\\": 5645\\n  },\\n  {\\n    \\\"tag\\\": \"silverbush toadstone\",\\n    \\\"popularity\\\": 5640\\n  },\\n  {\\n    \\\"tag\\\": \"entozoological\",\\n    \\\"popularity\\\": 5635\\n  },\\n  {\\n    \\\"tag\\\": \"trustlessness\",\\n    \\\"popularity\\\": 5630\\n  },\\n  {\\n    \\\"tag\\\": \"reassay\",\\n    \\\"popularity\\\": 5625\\n  },\\n  {\\n    \\\"tag\\\": \"chrysalides\",\\n    \\\"popularity\\\": 5621\\n  },\\n  {\\n    \\\"tag\\\": \"truncation\",\\n    \\\"popularity\\\": 5616\\n  },\\n  {\\n    \\\"tag\\\": \"unwavered mausoleal\",\\n    \\\"popularity\\\": 5611\\n  },\\n  {\\n    \\\"tag\\\": \"unserrated\",\\n    \\\"popularity\\\": 5606\\n  },\\n  {\\n    \\\"tag\\\": \"frampler\",\\n    \\\"popularity\\\": 5602\\n  },\\n  {\\n    \\\"tag\\\": \"celestial\",\\n    \\\"popularity\\\": 5597\\n  },\\n  {\\n    \\\"tag\\\": \"depreter\",\\n    \\\"popularity\\\": 5592\\n  },\\n  {\\n    \\\"tag\\\": \"retaliate\",\\n    \\\"popularity\\\": 5588\\n  },\\n  {\\n    \\\"tag\\\": \"decempunctate\",\\n    \\\"popularity\\\": 5583\\n  },\\n  {\\n    \\\"tag\\\": \"submitter\",\\n    \\\"popularity\\\": 5578\\n  },\\n  {\\n    \\\"tag\\\": \"phenothiazine\",\\n    \\\"popularity\\\": 5573\\n  },\\n  {\\n    \\\"tag\\\": \"hobbledehoyish\",\\n    \\\"popularity\\\": 5569\\n  },\\n  {\\n    \\\"tag\\\": \"erraticness\",\\n    \\\"popularity\\\": 5564\\n  },\\n  {\\n    \\\"tag\\\": \"ovariodysneuria\",\\n    \\\"popularity\\\": 5559\\n  },\\n  {\\n    \\\"tag\\\": \"puja\",\\n    \\\"popularity\\\": 5555\\n  },\\n  {\\n    \\\"tag\\\": \"cesspool\",\\n    \\\"popularity\\\": 5550\\n  },\\n  {\\n    \\\"tag\\\": \"sonation\",\\n    \\\"popularity\\\": 5545\\n  },\\n  {\\n    \\\"tag\\\": \"moggan\",\\n    \\\"popularity\\\": 5541\\n  },\\n  {\\n    \\\"tag\\\": \"overjutting\",\\n    \\\"popularity\\\": 5536\\n  },\\n  {\\n    \\\"tag\\\": \"cohobate\",\\n    \\\"popularity\\\": 5531\\n  },\\n  {\\n    \\\"tag\\\": \"Distoma\",\\n    \\\"popularity\\\": 5527\\n  },\\n  {\\n    \\\"tag\\\": \"Plectognathi\",\\n    \\\"popularity\\\": 5522\\n  },\\n  {\\n    \\\"tag\\\": \"dumple caliphate\",\\n    \\\"popularity\\\": 5517\\n  },\\n  {\\n    \\\"tag\\\": \"shiko\",\\n    \\\"popularity\\\": 5513\\n  },\\n  {\\n    \\\"tag\\\": \"downness\",\\n    \\\"popularity\\\": 5508\\n  },\\n  {\\n    \\\"tag\\\": \"whippletree\",\\n    \\\"popularity\\\": 5504\\n  },\\n  {\\n    \\\"tag\\\": \"nymphaeum\",\\n    \\\"popularity\\\": 5499\\n  },\\n  {\\n    \\\"tag\\\": \"there trest\",\\n    \\\"popularity\\\": 5494\\n  },\\n  {\\n    \\\"tag\\\": \"psychrometer\",\\n    \\\"popularity\\\": 5490\\n  },\\n  {\\n    \\\"tag\\\": \"pyelograph\",\\n    \\\"popularity\\\": 5485\\n  },\\n  {\\n    \\\"tag\\\": \"unsalvable\",\\n    \\\"popularity\\\": 5481\\n  },\\n  {\\n    \\\"tag\\\": \"bescreen\",\\n    \\\"popularity\\\": 5476\\n  },\\n  {\\n    \\\"tag\\\": \"cushy\",\\n    \\\"popularity\\\": 5471\\n  },\\n  {\\n    \\\"tag\\\": \"plicatolobate\",\\n    \\\"popularity\\\": 5467\\n  },\\n  {\\n    \\\"tag\\\": \"lakie\",\\n    \\\"popularity\\\": 5462\\n  },\\n  {\\n    \\\"tag\\\": \"anthropodeoxycholic\",\\n    \\\"popularity\\\": 5458\\n  },\\n  {\\n    \\\"tag\\\": \"resatisfaction\",\\n    \\\"popularity\\\": 5453\\n  },\\n  {\\n    \\\"tag\\\": \"unravelment unaccidental\",\\n    \\\"popularity\\\": 5449\\n  },\\n  {\\n    \\\"tag\\\": \"telewriter monogeneous\",\\n    \\\"popularity\\\": 5444\\n  },\\n  {\\n    \\\"tag\\\": \"unsabred\",\\n    \\\"popularity\\\": 5440\\n  },\\n  {\\n    \\\"tag\\\": \"startlingly\",\\n    \\\"popularity\\\": 5435\\n  },\\n  {\\n    \\\"tag\\\": \"Aralia\",\\n    \\\"popularity\\\": 5431\\n  },\\n  {\\n    \\\"tag\\\": \"alamonti\",\\n    \\\"popularity\\\": 5426\\n  },\\n  {\\n    \\\"tag\\\": \"Franklinization\",\\n    \\\"popularity\\\": 5422\\n  },\\n  {\\n    \\\"tag\\\": \"parliament\",\\n    \\\"popularity\\\": 5417\\n  },\\n  {\\n    \\\"tag\\\": \"schoolkeeper\",\\n    \\\"popularity\\\": 5413\\n  },\\n  {\\n    \\\"tag\\\": \"nonsociety\",\\n    \\\"popularity\\\": 5408\\n  },\\n  {\\n    \\\"tag\\\": \"parenthetic\",\\n    \\\"popularity\\\": 5404\\n  },\\n  {\\n    \\\"tag\\\": \"stog\",\\n    \\\"popularity\\\": 5399\\n  },\\n  {\\n    \\\"tag\\\": \"Pristipomidae\",\\n    \\\"popularity\\\": 5395\\n  },\\n  {\\n    \\\"tag\\\": \"exocarp\",\\n    \\\"popularity\\\": 5390\\n  },\\n  {\\n    \\\"tag\\\": \"monaxonial\",\\n    \\\"popularity\\\": 5386\\n  },\\n  {\\n    \\\"tag\\\": \"tramroad\",\\n    \\\"popularity\\\": 5381\\n  },\\n  {\\n    \\\"tag\\\": \"hookah\",\\n    \\\"popularity\\\": 5377\\n  },\\n  {\\n    \\\"tag\\\": \"saccharonic\",\\n    \\\"popularity\\\": 5372\\n  },\\n  {\\n    \\\"tag\\\": \"perimetrium\",\\n    \\\"popularity\\\": 5368\\n  },\\n  {\\n    \\\"tag\\\": \"libelluloid\",\\n    \\\"popularity\\\": 5364\\n  },\\n  {\\n    \\\"tag\\\": \"overrunningly\",\\n    \\\"popularity\\\": 5359\\n  },\\n  {\\n    \\\"tag\\\": \"untwister\",\\n    \\\"popularity\\\": 5355\\n  },\\n  {\\n    \\\"tag\\\": \"ninnyhammer\",\\n    \\\"popularity\\\": 5350\\n  },\\n  {\\n    \\\"tag\\\": \"metranate\",\\n    \\\"popularity\\\": 5346\\n  },\\n  {\\n    \\\"tag\\\": \"sarcoblast\",\\n    \\\"popularity\\\": 5341\\n  },\\n  {\\n    \\\"tag\\\": \"porkish\",\\n    \\\"popularity\\\": 5337\\n  },\\n  {\\n    \\\"tag\\\": \"chauvinistic\",\\n    \\\"popularity\\\": 5333\\n  },\\n  {\\n    \\\"tag\\\": \"sexagesimal\",\\n    \\\"popularity\\\": 5328\\n  },\\n  {\\n    \\\"tag\\\": \"hematogenic\",\\n    \\\"popularity\\\": 5324\\n  },\\n  {\\n    \\\"tag\\\": \"selfpreservatory\",\\n    \\\"popularity\\\": 5320\\n  },\\n  {\\n    \\\"tag\\\": \"myelauxe\",\\n    \\\"popularity\\\": 5315\\n  },\\n  {\\n    \\\"tag\\\": \"triply\",\\n    \\\"popularity\\\": 5311\\n  },\\n  {\\n    \\\"tag\\\": \"metaphysicous\",\\n    \\\"popularity\\\": 5306\\n  },\\n  {\\n    \\\"tag\\\": \"vitrinoid\",\\n    \\\"popularity\\\": 5302\\n  },\\n  {\\n    \\\"tag\\\": \"glabellae\",\\n    \\\"popularity\\\": 5298\\n  },\\n  {\\n    \\\"tag\\\": \"moonlighter\",\\n    \\\"popularity\\\": 5293\\n  },\\n  {\\n    \\\"tag\\\": \"monotheistically epexegetical\",\\n    \\\"popularity\\\": 5289\\n  },\\n  {\\n    \\\"tag\\\": \"pseudolateral\",\\n    \\\"popularity\\\": 5285\\n  },\\n  {\\n    \\\"tag\\\": \"heptamethylene\",\\n    \\\"popularity\\\": 5280\\n  },\\n  {\\n    \\\"tag\\\": \"salvadora\",\\n    \\\"popularity\\\": 5276\\n  },\\n  {\\n    \\\"tag\\\": \"unjovial diphenylthiourea\",\\n    \\\"popularity\\\": 5272\\n  },\\n  {\\n    \\\"tag\\\": \"thievishness\",\\n    \\\"popularity\\\": 5268\\n  },\\n  {\\n    \\\"tag\\\": \"unridable\",\\n    \\\"popularity\\\": 5263\\n  },\\n  {\\n    \\\"tag\\\": \"underhandedly\",\\n    \\\"popularity\\\": 5259\\n  },\\n  {\\n    \\\"tag\\\": \"fungiform\",\\n    \\\"popularity\\\": 5255\\n  },\\n  {\\n    \\\"tag\\\": \"scruffle\",\\n    \\\"popularity\\\": 5250\\n  },\\n  {\\n    \\\"tag\\\": \"preindisposition\",\\n    \\\"popularity\\\": 5246\\n  },\\n  {\\n    \\\"tag\\\": \"Amadis\",\\n    \\\"popularity\\\": 5242\\n  },\\n  {\\n    \\\"tag\\\": \"Culex\",\\n    \\\"popularity\\\": 5238\\n  },\\n  {\\n    \\\"tag\\\": \"churning\",\\n    \\\"popularity\\\": 5233\\n  },\\n  {\\n    \\\"tag\\\": \"imperite\",\\n    \\\"popularity\\\": 5229\\n  },\\n  {\\n    \\\"tag\\\": \"levorotation\",\\n    \\\"popularity\\\": 5225\\n  },\\n  {\\n    \\\"tag\\\": \"barbate\",\\n    \\\"popularity\\\": 5221\\n  },\\n  {\\n    \\\"tag\\\": \"knotwort\",\\n    \\\"popularity\\\": 5216\\n  },\\n  {\\n    \\\"tag\\\": \"gypsiferous\",\\n    \\\"popularity\\\": 5212\\n  },\\n  {\\n    \\\"tag\\\": \"tourmalinic\",\\n    \\\"popularity\\\": 5208\\n  },\\n  {\\n    \\\"tag\\\": \"helleboric\",\\n    \\\"popularity\\\": 5204\\n  },\\n  {\\n    \\\"tag\\\": \"pneumograph\",\\n    \\\"popularity\\\": 5199\\n  },\\n  {\\n    \\\"tag\\\": \"Peltigeraceae\",\\n    \\\"popularity\\\": 5195\\n  },\\n  {\\n    \\\"tag\\\": \"busine\",\\n    \\\"popularity\\\": 5191\\n  },\\n  {\\n    \\\"tag\\\": \"Ailuridae\",\\n    \\\"popularity\\\": 5187\\n  },\\n  {\\n    \\\"tag\\\": \"azotate\",\\n    \\\"popularity\\\": 5183\\n  },\\n  {\\n    \\\"tag\\\": \"unlikable\",\\n    \\\"popularity\\\": 5178\\n  },\\n  {\\n    \\\"tag\\\": \"sloyd\",\\n    \\\"popularity\\\": 5174\\n  },\\n  {\\n    \\\"tag\\\": \"biblioclasm\",\\n    \\\"popularity\\\": 5170\\n  },\\n  {\\n    \\\"tag\\\": \"Seres\",\\n    \\\"popularity\\\": 5166\\n  },\\n  {\\n    \\\"tag\\\": \"unaccurateness\",\\n    \\\"popularity\\\": 5162\\n  },\\n  {\\n    \\\"tag\\\": \"scrollwise\",\\n    \\\"popularity\\\": 5157\\n  },\\n  {\\n    \\\"tag\\\": \"flandowser\",\\n    \\\"popularity\\\": 5153\\n  },\\n  {\\n    \\\"tag\\\": \"unblackened\",\\n    \\\"popularity\\\": 5149\\n  },\\n  {\\n    \\\"tag\\\": \"schistosternia\",\\n    \\\"popularity\\\": 5145\\n  },\\n  {\\n    \\\"tag\\\": \"fuse\",\\n    \\\"popularity\\\": 5141\\n  },\\n  {\\n    \\\"tag\\\": \"narthecal\",\\n    \\\"popularity\\\": 5137\\n  },\\n  {\\n    \\\"tag\\\": \"Cueva\",\\n    \\\"popularity\\\": 5133\\n  },\\n  {\\n    \\\"tag\\\": \"appositeness\",\\n    \\\"popularity\\\": 5128\\n  },\\n  {\\n    \\\"tag\\\": \"proindustrial\",\\n    \\\"popularity\\\": 5124\\n  },\\n  {\\n    \\\"tag\\\": \"dermatorrhoea\",\\n    \\\"popularity\\\": 5120\\n  },\\n  {\\n    \\\"tag\\\": \"oxyurous tendential\",\\n    \\\"popularity\\\": 5116\\n  },\\n  {\\n    \\\"tag\\\": \"isopurpurin\",\\n    \\\"popularity\\\": 5112\\n  },\\n  {\\n    \\\"tag\\\": \"impose\",\\n    \\\"popularity\\\": 5108\\n  },\\n  {\\n    \\\"tag\\\": \"wordsmanship\",\\n    \\\"popularity\\\": 5104\\n  },\\n  {\\n    \\\"tag\\\": \"saturator\",\\n    \\\"popularity\\\": 5100\\n  },\\n  {\\n    \\\"tag\\\": \"Nordicity\",\\n    \\\"popularity\\\": 5096\\n  },\\n  {\\n    \\\"tag\\\": \"interaccuse\",\\n    \\\"popularity\\\": 5092\\n  },\\n  {\\n    \\\"tag\\\": \"acridinic\",\\n    \\\"popularity\\\": 5087\\n  },\\n  {\\n    \\\"tag\\\": \"scholion\",\\n    \\\"popularity\\\": 5083\\n  },\\n  {\\n    \\\"tag\\\": \"pseudoaconitine\",\\n    \\\"popularity\\\": 5079\\n  },\\n  {\\n    \\\"tag\\\": \"doctorial\",\\n    \\\"popularity\\\": 5075\\n  },\\n  {\\n    \\\"tag\\\": \"Etchimin\",\\n    \\\"popularity\\\": 5071\\n  },\\n  {\\n    \\\"tag\\\": \"oliviform\",\\n    \\\"popularity\\\": 5067\\n  },\\n  {\\n    \\\"tag\\\": \"Pele\",\\n    \\\"popularity\\\": 5063\\n  },\\n  {\\n    \\\"tag\\\": \"Chiromantis Progymnasium\",\\n    \\\"popularity\\\": 5059\\n  },\\n  {\\n    \\\"tag\\\": \"toxosis\",\\n    \\\"popularity\\\": 5055\\n  },\\n  {\\n    \\\"tag\\\": \"spadilla\",\\n    \\\"popularity\\\": 5051\\n  },\\n  {\\n    \\\"tag\\\": \"Actinopterygii\",\\n    \\\"popularity\\\": 5047\\n  },\\n  {\\n    \\\"tag\\\": \"untiring\",\\n    \\\"popularity\\\": 5043\\n  },\\n  {\\n    \\\"tag\\\": \"butyral\",\\n    \\\"popularity\\\": 5039\\n  },\\n  {\\n    \\\"tag\\\": \"Gymnoderinae\",\\n    \\\"popularity\\\": 5035\\n  },\\n  {\\n    \\\"tag\\\": \"testudo\",\\n    \\\"popularity\\\": 5031\\n  },\\n  {\\n    \\\"tag\\\": \"frigorify\",\\n    \\\"popularity\\\": 5027\\n  },\\n  {\\n    \\\"tag\\\": \"aliency\",\\n    \\\"popularity\\\": 5023\\n  },\\n  {\\n    \\\"tag\\\": \"jargon\",\\n    \\\"popularity\\\": 5019\\n  },\\n  {\\n    \\\"tag\\\": \"counterservice\",\\n    \\\"popularity\\\": 5015\\n  },\\n  {\\n    \\\"tag\\\": \"isostrychnine\",\\n    \\\"popularity\\\": 5011\\n  },\\n  {\\n    \\\"tag\\\": \"tellership\",\\n    \\\"popularity\\\": 5007\\n  },\\n  {\\n    \\\"tag\\\": \"miscegenetic\",\\n    \\\"popularity\\\": 5003\\n  },\\n  {\\n    \\\"tag\\\": \"sorcer\",\\n    \\\"popularity\\\": 4999\\n  },\\n  {\\n    \\\"tag\\\": \"tilewright\",\\n    \\\"popularity\\\": 4995\\n  },\\n  {\\n    \\\"tag\\\": \"cyanoplastid\",\\n    \\\"popularity\\\": 4991\\n  },\\n  {\\n    \\\"tag\\\": \"fluxionally\",\\n    \\\"popularity\\\": 4987\\n  },\\n  {\\n    \\\"tag\\\": \"proudhearted\",\\n    \\\"popularity\\\": 4983\\n  },\\n  {\\n    \\\"tag\\\": \"blithely\",\\n    \\\"popularity\\\": 4979\\n  },\\n  {\\n    \\\"tag\\\": \"jestproof\",\\n    \\\"popularity\\\": 4975\\n  },\\n  {\\n    \\\"tag\\\": \"jestwise\",\\n    \\\"popularity\\\": 4971\\n  },\\n  {\\n    \\\"tag\\\": \"nonassimilable\",\\n    \\\"popularity\\\": 4967\\n  },\\n  {\\n    \\\"tag\\\": \"compurgation\",\\n    \\\"popularity\\\": 4964\\n  },\\n  {\\n    \\\"tag\\\": \"unhate\",\\n    \\\"popularity\\\": 4960\\n  },\\n  {\\n    \\\"tag\\\": \"haplodonty\",\\n    \\\"popularity\\\": 4956\\n  },\\n  {\\n    \\\"tag\\\": \"cardholder\",\\n    \\\"popularity\\\": 4952\\n  },\\n  {\\n    \\\"tag\\\": \"rainlight megohmmeter overstout\",\\n    \\\"popularity\\\": 4948\\n  },\\n  {\\n    \\\"tag\\\": \"itchless\",\\n    \\\"popularity\\\": 4944\\n  },\\n  {\\n    \\\"tag\\\": \"begiggle\",\\n    \\\"popularity\\\": 4940\\n  },\\n  {\\n    \\\"tag\\\": \"chromatosphere\",\\n    \\\"popularity\\\": 4936\\n  },\\n  {\\n    \\\"tag\\\": \"typicality\",\\n    \\\"popularity\\\": 4932\\n  },\\n  {\\n    \\\"tag\\\": \"overgrown\",\\n    \\\"popularity\\\": 4928\\n  },\\n  {\\n    \\\"tag\\\": \"envolume\",\\n    \\\"popularity\\\": 4925\\n  },\\n  {\\n    \\\"tag\\\": \"pachycholia\",\\n    \\\"popularity\\\": 4921\\n  },\\n  {\\n    \\\"tag\\\": \"passageable\",\\n    \\\"popularity\\\": 4917\\n  },\\n  {\\n    \\\"tag\\\": \"pathopoiesis\",\\n    \\\"popularity\\\": 4913\\n  },\\n  {\\n    \\\"tag\\\": \"overbreak\",\\n    \\\"popularity\\\": 4909\\n  },\\n  {\\n    \\\"tag\\\": \"satyric\",\\n    \\\"popularity\\\": 4905\\n  },\\n  {\\n    \\\"tag\\\": \"unaudited\",\\n    \\\"popularity\\\": 4901\\n  },\\n  {\\n    \\\"tag\\\": \"whimble\",\\n    \\\"popularity\\\": 4898\\n  },\\n  {\\n    \\\"tag\\\": \"pressureless\",\\n    \\\"popularity\\\": 4894\\n  },\\n  {\\n    \\\"tag\\\": \"Selene\",\\n    \\\"popularity\\\": 4890\\n  },\\n  {\\n    \\\"tag\\\": \"slithery\",\\n    \\\"popularity\\\": 4886\\n  },\\n  {\\n    \\\"tag\\\": \"nondisfigurement\",\\n    \\\"popularity\\\": 4882\\n  },\\n  {\\n    \\\"tag\\\": \"overdelicious\",\\n    \\\"popularity\\\": 4878\\n  },\\n  {\\n    \\\"tag\\\": \"Perca\",\\n    \\\"popularity\\\": 4875\\n  },\\n  {\\n    \\\"tag\\\": \"Palladium\",\\n    \\\"popularity\\\": 4871\\n  },\\n  {\\n    \\\"tag\\\": \"insagacity\",\\n    \\\"popularity\\\": 4867\\n  },\\n  {\\n    \\\"tag\\\": \"peristoma\",\\n    \\\"popularity\\\": 4863\\n  },\\n  {\\n    \\\"tag\\\": \"uncreativeness\",\\n    \\\"popularity\\\": 4859\\n  },\\n  {\\n    \\\"tag\\\": \"incomparability surfboarding\",\\n    \\\"popularity\\\": 4856\\n  },\\n  {\\n    \\\"tag\\\": \"bacillar\",\\n    \\\"popularity\\\": 4852\\n  },\\n  {\\n    \\\"tag\\\": \"ulcerative\",\\n    \\\"popularity\\\": 4848\\n  },\\n  {\\n    \\\"tag\\\": \"stychomythia\",\\n    \\\"popularity\\\": 4844\\n  },\\n  {\\n    \\\"tag\\\": \"sesma somatics nonentry\",\\n    \\\"popularity\\\": 4840\\n  },\\n  {\\n    \\\"tag\\\": \"unsepulchred\",\\n    \\\"popularity\\\": 4837\\n  },\\n  {\\n    \\\"tag\\\": \"cephalanthium\",\\n    \\\"popularity\\\": 4833\\n  },\\n  {\\n    \\\"tag\\\": \"Asiaticization\",\\n    \\\"popularity\\\": 4829\\n  },\\n  {\\n    \\\"tag\\\": \"killeen\",\\n    \\\"popularity\\\": 4825\\n  },\\n  {\\n    \\\"tag\\\": \"Pseudococcus\",\\n    \\\"popularity\\\": 4822\\n  },\\n  {\\n    \\\"tag\\\": \"untractable\",\\n    \\\"popularity\\\": 4818\\n  },\\n  {\\n    \\\"tag\\\": \"apolegamic\",\\n    \\\"popularity\\\": 4814\\n  },\\n  {\\n    \\\"tag\\\": \"hyperpnea\",\\n    \\\"popularity\\\": 4810\\n  },\\n  {\\n    \\\"tag\\\": \"martyrolatry\",\\n    \\\"popularity\\\": 4807\\n  },\\n  {\\n    \\\"tag\\\": \"Sarmatic\",\\n    \\\"popularity\\\": 4803\\n  },\\n  {\\n    \\\"tag\\\": \"nonsurface\",\\n    \\\"popularity\\\": 4799\\n  },\\n  {\\n    \\\"tag\\\": \"adjoined\",\\n    \\\"popularity\\\": 4796\\n  },\\n  {\\n    \\\"tag\\\": \"vasiform\",\\n    \\\"popularity\\\": 4792\\n  },\\n  {\\n    \\\"tag\\\": \"tastelessness\",\\n    \\\"popularity\\\": 4788\\n  },\\n  {\\n    \\\"tag\\\": \"rumbo\",\\n    \\\"popularity\\\": 4784\\n  },\\n  {\\n    \\\"tag\\\": \"subdititious\",\\n    \\\"popularity\\\": 4781\\n  },\\n  {\\n    \\\"tag\\\": \"reparticipation\",\\n    \\\"popularity\\\": 4777\\n  },\\n  {\\n    \\\"tag\\\": \"Yorkshireism\",\\n    \\\"popularity\\\": 4773\\n  },\\n  {\\n    \\\"tag\\\": \"outcrow\",\\n    \\\"popularity\\\": 4770\\n  },\\n  {\\n    \\\"tag\\\": \"casserole\",\\n    \\\"popularity\\\": 4766\\n  },\\n  {\\n    \\\"tag\\\": \"semideltaic\",\\n    \\\"popularity\\\": 4762\\n  },\\n  {\\n    \\\"tag\\\": \"freemason\",\\n    \\\"popularity\\\": 4759\\n  },\\n  {\\n    \\\"tag\\\": \"catkin\",\\n    \\\"popularity\\\": 4755\\n  },\\n  {\\n    \\\"tag\\\": \"conscient\",\\n    \\\"popularity\\\": 4751\\n  },\\n  {\\n    \\\"tag\\\": \"reliably\",\\n    \\\"popularity\\\": 4748\\n  },\\n  {\\n    \\\"tag\\\": \"Telembi\",\\n    \\\"popularity\\\": 4744\\n  },\\n  {\\n    \\\"tag\\\": \"hide\",\\n    \\\"popularity\\\": 4740\\n  },\\n  {\\n    \\\"tag\\\": \"social\",\\n    \\\"popularity\\\": 4737\\n  },\\n  {\\n    \\\"tag\\\": \"ichneutic\",\\n    \\\"popularity\\\": 4733\\n  },\\n  {\\n    \\\"tag\\\": \"polypotome blouse pentagrammatic\",\\n    \\\"popularity\\\": 4729\\n  },\\n  {\\n    \\\"tag\\\": \"airdrome pesthole\",\\n    \\\"popularity\\\": 4726\\n  },\\n  {\\n    \\\"tag\\\": \"unportended\",\\n    \\\"popularity\\\": 4722\\n  },\\n  {\\n    \\\"tag\\\": \"sheerly\",\\n    \\\"popularity\\\": 4719\\n  },\\n  {\\n    \\\"tag\\\": \"acardiac\",\\n    \\\"popularity\\\": 4715\\n  },\\n  {\\n    \\\"tag\\\": \"fetor\",\\n    \\\"popularity\\\": 4711\\n  },\\n  {\\n    \\\"tag\\\": \"storax\",\\n    \\\"popularity\\\": 4708\\n  },\\n  {\\n    \\\"tag\\\": \"syndactylic\",\\n    \\\"popularity\\\": 4704\\n  },\\n  {\\n    \\\"tag\\\": \"otiatrics\",\\n    \\\"popularity\\\": 4700\\n  },\\n  {\\n    \\\"tag\\\": \"range\",\\n    \\\"popularity\\\": 4697\\n  },\\n  {\\n    \\\"tag\\\": \"branchway\",\\n    \\\"popularity\\\": 4693\\n  },\\n  {\\n    \\\"tag\\\": \"beatific\",\\n    \\\"popularity\\\": 4690\\n  },\\n  {\\n    \\\"tag\\\": \"Rugosa\",\\n    \\\"popularity\\\": 4686\\n  },\\n  {\\n    \\\"tag\\\": \"rafty\",\\n    \\\"popularity\\\": 4682\\n  },\\n  {\\n    \\\"tag\\\": \"gapy\",\\n    \\\"popularity\\\": 4679\\n  },\\n  {\\n    \\\"tag\\\": \"heterocercal\",\\n    \\\"popularity\\\": 4675\\n  },\\n  {\\n    \\\"tag\\\": \"actinopterygious\",\\n    \\\"popularity\\\": 4672\\n  },\\n  {\\n    \\\"tag\\\": \"glauconite\",\\n    \\\"popularity\\\": 4668\\n  },\\n  {\\n    \\\"tag\\\": \"limbless priest\",\\n    \\\"popularity\\\": 4665\\n  },\\n  {\\n    \\\"tag\\\": \"chrysene\",\\n    \\\"popularity\\\": 4661\\n  },\\n  {\\n    \\\"tag\\\": \"isentropic\",\\n    \\\"popularity\\\": 4658\\n  },\\n  {\\n    \\\"tag\\\": \"lairdess\",\\n    \\\"popularity\\\": 4654\\n  },\\n  {\\n    \\\"tag\\\": \"butterhead choliambic\",\\n    \\\"popularity\\\": 4650\\n  },\\n  {\\n    \\\"tag\\\": \"hexaseme\",\\n    \\\"popularity\\\": 4647\\n  },\\n  {\\n    \\\"tag\\\": \"treeify\",\\n    \\\"popularity\\\": 4643\\n  },\\n  {\\n    \\\"tag\\\": \"coronetted fructify\",\\n    \\\"popularity\\\": 4640\\n  },\\n  {\\n    \\\"tag\\\": \"admiralty\",\\n    \\\"popularity\\\": 4636\\n  },\\n  {\\n    \\\"tag\\\": \"Flosculariidae\",\\n    \\\"popularity\\\": 4633\\n  },\\n  {\\n    \\\"tag\\\": \"limaceous\",\\n    \\\"popularity\\\": 4629\\n  },\\n  {\\n    \\\"tag\\\": \"subterconscious\",\\n    \\\"popularity\\\": 4626\\n  },\\n  {\\n    \\\"tag\\\": \"stayless\",\\n    \\\"popularity\\\": 4622\\n  },\\n  {\\n    \\\"tag\\\": \"psha\",\\n    \\\"popularity\\\": 4619\\n  },\\n  {\\n    \\\"tag\\\": \"Mediterraneanize\",\\n    \\\"popularity\\\": 4615\\n  },\\n  {\\n    \\\"tag\\\": \"impenetrably\",\\n    \\\"popularity\\\": 4612\\n  },\\n  {\\n    \\\"tag\\\": \"Myrmeleonidae\",\\n    \\\"popularity\\\": 4608\\n  },\\n  {\\n    \\\"tag\\\": \"germander\",\\n    \\\"popularity\\\": 4605\\n  },\\n  {\\n    \\\"tag\\\": \"Buri\",\\n    \\\"popularity\\\": 4601\\n  },\\n  {\\n    \\\"tag\\\": \"papyrotamia\",\\n    \\\"popularity\\\": 4598\\n  },\\n  {\\n    \\\"tag\\\": \"Toxylon\",\\n    \\\"popularity\\\": 4594\\n  },\\n  {\\n    \\\"tag\\\": \"batatilla\",\\n    \\\"popularity\\\": 4591\\n  },\\n  {\\n    \\\"tag\\\": \"fabella assumer\",\\n    \\\"popularity\\\": 4587\\n  },\\n  {\\n    \\\"tag\\\": \"macromethod\",\\n    \\\"popularity\\\": 4584\\n  },\\n  {\\n    \\\"tag\\\": \"Blechnum\",\\n    \\\"popularity\\\": 4580\\n  },\\n  {\\n    \\\"tag\\\": \"pantography\",\\n    \\\"popularity\\\": 4577\\n  },\\n  {\\n    \\\"tag\\\": \"seminovel\",\\n    \\\"popularity\\\": 4574\\n  },\\n  {\\n    \\\"tag\\\": \"disembarrassment\",\\n    \\\"popularity\\\": 4570\\n  },\\n  {\\n    \\\"tag\\\": \"bushmaking\",\\n    \\\"popularity\\\": 4567\\n  },\\n  {\\n    \\\"tag\\\": \"neurosis\",\\n    \\\"popularity\\\": 4563\\n  },\\n  {\\n    \\\"tag\\\": \"Animalia\",\\n    \\\"popularity\\\": 4560\\n  },\\n  {\\n    \\\"tag\\\": \"Bernice\",\\n    \\\"popularity\\\": 4556\\n  },\\n  {\\n    \\\"tag\\\": \"wisen\",\\n    \\\"popularity\\\": 4553\\n  },\\n  {\\n    \\\"tag\\\": \"subhymenium\",\\n    \\\"popularity\\\": 4549\\n  },\\n  {\\n    \\\"tag\\\": \"esophagomycosis\",\\n    \\\"popularity\\\": 4546\\n  },\\n  {\\n    \\\"tag\\\": \"wireworks\",\\n    \\\"popularity\\\": 4543\\n  },\\n  {\\n    \\\"tag\\\": \"Sabellidae\",\\n    \\\"popularity\\\": 4539\\n  },\\n  {\\n    \\\"tag\\\": \"fustianish\",\\n    \\\"popularity\\\": 4536\\n  },\\n  {\\n    \\\"tag\\\": \"professively\",\\n    \\\"popularity\\\": 4532\\n  },\\n  {\\n    \\\"tag\\\": \"overcorruptly\",\\n    \\\"popularity\\\": 4529\\n  },\\n  {\\n    \\\"tag\\\": \"overcreep\",\\n    \\\"popularity\\\": 4526\\n  },\\n  {\\n    \\\"tag\\\": \"Castilloa\",\\n    \\\"popularity\\\": 4522\\n  },\\n  {\\n    \\\"tag\\\": \"forelady Georgie\",\\n    \\\"popularity\\\": 4519\\n  },\\n  {\\n    \\\"tag\\\": \"outsider\",\\n    \\\"popularity\\\": 4515\\n  },\\n  {\\n    \\\"tag\\\": \"Enukki\",\\n    \\\"popularity\\\": 4512\\n  },\\n  {\\n    \\\"tag\\\": \"gypsy\",\\n    \\\"popularity\\\": 4509\\n  },\\n  {\\n    \\\"tag\\\": \"Passamaquoddy\",\\n    \\\"popularity\\\": 4505\\n  },\\n  {\\n    \\\"tag\\\": \"reposit\",\\n    \\\"popularity\\\": 4502\\n  },\\n  {\\n    \\\"tag\\\": \"overtenderness\",\\n    \\\"popularity\\\": 4499\\n  },\\n  {\\n    \\\"tag\\\": \"keratome\",\\n    \\\"popularity\\\": 4495\\n  },\\n  {\\n    \\\"tag\\\": \"interclavicular hypermonosyllable Susanna\",\\n    \\\"popularity\\\": 4492\\n  },\\n  {\\n    \\\"tag\\\": \"mispropose\",\\n    \\\"popularity\\\": 4489\\n  },\\n  {\\n    \\\"tag\\\": \"Membranipora\",\\n    \\\"popularity\\\": 4485\\n  },\\n  {\\n    \\\"tag\\\": \"lampad\",\\n    \\\"popularity\\\": 4482\\n  },\\n  {\\n    \\\"tag\\\": \"header\",\\n    \\\"popularity\\\": 4479\\n  },\\n  {\\n    \\\"tag\\\": \"triseriate\",\\n    \\\"popularity\\\": 4475\\n  },\\n  {\\n    \\\"tag\\\": \"distrainment\",\\n    \\\"popularity\\\": 4472\\n  },\\n  {\\n    \\\"tag\\\": \"staphyloplastic\",\\n    \\\"popularity\\\": 4469\\n  },\\n  {\\n    \\\"tag\\\": \"outscour\",\\n    \\\"popularity\\\": 4465\\n  },\\n  {\\n    \\\"tag\\\": \"tallowmaking\",\\n    \\\"popularity\\\": 4462\\n  },\\n  {\\n    \\\"tag\\\": \"plugger\",\\n    \\\"popularity\\\": 4459\\n  },\\n  {\\n    \\\"tag\\\": \"fashionize\",\\n    \\\"popularity\\\": 4455\\n  },\\n  {\\n    \\\"tag\\\": \"puzzle\",\\n    \\\"popularity\\\": 4452\\n  },\\n  {\\n    \\\"tag\\\": \"imbrue\",\\n    \\\"popularity\\\": 4449\\n  },\\n  {\\n    \\\"tag\\\": \"osteoblast\",\\n    \\\"popularity\\\": 4445\\n  },\\n  {\\n    \\\"tag\\\": \"Hydrocores\",\\n    \\\"popularity\\\": 4442\\n  },\\n  {\\n    \\\"tag\\\": \"Lutra\",\\n    \\\"popularity\\\": 4439\\n  },\\n  {\\n    \\\"tag\\\": \"upridge scarfy\",\\n    \\\"popularity\\\": 4435\\n  },\\n  {\\n    \\\"tag\\\": \"ancon taffle\",\\n    \\\"popularity\\\": 4432\\n  },\\n  {\\n    \\\"tag\\\": \"impest\",\\n    \\\"popularity\\\": 4429\\n  },\\n  {\\n    \\\"tag\\\": \"uncollatedness\",\\n    \\\"popularity\\\": 4426\\n  },\\n  {\\n    \\\"tag\\\": \"hypersensitize\",\\n    \\\"popularity\\\": 4422\\n  },\\n  {\\n    \\\"tag\\\": \"autographically\",\\n    \\\"popularity\\\": 4419\\n  },\\n  {\\n    \\\"tag\\\": \"louther\",\\n    \\\"popularity\\\": 4416\\n  },\\n  {\\n    \\\"tag\\\": \"Ollie\",\\n    \\\"popularity\\\": 4413\\n  },\\n  {\\n    \\\"tag\\\": \"recompensate\",\\n    \\\"popularity\\\": 4409\\n  },\\n  {\\n    \\\"tag\\\": \"Shan\",\\n    \\\"popularity\\\": 4406\\n  },\\n  {\\n    \\\"tag\\\": \"brachycnemic\",\\n    \\\"popularity\\\": 4403\\n  },\\n  {\\n    \\\"tag\\\": \"Carinatae\",\\n    \\\"popularity\\\": 4399\\n  },\\n  {\\n    \\\"tag\\\": \"geotherm\",\\n    \\\"popularity\\\": 4396\\n  },\\n  {\\n    \\\"tag\\\": \"sawback\",\\n    \\\"popularity\\\": 4393\\n  },\\n  {\\n    \\\"tag\\\": \"Novatianist\",\\n    \\\"popularity\\\": 4390\\n  },\\n  {\\n    \\\"tag\\\": \"reapproach\",\\n    \\\"popularity\\\": 4387\\n  },\\n  {\\n    \\\"tag\\\": \"myelopoietic\",\\n    \\\"popularity\\\": 4383\\n  },\\n  {\\n    \\\"tag\\\": \"cyanin\",\\n    \\\"popularity\\\": 4380\\n  },\\n  {\\n    \\\"tag\\\": \"unsmutted\",\\n    \\\"popularity\\\": 4377\\n  },\\n  {\\n    \\\"tag\\\": \"nonpapist\",\\n    \\\"popularity\\\": 4374\\n  },\\n  {\\n    \\\"tag\\\": \"transbaikalian\",\\n    \\\"popularity\\\": 4370\\n  },\\n  {\\n    \\\"tag\\\": \"connately\",\\n    \\\"popularity\\\": 4367\\n  },\\n  {\\n    \\\"tag\\\": \"tenderize iterance\",\\n    \\\"popularity\\\": 4364\\n  },\\n  {\\n    \\\"tag\\\": \"hydrostatical\",\\n    \\\"popularity\\\": 4361\\n  },\\n  {\\n    \\\"tag\\\": \"unflag\",\\n    \\\"popularity\\\": 4358\\n  },\\n  {\\n    \\\"tag\\\": \"translate\",\\n    \\\"popularity\\\": 4354\\n  },\\n  {\\n    \\\"tag\\\": \"Scorzonera\",\\n    \\\"popularity\\\": 4351\\n  },\\n  {\\n    \\\"tag\\\": \"uncomforted\",\\n    \\\"popularity\\\": 4348\\n  },\\n  {\\n    \\\"tag\\\": \"risser varied\",\\n    \\\"popularity\\\": 4345\\n  },\\n  {\\n    \\\"tag\\\": \"plumbate\",\\n    \\\"popularity\\\": 4342\\n  },\\n  {\\n    \\\"tag\\\": \"Usneaceae\",\\n    \\\"popularity\\\": 4338\\n  },\\n  {\\n    \\\"tag\\\": \"fohat\",\\n    \\\"popularity\\\": 4335\\n  },\\n  {\\n    \\\"tag\\\": \"slagging\",\\n    \\\"popularity\\\": 4332\\n  },\\n  {\\n    \\\"tag\\\": \"superserious\",\\n    \\\"popularity\\\": 4329\\n  },\\n  {\\n    \\\"tag\\\": \"theocracy\",\\n    \\\"popularity\\\": 4326\\n  },\\n  {\\n    \\\"tag\\\": \"valonia\",\\n    \\\"popularity\\\": 4323\\n  },\\n  {\\n    \\\"tag\\\": \"Sapindales\",\\n    \\\"popularity\\\": 4319\\n  },\\n  {\\n    \\\"tag\\\": \"palaeozoologist\",\\n    \\\"popularity\\\": 4316\\n  },\\n  {\\n    \\\"tag\\\": \"yalb\",\\n    \\\"popularity\\\": 4313\\n  },\\n  {\\n    \\\"tag\\\": \"unviewed\",\\n    \\\"popularity\\\": 4310\\n  },\\n  {\\n    \\\"tag\\\": \"polyarteritis\",\\n    \\\"popularity\\\": 4307\\n  },\\n  {\\n    \\\"tag\\\": \"vectorial\",\\n    \\\"popularity\\\": 4304\\n  },\\n  {\\n    \\\"tag\\\": \"skimpingly\",\\n    \\\"popularity\\\": 4301\\n  },\\n  {\\n    \\\"tag\\\": \"athort\",\\n    \\\"popularity\\\": 4297\\n  },\\n  {\\n    \\\"tag\\\": \"tribofluorescence\",\\n    \\\"popularity\\\": 4294\\n  },\\n  {\\n    \\\"tag\\\": \"benzonitrol\",\\n    \\\"popularity\\\": 4291\\n  },\\n  {\\n    \\\"tag\\\": \"swiller subobtuse subjacency\",\\n    \\\"popularity\\\": 4288\\n  },\\n  {\\n    \\\"tag\\\": \"uncompassed\",\\n    \\\"popularity\\\": 4285\\n  },\\n  {\\n    \\\"tag\\\": \"cacochymia\",\\n    \\\"popularity\\\": 4282\\n  },\\n  {\\n    \\\"tag\\\": \"commensalist butadiene\",\\n    \\\"popularity\\\": 4279\\n  },\\n  {\\n    \\\"tag\\\": \"culpable\",\\n    \\\"popularity\\\": 4276\\n  },\\n  {\\n    \\\"tag\\\": \"contributive\",\\n    \\\"popularity\\\": 4273\\n  },\\n  {\\n    \\\"tag\\\": \"attemperately\",\\n    \\\"popularity\\\": 4269\\n  },\\n  {\\n    \\\"tag\\\": \"spelt\",\\n    \\\"popularity\\\": 4266\\n  },\\n  {\\n    \\\"tag\\\": \"exoneration\",\\n    \\\"popularity\\\": 4263\\n  },\\n  {\\n    \\\"tag\\\": \"antivivisectionist\",\\n    \\\"popularity\\\": 4260\\n  },\\n  {\\n    \\\"tag\\\": \"granitification\",\\n    \\\"popularity\\\": 4257\\n  },\\n  {\\n    \\\"tag\\\": \"palladize\",\\n    \\\"popularity\\\": 4254\\n  },\\n  {\\n    \\\"tag\\\": \"marksmanship\",\\n    \\\"popularity\\\": 4251\\n  },\\n  {\\n    \\\"tag\\\": \"bullydom\",\\n    \\\"popularity\\\": 4248\\n  },\\n  {\\n    \\\"tag\\\": \"spirality\",\\n    \\\"popularity\\\": 4245\\n  },\\n  {\\n    \\\"tag\\\": \"caliginous\",\\n    \\\"popularity\\\": 4242\\n  },\\n  {\\n    \\\"tag\\\": \"reportedly\",\\n    \\\"popularity\\\": 4239\\n  },\\n  {\\n    \\\"tag\\\": \"polyad\",\\n    \\\"popularity\\\": 4236\\n  },\\n  {\\n    \\\"tag\\\": \"arthroempyesis\",\\n    \\\"popularity\\\": 4233\\n  },\\n  {\\n    \\\"tag\\\": \"semibay facultatively\",\\n    \\\"popularity\\\": 4229\\n  },\\n  {\\n    \\\"tag\\\": \"metastatically\",\\n    \\\"popularity\\\": 4226\\n  },\\n  {\\n    \\\"tag\\\": \"prophetically\",\\n    \\\"popularity\\\": 4223\\n  },\\n  {\\n    \\\"tag\\\": \"Linguatula elapid\",\\n    \\\"popularity\\\": 4220\\n  },\\n  {\\n    \\\"tag\\\": \"pyknatom\",\\n    \\\"popularity\\\": 4217\\n  },\\n  {\\n    \\\"tag\\\": \"centimeter\",\\n    \\\"popularity\\\": 4214\\n  },\\n  {\\n    \\\"tag\\\": \"mensurate\",\\n    \\\"popularity\\\": 4211\\n  },\\n  {\\n    \\\"tag\\\": \"migraine\",\\n    \\\"popularity\\\": 4208\\n  },\\n  {\\n    \\\"tag\\\": \"pentagamist\",\\n    \\\"popularity\\\": 4205\\n  },\\n  {\\n    \\\"tag\\\": \"querken\",\\n    \\\"popularity\\\": 4202\\n  },\\n  {\\n    \\\"tag\\\": \"ambulance\",\\n    \\\"popularity\\\": 4199\\n  },\\n  {\\n    \\\"tag\\\": \"Stokavian\",\\n    \\\"popularity\\\": 4196\\n  },\\n  {\\n    \\\"tag\\\": \"malvasian\",\\n    \\\"popularity\\\": 4193\\n  },\\n  {\\n    \\\"tag\\\": \"uncouthsome\",\\n    \\\"popularity\\\": 4190\\n  },\\n  {\\n    \\\"tag\\\": \"readable\",\\n    \\\"popularity\\\": 4187\\n  },\\n  {\\n    \\\"tag\\\": \"enlodge\",\\n    \\\"popularity\\\": 4184\\n  },\\n  {\\n    \\\"tag\\\": \"plasterwise Appendiculariidae perspectograph\",\\n    \\\"popularity\\\": 4181\\n  },\\n  {\\n    \\\"tag\\\": \"inkweed\",\\n    \\\"popularity\\\": 4178\\n  },\\n  {\\n    \\\"tag\\\": \"streep\",\\n    \\\"popularity\\\": 4175\\n  },\\n  {\\n    \\\"tag\\\": \"diadelphian cultured\",\\n    \\\"popularity\\\": 4172\\n  },\\n  {\\n    \\\"tag\\\": \"hymenopterous\",\\n    \\\"popularity\\\": 4169\\n  },\\n  {\\n    \\\"tag\\\": \"unexorableness\",\\n    \\\"popularity\\\": 4166\\n  },\\n  {\\n    \\\"tag\\\": \"cascaron\",\\n    \\\"popularity\\\": 4163\\n  },\\n  {\\n    \\\"tag\\\": \"undaintiness\",\\n    \\\"popularity\\\": 4160\\n  },\\n  {\\n    \\\"tag\\\": \"Curtana\",\\n    \\\"popularity\\\": 4157\\n  },\\n  {\\n    \\\"tag\\\": \"scurvied\",\\n    \\\"popularity\\\": 4154\\n  },\\n  {\\n    \\\"tag\\\": \"molluscoidal\",\\n    \\\"popularity\\\": 4151\\n  },\\n  {\\n    \\\"tag\\\": \"yurt\",\\n    \\\"popularity\\\": 4148\\n  },\\n  {\\n    \\\"tag\\\": \"deciduitis\",\\n    \\\"popularity\\\": 4145\\n  },\\n  {\\n    \\\"tag\\\": \"creephole\",\\n    \\\"popularity\\\": 4142\\n  },\\n  {\\n    \\\"tag\\\": \"quatrefeuille\",\\n    \\\"popularity\\\": 4139\\n  },\\n  {\\n    \\\"tag\\\": \"bicapitate adenomatome\",\\n    \\\"popularity\\\": 4136\\n  },\\n  {\\n    \\\"tag\\\": \"damassin\",\\n    \\\"popularity\\\": 4134\\n  },\\n  {\\n    \\\"tag\\\": \"planching\",\\n    \\\"popularity\\\": 4131\\n  },\\n  {\\n    \\\"tag\\\": \"dashedly inferential\",\\n    \\\"popularity\\\": 4128\\n  },\\n  {\\n    \\\"tag\\\": \"lobe\",\\n    \\\"popularity\\\": 4125\\n  },\\n  {\\n    \\\"tag\\\": \"Hyrachyus\",\\n    \\\"popularity\\\": 4122\\n  },\\n  {\\n    \\\"tag\\\": \"knab\",\\n    \\\"popularity\\\": 4119\\n  },\\n  {\\n    \\\"tag\\\": \"discohexaster\",\\n    \\\"popularity\\\": 4116\\n  },\\n  {\\n    \\\"tag\\\": \"malign\",\\n    \\\"popularity\\\": 4113\\n  },\\n  {\\n    \\\"tag\\\": \"pedagoguism\",\\n    \\\"popularity\\\": 4110\\n  },\\n  {\\n    \\\"tag\\\": \"shrubbery\",\\n    \\\"popularity\\\": 4107\\n  },\\n  {\\n    \\\"tag\\\": \"undershrub\",\\n    \\\"popularity\\\": 4104\\n  },\\n  {\\n    \\\"tag\\\": \"bureaucrat\",\\n    \\\"popularity\\\": 4101\\n  },\\n  {\\n    \\\"tag\\\": \"pantaleon\",\\n    \\\"popularity\\\": 4098\\n  },\\n  {\\n    \\\"tag\\\": \"mesoventral\",\\n    \\\"popularity\\\": 4096\\n  }]';\n\
+\n\
+var log2 = Math.log(2);\n\
+var tagInfo = tagInfoJSON.parseJSON(function(a, b) { if (a == \"popularity\") { return Math.log(b) / log2; } else {return b; } });\n\
+\n\
+function makeTagCloud(tagInfo)\n\
+{\n\
+    var output = '<div class=\"tagCloud\" style=\"width: 100%\">';\n\
+\n\
+    tagInfo.sort(function(a, b) { if (a.tag < b.tag) { return -1; } else if (a.tag == b.tag) { return 0; } else return 1; });\n\
+\n\
+    for (var i = 0; i < tagInfo.length; i++) {\n\
+        var tag = tagInfo[i].tag;\n\
+\n\
+        var validates = true;\n\
+        for (var j = 0; j < tag.length; j++) {\n\
+            var ch = tag.charCodeAt(j);\n\
+            if (ch < 0x20 || ch >= 0x7f) {\n\
+                validates = false;\n\
+                break;\n\
+            }\n\
+        }\n\
+\n\
+        if (!validates)\n\
+            continue;\n\
+\n\
+        var url = \"http://example.com/tag/\" + tag.replace(\" \", \"\").toLowerCase();\n\
+        var popularity = tagInfo[i].popularity;\n\
+        var color = 'rgb(' + Math.floor(255 * (popularity - 12) / 20) + ', 0, 255)';\n\
+        output += ' <a href=\"' + url + '\" style=\"font-size: ' + popularity + 'px; color: ' + color + '\">' + tag + '</a> \\n';\n\
+    }\n\
+\n\
+    output += '</div>';\n\
+    output.replace(\" \", \"&nbsp;\");\n\
+\n\
+    return output;\n\
+}\n\
+\n\
+var tagcloud = makeTagCloud(tagInfo);\n\
+tagInfo = null;\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider string-unpack-code</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>string-unpack-code</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// This test case unpacks the compressed code for the MochiKit,\n\
+// jQuery, Dojo and Prototype JavaScript libraries.\n\
+\n\
+/***\n\
+    MochiKit.MochiKit 1.3.1 : PACKED VERSION\n\
+    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please\n\
+    diff against the source tree, not this file.\n\
+\n\
+    See <http://mochikit.com/> for documentation, downloads, license, etc.\n\
+\n\
+    (c) 2005 Bob Ippolito.  All rights Reserved.\n\
+***/\n\
+\n\
+for (var i = 0; i < 2; i++) {\n\
+\n\
+var decompressedMochiKit = function(p,a,c,k,e,d){e=function(c){return(c<a?\"\":e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)d[e(c)]=k[c]||e(c);k=[function(e){return d[e]}];e=function(){return'\\\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c]);return p}('if(H(1q)!=\"L\"){1q.2X(\"B.J\")}if(H(B)==\"L\"){B={}}if(H(B.J)==\"L\"){B.J={}}B.J.1Y=\"1.3.1\";B.J.1r=\"B.J\";B.J.2l=G(7V,vR){if(7V===O){7V={}}R(u i=1;i<M.K;i++){u o=M[i];if(H(o)!=\"L\"&&o!==O){R(u k in o){7V[k]=o[k]}}}F 7V};B.J.2l(B.J,{1K:G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"},1l:G(){F D.1K()},4f:G(n){if(M.K===0){n=1}F G(){F n++}},4L:G(mw){u me=M.2U;if(M.K==1){me.1U=mw;F Y me()}},bg:G(vQ){u X=[];u m=B.J;u aw=m.1R(O,M);1M(aw.K){u o=aw.2P();if(o&&H(o)==\"3n\"&&H(o.K)==\"2y\"){R(u i=o.K-1;i>=0;i--){aw.e9(o[i])}}N{X.1c(o)}}F X},1R:G(7U,1i,av){if(!av){av=0}if(1i){u l=1i.K;if(H(l)!=\"2y\"){if(H(B.15)!=\"L\"){1i=B.15.2G(1i);l=1i.K}N{14 Y 3p(\"au 2E an at-as 3W B.15 2E ar\")}}if(!7U){7U=[]}R(u i=av;i<l;i++){7U.1c(1i[i])}}F 7U},8Z:G(5g,1i){if(5g===O){5g={}}R(u i=1;i<M.K;i++){u o=M[i];if(H(o)!=\"L\"&&o!==O){R(u k in o){u v=o[k];if(H(5g[k])==\"3n\"&&H(v)==\"3n\"){M.2U(5g[k],v)}N{5g[k]=v}}}}F 5g},lO:G(6c,1i){if(6c===O){6c={}}R(u i=1;i<M.K;i++){u o=M[i];R(u k in o){if(!(k in 6c)){6c[k]=o[k]}}}F 6c},lN:G(1i){u fj=[];R(u mv in 1i){fj.1c(mv)}F fj},lM:G(1i){u fh=[];u e;R(u fi in 1i){u v;1f{v=1i[fi]}1e(e){2V}fh.1c([fi,v])}F fh},jq:G(fg,ff,fe){fe.1U=Y B.J.5a(fg.1r+\".\"+ff);fg[ff]=fe},4i:{7L:G(a){F!!a},vP:G(a){F!a},eE:G(a){F a},2E:G(a){F~a},vO:G(a){F-a},vN:G(a,b){F a+b},vM:G(a,b){F a-b},4u:G(a,b){F a/b},vL:G(a,b){F a%b},vK:G(a,b){F a*b},3W:G(a,b){F a&b},or:G(a,b){F a|b},vJ:G(a,b){F a^b},vI:G(a,b){F a<<b},vH:G(a,b){F a>>b},vG:G(a,b){F a>>>b},eq:G(a,b){F a==b},ne:G(a,b){F a!=b},gt:G(a,b){F a>b},ge:G(a,b){F a>=b},lt:G(a,b){F a<b},le:G(a,b){F a<=b},vF:G(a,b){F B.J.2f(a,b)===0},vE:G(a,b){F B.J.2f(a,b)!==0},vD:G(a,b){F B.J.2f(a,b)==1},vC:G(a,b){F B.J.2f(a,b)!=-1},vB:G(a,b){F B.J.2f(a,b)==-1},vA:G(a,b){F B.J.2f(a,b)!=1},vz:G(a,b){F a&&b},vy:G(a,b){F a||b},vx:G(a,b){F b in a}},24:G(mu){F G(){F D[mu].1w(D,M)}},lL:G(mt){F G(a9){F a9[mt]}},66:G(){u fd={};R(u i=0;i<M.K;i++){u 6b=M[i];fd[6b]=6b}F G(){R(u i=0;i<M.K;i++){if(!(H(M[i])in fd)){F 1m}}F 1h}},lJ:G(){R(u i=0;i<M.K;i++){if(M[i]!==O){F 1m}}F 1h},lK:G(){R(u i=0;i<M.K;i++){u o=M[i];if(!(H(o)==\"L\"||o===O)){F 1m}}F 1h},lI:G(1i){F!B.J.7e.1w(D,M)},7e:G(1i){R(u i=0;i<M.K;i++){u o=M[i];if(!(o&&o.K)){F 1m}}F 1h},3A:G(){R(u i=0;i<M.K;i++){u o=M[i];u 6b=H(o);if((6b!=\"3n\"&&!(6b==\"G\"&&H(o.vw)==\"G\"))||o===O||H(o.K)!=\"2y\"){F 1m}}F 1h},eN:G(){R(u i=0;i<M.K;i++){u o=M[i];if(H(o)!=\"3n\"||o===O||H(o.9P)!=\"G\"){F 1m}}F 1h},lH:G(fn){if(fn===O){F B.J.1R(O,M,1)}u fc=[];R(u i=1;i<M.K;i++){fc.1c(fn(M[i]))}F fc},2r:G(fn,1g){u m=B.J;u 6a=B.15;u fb=m.3A;if(M.K<=2){if(!fb(1g)){if(6a){1g=6a.2G(1g);if(fn===O){F 1g}}N{14 Y 3p(\"au 2E an at-as 3W B.15 2E ar\")}}if(fn===O){F m.1R(O,1g)}u 69=[];R(u i=0;i<1g.K;i++){69.1c(fn(1g[i]))}F 69}N{if(fn===O){fn=7o}u 7T=O;R(i=1;i<M.K;i++){if(!fb(M[i])){if(6a){F 6a.2G(6a.4c.1w(O,M))}N{14 Y 3p(\"au 2E an at-as 3W B.15 2E ar\")}}u l=M[i].K;if(7T===O||7T>l){7T=l}}69=[];R(i=0;i<7T;i++){u fa=[];R(u j=1;j<M.K;j++){fa.1c(M[j][i])}69.1c(fn.1w(D,fa))}F 69}},lG:G(fn){u f9=[];if(fn===O){fn=B.J.4i.7L}R(u i=1;i<M.K;i++){u o=M[i];if(fn(o)){f9.1c(o)}}F f9},47:G(fn,1g,7S){u aq=[];u m=B.J;if(!m.3A(1g)){if(B.15){1g=B.15.2G(1g)}N{14 Y 3p(\"au 2E an at-as 3W B.15 2E ar\")}}if(fn===O){fn=m.4i.7L}if(H(7o.1U.47)==\"G\"){F 7o.1U.47.cz(1g,fn,7S)}N{if(H(7S)==\"L\"||7S===O){R(u i=0;i<1g.K;i++){u o=1g[i];if(fn(o)){aq.1c(o)}}}N{R(i=0;i<1g.K;i++){o=1g[i];if(fn.cz(7S,o)){aq.1c(o)}}}}F aq},mq:G(7R){F G(){hd(M.K){3j 0:F 7R();3j 1:F 7R(M[0]);3j 2:F 7R(M[0],M[1]);3j 3:F 7R(M[0],M[1],M[2])}u f8=[];R(u i=0;i<M.K;i++){f8.1c(\"M[\"+i+\"]\")}F dB(\"(1A(\"+f8.2b(\",\")+\"))\")}},lv:G(mr,ms){u m=B.J;F m.1O.1w(D,m.1R([ms,mr],M,2))},1O:G(3c,4o){if(H(3c)==\"1n\"){3c=4o[3c]}u ao=3c.f5;u 5f=3c.am;u f6=3c.f7;u m=B.J;if(H(3c)==\"G\"&&H(3c.1w)==\"L\"){3c=m.mq(3c)}if(H(ao)!=\"G\"){ao=3c}if(H(4o)!=\"L\"){f6=4o}if(H(5f)==\"L\"){5f=[]}N{5f=5f.9T()}m.1R(5f,M,2);u 7Q=G(){u ap=M;u me=M.2U;if(me.am.K>0){ap=m.2o(me.am,ap)}u 4o=me.f7;if(!4o){4o=D}F me.f5.1w(4o,ap)};7Q.f7=f6;7Q.f5=ao;7Q.am=5f;F 7Q},lF:G(7P){u mp=B.J.1O;R(u k in 7P){u f4=7P[k];if(H(f4)==\"G\"){7P[k]=mp(f4,7P)}}},5u:G(mo,mn,ml,mk){B.J.ae.5M(mo,mn,ml,mk)},mj:{\"5L\":1h,\"1n\":1h,\"2y\":1h},2f:G(a,b){if(a==b){F 0}u f3=(H(a)==\"L\"||a===O);u f2=(H(b)==\"L\"||b===O);if(f3&&f2){F 0}N{if(f3){F-1}N{if(f2){F 1}}}u m=B.J;u f1=m.mj;if(!(H(a)in f1&&H(b)in f1)){1f{F m.ae.3C(a,b)}1e(e){if(e!=m.4d){14 e}}}if(a<b){F-1}N{if(a>b){F 1}}u f0=m.U;14 Y 3p(f0(a)+\" 3W \"+f0(b)+\" 9v 2E be vv\")},eM:G(a,b){F B.J.2f(a.9P(),b.9P())},eL:G(a,b){u mi=B.J.2f;u 7O=a.K;u al=0;if(7O>b.K){al=1;7O=b.K}N{if(7O<b.K){al=-1}}R(u i=0;i<7O;i++){u 4j=mi(a[i],b[i]);if(4j){F 4j}}F al},7M:G(mh,mg,mf,md){B.J.ad.5M(mh,mg,mf,md)},U:G(o){if(H(o)==\"L\"){F\"L\"}N{if(o===O){F\"O\"}}1f{if(H(o.1K)==\"G\"){F o.1K()}N{if(H(o.U)==\"G\"&&o.U!=M.2U){F o.U()}}F B.J.ad.3C(o)}1e(e){if(H(o.1r)==\"1n\"&&(o.1l==cZ.1U.1l||o.1l==vu.1U.1l)){F o.1r}}1f{u eZ=(o+\"\")}1e(e){F\"[\"+H(o)+\"]\"}if(H(o)==\"G\"){o=eZ.23(/^\\\\s+/,\"\");u 5n=o.2A(\"{\");if(5n!=-1){o=o.3H(0,5n)+\"{...}\"}}F eZ},eK:G(o){u m=B.J;F\"[\"+m.2r(m.U,o).2b(\", \")+\"]\"},ac:G(o){F(\"\\\\\"\"+o.23(/([\"\\\\\\\\])/g,\"\\\\\\\\$1\")+\"\\\\\"\").23(/[\\\\f]/g,\"\\\\\\\\f\").23(/[\\\\b]/g,\"\\\\\\\\b\").23(/[\\\\n]/g,\"\\\\\\\\n\").23(/[\\\\t]/g,\"\\\\\\\\t\").23(/[\\\\r]/g,\"\\\\\\\\r\")},eJ:G(o){F o+\"\"},ly:G(mc,mb,ma,m9){B.J.ab.5M(mc,mb,ma,m9)},lx:G(){F dB(\"(\"+M[0]+\")\")},lz:G(o){u 5e=H(o);if(5e==\"L\"){F\"L\"}N{if(5e==\"2y\"||5e==\"5L\"){F o+\"\"}N{if(o===O){F\"O\"}}}u m=B.J;u eY=m.ac;if(5e==\"1n\"){F eY(o)}u me=M.2U;u 3S;if(H(o.m8)==\"G\"){3S=o.m8();if(o!==3S){F me(3S)}}if(H(o.m7)==\"G\"){3S=o.m7();if(o!==3S){F me(3S)}}if(5e!=\"G\"&&H(o.K)==\"2y\"){u X=[];R(u i=0;i<o.K;i++){u 2i=me(o[i]);if(H(2i)!=\"1n\"){2i=\"L\"}X.1c(2i)}F\"[\"+X.2b(\", \")+\"]\"}1f{3S=m.ab.3C(o);F me(3S)}1e(e){if(e!=m.4d){14 e}}if(5e==\"G\"){F O}X=[];R(u k in o){u ak;if(H(k)==\"2y\"){ak=\"\\\\\"\"+k+\"\\\\\"\"}N{if(H(k)==\"1n\"){ak=eY(k)}N{2V}}2i=me(o[k]);if(H(2i)!=\"1n\"){2V}X.1c(ak+\":\"+2i)}F\"{\"+X.2b(\", \")+\"}\"},lE:G(a,b){F(B.J.2f(a,b)===0)},lD:G(eX,4n){if(eX.K!=4n.K){F 1m}F(B.J.2f(eX,4n)===0)},2o:G(){u eW=[];u m6=B.J.1R;R(u i=0;i<M.K;i++){m6(eW,M[i])}F eW},eR:G(2h){u m=B.J;u eU=m.2f;if(M.K==1){F G(a,b){F eU(a[2h],b[2h])}}u eV=m.1R(O,M);F G(a,b){u aj=0;R(u i=0;(aj===0)&&(i<eV.K);i++){u 2h=eV[i];aj=eU(a[2h],b[2h])}F aj}},lC:G(2h){u m5=B.J.eR.1w(D,M);F G(a,b){F m5(b,a)}},2z:G(m4){u m=B.J;F m.1O.1w(D,m.1R([m4,L],M,1))},67:G(m0,1g){if(1g.K===0){F O}u ai=1g[0];u m3=B.J.2f;R(u i=1;i<1g.K;i++){u o=1g[i];if(m3(o,ai)==m0){ai=o}}F ai},lB:G(){F B.J.67(1,M)},lA:G(){F B.J.67(-1,M)},bi:G(1g,lY,lZ,3B){if(H(3B)==\"L\"||3B===O){3B=1g.K}R(u i=(lZ||0);i<3B;i++){if(1g[i]===lY){F i}}F-1},eO:G(1g,lW,lX,3B){if(H(3B)==\"L\"||3B===O){3B=1g.K}u 4j=B.J.2f;R(u i=(lX||0);i<3B;i++){if(4j(1g[i],lW)===0){F i}}F-1},d4:G(1j,lV){u ah=[1j];u lU=B.J.1R;1M(ah.K){u X=lV(ah.2P());if(X){lU(ah,X)}}},3f:G(ag){u 2w=ag.1r;if(H(2w)==\"L\"){2w=\"\"}N{2w=2w+\".\"}R(u 1b in ag){u o=ag[1b];if(H(o)==\"G\"&&H(o.1r)==\"L\"){1f{o.1r=2w+1b}1e(e){}}}},dw:G(3s,68){if(H(B.S)!=\"L\"&&M.K==1&&(H(3s)==\"1n\"||(H(3s.3T)!=\"L\"&&3s.3T>0))){u kv=B.S.d5(3s);3s=kv[0];68=kv[1]}N{if(M.K==1){u o=3s;3s=[];68=[];R(u k in o){u v=o[k];if(H(v)!=\"G\"){3s.1c(k);68.1c(v)}}}}u W=[];u lT=28.2a(3s.K,68.K);u eT=B.J.af;R(u i=0;i<lT;i++){v=68[i];if(H(v)!=\"L\"&&v!==O){W.1c(eT(3s[i])+\"=\"+eT(v))}}F W.2b(\"&\")},lw:G(lS,lQ){u 7N=lS.23(/\\\\+/g,\"%20\").2R(\"&\");u o={};u 5d;if(H(lR)!=\"L\"){5d=lR}N{5d=vt}if(lQ){R(u i=0;i<7N.K;i++){u 2n=7N[i].2R(\"=\");u 1b=5d(2n[0]);u 4n=o[1b];if(!(4n 2C 7o)){4n=[];o[1b]=4n}4n.1c(5d(2n[1]))}}N{R(i=0;i<7N.K;i++){2n=7N[i].2R(\"=\");o[5d(2n[0])]=5d(2n[1])}}F o}});B.J.4a=G(){D.4m=[]};B.J.4a.1U={5M:G(1b,eS,3y,lP){if(lP){D.4m.e9([1b,eS,3y])}N{D.4m.1c([1b,eS,3y])}},3C:G(){R(u i=0;i<D.4m.K;i++){u 2n=D.4m[i];if(2n[1].1w(D,M)){F 2n[2].1w(D,M)}}14 B.J.4d},vs:G(1b){R(u i=0;i<D.4m.K;i++){u 2n=D.4m[i];if(2n[0]==1b){D.4m.4y(i,1);F 1h}}F 1m}};B.J.1z=[\"4f\",\"4L\",\"1R\",\"2l\",\"8Z\",\"lO\",\"lN\",\"lM\",\"5a\",\"4i\",\"24\",\"lL\",\"66\",\"lo\",\"ln\",\"lK\",\"lJ\",\"lI\",\"7e\",\"3A\",\"eN\",\"lH\",\"2r\",\"lG\",\"47\",\"1O\",\"lF\",\"4d\",\"4a\",\"5u\",\"2f\",\"7M\",\"U\",\"lE\",\"lD\",\"2o\",\"eR\",\"lC\",\"2z\",\"lm\",\"67\",\"lp\",\"eI\",\"lB\",\"lA\",\"d4\",\"ll\",\"af\",\"dw\",\"lz\",\"ly\",\"lx\",\"lw\",\"eO\",\"bi\",\"bg\",\"lv\"];B.J.1W=[\"3f\",\"ae\",\"ad\",\"ab\",\"eM\",\"eL\",\"eK\",\"ac\",\"eJ\"];B.J.2Y=G(lu,eP){if(H(B.eQ)==\"L\"){B.eQ=(B.3d||(H(1x)==\"L\"&&H(1q)==\"L\"))}if(!B.eQ){F}u 1p=eP.2k[\":1p\"];R(u i=0;i<1p.K;i++){lu[1p[i]]=eP[1p[i]]}};B.J.2d=G(){u m=D;m.vr=m.24;m.vq=m.eO;if(H(ls)!=\"L\"){m.af=G(lr){F ls(lr).23(/\\\\\\'/g,\"%27\")}}N{m.af=G(lq){F vp(lq).23(/\\\\+/g,\"%2B\").23(/\\\\\"/g,\"%22\").W.23(/\\\\\\'/g,\"%27\")}}m.5a=G(1b){D.43=1b;D.1b=1b};m.5a.1U=Y 2x();m.2l(m.5a.1U,{U:G(){if(D.43&&D.43!=D.1b){F D.1b+\"(\"+m.U(D.43)+\")\"}N{F D.1b+\"()\"}},1l:m.24(\"U\")});m.4d=Y m.5a(\"B.J.4d\");m.lp=m.2z(m.67,1);m.eI=m.2z(m.67,-1);m.lo=m.66(\"G\");m.ln=m.66(\"L\");m.lm=m.2z(m.2l,O);m.ll=m.2z(m.2r,O);m.ae=Y m.4a();m.5u(\"vo\",m.eN,m.eM);m.5u(\"ej\",m.3A,m.eL);m.ad=Y m.4a();m.7M(\"ej\",m.3A,m.eK);m.7M(\"1n\",m.66(\"1n\"),m.ac);m.7M(\"vn\",m.66(\"2y\",\"5L\"),m.eJ);m.ab=Y m.4a();u 1p=m.2o(m.1z,m.1W);m.2k={\":3e\":m.2o(m.1W),\":1p\":1p};m.3f(D)};B.J.2d();if(!B.3d){2f=B.J.2f}B.J.2Y(D,B.J);if(H(1q)!=\"L\"){1q.2X(\"B.15\");1q.2M(\"B.J\")}if(H(1x)!=\"L\"){1x.26(\"B.J\",[])}1f{if(H(B.J)==\"L\"){14\"\"}}1e(e){14\"B.15 3F on B.J!\"}if(H(B.15)==\"L\"){B.15={}}B.15.1r=\"B.15\";B.15.1Y=\"1.3.1\";B.J.2l(B.15,{1K:G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"},1l:G(){F D.1K()},9W:G(1b,lk,lj,lh){B.15.9Y.5M(1b,lk,lj,lh)},1Q:G(3R,lg){u I=B.15;if(M.K==2){F I.9Z(G(a){F a!=lg},3R)}if(H(3R.1a)==\"G\"){F 3R}N{if(H(3R.1Q)==\"G\"){F 3R.1Q()}}1f{F I.9Y.3C(3R)}1e(e){u m=B.J;if(e==m.4d){e=Y 3p(H(3R)+\": \"+m.U(3R)+\" is 2E vm\")}14 e}},eu:G(n){if(!n){n=0}u m=B.J;F{U:G(){F\"eu(\"+n+\")\"},1l:m.24(\"U\"),1a:m.4f(n)}},et:G(p){u I=B.15;u m=B.J;u 1g=[];u lf=I.1Q(p);F{U:G(){F\"et(...)\"},1l:m.24(\"U\"),1a:G(){1f{u W=lf.1a();1g.1c(W);F W}1e(e){if(e!=I.25){14 e}if(1g.K===0){D.1a=G(){14 I.25}}N{u i=-1;D.1a=G(){i=(i+1)%1g.K;F 1g[i]}}F D.1a()}}}},7b:G(Q,n){u m=B.J;if(H(n)==\"L\"){F{U:G(){F\"7b(\"+m.U(Q)+\")\"},1l:m.24(\"U\"),1a:G(){F Q}}}F{U:G(){F\"7b(\"+m.U(Q)+\", \"+n+\")\"},1l:m.24(\"U\"),1a:G(){if(n<=0){14 B.15.25}n-=1;F Q}}},1a:G(ld){F ld.1a()},es:G(p,q){u m=B.J;u 1a=B.15.1a;u lc=m.2r(1Q,M);F{U:G(){F\"es(...)\"},1l:m.24(\"U\"),1a:G(){F m.2r(1a,lc)}}},a1:G(3b,1V){u m=B.J;1V=B.15.1Q(1V);if(3b===O){3b=m.4i.7L}F{U:G(){F\"a1(...)\"},1l:m.24(\"U\"),1a:G(){1M(1h){u W=1V.1a();if(3b(W)){F W}}F L}}},a0:G(3b,1V){u m=B.J;1V=B.15.1Q(1V);if(3b===O){3b=m.4i.7L}F{U:G(){F\"a0(...)\"},1l:m.24(\"U\"),1a:G(){1M(1h){u W=1V.1a();if(!3b(W)){F W}}F L}}},er:G(1V){u I=B.15;u m=B.J;1V=I.1Q(1V);u 5c=0;u 2J=0;u 3a=1;u i=-1;if(M.K==2){2J=M[1]}N{if(M.K==3){5c=M[1];2J=M[2]}N{5c=M[1];2J=M[2];3a=M[3]}}F{U:G(){F\"er(\"+[\"...\",5c,2J,3a].2b(\", \")+\")\"},1l:m.24(\"U\"),1a:G(){u W;1M(i<5c){W=1V.1a();i++}if(5c>=2J){14 I.25}5c+=3a;F W}}},4c:G(aa,p,q){u m=B.J;u I=B.15;u lb=m.2r(I.1Q,m.1R(O,M,1));u 2r=m.2r;u 1a=I.1a;F{U:G(){F\"4c(...)\"},1l:m.24(\"U\"),1a:G(){F aa.1w(D,2r(1a,lb))}}},ep:G(aa,1V,I){1V=B.15.1Q(1V);u m=B.J;F{U:G(){F\"ep(...)\"},1l:m.24(\"U\"),1a:G(){F aa.1w(I,1V.1a())}}},55:G(p,q){u I=B.15;u m=B.J;if(M.K==1){F I.1Q(M[0])}u 64=m.2r(I.1Q,M);F{U:G(){F\"55(...)\"},1l:m.24(\"U\"),1a:G(){1M(64.K>1){1f{F 64[0].1a()}1e(e){if(e!=I.25){14 e}64.2P()}}if(64.K==1){u a9=64.2P();D.1a=m.1O(\"1a\",a9);F D.1a()}14 I.25}}},9Z:G(3b,1V){u I=B.15;1V=I.1Q(1V);F{U:G(){F\"9Z(...)\"},1l:B.J.24(\"U\"),1a:G(){u W=1V.1a();if(!3b(W)){D.1a=G(){14 I.25};D.1a()}F W}}},eo:G(3b,1V){1V=B.15.1Q(1V);u m=B.J;u 1O=m.1O;F{\"U\":G(){F\"eo(...)\"},\"1l\":m.24(\"U\"),\"1a\":G(){1M(1h){u W=1V.1a();if(!3b(W)){2K}}D.1a=1O(\"1a\",1V);F W}}},a7:G(63,2u,la){2u.62[63]=-1;u m=B.J;u l9=m.eI;F{U:G(){F\"en(\"+63+\", ...)\"},1l:m.24(\"U\"),1a:G(){u W;u i=2u.62[63];if(i==2u.29){W=la.1a();2u.a8.1c(W);2u.29+=1;2u.62[63]+=1}N{W=2u.a8[i-2u.2a];2u.62[63]+=1;if(i==2u.2a&&l9(2u.62)!=2u.2a){2u.2a+=1;2u.a8.2P()}}F W}}},en:G(a6,n){u W=[];u 2u={\"62\":[],\"a8\":[],\"29\":-1,\"2a\":-1};if(M.K==1){n=2}u I=B.15;a6=I.1Q(a6);u a7=I.a7;R(u i=0;i<n;i++){W.1c(a7(i,2u,a6))}F W},2G:G(4l){u m=B.J;if(H(4l.9T)==\"G\"){F 4l.9T()}N{if(m.3A(4l)){F m.2o(4l)}}u I=B.15;4l=I.1Q(4l);u W=[];1f{1M(1h){W.1c(4l.1a())}}1e(e){if(e!=I.25){14 e}F W}F L},7H:G(fn,7K,l8){u i=0;u x=l8;u I=B.15;7K=I.1Q(7K);if(M.K<3){1f{x=7K.1a()}1e(e){if(e==I.25){e=Y 3p(\"7H() of vl vk vj no vi 3m\")}14 e}i++}1f{1M(1h){x=fn(x,7K.1a())}}1e(e){if(e!=I.25){14 e}}F x},7I:G(){u 4k=0;u 2J=0;u 3a=1;if(M.K==1){2J=M[0]}N{if(M.K==2){4k=M[0];2J=M[1]}N{if(M.K==3){4k=M[0];2J=M[1];3a=M[2]}N{14 Y 3p(\"7I() vh 1, 2, or 3 M!\")}}}if(3a===0){14 Y 3p(\"7I() 3a 5p 2E be 0\")}F{1a:G(){if((3a>0&&4k>=2J)||(3a<0&&4k<=2J)){14 B.15.25}u W=4k;4k+=3a;F W},U:G(){F\"7I(\"+[4k,2J,3a].2b(\", \")+\")\"},1l:B.J.24(\"U\")}},l0:G(a5,l7){u x=l7||0;u I=B.15;a5=I.1Q(a5);1f{1M(1h){x+=a5.1a()}}1e(e){if(e!=I.25){14 e}}F x},em:G(a4){u I=B.15;a4=I.1Q(a4);1f{1M(1h){a4.1a()}}1e(e){if(e!=I.25){14 e}}},9a:G(7J,1A,I){u m=B.J;if(M.K>2){1A=m.1O(1A,I)}if(m.3A(7J)){1f{R(u i=0;i<7J.K;i++){1A(7J[i])}}1e(e){if(e!=B.15.25){14 e}}}N{I=B.15;I.em(I.4c(1A,7J))}},kZ:G(l6,1A){u I=B.15;1f{I.a0(1A,l6).1a();F 1m}1e(e){if(e!=I.25){14 e}F 1h}},kY:G(l5,4j){u W=B.15.2G(l5);if(M.K==1){4j=B.J.2f}W.iz(4j);F W},kX:G(l4){u W=B.15.2G(l4);W.vg();F W},kW:G(l3,1A){u I=B.15;1f{I.a1(1A,l3).1a();F 1h}1e(e){if(e!=I.25){14 e}F 1m}},kV:G(1g,5b){if(B.J.3A(5b)){R(u i=0;i<5b.K;i++){1g.1c(5b[i])}}N{u I=B.15;5b=I.1Q(5b);1f{1M(1h){1g.1c(5b.1a())}}1e(e){if(e!=I.25){14 e}}}F 1g},ek:G(a3,eH){u m=B.J;u I=B.15;if(M.K<2){eH=m.4i.eE}a3=I.1Q(a3);u pk=L;u k=L;u v;G eF(){v=a3.1a();k=eH(v)}G l2(){u 7j=v;v=L;F 7j}u eG=1h;F{U:G(){F\"ek(...)\"},1a:G(){1M(k==pk){eF();if(eG){eG=1m;2K}}pk=k;F[k,{1a:G(){if(v==L){eF()}if(k!=pk){14 I.25}F l2()}}]}}},kU:G(a2,eD){u m=B.J;u I=B.15;if(M.K<2){eD=m.4i.eE}a2=I.1Q(a2);u ey=[];u eA=1h;u ez;1M(1h){1f{u eB=a2.1a();u 2h=eD(eB)}1e(e){if(e==I.25){2K}14 e}if(eA||2h!=ez){u eC=[];ey.1c([2h,eC])}eC.1c(eB);eA=1m;ez=2h}F ey},9X:G(ex){u i=0;F{U:G(){F\"9X(...)\"},1l:B.J.24(\"U\"),1a:G(){if(i>=ex.K){14 B.15.25}F ex[i++]}}},eh:G(ew){F(ew&&H(ew.ei)==\"G\")},9V:G(l1){F{U:G(){F\"9V(...)\"},1l:B.J.24(\"U\"),1a:G(){u W=l1.ei();if(W===O||W===L){14 B.15.25}F W}}}});B.15.1W=[\"9Y\",\"9X\",\"eh\",\"9V\",];B.15.1z=[\"25\",\"9W\",\"1Q\",\"eu\",\"et\",\"7b\",\"1a\",\"es\",\"a1\",\"a0\",\"er\",\"4c\",\"ep\",\"55\",\"9Z\",\"eo\",\"en\",\"2G\",\"7H\",\"7I\",\"l0\",\"em\",\"9a\",\"kZ\",\"kY\",\"kX\",\"kW\",\"kV\",\"ek\",\"kU\"];B.15.2d=G(){u m=B.J;D.25=Y m.5a(\"25\");D.9Y=Y m.4a();D.9W(\"ej\",m.3A,D.9X);D.9W(\"ei\",D.eh,D.9V);D.2k={\":3e\":D.1z,\":1p\":m.2o(D.1z,D.1W)};m.3f(D)};B.15.2d();if(!B.3d){7H=B.15.7H}B.J.2Y(D,B.15);if(H(1q)!=\"L\"){1q.2X(\"B.1H\");1q.2M(\"B.J\")}if(H(1x)!=\"L\"){1x.26(\"B.J\",[])}1f{if(H(B.J)==\"L\"){14\"\"}}1e(e){14\"B.1H 3F on B.J!\"}if(H(B.1H)==\"L\"){B.1H={}}B.1H.1r=\"B.1H\";B.1H.1Y=\"1.3.1\";B.1H.1K=G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"};B.1H.1l=G(){F D.1K()};B.1H.1z=[\"5C\",\"49\",\"7A\",\"kR\",\"2L\",\"5Z\",\"kG\",\"ch\",\"kE\",\"kC\"];B.1H.1W=[\"ef\",\"e8\",\"e7\"];B.1H.49=G(1P,kT,3z){D.1P=1P;D.3N=kT;D.3z=3z;D.vf=Y 3Q()};B.1H.49.1U={U:G(){u m=B.J;F\"49(\"+m.2r(m.U,[D.1P,D.3N,D.3z]).2b(\", \")+\")\"},1l:B.J.24(\"U\")};B.J.2l(B.1H,{ef:G(7F){u I=B.1H;if(H(7F)==\"1n\"){7F=I.5C[7F]}F G(1t){u 7G=1t.3N;if(H(7G)==\"1n\"){7G=I.5C[7G]}F 7G>=7F}},e8:G(){u kS=B.1H.49;R(u i=0;i<M.K;i++){if(!(M[i]2C kS)){F 1m}}F 1h},e7:G(a,b){F B.J.2f([a.3N,a.3z],[b.3N,b.3z])},kR:G(1t){cq(\"1P: \"+1t.1P+\"\\\\ve: \"+1t.3N+\"\\\\vd: \"+1t.3z.2b(\" \"))}});B.1H.7A=G(7E){D.4f=0;if(H(7E)==\"L\"||7E===O){7E=-1}D.ec=7E;D.4h=[];D.7C={};D.e5=1m};B.1H.7A.1U={vc:G(){D.4h.4y(0,D.4h.K)},kK:G(1t){if(H(2O)!=\"L\"&&2O.eg&&2O.eg.5Z){2O.eg.5Z(1t)}N{if(H(7h)!=\"L\"&&7h.kQ){7h.kQ(1t)}N{if(H(5X)==\"G\"){5X(1t)}}}},kL:G(1t){R(u k in D.7C){u 2n=D.7C[k];if(2n.kO!=k||(2n[0]&&!2n[0](1t))){2V}2n[1](1t)}},hE:G(ee,7D,kP){if(H(7D)==\"1n\"){7D=B.1H.ef(7D)}u ed=[7D,kP];ed.kO=ee;D.7C[ee]=ed},c9:G(kN){gi D.7C[kN]},kH:G(kM,vb){u 1t=Y B.1H.49(D.4f,kM,B.J.1R(O,M,1));D.4h.1c(1t);D.kL(1t);if(D.e5){D.kK(1t.3N+\": \"+1t.3z.2b(\" \"))}D.4f+=1;1M(D.ec>=0&&D.4h.K>D.ec){D.4h.2P()}},c8:G(9U){u ea=0;if(!(H(9U)==\"L\"||9U===O)){ea=28.29(0,D.4h.K-9U)}F D.4h.9T(ea)},kJ:G(7B){if(H(7B)==\"L\"||7B===O){7B=30}u 9S=D.c8(7B);if(9S.K){u 1g=2r(G(m){F\"\\\\n  [\"+m.1P+\"] \"+m.3N+\": \"+m.3z.2b(\" \")},9S);1g.e9(\"va \"+9S.K+\" v9:\");F 1g.2b(\"\")}F\"\"},v8:G(kI){if(H(B.1I)==\"L\"){cq(D.kJ())}N{B.1I.bY(kI||1m)}}};B.1H.2d=G(){D.5C={8M:40,8L:50,8K:30,8J:20,8I:10};u m=B.J;m.5u(\"49\",D.e8,D.e7);u 61=m.2z;u e6=D.7A;u 60=e6.1U.kH;m.2l(D.7A.1U,{kF:61(60,\"8I\"),5Z:61(60,\"8J\"),dE:61(60,\"8M\"),kD:61(60,\"8L\"),kB:61(60,\"8K\")});u I=D;u 5Y=G(1b){F G(){I.2L[1b].1w(I.2L,M)}};D.5Z=5Y(\"5Z\");D.kG=5Y(\"dE\");D.ch=5Y(\"kF\");D.kE=5Y(\"kD\");D.kC=5Y(\"kB\");D.2L=Y e6();D.2L.e5=1h;D.2k={\":3e\":D.1z,\":1p\":m.2o(D.1z,D.1W)};m.3f(D)};if(H(5X)==\"L\"&&H(2v)!=\"L\"&&2v.kA&&H(kz)!=\"L\"){5X=G(){5X.3G=M;u ev=2v.kA(\"v7\");ev.v6(\"5X\",1m,1h);kz(ev)}}B.1H.2d();B.J.2Y(D,B.1H);if(H(1q)!=\"L\"){1q.2X(\"B.1D\")}if(H(B)==\"L\"){B={}}if(H(B.1D)==\"L\"){B.1D={}}B.1D.1r=\"B.1D\";B.1D.1Y=\"1.3.1\";B.1D.1K=G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"};B.1D.1l=G(){F D.1K()};B.1D.ks=G(1y){1y=1y+\"\";if(H(1y)!=\"1n\"||1y.K===0){F O}u 7z=1y.2R(\"-\");if(7z.K===0){F O}F Y 3Q(7z[0],7z[1]-1,7z[2])};B.1D.ky=/(\\\\d{4,})(?:-(\\\\d{1,2})(?:-(\\\\d{1,2})(?:[T ](\\\\d{1,2}):(\\\\d{1,2})(?::(\\\\d{1,2})(?:\\\\.(\\\\d+))?)?(?:(Z)|([+-])(\\\\d{1,2})(?::(\\\\d{1,2}))?)?)?)?)?/;B.1D.kr=G(1y){1y=1y+\"\";if(H(1y)!=\"1n\"||1y.K===0){F O}u X=1y.3C(B.1D.ky);if(H(X)==\"L\"||X===O){F O}u 5W,7y,7x,9R,2a,9Q,7w;5W=3w(X[1],10);if(H(X[2])==\"L\"||X[2]===\"\"){F Y 3Q(5W)}7y=3w(X[2],10)-1;7x=3w(X[3],10);if(H(X[4])==\"L\"||X[4]===\"\"){F Y 3Q(5W,7y,7x)}9R=3w(X[4],10);2a=3w(X[5],10);9Q=(H(X[6])!=\"L\"&&X[6]!==\"\")?3w(X[6],10):0;if(H(X[7])!=\"L\"&&X[7]!==\"\"){7w=28.ha(c5*4M(\"0.\"+X[7]))}N{7w=0}if((H(X[8])==\"L\"||X[8]===\"\")&&(H(X[9])==\"L\"||X[9]===\"\")){F Y 3Q(5W,7y,7x,9R,2a,9Q,7w)}u 58;if(H(X[9])!=\"L\"&&X[9]!==\"\"){58=3w(X[10],10)*v5;if(H(X[11])!=\"L\"&&X[11]!==\"\"){58+=3w(X[11],10)*kw}if(X[9]==\"-\"){58=-58}}N{58=0}F Y 3Q(3Q.v4(5W,7y,7x,9R,2a,9Q,7w)-58)};B.1D.dY=G(2g,kx){if(H(2g)==\"L\"||2g===O){F O}u hh=2g.v3();u mm=2g.v2();u ss=2g.v1();u 1g=[((kx&&(hh<10))?\"0\"+hh:hh),((mm<10)?\"0\"+mm:mm),((ss<10)?\"0\"+ss:ss)];F 1g.2b(\":\")};B.1D.kq=G(2g,7v){if(H(2g)==\"L\"||2g===O){F O}u ku=7v?\"T\":\" \";u kt=7v?\"Z\":\"\";if(7v){2g=Y 3Q(2g.9P()+(2g.v0()*kw))}F B.1D.dX(2g)+ku+B.1D.dY(2g,7v)+kt};B.1D.dX=G(2g){if(H(2g)==\"L\"||2g===O){F O}u e4=B.1D.e3;F[2g.dZ(),e4(2g.e1()+1),e4(2g.e0())].2b(\"-\")};B.1D.kp=G(d){d=d+\"\";if(H(d)!=\"1n\"||d.K===0){F O}u a=d.2R(\"/\");F Y 3Q(a[2],a[0]-1,a[1])};B.1D.e3=G(n){F(n>9)?n:\"0\"+n};B.1D.ko=G(d){if(H(d)==\"L\"||d===O){F O}u e2=B.1D.e3;F[e2(d.e1()+1),e2(d.e0()),d.dZ()].2b(\"/\")};B.1D.kn=G(d){if(H(d)==\"L\"||d===O){F O}F[d.e1()+1,d.e0(),d.dZ()].2b(\"/\")};B.1D.1z=[\"ks\",\"kr\",\"dY\",\"kq\",\"dX\",\"kp\",\"ko\",\"kn\"];B.1D.1W=[];B.1D.2k={\":3e\":B.1D.1z,\":1p\":B.1D.1z};B.1D.2d=G(){u 2w=D.1r+\".\";R(u k in D){u o=D[k];if(H(o)==\"G\"&&H(o.1r)==\"L\"){1f{o.1r=2w+k}1e(e){}}}};B.1D.2d();if(H(B.J)!=\"L\"){B.J.2Y(D,B.1D)}N{(G(km,dW){if((H(1x)==\"L\"&&H(1q)==\"L\")||(H(B.3d)==\"5L\"&&B.3d)){u 1p=dW.2k[\":1p\"];R(u i=0;i<1p.K;i++){km[1p[i]]=dW[1p[i]]}}})(D,B.1D)}if(H(1q)!=\"L\"){1q.2X(\"B.1s\")}if(H(B)==\"L\"){B={}}if(H(B.1s)==\"L\"){B.1s={}}B.1s.1r=\"B.1s\";B.1s.1Y=\"1.3.1\";B.1s.1K=G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"};B.1s.1l=G(){F D.1K()};B.1s.ke=G(kl,kk,kj,ki,kh,dV,kg,9N,kf){F G(1P){1P=4M(1P);if(H(1P)==\"L\"||1P===O||k8(1P)){F kl}u 9L=kk;u 9K=kj;if(1P<0){1P=-1P}N{9L=9L.23(/-/,\"\")}u me=M.2U;u 9M=B.1s.dJ(ki);if(kh){1P=1P*3k;9K=9M.9y+9K}1P=B.1s.dK(1P,dV);u 9O=1P.2R(/\\\\./);u 3r=9O[0];u 3P=(9O.K==1)?\"\":9O[1];u X=\"\";1M(3r.K<kg){3r=\"0\"+3r}if(9N){1M(3r.K>9N){u i=3r.K-9N;X=9M.9A+3r.2W(i,3r.K)+X;3r=3r.2W(0,i)}}X=3r+X;if(dV>0){1M(3P.K<kf){3P=3P+\"0\"}X=X+9M.9z+3P}F 9L+X+9K}};B.1s.k5=G(9J,9H,9G){if(H(9H)==\"L\"){9H=\"\"}u 3q=9J.3C(/((?:[0#]+,)?[0#]+)(?:\\\\.([0#]+))?(%)?/);if(!3q){14 3p(\"uZ uY\")}u 7u=9J.3H(0,3q.c6);u kd=9J.3H(3q.c6+3q[0].K);if(7u.uX(/-/)==-1){7u=7u+\"-\"}u 9I=3q[1];u 3P=(H(3q[2])==\"1n\"&&3q[2]!=\"\")?3q[2]:\"\";u kc=(H(3q[3])==\"1n\"&&3q[3]!=\"\");u dU=9I.2R(/,/);u 9F;if(H(9G)==\"L\"){9G=\"dG\"}if(dU.K==1){9F=O}N{9F=dU[1].K}u ka=9I.K-9I.23(/0/g,\"\").K;u k9=3P.K-3P.23(/0/g,\"\").K;u kb=3P.K;u W=B.1s.ke(9H,7u,kd,9G,kc,kb,ka,9F,k9);u m=B.J;if(m){u fn=M.2U;u 3G=m.2o(M);W.U=G(){F[I.1r,\"(\",2r(m.U,3G).2b(\", \"),\")\"].2b(\"\")}}F W};B.1s.dJ=G(4g){if(H(4g)==\"L\"||4g===O){4g=\"dG\"}if(H(4g)==\"1n\"){u W=B.1s.5V[4g];if(H(W)==\"1n\"){W=M.2U(W);B.1s.5V[4g]=W}F W}N{F 4g}};B.1s.k4=G(dT,9E){if(9E){u X=dT/9E;if(!k8(X)){F B.1s.9B(dT/9E)}}F\"0\"};B.1s.9B=G(dS){u dR=(dS<0?\"-\":\"\");u s=28.8B(28.uW(dS)*3k).1l();if(s==\"0\"){F s}if(s.K<3){1M(s.3Z(s.K-1)==\"0\"){s=s.2W(0,s.K-1)}F dR+\"0.\"+s}u 5E=dR+s.2W(0,s.K-2);u 7t=s.2W(s.K-2,s.K);if(7t==\"uV\"){F 5E}N{if(7t.3Z(1)==\"0\"){F 5E+\".\"+7t.3Z(0)}N{F 5E+\".\"+7t}}};B.1s.dI=G(1y,dQ){1y=1y+\"\";if(H(1y)!=\"1n\"){F O}if(!dQ){F 1y.23(/^\\\\s+/,\"\")}N{F 1y.23(Y 8V(\"^[\"+dQ+\"]+\"),\"\")}};B.1s.dH=G(1y,dP){1y=1y+\"\";if(H(1y)!=\"1n\"){F O}if(!dP){F 1y.23(/\\\\s+$/,\"\")}N{F 1y.23(Y 8V(\"[\"+dP+\"]+$\"),\"\")}};B.1s.k2=G(1y,dO){u I=B.1s;F I.dH(I.dI(1y,dO),dO)};B.1s.dL=G(9D,9C){9D=28.8B(9D*28.dN(10,9C));u X=(9D*28.dN(10,-9C)).6I(9C);if(X.3Z(0)==\".\"){X=\"0\"+X}F X};B.1s.dK=G(k7,dM){F B.1s.dL(k7+0.5*28.dN(10,-dM),dM)};B.1s.k3=G(k6){F B.1s.9B(3k*k6)+\"%\"};B.1s.1z=[\"dL\",\"dK\",\"k5\",\"dJ\",\"k4\",\"9B\",\"k3\",\"dI\",\"dH\",\"k2\"];B.1s.5V={k1:{9A:\",\",9z:\".\",9y:\"%\"},uU:{9A:\".\",9z:\",\",9y:\"%\"},uT:{9A:\" \",9z:\",\",9y:\"%\"},\"dG\":\"k1\"};B.1s.1W=[];B.1s.2k={\":1p\":B.1s.1z,\":3e\":B.1s.1z};B.1s.2d=G(){u 2w=D.1r+\".\";u k,v,o;R(k in D.5V){o=D.5V[k];if(H(o)==\"3n\"){o.U=G(){F D.1r};o.1r=2w+\"5V.\"+k}}R(k in D){o=D[k];if(H(o)==\"G\"&&H(o.1r)==\"L\"){1f{o.1r=2w+k}1e(e){}}}};B.1s.2d();if(H(B.J)!=\"L\"){B.J.2Y(D,B.1s)}N{(G(k0,dF){if((H(1x)==\"L\"&&H(1q)==\"L\")||(H(B.3d)==\"5L\"&&B.3d)){u 1p=dF.2k[\":1p\"];R(u i=0;i<1p.K;i++){k0[1p[i]]=dF[1p[i]]}}})(D,B.1s)}if(H(1q)!=\"L\"){1q.2X(\"B.1k\");1q.2M(\"B.J\")}if(H(1x)!=\"L\"){1x.26(\"B.J\",[])}1f{if(H(B.J)==\"L\"){14\"\"}}1e(e){14\"B.1k 3F on B.J!\"}if(H(B.1k)==\"L\"){B.1k={}}B.1k.1r=\"B.1k\";B.1k.1Y=\"1.3.1\";B.1k.1K=G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"};B.1k.1l=G(){F D.1K()};B.1k.2t=G(jZ){D.55=[];D.id=D.7n();D.2H=-1;D.54=0;D.53=[O,O];D.7m=jZ;D.7l=1m;D.7r=1m};B.1k.2t.1U={U:G(){u 7s;if(D.2H==-1){7s=\"uS\"}N{if(D.2H===0){7s=\"uR\"}N{7s=\"dE\"}}F\"2t(\"+D.id+\", \"+7s+\")\"},1l:B.J.24(\"U\"),7n:B.J.4f(),jY:G(){u I=B.1k;if(D.2H==-1){if(D.7m){D.7m(D)}N{D.7l=1h}if(D.2H==-1){D.52(Y I.di(D))}}N{if((D.2H===0)&&(D.53[0]2C I.2t)){D.53[0].jY()}}},jQ:G(){D.54++},jX:G(){D.54--;if((D.54===0)&&(D.2H>=0)){D.9u()}},jR:G(X){D.9x(X);D.jX()},9x:G(X){D.2H=((X 2C 2x)?1:0);D.53[D.2H]=X;D.9u()},dD:G(){if(D.2H!=-1){if(!D.7l){14 Y B.1k.dj(D)}D.7l=1m;F}},3o:G(X){D.dD();if(X 2C B.1k.2t){14 Y 2x(\"2t jW 9v aB be 7r if jV jU jT jS of a 3o\")}D.9x(X)},52:G(X){D.dD();u I=B.1k;if(X 2C I.2t){14 Y 2x(\"2t jW 9v aB be 7r if jV jU jT jS of a 3o\")}if(!(X 2C 2x)){X=Y I.9p(X)}D.9x(X)},jP:G(fn){if(M.K>1){fn=B.J.2z.1w(O,M)}F D.9w(fn,fn)},5Q:G(fn){if(M.K>1){fn=B.J.2z.1w(O,M)}F D.9w(fn,O)},jA:G(fn){if(M.K>1){fn=B.J.2z.1w(O,M)}F D.9w(O,fn)},9w:G(cb,eb){if(D.7r){14 Y 2x(\"uQ uP 9v 2E be re-uO\")}D.55.1c([cb,eb]);if(D.2H>=0){D.9u()}F D},9u:G(){u dC=D.55;u 56=D.2H;u X=D.53[56];u I=D;u cb=O;1M(dC.K>0&&D.54===0){u 2n=dC.2P();u f=2n[56];if(f===O){2V}1f{X=f(X);56=((X 2C 2x)?1:0);if(X 2C B.1k.2t){cb=G(X){I.jR(X)};D.jQ()}}1e(3O){56=1;if(!(3O 2C 2x)){3O=Y B.1k.9p(3O)}X=3O}}D.2H=56;D.53[56]=X;if(cb&&D.54){X.jP(cb);X.7r=1h}}};B.J.2l(B.1k,{dk:G(){F dB(\"(\"+M[0].jN+\")\")},dp:G(uN){u d=Y B.1k.2t();d.3o.1w(d,M);F d},9q:G(uM){u d=Y B.1k.2t();d.52.1w(d,M);F d},do:G(){u I=M.2U;if(!I.7q){u dy=[G(){F Y 7q()},G(){F Y dA(\"jO.dz\")},G(){F Y dA(\"uL.dz\")},G(){F Y dA(\"jO.dz.4.0\")},G(){14 Y B.1k.dh(\"uK uJ 2E uI 7q\")}];R(u i=0;i<dy.K;i++){u 1A=dy[i];1f{I.7q=1A;F 1A()}1e(e){}}}F I.7q()},dx:G(){},jK:G(d){if(D.uH==4){1f{D.5T=O}1e(e){1f{D.5T=B.1k.dx}1e(e){}}u 5U=O;1f{5U=D.jm;if(!5U&&B.J.7e(D.jN)){5U=jM}}1e(e){}if(5U==hQ||5U==jM){d.3o(D)}N{u 3O=Y B.1k.dg(D,\"uG uF\");if(3O.2y){d.52(3O)}N{d.52(3O)}}}},jL:G(2s){1f{2s.5T=O}1e(e){1f{2s.5T=B.1k.dx}1e(e){}}2s.uE()},dl:G(2s,7p){if(H(7p)==\"L\"||7p===O){7p=\"\"}u m=B.J;u I=B.1k;u d=Y I.2t(m.2z(I.jL,2s));1f{2s.5T=m.1O(I.jK,2s,d);2s.uD(7p)}1e(e){1f{2s.5T=O}1e(uC){}d.52(e)}F d},dn:G(5F){u I=B.1k;u 2s=I.do();if(M.K>1){u m=B.J;u qs=m.dw.1w(O,m.1R(O,M,1));if(qs){5F+=\"?\"+qs}}2s.cp(\"uB\",5F,1h);F I.dl(2s)},jv:G(5F){u I=B.1k;u d=I.dn.1w(I,M);d=d.5Q(I.dk);F d},dm:G(jJ,dv){u d=Y B.1k.2t();u m=B.J;if(H(dv)!=\"L\"){d.5Q(G(){F dv})}u jI=uA(m.1O(\"3o\",d),28.8B(jJ*c5));d.7m=G(){1f{uz(jI)}1e(e){}};F d},ju:G(jH,1A){u m=B.J;u jG=m.2z.1w(m,m.1R(O,M,1));F B.1k.dm(jH).5Q(G(X){F jG()})}});B.1k.5O=G(){D.5S=[];D.4e=1m;D.id=D.7n()};B.1k.5O.1U={bX:B.1k.5O,uy:G(){d=Y B.1k.2t();if(D.4e){D.5S.1c(d)}N{D.4e=1h;d.3o(D)}F d},jF:G(){if(!D.4e){14 3p(\"ux to jF an jE 5O\")}D.4e=1m;if(D.5S.K>0){D.4e=1h;D.5S.2P().3o(D)}},7n:B.J.4f(),U:G(){u 9t;if(D.4e){9t=\"4e, \"+D.5S.K+\" 5S\"}N{9t=\"jE\"}F\"5O(\"+D.id+\", \"+9t+\")\"},1l:B.J.24(\"U\")};B.1k.7i=G(2G,du,jC,jB,jD){D.2G=2G;D.9r=Y 7o(D.2G.K);D.55=[];D.id=D.7n();D.2H=-1;D.54=0;D.53=[O,O];D.7m=jD;D.7l=1m;if(D.2G.K===0&&!du){D.3o(D.9r)}D.dr=0;D.jz=du;D.jy=jC;D.jx=jB;u 9s=0;B.J.2r(B.J.1O(G(d){d.5Q(B.J.1O(D.dt,D),9s,1h);d.jA(B.J.1O(D.dt,D),9s,1m);9s+=1},D),D.2G)};B.J.2l(B.1k.7i.1U,B.1k.2t.1U);B.J.2l(B.1k.7i.1U,{dt:G(ds,7k,5R){D.9r[ds]=[7k,5R];D.dr+=1;if(D.2H!==0){if(7k&&D.jz){D.3o([ds,5R])}N{if(!7k&&D.jy){D.52(5R)}N{if(D.dr==D.2G.K){D.3o(D.9r)}}}}if(!7k&&D.jx){5R=O}F 5R}});B.1k.jt=G(jw){u d=Y B.1k.7i(jw,1m,1h,1m);d.5Q(G(dq){u 7j=[];R(u i=0;i<dq.K;i++){7j.1c(dq[i][1])}F 7j});F d};B.1k.jr=G(1A){u I=B.1k;u 5P;1f{u r=1A.1w(O,B.J.1R([],M,1));if(r 2C I.2t){5P=r}N{if(r 2C 2x){5P=I.9q(r)}N{5P=I.dp(r)}}}1e(e){5P=I.9q(e)}F 5P};B.1k.1z=[\"dj\",\"di\",\"dh\",\"9p\",\"dg\",\"2t\",\"dp\",\"9q\",\"do\",\"dn\",\"jv\",\"dm\",\"ju\",\"dl\",\"5O\",\"7i\",\"jt\",\"jr\"];B.1k.1W=[\"dk\"];B.1k.2d=G(){u m=B.J;u ne=m.2z(m.jq,D);ne(\"dj\",G(jp){D.jo=jp});ne(\"di\",G(jn){D.jo=jn});ne(\"dh\",G(1t){D.43=1t});ne(\"9p\",G(1t){D.43=1t});ne(\"dg\",G(2s,1t){D.2s=2s;D.43=1t;1f{D.2y=2s.jm}1e(e){}});D.2k={\":3e\":D.1z,\":1p\":m.2o(D.1z,D.1W)};m.3f(D)};B.1k.2d();B.J.2Y(D,B.1k);if(H(1q)!=\"L\"){1q.2X(\"B.S\");1q.2M(\"B.15\")}if(H(1x)!=\"L\"){1x.26(\"B.15\",[])}1f{if(H(B.15)==\"L\"){14\"\"}}1e(e){14\"B.S 3F on B.15!\"}if(H(B.S)==\"L\"){B.S={}}B.S.1r=\"B.S\";B.S.1Y=\"1.3.1\";B.S.1K=G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"};B.S.1l=G(){F D.1K()};B.S.1z=[\"d5\",\"cr\",\"b9\",\"95\",\"94\",\"j3\",\"9k\",\"cX\",\"cw\",\"iT\",\"iV\",\"4X\",\"9j\",\"iQ\",\"hS\",\"cs\",\"ia\",\"i9\",\"i8\",\"i7\",\"i6\",\"i5\",\"i4\",\"hV\",\"i3\",\"i2\",\"i1\",\"cu\",\"hW\",\"ct\",\"i0\",\"hZ\",\"hY\",\"hX\",\"P\",\"io\",\"il\",\"ik\",\"ij\",\"cm\",\"ih\",\"ii\",\"ig\",\"ie\",\"ic\",\"cv\",\"8d\",\"A\",\"6m\",\"ib\",\"1E\",\"$\",\"4q\",\"aH\",\"cO\",\"cN\",\"iM\",\"5G\",\"iK\",\"9d\",\"9e\",\"iH\",\"iD\",\"9c\",\"iB\",\"cG\",\"97\",\"hU\",\"hT\",\"iw\",\"jh\",\"jb\",\"j6\",\"j5\",\"jk\",\"jl\"];B.S.1W=[\"9b\"];B.S.5N=G(w,h){D.w=w;D.h=h};B.S.5N.1U.U=G(){u U=B.J.U;F\"{w: \"+U(D.w)+\", h: \"+U(D.h)+\"}\"};B.S.5t=G(x,y){D.x=x;D.y=y};B.S.5t.1U.U=G(){u U=B.J.U;F\"{x: \"+U(D.x)+\", y: \"+U(D.y)+\"}\"};B.S.5t.1U.1l=G(){F D.U()};B.J.2l(B.S,{jl:G(Q,o){Q=B.S.1E(Q);B.S.4X(Q,{\"1T\":{\"9o\":o,\"-hL-9o\":o,\"-uw-9o\":o,\"47\":\" uv(9o=\"+(o*3k)+\")\"}})},jk:G(){u d=Y B.S.5N();u w=B.S.3X;u b=B.S.1Z.5s;if(w.jj){d.w=w.jj;d.h=w.uu}N{if(b.dd.9n){d.w=b.dd.9n;d.h=b.dd.ji}N{if(b&&b.9n){d.w=b.9n;d.h=b.ji}}}F d},jh:G(Q){u I=B.S;if(H(Q.w)==\"2y\"||H(Q.h)==\"2y\"){F Y I.5N(Q.w||0,Q.h||0)}Q=I.1E(Q);if(!Q){F L}if(I.4q(Q,\"3u\")!=\"98\"){F Y I.5N(Q.jg||0,Q.ci||0)}u s=Q.1T;u je=s.dc;u jf=s.6P;s.dc=\"fR\";s.6P=\"j8\";s.3u=\"\";u jd=Q.jg;u jc=Q.ci;s.3u=\"98\";s.6P=jf;s.dc=je;F Y I.5N(jd,jc)},jb:G(Q,4Z){u I=B.S;Q=I.1E(Q);if(!Q){F L}u c=Y I.5t(0,0);if(Q.x&&Q.y){c.x+=Q.x||0;c.y+=Q.y||0;F c}N{if(Q.3t===O||I.4q(Q,\"3u\")==\"98\"){F L}}u 51=O;u 2j=O;u d=B.S.1Z;u de=d.7Z;u b=d.5s;if(Q.ja){51=Q.ja();c.x+=51.2I+(de.6y||b.6y)-(de.8q||b.8q);c.y+=51.3D+(de.4C||b.4C)-(de.8p||b.8p)}N{if(d.j9){51=d.j9(Q);c.x+=51.x;c.y+=51.y}N{if(Q.8g){c.x+=Q.db;c.y+=Q.da;2j=Q.8g;if(2j!=Q){1M(2j){c.x+=2j.db;c.y+=2j.da;2j=2j.8g}}u ua=ut.us.8G();if((H(7h)!=\"L\"&&4M(7h.ur())<9)||(ua.2A(\"uq\")!=-1&&I.4q(Q,\"6P\")==\"j8\")){c.x-=b.db;c.y-=b.da}}}}if(H(4Z)!=\"L\"){4Z=M.2U(4Z);if(4Z){c.x-=(4Z.x||0);c.y-=(4Z.y||0)}}if(Q.3t){2j=Q.3t}N{2j=O}1M(2j&&2j.j7!=\"uo\"&&2j.j7!=\"co\"){c.x-=2j.6y;c.y-=2j.4C;if(2j.3t){2j=2j.3t}N{2j=O}}F c},j6:G(Q,d9,7g){Q=B.S.1E(Q);if(H(7g)==\"L\"){7g=\"px\"}B.S.4X(Q,{\"1T\":{\"5A\":d9.w+7g,\"3V\":d9.h+7g}})},j5:G(Q,d8,7f){Q=B.S.1E(Q);if(H(7f)==\"L\"){7f=\"px\"}B.S.4X(Q,{\"1T\":{\"2I\":d8.x+7f,\"3D\":d8.y+7f}})},cr:G(){F B.S.3X},b9:G(){F B.S.1Z},95:G(2m,1A){u I=B.S;u d6=I.1Z;u d7=I.un;u W;1f{I.3X=2m;I.1Z=2m.2v;W=1A()}1e(e){I.3X=d7;I.1Z=d6;14 e}I.3X=d7;I.1Z=d6;F W},d5:G(Q){u 7d=[];u 7c=[];u m=B.J;u I=B.S;if(H(Q)==\"L\"||Q===O){Q=I.1Z}N{Q=I.1E(Q)}m.d4(Q,G(Q){u 1b=Q.1b;if(m.7e(1b)){u 4Y=Q.cD;if(4Y==\"cv\"&&(Q.1J==\"um\"||Q.1J==\"uk\")&&!Q.ip){F O}if(4Y==\"ct\"){if(Q.j4>=0){u 9m=Q.1S[Q.j4];7d.1c(1b);7c.1c((9m.3m)?9m.3m:9m.7X);F O}7d.1c(1b);7c.1c(\"\");F O}if(4Y==\"cu\"||4Y==\"P\"||4Y==\"8d\"||4Y==\"6m\"){F Q.5h}7d.1c(1b);7c.1c(Q.3m||\"\");F O}F Q.5h});F[7d,7c]},94:G(1N,1A){u I=B.S;u d3=I.1Z;u W;1f{I.1Z=1N;W=1A()}1e(e){I.1Z=d3;14 e}I.1Z=d3;F W},j3:G(1b,j2,3y,j1){B.S.9b.5M(1b,j2,3y,j1)},9k:G(1j,7a){u im=B.15;u I=B.S;u 1Q=im.1Q;u iY=im.7b;u 4c=im.4c;u iX=I.9b;u iZ=I.9k;u iW=B.J.4d;1M(1h){if(H(1j)==\"L\"||1j===O){F O}if(H(1j.3T)!=\"L\"&&1j.3T>0){F 1j}if(H(1j)==\"2y\"||H(1j)==\"5L\"){1j=1j.1l()}if(H(1j)==\"1n\"){F I.1Z.4S(1j)}if(H(1j.j0)==\"G\"){1j=1j.j0(7a);2V}if(H(1j)==\"G\"){1j=1j(7a);2V}u 9l=O;1f{9l=1Q(1j)}1e(e){}if(9l){F 4c(iZ,9l,iY(7a))}1f{1j=iX.3C(1j,7a);2V}1e(e){if(e!=iW){14 e}}F I.1Z.4S(1j.1l())}F L},iV:G(1j,79,iU){u o={};o[79]=iU;1f{F B.S.4X(1j,o)}1e(e){}F O},iT:G(1j,79){u I=B.S;u d2=I.4U.99[79];1j=I.1E(1j);1f{if(d2){F 1j[d2]}F 1j.fm(79)}1e(e){}F O},4X:G(1j,5K){u Q=1j;u I=B.S;if(H(1j)==\"1n\"){Q=I.1E(1j)}if(5K){u d0=B.J.8Z;if(I.4U.6X){R(u k in 5K){u v=5K[k];if(H(v)==\"3n\"&&H(Q[k])==\"3n\"){d0(Q[k],v)}N{if(k.2W(0,2)==\"on\"){if(H(v)==\"1n\"){v=Y cZ(v)}Q[k]=v}N{Q.4p(k,v)}}}}N{u iS=I.4U.99;R(k in 5K){v=5K[k];u d1=iS[k];if(k==\"1T\"&&H(v)==\"1n\"){Q.1T.3x=v}N{if(H(d1)==\"1n\"){Q[d1]=v}N{if(H(Q[k])==\"3n\"&&H(v)==\"3n\"){d0(Q[k],v)}N{if(k.2W(0,2)==\"on\"){if(H(v)==\"1n\"){v=Y cZ(v)}Q[k]=v}N{Q.4p(k,v)}}}}}}}F Q},9j:G(1j){u Q=1j;u I=B.S;if(H(1j)==\"1n\"){Q=I.1E(1j)}u 78=[I.9k(B.J.1R(O,M,1),Q)];u iR=B.J.2o;1M(78.K){u n=78.2P();if(H(n)==\"L\"||n===O){}N{if(H(n.3T)==\"2y\"){Q.2c(n)}N{78=iR(n,78)}}}F Q},iQ:G(1j){u Q=1j;u I=B.S;if(H(1j)==\"1n\"){Q=I.1E(1j);M[0]=Q}u cY;1M((cY=Q.6n)){Q.6S(cY)}if(M.K<2){F Q}N{F I.9j.1w(D,M)}},cX:G(1b,4b){u Q;u I=B.S;u m=B.J;if(H(4b)==\"1n\"||H(4b)==\"2y\"){u 3G=m.1R([1b,O],M,1);F M.2U.1w(D,3G)}if(H(1b)==\"1n\"){if(4b&&\"1b\"in 4b&&!I.4U.6X){1b=(\"<\"+1b+\" 1b=\\\\\"\"+I.9c(4b.1b)+\"\\\\\">\")}Q=I.1Z.2S(1b)}N{Q=1b}if(4b){I.4X(Q,4b)}if(M.K<=2){F Q}N{u 3G=m.1R([Q],M,2);F I.9j.1w(D,3G)}},cw:G(){u m=B.J;F m.2z.1w(D,m.1R([B.S.cX],M))},cs:G(5J,1d){u I=B.S;5J=I.1E(5J);u cW=5J.3t;if(1d){1d=I.1E(1d);cW.uj(1d,5J)}N{cW.6S(5J)}F 1d},1E:G(id){u I=B.S;if(M.K==1){F((H(id)==\"1n\")?I.1Z.hN(id):id)}N{F B.J.2r(I.1E,M)}},4q:G(iP,cV,cU){if(M.K==2){cU=cV}u I=B.S;u el=I.1E(iP);u 77=I.1Z;if(!el||el==77){F L}if(el.iO){F el.iO[cV]}if(H(77.5k)==\"L\"){F L}if(77.5k===O){F L}u 9i=77.5k.g4(el,O);if(H(9i)==\"L\"||9i===O){F L}F 9i.6q(cU)},aH:G(76,9g,4W){u I=B.S;if(H(76)==\"L\"||76===O){76=\"*\"}if(H(4W)==\"L\"||4W===O){4W=I.1Z}4W=I.1E(4W);u 9h=(4W.fr(76)||I.1Z.1p);if(H(9g)==\"L\"||9g===O){F B.J.1R(O,9h)}u cR=[];R(u i=0;i<9h.K;i++){u cS=9h[i];u cT=cS.3M.2R(\" \");R(u j=0;j<cT.K;j++){if(cT[j]==9g){cR.1c(cS);2K}}}F cR},iN:G(5I,9f){u W=G(){u cQ=M.2U.5H;R(u i=0;i<cQ.K;i++){if(cQ[i].1w(D,M)===1m){2K}}if(9f){1f{D[5I]=O}1e(e){}}};W.5H=[];F W},cO:G(cP,5I,1A,9f){u I=B.S;u 4V=cP[5I];u 75=4V;if(!(H(4V)==\"G\"&&H(4V.5H)==\"3n\"&&4V.5H!==O)){75=I.iN(5I,9f);if(H(4V)==\"G\"){75.5H.1c(4V)}cP[5I]=75}75.5H.1c(1A)},cN:G(1A){u I=B.S;I.cO(I.3X,\"gh\",1A,1h)},iM:G(74){u I=B.S;I.cN(G(){74=I.1E(74);if(74){74.ui()}})},5G:G(iL,cM){u I=B.S;u 1i=I.1E(iL);if(I.4U.6X){1i.4p(\"iq\",cM)}N{1i.4p(\"3M\",cM)}},iK:G(cL){u I=B.S;R(u i=1;i<M.K;i++){u 1i=I.1E(M[i]);if(!I.9d(1i,cL)){I.9e(1i,cL)}}},9d:G(iJ,73){u I=B.S;u 1i=I.1E(iJ);u 2F=1i.3M;if(2F.K===0){I.5G(1i,73);F 1h}if(2F==73){F 1m}u cK=1i.3M.2R(\" \");R(u i=0;i<cK.K;i++){if(cK[i]==73){F 1m}}I.5G(1i,2F+\" \"+73);F 1h},9e:G(iI,cJ){u I=B.S;u 1i=I.1E(iI);u 2F=1i.3M;if(2F.K===0){F 1m}if(2F==cJ){I.5G(1i,\"\");F 1h}u 72=1i.3M.2R(\" \");R(u i=0;i<72.K;i++){if(72[i]==cJ){72.4y(i,1);I.5G(1i,72.2b(\" \"));F 1h}}F 1m},iH:G(iG,iF,iE){u 1i=B.S.1E(iG);u X=B.S.9e(1i,iF);if(X){B.S.9d(1i,iE)}F X},iD:G(iC,uh){u 1i=B.S.1E(iC);u cI=1i.3M.2R(\" \");R(u i=1;i<M.K;i++){u cH=1m;R(u j=0;j<cI.K;j++){if(cI[j]==M[i]){cH=1h;2K}}if(!cH){F 1m}}F 1h},9c:G(s){F s.23(/&/g,\"&ug;\").23(/\"/g,\"&uf;\").23(/</g,\"&lt;\").23(/>/g,\"&gt;\")},iB:G(2q){F B.S.cG(2q).2b(\"\")},cG:G(2q,1g){if(H(1g)==\"L\"||1g===O){1g=[]}u 70=[2q];u I=B.S;u cB=I.9c;u iA=I.4U;1M(70.K){2q=70.hP();if(H(2q)==\"1n\"){1g.1c(2q)}N{if(2q.3T==1){1g.1c(\"<\"+2q.cD.8G());u 71=[];u cF=iA(2q);R(u i=0;i<cF.K;i++){u a=cF[i];71.1c([\" \",a.1b,\"=\\\\\"\",cB(a.3m),\"\\\\\"\"])}71.iz();R(i=0;i<71.K;i++){u cE=71[i];R(u j=0;j<cE.K;j++){1g.1c(cE[j])}}if(2q.ue()){1g.1c(\">\");70.1c(\"</\"+2q.cD.8G()+\">\");u cC=2q.5h;R(i=cC.K-1;i>=0;i--){70.1c(cC[i])}}N{1g.1c(\"/>\")}}N{if(2q.3T==3){1g.1c(cB(2q.iv))}}}}F 1g},97:G(ix,cA){u m=B.J;u iy=m.1R(O,M,1);B.15.9a(m.47(O,m.2r(B.S.1E,iy)),G(cA){cA.1T.3u=ix})},iw:G(1j,iu){u W=[];(G(1j){u cn=1j.5h;if(cn){R(u i=0;i<cn.K;i++){M.2U.cz(D,cn[i])}}u cy=1j.iv;if(H(cy)==\"1n\"){W.1c(cy)}})(B.S.1E(1j));if(iu){F W}N{F W.2b(\"\")}},2d:G(2m){u m=B.J;D.1Z=2v;D.3X=2m;D.9b=Y m.4a();u 6Z=D.1Z.2S(\"cj\");u 2T;if(6Z&&6Z.6Y&&6Z.6Y.K>0){u it=m.47;2T=G(1j){F it(2T.ir,1j.6Y)};2T.cx={};B.15.9a(6Z.6Y,G(a){2T.cx[a.1b]=a.3m});2T.ir=G(a){F(2T.cx[a.1b]!=a.3m)};2T.6X=1m;2T.99={\"iq\":\"3M\",\"ip\":\"ud\",\"uc\":\"ub\",\"R\":\"u9\"}}N{2T=G(1j){F 1j.6Y};2T.6X=1h;2T.99={}}D.4U=2T;u 1C=D.cw;D.io=1C(\"ul\");D.il=1C(\"ol\");D.ik=1C(\"li\");D.ij=1C(\"td\");D.cm=1C(\"tr\");D.ii=1C(\"u8\");D.ih=1C(\"u7\");D.ig=1C(\"u6\");D.ie=1C(\"u5\");D.ic=1C(\"th\");D.cv=1C(\"ck\");D.8d=1C(\"cj\");D.A=1C(\"a\");D.6m=1C(\"4u\");D.ib=1C(\"u4\");D.ia=1C(\"2e\");D.i9=1C(\"tt\");D.i8=1C(\"4O\");D.i7=1C(\"h1\");D.i6=1C(\"h2\");D.i5=1C(\"h3\");D.i4=1C(\"br\");D.i3=1C(\"hr\");D.i2=1C(\"u3\");D.i1=1C(\"u2\");D.cu=1C(\"u1\");D.P=1C(\"p\");D.ct=1C(\"u0\");D.i0=1C(\"hJ\");D.hZ=1C(\"tZ\");D.hY=1C(\"tY\");D.hX=1C(\"tX\");D.hW=1C(\"tW\");D.hV=1C(\"tV\");D.hU=m.2z(D.97,\"98\");D.hT=m.2z(D.97,\"8c\");D.hS=D.cs;D.$=D.1E;D.2k={\":3e\":D.1z,\":1p\":m.2o(D.1z,D.1W)};m.3f(D)}});B.S.2d(((H(2O)==\"L\")?D:2O));if(!B.3d){95=B.S.95;94=B.S.94}B.J.2Y(D,B.S);if(H(1q)!=\"L\"){1q.2X(\"B.1I\");1q.2M(\"B.1H\");1q.2M(\"B.J\")}if(H(1x)!=\"L\"){1x.26(\"B.1H\",[]);1x.26(\"B.J\",[])}1f{if(H(B.J)==\"L\"||H(B.1H)==\"L\"){14\"\"}}1e(e){14\"B.1I 3F on B.J 3W B.1H!\"}if(H(B.1I)==\"L\"){B.1I={}}B.1I.1r=\"B.1I\";B.1I.1Y=\"1.3.1\";B.1I.1K=G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"};B.1I.1l=G(){F D.1K()};B.1I.bY=G(6W){u m=B.1I;6W=!(!6W);if(m.3l&&m.3l.8Q!=6W){m.3l.hA();m.3l=O}if(!m.3l||m.3l.8P){m.3l=Y m.1I(6W,B.1H.2L)}F m.3l};B.1I.1I=G(4R,6V){if(H(6V)==\"L\"||6V===O){6V=B.1H.2L}D.2L=6V;u tU=B.J.2l;u c3=B.J.8Z;u 1O=B.J.1O;u hM=B.J.4L;u 2m=2O;u 6U=\"tT\";if(H(B.S)!=\"L\"){2m=B.S.cr()}if(!4R){u 5F=2m.tS.tR.2R(\"?\")[0].23(/[:\\\\/.><&]/g,\"hR\");u 1b=6U+\"hR\"+5F;u 5D=2m.cp(\"\",1b,\"tQ,tP,3V=hQ\");if(!5D){cq(\"tO tN to cp tM 2O tL to hP-up tK.\");F L}5D.2v.fl(\"<!tJ co tI \\\\\"-//tH//tG co 4.0 tF//tE\\\\\" \"+\"\\\\\"fq://fp.tD.fo/cm/tC/tB.tA\\\\\">\"+\"<hO><5E><8Y>[B.1I]</8Y></5E>\"+\"<5s></5s></hO>\");5D.2v.hG();5D.2v.8Y+=\" \"+2m.2v.8Y;2m=5D}u 1N=2m.2v;D.1N=1N;u 21=1N.hN(6U);u c4=!!21;if(21&&H(21.5B)!=\"L\"){21.5B.2L=D.2L;21.5B.6K();F 21.5B}if(c4){u cl;1M((cl=21.6n)){21.6S(cl)}}N{21=1N.2S(\"4u\");21.id=6U}21.5B=D;u 8T=1N.2S(\"ck\");u 8S=1N.2S(\"ck\");u 6O=1N.2S(\"2e\");u 6N=1N.2S(\"2e\");u 6M=1N.2S(\"2e\");u 6L=1N.2S(\"2e\");u 3L=1N.2S(\"4u\");u 42=1N.2S(\"4u\");u 8U=6U+\"tz\";D.8N=hM(D.8N);u 4T=[];u 6R=O;u cf=G(1t){u 6T=1t.3N;if(H(6T)==\"2y\"){6T=B.1H.5C[6T]}F 6T};u cd=G(1t){F 1t.3z.2b(\" \")};u ca=1O(G(1t){u 8W=cf(1t);u 7X=cd(1t);u c=D.8N[8W];u p=1N.2S(\"cj\");p.3M=\"B-49 B-5C-\"+8W;p.1T.3x=\"ty: 2N; 4F-8X: -hL-4O-3y; 4F-8X: -o-4O-3y; 4F-8X: 4O-3y; 4F-8X: 4O-tx; hK-3y: 2K-hK; 3y-hJ: tw; 3U: \"+c;p.2c(1N.4S(8W+\": \"+7X));42.2c(p);42.2c(1N.2S(\"br\"));if(3L.ci>3L.hI){3L.4C=0}N{3L.4C=3L.hI}},D);u hD=G(1t){4T[4T.K]=1t;ca(1t)};u hF=G(){u cg,ce;1f{cg=Y 8V(8T.3m);ce=Y 8V(8S.3m)}1e(e){ch(\"2x in 47 tv: \"+e.43);F O}F G(1t){F(cg.hH(cf(1t))&&ce.hH(cd(1t)))}};u cc=G(){1M(42.6n){42.6S(42.6n)}};u hB=G(){4T=[];cc()};u bZ=1O(G(){if(D.8P){F}D.8P=1h;if(B.1I.3l==D){B.1I.3l=O}D.2L.c9(8U);21.5B=O;if(4R){21.3t.6S(21)}N{D.2m.hG()}},D);u c7=G(){cc();R(u i=0;i<4T.K;i++){u 1t=4T[i];if(6R===O||6R(1t)){ca(1t)}}};D.6K=G(){6R=hF();c7();D.2L.c9(8U);D.2L.hE(8U,6R,hD)};u c0=1O(G(){4T=D.2L.c8();c7()},D);u c2=1O(G(6Q){6Q=6Q||2O.6D;2h=6Q.6w||6Q.8t;if(2h==13){D.6K()}},D);u 31=\"3u: 8c; z-c6: c5; 2I: 2N; 6f: 2N; 6P: tu; 5A: 3k%; he-3U: 4F; c1: \"+D.8O;if(4R){31+=\"; 3V: ts; 3E-3D: fO 8a 8y\"}N{31+=\"; 3V: 3k%;\"}21.1T.3x=31;if(!c4){1N.5s.2c(21)}31={\"3x\":\"5A: 33%; 3u: 8Q; c1: \"+D.8O};c3(8T,{\"3m\":\"8L|8M|8K|8J|8I\",\"hC\":c2,\"1T\":31});21.2c(8T);c3(8S,{\"3m\":\".*\",\"hC\":c2,\"1T\":31});21.2c(8S);31=\"5A: 8%; 3u:8Q; c1: \"+D.8O;6O.2c(1N.4S(\"tq\"));6O.8R=1O(\"6K\",D);6O.1T.3x=31;21.2c(6O);6N.2c(1N.4S(\"tp\"));6N.8R=c0;6N.1T.3x=31;21.2c(6N);6M.2c(1N.4S(\"tn\"));6M.8R=hB;6M.1T.3x=31;21.2c(6M);6L.2c(1N.4S(\"tm\"));6L.8R=bZ;6L.1T.3x=31;21.2c(6L);3L.1T.3x=\"fS: tk; 5A: 3k%\";42.1T.3x=\"5A: 3k%; 3V: \"+(4R?\"tj\":\"3k%\");3L.2c(42);21.2c(3L);D.6K();c0();if(4R){D.2m=L}N{D.2m=2m}D.8Q=4R;D.hA=bZ;D.8P=1m;F D};B.1I.1I.1U={\"8O\":\"ti tg,tf-te\",\"8N\":{\"8M\":\"1v\",\"8L\":\"gU\",\"8K\":\"1F\",\"8J\":\"8y\",\"8I\":\"bx\"}};B.1I.1W=[\"1I\"];B.1I.1z=[\"bY\"];B.1I.2d=G(){D.2k={\":3e\":D.1z,\":1p\":B.J.2o(D.1z,D.1W)};B.J.3f(D);B.1I.3l=O};B.1I.2d();B.J.2Y(D,B.1I);if(H(1q)!=\"L\"){1q.2X(\"B.V\");1q.2M(\"B.J\")}if(H(1x)!=\"L\"){1x.26(\"B.J\",[])}1f{if(H(B.J)==\"L\"){14\"\"}}1e(e){14\"B.V 3F on B.J\"}if(H(B.V)==\"L\"){B.V={}}B.V.1r=\"B.V\";B.V.1Y=\"1.3.1\";B.V.1K=G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"};B.V.1l=G(){F D.1K()};B.V.V=G(1v,hz,1F,6J){if(H(6J)==\"L\"||6J===O){6J=1}D.1B={r:1v,g:hz,b:1F,a:6J}};B.V.V.1U={bX:B.V.V,tc:G(hy){u 1B=D.1B;u m=B.V;F m.V.3Y(1B.r,1B.g,1B.b,hy)},tb:G(1o){u 1G=D.41();1G.h=1o;u m=B.V;F m.V.4H(1G)},ta:G(hx){u 1G=D.41();1G.s=hx;u m=B.V;F m.V.4H(1G)},t9:G(hw){u 1G=D.41();1G.l=hw;u m=B.V;F m.V.4H(1G)},t8:G(hv){u 1G=D.41();1G.l=28.29(1G.l-hv,0);u m=B.V;F m.V.4H(1G)},t7:G(hu){u 1G=D.41();1G.l=28.2a(1G.l+hu,1);u m=B.V;F m.V.4H(1G)},fJ:G(ht,5z){if(H(5z)==\"L\"||5z===O){5z=0.5}u sf=1-5z;u s=D.1B;u d=ht.1B;u df=5z;F B.V.V.3Y((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df))},h4:G(hs){u a=D.6r();u b=hs.6r();F B.J.2f([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a])},hq:G(){F D.41().b>0.5},t6:G(){F(!D.hq())},t5:G(){u c=D.41();u 2Z=B.V.6F;u W=D.ho;if(!W){u 5y=(2Z(c.h,bF).6I(0)+\",\"+2Z(c.s,3k).hp(4)+\"%\"+\",\"+2Z(c.l,3k).hp(4)+\"%\");u a=c.a;if(a>=1){a=1;W=\"1G(\"+5y+\")\"}N{if(a<=0){a=0}W=\"t4(\"+5y+\",\"+a+\")\"}D.ho=W}F W},hl:G(){u c=D.1B;u 2Z=B.V.6F;u W=D.hn;if(!W){u 5y=(2Z(c.r,3h).6I(0)+\",\"+2Z(c.g,3h).6I(0)+\",\"+2Z(c.b,3h).6I(0));if(c.a!=1){W=\"t3(\"+5y+\",\"+c.a+\")\"}N{W=\"1B(\"+5y+\")\"}D.hn=W}F W},6r:G(){F B.J.4L(D.1B)},t2:G(){u m=B.V;u c=D.1B;u 2Z=B.V.6F;u W=D.hm;if(!W){W=(\"#\"+m.6E(2Z(c.r,3h))+m.6E(2Z(c.g,3h))+m.6E(2Z(c.b,3h)));D.hm=W}F W},t1:G(){u 2Q=D.2Q;u c=D.1B;if(H(2Q)==\"L\"||2Q===O){2Q=B.V.bA(D.1B);D.2Q=2Q}F B.J.4L(2Q)},41:G(){u 1G=D.1G;u c=D.1B;if(H(1G)==\"L\"||1G===O){1G=B.V.bC(D.1B);D.1G=1G}F B.J.4L(1G)},1l:G(){F D.hl()},U:G(){u c=D.1B;u hk=[c.r,c.g,c.b,c.a];F D.bX.1r+\"(\"+hk.2b(\", \")+\")\"}};B.J.2l(B.V.V,{3Y:G(1v,bW,1F,8H){u hj=B.V.V;if(M.K==1){u 1B=1v;1v=1B.r;bW=1B.g;1F=1B.b;if(H(1B.a)==\"L\"){8H=L}N{8H=1B.a}}F Y hj(1v,bW,1F,8H)},4H:G(1o,t0,sZ,sY){u m=B.V;F m.V.3Y(m.bB.1w(m,M))},sX:G(1o,sW,sV,sU){u m=B.V;F m.V.3Y(m.bz.1w(m,M))},hi:G(1b){u 8F=B.V.V;if(1b.3Z(0)==\"\\\\\"\"){1b=1b.3H(1,1b.K-2)}u bV=8F.by[1b.8G()];if(H(bV)==\"1n\"){F 8F.bT(bV)}N{if(1b==\"aP\"){F 8F.sT()}}F O},8f:G(4Q){u I=B.V.V;u bU=4Q.3H(0,3);if(bU==\"1B\"){F I.h9(4Q)}N{if(bU==\"1G\"){F I.h8(4Q)}N{if(4Q.3Z(0)==\"#\"){F I.bT(4Q)}}}F I.hi(4Q)},bT:G(4P){if(4P.3Z(0)==\"#\"){4P=4P.2W(1)}u 8E=[];u i,5x;if(4P.K==3){R(i=0;i<3;i++){5x=4P.3H(i,1);8E.1c(3w(5x+5x,16)/3h)}}N{R(i=0;i<6;i+=2){5x=4P.3H(i,2);8E.1c(3w(5x,16)/3h)}}u bS=B.V.V;F bS.3Y.1w(bS,8E)},bG:G(4O,hf,hg,4N){if(4N.2A(4O)===0){4N=4N.2W(4N.2A(\"(\",3)+1,4N.K-1)}u bR=4N.2R(/\\\\s*,\\\\s*/);u bP=[];R(u i=0;i<bR.K;i++){u c=bR[i];u 2i;u bQ=c.2W(c.K-3);if(c.3Z(c.K-1)==\"%\"){2i=0.bE*4M(c.2W(0,c.K-1))}N{if(bQ==\"sS\"){2i=4M(c)/bF}N{if(bQ==\"sR\"){2i=4M(c)/(28.sQ*2)}N{2i=hg[i]*4M(c)}}}bP.1c(2i)}F D[hf].1w(D,bP)},bN:G(Q,sP,sO){u d=B.S;u 2F=B.V.V;R(Q=d.1E(Q);Q;Q=Q.3t){u bO=d.4q.1w(d,M);if(!bO){2V}u 8D=2F.8f(bO);if(!8D){2K}if(8D.6r().a>0){F 8D}}F O},ba:G(Q){u 2F=B.V.V;F 2F.bN(Q,\"aZ\",\"he-3U\")||2F.sN()},sM:G(Q){u 2F=B.V.V;F 2F.bN(Q,\"3U\",\"3U\")||2F.sL()},sK:G(){F B.J.4L(B.V.V.by)}});B.J.2l(B.V,{6F:G(v,8C){v*=8C;if(v<0){F 0}N{if(v>8C){F 8C}N{F v}}},hc:G(n1,n2,1o){if(1o>6){1o-=6}N{if(1o<0){1o+=6}}u 2i;if(1o<1){2i=n1+(n2-n1)*1o}N{if(1o<3){2i=n2}N{if(1o<4){2i=n1+(n2-n1)*(4-1o)}N{2i=n1}}}F 2i},bz:G(1o,5w,3i,bM){if(M.K==1){u 2Q=1o;1o=2Q.h;5w=2Q.s;3i=2Q.v;bM=2Q.a}u 1v;u 3K;u 1F;if(5w===0){1v=0;3K=0;1F=0}N{u i=28.8B(1o*6);u f=(1o*6)-i;u p=3i*(1-5w);u q=3i*(1-(5w*f));u t=3i*(1-(5w*(1-f)));hd(i){3j 1:1v=q;3K=3i;1F=p;2K;3j 2:1v=p;3K=3i;1F=t;2K;3j 3:1v=p;3K=q;1F=3i;2K;3j 4:1v=t;3K=p;1F=3i;2K;3j 5:1v=3i;3K=p;1F=q;2K;3j 6:3j 0:1v=3i;3K=t;1F=p;2K}}F{r:1v,g:3K,b:1F,a:bM}},bB:G(1o,5v,3v,bL){if(M.K==1){u 1G=1o;1o=1G.h;5v=1G.s;3v=1G.l;bL=1G.a}u 1v;u 8A;u 1F;if(5v===0){1v=3v;8A=3v;1F=3v}N{u m2;if(3v<=0.5){m2=3v*(1+5v)}N{m2=3v+5v-(3v*5v)}u m1=(2*3v)-m2;u f=B.V.hc;u h6=1o*6;1v=f(m1,m2,h6+2);8A=f(m1,m2,h6);1F=f(m1,m2,h6-2)}F{r:1v,g:8A,b:1F,a:bL}},bA:G(1v,4K,1F,bK){if(M.K==1){u 1B=1v;1v=1B.r;4K=1B.g;1F=1B.b;bK=1B.a}u 29=28.29(28.29(1v,4K),1F);u 2a=28.2a(28.2a(1v,4K),1F);u 1o;u 8z;u hb=29;if(2a==29){1o=0;8z=0}N{u 6H=(29-2a);8z=6H/29;if(1v==29){1o=(4K-1F)/6H}N{if(4K==29){1o=2+((1F-1v)/6H)}N{1o=4+((1v-4K)/6H)}}1o/=6;if(1o<0){1o+=1}if(1o>1){1o-=1}}F{h:1o,s:8z,v:hb,a:bK}},bC:G(1v,4J,1F,bI){if(M.K==1){u 1B=1v;1v=1B.r;4J=1B.g;1F=1B.b;bI=1B.a}u 29=28.29(1v,28.29(4J,1F));u 2a=28.2a(1v,28.2a(4J,1F));u 1o;u 6G;u bJ=(29+2a)/2;u 4I=29-2a;if(4I===0){1o=0;6G=0}N{if(bJ<=0.5){6G=4I/(29+2a)}N{6G=4I/(2-29-2a)}if(1v==29){1o=(4J-1F)/4I}N{if(4J==29){1o=2+((1F-1v)/4I)}N{1o=4+((1v-4J)/4I)}}1o/=6;if(1o<0){1o+=1}if(1o>1){1o-=1}}F{h:1o,s:6G,l:bJ,a:bI}},6E:G(1P){1P=28.ha(1P);u bH=1P.1l(16);if(1P<16){F\"0\"+bH}F bH},2d:G(){u m=B.J;D.V.h9=m.1O(D.V.bG,D.V,\"1B\",\"3Y\",[1/3h,1/3h,1/3h,1]);D.V.h8=m.1O(D.V.bG,D.V,\"1G\",\"4H\",[1/bF,0.bE,0.bE,1]);u 4G=1/3;u bD={8y:[0,0,0],1F:[0,0,1],gY:[0.6,0.4,0.2],gX:[0,1,1],sJ:[4G,4G,4G],gR:[0.5,0.5,0.5],bx:[0,1,0],sI:[2*4G,2*4G,2*4G],gN:[1,0,1],gL:[1,0.5,0],gK:[0.5,0,0.5],1v:[1,0,0],aP:[0,0,0,0],4F:[1,1,1],gI:[1,1,0]};u h7=G(1b,r,g,b,a){u W=D.3Y(r,g,b,a);D[1b]=G(){F W};F W};R(u k in bD){u 1b=k+\"V\";u h5=m.2o([h7,D.V,1b],bD[k]);D.V[1b]=m.1O.1w(O,h5)}u h0=G(){R(u i=0;i<M.K;i++){if(!(M[i]2C V)){F 1m}}F 1h};u gZ=G(a,b){F a.h4(b)};m.3f(D);m.5u(D.V.1r,h0,gZ);D.2k={\":3e\":D.1z,\":1p\":m.2o(D.1z,D.1W)}}});B.V.1z=[\"V\"];B.V.1W=[\"6F\",\"bC\",\"bB\",\"bA\",\"bz\",\"6E\"];B.V.2d();B.J.2Y(D,B.V);B.V.V.by={sH:\"#sG\",sF:\"#sE\",sD:\"#gW\",sC:\"#sB\",sA:\"#sz\",sy:\"#sx\",sw:\"#sv\",8y:\"#su\",st:\"#sr\",1F:\"#sq\",sp:\"#so\",gY:\"#sn\",sm:\"#sl\",sk:\"#sj\",si:\"#sh\",sg:\"#se\",sd:\"#sc\",sb:\"#sa\",s9:\"#s8\",s7:\"#s6\",gX:\"#gW\",s5:\"#s4\",s3:\"#s2\",s1:\"#s0\",rZ:\"#gV\",rY:\"#rX\",rW:\"#gV\",rV:\"#rU\",rT:\"#rS\",rR:\"#rQ\",rP:\"#rO\",rN:\"#rM\",gU:\"#rL\",rK:\"#rJ\",rI:\"#rH\",rG:\"#rF\",rE:\"#gT\",rD:\"#gT\",rC:\"#rB\",rA:\"#rz\",ry:\"#rx\",rw:\"#rv\",ru:\"#gS\",rt:\"#gS\",rs:\"#rr\",rq:\"#rp\",ro:\"#rn\",rm:\"#rl\",rk:\"#gM\",rj:\"#ri\",rh:\"#rg\",rf:\"#rd\",rc:\"#rb\",gR:\"#gQ\",bx:\"#ra\",r9:\"#r8\",r7:\"#gQ\",r6:\"#r5\",r4:\"#r3\",r2:\"#r1\",r0:\"#qZ\",qY:\"#qX\",qW:\"#qV\",qU:\"#qT\",qS:\"#qR\",qQ:\"#qP\",qO:\"#qN\",qM:\"#qL\",qK:\"#qJ\",qI:\"#qH\",qG:\"#qF\",qE:\"#gP\",qD:\"#qC\",qB:\"#gP\",qA:\"#qz\",qy:\"#qx\",qw:\"#qv\",qu:\"#qt\",qr:\"#gO\",qq:\"#gO\",qp:\"#qo\",qn:\"#qm\",ql:\"#qk\",qj:\"#qi\",qh:\"#qg\",gN:\"#gM\",qf:\"#qe\",qd:\"#qc\",qb:\"#qa\",q9:\"#q8\",q7:\"#q6\",q5:\"#q4\",q3:\"#q2\",q1:\"#q0\",pZ:\"#pY\",pX:\"#pW\",pV:\"#pU\",pT:\"#pS\",pR:\"#pQ\",pP:\"#pO\",pN:\"#pM\",pL:\"#pK\",pJ:\"#pI\",pH:\"#pG\",pF:\"#pE\",gL:\"#pD\",pC:\"#pB\",pA:\"#pz\",py:\"#pw\",pv:\"#pu\",pt:\"#ps\",pr:\"#pq\",pp:\"#po\",pn:\"#pm\",pl:\"#pj\",pi:\"#ph\",pg:\"#pf\",pe:\"#pd\",gK:\"#pc\",1v:\"#pb\",pa:\"#p9\",p8:\"#p7\",p6:\"#p5\",p4:\"#p3\",p2:\"#p1\",p0:\"#oZ\",oY:\"#oX\",oW:\"#oV\",oU:\"#oT\",oS:\"#oR\",oQ:\"#oP\",oO:\"#gJ\",oN:\"#gJ\",oM:\"#oL\",oK:\"#oJ\",oI:\"#oH\",oG:\"#oF\",oE:\"#oD\",oC:\"#oB\",oA:\"#oz\",oy:\"#ox\",ow:\"#ov\",ou:\"#ot\",4F:\"#os\",oq:\"#op\",gI:\"#oo\",om:\"#ok\"};if(H(1q)!=\"L\"){1q.2X(\"B.1u\");1q.2M(\"B.J\");1q.2M(\"B.S\")}if(H(1x)!=\"L\"){1x.26(\"B.J\",[]);1x.26(\"B.S\",[])}1f{if(H(B.J)==\"L\"){14\"\"}}1e(e){14\"B.1u 3F on B.J!\"}1f{if(H(B.S)==\"L\"){14\"\"}}1e(e){14\"B.1u 3F on B.S!\"}if(H(B.1u)==\"L\"){B.1u={}}B.1u.1r=\"B.1u\";B.1u.1Y=\"1.3.1\";B.1u.4x=[];B.1u.bq=G(1d,e){D.1L=e||2O.6D;D.gH=1d};B.J.2l(B.1u.bq.1U,{1K:G(){u U=B.J.U;u 1y=\"{6D(): \"+U(D.6D())+\", 1d(): \"+U(D.1d())+\", 1J(): \"+U(D.1J())+\", 8x(): \"+U(D.8x())+\", 4E(): \"+\"{8w: \"+U(D.4E().8w)+\", 8v: \"+U(D.4E().8v)+\", 8u: \"+U(D.4E().8u)+\", 2P: \"+U(D.4E().2P)+\", bw: \"+U(D.4E().bw)+\"}\";if(D.1J()&&D.1J().2A(\"2h\")===0){1y+=\", 2h(): {3J: \"+U(D.2h().3J)+\", 1n: \"+U(D.2h().1n)+\"}\"}if(D.1J()&&(D.1J().2A(\"3I\")===0||D.1J().2A(\"gE\")!=-1||D.1J()==\"gD\")){1y+=\", 3I(): {4D: \"+U(D.3I().4D)+\", 6A: \"+U(D.3I().6A);if(D.1J()!=\"gC\"){1y+=\", 2e: {2I: \"+U(D.3I().2e.2I)+\", 6v: \"+U(D.3I().2e.6v)+\", 3g: \"+U(D.3I().2e.3g)+\"}}\"}N{1y+=\"}\"}}if(D.1J()==\"gG\"||D.1J()==\"gF\"){1y+=\", 6C(): \"+U(D.6C())}1y+=\"}\";F 1y},1l:G(){F D.1K()},1d:G(){F D.gH},6D:G(){F D.1L},1J:G(){F D.1L.1J||L},8x:G(){F D.1L.8x||D.1L.oj},6C:G(){if(D.1J()==\"gG\"){F(D.1L.6C||D.1L.aW)}N{if(D.1J()==\"gF\"){F(D.1L.6C||D.1L.oi)}}F L},4E:G(){u m={};m.8w=D.1L.oh;m.8v=D.1L.og;m.8u=D.1L.oe||1m;m.2P=D.1L.od;m.bw=m.8w||m.8v||m.2P||m.8u;F m},2h:G(){u k={};if(D.1J()&&D.1J().2A(\"2h\")===0){if(D.1J()==\"oc\"||D.1J()==\"ob\"){k.3J=D.1L.8t;k.1n=(B.1u.5r[k.3J]||\"oa\");F k}N{if(D.1J()==\"o9\"){k.3J=0;k.1n=\"\";if(H(D.1L.6B)!=\"L\"&&D.1L.6B!==0&&!B.1u.bv[D.1L.6B]){k.3J=D.1L.6B;k.1n=bu.bt(k.3J)}N{if(D.1L.8t&&H(D.1L.6B)==\"L\"){k.3J=D.1L.8t;k.1n=bu.bt(k.3J)}}F k}}}F L},3I:G(){u m={};u e=D.1L;if(D.1J()&&(D.1J().2A(\"3I\")===0||D.1J().2A(\"gE\")!=-1||D.1J()==\"gD\")){m.6A=Y B.S.5t(0,0);if(e.6z||e.6x){m.6A.x=(!e.6z||e.6z<0)?0:e.6z;m.6A.y=(!e.6x||e.6x<0)?0:e.6x}m.4D=Y B.S.5t(0,0);if(e.8s||e.8r){m.4D.x=(!e.8s||e.8s<0)?0:e.8s;m.4D.y=(!e.8r||e.8r<0)?0:e.8r}N{u de=B.S.1Z.7Z;u b=B.S.1Z.5s;m.4D.x=e.6z+(de.6y||b.6y)-(de.8q||b.8q);m.4D.y=e.6x+(de.4C||b.4C)-(de.8p||b.8p)}if(D.1J()!=\"gC\"){m.2e={};m.2e.2I=1m;m.2e.3g=1m;m.2e.6v=1m;if(e.6w){m.2e.2I=(e.6w==1);m.2e.6v=(e.6w==2);m.2e.3g=(e.6w==3)}N{m.2e.2I=!!(e.2e&1);m.2e.3g=!!(e.2e&2);m.2e.6v=!!(e.2e&4)}}F m}F L},2J:G(){D.8o();D.8n()},8o:G(){if(D.1L.8o){D.1L.8o()}N{D.1L.o8=1h}},8n:G(){if(D.1L.8n){D.1L.8n()}N{D.1L.o7=1m}}});B.1u.bv={3:\"gz\",o6:\"gA\",o5:\"gy\",o4:\"gx\",o3:\"gw\",o2:\"gv\",o1:\"gu\",o0:\"gs\",nZ:\"gr\",nY:\"gq\",nX:\"gp\",nW:\"go\"};R(i=gB;i<=nV;i++){B.1u.bv[i]=\"gk\"+(i-gB+1)}B.1u.5r={8:\"nU\",9:\"nT\",12:\"gA\",13:\"gz\",16:\"nS\",17:\"nR\",18:\"nQ\",19:\"nP\",20:\"nO\",27:\"nN\",32:\"nM\",33:\"gy\",34:\"gx\",35:\"gw\",36:\"gv\",37:\"gu\",38:\"gs\",39:\"gr\",40:\"gq\",44:\"nL\",45:\"gp\",46:\"go\",59:\"gn\",91:\"nK\",92:\"nJ\",93:\"nI\",nH:\"nG\",nF:\"nE\",nD:\"nC-gm\",nB:\"nA\",nz:\"ny\",nx:\"nw\",nv:\"nu\",nt:\"gn\",ns:\"nr\",nq:\"np\",nn:\"nm-gm\",nl:\"nk\",nj:\"ni\",nh:\"ng\",nf:\"nd\",nc:\"nb\",na:\"n9\",n8:\"n7\"};R(u i=48;i<=57;i++){B.1u.5r[i]=\"gl\"+(i-48)}R(i=65;i<=90;i++){B.1u.5r[i]=\"gl\"+bu.bt(i)}R(i=96;i<=n6;i++){B.1u.5r[i]=\"n5\"+(i-96)}R(i=gj;i<=n4;i++){B.1u.5r[i]=\"gk\"+(i-gj+1)}B.J.2l(B.1u,{1K:G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"},1l:G(){F D.1K()},g7:G(){u I=B.1u;u bs=I.4x;R(u i=0;i<bs.K;i++){I.6t(bs[i])}gi I.4x;1f{2O.gh=L}1e(e){}1f{2O.g8=L}1e(e){}},gb:G(1d,1A,1i,gg){u E=B.1u.bq;if(!gg){F B.J.1O(1A,1i)}1i=1i||1d;if(H(1A)==\"1n\"){F G(gf){1i[1A].1w(1i,[Y E(1d,gf)])}}N{F G(gd){1A.1w(1i,[Y E(1d,gd)])}}},6s:G(1d,2D,5q,4B){1d=B.S.1E(1d);u I=B.1u;if(H(2D)!=\"1n\"){14 Y 2x(\"\\'2D\\' 5p be a 1n\")}u 1i=O;u 1A=O;if(H(4B)!=\"L\"){1i=5q;1A=4B;if(H(4B)==\"1n\"){if(H(5q[4B])!=\"G\"){14 Y 2x(\"\\'bp\\' 5p be a G on \\'gc\\'\")}}N{if(H(4B)!=\"G\"){14 Y 2x(\"\\'bp\\' 5p be a G or 1n\")}}}N{if(H(5q)!=\"G\"){14 Y 2x(\"\\'gc\\' 5p be a G if \\'bp\\' is 2E n3\")}N{1A=5q}}if(H(1i)==\"L\"||1i===O){1i=1d}u bm=!!(1d.bo||1d.bn);u 8m=I.gb(1d,1A,1i,bm);if(1d.bo){1d.bo(2D.3H(2),8m,1m)}N{if(1d.bn){1d.bn(2D,8m)}}u bk=[1d,2D,8m,bm,5q,4B];I.4x.1c(bk);F bk},6t:G(6u){if(!6u[3]){F}u 1d=6u[0];u 2D=6u[1];u bj=6u[2];if(1d.ga){1d.ga(2D.3H(2),bj,1m)}N{if(1d.g9){1d.g9(2D,bj)}N{14 Y 2x(\"\\'1d\\' 5p be a S n0\")}}},8j:G(bh){u I=B.1u;u 5o=I.4x;u m=B.J;if(M.K>1){u 1d=B.S.1E(M[0]);u 2D=M[1];u 1i=M[2];u 1A=M[3];R(u i=5o.K-1;i>=0;i--){u o=5o[i];if(o[0]===1d&&o[1]===2D&&o[4]===1i&&o[5]===1A){I.6t(o);5o.4y(i,1);F 1h}}}N{u 5n=m.bi(5o,bh);if(5n>=0){I.6t(bh);5o.4y(5n,1);F 1h}}F 1m},8i:G(1d,2D){1d=B.S.1E(1d);u m=B.J;u 8l=m.bg(m.1R(O,M,1));u I=B.1u;u bd=I.6t;u 4z=I.4x;if(8l.K===0){R(u i=4z.K-1;i>=0;i--){u 4A=4z[i];if(4A[0]===1d){bd(4A);4z.4y(i,1)}}}N{u bf={};R(u i=0;i<8l.K;i++){bf[8l[i]]=1h}R(u i=4z.K-1;i>=0;i--){u 4A=4z[i];if(4A[0]===1d&&4A[1]in bf){bd(4A);4z.4y(i,1)}}}},8h:G(1d,2D){u bc=B.1u.4x;1d=B.S.1E(1d);u 3G=B.J.1R(O,M,2);u 5m=[];R(u i=0;i<bc.K;i++){u 8k=bc[i];if(8k[0]===1d&&8k[1]===2D){1f{8k[2].1w(1d,3G)}1e(e){5m.1c(e)}}}if(5m.K==1){14 5m[0]}N{if(5m.K>1){u e=Y 2x(\"mZ bb mY in mX \\'2D\\', mW bb mV\");e.bb=5m;14 e}}}});B.1u.1W=[];B.1u.1z=[\"6s\",\"8j\",\"8h\",\"8i\"];B.1u.2d=G(2m){u m=B.J;D.1Z=2v;D.3X=2m;1f{D.6s(2O,\"g8\",D.g7)}1e(e){}D.2k={\":3e\":D.1z,\":1p\":m.2o(D.1z,D.1W)};m.3f(D)};B.1u.2d(D);if(!B.3d){6s=B.1u.6s;8j=B.1u.8j;8i=B.1u.8i;8h=B.1u.8h}B.J.2Y(D,B.1u);if(H(1q)!=\"L\"){1q.2X(\"B.1X\");1q.2M(\"B.J\");1q.2M(\"B.S\");1q.2M(\"B.V\")}if(H(1x)!=\"L\"){1x.26(\"B.J\",[]);1x.26(\"B.S\",[]);1x.26(\"B.V\",[])}1f{if(H(B.J)==\"L\"||H(B.S)==\"L\"||H(B.V)==\"L\"){14\"\"}}1e(e){14\"B.1X 3F on B.J, B.S 3W B.V!\"}if(H(B.1X)==\"L\"){B.1X={}}B.1X.1r=\"B.1X\";B.1X.1Y=\"1.3.1\";B.1X.1K=G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"};B.1X.1l=G(){F D.1K()};B.1X.aI=G(e,g6){e=B.S.1E(e);D.fN(g6);if(D.1S.fL){e=D.g5(e)}u 4w=D.1S.3U;u C=B.V.V;if(D.1S.3U==\"aW\"){4w=C.ba(e)}N{if(!(4w 2C C)){4w=C.8f(4w)}}D.82=(4w.6r().a<=0);u 5l=D.1S.aV;if(D.1S.aV==\"fM\"){5l=C.ba(e.8g)}N{if(!(5l 2C C)){5l=C.8f(5l)}}D.g3(e,4w,5l)};B.1X.aI.1U={g5:G(e){u mU=e.3t;u 1N=B.S.b9();if(H(1N.5k)==\"L\"||1N.5k===O){F e}u 4v=1N.5k.g4(e,O);if(H(4v)==\"L\"||4v===O){F e}u b8=B.S.6m({\"1T\":{3u:\"8c\",mT:4v.6q(\"6p-3D\"),85:4v.6q(\"6p-3g\"),mS:4v.6q(\"6p-6f\"),86:4v.6q(\"6p-2I\"),6p:\"2N\"}});b8.6o=e.6o;e.6o=\"\";e.2c(b8);F e},g3:G(e,b7,8e){if(D.1S.3E){D.g2(e,8e)}if(D.fy()){D.fX(e,b7,8e)}if(D.fx()){D.fV(e,b7,8e)}},g2:G(el,g1){u b6=\"6l 8a \"+D.aQ(g1);u g0=\"3E-2I: \"+b6;u fZ=\"3E-3g: \"+b6;u fY=\"1T=\\'\"+g0+\";\"+fZ+\"\\'\";el.6o=\"<4u \"+fY+\">\"+el.6o+\"</4u>\"},fX:G(el,fW,b5){u b4=D.b1(b5);R(u i=0;i<D.1S.89;i++){b4.2c(D.b0(fW,b5,i,\"3D\"))}el.1T.mR=0;el.mQ(b4,el.6n)},fV:G(el,fU,b3){u b2=D.b1(b3);R(u i=(D.1S.89-1);i>=0;i--){b2.2c(D.b0(fU,b3,i,\"6f\"))}el.1T.mP=0;el.2c(b2)},b1:G(fT){u 2q=B.S;F 2q.6m({1T:{aZ:fT.1l()}})},b0:G(aY,fQ,n,aX){u 6k=B.S.8d();u 2p=6k.1T;2p.aZ=aY.1l();2p.3u=\"8c\";2p.3V=\"6l\";2p.fS=\"fR\";2p.mO=\"6l\";u 8b=D.aQ(aY,fQ);if(D.1S.3E&&n===0){2p.mN=\"8a\";2p.mM=\"6l\";2p.84=\"2N\";2p.83=\"2N\";2p.mL=\"2N\";2p.3V=\"2N\";2p.fP=8b.1l()}N{if(8b){2p.fP=8b.1l();2p.mK=\"8a\";2p.mJ=\"2N 6l\"}}if(!D.1S.4r&&(n==(D.1S.89-1))){2p.3V=\"fO\"}D.fI(6k,n,aX);D.fG(6k,n,aX);F 6k},fN:G(fK){D.1S={6g:\"1p\",3U:\"aW\",aV:\"fM\",5j:1h,3E:1m,4r:1m,fL:1m};B.J.2l(D.1S,fK);D.1S.89=(D.1S.4r?2:4)},aL:G(){u 88=D.1S.6g;if(D.6h(88,\"1p\",\"3D\")){F\"\"}u aU=(88.2A(\"tl\")!=-1);u aT=(88.2A(\"tr\")!=-1);if(aU&&aT){F\"\"}if(aU){F\"2I\"}if(aT){F\"3g\"}F\"\"},aK:G(){u 87=D.1S.6g;if(D.6h(87,\"1p\",\"6f\")){F\"\"}u aS=(87.2A(\"bl\")!=-1);u aR=(87.2A(\"br\")!=-1);if(aS&&aR){F\"\"}if(aS){F\"2I\"}if(aR){F\"3g\"}F\"\"},aQ:G(aN,aO){if(aN==\"aP\"){F aO}N{if(D.1S.3E){F D.1S.3E}N{if(D.1S.5j){F aO.fJ(aN)}}}F\"\"},fI:G(el,n,fH){u 6j=D.fE(n)+\"px\";u aM=(fH==\"3D\"?D.aL():D.aK());u 4t=el.1T;if(aM==\"2I\"){4t.86=6j;4t.85=\"2N\"}N{if(aM==\"3g\"){4t.85=6j;4t.86=\"2N\"}N{4t.86=6j;4t.85=6j}}},fG:G(el,n,fF){u 6i=D.fz(n)+\"px\";u aJ=(fF==\"3D\"?D.aL():D.aK());u 4s=el.1T;if(aJ==\"2I\"){4s.84=6i;4s.83=\"2N\"}N{if(aJ==\"3g\"){4s.83=6i;4s.84=\"2N\"}N{4s.84=6i;4s.83=6i}}},fE:G(n){if(D.82){F 0}u o=D.1S;if(o.4r&&o.5j){u fD=[1,0];F fD[n]}N{if(o.4r){u fC=[2,1];F fC[n]}N{if(o.5j){u fB=[3,2,1,0];F fB[n]}N{u fA=[5,3,2,1];F fA[n]}}}},fz:G(n){u o=D.1S;u 5i;if(o.4r&&(o.5j||D.82)){F 1}N{if(o.4r){5i=[1,0]}N{if(o.5j){5i=[2,1,1,1]}N{if(o.3E){5i=[0,2,0,0]}N{if(D.82){5i=[5,3,2,1]}N{F 0}}}}}F 5i[n]},6h:G(1y){R(u i=1;i<M.K;i++){if(1y.2A(M[i])!=-1){F 1h}}F 1m},fy:G(){F D.6h(D.1S.6g,\"1p\",\"3D\",\"tl\",\"tr\")},fx:G(){F D.6h(D.1S.6g,\"1p\",\"6f\",\"bl\",\"br\")},mI:G(el){F(el.5h.K==1&&el.5h[0].3T==3)}};B.1X.aF=G(e,fw){Y B.1X.aI(e,fw)};B.1X.fs=G(fv,fu,ft){u aG=B.S.aH(fv,fu);R(u i=0;i<aG.K;i++){B.1X.aF(aG[i],ft)}};B.1X.V=B.V.V;B.1X.mH=B.S.4q;B.1X.2d=G(){u m=B.J;m.3f(D);D.2k={\":3e\":D.1z,\":1p\":m.2o(D.1z,D.1W)}};B.1X.1z=[\"aF\",\"fs\"];B.1X.1W=[];B.1X.2d();B.J.2Y(D,B.1X);if(H(B)==\"L\"){B={}}if(H(B.B)==\"L\"){B.B={}}B.B.1r=\"B.B\";B.B.1Y=\"1.3.1\";B.B.1K=G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"};B.B.1l=G(){F D.1K()};B.B.aA=[\"J\",\"15\",\"1H\",\"1D\",\"1s\",\"1k\",\"S\",\"1I\",\"V\",\"1u\",\"1X\"];if(H(1x)!=\"L\"||H(1q)!=\"L\"){if(H(1q)!=\"L\"){1q.2X(\"B.B\");1q.2M(\"B.*\")}if(H(1x)!=\"L\"){1x.26(\"B.J\",[]);1x.26(\"B.15\",[]);1x.26(\"B.1H\",[]);1x.26(\"B.1D\",[]);1x.26(\"B.1s\",[]);1x.26(\"B.1k\",[]);1x.26(\"B.S\",[]);1x.26(\"B.1I\",[]);1x.26(\"B.V\",[]);1x.26(\"B.1u\",[]);1x.26(\"B.1X\",[])}(G(){u 6e=B.J.1R;u I=B.B;u aE=I.aA;u aD=[];u aC=[];u 81={};u i,k,m,1p;R(i=0;i<aE.K;i++){m=B[aE[i]];6e(aD,m.1z);6e(aC,m.1W);R(k in m.2k){81[k]=6e(81[k],m.2k[k])}1p=m.2k[\":1p\"];if(!1p){1p=6e(O,m.1z,m.1W)}u j;R(j=0;j<1p.K;j++){k=1p[j];I[k]=m[k]}}I.1z=aD;I.1W=aC;I.2k=81}())}N{if(H(B.3d)==\"L\"){B.3d=1h}(G(){u 80=2v.fr(\"7W\");u ay=\"fq://fp.mG.fo/mF/mE/mD.is.aB.mC\";u 2w=O;u ax=O;u az={};u i;R(i=0;i<80.K;i++){u 1d=80[i].fm(\"1d\");if(!1d){2V}az[1d]=1h;if(1d.3C(/B.js$/)){2w=1d.2W(0,1d.mB(\"B.js\"));ax=80[i]}}if(2w===O){F}u 6d=B.B.aA;R(u i=0;i<6d.K;i++){if(B[6d[i]]){2V}u 7Y=2w+6d[i]+\".js\";if(7Y in az){2V}if(2v.7Z&&2v.7Z.mA==ay){u s=2v.mz(ay,\"7W\");s.4p(\"id\",\"my\"+2w+6d[i]);s.4p(\"1d\",7Y);s.4p(\"1J\",\"mx/x-fk\");ax.3t.2c(s)}N{2v.fl(\"<7W 1d=\\\\\"\"+7Y+\"\\\\\" 1J=\\\\\"7X/fk\\\\\"></7W>\")}}})()}',62,1976,'||||||||||||||||||||||||||||||var|||||||MochiKit||this||return|function|typeof|self|Base|length|undefined|arguments|else|null||elem|for|DOM||repr|Color|rval|res|new||||||throw|Iter|||||next|name|push|src|catch|try|lst|true|obj|node|Async|toString|false|string|hue|all|dojo|NAME|Format|msg|Signal|red|apply|JSAN|str|EXPORT|func|rgb|_425|DateTime|getElement|blue|hsl|Logging|LoggingPane|type|__repr__|_event|while|doc|bind|num|iter|extend|options|style|prototype|seq|EXPORT_OK|Visual|VERSION|_document||_434||replace|forwardCall|StopIteration|use||Math|max|min|join|appendChild|__new__|button|compare|date|key|val|_329|EXPORT_TAGS|update|win|pair|concat|_596|dom|map|req|Deferred|sync|document|base|Error|number|partial|indexOf||instanceof|sig|not|cls|list|fired|left|stop|break|logger|require|0px|window|shift|hsv|split|createElement|_423|callee|continue|substring|provide|_exportSymbols|ccc||_464|||||||||step|pred|_51|__compat__|common|nameFunctions|right|255|_517|case|100|_loggingPane|value|object|callback|TypeError|_251|_246|_113|parentNode|display|_522|parseInt|cssText|wrap|info|isArrayLike|end|match|top|border|depends|args|substr|mouse|code|_519|_443|className|level|err|frac|Date|_135|_85|nodeType|color|height|and|_window|fromRGB|charAt||asHSL|_444|message||||filter||LogMessage|AdapterRegistry|_366|imap|NotFound|locked|counter|_262|_messages|operator|cmp|_165|_161|pairs|arr|_52|setAttribute|computedStyle|compact|_614|_610|div|_576|_572|_observers|splice|_565|_566|_555|scrollTop|page|modifier|white|_541|fromHSL|_539|_535|_528|clone|parseFloat|_505|pre|_499|_497|_427|createTextNode|_446|attributeArray|_388|_379|updateNodeAttributes|_341|_326||box|errback|results|paused|chain|_285||ofs||NamedError|_175|_147|_122|_83|_54|_17|childNodes|_619|blend|defaultView|_574|_569|idx|_562|must|_554|_specialKeys|body|Coordinates|registerComparator|_521|_516|hex|mid|_478|width|loggingPane|LogLevel|nwin|head|url|setElementClass|callStack|path|dest|_359|boolean|register|Dimensions|DeferredLock|_313|addCallback|_310|waiting|onreadystatechange|_290|LOCALE|year|printfire|_214|log|_213|_211|pos|_155|_153||typeMatcher|listMinMax|_114|_40|itr|typ|_19|_634|_625|bottom|corners|_hasString|_612|_608|_595|1px|DIV|firstChild|innerHTML|padding|getPropertyValue|asRGB|connect|_disconnect|_559|middle|which|clientY|scrollLeft|clientX|client|charCode|relatedTarget|event|toColorPart|clampColorComponent|_537|_534|toFixed|_468|buildAndApplyFilter|_442|_441|_440|_439|position|_463|_447|removeChild|_449|uid|_428|_426|compliant|attributes|_422|_409|_412|_400|_395|_390|_389|_377|_375|_363|attr|ctx|repeat|_340|_339|isNotEmpty|_335|_333|opera|DeferredList|ret|_309|silentlyCancelled|canceller|_nextId|Array|_293|XMLHttpRequest|chained|_281|tail|_252|_225|msec|day|month|iso|Logger|_208|listeners|_200|_198|_194|_196|reduce|range|_169|_162|truth|registerRepr|_121|_70|_58|_56|_47|_45|_41|_13|_1|script|text|uri|documentElement|_630|_629|isTransparent|borderRightWidth|borderLeftWidth|marginRight|marginLeft|_602|_599|numSlices|solid|_597|block|SPAN|_579|fromString|offsetParent|signal|disconnectAll|disconnect|_570|_563|_557|preventDefault|stopPropagation|clientTop|clientLeft|pageY|pageX|keyCode|meta|ctrl|alt|target|black|_532|_524|floor|_513|_512|_500|_495|toLowerCase|_487|DEBUG|INFO|WARNING|FATAL|ERROR|colorTable|logFont|closed|inline|onclick|_438|_437|_445|RegExp|_452|space|title|updatetree|||||withDocument|withWindow||setDisplayForElement|none|renames|forEach|domConverters|escapeHTML|addElementClass|removeElementClass|once|_378|_380|_376|appendChildNodes|coerceToDOM|_355|opt|clientWidth|opacity|GenericError|fail|resultList|_307|_301|_fire|can|addCallbacks|_resback|percent|decimal|separator|twoDigitFloat|_274|_273|_264|_257|_250|_249|_254|_248|_243|_242|fmt|_240|_245|getTime|sec|hour|_209|slice|_206|iterateNextIter|registerIteratorFactory|arrayLikeIter|iteratorRegistry|takewhile|ifilterfalse|ifilter|_181|_176|_168|_166|_159|_tee|deque|arg|fun|jsonRegistry|reprString|reprRegistry|comparatorRegistry|urlEncode|_110|_108|cur|_95|_87|_71|im_preargs||_53|_57|_46|present|like|array|Argument|_15|_12|_632|_631|_633|SUBMODULES|only|_628|_627|_626|roundElement|_624|getElementsByTagAndClassName|_RoundCorners|_613|_whichSideBottom|_whichSideTop|_609|_605|_606|transparent|_borderColor|_604|_603|_601|_600|bgColor|fromElement|_594|_592|backgroundColor|_createCornerSlice|_createCorner|_590|_589|_587|_586|_581|_578|_577|currentDocument|fromBackground|errors|_568|_564||sigs|flattenArguments|_561|findIdentical|_560|_558||_556|attachEvent|addEventListener|funcOrStr|Event||_548|fromCharCode|String|_specialMacKeys|any|green|_namedColors|hsvToRGB|rgbToHSV|hslToRGB|rgbToHSL|_542|01|360|_fromColorString|_540|_536|_538|_529|_523|_518|fromComputedStyle|_511|_507|_508|_506|_501|fromHexString|_498|_496|_486|__class__|createLoggingPane|_459|_461|font|_462|_430|_435|1000|index|_460|getMessages|removeListener|_451||_457|_450|infore|_448|_456|logDebug|offsetHeight|span|input|_436|TR||HTML|open|alert|currentWindow|swapDOM|SELECT|FORM|INPUT|createDOMFunc|ignoreAttr|_421|call|_417|_410|_415|nodeName|_414|_413|emitHTML|good|_406|_399|_397|_393|_392|addLoadEvent|addToCallStack|_387|_386|_381|_382|_383|_373|_372|_369|createDOM|_365|Function|_360|_362|_358|_344|nodeWalk|formContents|_337|_338|_334|_332|offsetTop|offsetLeft|visibility|parentElement|||XMLHttpRequestError|BrowserComplianceError|CancelledError|AlreadyCalledError|evalJSONRequest|sendXMLHttpRequest|wait|doSimpleXMLHttpRequest|getXMLHttpRequest|succeed|_312|finishedCount|_308|_cbDeferred|_303|_297|queryString|_nothing|_289|XMLHTTP|ActiveXObject|eval|_284|_check|error|_279|default|rstrip|lstrip|formatLocale|roundToFixed|truncToFixed|_276|pow|_272|_271|_270|sign|_265|_263|tmp|_238|_232|toISODate|toISOTime|getFullYear|getDate|getMonth|_230|_padTwo|_228|useNativeConsole|_212|compareLogMessage|isLogMessage|unshift|_207||maxSize|_202|_199|logLevelAtLeast|console|hasIterateNext|iterateNext|arrayLike|groupby||exhaust|tee|dropwhile|applymap||islice|izip|cycle|count||_189|_188|_183|_185|_184|_186|_187|_182|identity|fetch|_180|_177|listMin|reprNumber|reprArrayLike|compareArrayLike|compareDateLike|isDateLike|findValue|_128|__export__|keyComparator|_124|_118|_93|_94|_90|_88|_84|_77|_68|_67|_66|_65|_60|im_func|_55|im_self|_48|_44|_42|_39|_36|_33|_27|_26|_25|_22|_24|_20|javascript|write|getAttribute||org|www|http|getElementsByTagName|roundClass|_623|_622|_621|_620|_isBottomRounded|_isTopRounded|_borderSize|_618|_617|_616|_615|_marginSize|_611|_setBorder|_607|_setMargin|blendedColor|_598|__unstable__wrapElement|fromParent|_setOptions|2px|borderColor|_593|hidden|overflow|_591|_588|_roundBottomCorners|_585|_roundTopCorners|_584|_583|_582|_580|_renderBorder|_roundCornersImpl|getComputedStyle|_doWrap|_571|_unloadCache|onunload|detachEvent|removeEventListener|_listener|objOrFunc|_552||_551|_549|onload|delete|112|KEY_F|KEY_|MINUS|KEY_SEMICOLON|KEY_DELETE|KEY_INSERT|KEY_ARROW_DOWN|KEY_ARROW_RIGHT|KEY_ARROW_UP||KEY_ARROW_LEFT|KEY_HOME|KEY_END|KEY_PAGE_DOWN|KEY_PAGE_UP|KEY_ENTER|KEY_NUM_PAD_CLEAR|63236|mousemove|contextmenu|click|mouseout|mouseover|_src|yellow|708090|purple|orange|ff00ff|magenta|778899|d3d3d3|808080|gray|696969|2f4f4f|darkred|a9a9a9|00ffff|cyan|brown|_547|_546||||compareRGB|_545||_543|fromHSLString|fromRGBString|round|_533|_hslValue|switch|background|_503|_504||fromName|_488|col|toRGBString|_hexString|_rgbString|_hslString|toPrecision|isLight||_481|_477|_476|_475|_474|_473|_469|_466|closePane|_458|onkeypress|_454|addListener|_455|close|test|scrollHeight|option|word|moz|_431|getElementById|html|pop|200|_|removeElement|showElement|hideElement|CANVAS|STRONG|FIELDSET|LEGEND|OPTGROUP|OPTION|TEXTAREA|LABEL|HR|BR|H3|H2|H1|PRE|TT|BUTTON|IMG|TH||TABLE||TFOOT|THEAD|TBODY|TD|LI|OL|||UL|checked|class|ignoreAttrFilter||_424|_419|nodeValue|scrapeText|_416|_418|sort|_411|toHTML|_404|hasElementClass|_403|_402|_401|swapElementClass|_398|_394|toggleElementClass|_391|focusOnLoad|_newCallStack|currentStyle|_371|replaceChildNodes|_364|_361|getNodeAttribute|_357|setNodeAttribute|_354|_352|_350|_353|toDOM|_346|_345|registerDOMConverter|selectedIndex|setElementPosition|setElementDimensions|tagName|absolute|getBoxObjectFor|getBoundingClientRect|elementPosition|_325|_324|_322|_323|offsetWidth|elementDimensions|clientHeight|innerWidth|getViewportDimensions|setOpacity|status|_317|deferred|_316|_newNamedError|maybeDeferred||gatherResults|callLater|loadJSONDoc|_311|consumeErrors|fireOnOneErrback|fireOnOneCallback|addErrback|_305|_304|_306|unlocked|release|_300|_299|_298|_296|_xhr_onreadystatechange|_xhr_canceller|304|responseText|Msxml2|addBoth|_pause|_continue|result|the|are|they|instances|_unpause|cancel|_280|_278|en_US|strip|percentFormat|twoDigitAverage|numberFormatter|_277|_275|isNaN|_259|_258|_260|_255|_253|_numberFormatter|_241|_239|_237|_236|_235|_234|_233|_231|toAmericanDate|toPaddedAmericanDate|americanDate|toISOTimestamp|isoTimestamp|isoDate|foot|sep||60000|_221|_isoRegexp|dispatchEvent|createEvent|warning|logWarning|fatal|logFatal|debug|logError|baseLog|_210|getMessageText|logToConsole|dispatchListeners|_204|_203|ident|_201|postError|alertListener|_197|_192|groupby_as_array|iextend|some|reversed|sorted|every|sum|_190|eat|_174|_173|_172|_171|_167|_163|_158|_157|_151|_144|_141||_139|_136|_134||_133|_132|zip|merge|isUndefined|isCallable|listMax|_131|_130|encodeURIComponent||_127|method|parseQueryString|evalJSON|registerJSON|serializeJSON|objMin|objMax|reverseKeyComparator|arrayEqual|objEqual|bindMethods|xfilter|xmap|isEmpty|isNull|isUndefinedOrNull|itemgetter|items|keys|setdefault|_126|_120|decodeURIComponent|_119|len|_109|_107|_104|_105|_101|_102|_98|||_100|_97|_96|_91|json|__json__|_82|_81|_80|_79|_76||_75|_74|_73|_69|_primitives|_64|_63||_62|_61|_59|_wrapDumbFunction|_49|_50|_31|_30|_21|_7|application|MochiKit_|createElementNS|namespaceURI|lastIndexOf|xul|there|gatekeeper|keymaster|mozilla|getElementsComputedStyle|_hasSingleTextChild|borderWidth|borderStyle|borderBottomWidth|borderTopWidth|borderTopStyle|fontSize|paddingBottom|insertBefore|paddingTop|marginBottom|marginTop|_575|property|see|handling|thrown|Multiple|element|||given|123|KEY_NUM_PAD_|105|KEY_APOSTROPHE|222|KEY_RIGHT_SQUARE_BRACKET|221|KEY_REVERSE_SOLIDUS|220|KEY_LEFT_SQUARE_BRACKET||219|KEY_GRAVE_ACCENT|192|KEY_SOLIDUS|191|KEY_FULL_STOP|190|KEY_HYPHEN|189||KEY_COMMA|188|KEY_EQUALS_SIGN|187|186|KEY_SCROLL_LOCK|145|KEY_NUM_LOCK|144|KEY_NUM_PAD_SOLIDUS|111|KEY_NUM_PAD_FULL_STOP|110|KEY_NUM_PAD_HYPHEN|109|KEY_NUM_PAD_PLUS_SIGN|107|KEY_NUM_PAD_ASTERISK|106|KEY_SELECT|KEY_WINDOWS_RIGHT|KEY_WINDOWS_LEFT|KEY_PRINT_SCREEN|KEY_SPACEBAR|KEY_ESCAPE|KEY_CAPS_LOCK|KEY_PAUSE|KEY_ALT|KEY_CTRL|KEY_SHIFT|KEY_TAB|KEY_BACKSPACE|63242|63272|63302|63233|63235|63232|63234|63273|63275|63277|63276|63289|returnValue|cancelBubble|keypress|KEY_UNKNOWN|keyup|keydown|shiftKey|metaKey||ctrlKey|altKey|toElement|srcElement|9acd32||yellowgreen||ffff00|f5f5f5|whitesmoke||ffffff|f5deb3|wheat|ee82ee|violet|40e0d0|turquoise|ff6347|tomato|d8bfd8|thistle|008080|teal|d2b48c|tan|4682b4|steelblue|00ff7f|springgreen|fffafa|snow|slategrey|slategray|6a5acd|slateblue|87ceeb|skyblue|c0c0c0|silver|a0522d|sienna|fff5ee|seashell|2e8b57|seagreen|f4a460|sandybrown|fa8072|salmon|8b4513|saddlebrown|4169e1|royalblue|bc8f8f|rosybrown|ff0000|800080|b0e0e6|powderblue|dda0dd|plum|ffc0cb|pink|cd853f||peru|ffdab9|peachpuff|ffefd5|papayawhip|db7093|palevioletred|afeeee|paleturquoise|98fb98|palegreen|eee8aa||palegoldenrod|da70d6|orchid|ff4500|orangered|ffa500|6b8e23|olivedrab|808000|olive|fdf5e6|oldlace|000080|navy|ffdead|navajowhite|ffe4b5|moccasin|ffe4e1|mistyrose|f5fffa|mintcream|191970|midnightblue|c71585|mediumvioletred|48d1cc|mediumturquoise|00fa9a|mediumspringgreen|7b68ee|mediumslateblue|3cb371|mediumseagreen|9370db|mediumpurple|ba55d3|mediumorchid|0000cd|mediumblue|66cdaa|mediumaquamarine|800000|maroon|faf0e6|linen|32cd32|limegreen|00ff00|lime|ffffe0|lightyellow|b0c4de|lightsteelblue|lightslategrey|lightslategray||87cefa|lightskyblue|20b2aa|lightseagreen|ffa07a|lightsalmon|ffb6c1|lightpink|lightgrey|90ee90|lightgreen|lightgray|fafad2|lightgoldenrodyellow|e0ffff|lightcyan|f08080|lightcoral|add8e6|lightblue|fffacd|lemonchiffon|7cfc00|lawngreen|fff0f5|lavenderblush|e6e6fa|lavender|f0e68c|khaki|fffff0|ivory|4b0082|indigo|cd5c5c|indianred|ff69b4|hotpink|f0fff0|honeydew|grey|adff2f|greenyellow|008000|daa520|goldenrod|ffd700||gold|f8f8ff|ghostwhite|dcdcdc|gainsboro|fuchsia|228b22|forestgreen|fffaf0|floralwhite|b22222|firebrick|1e90ff|dodgerblue|dimgrey|dimgray|00bfff|deepskyblue|ff1493|deeppink|9400d3|darkviolet|00ced1|darkturquoise|darkslategrey|darkslategray|483d8b|darkslateblue|8fbc8f|darkseagreen|e9967a|darksalmon|8b0000|9932cc|darkorchid|ff8c00|darkorange|556b2f|darkolivegreen|8b008b|darkmagenta|bdb76b|darkkhaki|darkgrey|006400|darkgreen|darkgray|b8860b|darkgoldenrod|008b8b|darkcyan|00008b|darkblue|dc143c|crimson|fff8dc|cornsilk|6495ed|cornflowerblue|ff7f50|coral|d2691e||chocolate|7fff00|chartreuse|5f9ea0|cadetblue|deb887|burlywood|a52a2a|8a2be2|blueviolet|0000ff|ffebcd||blanchedalmond|000000|ffe4c4|bisque|f5f5dc|beige|f0ffff|azure|7fffd4|aquamarine|aqua|faebd7|antiquewhite|f0f8ff|aliceblue|lightGray|darkGray|namedColors|blackColor|fromText|whiteColor|_510|_509|PI|rad|deg|transparentColor|_494|_493|_492|fromHSV|_491|_490|_489|asHSV|toHexString|rgba|hsla|toHSLString|isDark|lighterColorWithLevel|darkerColorWithLevel|colorWithLightness|colorWithSaturation|colorWithHue|colorWithAlpha||serif|sans|Verdana||8pt|8em|auto||Close|Clear||Load|Filter||10em||fixed|regex|emergency|line|margin|_Listener|dtd|loose|html4|w3|EN|Transitional|DTD|W3C|PUBLIC|DOCTYPE|blocking|due|debugging|able|Not|resizable|dependent|href|location|_MochiKit_LoggingPane|_429|canvas|strong|fieldset|legend|optgroup|select|form|textarea|label|img|table|tfoot|thead|tbody|htmlFor||useMap|usemap|defaultChecked|hasChildNodes|quot|amp|_405|focus|replaceChild|checkbox||radio|_win|BODY||safari|version|userAgent|navigator|innerHeight|alpha|khtml|Tried|acquire|clearTimeout|setTimeout|GET|ignore|send|abort|failed|Request|readyState|support|does|Browser|Microsoft|_288|_287|used|Deferreds|Chained|success|unfired|fr_FR|de_DE|00|abs|search|pattern|Invalid|getTimezoneOffset|getSeconds|getMinutes|getHours|UTC|3600000|initEvent|Events|debuggingBookmarklet|MESSAGES|LAST|_205|clear|ninfo|nlevel|timestamp|reverse|takes|initial|with|sequence|empty|iterable|numbers|dateLike|escape|find|forward|unregister|unescape|Object|compared|item|contains|logor|logand|cle|clt|cge|cgt|cne|ceq|zrshift|rshift|lshift|xor|mul|mod|sub|add|neg|lognot|_9|_2'.split('|'),0,{})\n\
+\n\
+\n\
+/*\n\
+ * jQuery 1.2.1 - New Wave Javascript\n\
+ *\n\
+ * Copyright (c) 2007 John Resig (jquery.com)\n\
+ * Dual licensed under the MIT (MIT-LICENSE.txt)\n\
+ * and GPL (GPL-LICENSE.txt) licenses.\n\
+ *\n\
+ * $Date: 2007-09-16 23:42:06 -0400 (Sun, 16 Sep 2007) $\n\
+ * $Rev: 3353 $\n\
+ */\n\
+\n\
+var decompressedJQuery = function(p,a,c,k,e,r){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c]);return p}('(G(){9(1m E!=\"W\")H w=E;H E=18.15=G(a,b){I 6 7u E?6.5N(a,b):1u E(a,b)};9(1m $!=\"W\")H D=$;18.$=E;H u=/^[^<]*(<(.|\\\\s)+>)[^>]*$|^#(\\\\w+)$/;E.1b=E.3A={5N:G(c,a){c=c||U;9(1m c==\"1M\"){H m=u.2S(c);9(m&&(m[1]||!a)){9(m[1])c=E.4D([m[1]],a);J{H b=U.3S(m[3]);9(b)9(b.22!=m[3])I E().1Y(c);J{6[0]=b;6.K=1;I 6}J c=[]}}J I 1u E(a).1Y(c)}J 9(E.1n(c))I 1u E(U)[E.1b.2d?\"2d\":\"39\"](c);I 6.6v(c.1c==1B&&c||(c.4c||c.K&&c!=18&&!c.1y&&c[0]!=W&&c[0].1y)&&E.2h(c)||[c])},4c:\"1.2.1\",7Y:G(){I 6.K},K:0,21:G(a){I a==W?E.2h(6):6[a]},2o:G(a){H b=E(a);b.4Y=6;I b},6v:G(a){6.K=0;1B.3A.1a.16(6,a);I 6},N:G(a,b){I E.N(6,a,b)},4I:G(a){H b=-1;6.N(G(i){9(6==a)b=i});I b},1x:G(f,d,e){H c=f;9(f.1c==3X)9(d==W)I 6.K&&E[e||\"1x\"](6[0],f)||W;J{c={};c[f]=d}I 6.N(G(a){L(H b 1i c)E.1x(e?6.R:6,b,E.1e(6,c[b],e,a,b))})},17:G(b,a){I 6.1x(b,a,\"3C\")},2g:G(e){9(1m e!=\"5i\"&&e!=S)I 6.4n().3g(U.6F(e));H t=\"\";E.N(e||6,G(){E.N(6.3j,G(){9(6.1y!=8)t+=6.1y!=1?6.6x:E.1b.2g([6])})});I t},5m:G(b){9(6[0])E(b,6[0].3H).6u().3d(6[0]).1X(G(){H a=6;1W(a.1w)a=a.1w;I a}).3g(6);I 6},8m:G(a){I 6.N(G(){E(6).6q().5m(a)})},8d:G(a){I 6.N(G(){E(6).5m(a)})},3g:G(){I 6.3z(1q,Q,1,G(a){6.58(a)})},6j:G(){I 6.3z(1q,Q,-1,G(a){6.3d(a,6.1w)})},6g:G(){I 6.3z(1q,P,1,G(a){6.12.3d(a,6)})},50:G(){I 6.3z(1q,P,-1,G(a){6.12.3d(a,6.2q)})},2D:G(){I 6.4Y||E([])},1Y:G(t){H b=E.1X(6,G(a){I E.1Y(t,a)});I 6.2o(/[^+>] [^+>]/.14(t)||t.1g(\"..\")>-1?E.4V(b):b)},6u:G(e){H f=6.1X(G(){I 6.67?E(6.67)[0]:6.4R(Q)});H d=f.1Y(\"*\").4O().N(G(){9(6[F]!=W)6[F]=S});9(e===Q)6.1Y(\"*\").4O().N(G(i){H c=E.M(6,\"2P\");L(H a 1i c)L(H b 1i c[a])E.1j.1f(d[i],a,c[a][b],c[a][b].M)});I f},1E:G(t){I 6.2o(E.1n(t)&&E.2W(6,G(b,a){I t.16(b,[a])})||E.3m(t,6))},5V:G(t){I 6.2o(t.1c==3X&&E.3m(t,6,Q)||E.2W(6,G(a){I(t.1c==1B||t.4c)?E.2A(a,t)<0:a!=t}))},1f:G(t){I 6.2o(E.1R(6.21(),t.1c==3X?E(t).21():t.K!=W&&(!t.11||E.11(t,\"2Y\"))?t:[t]))},3t:G(a){I a?E.3m(a,6).K>0:P},7c:G(a){I 6.3t(\".\"+a)},3i:G(b){9(b==W){9(6.K){H c=6[0];9(E.11(c,\"24\")){H e=c.4Z,a=[],Y=c.Y,2G=c.O==\"24-2G\";9(e<0)I S;L(H i=2G?e:0,33=2G?e+1:Y.K;i<33;i++){H d=Y[i];9(d.26){H b=E.V.1h&&!d.9V[\"1Q\"].9L?d.2g:d.1Q;9(2G)I b;a.1a(b)}}I a}J I 6[0].1Q.1p(/\\\\r/g,\"\")}}J I 6.N(G(){9(b.1c==1B&&/4k|5j/.14(6.O))6.2Q=(E.2A(6.1Q,b)>=0||E.2A(6.2H,b)>=0);J 9(E.11(6,\"24\")){H a=b.1c==1B?b:[b];E(\"9h\",6).N(G(){6.26=(E.2A(6.1Q,a)>=0||E.2A(6.2g,a)>=0)});9(!a.K)6.4Z=-1}J 6.1Q=b})},4o:G(a){I a==W?(6.K?6[0].3O:S):6.4n().3g(a)},6H:G(a){I 6.50(a).28()},6E:G(i){I 6.2J(i,i+1)},2J:G(){I 6.2o(1B.3A.2J.16(6,1q))},1X:G(b){I 6.2o(E.1X(6,G(a,i){I b.2O(a,i,a)}))},4O:G(){I 6.1f(6.4Y)},3z:G(f,d,g,e){H c=6.K>1,a;I 6.N(G(){9(!a){a=E.4D(f,6.3H);9(g<0)a.8U()}H b=6;9(d&&E.11(6,\"1I\")&&E.11(a[0],\"4m\"))b=6.4l(\"1K\")[0]||6.58(U.5B(\"1K\"));E.N(a,G(){H a=c?6.4R(Q):6;9(!5A(0,a))e.2O(b,a)})})}};G 5A(i,b){H a=E.11(b,\"1J\");9(a){9(b.3k)E.3G({1d:b.3k,3e:P,1V:\"1J\"});J E.5f(b.2g||b.6s||b.3O||\"\");9(b.12)b.12.3b(b)}J 9(b.1y==1)E(\"1J\",b).N(5A);I a}E.1k=E.1b.1k=G(){H c=1q[0]||{},a=1,2c=1q.K,5e=P;9(c.1c==8o){5e=c;c=1q[1]||{}}9(2c==1){c=6;a=0}H b;L(;a<2c;a++)9((b=1q[a])!=S)L(H i 1i b){9(c==b[i])6r;9(5e&&1m b[i]==\\'5i\\'&&c[i])E.1k(c[i],b[i]);J 9(b[i]!=W)c[i]=b[i]}I c};H F=\"15\"+(1u 3D()).3B(),6p=0,5c={};E.1k({8a:G(a){18.$=D;9(a)18.15=w;I E},1n:G(a){I!!a&&1m a!=\"1M\"&&!a.11&&a.1c!=1B&&/G/i.14(a+\"\")},4a:G(a){I a.2V&&!a.1G||a.37&&a.3H&&!a.3H.1G},5f:G(a){a=E.36(a);9(a){9(18.6l)18.6l(a);J 9(E.V.1N)18.56(a,0);J 3w.2O(18,a)}},11:G(b,a){I b.11&&b.11.27()==a.27()},1L:{},M:G(c,d,b){c=c==18?5c:c;H a=c[F];9(!a)a=c[F]=++6p;9(d&&!E.1L[a])E.1L[a]={};9(b!=W)E.1L[a][d]=b;I d?E.1L[a][d]:a},30:G(c,b){c=c==18?5c:c;H a=c[F];9(b){9(E.1L[a]){2E E.1L[a][b];b=\"\";L(b 1i E.1L[a])1T;9(!b)E.30(c)}}J{2a{2E c[F]}29(e){9(c.53)c.53(F)}2E E.1L[a]}},N:G(a,b,c){9(c){9(a.K==W)L(H i 1i a)b.16(a[i],c);J L(H i=0,48=a.K;i<48;i++)9(b.16(a[i],c)===P)1T}J{9(a.K==W)L(H i 1i a)b.2O(a[i],i,a[i]);J L(H i=0,48=a.K,3i=a[0];i<48&&b.2O(3i,i,3i)!==P;3i=a[++i]){}}I a},1e:G(c,b,d,e,a){9(E.1n(b))b=b.2O(c,[e]);H f=/z-?4I|7T-?7Q|1r|69|7P-?1H/i;I b&&b.1c==4W&&d==\"3C\"&&!f.14(a)?b+\"2T\":b},1o:{1f:G(b,c){E.N((c||\"\").2l(/\\\\s+/),G(i,a){9(!E.1o.3K(b.1o,a))b.1o+=(b.1o?\" \":\"\")+a})},28:G(b,c){b.1o=c!=W?E.2W(b.1o.2l(/\\\\s+/),G(a){I!E.1o.3K(c,a)}).66(\" \"):\"\"},3K:G(t,c){I E.2A(c,(t.1o||t).3s().2l(/\\\\s+/))>-1}},2k:G(e,o,f){L(H i 1i o){e.R[\"3r\"+i]=e.R[i];e.R[i]=o[i]}f.16(e,[]);L(H i 1i o)e.R[i]=e.R[\"3r\"+i]},17:G(e,p){9(p==\"1H\"||p==\"2N\"){H b={},42,41,d=[\"7J\",\"7I\",\"7G\",\"7F\"];E.N(d,G(){b[\"7C\"+6]=0;b[\"7B\"+6+\"5Z\"]=0});E.2k(e,b,G(){9(E(e).3t(\\':3R\\')){42=e.7A;41=e.7w}J{e=E(e.4R(Q)).1Y(\":4k\").5W(\"2Q\").2D().17({4C:\"1P\",2X:\"4F\",19:\"2Z\",7o:\"0\",1S:\"0\"}).5R(e.12)[0];H a=E.17(e.12,\"2X\")||\"3V\";9(a==\"3V\")e.12.R.2X=\"7g\";42=e.7e;41=e.7b;9(a==\"3V\")e.12.R.2X=\"3V\";e.12.3b(e)}});I p==\"1H\"?42:41}I E.3C(e,p)},3C:G(h,j,i){H g,2w=[],2k=[];G 3n(a){9(!E.V.1N)I P;H b=U.3o.3Z(a,S);I!b||b.4y(\"3n\")==\"\"}9(j==\"1r\"&&E.V.1h){g=E.1x(h.R,\"1r\");I g==\"\"?\"1\":g}9(j.1t(/4u/i))j=y;9(!i&&h.R[j])g=h.R[j];J 9(U.3o&&U.3o.3Z){9(j.1t(/4u/i))j=\"4u\";j=j.1p(/([A-Z])/g,\"-$1\").2p();H d=U.3o.3Z(h,S);9(d&&!3n(h))g=d.4y(j);J{L(H a=h;a&&3n(a);a=a.12)2w.4w(a);L(a=0;a<2w.K;a++)9(3n(2w[a])){2k[a]=2w[a].R.19;2w[a].R.19=\"2Z\"}g=j==\"19\"&&2k[2w.K-1]!=S?\"2s\":U.3o.3Z(h,S).4y(j)||\"\";L(a=0;a<2k.K;a++)9(2k[a]!=S)2w[a].R.19=2k[a]}9(j==\"1r\"&&g==\"\")g=\"1\"}J 9(h.3Q){H f=j.1p(/\\\\-(\\\\w)/g,G(m,c){I c.27()});g=h.3Q[j]||h.3Q[f];9(!/^\\\\d+(2T)?$/i.14(g)&&/^\\\\d/.14(g)){H k=h.R.1S;H e=h.4v.1S;h.4v.1S=h.3Q.1S;h.R.1S=g||0;g=h.R.71+\"2T\";h.R.1S=k;h.4v.1S=e}}I g},4D:G(a,e){H r=[];e=e||U;E.N(a,G(i,d){9(!d)I;9(d.1c==4W)d=d.3s();9(1m d==\"1M\"){d=d.1p(/(<(\\\\w+)[^>]*?)\\\\/>/g,G(m,a,b){I b.1t(/^(70|6Z|6Y|9Q|4t|9N|9K|3a|9G|9E)$/i)?m:a+\"></\"+b+\">\"});H s=E.36(d).2p(),1s=e.5B(\"1s\"),2x=[];H c=!s.1g(\"<9y\")&&[1,\"<24>\",\"</24>\"]||!s.1g(\"<9w\")&&[1,\"<6T>\",\"</6T>\"]||s.1t(/^<(9u|1K|9t|9r|9p)/)&&[1,\"<1I>\",\"</1I>\"]||!s.1g(\"<4m\")&&[2,\"<1I><1K>\",\"</1K></1I>\"]||(!s.1g(\"<9m\")||!s.1g(\"<9k\"))&&[3,\"<1I><1K><4m>\",\"</4m></1K></1I>\"]||!s.1g(\"<6Y\")&&[2,\"<1I><1K></1K><6L>\",\"</6L></1I>\"]||E.V.1h&&[1,\"1s<1s>\",\"</1s>\"]||[0,\"\",\"\"];1s.3O=c[1]+d+c[2];1W(c[0]--)1s=1s.5p;9(E.V.1h){9(!s.1g(\"<1I\")&&s.1g(\"<1K\")<0)2x=1s.1w&&1s.1w.3j;J 9(c[1]==\"<1I>\"&&s.1g(\"<1K\")<0)2x=1s.3j;L(H n=2x.K-1;n>=0;--n)9(E.11(2x[n],\"1K\")&&!2x[n].3j.K)2x[n].12.3b(2x[n]);9(/^\\\\s/.14(d))1s.3d(e.6F(d.1t(/^\\\\s*/)[0]),1s.1w)}d=E.2h(1s.3j)}9(0===d.K&&(!E.11(d,\"2Y\")&&!E.11(d,\"24\")))I;9(d[0]==W||E.11(d,\"2Y\")||d.Y)r.1a(d);J r=E.1R(r,d)});I r},1x:G(c,d,a){H e=E.4a(c)?{}:E.5o;9(d==\"26\"&&E.V.1N)c.12.4Z;9(e[d]){9(a!=W)c[e[d]]=a;I c[e[d]]}J 9(E.V.1h&&d==\"R\")I E.1x(c.R,\"9e\",a);J 9(a==W&&E.V.1h&&E.11(c,\"2Y\")&&(d==\"9d\"||d==\"9a\"))I c.97(d).6x;J 9(c.37){9(a!=W){9(d==\"O\"&&E.11(c,\"4t\")&&c.12)6G\"O 94 93\\'t 92 91\";c.90(d,a)}9(E.V.1h&&/6C|3k/.14(d)&&!E.4a(c))I c.4p(d,2);I c.4p(d)}J{9(d==\"1r\"&&E.V.1h){9(a!=W){c.69=1;c.1E=(c.1E||\"\").1p(/6O\\\\([^)]*\\\\)/,\"\")+(3I(a).3s()==\"8S\"?\"\":\"6O(1r=\"+a*6A+\")\")}I c.1E?(3I(c.1E.1t(/1r=([^)]*)/)[1])/6A).3s():\"\"}d=d.1p(/-([a-z])/8Q,G(z,b){I b.27()});9(a!=W)c[d]=a;I c[d]}},36:G(t){I(t||\"\").1p(/^\\\\s+|\\\\s+$/g,\"\")},2h:G(a){H r=[];9(1m a!=\"8P\")L(H i=0,2c=a.K;i<2c;i++)r.1a(a[i]);J r=a.2J(0);I r},2A:G(b,a){L(H i=0,2c=a.K;i<2c;i++)9(a[i]==b)I i;I-1},1R:G(a,b){9(E.V.1h){L(H i=0;b[i];i++)9(b[i].1y!=8)a.1a(b[i])}J L(H i=0;b[i];i++)a.1a(b[i]);I a},4V:G(b){H r=[],2f={};2a{L(H i=0,6y=b.K;i<6y;i++){H a=E.M(b[i]);9(!2f[a]){2f[a]=Q;r.1a(b[i])}}}29(e){r=b}I r},2W:G(b,a,c){9(1m a==\"1M\")a=3w(\"P||G(a,i){I \"+a+\"}\");H d=[];L(H i=0,4g=b.K;i<4g;i++)9(!c&&a(b[i],i)||c&&!a(b[i],i))d.1a(b[i]);I d},1X:G(c,b){9(1m b==\"1M\")b=3w(\"P||G(a){I \"+b+\"}\");H d=[];L(H i=0,4g=c.K;i<4g;i++){H a=b(c[i],i);9(a!==S&&a!=W){9(a.1c!=1B)a=[a];d=d.8M(a)}}I d}});H v=8K.8I.2p();E.V={4s:(v.1t(/.+(?:8F|8E|8C|8B)[\\\\/: ]([\\\\d.]+)/)||[])[1],1N:/6w/.14(v),34:/34/.14(v),1h:/1h/.14(v)&&!/34/.14(v),35:/35/.14(v)&&!/(8z|6w)/.14(v)};H y=E.V.1h?\"4h\":\"5h\";E.1k({5g:!E.V.1h||U.8y==\"8x\",4h:E.V.1h?\"4h\":\"5h\",5o:{\"L\":\"8w\",\"8v\":\"1o\",\"4u\":y,5h:y,4h:y,3O:\"3O\",1o:\"1o\",1Q:\"1Q\",3c:\"3c\",2Q:\"2Q\",8u:\"8t\",26:\"26\",8s:\"8r\"}});E.N({1D:\"a.12\",8q:\"15.4e(a,\\'12\\')\",8p:\"15.2I(a,2,\\'2q\\')\",8n:\"15.2I(a,2,\\'4d\\')\",8l:\"15.4e(a,\\'2q\\')\",8k:\"15.4e(a,\\'4d\\')\",8j:\"15.5d(a.12.1w,a)\",8i:\"15.5d(a.1w)\",6q:\"15.11(a,\\'8h\\')?a.8f||a.8e.U:15.2h(a.3j)\"},G(i,n){E.1b[i]=G(a){H b=E.1X(6,n);9(a&&1m a==\"1M\")b=E.3m(a,b);I 6.2o(E.4V(b))}});E.N({5R:\"3g\",8c:\"6j\",3d:\"6g\",8b:\"50\",89:\"6H\"},G(i,n){E.1b[i]=G(){H a=1q;I 6.N(G(){L(H j=0,2c=a.K;j<2c;j++)E(a[j])[n](6)})}});E.N({5W:G(a){E.1x(6,a,\"\");6.53(a)},88:G(c){E.1o.1f(6,c)},87:G(c){E.1o.28(6,c)},86:G(c){E.1o[E.1o.3K(6,c)?\"28\":\"1f\"](6,c)},28:G(a){9(!a||E.1E(a,[6]).r.K){E.30(6);6.12.3b(6)}},4n:G(){E(\"*\",6).N(G(){E.30(6)});1W(6.1w)6.3b(6.1w)}},G(i,n){E.1b[i]=G(){I 6.N(n,1q)}});E.N([\"85\",\"5Z\"],G(i,a){H n=a.2p();E.1b[n]=G(h){I 6[0]==18?E.V.1N&&3y[\"84\"+a]||E.5g&&38.33(U.2V[\"5a\"+a],U.1G[\"5a\"+a])||U.1G[\"5a\"+a]:6[0]==U?38.33(U.1G[\"6n\"+a],U.1G[\"6m\"+a]):h==W?(6.K?E.17(6[0],n):S):6.17(n,h.1c==3X?h:h+\"2T\")}});H C=E.V.1N&&3x(E.V.4s)<83?\"(?:[\\\\\\\\w*57-]|\\\\\\\\\\\\\\\\.)\":\"(?:[\\\\\\\\w\\\\82-\\\\81*57-]|\\\\\\\\\\\\\\\\.)\",6k=1u 47(\"^>\\\\\\\\s*(\"+C+\"+)\"),6i=1u 47(\"^(\"+C+\"+)(#)(\"+C+\"+)\"),6h=1u 47(\"^([#.]?)(\"+C+\"*)\");E.1k({55:{\"\":\"m[2]==\\'*\\'||15.11(a,m[2])\",\"#\":\"a.4p(\\'22\\')==m[2]\",\":\":{80:\"i<m[3]-0\",7Z:\"i>m[3]-0\",2I:\"m[3]-0==i\",6E:\"m[3]-0==i\",3v:\"i==0\",3u:\"i==r.K-1\",6f:\"i%2==0\",6e:\"i%2\",\"3v-46\":\"a.12.4l(\\'*\\')[0]==a\",\"3u-46\":\"15.2I(a.12.5p,1,\\'4d\\')==a\",\"7X-46\":\"!15.2I(a.12.5p,2,\\'4d\\')\",1D:\"a.1w\",4n:\"!a.1w\",7W:\"(a.6s||a.7V||15(a).2g()||\\'\\').1g(m[3])>=0\",3R:\\'\"1P\"!=a.O&&15.17(a,\"19\")!=\"2s\"&&15.17(a,\"4C\")!=\"1P\"\\',1P:\\'\"1P\"==a.O||15.17(a,\"19\")==\"2s\"||15.17(a,\"4C\")==\"1P\"\\',7U:\"!a.3c\",3c:\"a.3c\",2Q:\"a.2Q\",26:\"a.26||15.1x(a,\\'26\\')\",2g:\"\\'2g\\'==a.O\",4k:\"\\'4k\\'==a.O\",5j:\"\\'5j\\'==a.O\",54:\"\\'54\\'==a.O\",52:\"\\'52\\'==a.O\",51:\"\\'51\\'==a.O\",6d:\"\\'6d\\'==a.O\",6c:\"\\'6c\\'==a.O\",2r:\\'\"2r\"==a.O||15.11(a,\"2r\")\\',4t:\"/4t|24|6b|2r/i.14(a.11)\",3K:\"15.1Y(m[3],a).K\",7S:\"/h\\\\\\\\d/i.14(a.11)\",7R:\"15.2W(15.32,G(1b){I a==1b.T;}).K\"}},6a:[/^(\\\\[) *@?([\\\\w-]+) *([!*$^~=]*) *(\\'?\"?)(.*?)\\\\4 *\\\\]/,/^(:)([\\\\w-]+)\\\\(\"?\\'?(.*?(\\\\(.*?\\\\))?[^(]*?)\"?\\'?\\\\)/,1u 47(\"^([:.#]*)(\"+C+\"+)\")],3m:G(a,c,b){H d,2b=[];1W(a&&a!=d){d=a;H f=E.1E(a,c,b);a=f.t.1p(/^\\\\s*,\\\\s*/,\"\");2b=b?c=f.r:E.1R(2b,f.r)}I 2b},1Y:G(t,o){9(1m t!=\"1M\")I[t];9(o&&!o.1y)o=S;o=o||U;H d=[o],2f=[],3u;1W(t&&3u!=t){H r=[];3u=t;t=E.36(t);H l=P;H g=6k;H m=g.2S(t);9(m){H p=m[1].27();L(H i=0;d[i];i++)L(H c=d[i].1w;c;c=c.2q)9(c.1y==1&&(p==\"*\"||c.11.27()==p.27()))r.1a(c);d=r;t=t.1p(g,\"\");9(t.1g(\" \")==0)6r;l=Q}J{g=/^([>+~])\\\\s*(\\\\w*)/i;9((m=g.2S(t))!=S){r=[];H p=m[2],1R={};m=m[1];L(H j=0,31=d.K;j<31;j++){H n=m==\"~\"||m==\"+\"?d[j].2q:d[j].1w;L(;n;n=n.2q)9(n.1y==1){H h=E.M(n);9(m==\"~\"&&1R[h])1T;9(!p||n.11.27()==p.27()){9(m==\"~\")1R[h]=Q;r.1a(n)}9(m==\"+\")1T}}d=r;t=E.36(t.1p(g,\"\"));l=Q}}9(t&&!l){9(!t.1g(\",\")){9(o==d[0])d.44();2f=E.1R(2f,d);r=d=[o];t=\" \"+t.68(1,t.K)}J{H k=6i;H m=k.2S(t);9(m){m=[0,m[2],m[3],m[1]]}J{k=6h;m=k.2S(t)}m[2]=m[2].1p(/\\\\\\\\/g,\"\");H f=d[d.K-1];9(m[1]==\"#\"&&f&&f.3S&&!E.4a(f)){H q=f.3S(m[2]);9((E.V.1h||E.V.34)&&q&&1m q.22==\"1M\"&&q.22!=m[2])q=E(\\'[@22=\"\\'+m[2]+\\'\"]\\',f)[0];d=r=q&&(!m[3]||E.11(q,m[3]))?[q]:[]}J{L(H i=0;d[i];i++){H a=m[1]==\"#\"&&m[3]?m[3]:m[1]!=\"\"||m[0]==\"\"?\"*\":m[2];9(a==\"*\"&&d[i].11.2p()==\"5i\")a=\"3a\";r=E.1R(r,d[i].4l(a))}9(m[1]==\".\")r=E.4X(r,m[2]);9(m[1]==\"#\"){H e=[];L(H i=0;r[i];i++)9(r[i].4p(\"22\")==m[2]){e=[r[i]];1T}r=e}d=r}t=t.1p(k,\"\")}}9(t){H b=E.1E(t,r);d=r=b.r;t=E.36(b.t)}}9(t)d=[];9(d&&o==d[0])d.44();2f=E.1R(2f,d);I 2f},4X:G(r,m,a){m=\" \"+m+\" \";H c=[];L(H i=0;r[i];i++){H b=(\" \"+r[i].1o+\" \").1g(m)>=0;9(!a&&b||a&&!b)c.1a(r[i])}I c},1E:G(t,r,h){H d;1W(t&&t!=d){d=t;H p=E.6a,m;L(H i=0;p[i];i++){m=p[i].2S(t);9(m){t=t.7O(m[0].K);m[2]=m[2].1p(/\\\\\\\\/g,\"\");1T}}9(!m)1T;9(m[1]==\":\"&&m[2]==\"5V\")r=E.1E(m[3],r,Q).r;J 9(m[1]==\".\")r=E.4X(r,m[2],h);J 9(m[1]==\"[\"){H g=[],O=m[3];L(H i=0,31=r.K;i<31;i++){H a=r[i],z=a[E.5o[m[2]]||m[2]];9(z==S||/6C|3k|26/.14(m[2]))z=E.1x(a,m[2])||\\'\\';9((O==\"\"&&!!z||O==\"=\"&&z==m[5]||O==\"!=\"&&z!=m[5]||O==\"^=\"&&z&&!z.1g(m[5])||O==\"$=\"&&z.68(z.K-m[5].K)==m[5]||(O==\"*=\"||O==\"~=\")&&z.1g(m[5])>=0)^h)g.1a(a)}r=g}J 9(m[1]==\":\"&&m[2]==\"2I-46\"){H e={},g=[],14=/(\\\\d*)n\\\\+?(\\\\d*)/.2S(m[3]==\"6f\"&&\"2n\"||m[3]==\"6e\"&&\"2n+1\"||!/\\\\D/.14(m[3])&&\"n+\"+m[3]||m[3]),3v=(14[1]||1)-0,d=14[2]-0;L(H i=0,31=r.K;i<31;i++){H j=r[i],12=j.12,22=E.M(12);9(!e[22]){H c=1;L(H n=12.1w;n;n=n.2q)9(n.1y==1)n.4U=c++;e[22]=Q}H b=P;9(3v==1){9(d==0||j.4U==d)b=Q}J 9((j.4U+d)%3v==0)b=Q;9(b^h)g.1a(j)}r=g}J{H f=E.55[m[1]];9(1m f!=\"1M\")f=E.55[m[1]][m[2]];f=3w(\"P||G(a,i){I \"+f+\"}\");r=E.2W(r,f,h)}}I{r:r,t:t}},4e:G(b,c){H d=[];H a=b[c];1W(a&&a!=U){9(a.1y==1)d.1a(a);a=a[c]}I d},2I:G(a,e,c,b){e=e||1;H d=0;L(;a;a=a[c])9(a.1y==1&&++d==e)1T;I a},5d:G(n,a){H r=[];L(;n;n=n.2q){9(n.1y==1&&(!a||n!=a))r.1a(n)}I r}});E.1j={1f:G(g,e,c,h){9(E.V.1h&&g.4j!=W)g=18;9(!c.2u)c.2u=6.2u++;9(h!=W){H d=c;c=G(){I d.16(6,1q)};c.M=h;c.2u=d.2u}H i=e.2l(\".\");e=i[0];c.O=i[1];H b=E.M(g,\"2P\")||E.M(g,\"2P\",{});H f=E.M(g,\"2t\",G(){H a;9(1m E==\"W\"||E.1j.4T)I a;a=E.1j.2t.16(g,1q);I a});H j=b[e];9(!j){j=b[e]={};9(g.4S)g.4S(e,f,P);J g.7N(\"43\"+e,f)}j[c.2u]=c;6.1Z[e]=Q},2u:1,1Z:{},28:G(d,c,b){H e=E.M(d,\"2P\"),2L,4I;9(1m c==\"1M\"){H a=c.2l(\".\");c=a[0]}9(e){9(c&&c.O){b=c.4Q;c=c.O}9(!c){L(c 1i e)6.28(d,c)}J 9(e[c]){9(b)2E e[c][b.2u];J L(b 1i e[c])9(!a[1]||e[c][b].O==a[1])2E e[c][b];L(2L 1i e[c])1T;9(!2L){9(d.4P)d.4P(c,E.M(d,\"2t\"),P);J d.7M(\"43\"+c,E.M(d,\"2t\"));2L=S;2E e[c]}}L(2L 1i e)1T;9(!2L){E.30(d,\"2P\");E.30(d,\"2t\")}}},1F:G(d,b,e,c,f){b=E.2h(b||[]);9(!e){9(6.1Z[d])E(\"*\").1f([18,U]).1F(d,b)}J{H a,2L,1b=E.1n(e[d]||S),4N=!b[0]||!b[0].2M;9(4N)b.4w(6.4M({O:d,2m:e}));b[0].O=d;9(E.1n(E.M(e,\"2t\")))a=E.M(e,\"2t\").16(e,b);9(!1b&&e[\"43\"+d]&&e[\"43\"+d].16(e,b)===P)a=P;9(4N)b.44();9(f&&f.16(e,b)===P)a=P;9(1b&&c!==P&&a!==P&&!(E.11(e,\\'a\\')&&d==\"4L\")){6.4T=Q;e[d]()}6.4T=P}I a},2t:G(d){H a;d=E.1j.4M(d||18.1j||{});H b=d.O.2l(\".\");d.O=b[0];H c=E.M(6,\"2P\")&&E.M(6,\"2P\")[d.O],3q=1B.3A.2J.2O(1q,1);3q.4w(d);L(H j 1i c){3q[0].4Q=c[j];3q[0].M=c[j].M;9(!b[1]||c[j].O==b[1]){H e=c[j].16(6,3q);9(a!==P)a=e;9(e===P){d.2M();d.3p()}}}9(E.V.1h)d.2m=d.2M=d.3p=d.4Q=d.M=S;I a},4M:G(c){H a=c;c=E.1k({},a);c.2M=G(){9(a.2M)a.2M();a.7L=P};c.3p=G(){9(a.3p)a.3p();a.7K=Q};9(!c.2m&&c.65)c.2m=c.65;9(E.V.1N&&c.2m.1y==3)c.2m=a.2m.12;9(!c.4K&&c.4J)c.4K=c.4J==c.2m?c.7H:c.4J;9(c.64==S&&c.63!=S){H e=U.2V,b=U.1G;c.64=c.63+(e&&e.2R||b.2R||0);c.7E=c.7D+(e&&e.2B||b.2B||0)}9(!c.3Y&&(c.61||c.60))c.3Y=c.61||c.60;9(!c.5F&&c.5D)c.5F=c.5D;9(!c.3Y&&c.2r)c.3Y=(c.2r&1?1:(c.2r&2?3:(c.2r&4?2:0)));I c}};E.1b.1k({3W:G(c,a,b){I c==\"5Y\"?6.2G(c,a,b):6.N(G(){E.1j.1f(6,c,b||a,b&&a)})},2G:G(d,b,c){I 6.N(G(){E.1j.1f(6,d,G(a){E(6).5X(a);I(c||b).16(6,1q)},c&&b)})},5X:G(a,b){I 6.N(G(){E.1j.28(6,a,b)})},1F:G(c,a,b){I 6.N(G(){E.1j.1F(c,a,6,Q,b)})},7x:G(c,a,b){9(6[0])I E.1j.1F(c,a,6[0],P,b)},25:G(){H a=1q;I 6.4L(G(e){6.4H=0==6.4H?1:0;e.2M();I a[6.4H].16(6,[e])||P})},7v:G(f,g){G 4G(e){H p=e.4K;1W(p&&p!=6)2a{p=p.12}29(e){p=6};9(p==6)I P;I(e.O==\"4x\"?f:g).16(6,[e])}I 6.4x(4G).5U(4G)},2d:G(f){5T();9(E.3T)f.16(U,[E]);J E.3l.1a(G(){I f.16(6,[E])});I 6}});E.1k({3T:P,3l:[],2d:G(){9(!E.3T){E.3T=Q;9(E.3l){E.N(E.3l,G(){6.16(U)});E.3l=S}9(E.V.35||E.V.34)U.4P(\"5S\",E.2d,P);9(!18.7t.K)E(18).39(G(){E(\"#4E\").28()})}}});E.N((\"7s,7r,39,7q,6n,5Y,4L,7p,\"+\"7n,7m,7l,4x,5U,7k,24,\"+\"51,7j,7i,7h,3U\").2l(\",\"),G(i,o){E.1b[o]=G(f){I f?6.3W(o,f):6.1F(o)}});H x=P;G 5T(){9(x)I;x=Q;9(E.V.35||E.V.34)U.4S(\"5S\",E.2d,P);J 9(E.V.1h){U.7f(\"<7d\"+\"7y 22=4E 7z=Q \"+\"3k=//:><\\\\/1J>\");H a=U.3S(\"4E\");9(a)a.62=G(){9(6.2C!=\"1l\")I;E.2d()};a=S}J 9(E.V.1N)E.4B=4j(G(){9(U.2C==\"5Q\"||U.2C==\"1l\"){4A(E.4B);E.4B=S;E.2d()}},10);E.1j.1f(18,\"39\",E.2d)}E.1b.1k({39:G(g,d,c){9(E.1n(g))I 6.3W(\"39\",g);H e=g.1g(\" \");9(e>=0){H i=g.2J(e,g.K);g=g.2J(0,e)}c=c||G(){};H f=\"4z\";9(d)9(E.1n(d)){c=d;d=S}J{d=E.3a(d);f=\"5P\"}H h=6;E.3G({1d:g,O:f,M:d,1l:G(a,b){9(b==\"1C\"||b==\"5O\")h.4o(i?E(\"<1s/>\").3g(a.40.1p(/<1J(.|\\\\s)*?\\\\/1J>/g,\"\")).1Y(i):a.40);56(G(){h.N(c,[a.40,b,a])},13)}});I 6},7a:G(){I E.3a(6.5M())},5M:G(){I 6.1X(G(){I E.11(6,\"2Y\")?E.2h(6.79):6}).1E(G(){I 6.2H&&!6.3c&&(6.2Q||/24|6b/i.14(6.11)||/2g|1P|52/i.14(6.O))}).1X(G(i,c){H b=E(6).3i();I b==S?S:b.1c==1B?E.1X(b,G(a,i){I{2H:c.2H,1Q:a}}):{2H:c.2H,1Q:b}}).21()}});E.N(\"5L,5K,6t,5J,5I,5H\".2l(\",\"),G(i,o){E.1b[o]=G(f){I 6.3W(o,f)}});H B=(1u 3D).3B();E.1k({21:G(d,b,a,c){9(E.1n(b)){a=b;b=S}I E.3G({O:\"4z\",1d:d,M:b,1C:a,1V:c})},78:G(b,a){I E.21(b,S,a,\"1J\")},77:G(c,b,a){I E.21(c,b,a,\"45\")},76:G(d,b,a,c){9(E.1n(b)){a=b;b={}}I E.3G({O:\"5P\",1d:d,M:b,1C:a,1V:c})},75:G(a){E.1k(E.59,a)},59:{1Z:Q,O:\"4z\",2z:0,5G:\"74/x-73-2Y-72\",6o:Q,3e:Q,M:S},49:{},3G:G(s){H f,2y=/=(\\\\?|%3F)/g,1v,M;s=E.1k(Q,s,E.1k(Q,{},E.59,s));9(s.M&&s.6o&&1m s.M!=\"1M\")s.M=E.3a(s.M);9(s.1V==\"4b\"){9(s.O.2p()==\"21\"){9(!s.1d.1t(2y))s.1d+=(s.1d.1t(/\\\\?/)?\"&\":\"?\")+(s.4b||\"5E\")+\"=?\"}J 9(!s.M||!s.M.1t(2y))s.M=(s.M?s.M+\"&\":\"\")+(s.4b||\"5E\")+\"=?\";s.1V=\"45\"}9(s.1V==\"45\"&&(s.M&&s.M.1t(2y)||s.1d.1t(2y))){f=\"4b\"+B++;9(s.M)s.M=s.M.1p(2y,\"=\"+f);s.1d=s.1d.1p(2y,\"=\"+f);s.1V=\"1J\";18[f]=G(a){M=a;1C();1l();18[f]=W;2a{2E 18[f]}29(e){}}}9(s.1V==\"1J\"&&s.1L==S)s.1L=P;9(s.1L===P&&s.O.2p()==\"21\")s.1d+=(s.1d.1t(/\\\\?/)?\"&\":\"?\")+\"57=\"+(1u 3D()).3B();9(s.M&&s.O.2p()==\"21\"){s.1d+=(s.1d.1t(/\\\\?/)?\"&\":\"?\")+s.M;s.M=S}9(s.1Z&&!E.5b++)E.1j.1F(\"5L\");9(!s.1d.1g(\"8g\")&&s.1V==\"1J\"){H h=U.4l(\"9U\")[0];H g=U.5B(\"1J\");g.3k=s.1d;9(!f&&(s.1C||s.1l)){H j=P;g.9R=g.62=G(){9(!j&&(!6.2C||6.2C==\"5Q\"||6.2C==\"1l\")){j=Q;1C();1l();h.3b(g)}}}h.58(g);I}H k=P;H i=18.6X?1u 6X(\"9P.9O\"):1u 6W();i.9M(s.O,s.1d,s.3e);9(s.M)i.5C(\"9J-9I\",s.5G);9(s.5y)i.5C(\"9H-5x-9F\",E.49[s.1d]||\"9D, 9C 9B 9A 5v:5v:5v 9z\");i.5C(\"X-9x-9v\",\"6W\");9(s.6U)s.6U(i);9(s.1Z)E.1j.1F(\"5H\",[i,s]);H c=G(a){9(!k&&i&&(i.2C==4||a==\"2z\")){k=Q;9(d){4A(d);d=S}1v=a==\"2z\"&&\"2z\"||!E.6S(i)&&\"3U\"||s.5y&&E.6R(i,s.1d)&&\"5O\"||\"1C\";9(1v==\"1C\"){2a{M=E.6Q(i,s.1V)}29(e){1v=\"5k\"}}9(1v==\"1C\"){H b;2a{b=i.5s(\"6P-5x\")}29(e){}9(s.5y&&b)E.49[s.1d]=b;9(!f)1C()}J E.5r(s,i,1v);1l();9(s.3e)i=S}};9(s.3e){H d=4j(c,13);9(s.2z>0)56(G(){9(i){i.9q();9(!k)c(\"2z\")}},s.2z)}2a{i.9o(s.M)}29(e){E.5r(s,i,S,e)}9(!s.3e)c();I i;G 1C(){9(s.1C)s.1C(M,1v);9(s.1Z)E.1j.1F(\"5I\",[i,s])}G 1l(){9(s.1l)s.1l(i,1v);9(s.1Z)E.1j.1F(\"6t\",[i,s]);9(s.1Z&&!--E.5b)E.1j.1F(\"5K\")}},5r:G(s,a,b,e){9(s.3U)s.3U(a,b,e);9(s.1Z)E.1j.1F(\"5J\",[a,s,e])},5b:0,6S:G(r){2a{I!r.1v&&9n.9l==\"54:\"||(r.1v>=6N&&r.1v<9j)||r.1v==6M||E.V.1N&&r.1v==W}29(e){}I P},6R:G(a,c){2a{H b=a.5s(\"6P-5x\");I a.1v==6M||b==E.49[c]||E.V.1N&&a.1v==W}29(e){}I P},6Q:G(r,b){H c=r.5s(\"9i-O\");H d=b==\"6K\"||!b&&c&&c.1g(\"6K\")>=0;H a=d?r.9g:r.40;9(d&&a.2V.37==\"5k\")6G\"5k\";9(b==\"1J\")E.5f(a);9(b==\"45\")a=3w(\"(\"+a+\")\");I a},3a:G(a){H s=[];9(a.1c==1B||a.4c)E.N(a,G(){s.1a(3f(6.2H)+\"=\"+3f(6.1Q))});J L(H j 1i a)9(a[j]&&a[j].1c==1B)E.N(a[j],G(){s.1a(3f(j)+\"=\"+3f(6))});J s.1a(3f(j)+\"=\"+3f(a[j]));I s.66(\"&\").1p(/%20/g,\"+\")}});E.1b.1k({1A:G(b,a){I b?6.1U({1H:\"1A\",2N:\"1A\",1r:\"1A\"},b,a):6.1E(\":1P\").N(G(){6.R.19=6.3h?6.3h:\"\";9(E.17(6,\"19\")==\"2s\")6.R.19=\"2Z\"}).2D()},1z:G(b,a){I b?6.1U({1H:\"1z\",2N:\"1z\",1r:\"1z\"},b,a):6.1E(\":3R\").N(G(){6.3h=6.3h||E.17(6,\"19\");9(6.3h==\"2s\")6.3h=\"2Z\";6.R.19=\"2s\"}).2D()},6J:E.1b.25,25:G(a,b){I E.1n(a)&&E.1n(b)?6.6J(a,b):a?6.1U({1H:\"25\",2N:\"25\",1r:\"25\"},a,b):6.N(G(){E(6)[E(6).3t(\":1P\")?\"1A\":\"1z\"]()})},9c:G(b,a){I 6.1U({1H:\"1A\"},b,a)},9b:G(b,a){I 6.1U({1H:\"1z\"},b,a)},99:G(b,a){I 6.1U({1H:\"25\"},b,a)},98:G(b,a){I 6.1U({1r:\"1A\"},b,a)},96:G(b,a){I 6.1U({1r:\"1z\"},b,a)},95:G(c,a,b){I 6.1U({1r:a},c,b)},1U:G(k,i,h,g){H j=E.6D(i,h,g);I 6[j.3L===P?\"N\":\"3L\"](G(){j=E.1k({},j);H f=E(6).3t(\":1P\"),3y=6;L(H p 1i k){9(k[p]==\"1z\"&&f||k[p]==\"1A\"&&!f)I E.1n(j.1l)&&j.1l.16(6);9(p==\"1H\"||p==\"2N\"){j.19=E.17(6,\"19\");j.2U=6.R.2U}}9(j.2U!=S)6.R.2U=\"1P\";j.3M=E.1k({},k);E.N(k,G(c,a){H e=1u E.2j(3y,j,c);9(/25|1A|1z/.14(a))e[a==\"25\"?f?\"1A\":\"1z\":a](k);J{H b=a.3s().1t(/^([+-]=)?([\\\\d+-.]+)(.*)$/),1O=e.2b(Q)||0;9(b){H d=3I(b[2]),2i=b[3]||\"2T\";9(2i!=\"2T\"){3y.R[c]=(d||1)+2i;1O=((d||1)/e.2b(Q))*1O;3y.R[c]=1O+2i}9(b[1])d=((b[1]==\"-=\"?-1:1)*d)+1O;e.3N(1O,d,2i)}J e.3N(1O,a,\"\")}});I Q})},3L:G(a,b){9(E.1n(a)){b=a;a=\"2j\"}9(!a||(1m a==\"1M\"&&!b))I A(6[0],a);I 6.N(G(){9(b.1c==1B)A(6,a,b);J{A(6,a).1a(b);9(A(6,a).K==1)b.16(6)}})},9f:G(){H a=E.32;I 6.N(G(){L(H i=0;i<a.K;i++)9(a[i].T==6)a.6I(i--,1)}).5n()}});H A=G(b,c,a){9(!b)I;H q=E.M(b,c+\"3L\");9(!q||a)q=E.M(b,c+\"3L\",a?E.2h(a):[]);I q};E.1b.5n=G(a){a=a||\"2j\";I 6.N(G(){H q=A(6,a);q.44();9(q.K)q[0].16(6)})};E.1k({6D:G(b,a,c){H d=b&&b.1c==8Z?b:{1l:c||!c&&a||E.1n(b)&&b,2e:b,3J:c&&a||a&&a.1c!=8Y&&a};d.2e=(d.2e&&d.2e.1c==4W?d.2e:{8X:8W,8V:6N}[d.2e])||8T;d.3r=d.1l;d.1l=G(){E(6).5n();9(E.1n(d.3r))d.3r.16(6)};I d},3J:{6B:G(p,n,b,a){I b+a*p},5q:G(p,n,b,a){I((-38.9s(p*38.8R)/2)+0.5)*a+b}},32:[],2j:G(b,c,a){6.Y=c;6.T=b;6.1e=a;9(!c.3P)c.3P={}}});E.2j.3A={4r:G(){9(6.Y.2F)6.Y.2F.16(6.T,[6.2v,6]);(E.2j.2F[6.1e]||E.2j.2F.6z)(6);9(6.1e==\"1H\"||6.1e==\"2N\")6.T.R.19=\"2Z\"},2b:G(a){9(6.T[6.1e]!=S&&6.T.R[6.1e]==S)I 6.T[6.1e];H r=3I(E.3C(6.T,6.1e,a));I r&&r>-8O?r:3I(E.17(6.T,6.1e))||0},3N:G(c,b,e){6.5u=(1u 3D()).3B();6.1O=c;6.2D=b;6.2i=e||6.2i||\"2T\";6.2v=6.1O;6.4q=6.4i=0;6.4r();H f=6;G t(){I f.2F()}t.T=6.T;E.32.1a(t);9(E.32.K==1){H d=4j(G(){H a=E.32;L(H i=0;i<a.K;i++)9(!a[i]())a.6I(i--,1);9(!a.K)4A(d)},13)}},1A:G(){6.Y.3P[6.1e]=E.1x(6.T.R,6.1e);6.Y.1A=Q;6.3N(0,6.2b());9(6.1e==\"2N\"||6.1e==\"1H\")6.T.R[6.1e]=\"8N\";E(6.T).1A()},1z:G(){6.Y.3P[6.1e]=E.1x(6.T.R,6.1e);6.Y.1z=Q;6.3N(6.2b(),0)},2F:G(){H t=(1u 3D()).3B();9(t>6.Y.2e+6.5u){6.2v=6.2D;6.4q=6.4i=1;6.4r();6.Y.3M[6.1e]=Q;H a=Q;L(H i 1i 6.Y.3M)9(6.Y.3M[i]!==Q)a=P;9(a){9(6.Y.19!=S){6.T.R.2U=6.Y.2U;6.T.R.19=6.Y.19;9(E.17(6.T,\"19\")==\"2s\")6.T.R.19=\"2Z\"}9(6.Y.1z)6.T.R.19=\"2s\";9(6.Y.1z||6.Y.1A)L(H p 1i 6.Y.3M)E.1x(6.T.R,p,6.Y.3P[p])}9(a&&E.1n(6.Y.1l))6.Y.1l.16(6.T);I P}J{H n=t-6.5u;6.4i=n/6.Y.2e;6.4q=E.3J[6.Y.3J||(E.3J.5q?\"5q\":\"6B\")](6.4i,n,0,1,6.Y.2e);6.2v=6.1O+((6.2D-6.1O)*6.4q);6.4r()}I Q}};E.2j.2F={2R:G(a){a.T.2R=a.2v},2B:G(a){a.T.2B=a.2v},1r:G(a){E.1x(a.T.R,\"1r\",a.2v)},6z:G(a){a.T.R[a.1e]=a.2v+a.2i}};E.1b.6m=G(){H c=0,3E=0,T=6[0],5t;9(T)8L(E.V){H b=E.17(T,\"2X\")==\"4F\",1D=T.12,23=T.23,2K=T.3H,4f=1N&&3x(4s)<8J;9(T.6V){5w=T.6V();1f(5w.1S+38.33(2K.2V.2R,2K.1G.2R),5w.3E+38.33(2K.2V.2B,2K.1G.2B));9(1h){H d=E(\"4o\").17(\"8H\");d=(d==\"8G\"||E.5g&&3x(4s)>=7)&&2||d;1f(-d,-d)}}J{1f(T.5l,T.5z);1W(23){1f(23.5l,23.5z);9(35&&/^t[d|h]$/i.14(1D.37)||!4f)d(23);9(4f&&!b&&E.17(23,\"2X\")==\"4F\")b=Q;23=23.23}1W(1D.37&&!/^1G|4o$/i.14(1D.37)){9(!/^8D|1I-9S.*$/i.14(E.17(1D,\"19\")))1f(-1D.2R,-1D.2B);9(35&&E.17(1D,\"2U\")!=\"3R\")d(1D);1D=1D.12}9(4f&&b)1f(-2K.1G.5l,-2K.1G.5z)}5t={3E:3E,1S:c}}I 5t;G d(a){1f(E.17(a,\"9T\"),E.17(a,\"8A\"))}G 1f(l,t){c+=3x(l)||0;3E+=3x(t)||0}}})();',62,616,'||||||this|||if|||||||||||||||||||||||||||||||||function|var|return|else|length|for|data|each|type|false|true|style|null|elem|document|browser|undefined||options|||nodeName|parentNode||test|jQuery|apply|css|window|display|push|fn|constructor|url|prop|add|indexOf|msie|in|event|extend|complete|typeof|isFunction|className|replace|arguments|opacity|div|match|new|status|firstChild|attr|nodeType|hide|show|Array|success|parent|filter|trigger|body|height|table|script|tbody|cache|string|safari|start|hidden|value|merge|left|break|animate|dataType|while|map|find|global||get|id|offsetParent|select|toggle|selected|toUpperCase|remove|catch|try|cur|al|ready|duration|done|text|makeArray|unit|fx|swap|split|target||pushStack|toLowerCase|nextSibling|button|none|handle|guid|now|stack|tb|jsre|timeout|inArray|scrollTop|readyState|end|delete|step|one|name|nth|slice|doc|ret|preventDefault|width|call|events|checked|scrollLeft|exec|px|overflow|documentElement|grep|position|form|block|removeData|rl|timers|max|opera|mozilla|trim|tagName|Math|load|param|removeChild|disabled|insertBefore|async|encodeURIComponent|append|oldblock|val|childNodes|src|readyList|multiFilter|color|defaultView|stopPropagation|args|old|toString|is|last|first|eval|parseInt|self|domManip|prototype|getTime|curCSS|Date|top||ajax|ownerDocument|parseFloat|easing|has|queue|curAnim|custom|innerHTML|orig|currentStyle|visible|getElementById|isReady|error|static|bind|String|which|getComputedStyle|responseText|oWidth|oHeight|on|shift|json|child|RegExp|ol|lastModified|isXMLDoc|jsonp|jquery|previousSibling|dir|safari2|el|styleFloat|state|setInterval|radio|getElementsByTagName|tr|empty|html|getAttribute|pos|update|version|input|float|runtimeStyle|unshift|mouseover|getPropertyValue|GET|clearInterval|safariTimer|visibility|clean|__ie_init|absolute|handleHover|lastToggle|index|fromElement|relatedTarget|click|fix|evt|andSelf|removeEventListener|handler|cloneNode|addEventListener|triggered|nodeIndex|unique|Number|classFilter|prevObject|selectedIndex|after|submit|password|removeAttribute|file|expr|setTimeout|_|appendChild|ajaxSettings|client|active|win|sibling|deep|globalEval|boxModel|cssFloat|object|checkbox|parsererror|offsetLeft|wrapAll|dequeue|props|lastChild|swing|handleError|getResponseHeader|results|startTime|00|box|Modified|ifModified|offsetTop|evalScript|createElement|setRequestHeader|ctrlKey|callback|metaKey|contentType|ajaxSend|ajaxSuccess|ajaxError|ajaxStop|ajaxStart|serializeArray|init|notmodified|POST|loaded|appendTo|DOMContentLoaded|bindReady|mouseout|not|removeAttr|unbind|unload|Width|keyCode|charCode|onreadystatechange|clientX|pageX|srcElement|join|outerHTML|substr|zoom|parse|textarea|reset|image|odd|even|before|quickClass|quickID|prepend|quickChild|execScript|offset|scroll|processData|uuid|contents|continue|textContent|ajaxComplete|clone|setArray|webkit|nodeValue|fl|_default|100|linear|href|speed|eq|createTextNode|throw|replaceWith|splice|_toggle|xml|colgroup|304|200|alpha|Last|httpData|httpNotModified|httpSuccess|fieldset|beforeSend|getBoundingClientRect|XMLHttpRequest|ActiveXObject|col|br|abbr|pixelLeft|urlencoded|www|application|ajaxSetup|post|getJSON|getScript|elements|serialize|clientWidth|hasClass|scr|clientHeight|write|relative|keyup|keypress|keydown|change|mousemove|mouseup|mousedown|right|dblclick|resize|focus|blur|frames|instanceof|hover|offsetWidth|triggerHandler|ipt|defer|offsetHeight|border|padding|clientY|pageY|Left|Right|toElement|Bottom|Top|cancelBubble|returnValue|detachEvent|attachEvent|substring|line|weight|animated|header|font|enabled|innerText|contains|only|size|gt|lt|uFFFF|u0128|417|inner|Height|toggleClass|removeClass|addClass|replaceAll|noConflict|insertAfter|prependTo|wrap|contentWindow|contentDocument|http|iframe|children|siblings|prevAll|nextAll|wrapInner|prev|Boolean|next|parents|maxLength|maxlength|readOnly|readonly|class|htmlFor|CSS1Compat|compatMode|compatible|borderTopWidth|ie|ra|inline|it|rv|medium|borderWidth|userAgent|522|navigator|with|concat|1px|10000|array|ig|PI|NaN|400|reverse|fast|600|slow|Function|Object|setAttribute|changed|be|can|property|fadeTo|fadeOut|getAttributeNode|fadeIn|slideToggle|method|slideUp|slideDown|action|cssText|stop|responseXML|option|content|300|th|protocol|td|location|send|cap|abort|colg|cos|tfoot|thead|With|leg|Requested|opt|GMT|1970|Jan|01|Thu|area|Since|hr|If|Type|Content|meta|specified|open|link|XMLHTTP|Microsoft|img|onload|row|borderLeftWidth|head|attributes'.split('|'),0,{});\n\
+\n\
+/*\n\
+    Copyright (c) 2004-2007, The Dojo Foundation\n\
+    All Rights Reserved.\n\
+\n\
+    Licensed under the Academic Free License version 2.1 or above OR the\n\
+    modified BSD license. For more information on Dojo licensing, see:\n\
+\n\
+        http://dojotoolkit.org/community/licensing.shtml\n\
+*/\n\
+\n\
+/*\n\
+    This is a compiled version of Dojo, built for deployment and not for\n\
+    development. To get an editable version, please visit:\n\
+\n\
+        http://dojotoolkit.org\n\
+\n\
+    for documentation and information on getting the source.\n\
+*/\n\
+\n\
+var decompressedDojo = function(p,a,c,k,e,d){e=function(c){return(c<a?\"\":e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)d[e(c)]=k[c]||e(c);k=[function(e){return d[e]}];e=function(){return'\\\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c]);return p}('if(V z==\"1k\"){(B(){if(V D[\"1o\"]==\"1k\"){D.1o={}}if((!D[\"1z\"])||(!1z[\"ca\"])){D.1z={}}A cn=[\"rA\",\"rz\",\"1K\",\"ry\",\"rx\",\"9f\",\"rw\",\"rv\",\"ru\",\"rt\",\"rs\",\"rr\",\"rq\",\"ro\",\"rn\",\"rm\"];A i=0,24;1s(24=cn[i++]){if(!1z[24]){1z[24]=B(){}}}if(V D[\"z\"]==\"1k\"){D.z={}}z.1W=D;A d3={im:U,rl:U,rk:\"\",rj:\"\",ri:\"\",rh:K,rg:U};R(A 8z in d3){if(V 1o[8z]==\"1k\"){1o[8z]=d3[8z]}}A jK=[\"rf\",\"rd\",\"rc\",\"rb\"];A t;1s(t=jK.3a()){z[\"is\"+t]=U}})();z.8h=1o.8h;z.cY={jJ:0,jI:9,jH:0,jG:\"\",jF:2V(\"$ra: r9 $\".1f(/[0-9]+/)[0]),2i:B(){4G(z.cY){C jJ+\".\"+jI+\".\"+jH+jG+\" (\"+jF+\")\"}}};z.d1=B(jE,jD,1V){A 2h=1V||z.1W;R(A i=0,p;2h&&(p=jE[i]);i++){2h=(p in 2h?2h[p]:(jD?2h[p]={}:1k))}C 2h};z.88=B(jC,jA,jB){A d2=jC.1A(\".\"),p=d2.8q(),M=z.d1(d2,K,jB);C(M&&p?(M[p]=jA):1k)};z.6q=B(jz,jy,jx){C z.d1(jz.1A(\".\"),jy,jx)};z.r8=B(jw,M){C!!z.6q(jw,U,M)};z[\"3u\"]=B(d0){C z.1W.3u?z.1W.3u(d0):3u(d0)};z.ia=B(jv,cZ,cX){A 8y=\"r7: \"+jv;if(cZ){8y+=\" \"+cZ}if(cX){8y+=\" -- r6 be r5 in cY: \"+cX}1z.1K(8y)};z.r4=B(ju,cW){A cV=\"r3: \"+ju+\" -- r2 r1 4F r0 qZ qY.\";if(cW){cV+=\" \"+cW}1z.1K(cV)};(B(){A cR={53:{},6p:0,1h:{},8k:{z:{1p:\"z\",1Z:\".\"},cU:{1p:\"cU\",1Z:\"../qX/cU\"},cT:{1p:\"cT\",1Z:\"cT\"}},cN:B(cS){A mp=D.8k;C jp(mp[cS]&&mp[cS].1Z)},jk:B(8x){A mp=D.8k;if(D.cN(8x)){C mp[8x].1Z}C 8x},8v:[],6t:U,56:[],8t:[],8u:U};R(A cQ in cR){z[cQ]=cR[cQ]}})();z.jg=B(8w,cP,cb){A 1g=(((8w.2s(0)==\"/\"||8w.1f(/^\\\\w+:/)))?\"\":D.51)+8w;if(1o.jt&&z.c8){1g+=\"?\"+67(1o.jt).2f(/\\\\W+/g,\"\")}1u{C!cP?D.cO(1g,cb):D.jq(1g,cP,cb)}1y(e){1z.1K(e);C U}};z.cO=B(1g,cb){if(D.8v[1g]){C K}A 6u=D.iR(1g,K);if(!6u){C U}D.8v[1g]=K;D.8v.Y(1g);if(cb){6u=\"(\"+6u+\")\"}A jr=z[\"3u\"](6u+\"\\\\r\\\\n//@ qW=\"+1g);if(cb){cb(jr)}C K};z.jq=B(1g,jo,cb){A ok=U;1u{ok=D.cO(1g,cb)}1y(e){1z.1K(\"qV je \",1g,\" 4G 9f: \",e)}C jp(ok&&D.53[jo])};z.6m=B(){D.8u=K;D.6t=K;A 57=D.56;D.56=[];R(A x=0;x<57.G;x++){57[x]()}D.8u=U;if(z.6t&&z.6p==0&&D.56.G>0){z.8s()}};z.ck=B(){A 57=D.8t;1s(57.G){(57.8q())()}};z.qU=B(M,jn){A d=z;if(P.G==1){d.56.Y(M)}I{if(P.G>1){d.56.Y(B(){M[jn]()})}}if(d.6t&&d.6p==0&&!d.8u){d.8s()}};z.dW=B(M,jm){A d=z;if(P.G==1){d.8t.Y(M)}I{if(P.G>1){d.8t.Y(B(){M[jm]()})}}};z.iM=B(){if(D.6t){C}if(D.6p>0){1z.1K(\"qT qS in qR!\");C}z.8s()};z.8s=B(){if(V 5c==\"8b\"||(1o[\"qQ\"]&&z.2M)){5c(\"z.6m();\",0)}I{z.6m()}};z.cF=B(jl){A 4v=jl.1A(\".\");R(A i=4v.G;i>0;i--){A 8r=4v.2w(0,i).22(\".\");if((i==1)&&!D.cN(8r)){4v[0]=\"../\"+4v[0]}I{A cM=D.jk(8r);if(cM!=8r){4v.3S(0,i,cM);3f}}}C 4v};z.jj=U;z.8m=B(2T,qP,55){55=D.jj||55;A 54=D.53[2T];if(54){C 54}A cL=2T.1A(\".\");A 3L=D.cF(2T);A jh=((3L[0].2s(0)!=\"/\")&&!3L[0].1f(/^\\\\w+:/));A ji=3L[3L.G-1];A 3m;if(ji==\"*\"){2T=cL.2w(0,-1).22(\".\");3L.8q();3m=3L.22(\"/\")+\"/\"+(1o[\"qO\"]||\"qN\")+\".js\";if(jh&&3m.2s(0)==\"/\"){3m=3m.2w(1)}}I{3m=3L.22(\"/\")+\".js\";2T=cL.22(\".\")}A jf=(!55)?2T:L;A ok=D.jg(3m,jf);if((!ok)&&(!55)){2m S 1O(\"qM 3O 4E \\'\"+2T+\"\\'; 72 qL \\'\"+3m+\"\\'\")}if((!55)&&(!D[\"qK\"])){54=D.53[2T];if(!54){2m S 1O(\"qJ \\'\"+2T+\"\\' is 3O qI a8 je \\'\"+3m+\"\\'\")}}C 54};z.8c=z.8m;z.1Q=B(cK){A cJ=cK+\"\";A 8p=cJ;A 6s=cK.1A(/\\\\./);if(6s[6s.G-1]==\"*\"){6s.8q();8p=6s.22(\".\")}A 8o=z.6q(8p,K);D.53[cJ]=8o;D.53[8p]=8o;C 8o};z.qH=B(8n){A jd=8n[\"qG\"]||[];A cI=jd.3U(8n[z.j4]||8n[\"aY\"]||[]);R(A x=0;x<cI.G;x++){A 8l=cI[x];if(8l.1P==4e){z.8m.14(z,8l)}I{z.8m(8l)}}};z.jb=B(jc,qF){if(jc===K){A cH=[];R(A i=1;i<P.G;i++){cH.Y(P[i])}z.8c.14(z,cH)}};z.qE=z.jb;z.io=B(cG,ja){D.8k[cG]={1p:cG,1Z:ja}};z.qD=B(qC,qB,qA,qz){z.8c(\"z.j9\");z.j9.qy.14(z.qx,P)};(B(){A j7=S 9G(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\\\\\?([^#]*))?(#(.*))?$\");A j6=S 9G(\"^((([^:]+:)?([^@]+))@)?([^:]*)(:([0-9]+))?$\");z.4r=B(){A n=L;A 1V=P;A 1g=1V[0];R(A i=1;i<1V.G;i++){if(!1V[i]){6c}A 1t=S z.4r(1V[i]+\"\");A 4u=S z.4r(1g+\"\");if((1t.28==\"\")&&(!1t.4t)&&(!1t.3l)&&(!1t.1r)){if(1t.52!=n){4u.52=1t.52}1t=4u}I{if(!1t.4t){1t.4t=4u.4t;if(!1t.3l){1t.3l=4u.3l;if(1t.28.2s(0)!=\"/\"){A j8=4u.28.21(0,4u.28.31(\"/\")+1)+1t.28;A 1X=j8.1A(\"/\");R(A j=0;j<1X.G;j++){if(1X[j]==\".\"){if(j==1X.G-1){1X[j]=\"\"}I{1X.3S(j,1);j--}}I{if(j>0&&!(j==1&&1X[0]==\"\")&&1X[j]==\"..\"&&1X[j-1]!=\"..\"){if(j==(1X.G-1)){1X.3S(j,1);1X[j-1]=\"\"}I{1X.3S(j-1,2);j-=2}}}}1t.28=1X.22(\"/\")}}}}1g=\"\";if(1t.4t){1g+=1t.4t+\":\"}if(1t.3l){1g+=\"//\"+1t.3l}1g+=1t.28;if(1t.1r){1g+=\"?\"+1t.1r}if(1t.52){1g+=\"#\"+1t.52}}D.1g=1g.2i();A r=D.1g.1f(j7);D.4t=r[2]||(r[1]?\"\":n);D.3l=r[4]||(r[3]?\"\":n);D.28=r[5];D.1r=r[7]||(r[6]?\"\":n);D.52=r[9]||(r[8]?\"\":n);if(D.3l!=n){r=D.3l.1f(j6);D.8X=r[3]||n;D.8W=r[4]||n;D.qw=r[5];D.qv=r[7]||n}};z.4r.1C.2i=B(){C D.1g}})();z.qu=B(j5,2E){A 2B=z.cF(j5).22(\"/\");if(!2B){C L}if(2B.31(\"/\")!=2B.G-1){2B+=\"/\"}A cE=2B.T(\":\");if(2B.2s(0)!=\"/\"&&(cE==-1||cE>2B.T(\"/\"))){2B=z.51+2B}C S z.4r(2B,2E)};if(V 26!=\"1k\"){z.c8=K;z.j4=\"qt\";(B(){A d=z;if(1q&&1q.4I){A 8j=1q.4I(\"ak\");A j3=/z(\\\\.qs)?\\\\.js([\\\\?\\\\.]|$)/i;R(A i=0;i<8j.G;i++){A 4X=8j[i].5t(\"4X\");if(!4X){6c}A m=4X.1f(j3);if(m){if(!1o[\"51\"]){1o[\"51\"]=4X.21(0,m.hK)}A cD=8j[i].5t(\"1o\");if(cD){A cC=3u(\"({ \"+cD+\" })\");R(A x in cC){1o[x]=cC[x]}}3f}}}d.51=1o[\"51\"];A n=cq;A 8i=n.iL;A 4Z=n.qr;A 6r=2k(4Z);d.2M=(8i.T(\"qq\")>=0)?6r:0;d.6B=(4Z.T(\"qo\")>=0)||(4Z.T(\"j2\")>=0)?6r:0;d.3o=(4Z.T(\"j2\")>=0)?6r:0;A j1=8i.T(\"qn\");d.gu=d.7B=((j1>=0)&&(!d.6B))?6r:0;d.j0=0;d.1l=0;d.iV=0;1u{if(d.7B){d.j0=2k(8i.1A(\"qm/\")[1].1A(\" \")[0])}if((1q.gx)&&(!d.2M)){d.1l=2k(4Z.1A(\"qk \")[1].1A(\";\")[0])}}1y(e){}if(z.1l&&(26.8f.cu===\"9q:\")){1o.iT=K}d.iX=B(){A 2A;A qj;A cB=d.6q(\"cz.cy\");if(cB){C cB}if(V iZ!=\"1k\"){2A=S iZ()}I{if(d.1l){1u{2A=S 9j(\"qi.qh\")}1y(e){}}I{if(cq.qg[\"8Z/x-iY\"]){2A=1q.a9(\"8b\");2A.cA(\"Z\",\"8Z/x-iY\");2A.cA(\"3n\",0);2A.cA(\"58\",0);2A.1c.gq=\"7C\";1q.5K.4c(2A)}}}if(!2A){C L}z.88(\"cz.cy.qf\",2A);C z.6q(\"cz.cy\")};A iW=d.iX();if(iW){d.iV=K}A cm=1q[\"aX\"];d.qe=(cm==\"aW\")||(cm==\"gr\")||(d.1l<6);d.8h=1o.8h||(d.1l?n.qd:n.qc).1M();d.qb=1z.1K;d.cx=[\"iU.8g\",\"em.8g\",\"iU.8g.4.0\"];d.9b=B(){A 4s=L;A cv=L;if(!z.1l||!1o.iT){1u{4s=S qa()}1y(e){}}if(!4s){R(A i=0;i<3;++i){A cw=z.cx[i];1u{4s=S 9j(cw)}1y(e){cv=e}if(4s){z.cx=[cw];3f}}}if(!4s){2m S 1O(\"8g 3O q9: \"+cv)}C 4s};d.8Y=B(iS){A 4Y=iS.3N||0;C((4Y>=q8)&&(4Y<q7))||(4Y==q6)||(4Y==q5)||(!4Y&&(8f.cu==\"9q:\"||8f.cu==\"q4:\"))};A cs=1q.4I(\"q3\");A iQ=(cs&&cs.G>0);d.iR=B(1g,iP){A 3K=D.9b();if(!iQ&&z.4r){1g=(S z.4r(26.8f,1g)).2i()}3K.dL(\"dD\",1g,U);1u{3K.dI(L);if(!d.8Y(3K)){A 1G=1O(\"q2 4F 4E \"+1g+\" 3N:\"+3K.3N);1G.3N=3K.3N;1G.2G=3K.2G;2m 1G}}1y(e){if(iP){C L}2m e}C 3K.2G}})();z.iO=U;z.6o=B(e){z.iO=K;A cr=(e&&e.Z)?e.Z.1M():\"4E\";if(P.2O.iN||(cr!=\"q1\"&&cr!=\"4E\")){C}P.2O.iN=K;if(V z[\"8e\"]!=\"1k\"){dX(z.8e);63 z.8e}if(z.6p==0){z.iM()}};if(1q.66){if(z.2M||(z.7B&&(1o[\"q0\"]===K))){1q.66(\"pZ\",z.6o,L)}26.66(\"4E\",z.6o,L)}if(/(pY|pX)/i.6Z(cq.iL)){z.8e=dN(B(){if(/6m|iJ/.6Z(1q.6F)){z.6o()}},10)}(B(){A 3g=26;A 8d=B(cp,fp){A iK=3g[cp]||B(){};3g[cp]=B(){fp.14(3g,P);iK.14(3g,P)}};if(z.1l){1q.fJ(\"<iI\"+\"iH pW 4X=\\\\\"//:\\\\\" \"+\"pV=\\\\\"if(D.6F==\\'iJ\\'){z.6o();}\\\\\">\"+\"</iI\"+\"iH>\");A co=K;8d(\"iG\",B(){3g.5c(B(){co=U},0)});8d(\"pU\",B(){if(co){z.ck()}});1u{1q.pT.2P(\"v\",\"pS:pR-pQ-pP:pO\");1q.pN().pM(\"v\\\\\\\\:*\",\"pL:2E(#aY#pK)\")}1y(e){}}I{8d(\"iG\",B(){z.ck()})}})();z.pJ=B(){};z.1e=26[\"1q\"]||L;z.3E=B(){C z.1e.3E||z.1e.4I(\"3E\")[0]};z.ch=B(iF,iE){z.1W=iF;z.1e=iE};z.cf=B(4q,6n,iD){if((6n)&&((V 4q==\"3c\")||(4q 1N 67))){4q=6n[4q]}C(6n?4q.14(6n,iD||[]):4q())};z.pI=B(cj,iC,iB,iA){A cg;A iz=z.1W;A iy=z.1e;1u{z.ch(cj,cj.1q);cg=z.cf(iC,iB,iA)}ir{z.ch(iz,iy)}C cg};z.pH=B(ix,iw,iv,iu){A ce;A ip=z.1e;1u{z.1e=ix;ce=z.cf(iw,iv,iu)}ir{z.1e=ip}C ce};if(1o[\"cd\"]){R(A cc in 1o[\"cd\"]){z.io(cc,1o[\"cd\"][cc])}}}if(1o.im){if(!1z.ca){z.8c(\"z.pG.ca\")}}}if(!z.1h[\"z.X.c9\"]){z.1h[\"z.X.c9\"]=K;z.1Q(\"z.X.c9\");z.1R=B(it){C(V it==\"3c\"||it 1N 67)};z.2l=B(it){C(it&&it 1N 4e||V it==\"6a\"||((V z[\"1H\"]!=\"1k\")&&(it 1N z.1H)))};if(z.c8&&z.3o){z.1Y=B(it){if((V(it)==\"B\")&&(it==\"[8b 1H]\")){C U}C(V it==\"B\"||it 1N bI)}}I{z.1Y=B(it){C(V it==\"B\"||it 1N bI)}}z.ib=B(it){if(V it==\"1k\"){C U}C(it===L||V it==\"8b\"||z.2l(it)||z.1Y(it))};z.pF=B(it){A d=z;if((!it)||(V it==\"1k\")){C U}if(d.1R(it)){C U}if(d.1Y(it)){C U}if(d.2l(it)){C K}if((it.5w)&&(it.5w.1M()==\"3R\")){C U}if(pE(it.G)){C K}C U};z.pD=B(it){if(!it){C U}C!z.1Y(it)&&/\\\\{\\\\s*\\\\[il 5h\\\\]\\\\s*\\\\}/.6Z(67(it))};z.c7=B(M,4W){A 8a={};R(A x in 4W){if((V 8a[x]==\"1k\")||(8a[x]!=4W[x])){M[x]=4W[x]}}if(z.1l){A p=4W.2i;if((V(p)==\"B\")&&(p!=M.2i)&&(p!=8a.2i)&&(p!=\"\\\\pC 2i() {\\\\n    [il 5h]\\\\n}\\\\n\")){M.2i=4W.2i}}C M};z.1x=B(M,pB){R(A i=1,l=P.G;i<l;i++){z.c7(M,P[i])}C M};z.4M=B(c6,pA){R(A i=1,l=P.G;i<l;i++){z.c7(c6.1C,P[i])}C c6};z.ig=B(c5,89){A ij=z.4d(P,2);A ik=z.1R(89);C B(){A ih=z.4d(P);A f=(ik?(c5||z.1W)[89]:89);C(f)&&(f.14(c5||D,ij.3U(ih)))}};z.2p=B(2z,3k){if(P.G>2){C z.ig.14(z,P)}if(!3k){3k=2z;2z=L}if(z.1R(3k)){2z=2z||z.1W;if(!2z[3k]){2m([\"z.2p: ie[\\\\\"\",3k,\"\\\\\"] is L (ie=\\\\\"\",2z,\"\\\\\")\"].22(\"\"))}C B(){C 2z[3k].14(2z,P||[])}}I{C(!2z?3k:B(){C 3k.14(2z,P||[])})}};z.6j=B(M,c3){B c4(){};c4.1C=M;A c2=S c4();if(c3){z.1x(c2,c3)}C c2};z.7X=B(pz){A Q=[L];C z.2p.14(z,Q.3U(z.4d(P)))};z.4d=B(M,ic){A Q=[];R(A x=ic||0;x<M.G;x++){Q.Y(M[x])}C Q};z.c1=B(o){if(!o){C o}if(z.2l(o)){A r=[];R(A i=0;i<o.G;++i){r.Y(z.c1(o[i]))}C r}I{if(z.ib(o)){if(o.2t&&o.a7){C o.a7(K)}I{A r=S o.1P();R(A i in o){if(!(i in r)||r[i]!=o[i]){r[i]=z.c1(o[i])}}C r}}}C o};z.7g=B(2H){C 2H.2f(/^\\\\s\\\\s*/,\"\").2f(/\\\\s\\\\s*$/,\"\")}}if(!z.1h[\"z.X.2r\"]){z.1h[\"z.X.2r\"]=K;z.1Q(\"z.X.2r\");z.2r=B(6l,4p,3j){if(z.1Y(3j)||(P.G>3)){z.ia(\"z.2r: R 9P \\'\"+6l+\"\\' py pw B as \\'1P\\' pv pu of as a pt i3.\",\"\",\"1.0\");A c=3j;3j=P[3]||{};3j.1P=c}A dd=P.2O,4V=L;if(z.2l(4p)){4V=4p;4p=4V.3a()}if(4V){R(A i=0,m;i<4V.G;i++){m=4V[i];if(!m){2m(\"ps #\"+i+\" 4F pr of \"+6l+\" is L. pq\\'s pp a po pl is 3O 6m.\")}4p=dd.6j(4p,m)}}A i9=(3j||0).1P,6k=dd.6j(4p),fn;R(A i in 3j){if(z.1Y(fn=3j[i])&&(!0[i])){fn.i4=i}}z.4M(6k,{4o:6l,bY:i9,bZ:L},3j||0);6k.1C.1P=6k;C z.88(6l,6k)};z.1x(z.2r,{6j:B(c0,i8){A bp=(c0||0).1C,mp=(i8||0).1C;A 2S=z.2r.i7();z.1x(2S,{84:bp,1x:mp});if(c0){2S.1C=z.6j(bp)}z.4M(2S,z.2r.i6,mp||0,{bY:L});2S.1C.1P=2S;2S.1C.4o=(bp||0).4o+\"pk\"+(mp||0).4o;z.88(2S.1C.4o,2S);C 2S},i7:B(){C B(){D.i5(P)}},i6:{i5:B(86){A c=86.2O,s=c.84,ct=s&&s.1P,m=c.1x,87=m&&m.1P,a=86,ii,fn;if(a[0]){if((fn=a[0][\"bZ\"])){a=fn.14(D,a)||a}}if(fn=c.1C.bZ){a=fn.14(D,a)||a}if(ct&&ct.14){ct.14(D,a)}if(87&&87.14){87.14(D,a)}if(ii=c.1C.bY){ii.14(D,86)}},bX:B(85){A c=D.1P,p,m;1s(c){p=c.84;m=c.1x;if(m==85||(m 1N 85.1P)){C p}if(m&&(m=m.bX(85))){C m}c=p&&p.1P}},6h:B(83,82,bW,6i){A p=bW,c,m,f;do{c=p.1P;m=c.1x;if(m&&(m=D.6h(83,82,m,6i))){C m}if((f=p[83])&&(6i==(f==82))){C p}p=c.84}1s(p);C!6i&&(p=D.bX(bW))&&D.6h(83,82,p,6i)},bU:B(2R,4U,bV){A a=P;if(!z.1R(a[0])){bV=4U;4U=2R;2R=4U.2O.i4}A c=4U.2O,p=D.1P.1C,a=bV||4U,fn,mp;if(D[2R]!=c||p[2R]==c){mp=D.6h(2R,c,p,K);if(!mp){2m(D.4o+\": 1p i3 (\\\\\"\"+2R+\"\\\\\") 4F bU pj 1f 2O (2r.js)\")}p=D.6h(2R,c,mp,U)}fn=p&&p[2R];if(!fn){1z.1K(mp.4o+\": no bU \\\\\"\"+2R+\"\\\\\" ph pg (2r.js)\");C}C fn.14(D,a)}}})}if(!z.1h[\"z.X.2c\"]){z.1h[\"z.X.2c\"]=K;z.1Q(\"z.X.2c\");z.3i={i2:B(){C B(){A ap=4e.1C,c=P.2O,ls=c.2b,t=c.5V;A r=t&&t.14(D,P);R(A i in ls){if(!(i in ap)){ls[i].14(D,P)}}C r}},2P:B(6g,bT,i1){6g=6g||z.1W;A f=6g[bT];if(!f||!f.2b){A d=z.3i.i2();d.5V=f;d.2b=[];f=6g[bT]=d}C f.2b.Y(i1)},3J:B(i0,hZ,bS){A f=(i0||z.1W)[hZ];if(f&&f.2b&&bS--){63 f.2b[bS]}}};z.2c=B(M,pd,pc,pa,p9){A a=P,F=[],i=0;F.Y(z.1R(a[0])?L:a[i++],a[i++]);A a1=a[i+1];F.Y(z.1R(a1)||z.1Y(a1)?a[i++]:L,a[i++]);R(A l=a.G;i<l;i++){F.Y(a[i])}C z.by.14(D,F)};z.by=B(M,bR,hY,hX){A l=z.3i,h=l.2P(M,bR,z.2p(hY,hX));C[M,bR,h,l]};z.p8=B(6f){if(6f&&6f[0]!==1k){z.bv.14(D,6f);63 6f[0]}};z.bv=B(M,hV,hU,hW){hW.3J(M,hV,hU)};z.80={};z.p7=B(bQ,hT,hS){C[bQ,z.3i.2P(z.80,bQ,z.2p(hT,hS))]};z.p6=B(81){if(81){z.3i.3J(z.80,81[0],81[1])}};z.hQ=B(hR,F){A f=z.80[hR];(f)&&(f.14(D,F||[]))};z.p5=B(hP,M,bP){A pf=B(){z.hQ(hP,P)};C(bP)?z.2c(M,bP,pf):z.2c(M,pf)}}if(!z.1h[\"z.X.30\"]){z.1h[\"z.X.30\"]=K;z.1Q(\"z.X.30\");z.30=B(hO){D.bM=[];D.id=D.hN();D.2y=-1;D.3M=0;D.4R=[L,L];D.bO=hO;D.7Z=U};z.4M(z.30,{hN:(B(){A n=1;C B(){C n++}})(),4C:B(){if(D.2y==-1){if(D.bO){D.bO(D)}I{D.7Z=K}if(D.2y==-1){A 1G=S 1O(\"30 p4\");1G.dY=\"4C\";D.5i(1G)}}I{if((D.2y==0)&&(D.4R[0]1N z.30)){D.4R[0].4C()}}},7V:B(1v){D.2y=((1v 1N 1O)?1:0);D.4R[D.2y]=1v;D.7U()},bN:B(){if(D.2y!=-1){if(!D.7Z){2m S 1O(\"p3 p2!\")}D.7Z=U;C}},dM:B(1v){D.bN();D.7V(1v)},5i:B(1v){D.bN();if(!(1v 1N 1O)){1v=S 1O(1v)}D.7V(1v)},9e:B(cb,4T){A 6e=z.2p(cb,4T);if(P.G>2){6e=z.7X(6e,P,2)}C D.5k(6e,6e)},ef:B(cb,4T){A 7Y=z.2p(cb,4T);if(P.G>2){7Y=z.7X(7Y,P,2)}C D.5k(7Y,L)},ed:B(cb,4T){A 7W=z.2p(cb,4T);if(P.G>2){7W=z.7X(7W,P,2)}C D.5k(L,7W)},5k:B(cb,eb){D.bM.Y([cb,eb]);if(D.2y>=0){D.7U()}C D},7U:B(){A bL=D.bM;A 4n=D.2y;A 1v=D.4R[4n];A 4S=D;A cb=L;1s((bL.G>0)&&(D.3M==0)){A f=bL.3a()[4n];if(!f){6c}1u{1v=f(1v);4n=((1v 1N 1O)?1:0);if(1v 1N z.30){cb=B(1v){4S.7V(1v);4S.3M--;if((4S.3M==0)&&(4S.2y>=0)){4S.7U()}};D.3M++}}1y(1G){1z.1K(1G);4n=1;1v=1G}}D.2y=4n;D.4R[4n]=1v;if((cb)&&(D.3M)){1v.9e(cb)}}})}if(!z.1h[\"z.X.2e\"]){z.1h[\"z.X.2e\"]=K;z.1Q(\"z.X.2e\");z.5m=B(2e){1u{C 3u(\"(\"+2e+\")\")}1y(e){1z.1K(e);C 2e}};z.bK=B(2H){C(\"\\\\\"\"+2H.2f(/([\"\\\\\\\\])/g,\"\\\\\\\\$1\")+\"\\\\\"\").2f(/[\\\\f]/g,\"\\\\\\\\f\").2f(/[\\\\b]/g,\"\\\\\\\\b\").2f(/[\\\\n]/g,\"\\\\\\\\n\").2f(/[\\\\t]/g,\"\\\\\\\\t\").2f(/[\\\\r]/g,\"\\\\\\\\r\")};z.hM=\"\\\\t\";z.eq=B(it,4l,4P){4P=4P||\"\";A 4k=(4l?4P+z.hM:\"\");A 6b=(4l?\"\\\\n\":\"\");A 4Q=V(it);if(4Q==\"1k\"){C\"1k\"}I{if((4Q==\"4J\")||(4Q==\"p1\")){C it+\"\"}I{if(it===L){C\"L\"}}}if(4Q==\"3c\"){C z.bK(it)}A 6d=P.2O;A 4m;if(V it.hL==\"B\"){4m=it.hL();if(it!==4m){C 6d(4m,4l,4k)}}if(V it.2e==\"B\"){4m=it.2e();if(it!==4m){C 6d(4m,4l,4k)}}if(z.2l(it)){A 1v=[];R(A i=0;i<it.G;i++){A 1U=6d(it[i],4l,4k);if(V(1U)!=\"3c\"){1U=\"1k\"}1v.Y(6b+4k+1U)}C\"[\"+1v.22(\", \")+6b+4P+\"]\"}if(4Q==\"B\"){C L}A bJ=[];R(A 1i in it){A 7T;if(V(1i)==\"4J\"){7T=\"\\\\\"\"+1i+\"\\\\\"\"}I{if(V(1i)==\"3c\"){7T=z.bK(1i)}I{6c}}1U=6d(it[1i],4l,4k);if(V(1U)!=\"3c\"){6c}bJ.Y(6b+4k+7T+\": \"+1U)}C\"{\"+bJ.22(\", \")+6b+4P+\"}\"}}if(!z.1h[\"z.X.6a\"]){z.1h[\"z.X.6a\"]=K;z.1Q(\"z.X.6a\");(B(){A 69=B(Q,M,cb){C[(z.1R(Q)?Q.1A(\"\"):Q),(M||z.1W),(z.1R(cb)?(S bI(\"1m\",\"hK\",\"6a\",cb)):cb)]};z.1x(z,{T:B(bH,hH,hI,hJ){A i=0,2q=1,1d=bH.G;if(hJ){i=1d-1;2q=1d=-1}R(i=hI||i;i!=1d;i+=2q){if(bH[i]==hH){C i}}C-1},31:B(hG,hF,hE){C z.T(hG,hF,hE,K)},1n:B(Q,hD,M){if(!Q||!Q.G){C}A 1I=69(Q,M,hD);Q=1I[0];R(A i=0,l=1I[0].G;i<l;i++){1I[2].2d(1I[1],Q[i],i,Q)}},bE:B(bF,Q,hC,M){A 1I=69(Q,M,hC);Q=1I[0];R(A i=0,l=Q.G;i<l;i++){A bG=!!1I[2].2d(1I[1],Q[i],i,Q);if(bF^bG){C bG}}C bF},ah:B(Q,hB,hA){C D.bE(K,Q,hB,hA)},ag:B(Q,hz,hy){C D.bE(U,Q,hz,hy)},23:B(Q,7t,M){A 1I=69(Q,M,7t);Q=1I[0];A bD=((P[3])?(S P[3]()):[]);R(A i=0;i<Q.G;++i){bD.Y(1I[2].2d(1I[1],Q[i],i,Q))}C bD},3T:B(Q,hx,M){A 1I=69(Q,M,hx);Q=1I[0];A bC=[];R(A i=0;i<Q.G;i++){if(1I[2].2d(1I[1],Q[i],i,Q)){bC.Y(Q[i])}}C bC}})})()}if(!z.1h[\"z.X.1J\"]){z.1h[\"z.X.1J\"]=K;z.1Q(\"z.X.1J\");z.1J=B(bB){if(bB){D.hw(bB)}};z.1J.hp={p0:[0,0,0],oZ:[60,60,60],oY:[2j,2j,2j],oX:[1T,1T,1T],oW:[2j,0,0],oV:[1T,0,0],oU:[2j,0,2j],oT:[1T,0,1T],oS:[0,2j,0],oR:[0,1T,0],oQ:[2j,2j,0],oP:[1T,1T,0],oO:[0,0,2j],oN:[0,0,1T],oM:[0,2j,2j],oL:[0,1T,1T]};z.4M(z.1J,{r:1T,g:1T,b:1T,a:1,bz:B(r,g,b,a){A t=D;t.r=r;t.g=g;t.b=b;t.a=a},hw:B(2Q){A d=z;if(d.1R(2Q)){d.hq(2Q,D)}I{if(d.2l(2Q)){d.7P(2Q,D)}I{D.bz(2Q.r,2Q.g,2Q.b,2Q.a);if(!(2Q 1N d.1J)){D.7Q()}}}C D},7Q:B(){C D},oK:B(){A t=D;C[t.r,t.g,t.b]},oJ:B(){A t=D;C[t.r,t.g,t.b,t.a]},oI:B(){A Q=z.23([\"r\",\"g\",\"b\"],B(x){A s=D[x].2i(16);C s.G<2?\"0\"+s:s},D);C\"#\"+Q.22(\"\")},8F:B(hv){A t=D,7S=t.r+\", \"+t.g+\", \"+t.b;C(hv?\"hs(\"+7S+\", \"+t.a:\"7S(\"+7S)+\")\"},2i:B(){C D.8F(K)}});z.d8=B(bA,1d,hu,M){A d=z,t=M||S z.1J();d.1n([\"r\",\"g\",\"b\",\"a\"],B(x){t[x]=bA[x]+(1d[x]-bA[x])*hu;if(x!=\"a\"){t[x]=2Y.oH(t[x])}});C t.7Q()};z.ho=B(ht,M){A m=ht.1M().1f(/^hs?\\\\(([\\\\s\\\\.,0-9]+)\\\\)/);C m&&z.7P(m[1].1A(/\\\\s*,\\\\s*/),M)};z.hn=B(4j,M){A d=z,t=M||S d.1J(),7R=(4j.G==4)?4:8,hr=(1<<7R)-1;4j=2V(\"oG\"+4j.3b(1));if(2L(4j)){C L}d.1n([\"b\",\"g\",\"r\"],B(x){A c=4j&hr;4j>>=7R;t[x]=7R==4?17*c:c});t.a=1;C t};z.7P=B(a,M){A t=M||S z.1J();t.bz(2V(a[0]),2V(a[1]),2V(a[2]),2V(a[3]));if(2L(t.a)){t.a=1}C t.7Q()};z.hq=B(2H,M){A a=z.1J.hp[2H];C a&&z.7P(a,M)||z.ho(2H,M)||z.hn(2H,M)}}if(!z.1h[\"z.X\"]){z.1h[\"z.X\"]=K;z.1Q(\"z.X\")}if(!z.1h[\"z.X.5Z\"]){z.1h[\"z.X.5Z\"]=K;z.1Q(\"z.X.5Z\");(B(){A 1j=z.b2={2P:B(E,68,fp){if(!E){C}68=1j.4O(68);fp=1j.7G(68,fp);E.66(68,fp,U);C fp},3J:B(E,hm,hl){(E)&&(E.oF(1j.4O(hm),hl,U))},4O:B(1p){C(1p.2w(0,2)==\"on\"?1p.2w(2):1p)},7G:B(1p,fp){C(1p!=\"4b\"?fp:B(e){C fp.2d(D,1j.4i(e,D))})},4i:B(H,oE){4w(H.Z){2X\"4b\":1j.7K(H);3f}C H},7K:B(H){H.oD=(H.3h?67.oC(H.3h):\"\")}};z.oB=B(H,hk){C 1j.4i(H,hk)};z.gY=B(H){H.7J();H.7I()};A 7O=z.3i;z.by=B(M,bx,hh,hg,hi){A hj=M&&(M.2t||M.oA||M.66);A bw=!hj?0:(!hi?1:2),l=[z.3i,1j,7O][bw];A h=l.2P(M,bx,z.2p(hh,hg));C[M,bx,h,bw]};z.bv=B(M,he,hd,hf){([z.3i,1j,7O][hf]).3J(M,he,hd)};z.5W={oz:8,gV:9,oy:12,ox:13,ow:16,ov:17,ou:18,gG:19,ot:20,os:27,or:32,b5:33,b4:34,gE:35,gF:36,b7:37,b9:38,b6:39,b8:40,gD:45,8S:46,oq:47,oo:91,om:92,ol:93,oj:96,oi:97,oh:98,og:99,oe:6D,od:oc,ob:oa,o9:o8,o7:o6,o5:o4,o3:bi,o2:o1,o0:nZ,nY:nX,nW:nV,nU:bk,gS:nT,gR:nS,gQ:nR,gP:nQ,gO:nP,gN:nO,gM:nN,gL:nM,gK:nL,gJ:nK,gI:nJ,gH:nI,nH:nG,nF:nE,nD:nC,gB:nB,gC:nA};if(z.1l){bf=B(e,5h){1u{C(e.3I=5h)}1y(e){C 0}};A 61=z.3i;if(!1o.nz){7O=61=z.gy={b3:[],2P:B(64,bu,hc){64=64||z.1W;A f=64[bu];if(!f||!f.2b){A d=z.gz();d.5V=f&&(7M.Y(f)-1);d.2b=[];f=64[bu]=d}C f.2b.Y(7M.Y(hc)-1)},3J:B(hb,ha,7N){A f=(hb||z.1W)[ha],l=f&&f.2b;if(f&&l&&7N--){63 7M[l[7N]];63 l[7N]}}};A 7M=61.b3}z.1x(1j,{2P:B(E,62,fp){if(!E){C}62=1j.4O(62);if(62==\"h3\"){A kd=E.bs;if(!kd||!kd.2b||!kd.h9){1j.2P(E,\"bs\",1j.h4);E.bs.h9=K}}C 61.2P(E,62,1j.7G(fp))},3J:B(E,h8,h7){61.3J(E,1j.4O(h8),h7)},4O:B(7L){C(7L.2w(0,2)!=\"on\"?\"on\"+7L:7L)},ny:B(){},4i:B(H,4N){if(!H){A w=(4N)&&((4N.aD||4N.1q||4N).nx)||26;H=w.5Z}if(!H){C(H)}H.5V=H.br;H.bh=(4N||H.br);H.nw=H.nv;H.nu=H.nr;A bq=H.br,1e=(bq&&bq.aD)||1q;A bn=((z.1l<6)||(1e[\"aX\"]==\"aW\"))?1e.3E:1e.5K;A bm=z.aB();H.nq=H.np+z.aH(bn.5I||0)-bm.x;H.nn=H.nm+(bn.5G||0)-bm.y;if(H.Z==\"fk\"){H.h6=H.nl}if(H.Z==\"fj\"){H.h6=H.nk}H.7I=1j.bc;H.7J=1j.ba;C 1j.h5(H)},h5:B(H){4w(H.Z){2X\"4b\":A c=(\"3h\"in H?H.3h:H.3I);if(c==10){c=0;H.3I=13}I{if(c==13||c==27){c=0}I{if(c==3){c=99}}}H.3h=c;1j.7K(H);3f}C H},gZ:{bi:42,bk:47,h2:59,nj:43,ni:44,nh:45,ng:46,nf:47,60:96,h1:91,nb:92,na:93,h0:39},h4:B(H){A kp=H.bh.h3;if(!kp||!kp.2b){C}A k=H.3I;A bj=(k!=13)&&(k!=32)&&(k!=27)&&(k<48||k>90)&&(k<96||k>bk)&&(k<h2||k>60)&&(k<h1||k>h0);if(bj||H.5Y){A c=(bj?0:k);if(H.5Y){if(k==3||k==13){C}I{if(c>95&&c<bi){c-=48}I{if((!H.5X)&&(c>=65&&c<=90)){c+=32}I{c=1j.gZ[c]||c}}}}A 2x=1j.7H(H,{Z:\"4b\",2x:K,3h:c});kp.2d(H.bh,2x);H.bg=2x.bg;H.bd=2x.bd;bf(H,2x.3I)}},bc:B(){D.bg=K},ba:B(){D.n9=D.3I;if(D.5Y){bf(D,0)}D.bd=U}});z.gY=B(H){H=H||26.5Z;1j.bc.2d(H);1j.ba.2d(H)}}1j.7H=B(H,gX){A 2x=z.1x({},H,gX);1j.7K(2x);2x.7J=B(){H.7J()};2x.7I=B(){H.7I()};C 2x};if(z.2M){z.1x(1j,{4i:B(H,n8){4w(H.Z){2X\"4b\":A c=H.n7;if(c==3){c=99}c=((c<41)&&(!H.5X)?0:c);if((H.5Y)&&(!H.5X)&&(c>=65)&&(c<=90)){c+=32}C 1j.7H(H,{3h:c})}C H}})}if(z.3o){z.1x(1j,{4i:B(H,n6){4w(H.Z){2X\"4b\":A c=H.3h,s=H.5X,k=H.3I;k=k||gA[H.gW]||0;if(H.gW==\"n5\"){c=0}I{if((H.5Y)&&(c>0)&&(c<27)){c+=96}I{if(c==z.5W.gU){c=z.5W.gV;s=K}I{c=(c>=32&&c<gT?c:0)}}}C 1j.7H(H,{3h:c,5X:s,3I:k})}C H}});z.1x(z.5W,{gU:25,b9:gT,b8:n4,b7:n3,b6:n2,gS:n1,gR:n0,gQ:mZ,gP:mY,gO:mX,gN:mW,gM:mV,gL:mU,gK:mT,gJ:mS,gI:mR,gH:mQ,gG:mP,8S:mO,gF:mN,gE:mM,b5:mL,b4:mK,gD:mJ,mI:mH,gC:mG,gB:mF});A dk=z.5W,gA={\"mE\":dk.b9,\"mD\":dk.b8,\"mC\":dk.b7,\"mB\":dk.b6,\"mA\":dk.b5,\"mz\":dk.b4}}})();if(z.1l){z.gz=B(){C B(){A ap=4e.1C,h=z.gy.b3,c=P.2O,ls=c.2b,t=h[c.5V];A r=t&&t.14(D,P);R(A i in ls){if(!(i in ap)){h[ls[i]].14(D,P)}}C r}};z.b2.7G=B(fp){A f=z.b2.4i;C B(e){C fp.2d(D,f(e,D))}}}}if(!z.1h[\"z.X.b1\"]){z.1h[\"z.X.b1\"]=K;z.1Q(\"z.X.b1\");1u{1q.my(\"mx\",U,K)}1y(e){}if(z.1l||z.2M){z.1D=B(id,1e){if(z.1R(id)){A b0=(1e||z.1e);A 11=b0.gv(id);if((11)&&(11.gw.id.1Z==id)){C 11}I{A 5U=b0.gx[id];if(!5U){C}if(!5U.G){C 5U}A i=0;1s(11=5U[i++]){if(11.gw.id.1Z==id){C 11}}}}I{C id}}}I{z.1D=B(id,1e){if(z.1R(id)){C(1e||z.1e).gv(id)}I{C id}}}(B(){A 5T=L;z.mw=B(E){E=z.1D(E);1u{if(!5T){5T=1q.a9(\"mv\")}5T.4c(E.1L?E.1L.fs(E):E);5T.9L=\"\"}1y(e){}};z.mu=B(E,7F){1u{E=z.1D(E);7F=z.1D(7F);1s(E){if(E===7F){C K}E=E.1L}}1y(e){}C U};z.mt=B(E,5S){E=z.1D(E);if(z.gu){E.1c.ms=(5S)?\"dg\":\"7C\"}I{if(z.6B){E.1c.mr=(5S)?\"8K\":\"7C\"}I{if(z.1l){E.gs=(5S)?\"\":\"on\";z.1r(\"*\",E).1n(B(gt){gt.gs=(5S)?\"\":\"on\"})}}}};A 5R=B(E,4h){4h.1L.mq(E,4h);C K};A aZ=B(E,4h){A pn=4h.1L;if(4h==pn.fm){pn.4c(E)}I{C 5R(E,4h.71)}C K};z.5E=B(E,2a,3H){if((!E)||(!2a)||(V 3H==\"1k\")){C U}E=z.1D(E);2a=z.1D(2a);if(V 3H==\"4J\"){A cn=2a.3W;if(((3H==0)&&(cn.G==0))||(cn.G==3H)){2a.4c(E);C K}if(3H==0){C 5R(E,2a.5A)}C aZ(E,cn[3H-1])}4w(3H.1M()){2X\"mo\":C 5R(E,2a);2X\"a8\":C aZ(E,2a);2X\"9M\":if(2a.5A){C 5R(E,2a.5A)}I{2a.4c(E);C K}3f;aY:2a.4c(E);C K}};z.aP=\"5g-3G\";if(z.1l){A aV=1q.aX;z.aP=(aV==\"aW\")||(aV==\"gr\")||(z.1l<6)?\"g5-3G\":\"5g-3G\"}A 1E,dv=1q.mn;if(z.3o){1E=B(E){A s=dv.3F(E,L);if(!s&&E.1c){E.1c.gq=\"\";s=dv.3F(E,L)}C s||{}}}I{if(z.1l){1E=B(E){C E.gn}}I{1E=B(E){C dv.3F(E,L)}}}z.3F=1E;if(!z.1l){z.4g=B(mm,gp){C 2k(gp)||0}}I{z.4g=B(go,2N){if(!2N){C 0}if(2N==\"ml\"){C 4}if(2N.2w&&(2N.2w(-2)==\"px\")){C 2k(2N)}4G(go){A gm=1c.2g;A gl=aU.2g;aU.2g=gn.2g;1u{1c.2g=2N;2N=1c.mk}1y(e){2N=0}1c.2g=gm;aU.2g=gl}C 2N}}z.ge=(z.1l?B(E){1u{C(E.mj.mi.2W/6D)}1y(e){C 1}}:B(E){C z.3F(E).2W});z.gf=(z.1l?B(E,7D){if(7D==1){E.1c.7E=E.1c.7E.2f(/gk:[^;]*;/i,\"\");if(E.gj.1M()==\"gi\"){z.1r(\"> gh\",E).1n(B(i){i.1c.7E=i.1c.7E.2f(/gk:[^;]*;/i,\"\")})}}I{A o=\"mh(mg=\"+(7D*6D)+\")\";E.1c.3T=o}if(E.gj.1M()==\"gi\"){z.1r(\"> gh\",E).1n(B(i){i.1c.3T=o})}C 7D}:B(E,gg){C E.1c.2W=gg});A 5Q={3n:K,58:K,2g:K,5J:K};A gd=B(E,Z,5P){Z=Z.1M();if(5Q[Z]===K){C z.4g(E,5P)}I{if(5Q[Z]===U){C 5P}I{if((Z.T(\"mf\")>=0)||(Z.T(\"md\")>=0)||(Z.T(\"3n\")>=0)||(Z.T(\"58\")>=0)||(Z.T(\"5q\")>=0)||(Z.T(\"mc\")>=0)||(Z.T(\"ma\")>=0)){5Q[Z]=K;C z.4g(E,5P)}I{5Q[Z]=U;C 5P}}}};z.1c=B(E,5O,aT){A n=z.1D(E),F=P.G,op=(5O==\"2W\");if(F==3){C op?z.gf(n,aT):n.1c[5O]=aT}if(F==2&&op){C z.ge(n)}A s=z.3F(n);C(F==1)?s:gd(n,5O,s[5O])};z.7A=B(n,gc){A s=gc||1E(n),px=z.4g,l=px(n,s.m9),t=px(n,s.m8);C{l:l,t:t,w:l+px(n,s.m7),h:t+px(n,s.m6)}};z.5N=B(n,gb){A ne=\"7C\",px=z.4g,s=gb||1E(n),bl=(s.m5!=ne?px(n,s.m4):0),bt=(s.m3!=ne?px(n,s.m2):0);C{l:bl,t:bt,w:bl+(s.m1!=ne?px(n,s.m0):0),h:bt+(s.lZ!=ne?px(n,s.lY):0)}};z.aN=B(n,ga){A s=ga||1E(n),p=z.7A(n,s),b=z.5N(n,s);C{l:p.l+b.l,t:p.t+b.t,w:p.w+b.w,h:p.h+b.h}};z.aM=B(n,g9){A s=g9||1E(n),px=z.4g,l=px(n,s.lX),t=px(n,s.lW),r=px(n,s.lV),b=px(n,s.lU);if(z.3o&&(s.ax!=\"fU\")){r=l}C{l:l,t:t,w:l+r,h:t+b}};z.au=B(E,g8){A s=g8||1E(E),me=z.aM(E,s);A l=E.fT-me.l,t=E.fS-me.t;if(z.7B){A aS=2k(s.2g),aR=2k(s.5J);if(!2L(aS)&&!2L(aR)){l=aS,t=aR}I{A p=E.1L;if(p&&p.1c){A aQ=1E(p);if(aQ.lT!=\"lS\"){A be=z.5N(p,aQ);l+=be.l,t+=be.t}}}}I{if(z.2M){A p=E.1L;if(p){A be=z.5N(p);l-=be.l,t-=be.t}}}C{l:l,t:t,w:E.6v+me.w,h:E.8D+me.h}};z.aK=B(E,g7){A s=g7||1E(E),pe=z.7A(E,s),be=z.5N(E,s),w=E.aF,h;if(!w){w=E.6v,h=E.8D}I{h=E.lR,be.w=be.h=0}if(z.2M){pe.l+=be.l;pe.t+=be.t}C{l:pe.l,t:pe.t,w:w-pe.w-be.w,h:h-pe.h-be.h}};z.lQ=B(E,g6){A s=g6||1E(E),pe=z.7A(E,s),cb=z.aK(E,s);C{l:cb.l-pe.l,t:cb.t-pe.t,w:cb.w+pe.w,h:cb.h+pe.h}};z.aL=B(E,l,t,w,h,u){u=u||\"px\";4G(E.1c){if(!2L(l)){2g=l+u}if(!2L(t)){5J=t+u}if(w>=0){3n=w+u}if(h>=0){58=h+u}}};z.aO=B(E){A n=E.5w;C(z.aP==\"g5-3G\")||(n==\"lP\")||(n==\"lO\")};z.fX=B(E,7z,7y,g4){A bb=z.aO(E);if(bb){A pb=z.aN(E,g4);if(7z>=0){7z+=pb.w}if(7y>=0){7y+=pb.h}}z.aL(E,g3,g3,7z,7y)};z.fY=B(E,g1,g0,5M,5L,g2){A s=g2||z.3F(E);A bb=z.aO(E),pb=bb?fZ:z.aN(E,s),mb=z.aM(E,s);if(5M>=0){5M=2Y.5q(5M-pb.w-mb.w,0)}if(5L>=0){5L=2Y.5q(5L-pb.h-mb.h,0)}z.aL(E,g1,g0,5M,5L)};A fZ={l:0,t:0,w:0,h:0};z.lN=B(E,3G){A n=z.1D(E),s=1E(n),b=3G;C!b?z.au(n,s):z.fY(n,b.l,b.t,b.w,b.h,s)};z.lM=B(E,3G){A n=z.1D(E),s=1E(n),b=3G;C!b?z.aK(n,s):z.fX(n,b.w,b.h,s)};A 5H=B(E,1a){if(!(E=(E||0).1L)){C 0}A 1U,aJ=0,2h=z.3E();1s(E&&E.1c){if(1E(E).ax==\"lL\"){C 0}1U=E[1a];if(1U){aJ+=1U-0;if(E==2h){3f}}E=E.1L}C aJ};z.fQ=B(){A 2h=z.3E();A 3g=z.1W;A de=z.1e.5K;C{y:(3g.lK||de.5G||2h.5G||0),x:(3g.lJ||z.aH(de.5I)||2h.5I||0)}};z.aG=B(){C V z.aI==\"1k\"?(z.aI=z.3F(z.3E()).lI==\"lH\"):z.aI};z.aB=B(){A de=z.1e.5K;if(z.1l>=7){C{x:de.aC().2g,y:de.aC().5J}}I{C{x:z.aG()||26.am==26?de.fW:de.6v-de.aF-de.fW,y:de.lG}}};z.aH=B(aE){if(z.1l&&!z.aG()){A de=z.1e.5K;C aE+de.aF-de.lF}C aE};z.fP=B(E,aw){A ay=E.aD;A J={x:0,y:0};A 7w=U;A db=z.3E();if(z.1l){A aA=E.aC();A az=z.aB();J.x=aA.2g-az.x;J.y=aA.5J-az.y}I{if(ay[\"fV\"]){A bo=ay.fV(E);J.x=bo.x-5H(E,\"5I\");J.y=bo.y-5H(E,\"5G\")}I{if(E[\"fR\"]){7w=K;A 7x;if(z.3o&&(1E(E).ax==\"fU\")&&(E.1L==db)){7x=db}I{7x=db.1L}if(E.1L!=db){A nd=E;if(z.2M){nd=db}J.x-=5H(nd,\"5I\");J.y-=5H(nd,\"5G\")}A 4f=E;do{A n=4f[\"fT\"];if(!z.2M||n>0){J.x+=2L(n)?0:n}A m=4f[\"fS\"];J.y+=2L(m)?0:m;4f=4f.fR}1s((4f!=7x)&&4f)}I{if(E[\"x\"]&&E[\"y\"]){J.x+=2L(E.x)?0:E.x;J.y+=2L(E.y)?0:E.y}}}}if(7w||aw){A av=z.fQ();A m=7w?(!aw?-1:0):1;J.y+=m*av.y;J.x+=m*av.x}C J};z.af=B(E,fO){A n=z.1D(E),s=1E(n),mb=z.au(n,s);A at=z.fP(n,fO);mb.x=at.x;mb.y=at.y;C mb}})();z.fL=B(E,fN){C((\" \"+E.3A+\" \").T(\" \"+fN+\" \")>=0)};z.7s=B(E,ar){A 7v=E.3A;if((\" \"+7v+\" \").T(\" \"+ar+\" \")<0){E.3A=7v+(7v?\" \":\"\")+ar}};z.7r=B(E,fM){A t=z.7g((\" \"+E.3A+\" \").2f(\" \"+fM+\" \",\" \"));if(E.3A!=t){E.3A=t}};z.lE=B(E,aq,7u){if(V 7u==\"1k\"){7u=!z.fL(E,aq)}z[7u?\"7s\":\"7r\"](E,aq)}}if(!z.1h[\"z.X.1H\"]){z.1h[\"z.X.1H\"]=K;z.1Q(\"z.X.1H\");(B(){A d=z;z.1H=B(){A F=P;if((F.G==1)&&(V F[0]==\"4J\")){D.G=eK(F[0])}I{if(F.G){d.1n(F,B(i){D.Y(i)},D)}}};z.1H.1C=S 4e;if(d.1l){A fK=B(al){C(\"A a2 = am.\"+al+\"; \"+\"A ap = 4e.1C; \"+\"A ao = a2.1C; \"+\"R(A x in ao){ ap[x] = ao[x]; } \"+\"am.\"+al+\" = 4e; \")};A fI=fK(\"z.1H\");A aj=26.lD();aj.1q.fJ(\"<ak>\"+fI+\"</ak>\");aj.lC(1,1,1,1)}z.4M(z.1H,{T:B(fH,fG){C d.T(D,fH,fG)},31:B(lB,lA){A aa=d.4d(P);aa.ae(D);C d.31.14(d,aa)},ah:B(fF,fE){C d.ah(D,fF,fE)},ag:B(fD,fC){C d.ag(D,fD,fC)},1n:B(fB,fA){d.1n(D,fB,fA);C D},23:B(7t,M){C d.23(D,7t,M,d.1H)},af:B(){C d.23(D,d.af)},1c:B(lz,ly){A aa=d.4d(P);aa.ae(D[0]);A s=d.1c.14(d,aa);C(P.G>1)?D:s},lx:B(lw,lv){A aa=d.4d(P);aa.ae(L);A s=D.23(B(i){aa[0]=i;C d.1c.14(d,aa)});C(P.G>1)?D:s},7s:B(fz){C D.1n(B(i){z.7s(i,fz)})},7r:B(fy){C D.1n(B(i){z.7r(i,fy)})},5E:B(fw,7q){A 1m=d.1r(fw)[0];7q=7q||\"72\";R(A x=0;x<D.G;x++){d.5E(D[x],1m,7q)}C D},2c:B(fv,fu,ft){D.1n(B(1m){d.2c(1m,fv,fu,ft)});C D},lu:B(ad){A ac=(ad)?d.9t(D,ad):D;ac.1n(B(1m){if(1m[\"1L\"]){1m.1L.fs(1m)}});C ac},lt:B(fr,fq){A 1m=D[0];C d.1r(fr).1n(B(ai){d.5E(ai,1m,(fq||\"72\"))})},1r:B(7p){7p=7p||\"\";A J=S d.1H();D.1n(B(1m){d.1r(7p,1m).1n(B(ab){if(V ab!=\"1k\"){J.Y(ab)}})});C J},3T:B(fo){A 5F=D;A 1V=P;A r=S d.1H();A rp=B(t){if(V t!=\"1k\"){r.Y(t)}};if(d.1R(fo)){5F=d.9t(D,1V[0]);if(1V.G==1){C 5F}d.1n(d.3T(5F,1V[1],1V[2]),rp);C r}d.1n(d.3T(5F,1V[0],1V[1]),rp);C r},lr:B(7o,7n){A 1S=d.1e.a9(\"lq\");if(d.1R(7o)){1S.9L=7o}I{1S.4c(7o)}A ct=((7n==\"9M\")||(7n==\"a8\"))?\"fm\":\"5A\";D.1n(B(1m){A 24=1S.a7(K);1s(24[ct]){d.5E(24[ct],1m,7n)}});C D},7m:B(fl,F){A a5=[];F=F||{};D.1n(B(1m){A a6={E:1m};d.1x(a6,F);a5.Y(d[fl](a6))});C d.fx.lp(a5)},8I:B(F){C D.7m(\"8I\",F)},8H:B(F){C D.7m(\"8H\",F)},6y:B(F){C D.7m(\"6y\",F)}});z.1n([\"fk\",\"lo\",\"fj\",\"fi\",\"ln\",\"lm\",\"ll\",\"fi\",\"lk\",\"lj\",\"4b\"],B(H){A a4=\"on\"+H;z.1H.1C[a4]=B(a,b){C D.2c(a4,a,b)}})})()}if(!z.1h[\"z.X.1r\"]){z.1h[\"z.X.1r\"]=K;z.1Q(\"z.X.1r\");(B(){A d=z;A 2I=B(q){C[q.T(\"#\"),q.T(\".\"),q.T(\"[\"),q.T(\":\")]};A a0=B(a3,fh){A ql=a3.G;A i=2I(a3);A 1d=ql;R(A x=fh;x<i.G;x++){if(i[x]>=0){if(i[x]<1d){1d=i[x]}}}C(1d<0)?ql:1d};A 6X=B(7l){A i=2I(7l);if(i[0]!=-1){C 7l.21(i[0]+1,a0(7l,1))}I{C\"\"}};A 5r=B(7k){A 5D;A i=2I(7k);if((i[0]==0)||(i[1]==0)){5D=0}I{5D=a0(7k,0)}C((5D>0)?7k.3b(0,5D).1M():\"*\")};A fg=B(Q){A J=-1;R(A x=0;x<Q.G;x++){A 1S=Q[x];if(1S>=0){if((1S>J)||(J==-1)){J=1S}}}C J};A 9H=B(7i){A i=2I(7i);if(-1==i[1]){C\"\"}A di=i[1]+1;A 7j=fg(i.2w(2));if(di<7j){C 7i.21(di,7j)}I{if(-1==7j){C 7i.3b(di)}I{C\"\"}}};A f3=[{1i:\"|=\",1f:B(15,fe){C\"[5z(3U(\\' \\',@\"+15+\",\\' \\'), \\' \"+fe+\"-\\')]\"}},{1i:\"~=\",1f:B(15,fd){C\"[5z(3U(\\' \\',@\"+15+\",\\' \\'), \\' \"+fd+\" \\')]\"}},{1i:\"^=\",1f:B(15,fb){C\"[li-4G(@\"+15+\", \\'\"+fb+\"\\')]\"}},{1i:\"*=\",1f:B(15,fa){C\"[5z(@\"+15+\", \\'\"+fa+\"\\')]\"}},{1i:\"$=\",1f:B(15,9Z){C\"[21(@\"+15+\", 3c-G(@\"+15+\")-\"+(9Z.G-1)+\")=\\'\"+9Z+\"\\']\"}},{1i:\"!=\",1f:B(15,f9){C\"[3O(@\"+15+\"=\\'\"+f9+\"\\')]\"}},{1i:\"=\",1f:B(15,f8){C\"[@\"+15+\"=\\'\"+f8+\"\\']\"}}];A 9C=B(9Y,3Z,f7,f6){A 49;A i=2I(3Z);if(i[2]>=0){A 4L=3Z.T(\"]\",i[2]);A 29=3Z.21(i[2]+1,4L);1s(29&&29.G){if(29.2s(0)==\"@\"){29=29.2w(1)}49=L;R(A x=0;x<9Y.G;x++){A 1S=9Y[x];A 7h=29.T(1S.1i);if(7h>=0){A 15=29.21(0,7h);A 4a=29.21(7h+1S.1i.G);if((4a.2s(0)==\"\\\\\"\")||(4a.2s(0)==\"\\'\")){4a=4a.21(1,4a.G-1)}49=1S.1f(d.7g(15),d.7g(4a));3f}}if((!49)&&(29.G)){49=f7(29)}if(49){f6(49)}29=L;A 7f=3Z.T(\"[\",4L);if(0<=7f){4L=3Z.T(\"]\",7f);if(0<=4L){29=3Z.21(7f+1,4L)}}}}};A f0=B(f5){A 4K=\".\";A 7e=f5.1A(\" \");1s(7e.G){A 2K=7e.3a();A 7d;if(2K==\">\"){7d=\"/\";2K=7e.3a()}I{7d=\"//\"}A f4=5r(2K);4K+=7d+f4;A id=6X(2K);if(id.G){4K+=\"[@id=\\'\"+id+\"\\'][1]\"}A cn=9H(2K);if(cn.G){A 9X=\" \";if(cn.2s(cn.G-1)==\"*\"){9X=\"\";cn=cn.3b(0,cn.G-1)}4K+=\"[5z(3U(\\' \\',@9P,\\' \\'), \\' \"+cn+9X+\"\\')]\"}9C(f3,2K,B(f2){C\"[@\"+f2+\"]\"},B(f1){4K+=f1})}C 4K};A 7a={};A eC=B(28){if(7a[28]){C 7a[28]}A 1e=d.1e;A 9W=f0(28);A 4H=B(9V){A J=[];A 7b;1u{7b=1e.9x(9W,9V,L,lh.lg,L)}1y(e){1z.1K(\"lf in le:\",9W,\"lc:\",9V);1z.1K(e)}A 7c=7b.eZ();1s(7c){J.Y(7c);7c=7b.eZ()}C J};C 7a[28]=4H};A 5x={};A 9B={};A 3y=B(79,78){if(!79){C 78}if(!78){C 79}C B(){C 79.14(26,P)&&78.14(26,P)}};A 75=B(9U,3Y,5B,2J){A 2v=2J+1;A 76=(3Y.G==2v);A 2K=3Y[2J];if(2K==\">\"){A 77=9U.3W;if(!77.G){C}2v++;76=(3Y.G==2v);A 4H=6O(3Y[2J+1]);R(A x=0,11;x<77.G,11=77[x];x++){if(4H(11)){if(76){5B.Y(11)}I{75(11,3Y,5B,2v)}}}}A 5C=6U(2K)(9U);if(76){1s(5C.G){5B.Y(5C.3a())}}I{1s(5C.G){75(5C.3a(),3Y,5B,2v)}}};A eE=B(9T,eY){A J=[];A x=9T.G-1,11;1s(11=9T[x--]){75(11,eY,J,0)}C J};A 6O=B(3D){if(5x[3D]){C 5x[3D]}A ff=L;A 9S=5r(3D);if(9S!=\"*\"){ff=3y(ff,B(N){C((N.2t==1)&&(9S==N.5w.1M()))})}A 9R=6X(3D);if(9R.G){ff=3y(ff,B(N){C((N.2t==1)&&(N.id==9R))})}if(2Y.5q.14(D,2I(3D).2w(1))>=0){ff=3y(ff,9z(3D))}C 5x[3D]=ff};A 5y=B(E){A pn=E.1L;A 9Q=pn.3W;A 2v=-1;A 3C=pn.5A;if(!3C){C 2v}A ci=E[\"eW\"];A cl=pn[\"eX\"];if(((V cl==\"4J\")&&(cl!=9Q.G))||(V ci!=\"4J\")){pn[\"eX\"]=9Q.G;A 2J=1;do{if(3C===E){2v=2J}if(3C.2t==1){3C[\"eW\"]=2J;2J++}3C=3C.71}1s(3C)}I{2v=ci}C 2v};A lb=0;A 3X=B(N,15){A 74=\"\";if(15==\"9P\"){C N.3A||74}if(15==\"R\"){C N.la||74}C N.5t(15,2)||74};A eH=[{1i:\"|=\",1f:B(15,9O){A eV=\" \"+9O+\"-\";C B(N){A ea=\" \"+(N.5t(15,2)||\"\");C((ea==9O)||(ea.T(eV)==0))}}},{1i:\"^=\",1f:B(15,eU){C B(N){C(3X(N,15).T(eU)==0)}}},{1i:\"*=\",1f:B(15,eT){C B(N){C(3X(N,15).T(eT)>=0)}}},{1i:\"~=\",1f:B(15,eS){A 9N=\" \"+eS+\" \";C B(N){A ea=\" \"+3X(N,15)+\" \";C(ea.T(9N)>=0)}}},{1i:\"$=\",1f:B(15,73){A 9N=\" \"+73;C B(N){A ea=\" \"+3X(N,15);C(ea.31(73)==(ea.G-73.G))}}},{1i:\"!=\",1f:B(15,eR){C B(N){C(3X(N,15)!=eR)}}},{1i:\"=\",1f:B(15,eQ){C B(N){C(3X(N,15)==eQ)}}}];A 9E=[{1i:\"9M-9K\",1f:B(1p,l9){C B(N){if(N.2t!=1){C U}A fc=N.eP;1s(fc&&(fc.2t!=1)){fc=fc.eP}C(!fc)}}},{1i:\"72-9K\",1f:B(1p,l8){C B(N){if(N.2t!=1){C U}A nc=N.71;1s(nc&&(nc.2t!=1)){nc=nc.71}C(!nc)}}},{1i:\"l7\",1f:B(1p,l6){C B(N){A cn=N.3W;A eO=N.3W.G;R(A x=eO-1;x>=0;x--){A nt=cn[x].2t;if((nt==1)||(nt==3)){C U}}C K}}},{1i:\"5z\",1f:B(1p,eN){C B(N){C(N.9L.T(eN)>=0)}}},{1i:\"3O\",1f:B(1p,eM){A eL=6O(eM);C B(N){C(!eL(N))}}},{1i:\"l5-9K\",1f:B(1p,2u){A pi=eK;if(2u==\"l4\"){C B(N){C(((5y(N))%2)==1)}}I{if((2u==\"2n\")||(2u==\"l3\")){C B(N){C((5y(N)%2)==0)}}I{if(2u.T(\"l2+\")==0){A 70=pi(2u.3b(3));C B(N){C(N.1L.3W[70-1]===N)}}I{if((2u.T(\"n+\")>0)&&(2u.G>3)){A 9J=2u.1A(\"n+\",2);A eJ=pi(9J[0]);A 2J=pi(9J[1]);C B(N){C((5y(N)%eJ)==2J)}}I{if(2u.T(\"n\")==-1){A 70=pi(2u);C B(N){C(5y(N)==70)}}}}}}}}];A 9z=B(3e){A 9I=(9B[3e]||5x[3e]);if(9I){C 9I}A ff=L;A i=2I(3e);if(i[0]>=0){A 24=5r(3e);if(24!=\"*\"){ff=3y(ff,B(N){C(N.5w.1M()==24)})}}A 5u;A 3B=9H(3e);if(3B.G){A 9F=3B.2s(3B.G-1)==\"*\";if(9F){3B=3B.3b(0,3B.G-1)}A re=S 9G(\"(?:^|\\\\\\\\s)\"+3B+(9F?\".*\":\"\")+\"(?:\\\\\\\\s|$)\");ff=3y(ff,B(N){C re.6Z(N.3A)})}if(i[3]>=0){A 3z=3e.3b(i[3]+1);A 9D=\"\";A 5v=3z.T(\"(\");A 6Y=3z.31(\")\");if((0<=5v)&&(0<=6Y)&&(6Y>5v)){9D=3z.21(5v+1,6Y);3z=3z.3b(0,5v)}5u=L;R(A x=0;x<9E.G;x++){A 1S=9E[x];if(1S.1i==3z){5u=1S.1f(3z,9D);3f}}if(5u){ff=3y(ff,5u)}}A eG=(d.1l)?B(5s){A eI=5s.1M();C B(N){C N[5s]||N[eI]}}:B(5s){C B(N){C(N&&N.5t&&N.l1(5s))}};9C(eH,3e,eG,B(eF){ff=3y(ff,eF)});if(!ff){ff=B(){C K}}C 9B[3e]=ff};A 6W={};A 6U=B(3d,1B){A 9A=6W[3d];if(9A){C 9A}A i=2I(3d);A id=6X(3d);if(i[0]==0){C 6W[3d]=B(1B){C[d.1D(id)]}}A 9y=9z(3d);A 5p;if(i[0]>=0){5p=B(1B){A 11=d.1D(id);if(9y(11)){C[11]}}}I{A 3V;A 24=5r(3d);if(2Y.5q.14(D,2I(3d))==-1){5p=B(1B){A J=[];A 11,x=0,3V=1B.4I(24);1s(11=3V[x++]){J.Y(11)}C J}}I{5p=B(1B){A J=[];A 11,x=0,3V=1B.4I(24);1s(11=3V[x++]){if(9y(11)){J.Y(11)}}C J}}}C 6W[3d]=5p};A l0={};A 5o={\">\":B(1B){A J=[];A 11,x=0,3V=1B.3W;1s(11=3V[x++]){if(11.2t==1){J.Y(11)}}C J}};A 9w=B(6V){if(0>6V.T(\" \")){C 6U(6V)}A eD=B(1B){A 6S=6V.1A(\" \");A 6T;if(6S[0]==\">\"){6T=[1B]}I{6T=6U(6S.3a())(1B)}C eE(6T,6S)};C eD};A 9v=((1q[\"9x\"]&&!d.3o)?B(3x){A 6R=3x.1A(\" \");if((1q[\"9x\"])&&(3x.T(\":\")==-1)&&((K))){if(((6R.G>2)&&(3x.T(\">\")==-1))||(6R.G>3)||(3x.T(\"[\")>=0)||((1==6R.G)&&(0<=3x.T(\".\")))){C eC(3x)}}C 9w(3x)}:9w);A ey=B(3w){if(5o[3w]){C 5o[3w]}if(0>3w.T(\",\")){C 5o[3w]=9v(3w)}I{A eB=3w.1A(/\\\\s*,\\\\s*/);A 4H=B(1B){A eA=0;A J=[];A 6Q;1s(6Q=eB[eA++]){J=J.3U(9v(6Q,6Q.T(\" \"))(1B))}C J};C 5o[3w]=4H}};A 5n=0;A ez=B(Q){A J=S d.1H();if(!Q){C J}if(Q[0]){J.Y(Q[0])}if(Q.G<2){C J}5n++;Q[0][\"9u\"]=5n;R(A x=1,11;11=Q[x];x++){if(Q[x][\"9u\"]!=5n){J.Y(11)}11[\"9u\"]=5n}C J};d.1r=B(6P,1B){if(V 6P!=\"3c\"){C S d.1H(6P)}if(V 1B==\"3c\"){1B=d.1D(1B)}C ez(ey(6P)(1B||d.1e))};d.9t=B(ex,9s){A 9r=S d.1H();A ff=(9s)?6O(9s):B(){C K};R(A x=0,11;11=ex[x];x++){if(ff(11)){9r.Y(11)}}C 9r}})()}if(!z.1h[\"z.X.1b\"]){z.1h[\"z.X.1b\"]=K;z.1Q(\"z.X.1b\");z.6K=B(ew){A J={};A iq=\"kZ[Z!=9q][Z!=kY][Z!=et][Z!=kX][Z!=kW], kV, kU\";z.1r(iq,ew).3T(B(E){C(!E.kT)}).1n(B(1m){A 3v=1m.1p;A Z=(1m.Z||\"\").1M();if((Z==\"kS\")||(Z==\"kR\")){if(1m.kQ){J[3v]=1m.1Z}}I{if(1m.kP){A ev=J[3v]=[];z.1r(\"kO[kN]\",1m).1n(B(eu){ev.Y(eu.1Z)})}I{J[3v]=1m.1Z;if(Z==\"et\"){J[3v+\".x\"]=J[3v+\".y\"]=J[3v].x=J[3v].y=0}}}});C J};z.9h=B(23){A ec=kM;A J=\"\";A es={};R(A x in 23){if(23[x]!=es[x]){if(z.2l(23[x])){R(A y=0;y<23[x].G;y++){J+=ec(x)+\"=\"+ec(23[x][y])+\"&\"}}I{J+=ec(x)+\"=\"+ec(23[x])+\"&\"}}}if((J.G)&&(J.2s(J.G-1)==\"&\")){J=J.3b(0,J.G-1)}C J};z.kL=B(er){C z.9h(z.6K(er))};z.kK=B(ep){C z.eq(z.6K(ep))};z.kJ=B(2H){A J={};A qp=2H.1A(\"&\");A dc=kI;z.1n(qp,B(1m){if(1m.G){A 9p=1m.1A(\"=\");A 1p=dc(9p.3a());A 1U=dc(9p.22(\"=\"));if(z.1R(J[1p])){J[1p]=[J[1p]]}if(z.2l(J[1p])){J[1p].Y(1U)}I{J[1p]=1U}}});C J};z.e1=U;z.e6={\"9g\":B(1b){C 1b.2G},\"2e\":B(1b){if(!1o.eo){1z.1K(\"kH kG kF a kE of 9g/2e-6M-9m\"+\" 4F kD kC kB kA 4G en kz\"+\" (ky 1o.eo=K 4F kx kw D kv)\")}C z.5m(1b.2G)},\"2e-6M-ku\":B(1b){A 6N=1b.2G;A 9o=6N.T(\"/*\");A 9n=6N.31(\"*/\");if((9o==-1)||(9n==-1)){C z.5m(1b.2G)}C z.5m(6N.21(9o+2,9n))},\"2e-6M-9m\":B(1b){A 6L=1b.2G;A 9l=6L.T(\"/*\");A 9k=6L.31(\"*/\");if((9l==-1)||(9k==-1)){1z.1K(\"kt en ks\\'t 6M 9m!\");C\"\"}C z.5m(6L.21(9l+2,9k))},\"kr\":B(1b){C z.3u(1b.2G)},\"kq\":B(1b){if(z.1l&&!1b.el){z.1n([\"ko\",\"em\",\"kn\",\"km\"],B(i){1u{A 1e=S 9j(kl[i]+\".kk\");1e.kj=U;1e.ki(1b.2G);C 1e}1y(e){}})}I{C 1b.el}}};(B(){z.e5=B(F,ej,ei,eh){A 2F={};2F.F=F;A 6J=L;if(F.3R){A 3R=z.1D(F.3R);A 9i=3R.kh(\"kg\");2F.2E=F.2E||(9i?9i.1Z:L);6J=z.6K(3R)}I{2F.2E=F.2E}A 5l=[{}];if(6J){5l.Y(6J)}if(F.5g){5l.Y(F.5g)}if(F.ek){5l.Y({\"z.ek\":S 5d().8O()})}2F.1r=z.9h(z.1x.14(L,5l));2F.9d=F.9d||\"9g\";A d=S z.30(ej);d.5k(ei,B(eg){C eh(eg,d)});A ld=F.4E;if(ld&&z.1Y(ld)){d.ef(B(ee){C ld.2d(F,ee,2F)})}A 1G=F.9f;if(1G&&z.1Y(1G)){d.ed(B(e9){C 1G.2d(F,e9,2F)})}A 6I=F.kf;if(6I&&z.1Y(6I)){d.9e(B(e8){C 6I.2d(F,e8,2F)})}d.1F=2F;C d};A e4=B(O){O.e0=K;A 1b=O.1F.1b;if(V 1b.e7==\"B\"){1b.e7()}};A e3=B(O){C z.e6[O.1F.9d](O.1F.1b)};A e2=B(9c,O){1z.1K(9c);C 9c};A 3Q=B(F){A O=z.e5(F,e4,e3,e2);O.1F.1b=z.9b(O.1F.F);C O};A 5j=L;A 3t=[];A 94=B(){A dZ=(S 5d()).dU();if(!z.e1){z.1n(3t,B(4D,6H){if(!4D){C}A O=4D.O;1u{if(!O||O.e0||!4D.dT(O)){3t.3S(6H,1);C}if(4D.dR(O)){3t.3S(6H,1);4D.dP(O)}I{if(O.9a){if(O.9a+(O.1F.F.6G||0)<dZ){3t.3S(6H,1);A 1G=S 1O(\"6G ke\");1G.dY=\"6G\";O.5i(1G);O.4C()}}}}1y(e){1z.1K(e);O.5i(S 1O(\"kc!\"))}})}if(!3t.G){dX(5j);5j=L;C}};z.dV=B(){1u{z.1n(3t,B(i){i.O.4C()})}1y(e){}};if(z.1l){z.dW(z.dV)}z.dH=B(O,dS,dQ,dO){if(O.1F.F.6G){O.9a=(S 5d()).dU()}3t.Y({O:O,dT:dS,dR:dQ,dP:dO});if(!5j){5j=dN(94,50)}94()};A dJ=\"8Z/x-kb-3R-ka\";A dG=B(O){C O.1F.1b.6F};A dF=B(O){C 4==O.1F.1b.6F};A dE=B(O){if(z.8Y(O.1F.1b)){O.dM(O)}I{O.5i(S 1O(\"k9 k8 k7 5h:\"+O.1F.1b.3N))}};A 3P=B(Z,O){A 3s=O.1F;A F=3s.F;3s.1b.dL(Z,3s.2E,(F.k6!==K),(F.8X?F.8X:1k),(F.8W?F.8W:1k));if(F.6E){R(A 5f in F.6E){if(5f.1M()===\"5g-Z\"&&!F.8V){F.8V=F.6E[5f]}I{3s.1b.dK(5f,F.6E[5f])}}}3s.1b.dK(\"k5-k4\",(F.8V||dJ));1u{3s.1b.dI(3s.1r)}1y(e){O.4C()}z.dH(O,dG,dF,dE);C O};z.8T=B(4B){if(4B.1r.G){4B.2E+=(4B.2E.T(\"?\")==-1?\"?\":\"&\")+4B.1r;4B.1r=L}};z.k3=B(F){A O=3Q(F);z.8T(O.1F);C 3P(\"dD\",O)};z.k2=B(F){C 3P(\"dC\",3Q(F))};z.k1=B(F){A O=3Q(F);O.1F.1r=F.k0;C 3P(\"dC\",O)};z.jZ=B(F){C 3P(\"dA\",3Q(F))};z.jY=B(F){A O=3Q(F);A dB=O.1F;if(F[\"8U\"]){dB.1r=F.8U;F.8U=L}C 3P(\"dA\",O)};z.jX=B(F){A O=3Q(F);z.8T(O.1F);C 3P(\"8S\",O)};z.dz=B(jW){2m S 1O(\"z.dz 3O jV jU\")}})()}if(!z.1h[\"z.X.fx\"]){z.1h[\"z.X.fx\"]=K;z.1Q(\"z.X.fx\");z.dx=B(dy,1d){D.1w=dy;D.1d=1d;D.4x=B(n){C((D.1d-D.1w)*n)+D.1w}};z.2r(\"z.d6\",L,{1P:B(F){z.1x(D,F);if(z.2l(D.2C)){D.2C=S z.dx(D.2C[0],D.2C[1])}},2C:L,8Q:jT,5a:L,4z:0,dj:10,du:L,6x:L,dt:L,8B:L,dh:L,ds:L,dr:L,dm:L,2D:U,2Z:U,4A:L,8N:L,3r:L,2o:0,4y:0,3q:B(H,F){if(D[H]){D[H].14(D,F||[])}C D},5b:B(dw,8R){if(8R){5e(D.3r);D.2D=D.2Z=U;D.2o=0}I{if(D.2D&&!D.2Z){C D}}D.3q(\"6x\");A d=dw||D.du;if(d>0){5c(z.2p(D,B(){D.5b(L,8R)}),d);C D}D.4A=S 5d().8O();if(D.2Z){D.4A-=D.8Q*D.2o}D.8N=D.4A+D.8Q;D.2D=K;D.2Z=U;A 8P=D.2C.4x(D.2o);if(!D.2o){if(!D.4y){D.4y=D.4z}D.3q(\"dt\",[8P])}D.3q(\"ds\",[8P]);D.8M();C D},jS:B(){5e(D.3r);if(!D.2D){C D}D.2Z=K;D.3q(\"dr\",[D.2C.4x(D.2o)]);C D},jR:B(dq,dp){5e(D.3r);D.2D=D.2Z=K;D.2o=dq*6D;if(dp){D.5b()}C D},jQ:B(dn){if(!D.3r){C}5e(D.3r);if(dn){D.2o=1}D.3q(\"dm\",[D.2C.4x(D.2o)]);D.2D=D.2Z=U;C D},3N:B(){if(D.2D){C D.2Z?\"3M\":\"jP\"}C\"jO\"},8M:B(){5e(D.3r);if(D.2D){A dl=S 5d().8O();A 2q=(dl-D.4A)/(D.8N-D.4A);if(2q>=1){2q=1}D.2o=2q;if(D.5a){2q=D.5a(2q)}D.3q(\"8B\",[D.2C.4x(2q)]);if(2q<1){D.3r=5c(z.2p(D,\"8M\"),D.dj)}I{D.2D=U;if(D.4z>0){D.4z--;D.5b(L,K)}I{if(D.4z==-1){D.5b(L,K)}I{if(D.4y){D.4z=D.4y;D.4y=0}}}D.2o=0;D.3q(\"dh\")}}C D}});(B(){A df=B(E){if(z.1l){A ns=E.1c;if(!ns.8L.G&&z.1c(E,\"8L\")==\"dg\"){ns.8L=\"1\"}if(!ns.3n.G&&z.1c(E,\"3n\")==\"8K\"){ns.3n=\"8K\"}}};z.6C=B(F){if(V F.1d==\"1k\"){2m S 1O(\"z.6C jN an 1d 1Z\")}F.E=z.1D(F.E);A 3p=z.1x({6w:{}},F);A 8J=(3p.6w.2W={});8J.1w=(V 3p.1w==\"1k\")?B(){C 2V(z.1c(3p.E,\"2W\"))}:3p.1w;8J.1d=3p.1d;A 2U=z.6y(3p);z.2c(2U,\"6x\",L,B(){df(3p.E)});C 2U};z.8I=B(F){C z.6C(z.1x({1d:1},F))};z.8H=B(F){C z.6C(z.1x({1d:0},F))};if(z.6B&&!z.3o){z.8E=B(n){C 2k(\"0.5\")+((2Y.da((n+2k(\"1.5\"))*2Y.d9))/2)}}I{z.8E=B(n){C 0.5+((2Y.da((n+1.5)*2Y.d9))/2)}}A d4=B(6A){D.8G=6A;R(A p in 6A){A 1a=6A[p];if(1a.1w 1N z.1J){1a.d7=S z.1J()}}D.4x=B(r){A J={};R(A p in D.8G){A 1a=D.8G[p];A 6z=L;if(1a.1w 1N z.1J){6z=z.d8(1a.1w,1a.1d,r,1a.d7).8F()}I{if(!z.2l(1a.1w)){6z=((1a.1d-1a.1w)*r)+1a.1w+(p!=\"2W\"?1a.jM||\"px\":\"\")}}J[p]=6z}C J}};z.6y=B(F){F.E=z.1D(F.E);if(!F.5a){F.5a=z.8E}A 2U=S z.d6(F);z.2c(2U,\"6x\",2U,B(){A pm={};R(A p in D.6w){A 1a=pm[p]=z.1x({},D.6w[p]);if(z.1Y(1a.1w)){1a.1w=1a.1w()}if(z.1Y(1a.1d)){1a.1d=1a.1d()}A d5=(p.1M().T(\"jL\")>=0);B 8C(E,p){4w(p){2X\"58\":C E.8D;2X\"3n\":C E.6v}A v=z.1c(E,p);C(p==\"2W\")?2V(v):2k(v)};if(V 1a.1d==\"1k\"){1a.1d=8C(D.E,p)}I{if(V 1a.1w==\"1k\"){1a.1w=8C(D.E,p)}}if(d5){1a.1w=S z.1J(1a.1w);1a.1d=S z.1J(1a.1d)}I{1a.1w=(p==\"2W\")?2V(1a.1w):2k(1a.1w)}}D.2C=S d4(pm)});z.2c(2U,\"8B\",2U,B(8A){R(A s in 8A){z.1c(D.E,s,8A[s])}});C 2U}})()}',62,1711,'|||||||||||||||||||||||||||||||||||dojo|var|function|return|this|node|args|length|evt|else|ret|true|null|obj|elem|dfd|arguments|arr|for|new|indexOf|false|typeof||_base|push|type||te|||apply|attr|||||prop|xhr|style|end|doc|match|uri|_hasResource|key|del|undefined|isIE|item|forEach|djConfig|name|document|query|while|_66|try|res|start|mixin|catch|console|split|root|prototype|byId|gcs|ioArgs|err|NodeList|_p|Color|debug|parentNode|toLowerCase|instanceof|Error|constructor|provide|isString|ta|255|val|_a|global|_69|isFunction|value||substring|join|map|tn||window||path|_343|_220|_listeners|connect|call|json|replace|left|_b|toString|128|parseFloat|isArray|throw||_percent|hitch|step|declare|charAt|nodeType|_3c3|nidx|slice|faux|fired|_c4|_7e|loc|curve|_active|url|_44c|responseText|str|_312|idx|tqp|isNaN|isOpera|_22d|callee|add|_18b|_f8|_e2|_41|anim|Number|opacity|case|Math|_paused|Deferred|lastIndexOf|||||||||shift|substr|string|_3e7|_3ce|break|_w|charCode|_listener|_d5|_c5|authority|_49|width|isSafari|_49e|fire|_timer|_47b|_465|eval|_in|_40c|_409|_362|_3d9|className|_3d5|_386|_37a|body|getComputedStyle|box|_221|keyCode|remove|_8d|_46|paused|status|not|_478|_461|form|splice|filter|concat|tret|childNodes|_38b|_367|_33d||||||||||_340|_348|keypress|appendChild|_toArray|Array|_2b0|_toPixelValue|ref|_fixEvent|_19f|_14c|_14a|_150|_141|declaredClass|_d4|_99|_Url|_83|scheme|_67|_3d|switch|getValue|_startRepeatCount|repeat|_startTime|_47e|cancel|tif|load|to|with|tf|getElementsByTagName|number|_34c|_342|extend|_1e3|_normalizeEventName|_14b|_14e|results|self|cbfn|_f9|_d8|_b2|src|_88|dav||baseUrl|fragment|_loadedModules|_44|_43|_loaders|mll|height||easing|play|setTimeout|Date|clearTimeout|hdr|content|code|errback|_464|addCallbacks|_450|fromJson|_413|_3fc|_3ee|max|_31e|cond|getAttribute|_3d4|obi|tagName|_360|_381|contains|firstChild|_368|_372|_320|place|_2fa|scrollTop|_299|scrollLeft|top|documentElement|_288|_287|_getBorderExtents|_23f|_23d|_239|_218|_216|_211|eles|target|keys|shiftKey|ctrlKey|event|192|iel|_1db|delete|_1cf||addEventListener|String|_1af|_157|array|_14d|continue|_14f|_137|_11f|_106|_findMethod|has|_delegate|_dc|_d3|loaded|_9a|_loadInit|_inFlightCount|getObject|tv|_4f|_postLoad|_2d|offsetWidth|properties|beforeBegin|animateProperty|_4ad|_4a6|isKhtml|_fade|100|headers|readyState|timeout|_469|_457|_44d|formToObject|_441|comment|_43d|_36f|_419|tp|_40a|_406|_407|_373|_403|_3e6|_31b|cbi|test|_3c7|nextSibling|last|_3a1|_38e|_365|_36b|ecn|_364|_363|_356|_35e|_35f|_34f|_34d|_349|trim|tci|_328|_32b|_31f|_31c|_anim|_300|_2ff|_2f5|_2e7|removeClass|addClass|func|_2c4|cls|_2a9|_2ae|_280|_27f|_getPadExtents|isMoz|none|_233|cssText|_214|_fixCallback|_synthesizeEvent|stopPropagation|preventDefault|_setKeyChar|_1e1|ieh|_1d7|_1be|colorFromArray|sanitize|bits|rgb|_156|_fire|_resback|_13d|partial|_13a|silentlyCancelled|_topics|_127|_f1|_f0|superclass|_ec|_e3|mct|setObject|_bf|_b3|object|require|_92|_khtmlTimer|location|XMLHTTP|locale|dua|_71|_modulePrefixes|_55|_loadModule|_51|_50|_4e|pop|_3f|_callLoaded|_unloaders|_loadNotifying|_loadedUrls|_27|_24|_1d|_5|_4b7|onAnimate|getStyle|offsetHeight|_defaultEasing|toCss|_properties|fadeOut|fadeIn|_49f|auto|zoom|_cycle|_endTime|valueOf|_494|duration|_492|DELETE|_ioAddQueryToUrl|putData|contentType|password|user|_isDocumentOk|application|||||_466||||||startTime|_xhrObj|_45f|handleAs|addBoth|error|text|objectToQuery|_44f|ActiveXObject|_443|_442|filtered|_43f|_43e|_437|file|tnl|_41c|_filterQueryResult|_zipIdx|_408|_402|evaluate|_3ed|_380|fHit|_361|_33b|_3da|_3ab|_3d6|RegExp|_327|_3cf|_3c9|child|innerHTML|first|tval|_391|class|pnc|_37e|_37c|_375|_366|_35c|_35a|_353|_33c|_336|_314|||_315|_oe|_307|_309|cloneNode|after|createElement||_2f8|_2ef|_2ee|unshift|coords|some|every||_2cb|script|_2c9|parent||a2p||_2c3|_2bd||abs|_getMarginBox|_2b3|_2a6|position|_2a7|_2ac|_2ab|_getIeDocumentElementOffset|getBoundingClientRect|ownerDocument|_2a3|clientWidth|_isBodyLtr|_fixIeBiDiScrollLeft|_bodyLtr|_29d|_getContentBox|_setBox|_getMarginExtents|_getPadBorderExtents|_usesBorderBox|boxModel|pcs|st|sl|_240|runtimeStyle|_dcm|BackCompat|compatMode|default|_21b|_d|html|_event_listener|handlers|PAGE_DOWN|PAGE_UP|RIGHT_ARROW|LEFT_ARROW|DOWN_ARROW|UP_ARROW|_preventDefault||_stopPropagation|returnValue||_trySetKeyCode|cancelBubble|currentTarget|106|_1ee|111||_1e8|_1e7|||se|srcElement|onkeydown||_1d0|_disconnect|lid|_1c0|_connect|_set|_195|_185|_183|_17d|_everyOrSome|_16b|_172|_15b|Function|_154|_escapeString|_140|chain|_check|canceller|_12d|_124|_11a|_10d|_107|inherited|_fa|_f2|_findMixin|_constructor|preamble|_de|clone|tmp|_c7|TMP|_be|_ba|_mixin|isBrowser|lang|firebug||param|modulePaths|_a7|_fireCallback|_a0|setContext||_9c|unloaded||||_96|_93|navigator|_90|_89||protocol|_84|_86|_XMLHTTP_PROGIDS|gears|google|setAttribute|_80|_77|cfg|_6f|_getModuleSymbols|_5a|_58|_53|_4d|_4c|_45|_40|_moduleHasPrefix|_loadUri|_28|_26|_21|_22|tests|doh|_20|_1f|_1c|version|_1b|_19|_getProp|_11|_4|_4a5|_4b3|_Animation|tempColor|blendColors|PI|sin|||||_49a|normal|onEnd||rate||curr|onStop|_497||_496|pct|onPause|onPlay|onBegin|delay||_491|_Line|_48b|wrapForm|PUT|_487|POST|GET|_476|_474|_472|_ioWatch|send|_471|setRequestHeader|open|callback|setInterval|_470|resHandle|_46f|ioCheck|_46e|validCheck|getTime|_ioCancelAll|addOnUnload|clearInterval|dojoType|now|canceled|_blockAsync|_45e|_45c|_459|_ioSetArgs|_contentHandlers|abort|_458|_456||||addErrback|_454|addCallback|_452|_44b|_44a|_449|preventCache|responseXML|Microsoft|JSON|usePlainJson|_431|toJson|_430|_42d|image|opt|ria|_421|_41b|_40b|_zip|_410|_40d|_357|sqf|_374|_3e5|_3df|_38f|clc|pred|parseInt|ntf|_3bf|_3bc|cnl|previousSibling|_3a9|_3a6|_39c|_399|_396|_392|__cachedIndex|__cachedLength|_376|iterateNext|_34a|_355|_354|_32c|_350|_34b|_33f|_33e|_33a|_338|_334|_332||_330|_32e||_322|_316|mousemove|mouseout|mouseover|_305|lastChild||_2f9||_2f2|_2f1|removeChild|_2ec|_2eb|_2ea|_2e6||_2e4|_2e2|_2d6|_2d5|_2d4|_2d3|_2d2|_2d1|_2cd|_2cc|scs|write|_2c8|hasClass|_2c0|_2bb|_2b5|_abs|_docScroll|offsetParent|offsetTop|offsetLeft|absolute|getBoxObjectFor|clientLeft|_setContentSize|_setMarginBox|_28d|_286|_285|_289|NaN|_281|border|_272|_26b|_260|_258|_253|_24c|_246|_23a|_getOpacity|_setOpacity|_238|td|tr|nodeName|FILTER|_22f|_22e|currentStyle|_22c|_22b|display|QuirksMode|unselectable|_217|isMozilla|getElementById|attributes|all|_ie_listener|_getIeDispatcher|_1fd|NUM_LOCK|SCROLL_LOCK|INSERT|END|HOME|PAUSE|F12|F11|F10|F9|F8|F7|F6|F5|F4|F3|F2|F1|63232|SHIFT_TAB|TAB|keyIdentifier|_1f3|stopEvent|_punctMap|222|219|186|onkeypress|_stealthKeyDown|_fixKeys|relatedTarget|_1e0|_1df|_stealthKeydown|_1d6|_1d5|_1d1|_1ca|_1c9|_1cb|_1c2|_1c1|_1c3|_1c4|_1bc|_1b3|_1b2|colorFromHex|colorFromRgb|named|colorFromString|mask|rgba|_19c|_197|_192|setColor|_180|_178|_177|_175|_174|_16d|_166|_164|_163|_162|_15c|_15d|_15e|index|__json__|toJsonIndentStr|_nextId|_12f|_12b|publish|_128|_126|_125|_122|_121|_123|_11c|_11b|_10c|_10b|_108|getDispatcher|argument|nom|_construct|_core|_makeCtor|_df|_db|deprecated|isObject|_cc||scope||_hitchArgs|_c2||pre|_c1|native|isDebug||registerModulePath|_a8||finally|||_a6|_a5|_a4|_a3|_a2|_a1|_9f|_9e|_9d|_9b|_98|_97|onbeforeunload|ipt|scr|complete|_95|userAgent|_modulesLoaded|initialized|_initFired|_8c|_8a|_getText|_87|ieForceActiveXXhr|Msxml2|isGears|_81|_gearsObject|googlegears|GearsFactory|isFF|_7d|Safari|_72|_name|_6c|ire|ore|_68|i18n|_5b|requireIf|_56|_52|loading|_4a|_loadPath|_47|_48|_global_omit_module_check|_getModulePrefix|_3c|_3a|_37|_30|Boolean|_loadUriAndCheck|_2e||cacheBust|_1e|_1a|_17|_16|_15|_14|_f|_10|_e|_9|_8|revision|flag|patch|minor|major|_6|color|units|needs|stopped|playing|stop|gotoPercent|pause|1000|implemented|yet|_48a|xhrDelete|rawXhrPut|xhrPut|postData|rawXhrPost|xhrPost|xhrGet|Type|Content|sync|response|http|bad|urlencoded|www|_watchInFlightError||exceeded|handle|action|getAttributeNode|loadXML|async|XMLDOM|prefixes|MSXML3|MSXML|MSXML2||xml|javascript|wasn|your|optional|message|off|turn|use|endpoints|issues|security|potential|avoid|mimetype|using|consider|please|decodeURIComponent|queryToObject|formToJson|formToQuery|encodeURIComponent|selected|option|multiple|checked|checkbox|radio|disabled|textarea|select|button|reset|submit|input|_3fb|hasAttribute|0n|even|odd|nth|_3b5|empty|_3b1|_3ad|htmlFor|_38a|under||exprssion|failure|ANY_TYPE|XPathResult|starts|keyup|keydown|mouseup|mousedown|blur|click|combine|span|addContent||adopt|orphan|_2de|_2dd|styles|_2da|_2d9|_2cf|_2ce|show|createPopup|toggleClass|scrollWidth|clientTop|ltr|direction|pageXOffset|pageYOffset|fixed|contentBox|marginBox|BUTTON|TABLE|_getBorderBox|clientHeight|visible|overflow|marginBottom|marginRight|marginTop|marginLeft|borderBottomWidth|borderBottomStyle|borderRightWidth|borderRightStyle|borderTopWidth|borderTopStyle|borderLeftWidth|borderLeftStyle|paddingBottom|paddingRight|paddingTop|paddingLeft|offset||min|padding||margin|Opacity|Alpha|alpha|filters|pixelLeft|medium|_22a|defaultView|before||insertBefore|KhtmlUserSelect|MozUserSelect|setSelectable|isDescendant|div|_destroyElement|BackgroundImageCache|execCommand|PageDown|PageUp|Right|Left|Down|Up|63289|63249|63248|PRINT_SCREEN|63302|63277|63276|63275|63273|63272|63250|63247|63246|63245|63244|63243|63242|63241|63240|63239|63238|63237|63236|63235|63234|63233|Enter|_1f9|which|_1f6|bubbledKeyCode|221|220||||191|190|189|188|187|toElement|fromElement|clientY|pageY||clientX|pageX|offsetY|||layerY|offsetX|layerX|parentWindow|_nop|_allow_leaks|145|144|126|F15|125|F14|124|F13|123|122|121|120|119|118|117|116|115|114|113|112|NUMPAD_DIVIDE|110|NUMPAD_PERIOD|109|NUMPAD_MINUS|108|NUMPAD_ENTER|107|NUMPAD_PLUS|NUMPAD_MULTIPLY|105|NUMPAD_9|104|NUMPAD_8|103|NUMPAD_7|102|NUMPAD_6|101|NUMPAD_5|NUMPAD_4||NUMPAD_3|NUMPAD_2|NUMPAD_1|NUMPAD_0||SELECT|RIGHT_WINDOW||LEFT_WINDOW||HELP|SPACE|ESCAPE|CAPS_LOCK|ALT|CTRL|SHIFT|ENTER|CLEAR|BACKSPACE|attachEvent|fixEvent|fromCharCode|keyChar|_1b9|removeEventListener|0x|round|toHex|toRgba|toRgb|aqua|teal|blue|navy|yellow|olive|lime|green|fuchsia|purple|red|maroon|white|gray|silver|black|boolean|called|already|Cancelled|connectPublisher|unsubscribe|subscribe|disconnect|_113|_112||_111|_110|||found|was||must|_|module|||required|likely|It|declaration|Mixin|separate|instead|property|initializer||pass|_c9|_bb|_b7|nfunction|isAlien|isFinite|isArrayLike|_firebug|withDoc|withGlobal|_writeIncludes|VML|behavior|addRule|createStyleSheet|vml|com|microsoft|schemas|urn|namespaces|onunload|onreadystatechange|defer|khtml|WebKit|DOMContentLoaded|enableMozDomContentLoaded|domcontentloaded|Unable|base|chrome|1223|304|300|200|available|XMLHttpRequest|_println|language|userLanguage|isQuirks|factory|mimeTypes|Factory|Gears|_7f|MSIE||Firefox|Gecko|Konqueror||Opera|appVersion|xd|browser|moduleUrl|port|host|hostenv|_requireLocalization|_5f|_5e|_5d|_5c|requireLocalization|requireAfterIf|_57|common|platformRequire|defined|symbol|_isXDomain|tried|Could|__package__|packageFileName|_42|useXDomain|flight|still|files|addOnLoad|failed|sourceURL|util|notice|without|change|subject|APIs|EXPERIMENTAL|experimental|removed|will|DEPRECATED|exists|10315|Rev|Mobile|Spidermonkey|Rhino||Browser|delayMozLoadingFix|preventBackButtonFix|libraryScriptUri|baseRelativePath|baseScriptUri|allowQueryConfig|warn|trace|timeEnd||time|profileEnd|profile|log|info|groupEnd|group|dirxml|dir|count|assert'.split('|'),0,{});\n\
+\n\
+\n\
+/*\n\
+\n\
+Prototype 1.5 rc0\n\
+ - Adapted from Ruby on Rails - http://dev.rubyonrails.org/browser/spinoffs/prototype/src\n\
+ - By Lunarmedia, 06 August, 2006\n\
+ - Available at (and packed with) JavascriptCompressor.com\n\
+\n\
+Please note this version is missing the selector.js component of the full Prototype library. \n\
+You can get the compressed version of selector at JavascriptCompressor.com\n\
+\n\
+*/\n\
+\n\
+var decompressedPrototype = function(p,a,c,k,e,d){e=function(c){return(c<a?\"\":e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--){d[e(c)]=k[c]||e(c)}k=[(function(e){return d[e]})];e=(function(){return'\\\\w+'});c=1};while(c--){if(k[c]){p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c])}}return p}('d T={4l:\\'1.5.8P\\',3E:\\'(?:<3G.*?>)((\\\\n|\\\\r|.)*?)(?:<\\\\/3G>)\\',2v:7(){},K:7(x){c x}};d 1b={17:7(){c 7(){6.1I.2n(6,N)}}};d 1e=z q();q.u=7(5d,O){G(d 1G 2M O){5d[1G]=O[1G]}c 5d};q.1U=7(U){1j{f(U==1v)c\\'1v\\';f(U==1L)c\\'1L\\';c U.1U?U.1U():U.2C()}1s(e){f(e 8R 9l)c\\'...\\';25 e}};7j.v.1d=7(){d 43=6,23=$A(N),U=23.8S();c 7(){c 43.2n(U,23.3s($A(N)))}};7j.v.8U=7(U){d 43=6;c 7(C){c 43.8V(U,C||1W.C)}};q.u(8Q.v,{8W:7(){d 4Z=6.2C(16);f(6<16)c\\'0\\'+4Z;c 4Z},5j:7(){c 6+1},8Y:7(o){$R(0,6,11).V(o);c 6}});d 6s={6j:7(){d 48;G(d i=0;i<N.t;i++){d 6L=N[i];1j{48=6L();1y}1s(e){}}c 48}};d 6Q=1b.17();6Q.v={1I:7(1a,1J){6.1a=1a;6.1J=1J;6.41=Y;6.2A()},2A:7(){5Z(6.2D.1d(6),6.1J*4z)},2D:7(){f(!6.41){1j{6.41=11;6.1a()}8Z{6.41=Y}}}};q.u(4b.v,{2T:7(1A,1z){d L=\\'\\',O=6,I;1z=N.90.52(1z);1H(O.t>0){f(I=O.I(1A)){L+=O.47(0,I.w);L+=(1z(I)||\\'\\').2C();O=O.47(I.w+I[0].t)}1D{L+=O,O=\\'\\'}}c L},92:7(1A,1z,3i){1z=6.2T.52(1z);3i=3i===1v?1:3i;c 6.2T(1A,7(I){f(--3i<0)c I[0];c 1z(I)})},93:7(1A,o){6.2T(1A,o);c 6},94:7(t,2S){t=t||30;2S=2S===1v?\\'...\\':2S;c 6.t>t?6.47(0,t-2S.t)+2S:6},9F:7(){c 6.2y(/^\\\\s+/,\\'\\').2y(/\\\\s+$/,\\'\\')},71:7(){c 6.2y(/<\\\\/?[^>]+>/7Y,\\'\\')},2Q:7(){c 6.2y(z 3O(T.3E,\\'5P\\'),\\'\\')},70:7(){d 6Y=z 3O(T.3E,\\'5P\\');d 5p=z 3O(T.3E,\\'98\\');c(6.I(6Y)||[]).1C(7(5o){c(5o.I(5p)||[\\'\\',\\'\\'])[1]})},3q:7(){c 6.70().1C(7(3G){c 4q(3G)})},9E:7(){d 1q=J.4Y(\\'1q\\');d 1Y=J.9D(6);1q.75(1Y);c 1q.3h},9c:7(){d 1q=J.4Y(\\'1q\\');1q.3h=6.71();c 1q.2z[0]?1q.2z[0].6q:\\'\\'},78:7(){d 7i=6.I(/^\\\\??(.*)$/)[1].3j(\\'&\\');c 7i.36({},7(5b,72){d 1i=72.3j(\\'=\\');5b[1i[0]]=1i[1];c 5b})},1Z:7(){c 6.3j(\\'\\')},3P:7(){d 2l=6.3j(\\'-\\');f(2l.t==1)c 2l[0];d 54=6.5g(\\'-\\')==0?2l[0].7e(0).3Y()+2l[0].7g(1):2l[0];G(d i=1,73=2l.t;i<73;i++){d s=2l[i];54+=s.7e(0).3Y()+s.7g(1)}c 54},1U:7(){c\"\\'\"+6.2y(/\\\\\\\\/g,\\'\\\\\\\\\\\\\\\\\\').2y(/\\'/g,\\'\\\\\\\\\\\\\\'\\')+\"\\'\"}});4b.v.2T.52=7(1z){f(2i 1z==\\'7\\')c 1z;d 2U=z 3n(1z);c 7(I){c 2U.7a(I)}};4b.v.9h=4b.v.78;d 3n=1b.17();3n.79=/(^|.|\\\\r|\\\\n)(#\\\\{(.*?)\\\\})/;3n.v={1I:7(2U,1A){6.2U=2U.2C();6.1A=1A||3n.79},7a:7(U){c 6.2U.2T(6.1A,7(I){d 53=I[1];f(53==\\'\\\\\\\\\\')c I[2];c 53+(U[I[3]]||\\'\\').2C()})}};d $1y=z q();d $49=z q();d 1p={V:7(o){d w=0;1j{6.2m(7(h){1j{o(h,w++)}1s(e){f(e!=$49)25 e}})}1s(e){f(e!=$1y)25 e}},9n:7(o){d L=11;6.V(7(h,w){L=L&&!!(o||T.K)(h,w);f(!L)25 $1y});c L},9o:7(o){d L=11;6.V(7(h,w){f(L=!!(o||T.K)(h,w))25 $1y});c L},3e:7(o){d P=[];6.V(7(h,w){P.W(o(h,w))});c P},7n:7(o){d L;6.V(7(h,w){f(o(h,w)){L=h;25 $1y}});c L},7o:7(o){d P=[];6.V(7(h,w){f(o(h,w))P.W(h)});c P},9p:7(1A,o){d P=[];6.V(7(h,w){d 7c=h.2C();f(7c.I(1A))P.W((o||T.K)(h,w))});c P},1M:7(U){d 51=Y;6.V(7(h){f(h==U){51=11;25 $1y}});c 51},36:7(45,o){6.V(7(h,w){45=o(45,h,w)});c 45},9q:7(1F){d 23=$A(N).47(1);c 6.3e(7(h){c h[1F].2n(h,23)})},9s:7(o){d L;6.V(7(h,w){h=(o||T.K)(h,w);f(L==1v||h>=L)L=h});c L},9u:7(o){d L;6.V(7(h,w){h=(o||T.K)(h,w);f(L==1v||h<L)L=h});c L},9v:7(o){d 50=[],58=[];6.V(7(h,w){((o||T.K)(h,w)?50:58).W(h)});c[50,58]},3r:7(1G){d P=[];6.V(7(h,w){P.W(h[1G])});c P},9x:7(o){d P=[];6.V(7(h,w){f(!o(h,w))P.W(h)});c P},9y:7(o){c 6.3e(7(h,w){c{h:h,59:o(h,w)}}).9z(7(18,3U){d a=18.59,b=3U.59;c a<b?-1:a>b?1:0}).3r(\\'h\\')},1Z:7(){c 6.3e(T.K)},9B:7(){d o=T.K,23=$A(N);f(2i 23.5e()==\\'7\\')o=23.9C();d 7l=[6].3s(23).1C($A);c 6.1C(7(h,w){c o(7l.3r(w))})},1U:7(){c\\'#<1p:\\'+6.1Z().1U()+\\'>\\'}};q.u(1p,{1C:1p.3e,5v:1p.7n,1k:1p.7o,8M:1p.1M,7p:1p.1Z});d $A=1E.7q=7(2R){f(!2R)c[];f(2R.1Z){c 2R.1Z()}1D{d P=[];G(d i=0;i<2R.t;i++)P.W(2R[i]);c P}};q.u(1E.v,1p);f(!1E.v.4d)1E.v.4d=1E.v.4m;q.u(1E.v,{2m:7(o){G(d i=0;i<6.t;i++)o(6[i])},5i:7(){6.t=0;c 6},7r:7(){c 6[0]},5e:7(){c 6[6.t-1]},7s:7(){c 6.1k(7(h){c h!=1v||h!=1L})},6J:7(){c 6.36([],7(6H,h){c 6H.3s(h&&h.5D==1E?h.6J():[h])})},5s:7(){d 4N=$A(N);c 6.1k(7(h){c!4N.1M(h)})},5g:7(U){G(d i=0;i<6.t;i++)f(6[i]==U)c i;c-1},4m:7(5h){c(5h!==Y?6:6.1Z()).4d()},1U:7(){c\\'[\\'+6.1C(q.1U).1N(\\', \\')+\\']\\'}});d 4h={2m:7(o){G(d 1O 2M 6){d h=6[1O];f(2i h==\\'7\\')49;d 1i=[1O,h];1i.1O=1O;1i.h=h;o(1i)}},7t:7(){c 6.3r(\\'1O\\')},4N:7(){c 6.3r(\\'h\\')},7u:7(2N){c $H(2N).36($H(6),7(4Q,1i){4Q[1i.1O]=1i.h;c 4Q})},7w:7(){c 6.1C(7(1i){c 1i.1C(4n).1N(\\'=\\')}).1N(\\'&\\')},1U:7(){c\\'#<4h:{\\'+6.1C(7(1i){c 1i.1C(q.1U).1N(\\': \\')}).1N(\\', \\')+\\'}>\\'}};7 $H(U){d 2N=q.u({},U||{});q.u(2N,1p);q.u(2N,4h);c 2N};3L=1b.17();q.u(3L.v,1p);q.u(3L.v,{1I:7(22,2x,2H){6.22=22;6.2x=2x;6.2H=2H},2m:7(o){d h=6.22;2q{o(h);h=h.5j()}1H(6.1M(h))},1M:7(h){f(h<6.22)c Y;f(6.2H)c h<6.2x;c h<=6.2x}});d $R=7(22,2x,2H){c z 3L(22,2x,2H)};d M={4w:7(){c 6s.6j(7(){c z 5C()},7(){c z 5n(\\'7y.6d\\')},7(){c z 5n(\\'7z.6d\\')})||Y},4s:0};M.2W={3b:[],2m:7(o){6.3b.2m(o)},69:7(4F){f(!6.1M(4F))6.3b.W(4F)},7A:7(5t){6.3b=6.3b.5s(5t)},3y:7(1a,26,E,2Z){6.V(7(3o){f(3o[1a]&&2i 3o[1a]==\\'7\\'){1j{3o[1a].2n(3o,[26,E,2Z])}1s(e){}}})}};q.u(M.2W,1p);M.2W.69({5G:7(){M.4s++},1B:7(){M.4s--}});M.44=7(){};M.44.v={4a:7(m){6.m={1F:\\'4j\\',4p:11,5H:\\'5E/x-86-Q-7C\\',28:\\'\\'};q.u(6.m,m||{})},3l:7(){c 6.E.32==1v||6.E.32==0||(6.E.32>=84&&6.E.32<7E)},7G:7(){c!6.3l()}};M.3t=1b.17();M.3t.5L=[\\'7H\\',\\'80\\',\\'7I\\',\\'7J\\',\\'4t\\'];M.3t.v=q.u(z M.44(),{1I:7(1l,m){6.E=M.4w();6.4a(m);6.26(1l)},26:7(1l){d 28=6.m.28||\\'\\';f(28.t>0)28+=\\'&7K=\\';1j{6.1l=1l;f(6.m.1F==\\'7L\\'&&28.t>0)6.1l+=(6.1l.I(/\\\\?/)?\\'&\\':\\'?\\')+28;M.2W.3y(\\'5G\\',6,6.E);6.E.7N(6.m.1F,6.1l,6.m.4p);f(6.m.4p){6.E.5T=6.5J.1d(6);2Y((7(){6.4r(1)}).1d(6),10)}6.5A();d 1c=6.m.5V?6.m.5V:28;6.E.7O(6.m.1F==\\'4j\\'?1c:1L)}1s(e){6.3p(e)}},5A:7(){d 1P=[\\'X-7P-7Q\\',\\'5C\\',\\'X-T-4l\\',T.4l,\\'7R\\',\\'1Y/7m, 1Y/2e, 5E/5F, 1Y/5F, */*\\'];f(6.m.1F==\\'4j\\'){1P.W(\\'5Q-2g\\',6.m.5H);f(6.E.7S)1P.W(\\'7T\\',\\'7U\\')}f(6.m.1P)1P.W.2n(1P,6.m.1P);G(d i=0;i<1P.t;i+=2)6.E.7V(1P[i],1P[i+1])},5J:7(){d 2F=6.E.2F;f(2F!=1)6.4r(6.E.2F)},4A:7(B){1j{c 6.E.7W(B)}1s(e){}},5M:7(){1j{c 4q(\\'(\\'+6.4A(\\'X-7X\\')+\\')\\')}1s(e){}},5R:7(){1j{c 4q(6.E.3F)}1s(e){6.3p(e)}},4r:7(2F){d C=M.3t.5L[2F];d E=6.E,2Z=6.5M();f(C==\\'4t\\'){1j{(6.m[\\'2I\\'+6.E.32]||6.m[\\'2I\\'+(6.3l()?\\'81\\':\\'82\\')]||T.2v)(E,2Z)}1s(e){6.3p(e)}f((6.4A(\\'5Q-2g\\')||\\'\\').I(/^1Y\\\\/7m/i))6.5R()}1j{(6.m[\\'2I\\'+C]||T.2v)(E,2Z);M.2W.3y(\\'2I\\'+C,6,E,2Z)}1s(e){6.3p(e)}f(C==\\'4t\\')6.E.5T=T.2v},3p:7(57){(6.m.5W||T.2v)(6,57);M.2W.3y(\\'5W\\',6,57)}});M.4C=1b.17();q.u(q.u(M.4C.v,M.3t.v),{1I:7(1w,1l,m){6.4x={3m:1w.3m?$(1w.3m):$(1w),3z:1w.3z?$(1w.3z):(1w.3m?1L:$(1w))};6.E=M.4w();6.4a(m);d 1B=6.m.1B||T.2v;6.m.1B=(7(E,U){6.5Y();1B(E,U)}).1d(6);6.26(1l)},5Y:7(){d 3A=6.3l()?6.4x.3m:6.4x.3z;d 3k=6.E.3F;f(!6.m.3q)3k=3k.2Q();f(3A){f(6.m.60){z 6.m.60(3A,3k)}1D{k.6h(3A,3k)}}f(6.3l()){f(6.1B)2Y(6.1B.1d(6),10)}}});M.61=1b.17();M.61.v=q.u(z M.44(),{1I:7(1w,1l,m){6.4a(m);6.1B=6.m.1B;6.1J=(6.m.1J||2);6.2s=(6.m.2s||1);6.4B={};6.1w=1w;6.1l=1l;6.22()},22:7(){6.m.1B=6.63.1d(6);6.2D()},7b:7(){6.4B.1B=1v;89(6.65);(6.1B||T.2v).2n(6,N)},63:7(26){f(6.m.2s){6.2s=(26.3F==6.64?6.2s*6.m.2s:1);6.64=26.3F}6.65=2Y(6.2D.1d(6),6.2s*6.1J*4z)},2D:7(){6.4B=z M.4C(6.1w,6.1l,6.m)}});7 $(){d P=[],4;G(d i=0;i<N.t;i++){4=N[i];f(2i 4==\\'8c\\')4=J.8d(4);P.W(k.u(4))}c P.t<2?P[0]:P};J.8f=7(1f,6a){d 6b=($(6a)||J.1c).4D(\\'*\\');c $A(6b).36([],7(12,4E){f(4E.1f.I(z 3O(\"(^|\\\\\\\\s)\"+1f+\"(\\\\\\\\s|$)\")))12.W(k.u(4E));c 12})};f(!1W.k)d k=z q();k.u=7(4){f(!4)c;f(4X)c 4;f(!4.6e&&4.1h&&4!=1W){d 2a=k.3d,2r=k.u.2r;G(d 1G 2M 2a){d h=2a[1G];f(2i h==\\'7\\')4[1G]=2r.4W(h)}}4.6e=11;c 4};k.u.2r={4W:7(h){c 6[h]=6[h]||7(){c h.2n(1L,[6].3s($A(N)))}}};k.3d={4U:7(4){c $(4).l.2B!=\\'3Q\\'},6N:7(){G(d i=0;i<N.t;i++){d 4=$(N[i]);k[k.4U(4)?\\'6f\\':\\'6w\\'](4)}},6f:7(){G(d i=0;i<N.t;i++){d 4=$(N[i]);4.l.2B=\\'3Q\\'}},6w:7(){G(d i=0;i<N.t;i++){d 4=$(N[i]);4.l.2B=\\'\\'}},42:7(4){4=$(4);4.1X.8h(4)},6h:7(4,2e){$(4).3h=2e.2Q();2Y(7(){2e.3q()},10)},2y:7(4,2e){4=$(4);f(4.6k){4.6k=2e.2Q()}1D{d 1K=4.6R.6S();1K.56(4);4.1X.8i(1K.6T(2e.2Q()),4)}2Y(7(){2e.3q()},10)},8k:7(4){4=$(4);c 4.2k},3K:7(4){c z k.3S(4)},8l:7(4,1f){f(!(4=$(4)))c;c k.3K(4).1M(1f)},8m:7(4,1f){f(!(4=$(4)))c;c k.3K(4).7k(1f)},8n:7(4,1f){f(!(4=$(4)))c;c k.3K(4).42(1f)},8p:7(4){4=$(4);G(d i=0;i<4.2z.t;i++){d 3M=4.2z[i];f(3M.8q==3&&!/\\\\S/.4v(3M.6q))k.42(3M)}},8r:7(4){c $(4).3h.I(/^\\\\s*$/)},8s:7(4,3I){4=$(4),3I=$(3I);1H(4=4.1X)f(4==3I)c 11;c Y},6t:7(4){4=$(4);d x=4.x?4.x:4.2f,y=4.y?4.y:4.29;1W.6t(x,y)},1R:7(4,l){4=$(4);d h=4.l[l.3P()];f(!h){f(J.4J&&J.4J.6v){d 4L=J.4J.6v(4,1L);h=4L?4L.8v(l):1L}1D f(4.6x){h=4.6x[l.3P()]}}f(1W.6E&&[\\'18\\',\\'1n\\',\\'3U\\',\\'6G\\'].1M(l))f(k.1R(4,\\'14\\')==\\'4G\\')h=\\'6y\\';c h==\\'6y\\'?1L:h},8x:7(4,l){4=$(4);G(d B 2M l)4.l[B.3P()]=l[B]},8y:7(4){4=$(4);f(k.1R(4,\\'2B\\')!=\\'3Q\\')c{21:4.2p,24:4.2k};d 20=4.l;d 6B=20.4O;d 6A=20.14;20.4O=\\'31\\';20.14=\\'2o\\';20.2B=\\'\\';d 6C=4.6m;d 6D=4.6p;20.2B=\\'3Q\\';20.14=6A;20.4O=6B;c{21:6C,24:6D}},8z:7(4){4=$(4);d 4R=k.1R(4,\\'14\\');f(4R==\\'4G\\'||!4R){4.4T=11;4.l.14=\\'3T\\';f(1W.6E){4.l.1n=0;4.l.18=0}}},8A:7(4){4=$(4);f(4.4T){4.4T=1v;4.l.14=4.l.1n=4.l.18=4.l.6G=4.l.3U=\\'\\'}},8B:7(4){4=$(4);f(4.3c)c;4.3c=4.l.3V;f((k.1R(4,\\'3V\\')||\\'4U\\')!=\\'31\\')4.l.3V=\\'31\\'},8D:7(4){4=$(4);f(4.3c)c;4.l.3V=4.3c;4.3c=1v}};q.u(k,k.3d);d 4X=Y;f(!3W&&/3x|3w|3u/.4v(33.62)){d 3W={}};k.6K=7(2a){q.u(k.3d,2a||{});f(2i 3W!=\\'1v\\'){d 2a=k.3d,2r=k.u.2r;G(d 1G 2M 2a){d h=2a[1G];f(2i h==\\'7\\')3W.v[1G]=2r.4W(h)}4X=11}};k.6K();d 6M=z q();6M.2B=k.6N;1e.1g=7(3f){6.3f=3f};1e.1g.v={1I:7(4,2t){6.4=$(4);6.2t=2t.2Q();f(6.3f&&6.4.6O){1j{6.4.6O(6.3f,6.2t)}1s(e){d 1h=6.4.1h.2w();f(1h==\\'4V\\'||1h==\\'8N\\'){6.2X(6.6U())}1D{25 e}}}1D{6.1K=6.4.6R.6S();f(6.2V)6.2V();6.2X([6.1K.6T(6.2t)])}2Y(7(){2t.3q()},10)},6U:7(){d 1q=J.4Y(\\'1q\\');1q.3h=\\'<6V><4V>\\'+6.2t+\\'</4V></6V>\\';c $A(1q.2z[0].2z[0].2z)}};d 1g=z q();1g.6W=1b.17();1g.6W.v=q.u(z 1e.1g(\\'96\\'),{2V:7(){6.1K.97(6.4)},2X:7(2h){2h.V((7(2j){6.4.1X.55(2j,6.4)}).1d(6))}});1g.5m=1b.17();1g.5m.v=q.u(z 1e.1g(\\'99\\'),{2V:7(){6.1K.56(6.4);6.1K.74(11)},2X:7(2h){2h.4m(Y).V((7(2j){6.4.55(2j,6.4.9a)}).1d(6))}});1g.7h=1b.17();1g.7h.v=q.u(z 1e.1g(\\'9d\\'),{2V:7(){6.1K.56(6.4);6.1K.74(6.4)},2X:7(2h){2h.V((7(2j){6.4.75(2j)}).1d(6))}});1g.76=1b.17();1g.76.v=q.u(z 1e.1g(\\'9i\\'),{2V:7(){6.1K.9m(6.4)},2X:7(2h){2h.V((7(2j){6.4.1X.55(2j,6.4.9t)}).1d(6))}});k.3S=1b.17();k.3S.v={1I:7(4){6.4=$(4)},2m:7(o){6.4.1f.3j(/\\\\s+/).1k(7(B){c B.t>0}).2m(o)},5c:7(1f){6.4.1f=1f},7k:7(5a){f(6.1M(5a))c;6.5c(6.1Z().3s(5a).1N(\\' \\'))},42:7(4c){f(!6.1M(4c))c;6.5c(6.1k(7(1f){c 1f!=4c}).1N(\\' \\'))},2C:7(){c 6.1Z().1N(\\' \\')}};q.u(k.3S.v,1p);d 5I={5i:7(){G(d i=0;i<N.t;i++)$(N[i]).h=\\'\\'},4f:7(4){$(4).4f()},7v:7(){G(d i=0;i<N.t;i++)f($(N[i]).h==\\'\\')c Y;c 11},1k:7(4){$(4).1k()},5y:7(4){4=$(4);4.4f();f(4.1k)4.1k()}};d D={3a:7(Q){d 12=D.2L($(Q));d 4I=z 1E();G(d i=0;i<12.t;i++){d 4g=D.k.3a(12[i]);f(4g)4I.W(4g)}c 4I.1N(\\'&\\')},2L:7(Q){Q=$(Q);d 12=z 1E();G(d 1h 2M D.k.2E){d 4H=Q.4D(1h);G(d j=0;j<4H.t;j++)12.W(4H[j])}c 12},7x:7(Q,3N,B){Q=$(Q);d 3H=Q.4D(\\'2u\\');f(!3N&&!B)c 3H;d 4y=z 1E();G(d i=0;i<3H.t;i++){d 2u=3H[i];f((3N&&2u.2g!=3N)||(B&&2u.B!=B))49;4y.W(2u)}c 4y},7B:7(Q){d 12=D.2L(Q);G(d i=0;i<12.t;i++){d 4=12[i];4.7D();4.4o=\\'11\\'}},7F:7(Q){d 12=D.2L(Q);G(d i=0;i<12.t;i++){d 4=12[i];4.4o=\\'\\'}},5z:7(Q){c D.2L(Q).5v(7(4){c 4.2g!=\\'31\\'&&!4.4o&&[\\'2u\\',\\'1k\\',\\'3J\\'].1M(4.1h.2w())})},7M:7(Q){5I.5y(D.5z(Q))},5w:7(Q){$(Q).5w()}};D.k={3a:7(4){4=$(4);d 1F=4.1h.2w();d 1S=D.k.2E[1F](4);f(1S){d 1O=4n(1S[0]);f(1O.t==0)c;f(1S[1].5D!=1E)1S[1]=[1S[1]];c 1S[1].1C(7(h){c 1O+\\'=\\'+4n(h)}).1N(\\'&\\')}},1x:7(4){4=$(4);d 1F=4.1h.2w();d 1S=D.k.2E[1F](4);f(1S)c 1S[1]}};D.k.2E={2u:7(4){6c(4.2g.2w()){1r\\'7Z\\':1r\\'31\\':1r\\'6l\\':1r\\'1Y\\':c D.k.2E.3J(4);1r\\'6g\\':1r\\'6i\\':c D.k.2E.5O(4)}c Y},5O:7(4){f(4.83)c[4.B,4.h]},3J:7(4){c[4.B,4.h]},1k:7(4){c D.k.2E[4.2g==\\'1k-6n\\'?\\'5S\\':\\'5X\\'](4)},5S:7(4){d h=\\'\\',2b,w=4.85;f(w>=0){2b=4.m[w];h=2b.h||2b.1Y}c[4.B,h]},5X:7(4){d h=[];G(d i=0;i<4.t;i++){d 2b=4.m[i];f(2b.87)h.W(2b.h||2b.1Y)}c[4.B,h]}};d $F=D.k.1x;1e.3D=7(){};1e.3D.v={1I:7(4,1J,1a){6.1J=1J;6.4=$(4);6.1a=1a;6.2K=6.1x();6.2A()},2A:7(){5Z(6.2D.1d(6),6.1J*4z)},2D:7(){d h=6.1x();f(6.2K!=h){6.1a(6.4,h);6.2K=h}}};D.k.3C=1b.17();D.k.3C.v=q.u(z 1e.3D(),{1x:7(){c D.k.1x(6.4)}});D.3C=1b.17();D.3C.v=q.u(z 1e.3D(),{1x:7(){c D.3a(6.4)}});1e.2c=7(){};1e.2c.v={1I:7(4,1a){6.4=$(4);6.1a=1a;6.2K=6.1x();f(6.4.1h.2w()==\\'Q\\')6.67();1D 6.2A(6.4)},4K:7(){d h=6.1x();f(6.2K!=h){6.1a(6.4,h);6.2K=h}},67:7(){d 12=D.2L(6.4);G(d i=0;i<12.t;i++)6.2A(12[i])},2A:7(4){f(4.2g){6c(4.2g.2w()){1r\\'6g\\':1r\\'6i\\':1o.3B(4,\\'8j\\',6.4K.1d(6));1y;1r\\'6l\\':1r\\'1Y\\':1r\\'3J\\':1r\\'1k-6n\\':1r\\'1k-8t\\':1o.3B(4,\\'8u\\',6.4K.1d(6));1y}}}};D.k.2c=1b.17();D.k.2c.v=q.u(z 1e.2c(),{1x:7(){c D.k.1x(6.4)}});D.2c=1b.17();D.2c.v=q.u(z 1e.2c(),{1x:7(){c D.3a(6.4)}});f(!1W.1o){d 1o=z q()}q.u(1o,{8C:8,8F:9,8H:13,8I:27,8J:37,8L:38,8O:39,8T:40,8X:46,4:7(C){c C.Z||C.91},95:7(C){c(((C.6X)&&(C.6X==1))||((C.6Z)&&(C.6Z==1)))},9b:7(C){c C.9e||(C.9f+(J.3R.2G||J.1c.2G))},9g:7(C){c C.9j||(C.9k+(J.3R.2O||J.1c.2O))},7b:7(C){f(C.7d){C.7d();C.9r()}1D{C.48=Y;C.9w=11}},9A:7(C,1h){d 4=1o.4(C);1H(4.1X&&(!4.1h||(4.1h.3Y()!=1h.3Y())))4=4.1X;c 4},1T:Y,5u:7(4,B,1V,1u){f(!6.1T)6.1T=[];f(4.5f){6.1T.W([4,B,1V,1u]);4.5f(B,1V,1u)}1D f(4.4i){6.1T.W([4,B,1V,1u]);4.4i(\\'2I\\'+B,1V)}},66:7(){f(!1o.1T)c;G(d i=0;i<1o.1T.t;i++){1o.5N.2n(6,1o.1T[i]);1o.1T[i][0]=1L}1o.1T=Y},3B:7(4,B,1V,1u){d 4=$(4);1u=1u||Y;f(B==\\'5U\\'&&(33.4u.I(/3x|3w|3u/)||4.4i))B=\\'5K\\';6.5u(4,B,1V,1u)},5N:7(4,B,1V,1u){d 4=$(4);1u=1u||Y;f(B==\\'5U\\'&&(33.4u.I(/3x|3w|3u/)||4.4k))B=\\'5K\\';f(4.5x){4.5x(B,1V,1u)}1D f(4.4k){1j{4.4k(\\'2I\\'+B,1V)}1s(e){}}}});f(33.4u.I(/\\\\88\\\\b/))1o.3B(1W,\\'8a\\',1o.66,Y);d 2d={6o:Y,4P:7(){6.6z=1W.8e||J.3R.2G||J.1c.2G||0;6.6F=1W.8g||J.3R.2O||J.1c.2O||0},6u:7(4){d 19=0,15=0;2q{19+=4.2O||0;15+=4.2G||0;4=4.1X}1H(4);c[15,19]},35:7(4){d 19=0,15=0;2q{19+=4.29||0;15+=4.2f||0;4=4.1Q}1H(4);c[15,19]},68:7(4){d 19=0,15=0;2q{19+=4.29||0;15+=4.2f||0;4=4.1Q;f(4){p=k.1R(4,\\'14\\');f(p==\\'3T\\'||p==\\'2o\\')1y}}1H(4);c[15,19]},1Q:7(4){f(4.1Q)c 4.1Q;f(4==J.1c)c 4;1H((4=4.1X)&&4!=J.1c)f(k.1R(4,\\'14\\')!=\\'4G\\')c 4;c J.1c},8o:7(4,x,y){f(6.6o)c 6.6r(4,x,y);6.3g=x;6.34=y;6.1t=6.35(4);c(y>=6.1t[1]&&y<6.1t[1]+4.2k&&x>=6.1t[0]&&x<6.1t[0]+4.2p)},6r:7(4,x,y){d 4S=6.6u(4);6.3g=x+4S[0]-6.6z;6.34=y+4S[1]-6.6F;6.1t=6.35(4);c(6.34>=6.1t[1]&&6.34<6.1t[1]+4.2k&&6.3g>=6.1t[0]&&6.3g<6.1t[0]+4.2p)},8E:7(3Z,4){f(!3Z)c 0;f(3Z==\\'8G\\')c((6.1t[1]+4.2k)-6.34)/4.2k;f(3Z==\\'8K\\')c((6.1t[0]+4.2p)-6.3g)/4.2p},77:7(O,Z){O=$(O);Z=$(Z);Z.l.14=\\'2o\\';d 2P=6.35(O);Z.l.1n=2P[1]+\\'1m\\';Z.l.18=2P[0]+\\'1m\\';Z.l.21=O.2p+\\'1m\\';Z.l.24=O.2k+\\'1m\\'},4e:7(4M){d 19=0,15=0;d 4=4M;2q{19+=4.29||0;15+=4.2f||0;f(4.1Q==J.1c)f(k.1R(4,\\'14\\')==\\'2o\\')1y}1H(4=4.1Q);4=4M;2q{19-=4.2O||0;15-=4.2G||0}1H(4=4.1X);c[15,19]},77:7(O,Z){d m=q.u({5l:11,5r:11,5B:11,5q:11,29:0,2f:0},N[2]||{});O=$(O);d p=2d.4e(O);Z=$(Z);d 2J=[0,0];d 3v=1L;f(k.1R(Z,\\'14\\')==\\'2o\\'){3v=2d.1Q(Z);2J=2d.4e(3v)}f(3v==J.1c){2J[0]-=J.1c.2f;2J[1]-=J.1c.29}f(m.5l)Z.l.18=(p[0]-2J[0]+m.2f)+\\'1m\\';f(m.5r)Z.l.1n=(p[1]-2J[1]+m.29)+\\'1m\\';f(m.5B)Z.l.21=O.2p+\\'1m\\';f(m.5q)Z.l.24=O.2k+\\'1m\\'},8b:7(4){4=$(4);f(4.l.14==\\'2o\\')c;2d.4P();d 2P=2d.68(4);d 1n=2P[1];d 18=2P[0];d 21=4.6m;d 24=4.6p;4.6P=18-3X(4.l.18||0);4.6I=1n-3X(4.l.1n||0);4.5k=4.l.21;4.7f=4.l.24;4.l.14=\\'2o\\';4.l.1n=1n+\\'1m\\';4.l.18=18+\\'1m\\';4.l.21=21+\\'1m\\';4.l.24=24+\\'1m\\'},8w:7(4){4=$(4);f(4.l.14==\\'3T\\')c;2d.4P();4.l.14=\\'3T\\';d 1n=3X(4.l.1n||0)-(4.6I||0);d 18=3X(4.l.18||0)-(4.6P||0);4.l.1n=1n+\\'1m\\';4.l.18=18+\\'1m\\';4.l.24=4.7f;4.l.21=4.5k}};f(/3x|3w|3u/.4v(33.62)){2d.35=7(4){d 19=0,15=0;2q{19+=4.29||0;15+=4.2f||0;f(4.1Q==J.1c)f(k.1R(4,\\'14\\')==\\'2o\\')1y;4=4.1Q}1H(4);c[15,19]}};',62,600,'||||element||this|function|||||return|var||if||value|||Element|style|options||iterator||Object|||length|extend|prototype|index|||new||name|event|Form|transport||for||match|document||result|Ajax|arguments|source|results|form|||Prototype|object|each|push||false|target||true|elements||position|valueL||create|left|valueT|callback|Class|body|bind|Abstract|className|Insertion|tagName|pair|try|select|url|px|top|Event|Enumerable|div|case|catch|offset|useCapture|undefined|container|getValue|break|replacement|pattern|onComplete|map|else|Array|method|property|while|initialize|frequency|range|null|include|join|key|requestHeaders|offsetParent|getStyle|parameter|observers|inspect|observer|window|parentNode|text|toArray|els|width|start|args|height|throw|request||parameters|offsetTop|methods|opt|EventObserver|Position|html|offsetLeft|type|fragments|typeof|fragment|offsetHeight|oStringList|_each|apply|absolute|offsetWidth|do|cache|decay|content|input|emptyFunction|toLowerCase|end|replace|childNodes|registerCallback|display|toString|onTimerEvent|Serializers|readyState|scrollLeft|exclusive|on|delta|lastValue|getElements|in|hash|scrollTop|offsets|stripScripts|iterable|truncation|gsub|template|initializeRange|Responders|insertContent|setTimeout|json||hidden|status|navigator|ycomp|cumulativeOffset|inject||||serialize|responders|_overflow|Methods|collect|adjacency|xcomp|innerHTML|count|split|response|responseIsSuccess|success|Template|responder|dispatchException|evalScripts|pluck|concat|Request|KHTML|parent|Safari|Konqueror|dispatch|failure|receiver|observe|Observer|TimedObserver|ScriptFragment|responseText|script|inputs|ancestor|textarea|classNames|ObjectRange|node|typeName|RegExp|camelize|none|documentElement|ClassNames|relative|right|overflow|HTMLElement|parseFloat|toUpperCase|mode||currentlyExecuting|remove|__method|Base|memo||slice|returnValue|continue|setOptions|String|classNameToRemove|_reverse|page|focus|queryComponent|Hash|attachEvent|post|detachEvent|Version|reverse|encodeURIComponent|disabled|asynchronous|eval|respondToReadyState|activeRequestCount|Complete|appVersion|test|getTransport|containers|matchingInputs|1000|header|updater|Updater|getElementsByTagName|child|responderToAdd|static|tagElements|queryComponents|defaultView|onElementEvent|css|forElement|values|visibility|prepare|mergedHash|pos|offsetcache|_madePositioned|visible|tbody|findOrStore|_nativeExtensions|createElement|digits|trues|found|prepareReplacement|before|camelizedString|insertBefore|selectNodeContents|exception|falses|criteria|classNameToAdd|params|set|destination|last|addEventListener|indexOf|inline|clear|succ|_originalWidth|setLeft|Top|ActiveXObject|scriptTag|matchOne|setHeight|setTop|without|responderToRemove|_observeAndCache|find|reset|removeEventListener|activate|findFirstElement|setRequestHeaders|setWidth|XMLHttpRequest|constructor|application|xml|onCreate|contentType|Field|onStateChange|keydown|Events|evalJSON|stopObserving|inputSelector|img|Content|evalResponse|selectOne|onreadystatechange|keypress|postBody|onException|selectMany|updateContent|setInterval|insertion|PeriodicalUpdater|userAgent|updateComplete|lastText|timer|unloadCache|registerFormCallbacks|positionedOffset|register|parentElement|children|switch|XMLHTTP|_extended|hide|checkbox|update|radio|these|outerHTML|password|clientWidth|one|includeScrollOffsets|clientHeight|nodeValue|withinIncludingScrolloffsets|Try|scrollTo|realOffset|getComputedStyle|show|currentStyle|auto|deltaX|originalPosition|originalVisibility|originalWidth|originalHeight|opera|deltaY|bottom|array|_originalTop|flatten|addMethods|lambda|Toggle|toggle|insertAdjacentHTML|_originalLeft|PeriodicalExecuter|ownerDocument|createRange|createContextualFragment|contentFromAnonymousTable|table|Before|which|matchAll|button|extractScripts|stripTags|pairString|len|collapse|appendChild|After|clone|toQueryParams|Pattern|evaluate|stop|stringValue|preventDefault|charAt|_originalHeight|substring|Bottom|pairs|Function|add|collections|javascript|detect|findAll|entries|from|first|compact|keys|merge|present|toQueryString|getInputs|Msxml2|Microsoft|unregister|disable|urlencoded|blur|300|enable|responseIsFailure|Uninitialized|Loaded|Interactive|_|get|focusFirstElement|open|send|Requested|With|Accept|overrideMimeType|Connection|close|setRequestHeader|getResponseHeader|JSON|gi|submit|Loading|Success|Failure|checked|200|selectedIndex|www|selected|bMSIE|clearTimeout|unload|absolutize|string|getElementById|pageXOffset|getElementsByClassName|pageYOffset|removeChild|replaceChild|click|getHeight|hasClassName|addClassName|removeClassName|within|cleanWhitespace|nodeType|empty|childOf|multiple|change|getPropertyValue|relativize|setStyle|getDimensions|makePositioned|undoPositioned|makeClipping|KEY_BACKSPACE|undoClipping|overlap|KEY_TAB|vertical|KEY_RETURN|KEY_ESC|KEY_LEFT|horizontal|KEY_UP|member|tr|KEY_RIGHT|0_RC_0|Number|instanceof|shift|KEY_DOWN|bindAsEventListener|call|toColorPart|KEY_DELETE|times|finally|callee|srcElement|sub|scan|truncate|isLeftClick|beforeBegin|setStartBefore|im|afterBegin|firstChild|pointerX|unescapeHTML|beforeEnd|pageX|clientX|pointerY|parseQuery|afterEnd|pageY|clientY|RangeError|setStartAfter|all|any|grep|invoke|stopPropagation|max|nextSibling|min|partition|cancelBubble|reject|sortBy|sort|findElement|zip|pop|createTextNode|escapeHTML|strip'.split('|'),0,{})\n\
+\n\
+}\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider string-validate-input</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>string-validate-input</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+letters = new Array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\
+numbers = new Array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26);\n\
+colors  = new Array(\"FF\",\"CC\",\"99\",\"66\",\"33\",\"00\");\n\
+\n\
+var endResult;\n\
+\n\
+function doTest()\n\
+{\n\
+   endResult = \"\";\n\
+\n\
+   // make up email address\n\
+   for (var k=0;k<4000;k++)\n\
+   {\n\
+      name = makeName(6);\n\
+      (k%2)?email=name+\"@mac.com\":email=name+\"(at)mac.com\";\n\
+\n\
+      // validate the email address\n\
+      var pattern = /^[a-zA-Z0-9\\-\\._]+@[a-zA-Z0-9\\-_]+(\\.?[a-zA-Z0-9\\-_]*)\\.[a-zA-Z]{2,3}$/;\n\
+\n\
+      if(pattern.test(email))\n\
+      {\n\
+         var r = email + \" appears to be a valid email address.\";\n\
+         addResult(r);\n\
+      }\n\
+      else\n\
+      {\n\
+         r = email + \" does NOT appear to be a valid email address.\";\n\
+         addResult(r);\n\
+      }\n\
+   }\n\
+\n\
+   // make up ZIP codes\n\
+   for (var s=0;s<4000;s++)\n\
+   {\n\
+      var zipGood = true;\n\
+      var zip = makeNumber(4);\n\
+      (s%2)?zip=zip+\"xyz\":zip=zip.concat(\"7\");\n\
+\n\
+      // validate the zip code\n\
+      for (var i = 0; i < zip.length; i++) {\n\
+          var ch = zip.charAt(i);\n\
+          if (ch < \"0\" || ch > \"9\") {\n\
+              zipGood = false;\n\
+              r = zip + \" contains letters.\";\n\
+              addResult(r);\n\
+          }\n\
+      }\n\
+      if (zipGood && zip.length>5)\n\
+      {\n\
+         zipGood = false;\n\
+         r = zip + \" is longer than five characters.\";\n\
+         addResult(r);\n\
+      }\n\
+      if (zipGood)\n\
+      {\n\
+         r = zip + \" appears to be a valid ZIP code.\";\n\
+         addResult(r);\n\
+      }\n\
+   }\n\
+}\n\
+\n\
+function makeName(n)\n\
+{\n\
+   var tmp = \"\";\n\
+   for (var i=0;i<n;i++)\n\
+   {\n\
+      var l = Math.floor(26*Math.random());\n\
+      tmp += letters[l];\n\
+   }\n\
+   return tmp;\n\
+}\n\
+\n\
+function makeNumber(n)\n\
+{\n\
+   var tmp = \"\";\n\
+   for (var i=0;i<n;i++)\n\
+   {\n\
+      var l = Math.floor(9*Math.random());\n\
+      tmp = tmp.concat(l);\n\
+   }\n\
+   return tmp;\n\
+}\n\
+\n\
+function addResult(r)\n\
+{\n\
+   endResult += \"\\n\" + r;\n\
+}\n\
+\n\
+doTest();\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider 3d-cube</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>3d-cube</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// 3D Cube Rotation\n\
+// http://www.speich.net/computer/moztesting/3d.htm\n\
+// Created by Simon Speich\n\
+\n\
+var Q = new Array();\n\
+var MTrans = new Array();  // transformation matrix\n\
+var MQube = new Array();  // position information of qube\n\
+var I = new Array();      // entity matrix\n\
+var Origin = new Object();\n\
+var Testing = new Object();\n\
+var LoopTimer;\n\
+\n\
+var DisplArea = new Object();\n\
+DisplArea.Width = 300;\n\
+DisplArea.Height = 300;\n\
+\n\
+function DrawLine(From, To) {\n\
+  var x1 = From.V[0];\n\
+  var x2 = To.V[0];\n\
+  var y1 = From.V[1];\n\
+  var y2 = To.V[1];\n\
+  var dx = Math.abs(x2 - x1);\n\
+  var dy = Math.abs(y2 - y1);\n\
+  var x = x1;\n\
+  var y = y1;\n\
+  var IncX1, IncY1;\n\
+  var IncX2, IncY2;  \n\
+  var Den;\n\
+  var Num;\n\
+  var NumAdd;\n\
+  var NumPix;\n\
+\n\
+  if (x2 >= x1) {  IncX1 = 1; IncX2 = 1;  }\n\
+  else { IncX1 = -1; IncX2 = -1; }\n\
+  if (y2 >= y1)  {  IncY1 = 1; IncY2 = 1; }\n\
+  else { IncY1 = -1; IncY2 = -1; }\n\
+  if (dx >= dy) {\n\
+    IncX1 = 0;\n\
+    IncY2 = 0;\n\
+    Den = dx;\n\
+    Num = dx / 2;\n\
+    NumAdd = dy;\n\
+    NumPix = dx;\n\
+  }\n\
+  else {\n\
+    IncX2 = 0;\n\
+    IncY1 = 0;\n\
+    Den = dy;\n\
+    Num = dy / 2;\n\
+    NumAdd = dx;\n\
+    NumPix = dy;\n\
+  }\n\
+\n\
+  NumPix = Math.round(Q.LastPx + NumPix);\n\
+\n\
+  var i = Q.LastPx;\n\
+  for (; i < NumPix; i++) {\n\
+    Num += NumAdd;\n\
+    if (Num >= Den) {\n\
+      Num -= Den;\n\
+      x += IncX1;\n\
+      y += IncY1;\n\
+    }\n\
+    x += IncX2;\n\
+    y += IncY2;\n\
+  }\n\
+  Q.LastPx = NumPix;\n\
+}\n\
+\n\
+function CalcCross(V0, V1) {\n\
+  var Cross = new Array();\n\
+  Cross[0] = V0[1]*V1[2] - V0[2]*V1[1];\n\
+  Cross[1] = V0[2]*V1[0] - V0[0]*V1[2];\n\
+  Cross[2] = V0[0]*V1[1] - V0[1]*V1[0];\n\
+  return Cross;\n\
+}\n\
+\n\
+function CalcNormal(V0, V1, V2) {\n\
+  var A = new Array();   var B = new Array(); \n\
+  for (var i = 0; i < 3; i++) {\n\
+    A[i] = V0[i] - V1[i];\n\
+    B[i] = V2[i] - V1[i];\n\
+  }\n\
+  A = CalcCross(A, B);\n\
+  var Length = Math.sqrt(A[0]*A[0] + A[1]*A[1] + A[2]*A[2]); \n\
+  for (var i = 0; i < 3; i++) A[i] = A[i] / Length;\n\
+  A[3] = 1;\n\
+  return A;\n\
+}\n\
+\n\
+function CreateP(X,Y,Z) {\n\
+  this.V = [X,Y,Z,1];\n\
+}\n\
+\n\
+// multiplies two matrices\n\
+function MMulti(M1, M2) {\n\
+  var M = [[],[],[],[]];\n\
+  var i = 0;\n\
+  var j = 0;\n\
+  for (; i < 4; i++) {\n\
+    j = 0;\n\
+    for (; j < 4; j++) M[i][j] = M1[i][0] * M2[0][j] + M1[i][1] * M2[1][j] + M1[i][2] * M2[2][j] + M1[i][3] * M2[3][j];\n\
+  }\n\
+  return M;\n\
+}\n\
+\n\
+//multiplies matrix with vector\n\
+function VMulti(M, V) {\n\
+  var Vect = new Array();\n\
+  var i = 0;\n\
+  for (;i < 4; i++) Vect[i] = M[i][0] * V[0] + M[i][1] * V[1] + M[i][2] * V[2] + M[i][3] * V[3];\n\
+  return Vect;\n\
+}\n\
+\n\
+function VMulti2(M, V) {\n\
+  var Vect = new Array();\n\
+  var i = 0;\n\
+  for (;i < 3; i++) Vect[i] = M[i][0] * V[0] + M[i][1] * V[1] + M[i][2] * V[2];\n\
+  return Vect;\n\
+}\n\
+\n\
+// add to matrices\n\
+function MAdd(M1, M2) {\n\
+  var M = [[],[],[],[]];\n\
+  var i = 0;\n\
+  var j = 0;\n\
+  for (; i < 4; i++) {\n\
+    j = 0;\n\
+    for (; j < 4; j++) M[i][j] = M1[i][j] + M2[i][j];\n\
+  }\n\
+  return M;\n\
+}\n\
+\n\
+function Translate(M, Dx, Dy, Dz) {\n\
+  var T = [\n\
+  [1,0,0,Dx],\n\
+  [0,1,0,Dy],\n\
+  [0,0,1,Dz],\n\
+  [0,0,0,1]\n\
+  ];\n\
+  return MMulti(T, M);\n\
+}\n\
+\n\
+function RotateX(M, Phi) {\n\
+  var a = Phi;\n\
+  a *= Math.PI / 180;\n\
+  var Cos = Math.cos(a);\n\
+  var Sin = Math.sin(a);\n\
+  var R = [\n\
+  [1,0,0,0],\n\
+  [0,Cos,-Sin,0],\n\
+  [0,Sin,Cos,0],\n\
+  [0,0,0,1]\n\
+  ];\n\
+  return MMulti(R, M);\n\
+}\n\
+\n\
+function RotateY(M, Phi) {\n\
+  var a = Phi;\n\
+  a *= Math.PI / 180;\n\
+  var Cos = Math.cos(a);\n\
+  var Sin = Math.sin(a);\n\
+  var R = [\n\
+  [Cos,0,Sin,0],\n\
+  [0,1,0,0],\n\
+  [-Sin,0,Cos,0],\n\
+  [0,0,0,1]\n\
+  ];\n\
+  return MMulti(R, M);\n\
+}\n\
+\n\
+function RotateZ(M, Phi) {\n\
+  var a = Phi;\n\
+  a *= Math.PI / 180;\n\
+  var Cos = Math.cos(a);\n\
+  var Sin = Math.sin(a);\n\
+  var R = [\n\
+  [Cos,-Sin,0,0],\n\
+  [Sin,Cos,0,0],\n\
+  [0,0,1,0],   \n\
+  [0,0,0,1]\n\
+  ];\n\
+  return MMulti(R, M);\n\
+}\n\
+\n\
+function DrawQube() {\n\
+  // calc current normals\n\
+  var CurN = new Array();\n\
+  var i = 5;\n\
+  Q.LastPx = 0;\n\
+  for (; i > -1; i--) CurN[i] = VMulti2(MQube, Q.Normal[i]);\n\
+  if (CurN[0][2] < 0) {\n\
+    if (!Q.Line[0]) { DrawLine(Q[0], Q[1]); Q.Line[0] = true; };\n\
+    if (!Q.Line[1]) { DrawLine(Q[1], Q[2]); Q.Line[1] = true; };\n\
+    if (!Q.Line[2]) { DrawLine(Q[2], Q[3]); Q.Line[2] = true; };\n\
+    if (!Q.Line[3]) { DrawLine(Q[3], Q[0]); Q.Line[3] = true; };\n\
+  }\n\
+  if (CurN[1][2] < 0) {\n\
+    if (!Q.Line[2]) { DrawLine(Q[3], Q[2]); Q.Line[2] = true; };\n\
+    if (!Q.Line[9]) { DrawLine(Q[2], Q[6]); Q.Line[9] = true; };\n\
+    if (!Q.Line[6]) { DrawLine(Q[6], Q[7]); Q.Line[6] = true; };\n\
+    if (!Q.Line[10]) { DrawLine(Q[7], Q[3]); Q.Line[10] = true; };\n\
+  }\n\
+  if (CurN[2][2] < 0) {\n\
+    if (!Q.Line[4]) { DrawLine(Q[4], Q[5]); Q.Line[4] = true; };\n\
+    if (!Q.Line[5]) { DrawLine(Q[5], Q[6]); Q.Line[5] = true; };\n\
+    if (!Q.Line[6]) { DrawLine(Q[6], Q[7]); Q.Line[6] = true; };\n\
+    if (!Q.Line[7]) { DrawLine(Q[7], Q[4]); Q.Line[7] = true; };\n\
+  }\n\
+  if (CurN[3][2] < 0) {\n\
+    if (!Q.Line[4]) { DrawLine(Q[4], Q[5]); Q.Line[4] = true; };\n\
+    if (!Q.Line[8]) { DrawLine(Q[5], Q[1]); Q.Line[8] = true; };\n\
+    if (!Q.Line[0]) { DrawLine(Q[1], Q[0]); Q.Line[0] = true; };\n\
+    if (!Q.Line[11]) { DrawLine(Q[0], Q[4]); Q.Line[11] = true; };\n\
+  }\n\
+  if (CurN[4][2] < 0) {\n\
+    if (!Q.Line[11]) { DrawLine(Q[4], Q[0]); Q.Line[11] = true; };\n\
+    if (!Q.Line[3]) { DrawLine(Q[0], Q[3]); Q.Line[3] = true; };\n\
+    if (!Q.Line[10]) { DrawLine(Q[3], Q[7]); Q.Line[10] = true; };\n\
+    if (!Q.Line[7]) { DrawLine(Q[7], Q[4]); Q.Line[7] = true; };\n\
+  }\n\
+  if (CurN[5][2] < 0) {\n\
+    if (!Q.Line[8]) { DrawLine(Q[1], Q[5]); Q.Line[8] = true; };\n\
+    if (!Q.Line[5]) { DrawLine(Q[5], Q[6]); Q.Line[5] = true; };\n\
+    if (!Q.Line[9]) { DrawLine(Q[6], Q[2]); Q.Line[9] = true; };\n\
+    if (!Q.Line[1]) { DrawLine(Q[2], Q[1]); Q.Line[1] = true; };\n\
+  }\n\
+  Q.Line = [false,false,false,false,false,false,false,false,false,false,false,false];\n\
+  Q.LastPx = 0;\n\
+}\n\
+\n\
+function Loop() {\n\
+  if (Testing.LoopCount > Testing.LoopMax) return;\n\
+  var TestingStr = String(Testing.LoopCount);\n\
+  while (TestingStr.length < 3) TestingStr = \"0\" + TestingStr;\n\
+  MTrans = Translate(I, -Q[8].V[0], -Q[8].V[1], -Q[8].V[2]);\n\
+  MTrans = RotateX(MTrans, 1);\n\
+  MTrans = RotateY(MTrans, 3);\n\
+  MTrans = RotateZ(MTrans, 5);\n\
+  MTrans = Translate(MTrans, Q[8].V[0], Q[8].V[1], Q[8].V[2]);\n\
+  MQube = MMulti(MTrans, MQube);\n\
+  var i = 8;\n\
+  for (; i > -1; i--) {\n\
+    Q[i].V = VMulti(MTrans, Q[i].V);\n\
+  }\n\
+  DrawQube();\n\
+  Testing.LoopCount++;\n\
+  Loop();\n\
+}\n\
+\n\
+function Init(CubeSize) {\n\
+  // init/reset vars\n\
+  Origin.V = [150,150,20,1];\n\
+  Testing.LoopCount = 0;\n\
+  Testing.LoopMax = 50;\n\
+  Testing.TimeMax = 0;\n\
+  Testing.TimeAvg = 0;\n\
+  Testing.TimeMin = 0;\n\
+  Testing.TimeTemp = 0;\n\
+  Testing.TimeTotal = 0;\n\
+  Testing.Init = false;\n\
+\n\
+  // transformation matrix\n\
+  MTrans = [\n\
+  [1,0,0,0],\n\
+  [0,1,0,0],\n\
+  [0,0,1,0],\n\
+  [0,0,0,1]\n\
+  ];\n\
+  \n\
+  // position information of qube\n\
+  MQube = [\n\
+  [1,0,0,0],\n\
+  [0,1,0,0],\n\
+  [0,0,1,0],\n\
+  [0,0,0,1]\n\
+  ];\n\
+  \n\
+  // entity matrix\n\
+  I = [\n\
+  [1,0,0,0],\n\
+  [0,1,0,0],\n\
+  [0,0,1,0],\n\
+  [0,0,0,1]\n\
+  ];\n\
+  \n\
+  // create qube\n\
+  Q[0] = new CreateP(-CubeSize,-CubeSize, CubeSize);\n\
+  Q[1] = new CreateP(-CubeSize, CubeSize, CubeSize);\n\
+  Q[2] = new CreateP( CubeSize, CubeSize, CubeSize);\n\
+  Q[3] = new CreateP( CubeSize,-CubeSize, CubeSize);\n\
+  Q[4] = new CreateP(-CubeSize,-CubeSize,-CubeSize);\n\
+  Q[5] = new CreateP(-CubeSize, CubeSize,-CubeSize);\n\
+  Q[6] = new CreateP( CubeSize, CubeSize,-CubeSize);\n\
+  Q[7] = new CreateP( CubeSize,-CubeSize,-CubeSize);\n\
+  \n\
+  // center of gravity\n\
+  Q[8] = new CreateP(0, 0, 0);\n\
+  \n\
+  // anti-clockwise edge check\n\
+  Q.Edge = [[0,1,2],[3,2,6],[7,6,5],[4,5,1],[4,0,3],[1,5,6]];\n\
+  \n\
+  // calculate squad normals\n\
+  Q.Normal = new Array();\n\
+  for (var i = 0; i < Q.Edge.length; i++) Q.Normal[i] = CalcNormal(Q[Q.Edge[i][0]].V, Q[Q.Edge[i][1]].V, Q[Q.Edge[i][2]].V);\n\
+  \n\
+  // line drawn ?\n\
+  Q.Line = [false,false,false,false,false,false,false,false,false,false,false,false];\n\
+  \n\
+  // create line pixels\n\
+  Q.NumPx = 9 * 2 * CubeSize;\n\
+  for (var i = 0; i < Q.NumPx; i++) CreateP(0,0,0);\n\
+  \n\
+  MTrans = Translate(MTrans, Origin.V[0], Origin.V[1], Origin.V[2]);\n\
+  MQube = MMulti(MTrans, MQube);\n\
+\n\
+  var i = 0;\n\
+  for (; i < 9; i++) {\n\
+    Q[i].V = VMulti(MTrans, Q[i].V);\n\
+  }\n\
+  DrawQube();\n\
+  Testing.Init = true;\n\
+  Loop();\n\
+}\n\
+\n\
+for ( var i = 20; i <= 160; i *= 2 ) {\n\
+  Init(i);\n\
+}\n\
+\n\
+Q = null;\n\
+MTrans = null;\n\
+MQube = null;\n\
+I = null;\n\
+Origin = null;\n\
+Testing = null;\n\
+LoopTime = null;\n\
+DisplArea = null;\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider 3d-morph</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>3d-morph</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/*\n\
+ * Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+ *\n\
+ * Redistribution and use in source and binary forms, with or without\n\
+ * modification, are permitted provided that the following conditions\n\
+ * are met:\n\
+ * 1. Redistributions of source code must retain the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer.\n\
+ * 2. Redistributions in binary form must reproduce the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer in the\n\
+ *    documentation and/or other materials provided with the distribution.\n\
+ *\n\
+ * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+ */\n\
+\n\
+var loops = 15\n\
+var nx = 120\n\
+var nz = 120\n\
+\n\
+function morph(a, f) {\n\
+    var PI2nx = Math.PI * 8/nx\n\
+    var sin = Math.sin\n\
+    var f30 = -(50 * sin(f*Math.PI*2))\n\
+    \n\
+    for (var i = 0; i < nz; ++i) {\n\
+        for (var j = 0; j < nx; ++j) {\n\
+            a[3*(i*nx+j)+1]    = sin((j-1) * PI2nx ) * -f30\n\
+        }\n\
+    }\n\
+}\n\
+\n\
+    \n\
+var a = Array()\n\
+for (var i=0; i < nx*nz*3; ++i) \n\
+    a[i] = 0\n\
+\n\
+for (var i = 0; i < loops; ++i) {\n\
+    morph(a, i/loops)\n\
+}\n\
+\n\
+testOutput = 0;\n\
+for (var i = 0; i < nx; i++)\n\
+    testOutput += a[3*(i*nx+i)+1];\n\
+a = null;\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider 3d-raytrace</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>3d-raytrace</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/*\n\
+ * Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+ *\n\
+ * Redistribution and use in source and binary forms, with or without\n\
+ * modification, are permitted provided that the following conditions\n\
+ * are met:\n\
+ * 1. Redistributions of source code must retain the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer.\n\
+ * 2. Redistributions in binary form must reproduce the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer in the\n\
+ *    documentation and/or other materials provided with the distribution.\n\
+ *\n\
+ * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+ */\n\
+\n\
+function createVector(x,y,z) {\n\
+    return new Array(x,y,z);\n\
+}\n\
+\n\
+function sqrLengthVector(self) {\n\
+    return self[0] * self[0] + self[1] * self[1] + self[2] * self[2];\n\
+}\n\
+\n\
+function lengthVector(self) {\n\
+    return Math.sqrt(self[0] * self[0] + self[1] * self[1] + self[2] * self[2]);\n\
+}\n\
+\n\
+function addVector(self, v) {\n\
+    self[0] += v[0];\n\
+    self[1] += v[1];\n\
+    self[2] += v[2];\n\
+    return self;\n\
+}\n\
+\n\
+function subVector(self, v) {\n\
+    self[0] -= v[0];\n\
+    self[1] -= v[1];\n\
+    self[2] -= v[2];\n\
+    return self;\n\
+}\n\
+\n\
+function scaleVector(self, scale) {\n\
+    self[0] *= scale;\n\
+    self[1] *= scale;\n\
+    self[2] *= scale;\n\
+    return self;\n\
+}\n\
+\n\
+function normaliseVector(self) {\n\
+    var len = Math.sqrt(self[0] * self[0] + self[1] * self[1] + self[2] * self[2]);\n\
+    self[0] /= len;\n\
+    self[1] /= len;\n\
+    self[2] /= len;\n\
+    return self;\n\
+}\n\
+\n\
+function add(v1, v2) {\n\
+    return new Array(v1[0] + v2[0], v1[1] + v2[1], v1[2] + v2[2]);\n\
+}\n\
+\n\
+function sub(v1, v2) {\n\
+    return new Array(v1[0] - v2[0], v1[1] - v2[1], v1[2] - v2[2]);\n\
+}\n\
+\n\
+function scalev(v1, v2) {\n\
+    return new Array(v1[0] * v2[0], v1[1] * v2[1], v1[2] * v2[2]);\n\
+}\n\
+\n\
+function dot(v1, v2) {\n\
+    return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\n\
+}\n\
+\n\
+function scale(v, scale) {\n\
+    return [v[0] * scale, v[1] * scale, v[2] * scale];\n\
+}\n\
+\n\
+function cross(v1, v2) {\n\
+    return [v1[1] * v2[2] - v1[2] * v2[1], \n\
+            v1[2] * v2[0] - v1[0] * v2[2],\n\
+            v1[0] * v2[1] - v1[1] * v2[0]];\n\
+\n\
+}\n\
+\n\
+function normalise(v) {\n\
+    var len = lengthVector(v);\n\
+    return [v[0] / len, v[1] / len, v[2] / len];\n\
+}\n\
+\n\
+function transformMatrix(self, v) {\n\
+    var vals = self;\n\
+    var x  = vals[0] * v[0] + vals[1] * v[1] + vals[2] * v[2] + vals[3];\n\
+    var y  = vals[4] * v[0] + vals[5] * v[1] + vals[6] * v[2] + vals[7];\n\
+    var z  = vals[8] * v[0] + vals[9] * v[1] + vals[10] * v[2] + vals[11];\n\
+    return [x, y, z];\n\
+}\n\
+\n\
+function invertMatrix(self) {\n\
+    var temp = new Array(16);\n\
+    var tx = -self[3];\n\
+    var ty = -self[7];\n\
+    var tz = -self[11];\n\
+    for (h = 0; h < 3; h++) \n\
+        for (v = 0; v < 3; v++) \n\
+            temp[h + v * 4] = self[v + h * 4];\n\
+    for (i = 0; i < 11; i++)\n\
+        self[i] = temp[i];\n\
+    self[3] = tx * self[0] + ty * self[1] + tz * self[2];\n\
+    self[7] = tx * self[4] + ty * self[5] + tz * self[6];\n\
+    self[11] = tx * self[8] + ty * self[9] + tz * self[10];\n\
+    return self;\n\
+}\n\
+\n\
+\n\
+// Triangle intersection using barycentric coord method\n\
+function Triangle(p1, p2, p3) {\n\
+    var edge1 = sub(p3, p1);\n\
+    var edge2 = sub(p2, p1);\n\
+    var normal = cross(edge1, edge2);\n\
+    if (Math.abs(normal[0]) > Math.abs(normal[1]))\n\
+        if (Math.abs(normal[0]) > Math.abs(normal[2]))\n\
+            this.axis = 0; \n\
+        else \n\
+            this.axis = 2;\n\
+    else\n\
+        if (Math.abs(normal[1]) > Math.abs(normal[2])) \n\
+            this.axis = 1;\n\
+        else \n\
+            this.axis = 2;\n\
+    var u = (this.axis + 1) % 3;\n\
+    var v = (this.axis + 2) % 3;\n\
+    var u1 = edge1[u];\n\
+    var v1 = edge1[v];\n\
+    \n\
+    var u2 = edge2[u];\n\
+    var v2 = edge2[v];\n\
+    this.normal = normalise(normal);\n\
+    this.nu = normal[u] / normal[this.axis];\n\
+    this.nv = normal[v] / normal[this.axis];\n\
+    this.nd = dot(normal, p1) / normal[this.axis];\n\
+    var det = u1 * v2 - v1 * u2;\n\
+    this.eu = p1[u];\n\
+    this.ev = p1[v]; \n\
+    this.nu1 = u1 / det;\n\
+    this.nv1 = -v1 / det;\n\
+    this.nu2 = v2 / det;\n\
+    this.nv2 = -u2 / det; \n\
+    this.material = [0.7, 0.7, 0.7];\n\
+}\n\
+\n\
+Triangle.prototype.intersect = function(orig, dir, near, far) {\n\
+    var u = (this.axis + 1) % 3;\n\
+    var v = (this.axis + 2) % 3;\n\
+    var d = dir[this.axis] + this.nu * dir[u] + this.nv * dir[v];\n\
+    var t = (this.nd - orig[this.axis] - this.nu * orig[u] - this.nv * orig[v]) / d;\n\
+    if (t < near || t > far)\n\
+        return null;\n\
+    var Pu = orig[u] + t * dir[u] - this.eu;\n\
+    var Pv = orig[v] + t * dir[v] - this.ev;\n\
+    var a2 = Pv * this.nu1 + Pu * this.nv1;\n\
+    if (a2 < 0) \n\
+        return null;\n\
+    var a3 = Pu * this.nu2 + Pv * this.nv2;\n\
+    if (a3 < 0) \n\
+        return null;\n\
+\n\
+    if ((a2 + a3) > 1) \n\
+        return null;\n\
+    return t;\n\
+}\n\
+\n\
+function Scene(a_triangles) {\n\
+    this.triangles = a_triangles;\n\
+    this.lights = [];\n\
+    this.ambient = [0,0,0];\n\
+    this.background = [0.8,0.8,1];\n\
+}\n\
+var zero = new Array(0,0,0);\n\
+\n\
+Scene.prototype.intersect = function(origin, dir, near, far) {\n\
+    var closest = null;\n\
+    for (i = 0; i < this.triangles.length; i++) {\n\
+        var triangle = this.triangles[i];   \n\
+        var d = triangle.intersect(origin, dir, near, far);\n\
+        if (d == null || d > far || d < near)\n\
+            continue;\n\
+        far = d;\n\
+        closest = triangle;\n\
+    }\n\
+    \n\
+    if (!closest)\n\
+        return [this.background[0],this.background[1],this.background[2]];\n\
+        \n\
+    var normal = closest.normal;\n\
+    var hit = add(origin, scale(dir, far)); \n\
+    if (dot(dir, normal) > 0)\n\
+        normal = [-normal[0], -normal[1], -normal[2]];\n\
+    \n\
+    var colour = null;\n\
+    if (closest.shader) {\n\
+        colour = closest.shader(closest, hit, dir);\n\
+    } else {\n\
+        colour = closest.material;\n\
+    }\n\
+    \n\
+    // do reflection\n\
+    var reflected = null;\n\
+    if (colour.reflection > 0.001) {\n\
+        var reflection = addVector(scale(normal, -2*dot(dir, normal)), dir);\n\
+        reflected = this.intersect(hit, reflection, 0.0001, 1000000);\n\
+        if (colour.reflection >= 0.999999)\n\
+            return reflected;\n\
+    }\n\
+    \n\
+    var l = [this.ambient[0], this.ambient[1], this.ambient[2]];\n\
+    for (var i = 0; i < this.lights.length; i++) {\n\
+        var light = this.lights[i];\n\
+        var toLight = sub(light, hit);\n\
+        var distance = lengthVector(toLight);\n\
+        scaleVector(toLight, 1.0/distance);\n\
+        distance -= 0.0001;\n\
+        if (this.blocked(hit, toLight, distance))\n\
+            continue;\n\
+        var nl = dot(normal, toLight);\n\
+        if (nl > 0)\n\
+            addVector(l, scale(light.colour, nl));\n\
+    }\n\
+    l = scalev(l, colour);\n\
+    if (reflected) {\n\
+        l = addVector(scaleVector(l, 1 - colour.reflection), scaleVector(reflected, colour.reflection));\n\
+    }\n\
+    return l;\n\
+}\n\
+\n\
+Scene.prototype.blocked = function(O, D, far) {\n\
+    var near = 0.0001;\n\
+    var closest = null;\n\
+    for (i = 0; i < this.triangles.length; i++) {\n\
+        var triangle = this.triangles[i];   \n\
+        var d = triangle.intersect(O, D, near, far);\n\
+        if (d == null || d > far || d < near)\n\
+            continue;\n\
+        return true;\n\
+    }\n\
+    \n\
+    return false;\n\
+}\n\
+\n\
+\n\
+// this camera code is from notes i made ages ago, it is from *somewhere* -- i cannot remember where\n\
+// that somewhere is\n\
+function Camera(origin, lookat, up) {\n\
+    var zaxis = normaliseVector(subVector(lookat, origin));\n\
+    var xaxis = normaliseVector(cross(up, zaxis));\n\
+    var yaxis = normaliseVector(cross(xaxis, subVector([0,0,0], zaxis)));\n\
+    var m = new Array(16);\n\
+    m[0] = xaxis[0]; m[1] = xaxis[1]; m[2] = xaxis[2];\n\
+    m[4] = yaxis[0]; m[5] = yaxis[1]; m[6] = yaxis[2];\n\
+    m[8] = zaxis[0]; m[9] = zaxis[1]; m[10] = zaxis[2];\n\
+    invertMatrix(m);\n\
+    m[3] = 0; m[7] = 0; m[11] = 0;\n\
+    this.origin = origin;\n\
+    this.directions = new Array(4);\n\
+    this.directions[0] = normalise([-0.7,  0.7, 1]);\n\
+    this.directions[1] = normalise([ 0.7,  0.7, 1]);\n\
+    this.directions[2] = normalise([ 0.7, -0.7, 1]);\n\
+    this.directions[3] = normalise([-0.7, -0.7, 1]);\n\
+    this.directions[0] = transformMatrix(m, this.directions[0]);\n\
+    this.directions[1] = transformMatrix(m, this.directions[1]);\n\
+    this.directions[2] = transformMatrix(m, this.directions[2]);\n\
+    this.directions[3] = transformMatrix(m, this.directions[3]);\n\
+}\n\
+\n\
+Camera.prototype.generateRayPair = function(y) {\n\
+    rays = new Array(new Object(), new Object());\n\
+    rays[0].origin = this.origin;\n\
+    rays[1].origin = this.origin;\n\
+    rays[0].dir = addVector(scale(this.directions[0], y), scale(this.directions[3], 1 - y));\n\
+    rays[1].dir = addVector(scale(this.directions[1], y), scale(this.directions[2], 1 - y));\n\
+    return rays;\n\
+}\n\
+\n\
+function renderRows(camera, scene, pixels, width, height, starty, stopy) {\n\
+    for (var y = starty; y < stopy; y++) {\n\
+        var rays = camera.generateRayPair(y / height);\n\
+        for (var x = 0; x < width; x++) {\n\
+            var xp = x / width;\n\
+            var origin = addVector(scale(rays[0].origin, xp), scale(rays[1].origin, 1 - xp));\n\
+            var dir = normaliseVector(addVector(scale(rays[0].dir, xp), scale(rays[1].dir, 1 - xp)));\n\
+            var l = scene.intersect(origin, dir);\n\
+            pixels[y][x] = l;\n\
+        }\n\
+    }\n\
+}\n\
+\n\
+Camera.prototype.render = function(scene, pixels, width, height) {\n\
+    var cam = this;\n\
+    var row = 0;\n\
+    renderRows(cam, scene, pixels, width, height, 0, height);\n\
+}\n\
+\n\
+\n\
+\n\
+function raytraceScene()\n\
+{\n\
+    var startDate = new Date().getTime();\n\
+    var numTriangles = 2 * 6;\n\
+    var triangles = new Array();//numTriangles);\n\
+    var tfl = createVector(-10,  10, -10);\n\
+    var tfr = createVector( 10,  10, -10);\n\
+    var tbl = createVector(-10,  10,  10);\n\
+    var tbr = createVector( 10,  10,  10);\n\
+    var bfl = createVector(-10, -10, -10);\n\
+    var bfr = createVector( 10, -10, -10);\n\
+    var bbl = createVector(-10, -10,  10);\n\
+    var bbr = createVector( 10, -10,  10);\n\
+    \n\
+    // cube!!!\n\
+    // front\n\
+    var i = 0;\n\
+    \n\
+    triangles[i++] = new Triangle(tfl, tfr, bfr);\n\
+    triangles[i++] = new Triangle(tfl, bfr, bfl);\n\
+    // back\n\
+    triangles[i++] = new Triangle(tbl, tbr, bbr);\n\
+    triangles[i++] = new Triangle(tbl, bbr, bbl);\n\
+    //        triangles[i-1].material = [0.7,0.2,0.2];\n\
+    //            triangles[i-1].material.reflection = 0.8;\n\
+    // left\n\
+    triangles[i++] = new Triangle(tbl, tfl, bbl);\n\
+    //            triangles[i-1].reflection = 0.6;\n\
+    triangles[i++] = new Triangle(tfl, bfl, bbl);\n\
+    //            triangles[i-1].reflection = 0.6;\n\
+    // right\n\
+    triangles[i++] = new Triangle(tbr, tfr, bbr);\n\
+    triangles[i++] = new Triangle(tfr, bfr, bbr);\n\
+    // top\n\
+    triangles[i++] = new Triangle(tbl, tbr, tfr);\n\
+    triangles[i++] = new Triangle(tbl, tfr, tfl);\n\
+    // bottom\n\
+    triangles[i++] = new Triangle(bbl, bbr, bfr);\n\
+    triangles[i++] = new Triangle(bbl, bfr, bfl);\n\
+    \n\
+    //Floor!!!!\n\
+    var green = createVector(0.0, 0.4, 0.0);\n\
+    var grey = createVector(0.4, 0.4, 0.4);\n\
+    grey.reflection = 1.0;\n\
+    var floorShader = function(tri, pos, view) {\n\
+        var x = ((pos[0]/32) % 2 + 2) % 2;\n\
+        var z = ((pos[2]/32 + 0.3) % 2 + 2) % 2;\n\
+        if (x < 1 != z < 1) {\n\
+            //in the real world we use the fresnel term...\n\
+            //    var angle = 1-dot(view, tri.normal);\n\
+            //   angle *= angle;\n\
+            //  angle *= angle;\n\
+            // angle *= angle;\n\
+            //grey.reflection = angle;\n\
+            return grey;\n\
+        } else \n\
+            return green;\n\
+    }\n\
+    var ffl = createVector(-1000, -30, -1000);\n\
+    var ffr = createVector( 1000, -30, -1000);\n\
+    var fbl = createVector(-1000, -30,  1000);\n\
+    var fbr = createVector( 1000, -30,  1000);\n\
+    triangles[i++] = new Triangle(fbl, fbr, ffr);\n\
+    triangles[i-1].shader = floorShader;\n\
+    triangles[i++] = new Triangle(fbl, ffr, ffl);\n\
+    triangles[i-1].shader = floorShader;\n\
+    \n\
+    var _scene = new Scene(triangles);\n\
+    _scene.lights[0] = createVector(20, 38, -22);\n\
+    _scene.lights[0].colour = createVector(0.7, 0.3, 0.3);\n\
+    _scene.lights[1] = createVector(-23, 40, 17);\n\
+    _scene.lights[1].colour = createVector(0.7, 0.3, 0.3);\n\
+    _scene.lights[2] = createVector(23, 20, 17);\n\
+    _scene.lights[2].colour = createVector(0.7, 0.7, 0.7);\n\
+    _scene.ambient = createVector(0.1, 0.1, 0.1);\n\
+    //  _scene.background = createVector(0.7, 0.7, 1.0);\n\
+    \n\
+    var size = 30;\n\
+    var pixels = new Array();\n\
+    for (var y = 0; y < size; y++) {\n\
+        pixels[y] = new Array();\n\
+        for (var x = 0; x < size; x++) {\n\
+            pixels[y][x] = 0;\n\
+        }\n\
+    }\n\
+\n\
+    var _camera = new Camera(createVector(-40, 40, 40), createVector(0, 0, 0), createVector(0, 1, 0));\n\
+    _camera.render(_scene, pixels, size, size);\n\
+\n\
+    return pixels;\n\
+}\n\
+\n\
+function arrayToCanvasCommands(pixels)\n\
+{\n\
+    var s = '<canvas id=\"renderCanvas\" width=\"30px\" height=\"30px\"></canvas><scr' + 'ipt>\\nvar pixels = [';\n\
+    var size = 30;\n\
+    for (var y = 0; y < size; y++) {\n\
+        s += \"[\";\n\
+        for (var x = 0; x < size; x++) {\n\
+            s += \"[\" + pixels[y][x] + \"],\";\n\
+        }\n\
+        s+= \"],\";\n\
+    }\n\
+    s += '];\\n    var canvas = document.getElementById(\"renderCanvas\").getContext(\"2d\");\\n\\\n\
+\\n\\\n\
+\\n\\\n\
+    var size = 30;\\n\\\n\
+    canvas.fillStyle = \"red\";\\n\\\n\
+    canvas.fillRect(0, 0, size, size);\\n\\\n\
+    canvas.scale(1, -1);\\n\\\n\
+    canvas.translate(0, -size);\\n\\\n\
+\\n\\\n\
+    if (!canvas.setFillColor)\\n\\\n\
+        canvas.setFillColor = function(r, g, b, a) {\\n\\\n\
+            this.fillStyle = \"rgb(\"+[Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)]+\")\";\\n\\\n\
+    }\\n\\\n\
+\\n\\\n\
+for (var y = 0; y < size; y++) {\\n\\\n\
+  for (var x = 0; x < size; x++) {\\n\\\n\
+    var l = pixels[y][x];\\n\\\n\
+    canvas.setFillColor(l[0], l[1], l[2], 1);\\n\\\n\
+    canvas.fillRect(x, y, 1, 1);\\n\\\n\
+  }\\n\\\n\
+}</scr' + 'ipt>';\n\
+\n\
+    return s;\n\
+}\n\
+\n\
+testOutput = arrayToCanvasCommands(raytraceScene());\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider access-binary-trees</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>access-binary-trees</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/* The Great Computer Language Shootout\n\
+   http://shootout.alioth.debian.org/\n\
+   contributed by Isaac Gouy */\n\
+\n\
+function TreeNode(left,right,item){\n\
+   this.left = left;\n\
+   this.right = right;\n\
+   this.item = item;\n\
+}\n\
+\n\
+TreeNode.prototype.itemCheck = function(){\n\
+   if (this.left==null) return this.item;\n\
+   else return this.item + this.left.itemCheck() - this.right.itemCheck();\n\
+}\n\
+\n\
+function bottomUpTree(item,depth){\n\
+   if (depth>0){\n\
+      return new TreeNode(\n\
+          bottomUpTree(2*item-1, depth-1)\n\
+         ,bottomUpTree(2*item, depth-1)\n\
+         ,item\n\
+      );\n\
+   }\n\
+   else {\n\
+      return new TreeNode(null,null,item);\n\
+   }\n\
+}\n\
+\n\
+var ret;\n\
+\n\
+for ( var n = 4; n <= 7; n += 1 ) {\n\
+    var minDepth = 4;\n\
+    var maxDepth = Math.max(minDepth + 2, n);\n\
+    var stretchDepth = maxDepth + 1;\n\
+    \n\
+    var check = bottomUpTree(0,stretchDepth).itemCheck();\n\
+    \n\
+    var longLivedTree = bottomUpTree(0,maxDepth);\n\
+    for (var depth=minDepth; depth<=maxDepth; depth+=2){\n\
+        var iterations = 1 << (maxDepth - depth + minDepth);\n\
+\n\
+        check = 0;\n\
+        for (var i=1; i<=iterations; i++){\n\
+            check += bottomUpTree(i,depth).itemCheck();\n\
+            check += bottomUpTree(-i,depth).itemCheck();\n\
+        }\n\
+    }\n\
+\n\
+    ret = longLivedTree.itemCheck();\n\
+}\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider access-fannkuch</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>access-fannkuch</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/* The Great Computer Language Shootout\n\
+   http://shootout.alioth.debian.org/\n\
+   contributed by Isaac Gouy */\n\
+\n\
+function fannkuch(n) {\n\
+   var check = 0;\n\
+   var perm = Array(n);\n\
+   var perm1 = Array(n);\n\
+   var count = Array(n);\n\
+   var maxPerm = Array(n);\n\
+   var maxFlipsCount = 0;\n\
+   var m = n - 1;\n\
+\n\
+   for (var i = 0; i < n; i++) perm1[i] = i;\n\
+   var r = n;\n\
+\n\
+   while (true) {\n\
+      // write-out the first 30 permutations\n\
+      if (check < 30){\n\
+         var s = \"\";\n\
+         for(var i=0; i<n; i++) s += (perm1[i]+1).toString();\n\
+         check++;\n\
+      }\n\
+\n\
+      while (r != 1) { count[r - 1] = r; r--; }\n\
+      if (!(perm1[0] == 0 || perm1[m] == m)) {\n\
+         for (var i = 0; i < n; i++) perm[i] = perm1[i];\n\
+\n\
+         var flipsCount = 0;\n\
+         var k;\n\
+\n\
+         while (!((k = perm[0]) == 0)) {\n\
+            var k2 = (k + 1) >> 1;\n\
+            for (var i = 0; i < k2; i++) {\n\
+               var temp = perm[i]; perm[i] = perm[k - i]; perm[k - i] = temp;\n\
+            }\n\
+            flipsCount++;\n\
+         }\n\
+\n\
+         if (flipsCount > maxFlipsCount) {\n\
+            maxFlipsCount = flipsCount;\n\
+            for (var i = 0; i < n; i++) maxPerm[i] = perm1[i];\n\
+         }\n\
+      }\n\
+\n\
+      while (true) {\n\
+         if (r == n) return maxFlipsCount;\n\
+         var perm0 = perm1[0];\n\
+         var i = 0;\n\
+         while (i < r) {\n\
+            var j = i + 1;\n\
+            perm1[i] = perm1[j];\n\
+            i = j;\n\
+         }\n\
+         perm1[r] = perm0;\n\
+\n\
+         count[r] = count[r] - 1;\n\
+         if (count[r] > 0) break;\n\
+         r++;\n\
+      }\n\
+   }\n\
+}\n\
+\n\
+var n = 8;\n\
+var ret = fannkuch(n);\n\
+\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider access-nbody</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>access-nbody</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/* The Great Computer Language Shootout\n\
+   http://shootout.alioth.debian.org/\n\
+   contributed by Isaac Gouy */\n\
+\n\
+var PI = 3.141592653589793;\n\
+var SOLAR_MASS = 4 * PI * PI;\n\
+var DAYS_PER_YEAR = 365.24;\n\
+\n\
+function Body(x,y,z,vx,vy,vz,mass){\n\
+   this.x = x;\n\
+   this.y = y;\n\
+   this.z = z;\n\
+   this.vx = vx;\n\
+   this.vy = vy;\n\
+   this.vz = vz;\n\
+   this.mass = mass;\n\
+}\n\
+\n\
+Body.prototype.offsetMomentum = function(px,py,pz) {\n\
+   this.vx = -px / SOLAR_MASS;\n\
+   this.vy = -py / SOLAR_MASS;\n\
+   this.vz = -pz / SOLAR_MASS;\n\
+   return this;\n\
+}\n\
+\n\
+function Jupiter(){\n\
+   return new Body(\n\
+      4.84143144246472090e+00,\n\
+      -1.16032004402742839e+00,\n\
+      -1.03622044471123109e-01,\n\
+      1.66007664274403694e-03 * DAYS_PER_YEAR,\n\
+      7.69901118419740425e-03 * DAYS_PER_YEAR,\n\
+      -6.90460016972063023e-05 * DAYS_PER_YEAR,\n\
+      9.54791938424326609e-04 * SOLAR_MASS\n\
+   );\n\
+}\n\
+\n\
+function Saturn(){\n\
+   return new Body(\n\
+      8.34336671824457987e+00,\n\
+      4.12479856412430479e+00,\n\
+      -4.03523417114321381e-01,\n\
+      -2.76742510726862411e-03 * DAYS_PER_YEAR,\n\
+      4.99852801234917238e-03 * DAYS_PER_YEAR,\n\
+      2.30417297573763929e-05 * DAYS_PER_YEAR,\n\
+      2.85885980666130812e-04 * SOLAR_MASS\n\
+   );\n\
+}\n\
+\n\
+function Uranus(){\n\
+   return new Body(\n\
+      1.28943695621391310e+01,\n\
+      -1.51111514016986312e+01,\n\
+      -2.23307578892655734e-01,\n\
+      2.96460137564761618e-03 * DAYS_PER_YEAR,\n\
+      2.37847173959480950e-03 * DAYS_PER_YEAR,\n\
+      -2.96589568540237556e-05 * DAYS_PER_YEAR,\n\
+      4.36624404335156298e-05 * SOLAR_MASS\n\
+   );\n\
+}\n\
+\n\
+function Neptune(){\n\
+   return new Body(\n\
+      1.53796971148509165e+01,\n\
+      -2.59193146099879641e+01,\n\
+      1.79258772950371181e-01,\n\
+      2.68067772490389322e-03 * DAYS_PER_YEAR,\n\
+      1.62824170038242295e-03 * DAYS_PER_YEAR,\n\
+      -9.51592254519715870e-05 * DAYS_PER_YEAR,\n\
+      5.15138902046611451e-05 * SOLAR_MASS\n\
+   );\n\
+}\n\
+\n\
+function Sun(){\n\
+   return new Body(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, SOLAR_MASS);\n\
+}\n\
+\n\
+\n\
+function NBodySystem(bodies){\n\
+   this.bodies = bodies;\n\
+   var px = 0.0;\n\
+   var py = 0.0;\n\
+   var pz = 0.0;\n\
+   var size = this.bodies.length;\n\
+   for (var i=0; i<size; i++){\n\
+      var b = this.bodies[i];\n\
+      var m = b.mass;\n\
+      px += b.vx * m;\n\
+      py += b.vy * m;\n\
+      pz += b.vz * m;\n\
+   }\n\
+   this.bodies[0].offsetMomentum(px,py,pz);\n\
+}\n\
+\n\
+NBodySystem.prototype.advance = function(dt){\n\
+   var dx, dy, dz, distance, mag;\n\
+   var size = this.bodies.length;\n\
+\n\
+   for (var i=0; i<size; i++) {\n\
+      var bodyi = this.bodies[i];\n\
+      for (var j=i+1; j<size; j++) {\n\
+         var bodyj = this.bodies[j];\n\
+         dx = bodyi.x - bodyj.x;\n\
+         dy = bodyi.y - bodyj.y;\n\
+         dz = bodyi.z - bodyj.z;\n\
+\n\
+         distance = Math.sqrt(dx*dx + dy*dy + dz*dz);\n\
+         mag = dt / (distance * distance * distance);\n\
+\n\
+         bodyi.vx -= dx * bodyj.mass * mag;\n\
+         bodyi.vy -= dy * bodyj.mass * mag;\n\
+         bodyi.vz -= dz * bodyj.mass * mag;\n\
+\n\
+         bodyj.vx += dx * bodyi.mass * mag;\n\
+         bodyj.vy += dy * bodyi.mass * mag;\n\
+         bodyj.vz += dz * bodyi.mass * mag;\n\
+      }\n\
+   }\n\
+\n\
+   for (var i=0; i<size; i++) {\n\
+      var body = this.bodies[i];\n\
+      body.x += dt * body.vx;\n\
+      body.y += dt * body.vy;\n\
+      body.z += dt * body.vz;\n\
+   }\n\
+}\n\
+\n\
+NBodySystem.prototype.energy = function(){\n\
+   var dx, dy, dz, distance;\n\
+   var e = 0.0;\n\
+   var size = this.bodies.length;\n\
+\n\
+   for (var i=0; i<size; i++) {\n\
+      var bodyi = this.bodies[i];\n\
+\n\
+      e += 0.5 * bodyi.mass *\n\
+         ( bodyi.vx * bodyi.vx\n\
+         + bodyi.vy * bodyi.vy\n\
+         + bodyi.vz * bodyi.vz );\n\
+\n\
+      for (var j=i+1; j<size; j++) {\n\
+         var bodyj = this.bodies[j];\n\
+         dx = bodyi.x - bodyj.x;\n\
+         dy = bodyi.y - bodyj.y;\n\
+         dz = bodyi.z - bodyj.z;\n\
+\n\
+         distance = Math.sqrt(dx*dx + dy*dy + dz*dz);\n\
+         e -= (bodyi.mass * bodyj.mass) / distance;\n\
+      }\n\
+   }\n\
+   return e;\n\
+}\n\
+\n\
+var ret;\n\
+\n\
+for ( var n = 3; n <= 24; n *= 2 ) {\n\
+    (function(){\n\
+        var bodies = new NBodySystem( Array(\n\
+           Sun(),Jupiter(),Saturn(),Uranus(),Neptune()\n\
+        ));\n\
+        var max = n * 100;\n\
+        \n\
+        ret = bodies.energy();\n\
+        for (var i=0; i<max; i++){\n\
+            bodies.advance(0.01);\n\
+        }\n\
+        ret = bodies.energy();\n\
+    })();\n\
+}\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider access-nsieve</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>access-nsieve</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// The Great Computer Language Shootout\n\
+// http://shootout.alioth.debian.org/\n\
+//\n\
+// modified by Isaac Gouy\n\
+\n\
+function pad(number,width){\n\
+   var s = number.toString();\n\
+   var prefixWidth = width - s.length;\n\
+   if (prefixWidth>0){\n\
+      for (var i=1; i<=prefixWidth; i++) s = \" \" + s;\n\
+   }\n\
+   return s;\n\
+}\n\
+\n\
+function nsieve(m, isPrime){\n\
+   var i, k, count;\n\
+\n\
+   for (i=2; i<=m; i++) { isPrime[i] = true; }\n\
+   count = 0;\n\
+\n\
+   for (i=2; i<=m; i++){\n\
+      if (isPrime[i]) {\n\
+         for (k=i+i; k<=m; k+=i) isPrime[k] = false;\n\
+         count++;\n\
+      }\n\
+   }\n\
+   return count;\n\
+}\n\
+\n\
+function sieve() {\n\
+    for (var i = 1; i <= 3; i++ ) {\n\
+        var m = (1<<i)*10000;\n\
+        var flags = Array(m+1);\n\
+        nsieve(m, flags);\n\
+    }\n\
+}\n\
+\n\
+sieve();\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider bitops-3bit-bits-in-byte</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>bitops-3bit-bits-in-byte</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// Copyright (c) 2004 by Arthur Langereis (arthur_ext at domain xfinitegames, tld com\n\
+\n\
+// 1 op = 6 ANDs, 3 SHRs, 3 SHLs, 4 assigns, 2 ADDs\n\
+// O(1)\n\
+function fast3bitlookup(b) {\n\
+var c, bi3b = 0xE994; // 0b1110 1001 1001 0100; // 3 2 2 1  2 1 1 0\n\
+c  = 3 & (bi3b >> ((b << 1) & 14));\n\
+c += 3 & (bi3b >> ((b >> 2) & 14));\n\
+c += 3 & (bi3b >> ((b >> 5) & 6));\n\
+return c;\n\
+\n\
+/*\n\
+lir4,0xE994; 9 instructions, no memory access, minimal register dependence, 6 shifts, 2 adds, 1 inline assign\n\
+rlwinmr5,r3,1,28,30\n\
+rlwinmr6,r3,30,28,30\n\
+rlwinmr7,r3,27,29,30\n\
+rlwnmr8,r4,r5,30,31\n\
+rlwnmr9,r4,r6,30,31\n\
+rlwnmr10,r4,r7,30,31\n\
+addr3,r8,r9\n\
+addr3,r3,r10\n\
+*/\n\
+}\n\
+\n\
+\n\
+function TimeFunc(func) {\n\
+var x, y, t;\n\
+for(var x=0; x<500; x++)\n\
+for(var y=0; y<256; y++) func(y);\n\
+}\n\
+\n\
+TimeFunc(fast3bitlookup);\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider bitops-bits-in-byte</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>bitops-bits-in-byte</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// Copyright (c) 2004 by Arthur Langereis (arthur_ext at domain xfinitegames, tld com)\n\
+\n\
+\n\
+// 1 op = 2 assigns, 16 compare/branches, 8 ANDs, (0-8) ADDs, 8 SHLs\n\
+// O(n)\n\
+function bitsinbyte(b) {\n\
+var m = 1, c = 0;\n\
+while(m<0x100) {\n\
+if(b & m) c++;\n\
+m <<= 1;\n\
+}\n\
+return c;\n\
+}\n\
+\n\
+function TimeFunc(func) {\n\
+var x, y, t;\n\
+for(var x=0; x<350; x++)\n\
+for(var y=0; y<256; y++) func(y);\n\
+}\n\
+\n\
+TimeFunc(bitsinbyte);\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider bitops-bitwise-and</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>bitops-bitwise-and</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/*\n\
+ * Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+ *\n\
+ * Redistribution and use in source and binary forms, with or without\n\
+ * modification, are permitted provided that the following conditions\n\
+ * are met:\n\
+ * 1. Redistributions of source code must retain the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer.\n\
+ * 2. Redistributions in binary form must reproduce the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer in the\n\
+ *    documentation and/or other materials provided with the distribution.\n\
+ *\n\
+ * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+ */\n\
+\n\
+bitwiseAndValue = 4294967296;\n\
+for (var i = 0; i < 600000; i++)\n\
+    bitwiseAndValue = bitwiseAndValue & i;\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider bitops-nsieve-bits</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>bitops-nsieve-bits</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// The Great Computer Language Shootout\n\
+//  http://shootout.alioth.debian.org\n\
+//\n\
+//  Contributed by Ian Osgood\n\
+\n\
+function pad(n,width) {\n\
+  var s = n.toString();\n\
+  while (s.length < width) s = ' ' + s;\n\
+  return s;\n\
+}\n\
+\n\
+function primes(isPrime, n) {\n\
+  var i, count = 0, m = 10000<<n, size = m+31>>5;\n\
+\n\
+  for (i=0; i<size; i++) isPrime[i] = 0xffffffff;\n\
+\n\
+  for (i=2; i<m; i++)\n\
+    if (isPrime[i>>5] & 1<<(i&31)) {\n\
+      for (var j=i+i; j<m; j+=i)\n\
+        isPrime[j>>5] &= ~(1<<(j&31));\n\
+      count++;\n\
+    }\n\
+}\n\
+\n\
+function sieve() {\n\
+    for (var i = 4; i <= 4; i++) {\n\
+        var isPrime = new Array((10000<<i)+31>>5);\n\
+        primes(isPrime, i);\n\
+    }\n\
+}\n\
+\n\
+sieve();\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider controlflow-recursive</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>controlflow-recursive</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// The Computer Language Shootout\n\
+// http://shootout.alioth.debian.org/\n\
+// contributed by Isaac Gouy\n\
+\n\
+function ack(m,n){\n\
+   if (m==0) { return n+1; }\n\
+   if (n==0) { return ack(m-1,1); }\n\
+   return ack(m-1, ack(m,n-1) );\n\
+}\n\
+\n\
+function fib(n) {\n\
+    if (n < 2){ return 1; }\n\
+    return fib(n-2) + fib(n-1);\n\
+}\n\
+\n\
+function tak(x,y,z) {\n\
+    if (y >= x) return z;\n\
+    return tak(tak(x-1,y,z), tak(y-1,z,x), tak(z-1,x,y));\n\
+}\n\
+\n\
+for ( var i = 3; i <= 5; i++ ) {\n\
+    ack(3,i);\n\
+    fib(17.0+i);\n\
+    tak(3*i+3,2*i+2,i+1);\n\
+}\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider crypto-aes</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>crypto-aes</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\
+\n\
+/*\n\
+ * AES Cipher function: encrypt 'input' with Rijndael algorithm\n\
+ *\n\
+ *   takes   byte-array 'input' (16 bytes)\n\
+ *           2D byte-array key schedule 'w' (Nr+1 x Nb bytes)\n\
+ *\n\
+ *   applies Nr rounds (10/12/14) using key schedule w for 'add round key' stage\n\
+ *\n\
+ *   returns byte-array encrypted value (16 bytes)\n\
+ */\n\
+function Cipher(input, w) {    // main Cipher function [§5.1]\n\
+  var Nb = 4;               // block size (in words): no of columns in state (fixed at 4 for AES)\n\
+  var Nr = w.length/Nb - 1; // no of rounds: 10/12/14 for 128/192/256-bit keys\n\
+\n\
+  var state = [[],[],[],[]];  // initialise 4xNb byte-array 'state' with input [§3.4]\n\
+  for (var i=0; i<4*Nb; i++) state[i%4][Math.floor(i/4)] = input[i];\n\
+\n\
+  state = AddRoundKey(state, w, 0, Nb);\n\
+\n\
+  for (var round=1; round<Nr; round++) {\n\
+    state = SubBytes(state, Nb);\n\
+    state = ShiftRows(state, Nb);\n\
+    state = MixColumns(state, Nb);\n\
+    state = AddRoundKey(state, w, round, Nb);\n\
+  }\n\
+\n\
+  state = SubBytes(state, Nb);\n\
+  state = ShiftRows(state, Nb);\n\
+  state = AddRoundKey(state, w, Nr, Nb);\n\
+\n\
+  var output = new Array(4*Nb);  // convert state to 1-d array before returning [§3.4]\n\
+  for (var i=0; i<4*Nb; i++) output[i] = state[i%4][Math.floor(i/4)];\n\
+  return output;\n\
+}\n\
+\n\
+\n\
+function SubBytes(s, Nb) {    // apply SBox to state S [§5.1.1]\n\
+  for (var r=0; r<4; r++) {\n\
+    for (var c=0; c<Nb; c++) s[r][c] = Sbox[s[r][c]];\n\
+  }\n\
+  return s;\n\
+}\n\
+\n\
+\n\
+function ShiftRows(s, Nb) {    // shift row r of state S left by r bytes [§5.1.2]\n\
+  var t = new Array(4);\n\
+  for (var r=1; r<4; r++) {\n\
+    for (var c=0; c<4; c++) t[c] = s[r][(c+r)%Nb];  // shift into temp copy\n\
+    for (var c=0; c<4; c++) s[r][c] = t[c];         // and copy back\n\
+  }          // note that this will work for Nb=4,5,6, but not 7,8 (always 4 for AES):\n\
+  return s;  // see fp.gladman.plus.com/cryptography_technology/rijndael/aes.spec.311.pdf \n\
+}\n\
+\n\
+\n\
+function MixColumns(s, Nb) {   // combine bytes of each col of state S [§5.1.3]\n\
+  for (var c=0; c<4; c++) {\n\
+    var a = new Array(4);  // 'a' is a copy of the current column from 's'\n\
+    var b = new Array(4);  // 'b' is a•{02} in GF(2^8)\n\
+    for (var i=0; i<4; i++) {\n\
+      a[i] = s[i][c];\n\
+      b[i] = s[i][c]&0x80 ? s[i][c]<<1 ^ 0x011b : s[i][c]<<1;\n\
+    }\n\
+    // a[n] ^ b[n] is a•{03} in GF(2^8)\n\
+    s[0][c] = b[0] ^ a[1] ^ b[1] ^ a[2] ^ a[3]; // 2*a0 + 3*a1 + a2 + a3\n\
+    s[1][c] = a[0] ^ b[1] ^ a[2] ^ b[2] ^ a[3]; // a0 * 2*a1 + 3*a2 + a3\n\
+    s[2][c] = a[0] ^ a[1] ^ b[2] ^ a[3] ^ b[3]; // a0 + a1 + 2*a2 + 3*a3\n\
+    s[3][c] = a[0] ^ b[0] ^ a[1] ^ a[2] ^ b[3]; // 3*a0 + a1 + a2 + 2*a3\n\
+  }\n\
+  return s;\n\
+}\n\
+\n\
+\n\
+function AddRoundKey(state, w, rnd, Nb) {  // xor Round Key into state S [§5.1.4]\n\
+  for (var r=0; r<4; r++) {\n\
+    for (var c=0; c<Nb; c++) state[r][c] ^= w[rnd*4+c][r];\n\
+  }\n\
+  return state;\n\
+}\n\
+\n\
+\n\
+function KeyExpansion(key) {  // generate Key Schedule (byte-array Nr+1 x Nb) from Key [§5.2]\n\
+  var Nb = 4;            // block size (in words): no of columns in state (fixed at 4 for AES)\n\
+  var Nk = key.length/4  // key length (in words): 4/6/8 for 128/192/256-bit keys\n\
+  var Nr = Nk + 6;       // no of rounds: 10/12/14 for 128/192/256-bit keys\n\
+\n\
+  var w = new Array(Nb*(Nr+1));\n\
+  var temp = new Array(4);\n\
+\n\
+  for (var i=0; i<Nk; i++) {\n\
+    var r = [key[4*i], key[4*i+1], key[4*i+2], key[4*i+3]];\n\
+    w[i] = r;\n\
+  }\n\
+\n\
+  for (var i=Nk; i<(Nb*(Nr+1)); i++) {\n\
+    w[i] = new Array(4);\n\
+    for (var t=0; t<4; t++) temp[t] = w[i-1][t];\n\
+    if (i % Nk == 0) {\n\
+      temp = SubWord(RotWord(temp));\n\
+      for (var t=0; t<4; t++) temp[t] ^= Rcon[i/Nk][t];\n\
+    } else if (Nk > 6 && i%Nk == 4) {\n\
+      temp = SubWord(temp);\n\
+    }\n\
+    for (var t=0; t<4; t++) w[i][t] = w[i-Nk][t] ^ temp[t];\n\
+  }\n\
+\n\
+  return w;\n\
+}\n\
+\n\
+function SubWord(w) {    // apply SBox to 4-byte word w\n\
+  for (var i=0; i<4; i++) w[i] = Sbox[w[i]];\n\
+  return w;\n\
+}\n\
+\n\
+function RotWord(w) {    // rotate 4-byte word w left by one byte\n\
+  w[4] = w[0];\n\
+  for (var i=0; i<4; i++) w[i] = w[i+1];\n\
+  return w;\n\
+}\n\
+\n\
+\n\
+// Sbox is pre-computed multiplicative inverse in GF(2^8) used in SubBytes and KeyExpansion [§5.1.1]\n\
+var Sbox =  [0x63,0x7c,0x77,0x7b,0xf2,0x6b,0x6f,0xc5,0x30,0x01,0x67,0x2b,0xfe,0xd7,0xab,0x76,\n\
+             0xca,0x82,0xc9,0x7d,0xfa,0x59,0x47,0xf0,0xad,0xd4,0xa2,0xaf,0x9c,0xa4,0x72,0xc0,\n\
+             0xb7,0xfd,0x93,0x26,0x36,0x3f,0xf7,0xcc,0x34,0xa5,0xe5,0xf1,0x71,0xd8,0x31,0x15,\n\
+             0x04,0xc7,0x23,0xc3,0x18,0x96,0x05,0x9a,0x07,0x12,0x80,0xe2,0xeb,0x27,0xb2,0x75,\n\
+             0x09,0x83,0x2c,0x1a,0x1b,0x6e,0x5a,0xa0,0x52,0x3b,0xd6,0xb3,0x29,0xe3,0x2f,0x84,\n\
+             0x53,0xd1,0x00,0xed,0x20,0xfc,0xb1,0x5b,0x6a,0xcb,0xbe,0x39,0x4a,0x4c,0x58,0xcf,\n\
+             0xd0,0xef,0xaa,0xfb,0x43,0x4d,0x33,0x85,0x45,0xf9,0x02,0x7f,0x50,0x3c,0x9f,0xa8,\n\
+             0x51,0xa3,0x40,0x8f,0x92,0x9d,0x38,0xf5,0xbc,0xb6,0xda,0x21,0x10,0xff,0xf3,0xd2,\n\
+             0xcd,0x0c,0x13,0xec,0x5f,0x97,0x44,0x17,0xc4,0xa7,0x7e,0x3d,0x64,0x5d,0x19,0x73,\n\
+             0x60,0x81,0x4f,0xdc,0x22,0x2a,0x90,0x88,0x46,0xee,0xb8,0x14,0xde,0x5e,0x0b,0xdb,\n\
+             0xe0,0x32,0x3a,0x0a,0x49,0x06,0x24,0x5c,0xc2,0xd3,0xac,0x62,0x91,0x95,0xe4,0x79,\n\
+             0xe7,0xc8,0x37,0x6d,0x8d,0xd5,0x4e,0xa9,0x6c,0x56,0xf4,0xea,0x65,0x7a,0xae,0x08,\n\
+             0xba,0x78,0x25,0x2e,0x1c,0xa6,0xb4,0xc6,0xe8,0xdd,0x74,0x1f,0x4b,0xbd,0x8b,0x8a,\n\
+             0x70,0x3e,0xb5,0x66,0x48,0x03,0xf6,0x0e,0x61,0x35,0x57,0xb9,0x86,0xc1,0x1d,0x9e,\n\
+             0xe1,0xf8,0x98,0x11,0x69,0xd9,0x8e,0x94,0x9b,0x1e,0x87,0xe9,0xce,0x55,0x28,0xdf,\n\
+             0x8c,0xa1,0x89,0x0d,0xbf,0xe6,0x42,0x68,0x41,0x99,0x2d,0x0f,0xb0,0x54,0xbb,0x16];\n\
+\n\
+// Rcon is Round Constant used for the Key Expansion [1st col is 2^(r-1) in GF(2^8)] [§5.2]\n\
+var Rcon = [ [0x00, 0x00, 0x00, 0x00],\n\
+             [0x01, 0x00, 0x00, 0x00],\n\
+             [0x02, 0x00, 0x00, 0x00],\n\
+             [0x04, 0x00, 0x00, 0x00],\n\
+             [0x08, 0x00, 0x00, 0x00],\n\
+             [0x10, 0x00, 0x00, 0x00],\n\
+             [0x20, 0x00, 0x00, 0x00],\n\
+             [0x40, 0x00, 0x00, 0x00],\n\
+             [0x80, 0x00, 0x00, 0x00],\n\
+             [0x1b, 0x00, 0x00, 0x00],\n\
+             [0x36, 0x00, 0x00, 0x00] ]; \n\
+\n\
+\n\
+/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\
+\n\
+/* \n\
+ * Use AES to encrypt 'plaintext' with 'password' using 'nBits' key, in 'Counter' mode of operation\n\
+ *                           - see http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf\n\
+ *   for each block\n\
+ *   - outputblock = cipher(counter, key)\n\
+ *   - cipherblock = plaintext xor outputblock\n\
+ */\n\
+function AESEncryptCtr(plaintext, password, nBits) {\n\
+  if (!(nBits==128 || nBits==192 || nBits==256)) return '';  // standard allows 128/192/256 bit keys\n\
+\n\
+  // for this example script, generate the key by applying Cipher to 1st 16/24/32 chars of password; \n\
+  // for real-world applications, a more secure approach would be to hash the password e.g. with SHA-1\n\
+  var nBytes = nBits/8;  // no bytes in key\n\
+  var pwBytes = new Array(nBytes);\n\
+  for (var i=0; i<nBytes; i++) pwBytes[i] = password.charCodeAt(i) & 0xff;\n\
+  var key = Cipher(pwBytes, KeyExpansion(pwBytes));\n\
+  key = key.concat(key.slice(0, nBytes-16));  // key is now 16/24/32 bytes long\n\
+\n\
+  // initialise counter block (NIST SP800-38A §B.2): millisecond time-stamp for nonce in 1st 8 bytes,\n\
+  // block counter in 2nd 8 bytes\n\
+  var blockSize = 16;  // block size fixed at 16 bytes / 128 bits (Nb=4) for AES\n\
+  var counterBlock = new Array(blockSize);  // block size fixed at 16 bytes / 128 bits (Nb=4) for AES\n\
+  var nonce = (new Date()).getTime();  // milliseconds since 1-Jan-1970\n\
+\n\
+  // encode nonce in two stages to cater for JavaScript 32-bit limit on bitwise ops\n\
+  for (var i=0; i<4; i++) counterBlock[i] = (nonce >>> i*8) & 0xff;\n\
+  for (var i=0; i<4; i++) counterBlock[i+4] = (nonce/0x100000000 >>> i*8) & 0xff; \n\
+\n\
+  // generate key schedule - an expansion of the key into distinct Key Rounds for each round\n\
+  var keySchedule = KeyExpansion(key);\n\
+\n\
+  var blockCount = Math.ceil(plaintext.length/blockSize);\n\
+  var ciphertext = new Array(blockCount);  // ciphertext as array of strings\n\
+  \n\
+  for (var b=0; b<blockCount; b++) {\n\
+    // set counter (block #) in last 8 bytes of counter block (leaving nonce in 1st 8 bytes)\n\
+    // again done in two stages for 32-bit ops\n\
+    for (var c=0; c<4; c++) counterBlock[15-c] = (b >>> c*8) & 0xff;\n\
+    for (var c=0; c<4; c++) counterBlock[15-c-4] = (b/0x100000000 >>> c*8)\n\
+\n\
+    var cipherCntr = Cipher(counterBlock, keySchedule);  // -- encrypt counter block --\n\
+    \n\
+    // calculate length of final block:\n\
+    var blockLength = b<blockCount-1 ? blockSize : (plaintext.length-1)%blockSize+1;\n\
+\n\
+    var ct = '';\n\
+    for (var i=0; i<blockLength; i++) {  // -- xor plaintext with ciphered counter byte-by-byte --\n\
+      var plaintextByte = plaintext.charCodeAt(b*blockSize+i);\n\
+      var cipherByte = plaintextByte ^ cipherCntr[i];\n\
+      ct += String.fromCharCode(cipherByte);\n\
+    }\n\
+    // ct is now ciphertext for this block\n\
+\n\
+    ciphertext[b] = escCtrlChars(ct);  // escape troublesome characters in ciphertext\n\
+  }\n\
+\n\
+  // convert the nonce to a string to go on the front of the ciphertext\n\
+  var ctrTxt = '';\n\
+  for (var i=0; i<8; i++) ctrTxt += String.fromCharCode(counterBlock[i]);\n\
+  ctrTxt = escCtrlChars(ctrTxt);\n\
+\n\
+  // use '-' to separate blocks, use Array.join to concatenate arrays of strings for efficiency\n\
+  return ctrTxt + '-' + ciphertext.join('-');\n\
+}\n\
+\n\
+\n\
+/* \n\
+ * Use AES to decrypt 'ciphertext' with 'password' using 'nBits' key, in Counter mode of operation\n\
+ *\n\
+ *   for each block\n\
+ *   - outputblock = cipher(counter, key)\n\
+ *   - cipherblock = plaintext xor outputblock\n\
+ */\n\
+function AESDecryptCtr(ciphertext, password, nBits) {\n\
+  if (!(nBits==128 || nBits==192 || nBits==256)) return '';  // standard allows 128/192/256 bit keys\n\
+\n\
+  var nBytes = nBits/8;  // no bytes in key\n\
+  var pwBytes = new Array(nBytes);\n\
+  for (var i=0; i<nBytes; i++) pwBytes[i] = password.charCodeAt(i) & 0xff;\n\
+  var pwKeySchedule = KeyExpansion(pwBytes);\n\
+  var key = Cipher(pwBytes, pwKeySchedule);\n\
+  key = key.concat(key.slice(0, nBytes-16));  // key is now 16/24/32 bytes long\n\
+\n\
+  var keySchedule = KeyExpansion(key);\n\
+\n\
+  ciphertext = ciphertext.split('-');  // split ciphertext into array of block-length strings \n\
+\n\
+  // recover nonce from 1st element of ciphertext\n\
+  var blockSize = 16;  // block size fixed at 16 bytes / 128 bits (Nb=4) for AES\n\
+  var counterBlock = new Array(blockSize);\n\
+  var ctrTxt = unescCtrlChars(ciphertext[0]);\n\
+  for (var i=0; i<8; i++) counterBlock[i] = ctrTxt.charCodeAt(i);\n\
+\n\
+  var plaintext = new Array(ciphertext.length-1);\n\
+\n\
+  for (var b=1; b<ciphertext.length; b++) {\n\
+    // set counter (block #) in last 8 bytes of counter block (leaving nonce in 1st 8 bytes)\n\
+    for (var c=0; c<4; c++) counterBlock[15-c] = ((b-1) >>> c*8) & 0xff;\n\
+    for (var c=0; c<4; c++) counterBlock[15-c-4] = ((b/0x100000000-1) >>> c*8) & 0xff;\n\
+\n\
+    var cipherCntr = Cipher(counterBlock, keySchedule);  // encrypt counter block\n\
+\n\
+    ciphertext[b] = unescCtrlChars(ciphertext[b]);\n\
+\n\
+    var pt = '';\n\
+    for (var i=0; i<ciphertext[b].length; i++) {\n\
+      // -- xor plaintext with ciphered counter byte-by-byte --\n\
+      var ciphertextByte = ciphertext[b].charCodeAt(i);\n\
+      var plaintextByte = ciphertextByte ^ cipherCntr[i];\n\
+      pt += String.fromCharCode(plaintextByte);\n\
+    }\n\
+    // pt is now plaintext for this block\n\
+\n\
+    plaintext[b-1] = pt;  // b-1 'cos no initial nonce block in plaintext\n\
+  }\n\
+\n\
+  return plaintext.join('');\n\
+}\n\
+\n\
+/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\
+\n\
+function escCtrlChars(str) {  // escape control chars which might cause problems handling ciphertext\n\
+  return str.replace(/[\\0\\t\\n\\v\\f\\r\\xa0'\"!-]/g, function(c) { return '!' + c.charCodeAt(0) + '!'; });\n\
+}  // \\xa0 to cater for bug in Firefox; include '-' to leave it free for use as a block marker\n\
+\n\
+function unescCtrlChars(str) {  // unescape potentially problematic control characters\n\
+  return str.replace(/!\\d\\d?\\d?!/g, function(c) { return String.fromCharCode(c.slice(1,-1)); });\n\
+}\n\
+/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\
+\n\
+/*\n\
+ * if escCtrlChars()/unescCtrlChars() still gives problems, use encodeBase64()/decodeBase64() instead\n\
+ */\n\
+var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\
+\n\
+function encodeBase64(str) {  // http://tools.ietf.org/html/rfc4648\n\
+   var o1, o2, o3, h1, h2, h3, h4, bits, i=0, enc='';\n\
+   \n\
+   str = encodeUTF8(str);  // encode multi-byte chars into UTF-8 for byte-array\n\
+\n\
+   do {  // pack three octets into four hexets\n\
+      o1 = str.charCodeAt(i++);\n\
+      o2 = str.charCodeAt(i++);\n\
+      o3 = str.charCodeAt(i++);\n\
+      \n\
+      bits = o1<<16 | o2<<8 | o3;\n\
+      \n\
+      h1 = bits>>18 & 0x3f;\n\
+      h2 = bits>>12 & 0x3f;\n\
+      h3 = bits>>6 & 0x3f;\n\
+      h4 = bits & 0x3f;\n\
+      \n\
+      // end of string? index to '=' in b64\n\
+      if (isNaN(o3)) h4 = 64;\n\
+      if (isNaN(o2)) h3 = 64;\n\
+      \n\
+      // use hexets to index into b64, and append result to encoded string\n\
+      enc += b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n\
+   } while (i < str.length);\n\
+   \n\
+   return enc;\n\
+}\n\
+\n\
+function decodeBase64(str) {\n\
+   var o1, o2, o3, h1, h2, h3, h4, bits, i=0, enc='';\n\
+\n\
+   do {  // unpack four hexets into three octets using index points in b64\n\
+      h1 = b64.indexOf(str.charAt(i++));\n\
+      h2 = b64.indexOf(str.charAt(i++));\n\
+      h3 = b64.indexOf(str.charAt(i++));\n\
+      h4 = b64.indexOf(str.charAt(i++));\n\
+      \n\
+      bits = h1<<18 | h2<<12 | h3<<6 | h4;\n\
+      \n\
+      o1 = bits>>16 & 0xff;\n\
+      o2 = bits>>8 & 0xff;\n\
+      o3 = bits & 0xff;\n\
+      \n\
+      if (h3 == 64)      enc += String.fromCharCode(o1);\n\
+      else if (h4 == 64) enc += String.fromCharCode(o1, o2);\n\
+      else               enc += String.fromCharCode(o1, o2, o3);\n\
+   } while (i < str.length);\n\
+\n\
+   return decodeUTF8(enc);  // decode UTF-8 byte-array back to Unicode\n\
+}\n\
+\n\
+function encodeUTF8(str) {  // encode multi-byte string into utf-8 multiple single-byte characters \n\
+  str = str.replace(\n\
+      /[\\u0080-\\u07ff]/g,  // U+0080 - U+07FF = 2-byte chars\n\
+      function(c) { \n\
+        var cc = c.charCodeAt(0);\n\
+        return String.fromCharCode(0xc0 | cc>>6, 0x80 | cc&0x3f); }\n\
+    );\n\
+  str = str.replace(\n\
+      /[\\u0800-\\uffff]/g,  // U+0800 - U+FFFF = 3-byte chars\n\
+      function(c) { \n\
+        var cc = c.charCodeAt(0); \n\
+        return String.fromCharCode(0xe0 | cc>>12, 0x80 | cc>>6&0x3F, 0x80 | cc&0x3f); }\n\
+    );\n\
+  return str;\n\
+}\n\
+\n\
+function decodeUTF8(str) {  // decode utf-8 encoded string back into multi-byte characters\n\
+  str = str.replace(\n\
+      /[\\u00c0-\\u00df][\\u0080-\\u00bf]/g,                 // 2-byte chars\n\
+      function(c) { \n\
+        var cc = (c.charCodeAt(0)&0x1f)<<6 | c.charCodeAt(1)&0x3f;\n\
+        return String.fromCharCode(cc); }\n\
+    );\n\
+  str = str.replace(\n\
+      /[\\u00e0-\\u00ef][\\u0080-\\u00bf][\\u0080-\\u00bf]/g,  // 3-byte chars\n\
+      function(c) { \n\
+        var cc = (c.charCodeAt(0)&0x0f)<<12 | (c.charCodeAt(1)&0x3f<<6) | c.charCodeAt(2)&0x3f; \n\
+        return String.fromCharCode(cc); }\n\
+    );\n\
+  return str;\n\
+}\n\
+\n\
+\n\
+function byteArrayToHexStr(b) {  // convert byte array to hex string for displaying test vectors\n\
+  var s = '';\n\
+  for (var i=0; i<b.length; i++) s += b[i].toString(16) + ' ';\n\
+  return s;\n\
+}\n\
+\n\
+/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\
+\n\
+\n\
+var plainText = \"ROMEO: But, soft! what light through yonder window breaks?\\n\\\n\
+It is the east, and Juliet is the sun.\\n\\\n\
+Arise, fair sun, and kill the envious moon,\\n\\\n\
+Who is already sick and pale with grief,\\n\\\n\
+That thou her maid art far more fair than she:\\n\\\n\
+Be not her maid, since she is envious;\\n\\\n\
+Her vestal livery is but sick and green\\n\\\n\
+And none but fools do wear it; cast it off.\\n\\\n\
+It is my lady, O, it is my love!\\n\\\n\
+O, that she knew she were!\\n\\\n\
+She speaks yet she says nothing: what of that?\\n\\\n\
+Her eye discourses; I will answer it.\\n\\\n\
+I am too bold, 'tis not to me she speaks:\\n\\\n\
+Two of the fairest stars in all the heaven,\\n\\\n\
+Having some business, do entreat her eyes\\n\\\n\
+To twinkle in their spheres till they return.\\n\\\n\
+What if her eyes were there, they in her head?\\n\\\n\
+The brightness of her cheek would shame those stars,\\n\\\n\
+As daylight doth a lamp; her eyes in heaven\\n\\\n\
+Would through the airy region stream so bright\\n\\\n\
+That birds would sing and think it were not night.\\n\\\n\
+See, how she leans her cheek upon her hand!\\n\\\n\
+O, that I were a glove upon that hand,\\n\\\n\
+That I might touch that cheek!\\n\\\n\
+JULIET: Ay me!\\n\\\n\
+ROMEO: She speaks:\\n\\\n\
+O, speak again, bright angel! for thou art\\n\\\n\
+As glorious to this night, being o'er my head\\n\\\n\
+As is a winged messenger of heaven\\n\\\n\
+Unto the white-upturned wondering eyes\\n\\\n\
+Of mortals that fall back to gaze on him\\n\\\n\
+When he bestrides the lazy-pacing clouds\\n\\\n\
+And sails upon the bosom of the air.\";\n\
+\n\
+var password = \"O Romeo, Romeo! wherefore art thou Romeo?\";\n\
+\n\
+var cipherText = AESEncryptCtr(plainText, password, 256);\n\
+var decryptedText = AESDecryptCtr(cipherText, password, 256);\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider crypto-md5</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>crypto-md5</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/*\n\
+ * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n\
+ * Digest Algorithm, as defined in RFC 1321.\n\
+ * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n\
+ * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n\
+ * Distributed under the BSD License\n\
+ * See http://pajhome.org.uk/crypt/md5 for more info.\n\
+ */\n\
+\n\
+/*\n\
+ * Configurable variables. You may need to tweak these to be compatible with\n\
+ * the server-side, but the defaults work in most cases.\n\
+ */\n\
+var hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */\n\
+var b64pad  = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\n\
+var chrsz   = 8;  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\
+\n\
+/*\n\
+ * These are the functions you'll usually want to call\n\
+ * They take string arguments and return either hex or base-64 encoded strings\n\
+ */\n\
+function hex_md5(s){ return binl2hex(core_md5(str2binl(s), s.length * chrsz));}\n\
+function b64_md5(s){ return binl2b64(core_md5(str2binl(s), s.length * chrsz));}\n\
+function str_md5(s){ return binl2str(core_md5(str2binl(s), s.length * chrsz));}\n\
+function hex_hmac_md5(key, data) { return binl2hex(core_hmac_md5(key, data)); }\n\
+function b64_hmac_md5(key, data) { return binl2b64(core_hmac_md5(key, data)); }\n\
+function str_hmac_md5(key, data) { return binl2str(core_hmac_md5(key, data)); }\n\
+\n\
+/*\n\
+ * Perform a simple self-test to see if the VM is working\n\
+ */\n\
+function md5_vm_test()\n\
+{\n\
+  return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";\n\
+}\n\
+\n\
+/*\n\
+ * Calculate the MD5 of an array of little-endian words, and a bit length\n\
+ */\n\
+function core_md5(x, len)\n\
+{\n\
+  /* append padding */\n\
+  x[len >> 5] |= 0x80 << ((len) % 32);\n\
+  x[(((len + 64) >>> 9) << 4) + 14] = len;\n\
+\n\
+  var a =  1732584193;\n\
+  var b = -271733879;\n\
+  var c = -1732584194;\n\
+  var d =  271733878;\n\
+\n\
+  for(var i = 0; i < x.length; i += 16)\n\
+  {\n\
+    var olda = a;\n\
+    var oldb = b;\n\
+    var oldc = c;\n\
+    var oldd = d;\n\
+\n\
+    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n\
+    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n\
+    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n\
+    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n\
+    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n\
+    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n\
+    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n\
+    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n\
+    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n\
+    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n\
+    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);\n\
+    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n\
+    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n\
+    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n\
+    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n\
+    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\
+\n\
+    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n\
+    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n\
+    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n\
+    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n\
+    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n\
+    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n\
+    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n\
+    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n\
+    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n\
+    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n\
+    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n\
+    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n\
+    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n\
+    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n\
+    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n\
+    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\
+\n\
+    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n\
+    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n\
+    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n\
+    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n\
+    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n\
+    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n\
+    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n\
+    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n\
+    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n\
+    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n\
+    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n\
+    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n\
+    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n\
+    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n\
+    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n\
+    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\
+\n\
+    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n\
+    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n\
+    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n\
+    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n\
+    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n\
+    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n\
+    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n\
+    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n\
+    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n\
+    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n\
+    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n\
+    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n\
+    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n\
+    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n\
+    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n\
+    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\
+\n\
+    a = safe_add(a, olda);\n\
+    b = safe_add(b, oldb);\n\
+    c = safe_add(c, oldc);\n\
+    d = safe_add(d, oldd);\n\
+  }\n\
+  return Array(a, b, c, d);\n\
+\n\
+}\n\
+\n\
+/*\n\
+ * These functions implement the four basic operations the algorithm uses.\n\
+ */\n\
+function md5_cmn(q, a, b, x, s, t)\n\
+{\n\
+  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);\n\
+}\n\
+function md5_ff(a, b, c, d, x, s, t)\n\
+{\n\
+  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n\
+}\n\
+function md5_gg(a, b, c, d, x, s, t)\n\
+{\n\
+  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n\
+}\n\
+function md5_hh(a, b, c, d, x, s, t)\n\
+{\n\
+  return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n\
+}\n\
+function md5_ii(a, b, c, d, x, s, t)\n\
+{\n\
+  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n\
+}\n\
+\n\
+/*\n\
+ * Calculate the HMAC-MD5, of a key and some data\n\
+ */\n\
+function core_hmac_md5(key, data)\n\
+{\n\
+  var bkey = str2binl(key);\n\
+  if(bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz);\n\
+\n\
+  var ipad = Array(16), opad = Array(16);\n\
+  for(var i = 0; i < 16; i++)\n\
+  {\n\
+    ipad[i] = bkey[i] ^ 0x36363636;\n\
+    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n\
+  }\n\
+\n\
+  var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);\n\
+  return core_md5(opad.concat(hash), 512 + 128);\n\
+}\n\
+\n\
+/*\n\
+ * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n\
+ * to work around bugs in some JS interpreters.\n\
+ */\n\
+function safe_add(x, y)\n\
+{\n\
+  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n\
+  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\
+  return (msw << 16) | (lsw & 0xFFFF);\n\
+}\n\
+\n\
+/*\n\
+ * Bitwise rotate a 32-bit number to the left.\n\
+ */\n\
+function bit_rol(num, cnt)\n\
+{\n\
+  return (num << cnt) | (num >>> (32 - cnt));\n\
+}\n\
+\n\
+/*\n\
+ * Convert a string to an array of little-endian words\n\
+ * If chrsz is ASCII, characters >255 have their hi-byte silently ignored.\n\
+ */\n\
+function str2binl(str)\n\
+{\n\
+  var bin = Array();\n\
+  var mask = (1 << chrsz) - 1;\n\
+  for(var i = 0; i < str.length * chrsz; i += chrsz)\n\
+    bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (i%32);\n\
+  return bin;\n\
+}\n\
+\n\
+/*\n\
+ * Convert an array of little-endian words to a string\n\
+ */\n\
+function binl2str(bin)\n\
+{\n\
+  var str = \"\";\n\
+  var mask = (1 << chrsz) - 1;\n\
+  for(var i = 0; i < bin.length * 32; i += chrsz)\n\
+    str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);\n\
+  return str;\n\
+}\n\
+\n\
+/*\n\
+ * Convert an array of little-endian words to a hex string.\n\
+ */\n\
+function binl2hex(binarray)\n\
+{\n\
+  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n\
+  var str = \"\";\n\
+  for(var i = 0; i < binarray.length * 4; i++)\n\
+  {\n\
+    str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n\
+           hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n\
+  }\n\
+  return str;\n\
+}\n\
+\n\
+/*\n\
+ * Convert an array of little-endian words to a base-64 string\n\
+ */\n\
+function binl2b64(binarray)\n\
+{\n\
+  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\
+  var str = \"\";\n\
+  for(var i = 0; i < binarray.length * 4; i += 3)\n\
+  {\n\
+    var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)\n\
+                | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )\n\
+                |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);\n\
+    for(var j = 0; j < 4; j++)\n\
+    {\n\
+      if(i * 8 + j * 6 > binarray.length * 32) str += b64pad;\n\
+      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n\
+    }\n\
+  }\n\
+  return str;\n\
+}\n\
+\n\
+var plainText = \"Rebellious subjects, enemies to peace,\\n\\\n\
+Profaners of this neighbour-stained steel,--\\n\\\n\
+Will they not hear? What, ho! you men, you beasts,\\n\\\n\
+That quench the fire of your pernicious rage\\n\\\n\
+With purple fountains issuing from your veins,\\n\\\n\
+On pain of torture, from those bloody hands\\n\\\n\
+Throw your mistemper'd weapons to the ground,\\n\\\n\
+And hear the sentence of your moved prince.\\n\\\n\
+Three civil brawls, bred of an airy word,\\n\\\n\
+By thee, old Capulet, and Montague,\\n\\\n\
+Have thrice disturb'd the quiet of our streets,\\n\\\n\
+And made Verona's ancient citizens\\n\\\n\
+Cast by their grave beseeming ornaments,\\n\\\n\
+To wield old partisans, in hands as old,\\n\\\n\
+Canker'd with peace, to part your canker'd hate:\\n\\\n\
+If ever you disturb our streets again,\\n\\\n\
+Your lives shall pay the forfeit of the peace.\\n\\\n\
+For this time, all the rest depart away:\\n\\\n\
+You Capulet; shall go along with me:\\n\\\n\
+And, Montague, come you this afternoon,\\n\\\n\
+To know our further pleasure in this case,\\n\\\n\
+To old Free-town, our common judgment-place.\\n\\\n\
+Once more, on pain of death, all men depart.\"\n\
+\n\
+for (var i = 0; i <4; i++) {\n\
+    plainText += plainText;\n\
+}\n\
+\n\
+var md5Output = hex_md5(plainText);\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider crypto-sha1</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>crypto-sha1</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/*\n\
+ * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n\
+ * in FIPS PUB 180-1\n\
+ * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n\
+ * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n\
+ * Distributed under the BSD License\n\
+ * See http://pajhome.org.uk/crypt/md5 for details.\n\
+ */\n\
+\n\
+/*\n\
+ * Configurable variables. You may need to tweak these to be compatible with\n\
+ * the server-side, but the defaults work in most cases.\n\
+ */\n\
+var hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */\n\
+var b64pad  = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\n\
+var chrsz   = 8;  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\
+\n\
+/*\n\
+ * These are the functions you'll usually want to call\n\
+ * They take string arguments and return either hex or base-64 encoded strings\n\
+ */\n\
+function hex_sha1(s){return binb2hex(core_sha1(str2binb(s),s.length * chrsz));}\n\
+function b64_sha1(s){return binb2b64(core_sha1(str2binb(s),s.length * chrsz));}\n\
+function str_sha1(s){return binb2str(core_sha1(str2binb(s),s.length * chrsz));}\n\
+function hex_hmac_sha1(key, data){ return binb2hex(core_hmac_sha1(key, data));}\n\
+function b64_hmac_sha1(key, data){ return binb2b64(core_hmac_sha1(key, data));}\n\
+function str_hmac_sha1(key, data){ return binb2str(core_hmac_sha1(key, data));}\n\
+\n\
+/*\n\
+ * Perform a simple self-test to see if the VM is working\n\
+ */\n\
+function sha1_vm_test()\n\
+{\n\
+  return hex_sha1(\"abc\") == \"a9993e364706816aba3e25717850c26c9cd0d89d\";\n\
+}\n\
+\n\
+/*\n\
+ * Calculate the SHA-1 of an array of big-endian words, and a bit length\n\
+ */\n\
+function core_sha1(x, len)\n\
+{\n\
+  /* append padding */\n\
+  x[len >> 5] |= 0x80 << (24 - len % 32);\n\
+  x[((len + 64 >> 9) << 4) + 15] = len;\n\
+\n\
+  var w = Array(80);\n\
+  var a =  1732584193;\n\
+  var b = -271733879;\n\
+  var c = -1732584194;\n\
+  var d =  271733878;\n\
+  var e = -1009589776;\n\
+\n\
+  for(var i = 0; i < x.length; i += 16)\n\
+  {\n\
+    var olda = a;\n\
+    var oldb = b;\n\
+    var oldc = c;\n\
+    var oldd = d;\n\
+    var olde = e;\n\
+\n\
+    for(var j = 0; j < 80; j++)\n\
+    {\n\
+      if(j < 16) w[j] = x[i + j];\n\
+      else w[j] = rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1);\n\
+      var t = safe_add(safe_add(rol(a, 5), sha1_ft(j, b, c, d)),\n\
+                       safe_add(safe_add(e, w[j]), sha1_kt(j)));\n\
+      e = d;\n\
+      d = c;\n\
+      c = rol(b, 30);\n\
+      b = a;\n\
+      a = t;\n\
+    }\n\
+\n\
+    a = safe_add(a, olda);\n\
+    b = safe_add(b, oldb);\n\
+    c = safe_add(c, oldc);\n\
+    d = safe_add(d, oldd);\n\
+    e = safe_add(e, olde);\n\
+  }\n\
+  return Array(a, b, c, d, e);\n\
+\n\
+}\n\
+\n\
+/*\n\
+ * Perform the appropriate triplet combination function for the current\n\
+ * iteration\n\
+ */\n\
+function sha1_ft(t, b, c, d)\n\
+{\n\
+  if(t < 20) return (b & c) | ((~b) & d);\n\
+  if(t < 40) return b ^ c ^ d;\n\
+  if(t < 60) return (b & c) | (b & d) | (c & d);\n\
+  return b ^ c ^ d;\n\
+}\n\
+\n\
+/*\n\
+ * Determine the appropriate additive constant for the current iteration\n\
+ */\n\
+function sha1_kt(t)\n\
+{\n\
+  return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :\n\
+         (t < 60) ? -1894007588 : -899497514;\n\
+}\n\
+\n\
+/*\n\
+ * Calculate the HMAC-SHA1 of a key and some data\n\
+ */\n\
+function core_hmac_sha1(key, data)\n\
+{\n\
+  var bkey = str2binb(key);\n\
+  if(bkey.length > 16) bkey = core_sha1(bkey, key.length * chrsz);\n\
+\n\
+  var ipad = Array(16), opad = Array(16);\n\
+  for(var i = 0; i < 16; i++)\n\
+  {\n\
+    ipad[i] = bkey[i] ^ 0x36363636;\n\
+    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n\
+  }\n\
+\n\
+  var hash = core_sha1(ipad.concat(str2binb(data)), 512 + data.length * chrsz);\n\
+  return core_sha1(opad.concat(hash), 512 + 160);\n\
+}\n\
+\n\
+/*\n\
+ * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n\
+ * to work around bugs in some JS interpreters.\n\
+ */\n\
+function safe_add(x, y)\n\
+{\n\
+  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n\
+  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\
+  return (msw << 16) | (lsw & 0xFFFF);\n\
+}\n\
+\n\
+/*\n\
+ * Bitwise rotate a 32-bit number to the left.\n\
+ */\n\
+function rol(num, cnt)\n\
+{\n\
+  return (num << cnt) | (num >>> (32 - cnt));\n\
+}\n\
+\n\
+/*\n\
+ * Convert an 8-bit or 16-bit string to an array of big-endian words\n\
+ * In 8-bit function, characters >255 have their hi-byte silently ignored.\n\
+ */\n\
+function str2binb(str)\n\
+{\n\
+  var bin = Array();\n\
+  var mask = (1 << chrsz) - 1;\n\
+  for(var i = 0; i < str.length * chrsz; i += chrsz)\n\
+    bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (32 - chrsz - i%32);\n\
+  return bin;\n\
+}\n\
+\n\
+/*\n\
+ * Convert an array of big-endian words to a string\n\
+ */\n\
+function binb2str(bin)\n\
+{\n\
+  var str = \"\";\n\
+  var mask = (1 << chrsz) - 1;\n\
+  for(var i = 0; i < bin.length * 32; i += chrsz)\n\
+    str += String.fromCharCode((bin[i>>5] >>> (32 - chrsz - i%32)) & mask);\n\
+  return str;\n\
+}\n\
+\n\
+/*\n\
+ * Convert an array of big-endian words to a hex string.\n\
+ */\n\
+function binb2hex(binarray)\n\
+{\n\
+  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n\
+  var str = \"\";\n\
+  for(var i = 0; i < binarray.length * 4; i++)\n\
+  {\n\
+    str += hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8+4)) & 0xF) +\n\
+           hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8  )) & 0xF);\n\
+  }\n\
+  return str;\n\
+}\n\
+\n\
+/*\n\
+ * Convert an array of big-endian words to a base-64 string\n\
+ */\n\
+function binb2b64(binarray)\n\
+{\n\
+  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\
+  var str = \"\";\n\
+  for(var i = 0; i < binarray.length * 4; i += 3)\n\
+  {\n\
+    var triplet = (((binarray[i   >> 2] >> 8 * (3 -  i   %4)) & 0xFF) << 16)\n\
+                | (((binarray[i+1 >> 2] >> 8 * (3 - (i+1)%4)) & 0xFF) << 8 )\n\
+                |  ((binarray[i+2 >> 2] >> 8 * (3 - (i+2)%4)) & 0xFF);\n\
+    for(var j = 0; j < 4; j++)\n\
+    {\n\
+      if(i * 8 + j * 6 > binarray.length * 32) str += b64pad;\n\
+      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n\
+    }\n\
+  }\n\
+  return str;\n\
+}\n\
+\n\
+\n\
+var plainText = \"Two households, both alike in dignity,\\n\\\n\
+In fair Verona, where we lay our scene,\\n\\\n\
+From ancient grudge break to new mutiny,\\n\\\n\
+Where civil blood makes civil hands unclean.\\n\\\n\
+From forth the fatal loins of these two foes\\n\\\n\
+A pair of star-cross'd lovers take their life;\\n\\\n\
+Whole misadventured piteous overthrows\\n\\\n\
+Do with their death bury their parents' strife.\\n\\\n\
+The fearful passage of their death-mark'd love,\\n\\\n\
+And the continuance of their parents' rage,\\n\\\n\
+Which, but their children's end, nought could remove,\\n\\\n\
+Is now the two hours' traffic of our stage;\\n\\\n\
+The which if you with patient ears attend,\\n\\\n\
+What here shall miss, our toil shall strive to mend.\";\n\
+\n\
+for (var i = 0; i <4; i++) {\n\
+    plainText += plainText;\n\
+}\n\
+\n\
+var sha1Output = hex_sha1(plainText);\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider date-format-tofte</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>date-format-tofte</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+function arrayExists(array, x) {\n\
+    for (var i = 0; i < array.length; i++) {\n\
+        if (array[i] == x) return true;\n\
+    }\n\
+    return false;\n\
+}\n\
+\n\
+Date.prototype.formatDate = function (input,time) {\n\
+    // formatDate :\n\
+    // a PHP date like function, for formatting date strings\n\
+    // See: http://www.php.net/date\n\
+    //\n\
+    // input : format string\n\
+    // time : epoch time (seconds, and optional)\n\
+    //\n\
+    // if time is not passed, formatting is based on \n\
+    // the current \"this\" date object's set time.\n\
+    //\n\
+    // supported:\n\
+    // a, A, B, d, D, F, g, G, h, H, i, j, l (lowercase L), L, \n\
+    // m, M, n, O, r, s, S, t, U, w, W, y, Y, z\n\
+    //\n\
+    // unsupported:\n\
+    // I (capital i), T, Z    \n\
+\n\
+    var switches =    [\"a\", \"A\", \"B\", \"d\", \"D\", \"F\", \"g\", \"G\", \"h\", \"H\", \n\
+                       \"i\", \"j\", \"l\", \"L\", \"m\", \"M\", \"n\", \"O\", \"r\", \"s\", \n\
+                       \"S\", \"t\", \"U\", \"w\", \"W\", \"y\", \"Y\", \"z\"];\n\
+    var daysLong =    [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \n\
+                       \"Thursday\", \"Friday\", \"Saturday\"];\n\
+    var daysShort =   [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \n\
+                       \"Thu\", \"Fri\", \"Sat\"];\n\
+    var monthsShort = [\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n\
+                       \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\",\n\
+                       \"Oct\", \"Nov\", \"Dec\"];\n\
+    var monthsLong =  [\"January\", \"February\", \"March\", \"April\",\n\
+                       \"May\", \"June\", \"July\", \"August\", \"September\",\n\
+                       \"October\", \"November\", \"December\"];\n\
+    var daysSuffix = [\"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", // 1st - 7th\n\
+                      \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", // 8th - 14th\n\
+                      \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"st\", // 15th - 21st\n\
+                      \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", // 22nd - 28th\n\
+                      \"th\", \"th\", \"st\"];                        // 29th - 31st\n\
+\n\
+    function a() {\n\
+        // Lowercase Ante meridiem and Post meridiem\n\
+        return self.getHours() > 11? \"pm\" : \"am\";\n\
+    }\n\
+    function A() {\n\
+        // Uppercase Ante meridiem and Post meridiem\n\
+        return self.getHours() > 11? \"PM\" : \"AM\";\n\
+    }\n\
+\n\
+    function B(){\n\
+        // Swatch internet time. code simply grabbed from ppk,\n\
+        // since I was feeling lazy:\n\
+        // http://www.xs4all.nl/~ppk/js/beat.html\n\
+        var off = (self.getTimezoneOffset() + 60)*60;\n\
+        var theSeconds = (self.getHours() * 3600) + \n\
+                         (self.getMinutes() * 60) + \n\
+                          self.getSeconds() + off;\n\
+        var beat = Math.floor(theSeconds/86.4);\n\
+        if (beat > 1000) beat -= 1000;\n\
+        if (beat < 0) beat += 1000;\n\
+        if ((\"\"+beat).length == 1) beat = \"00\"+beat;\n\
+        if ((\"\"+beat).length == 2) beat = \"0\"+beat;\n\
+        return beat;\n\
+    }\n\
+    \n\
+    function d() {\n\
+        // Day of the month, 2 digits with leading zeros\n\
+        return new String(self.getDate()).length == 1?\n\
+        \"0\"+self.getDate() : self.getDate();\n\
+    }\n\
+    function D() {\n\
+        // A textual representation of a day, three letters\n\
+        return daysShort[self.getDay()];\n\
+    }\n\
+    function F() {\n\
+        // A full textual representation of a month\n\
+        return monthsLong[self.getMonth()];\n\
+    }\n\
+    function g() {\n\
+        // 12-hour format of an hour without leading zeros\n\
+        return self.getHours() > 12? self.getHours()-12 : self.getHours();\n\
+    }\n\
+    function G() {\n\
+        // 24-hour format of an hour without leading zeros\n\
+        return self.getHours();\n\
+    }\n\
+    function h() {\n\
+        // 12-hour format of an hour with leading zeros\n\
+        if (self.getHours() > 12) {\n\
+          var s = new String(self.getHours()-12);\n\
+          return s.length == 1?\n\
+          \"0\"+ (self.getHours()-12) : self.getHours()-12;\n\
+        } else { \n\
+          var s = new String(self.getHours());\n\
+          return s.length == 1?\n\
+          \"0\"+self.getHours() : self.getHours();\n\
+        }  \n\
+    }\n\
+    function H() {\n\
+        // 24-hour format of an hour with leading zeros\n\
+        return new String(self.getHours()).length == 1?\n\
+        \"0\"+self.getHours() : self.getHours();\n\
+    }\n\
+    function i() {\n\
+        // Minutes with leading zeros\n\
+        return new String(self.getMinutes()).length == 1? \n\
+        \"0\"+self.getMinutes() : self.getMinutes(); \n\
+    }\n\
+    function j() {\n\
+        // Day of the month without leading zeros\n\
+        return self.getDate();\n\
+    }    \n\
+    function l() {\n\
+        // A full textual representation of the day of the week\n\
+        return daysLong[self.getDay()];\n\
+    }\n\
+    function L() {\n\
+        // leap year or not. 1 if leap year, 0 if not.\n\
+        // the logic should match iso's 8601 standard.\n\
+        var y_ = Y();\n\
+        if (         \n\
+            (y_ % 4 == 0 && y_ % 100 != 0) ||\n\
+            (y_ % 4 == 0 && y_ % 100 == 0 && y_ % 400 == 0)\n\
+            ) {\n\
+            return 1;\n\
+        } else {\n\
+            return 0;\n\
+        }\n\
+    }\n\
+    function m() {\n\
+        // Numeric representation of a month, with leading zeros\n\
+        return self.getMonth() < 9?\n\
+        \"0\"+(self.getMonth()+1) : \n\
+        self.getMonth()+1;\n\
+    }\n\
+    function M() {\n\
+        // A short textual representation of a month, three letters\n\
+        return monthsShort[self.getMonth()];\n\
+    }\n\
+    function n() {\n\
+        // Numeric representation of a month, without leading zeros\n\
+        return self.getMonth()+1;\n\
+    }\n\
+    function O() {\n\
+        // Difference to Greenwich time (GMT) in hours\n\
+        var os = Math.abs(self.getTimezoneOffset());\n\
+        var h = \"\"+Math.floor(os/60);\n\
+        var m = \"\"+(os%60);\n\
+        h.length == 1? h = \"0\"+h:1;\n\
+        m.length == 1? m = \"0\"+m:1;\n\
+        return self.getTimezoneOffset() < 0 ? \"+\"+h+m : \"-\"+h+m;\n\
+    }\n\
+    function r() {\n\
+        // RFC 822 formatted date\n\
+        var r; // result\n\
+        //  Thu    ,     21          Dec         2000\n\
+        r = D() + \", \" + j() + \" \" + M() + \" \" + Y() +\n\
+        //        16     :    01     :    07          +0200\n\
+            \" \" + H() + \":\" + i() + \":\" + s() + \" \" + O();\n\
+        return r;\n\
+    }\n\
+    function S() {\n\
+        // English ordinal suffix for the day of the month, 2 characters\n\
+        return daysSuffix[self.getDate()-1];\n\
+    }\n\
+    function s() {\n\
+        // Seconds, with leading zeros\n\
+        return new String(self.getSeconds()).length == 1?\n\
+        \"0\"+self.getSeconds() : self.getSeconds();\n\
+    }\n\
+    function t() {\n\
+\n\
+        // thanks to Matt Bannon for some much needed code-fixes here!\n\
+        var daysinmonths = [null,31,28,31,30,31,30,31,31,30,31,30,31];\n\
+        if (L()==1 && n()==2) return 29; // leap day\n\
+        return daysinmonths[n()];\n\
+    }\n\
+    function U() {\n\
+        // Seconds since the Unix Epoch (January 1 1970 00:00:00 GMT)\n\
+        return Math.round(self.getTime()/1000);\n\
+    }\n\
+    function W() {\n\
+        // Weeknumber, as per ISO specification:\n\
+        // http://www.cl.cam.ac.uk/~mgk25/iso-time.html\n\
+        \n\
+        // if the day is three days before newyears eve,\n\
+        // there's a chance it's \"week 1\" of next year.\n\
+        // here we check for that.\n\
+        var beforeNY = 364+L() - z();\n\
+        var afterNY  = z();\n\
+        var weekday = w()!=0?w()-1:6; // makes sunday (0), into 6.\n\
+        if (beforeNY <= 2 && weekday <= 2-beforeNY) {\n\
+            return 1;\n\
+        }\n\
+        // similarly, if the day is within threedays of newyears\n\
+        // there's a chance it belongs in the old year.\n\
+        var ny = new Date(\"January 1 \" + Y() + \" 00:00:00\");\n\
+        var nyDay = ny.getDay()!=0?ny.getDay()-1:6;\n\
+        if (\n\
+            (afterNY <= 2) && \n\
+            (nyDay >=4)  && \n\
+            (afterNY >= (6-nyDay))\n\
+            ) {\n\
+            // Since I'm not sure we can just always return 53,\n\
+            // i call the function here again, using the last day\n\
+            // of the previous year, as the date, and then just\n\
+            // return that week.\n\
+            var prevNY = new Date(\"December 31 \" + (Y()-1) + \" 00:00:00\");\n\
+            return prevNY.formatDate(\"W\");\n\
+        }\n\
+        \n\
+        // week 1, is the week that has the first thursday in it.\n\
+        // note that this value is not zero index.\n\
+        if (nyDay <= 3) {\n\
+            // first day of the year fell on a thursday, or earlier.\n\
+            return 1 + Math.floor( ( z() + nyDay ) / 7 );\n\
+        } else {\n\
+            // first day of the year fell on a friday, or later.\n\
+            return 1 + Math.floor( ( z() - ( 7 - nyDay ) ) / 7 );\n\
+        }\n\
+    }\n\
+    function w() {\n\
+        // Numeric representation of the day of the week\n\
+        return self.getDay();\n\
+    }\n\
+    \n\
+    function Y() {\n\
+        // A full numeric representation of a year, 4 digits\n\
+\n\
+        // we first check, if getFullYear is supported. if it\n\
+        // is, we just use that. ppks code is nice, but wont\n\
+        // work with dates outside 1900-2038, or something like that\n\
+        if (self.getFullYear) {\n\
+            var newDate = new Date(\"January 1 2001 00:00:00 +0000\");\n\
+            var x = newDate .getFullYear();\n\
+            if (x == 2001) {              \n\
+                // i trust the method now\n\
+                return self.getFullYear();\n\
+            }\n\
+        }\n\
+        // else, do this:\n\
+        // codes thanks to ppk:\n\
+        // http://www.xs4all.nl/~ppk/js/introdate.html\n\
+        var x = self.getYear();\n\
+        var y = x % 100;\n\
+        y += (y < 38) ? 2000 : 1900;\n\
+        return y;\n\
+    }\n\
+    function y() {\n\
+        // A two-digit representation of a year\n\
+        var y = Y()+\"\";\n\
+        return y.substring(y.length-2,y.length);\n\
+    }\n\
+    function z() {\n\
+        // The day of the year, zero indexed! 0 through 366\n\
+        var t = new Date(\"January 1 \" + Y() + \" 00:00:00\");\n\
+        var diff = self.getTime() - t.getTime();\n\
+        return Math.floor(diff/1000/60/60/24);\n\
+    }\n\
+        \n\
+    var self = this;\n\
+    if (time) {\n\
+        // save time\n\
+        var prevTime = self.getTime();\n\
+        self.setTime(time);\n\
+    }\n\
+    \n\
+    var ia = input.split(\"\");\n\
+    var ij = 0;\n\
+    while (ia[ij]) {\n\
+        if (ia[ij] == \"\\\\\") {\n\
+            // this is our way of allowing users to escape stuff\n\
+            ia.splice(ij,1);\n\
+        } else {\n\
+            if (arrayExists(switches,ia[ij])) {\n\
+                ia[ij] = eval(ia[ij] + \"()\");\n\
+            }\n\
+        }\n\
+        ij++;\n\
+    }\n\
+    // reset time, back to what it was\n\
+    if (prevTime) {\n\
+        self.setTime(prevTime);\n\
+    }\n\
+    return ia.join(\"\");\n\
+}\n\
+\n\
+var date = new Date(\"1/1/2007 1:11:11\");\n\
+\n\
+for (i = 0; i < 500; ++i) {\n\
+    var shortFormat = date.formatDate(\"Y-m-d\");\n\
+    var longFormat = date.formatDate(\"l, F d, Y g:i:s A\");\n\
+    date.setTime(date.getTime() + 84266956);\n\
+}\n\
+\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider date-format-xparb</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>date-format-xparb</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/*\n\
+ * Copyright (C) 2004 Baron Schwartz <baron at sequent dot org>\n\
+ *\n\
+ * This program is free software; you can redistribute it and/or modify it\n\
+ * under the terms of the GNU Lesser General Public License as published by the\n\
+ * Free Software Foundation, version 2.1.\n\
+ *\n\
+ * This program is distributed in the hope that it will be useful, but WITHOUT\n\
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n\
+ * FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more\n\
+ * details.\n\
+ */\n\
+\n\
+Date.parseFunctions = {count:0};\n\
+Date.parseRegexes = [];\n\
+Date.formatFunctions = {count:0};\n\
+\n\
+Date.prototype.dateFormat = function(format) {\n\
+    if (Date.formatFunctions[format] == null) {\n\
+        Date.createNewFormat(format);\n\
+    }\n\
+    var func = Date.formatFunctions[format];\n\
+    return this[func]();\n\
+}\n\
+\n\
+Date.createNewFormat = function(format) {\n\
+    var funcName = \"format\" + Date.formatFunctions.count++;\n\
+    Date.formatFunctions[format] = funcName;\n\
+    var code = \"Date.prototype.\" + funcName + \" = function(){return \";\n\
+    var special = false;\n\
+    var ch = '';\n\
+    for (var i = 0; i < format.length; ++i) {\n\
+        ch = format.charAt(i);\n\
+        if (!special && ch == \"\\\\\") {\n\
+            special = true;\n\
+        }\n\
+        else if (special) {\n\
+            special = false;\n\
+            code += \"'\" + String.escape(ch) + \"' + \";\n\
+        }\n\
+        else {\n\
+            code += Date.getFormatCode(ch);\n\
+        }\n\
+    }\n\
+    eval(code.substring(0, code.length - 3) + \";}\");\n\
+}\n\
+\n\
+Date.getFormatCode = function(character) {\n\
+    switch (character) {\n\
+    case \"d\":\n\
+        return \"String.leftPad(this.getDate(), 2, '0') + \";\n\
+    case \"D\":\n\
+        return \"Date.dayNames[this.getDay()].substring(0, 3) + \";\n\
+    case \"j\":\n\
+        return \"this.getDate() + \";\n\
+    case \"l\":\n\
+        return \"Date.dayNames[this.getDay()] + \";\n\
+    case \"S\":\n\
+        return \"this.getSuffix() + \";\n\
+    case \"w\":\n\
+        return \"this.getDay() + \";\n\
+    case \"z\":\n\
+        return \"this.getDayOfYear() + \";\n\
+    case \"W\":\n\
+        return \"this.getWeekOfYear() + \";\n\
+    case \"F\":\n\
+        return \"Date.monthNames[this.getMonth()] + \";\n\
+    case \"m\":\n\
+        return \"String.leftPad(this.getMonth() + 1, 2, '0') + \";\n\
+    case \"M\":\n\
+        return \"Date.monthNames[this.getMonth()].substring(0, 3) + \";\n\
+    case \"n\":\n\
+        return \"(this.getMonth() + 1) + \";\n\
+    case \"t\":\n\
+        return \"this.getDaysInMonth() + \";\n\
+    case \"L\":\n\
+        return \"(this.isLeapYear() ? 1 : 0) + \";\n\
+    case \"Y\":\n\
+        return \"this.getFullYear() + \";\n\
+    case \"y\":\n\
+        return \"('' + this.getFullYear()).substring(2, 4) + \";\n\
+    case \"a\":\n\
+        return \"(this.getHours() < 12 ? 'am' : 'pm') + \";\n\
+    case \"A\":\n\
+        return \"(this.getHours() < 12 ? 'AM' : 'PM') + \";\n\
+    case \"g\":\n\
+        return \"((this.getHours() %12) ? this.getHours() % 12 : 12) + \";\n\
+    case \"G\":\n\
+        return \"this.getHours() + \";\n\
+    case \"h\":\n\
+        return \"String.leftPad((this.getHours() %12) ? this.getHours() % 12 : 12, 2, '0') + \";\n\
+    case \"H\":\n\
+        return \"String.leftPad(this.getHours(), 2, '0') + \";\n\
+    case \"i\":\n\
+        return \"String.leftPad(this.getMinutes(), 2, '0') + \";\n\
+    case \"s\":\n\
+        return \"String.leftPad(this.getSeconds(), 2, '0') + \";\n\
+    case \"O\":\n\
+        return \"this.getGMTOffset() + \";\n\
+    case \"T\":\n\
+        return \"this.getTimezone() + \";\n\
+    case \"Z\":\n\
+        return \"(this.getTimezoneOffset() * -60) + \";\n\
+    default:\n\
+        return \"'\" + String.escape(character) + \"' + \";\n\
+    }\n\
+}\n\
+\n\
+Date.parseDate = function(input, format) {\n\
+    if (Date.parseFunctions[format] == null) {\n\
+        Date.createParser(format);\n\
+    }\n\
+    var func = Date.parseFunctions[format];\n\
+    return Date[func](input);\n\
+}\n\
+\n\
+Date.createParser = function(format) {\n\
+    var funcName = \"parse\" + Date.parseFunctions.count++;\n\
+    var regexNum = Date.parseRegexes.length;\n\
+    var currentGroup = 1;\n\
+    Date.parseFunctions[format] = funcName;\n\
+\n\
+    var code = \"Date.\" + funcName + \" = function(input){\\n\"\n\
+        + \"var y = -1, m = -1, d = -1, h = -1, i = -1, s = -1;\\n\"\n\
+        + \"var d = new Date();\\n\"\n\
+        + \"y = d.getFullYear();\\n\"\n\
+        + \"m = d.getMonth();\\n\"\n\
+        + \"d = d.getDate();\\n\"\n\
+        + \"var results = input.match(Date.parseRegexes[\" + regexNum + \"]);\\n\"\n\
+        + \"if (results && results.length > 0) {\"\n\
+    var regex = \"\";\n\
+\n\
+    var special = false;\n\
+    var ch = '';\n\
+    for (var i = 0; i < format.length; ++i) {\n\
+        ch = format.charAt(i);\n\
+        if (!special && ch == \"\\\\\") {\n\
+            special = true;\n\
+        }\n\
+        else if (special) {\n\
+            special = false;\n\
+            regex += String.escape(ch);\n\
+        }\n\
+        else {\n\
+            obj = Date.formatCodeToRegex(ch, currentGroup);\n\
+            currentGroup += obj.g;\n\
+            regex += obj.s;\n\
+            if (obj.g && obj.c) {\n\
+                code += obj.c;\n\
+            }\n\
+        }\n\
+    }\n\
+\n\
+    code += \"if (y > 0 && m >= 0 && d > 0 && h >= 0 && i >= 0 && s >= 0)\\n\"\n\
+        + \"{return new Date(y, m, d, h, i, s);}\\n\"\n\
+        + \"else if (y > 0 && m >= 0 && d > 0 && h >= 0 && i >= 0)\\n\"\n\
+        + \"{return new Date(y, m, d, h, i);}\\n\"\n\
+        + \"else if (y > 0 && m >= 0 && d > 0 && h >= 0)\\n\"\n\
+        + \"{return new Date(y, m, d, h);}\\n\"\n\
+        + \"else if (y > 0 && m >= 0 && d > 0)\\n\"\n\
+        + \"{return new Date(y, m, d);}\\n\"\n\
+        + \"else if (y > 0 && m >= 0)\\n\"\n\
+        + \"{return new Date(y, m);}\\n\"\n\
+        + \"else if (y > 0)\\n\"\n\
+        + \"{return new Date(y);}\\n\"\n\
+        + \"}return null;}\";\n\
+\n\
+    Date.parseRegexes[regexNum] = new RegExp(\"^\" + regex + \"$\");\n\
+    eval(code);\n\
+}\n\
+\n\
+Date.formatCodeToRegex = function(character, currentGroup) {\n\
+    switch (character) {\n\
+    case \"D\":\n\
+        return {g:0,\n\
+        c:null,\n\
+        s:\"(?:Sun|Mon|Tue|Wed|Thu|Fri|Sat)\"};\n\
+    case \"j\":\n\
+    case \"d\":\n\
+        return {g:1,\n\
+            c:\"d = parseInt(results[\" + currentGroup + \"], 10);\\n\",\n\
+            s:\"(\\\\d{1,2})\"};\n\
+    case \"l\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"(?:\" + Date.dayNames.join(\"|\") + \")\"};\n\
+    case \"S\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"(?:st|nd|rd|th)\"};\n\
+    case \"w\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"\\\\d\"};\n\
+    case \"z\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"(?:\\\\d{1,3})\"};\n\
+    case \"W\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"(?:\\\\d{2})\"};\n\
+    case \"F\":\n\
+        return {g:1,\n\
+            c:\"m = parseInt(Date.monthNumbers[results[\" + currentGroup + \"].substring(0, 3)], 10);\\n\",\n\
+            s:\"(\" + Date.monthNames.join(\"|\") + \")\"};\n\
+    case \"M\":\n\
+        return {g:1,\n\
+            c:\"m = parseInt(Date.monthNumbers[results[\" + currentGroup + \"]], 10);\\n\",\n\
+            s:\"(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\"};\n\
+    case \"n\":\n\
+    case \"m\":\n\
+        return {g:1,\n\
+            c:\"m = parseInt(results[\" + currentGroup + \"], 10) - 1;\\n\",\n\
+            s:\"(\\\\d{1,2})\"};\n\
+    case \"t\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"\\\\d{1,2}\"};\n\
+    case \"L\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"(?:1|0)\"};\n\
+    case \"Y\":\n\
+        return {g:1,\n\
+            c:\"y = parseInt(results[\" + currentGroup + \"], 10);\\n\",\n\
+            s:\"(\\\\d{4})\"};\n\
+    case \"y\":\n\
+        return {g:1,\n\
+            c:\"var ty = parseInt(results[\" + currentGroup + \"], 10);\\n\"\n\
+                + \"y = ty > Date.y2kYear ? 1900 + ty : 2000 + ty;\\n\",\n\
+            s:\"(\\\\d{1,2})\"};\n\
+    case \"a\":\n\
+        return {g:1,\n\
+            c:\"if (results[\" + currentGroup + \"] == 'am') {\\n\"\n\
+                + \"if (h == 12) { h = 0; }\\n\"\n\
+                + \"} else { if (h < 12) { h += 12; }}\",\n\
+            s:\"(am|pm)\"};\n\
+    case \"A\":\n\
+        return {g:1,\n\
+            c:\"if (results[\" + currentGroup + \"] == 'AM') {\\n\"\n\
+                + \"if (h == 12) { h = 0; }\\n\"\n\
+                + \"} else { if (h < 12) { h += 12; }}\",\n\
+            s:\"(AM|PM)\"};\n\
+    case \"g\":\n\
+    case \"G\":\n\
+    case \"h\":\n\
+    case \"H\":\n\
+        return {g:1,\n\
+            c:\"h = parseInt(results[\" + currentGroup + \"], 10);\\n\",\n\
+            s:\"(\\\\d{1,2})\"};\n\
+    case \"i\":\n\
+        return {g:1,\n\
+            c:\"i = parseInt(results[\" + currentGroup + \"], 10);\\n\",\n\
+            s:\"(\\\\d{2})\"};\n\
+    case \"s\":\n\
+        return {g:1,\n\
+            c:\"s = parseInt(results[\" + currentGroup + \"], 10);\\n\",\n\
+            s:\"(\\\\d{2})\"};\n\
+    case \"O\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"[+-]\\\\d{4}\"};\n\
+    case \"T\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"[A-Z]{3}\"};\n\
+    case \"Z\":\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:\"[+-]\\\\d{1,5}\"};\n\
+    default:\n\
+        return {g:0,\n\
+            c:null,\n\
+            s:String.escape(character)};\n\
+    }\n\
+}\n\
+\n\
+Date.prototype.getTimezone = function() {\n\
+    return this.toString().replace(\n\
+        /^.*? ([A-Z]{3}) [0-9]{4}.*$/, \"$1\").replace(\n\
+        /^.*?\\(([A-Z])[a-z]+ ([A-Z])[a-z]+ ([A-Z])[a-z]+\\)$/, \"$1$2$3\");\n\
+}\n\
+\n\
+Date.prototype.getGMTOffset = function() {\n\
+    return (this.getTimezoneOffset() > 0 ? \"-\" : \"+\")\n\
+        + String.leftPad(Math.floor(this.getTimezoneOffset() / 60), 2, \"0\")\n\
+        + String.leftPad(this.getTimezoneOffset() % 60, 2, \"0\");\n\
+}\n\
+\n\
+Date.prototype.getDayOfYear = function() {\n\
+    var num = 0;\n\
+    Date.daysInMonth[1] = this.isLeapYear() ? 29 : 28;\n\
+    for (var i = 0; i < this.getMonth(); ++i) {\n\
+        num += Date.daysInMonth[i];\n\
+    }\n\
+    return num + this.getDate() - 1;\n\
+}\n\
+\n\
+Date.prototype.getWeekOfYear = function() {\n\
+    // Skip to Thursday of this week\n\
+    var now = this.getDayOfYear() + (4 - this.getDay());\n\
+    // Find the first Thursday of the year\n\
+    var jan1 = new Date(this.getFullYear(), 0, 1);\n\
+    var then = (7 - jan1.getDay() + 4);\n\
+    document.write(then);\n\
+    return String.leftPad(((now - then) / 7) + 1, 2, \"0\");\n\
+}\n\
+\n\
+Date.prototype.isLeapYear = function() {\n\
+    var year = this.getFullYear();\n\
+    return ((year & 3) == 0 && (year % 100 || (year % 400 == 0 && year)));\n\
+}\n\
+\n\
+Date.prototype.getFirstDayOfMonth = function() {\n\
+    var day = (this.getDay() - (this.getDate() - 1)) % 7;\n\
+    return (day < 0) ? (day + 7) : day;\n\
+}\n\
+\n\
+Date.prototype.getLastDayOfMonth = function() {\n\
+    var day = (this.getDay() + (Date.daysInMonth[this.getMonth()] - this.getDate())) % 7;\n\
+    return (day < 0) ? (day + 7) : day;\n\
+}\n\
+\n\
+Date.prototype.getDaysInMonth = function() {\n\
+    Date.daysInMonth[1] = this.isLeapYear() ? 29 : 28;\n\
+    return Date.daysInMonth[this.getMonth()];\n\
+}\n\
+\n\
+Date.prototype.getSuffix = function() {\n\
+    switch (this.getDate()) {\n\
+        case 1:\n\
+        case 21:\n\
+        case 31:\n\
+            return \"st\";\n\
+        case 2:\n\
+        case 22:\n\
+            return \"nd\";\n\
+        case 3:\n\
+        case 23:\n\
+            return \"rd\";\n\
+        default:\n\
+            return \"th\";\n\
+    }\n\
+}\n\
+\n\
+String.escape = function(string) {\n\
+    return string.replace(/('|\\\\)/g, \"\\\\$1\");\n\
+}\n\
+\n\
+String.leftPad = function (val, size, ch) {\n\
+    var result = new String(val);\n\
+    if (ch == null) {\n\
+        ch = \" \";\n\
+    }\n\
+    while (result.length < size) {\n\
+        result = ch + result;\n\
+    }\n\
+    return result;\n\
+}\n\
+\n\
+Date.daysInMonth = [31,28,31,30,31,30,31,31,30,31,30,31];\n\
+Date.monthNames =\n\
+   [\"January\",\n\
+    \"February\",\n\
+    \"March\",\n\
+    \"April\",\n\
+    \"May\",\n\
+    \"June\",\n\
+    \"July\",\n\
+    \"August\",\n\
+    \"September\",\n\
+    \"October\",\n\
+    \"November\",\n\
+    \"December\"];\n\
+Date.dayNames =\n\
+   [\"Sunday\",\n\
+    \"Monday\",\n\
+    \"Tuesday\",\n\
+    \"Wednesday\",\n\
+    \"Thursday\",\n\
+    \"Friday\",\n\
+    \"Saturday\"];\n\
+Date.y2kYear = 50;\n\
+Date.monthNumbers = {\n\
+    Jan:0,\n\
+    Feb:1,\n\
+    Mar:2,\n\
+    Apr:3,\n\
+    May:4,\n\
+    Jun:5,\n\
+    Jul:6,\n\
+    Aug:7,\n\
+    Sep:8,\n\
+    Oct:9,\n\
+    Nov:10,\n\
+    Dec:11};\n\
+Date.patterns = {\n\
+    ISO8601LongPattern:\"Y-m-d H:i:s\",\n\
+    ISO8601ShortPattern:\"Y-m-d\",\n\
+    ShortDatePattern: \"n/j/Y\",\n\
+    LongDatePattern: \"l, F d, Y\",\n\
+    FullDateTimePattern: \"l, F d, Y g:i:s A\",\n\
+    MonthDayPattern: \"F d\",\n\
+    ShortTimePattern: \"g:i A\",\n\
+    LongTimePattern: \"g:i:s A\",\n\
+    SortableDateTimePattern: \"Y-m-d\\\\TH:i:s\",\n\
+    UniversalSortableDateTimePattern: \"Y-m-d H:i:sO\",\n\
+    YearMonthPattern: \"F, Y\"};\n\
+\n\
+var date = new Date(\"1/1/2007 1:11:11\");\n\
+\n\
+for (i = 0; i < 4000; ++i) {\n\
+    var shortFormat = date.dateFormat(\"Y-m-d\");\n\
+    var longFormat = date.dateFormat(\"l, F d, Y g:i:s A\");\n\
+    date.setTime(date.getTime() + 84266956);\n\
+}\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider math-cordic</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>math-cordic</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/*\n\
+ * Copyright (C) Rich Moore.  All rights reserved.\n\
+ *\n\
+ * Redistribution and use in source and binary forms, with or without\n\
+ * modification, are permitted provided that the following conditions\n\
+ * are met:\n\
+ * 1. Redistributions of source code must retain the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer.\n\
+ * 2. Redistributions in binary form must reproduce the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer in the\n\
+ *    documentation and/or other materials provided with the distribution.\n\
+ *\n\
+ * THIS SOFTWARE IS PROVIDED BY CONTRIBUTORS ``AS IS'' AND ANY\n\
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+ */\n\
+\n\
+/////. Start CORDIC\n\
+\n\
+var AG_CONST = 0.6072529350;\n\
+\n\
+function FIXED(X)\n\
+{\n\
+  return X * 65536.0;\n\
+}\n\
+\n\
+function FLOAT(X)\n\
+{\n\
+  return X / 65536.0;\n\
+}\n\
+\n\
+function DEG2RAD(X)\n\
+{\n\
+  return 0.017453 * (X);\n\
+}\n\
+\n\
+var Angles = [\n\
+  FIXED(45.0), FIXED(26.565), FIXED(14.0362), FIXED(7.12502),\n\
+  FIXED(3.57633), FIXED(1.78991), FIXED(0.895174), FIXED(0.447614),\n\
+  FIXED(0.223811), FIXED(0.111906), FIXED(0.055953),\n\
+  FIXED(0.027977) \n\
+              ];\n\
+\n\
+\n\
+function cordicsincos() {\n\
+    var X;\n\
+    var Y;\n\
+    var TargetAngle;\n\
+    var CurrAngle;\n\
+    var Step;\n\
+ \n\
+    X = FIXED(AG_CONST);         /* AG_CONST * cos(0) */\n\
+    Y = 0;                       /* AG_CONST * sin(0) */\n\
+\n\
+    TargetAngle = FIXED(28.027);\n\
+    CurrAngle = 0;\n\
+    for (Step = 0; Step < 12; Step++) {\n\
+        var NewX;\n\
+        if (TargetAngle > CurrAngle) {\n\
+            NewX = X - (Y >> Step);\n\
+            Y = (X >> Step) + Y;\n\
+            X = NewX;\n\
+            CurrAngle += Angles[Step];\n\
+        } else {\n\
+            NewX = X + (Y >> Step);\n\
+            Y = -(X >> Step) + Y;\n\
+            X = NewX;\n\
+            CurrAngle -= Angles[Step];\n\
+        }\n\
+    }\n\
+}\n\
+\n\
+///// End CORDIC\n\
+\n\
+function cordic( runs ) {\n\
+  var start = new Date();\n\
+\n\
+  for ( var i = 0 ; i < runs ; i++ ) {\n\
+      cordicsincos();\n\
+  }\n\
+\n\
+  var end = new Date();\n\
+\n\
+  return end.getTime() - start.getTime();\n\
+}\n\
+\n\
+cordic(25000);\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider math-partial-sums</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>math-partial-sums</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// The Computer Language Shootout\n\
+// http://shootout.alioth.debian.org/\n\
+// contributed by Isaac Gouy\n\
+\n\
+function partial(n){\n\
+    var a1 = a2 = a3 = a4 = a5 = a6 = a7 = a8 = a9 = 0.0;\n\
+    var twothirds = 2.0/3.0;\n\
+    var alt = -1.0;\n\
+    var k2 = k3 = sk = ck = 0.0;\n\
+    \n\
+    for (var k = 1; k <= n; k++){\n\
+        k2 = k*k;\n\
+        k3 = k2*k;\n\
+        sk = Math.sin(k);\n\
+        ck = Math.cos(k);\n\
+        alt = -alt;\n\
+        \n\
+        a1 += Math.pow(twothirds,k-1);\n\
+        a2 += Math.pow(k,-0.5);\n\
+        a3 += 1.0/(k*(k+1.0));\n\
+        a4 += 1.0/(k3 * sk*sk);\n\
+        a5 += 1.0/(k3 * ck*ck);\n\
+        a6 += 1.0/k;\n\
+        a7 += 1.0/k2;\n\
+        a8 += alt/k;\n\
+        a9 += alt/(2*k -1);\n\
+    }\n\
+}\n\
+\n\
+for (var i = 1024; i <= 16384; i *= 2) {\n\
+    partial(i);\n\
+}\n\
+\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider math-spectral-norm</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>math-spectral-norm</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// The Great Computer Language Shootout\n\
+// http://shootout.alioth.debian.org/\n\
+//\n\
+// contributed by Ian Osgood\n\
+\n\
+function A(i,j) {\n\
+  return 1/((i+j)*(i+j+1)/2+i+1);\n\
+}\n\
+\n\
+function Au(u,v) {\n\
+  for (var i=0; i<u.length; ++i) {\n\
+    var t = 0;\n\
+    for (var j=0; j<u.length; ++j)\n\
+      t += A(i,j) * u[j];\n\
+    v[i] = t;\n\
+  }\n\
+}\n\
+\n\
+function Atu(u,v) {\n\
+  for (var i=0; i<u.length; ++i) {\n\
+    var t = 0;\n\
+    for (var j=0; j<u.length; ++j)\n\
+      t += A(j,i) * u[j];\n\
+    v[i] = t;\n\
+  }\n\
+}\n\
+\n\
+function AtAu(u,v,w) {\n\
+  Au(u,w);\n\
+  Atu(w,v);\n\
+}\n\
+\n\
+function spectralnorm(n) {\n\
+  var i, u=[], v=[], w=[], vv=0, vBv=0;\n\
+  for (i=0; i<n; ++i) {\n\
+    u[i] = 1; v[i] = w[i] = 0;\n\
+  }\n\
+  for (i=0; i<10; ++i) {\n\
+    AtAu(u,v,w);\n\
+    AtAu(v,u,w);\n\
+  }\n\
+  for (i=0; i<n; ++i) {\n\
+    vBv += u[i]*v[i];\n\
+    vv  += v[i]*v[i];\n\
+  }\n\
+  return Math.sqrt(vBv/vv);\n\
+}\n\
+\n\
+for (var i = 6; i <= 48; i *= 2) {\n\
+    spectralnorm(i);\n\
+}\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider regexp-dna</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>regexp-dna</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// The Computer Language Shootout\n\
+// http://shootout.alioth.debian.org/\n\
+//\n\
+// contributed by Jesse Millikan\n\
+// Base on the Ruby version by jose fco. gonzalez\n\
+\n\
+var l;\n\
+var dnaInput = \">ONE Homo sapiens alu\\n\\\n\
+GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGA\\n\\\n\
+TCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACT\\n\\\n\
+AAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAG\\n\\\n\
+GCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCG\\n\\\n\
+CCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGT\\n\\\n\
+GGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCA\\n\\\n\
+GGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAA\\n\\\n\
+TTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAG\\n\\\n\
+AATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCA\\n\\\n\
+GCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGT\\n\\\n\
+AATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACC\\n\\\n\
+AGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTG\\n\\\n\
+GTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACC\\n\\\n\
+CGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAG\\n\\\n\
+AGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTT\\n\\\n\
+TGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACA\\n\\\n\
+TGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCT\\n\\\n\
+GTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGG\\n\\\n\
+TTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGT\\n\\\n\
+CTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGG\\n\\\n\
+CGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCG\\n\\\n\
+TCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTA\\n\\\n\
+CTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCG\\n\\\n\
+AGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCG\\n\\\n\
+GGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACC\\n\\\n\
+TGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAA\\n\\\n\
+TACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGA\\n\\\n\
+GGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACT\\n\\\n\
+GCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTC\\n\\\n\
+ACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGT\\n\\\n\
+TCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGC\\n\\\n\
+CGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCG\\n\\\n\
+CTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTG\\n\\\n\
+GGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCC\\n\\\n\
+CAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCT\\n\\\n\
+GGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGC\\n\\\n\
+GCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGA\\n\\\n\
+GGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGA\\n\\\n\
+GACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGA\\n\\\n\
+GGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTG\\n\\\n\
+AAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAAT\\n\\\n\
+CCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCA\\n\\\n\
+GTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAA\\n\\\n\
+AAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGC\\n\\\n\
+GGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCT\\n\\\n\
+ACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGG\\n\\\n\
+GAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATC\\n\\\n\
+GCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGC\\n\\\n\
+GGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGG\\n\\\n\
+TCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAA\\n\\\n\
+AAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAG\\n\\\n\
+GAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACT\\n\\\n\
+CCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCC\\n\\\n\
+TGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAG\\n\\\n\
+ACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGC\\n\\\n\
+GTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGA\\n\\\n\
+ACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGA\\n\\\n\
+CAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCA\\n\\\n\
+CTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCA\\n\\\n\
+ACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCG\\n\\\n\
+CCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGG\\n\\\n\
+AGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTC\\n\\\n\
+CGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCG\\n\\\n\
+AGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACC\\n\\\n\
+CCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAG\\n\\\n\
+CTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAG\\n\\\n\
+CCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGG\\n\\\n\
+CCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATC\\n\\\n\
+ACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAA\\n\\\n\
+AAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGC\\n\\\n\
+TGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCC\\n\\\n\
+ACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGG\\n\\\n\
+CTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGG\\n\\\n\
+AGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATT\\n\\\n\
+AGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAA\\n\\\n\
+TCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGC\\n\\\n\
+CTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAA\\n\\\n\
+TCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAG\\n\\\n\
+CCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGT\\n\\\n\
+GGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCG\\n\\\n\
+GGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAG\\n\\\n\
+CGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTG\\n\\\n\
+GGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATG\\n\\\n\
+GTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGT\\n\\\n\
+AATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTT\\n\\\n\
+GCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCT\\n\\\n\
+CAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCG\\n\\\n\
+GGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTC\\n\\\n\
+TCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACT\\n\\\n\
+CGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAG\\n\\\n\
+ATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGG\\n\\\n\
+CGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTG\\n\\\n\
+AGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATA\\n\\\n\
+CAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGG\\n\\\n\
+CAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGC\\n\\\n\
+ACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCAC\\n\\\n\
+GCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTC\\n\\\n\
+GAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCG\\n\\\n\
+GGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCT\\n\\\n\
+TGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGG\\n\\\n\
+CGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCA\\n\\\n\
+GCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGG\\n\\\n\
+CCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGC\\n\\\n\
+GCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGG\\n\\\n\
+CGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGA\\n\\\n\
+CTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGG\\n\\\n\
+CCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAA\\n\\\n\
+ACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCC\\n\\\n\
+CAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGT\\n\\\n\
+GAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAA\\n\\\n\
+AGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGG\\n\\\n\
+ATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTAC\\n\\\n\
+TAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGA\\n\\\n\
+GGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGC\\n\\\n\
+GCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGG\\n\\\n\
+TGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTC\\n\\\n\
+AGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAA\\n\\\n\
+ATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGA\\n\\\n\
+GAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC\\n\\\n\
+AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTG\\n\\\n\
+TAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGAC\\n\\\n\
+CAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGT\\n\\\n\
+GGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAAC\\n\\\n\
+CCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACA\\n\\\n\
+GAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACT\\n\\\n\
+TTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAAC\\n\\\n\
+ATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCC\\n\\\n\
+TGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAG\\n\\\n\
+GTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCG\\n\\\n\
+TCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAG\\n\\\n\
+GCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCC\\n\\\n\
+GTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCT\\n\\\n\
+ACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCC\\n\\\n\
+GAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCC\\n\\\n\
+GGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCAC\\n\\\n\
+CTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAA\\n\\\n\
+ATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTG\\n\\\n\
+AGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCAC\\n\\\n\
+TGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCT\\n\\\n\
+CACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAG\\n\\\n\
+TTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAG\\n\\\n\
+CCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATC\\n\\\n\
+GCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCT\\n\\\n\
+GGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATC\\n\\\n\
+CCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCC\\n\\\n\
+TGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGG\\n\\\n\
+CGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG\\n\\\n\
+AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCG\\n\\\n\
+AGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGG\\n\\\n\
+AGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGT\\n\\\n\
+GAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAA\\n\\\n\
+TCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGC\\n\\\n\
+AGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCA\\n\\\n\
+AAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGG\\n\\\n\
+CGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTC\\n\\\n\
+TACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCG\\n\\\n\
+GGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGAT\\n\\\n\
+CGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCG\\n\\\n\
+CGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAG\\n\\\n\
+GTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACA\\n\\\n\
+AAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCA\\n\\\n\
+GGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCAC\\n\\\n\
+TCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGC\\n\\\n\
+CTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGA\\n\\\n\
+GACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGG\\n\\\n\
+CGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTG\\n\\\n\
+AACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCG\\n\\\n\
+ACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGC\\n\\\n\
+ACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCC\\n\\\n\
+AACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGC\\n\\\n\
+GCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCG\\n\\\n\
+GAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACT\\n\\\n\
+CCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCC\\n\\\n\
+GAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAAC\\n\\\n\
+CCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA\\n\\\n\
+GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGA\\n\\\n\
+GCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAG\\n\\\n\
+GCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGAT\\n\\\n\
+CACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTA\\n\\\n\
+AAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGG\\n\\\n\
+CTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGC\\n\\\n\
+CACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTG\\n\\\n\
+GCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAG\\n\\\n\
+GAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAAT\\n\\\n\
+TAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGA\\n\\\n\
+ATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAG\\n\\\n\
+CCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTA\\n\\\n\
+ATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCA\\n\\\n\
+GCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGG\\n\\\n\
+TGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCC\\n\\\n\
+GGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGA\\n\\\n\
+GCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTT\\n\\\n\
+GGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACAT\\n\\\n\
+GGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTG\\n\\\n\
+TAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGT\\n\\\n\
+TGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTC\\n\\\n\
+TCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGC\\n\\\n\
+GGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGT\\n\\\n\
+CTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTAC\\n\\\n\
+TCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGA\\n\\\n\
+GATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGG\\n\\\n\
+GCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCT\\n\\\n\
+GAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT\\n\\\n\
+ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAG\\n\\\n\
+GCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTG\\n\\\n\
+CACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCA\\n\\\n\
+CGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTT\\n\\\n\
+CGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCC\\n\\\n\
+GGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGC\\n\\\n\
+TTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGG\\n\\\n\
+GCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCC\\n\\\n\
+AGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTG\\n\\\n\
+GCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCG\\n\\\n\
+CGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAG\\n\\\n\
+GCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAG\\n\\\n\
+ACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAG\\n\\\n\
+GCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGA\\n\\\n\
+AACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATC\\n\\\n\
+CCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAG\\n\\\n\
+TGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAA\\n\\\n\
+AAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCG\\n\\\n\
+GATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTA\\n\\\n\
+CTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGG\\n\\\n\
+AGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCG\\n\\\n\
+CGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCG\\n\\\n\
+GTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGT\\n\\\n\
+CAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAA\\n\\\n\
+AATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGG\\n\\\n\
+AGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTC\\n\\\n\
+CAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCT\\n\\\n\
+GTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA\\n\\\n\
+CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCG\\n\\\n\
+TGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAA\\n\\\n\
+CCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGAC\\n\\\n\
+AGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCAC\\n\\\n\
+TTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAA\\n\\\n\
+CATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGC\\n\\\n\
+CTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGA\\n\\\n\
+GGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCC\\n\\\n\
+GTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGA\\n\\\n\
+GGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCC\\n\\\n\
+CGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGC\\n\\\n\
+TACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGC\\n\\\n\
+CGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGC\\n\\\n\
+CGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCA\\n\\\n\
+CCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAA\\n\\\n\
+AATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCT\\n\\\n\
+GAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCA\\n\\\n\
+CTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGC\\n\\\n\
+TCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGA\\n\\\n\
+GTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTA\\n\\\n\
+GCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAAT\\n\\\n\
+CGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCC\\n\\\n\
+TGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAAT\\n\\\n\
+CCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGC\\n\\\n\
+CTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTG\\n\\\n\
+GCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGG\\n\\\n\
+GAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGC\\n\\\n\
+GAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG\\n\\\n\
+GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGG\\n\\\n\
+TGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTA\\n\\\n\
+ATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTG\\n\\\n\
+CAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTC\\n\\\n\
+AAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGG\\n\\\n\
+GCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCT\\n\\\n\
+CTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTC\\n\\\n\
+GGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGA\\n\\\n\
+TCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGC\\n\\\n\
+GCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGA\\n\\\n\
+GGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATAC\\n\\\n\
+AAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGC\\n\\\n\
+AGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCA\\n\\\n\
+CTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACG\\n\\\n\
+CCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCG\\n\\\n\
+AGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGG\\n\\\n\
+GCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTT\\n\\\n\
+GAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGC\\n\\\n\
+GACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAG\\n\\\n\
+CACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGC\\n\\\n\
+CAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCG\\n\\\n\
+CGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGC\\n\\\n\
+GGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGAC\\n\\\n\
+TCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGC\\n\\\n\
+CGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAA\\n\\\n\
+CCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCC\\n\\\n\
+AGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTG\\n\\\n\
+AGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA\\n\\\n\
+GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGA\\n\\\n\
+TCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACT\\n\\\n\
+AAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAG\\n\\\n\
+GCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCG\\n\\\n\
+CCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGT\\n\\\n\
+GGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCA\\n\\\n\
+GGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAA\\n\\\n\
+TTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAG\\n\\\n\
+AATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCA\\n\\\n\
+GCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGT\\n\\\n\
+AATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACC\\n\\\n\
+AGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTG\\n\\\n\
+GTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACC\\n\\\n\
+CGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAG\\n\\\n\
+AGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTT\\n\\\n\
+TGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACA\\n\\\n\
+TGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCT\\n\\\n\
+GTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGG\\n\\\n\
+TTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGT\\n\\\n\
+CTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGG\\n\\\n\
+CGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCG\\n\\\n\
+TCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTA\\n\\\n\
+CTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCG\\n\\\n\
+AGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCG\\n\\\n\
+GGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACC\\n\\\n\
+TGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAA\\n\\\n\
+TACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGA\\n\\\n\
+GGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACT\\n\\\n\
+GCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTC\\n\\\n\
+ACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGT\\n\\\n\
+TCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGC\\n\\\n\
+CGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCG\\n\\\n\
+CTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTG\\n\\\n\
+GGCGACAGAGCGAGACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCC\\n\\\n\
+CAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCT\\n\\\n\
+GGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGC\\n\\\n\
+GCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGA\\n\\\n\
+GGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGA\\n\\\n\
+GACTCCGTCTCAAAAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGA\\n\\\n\
+GGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTG\\n\\\n\
+AAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAAT\\n\\\n\
+CCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCA\\n\\\n\
+GTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAA\\n\\\n\
+AAAGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGC\\n\\\n\
+GGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCT\\n\\\n\
+ACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGG\\n\\\n\
+GAGGCTGAGGCAGGAGAATC\\n\\\n\
+>TWO IUB ambiguity codes\\n\\\n\
+cttBtatcatatgctaKggNcataaaSatgtaaaDcDRtBggDtctttataattcBgtcg\\n\\\n\
+tactDtDagcctatttSVHtHttKtgtHMaSattgWaHKHttttagacatWatgtRgaaa\\n\\\n\
+NtactMcSMtYtcMgRtacttctWBacgaaatatagScDtttgaagacacatagtVgYgt\\n\\\n\
+cattHWtMMWcStgttaggKtSgaYaaccWStcgBttgcgaMttBYatcWtgacaYcaga\\n\\\n\
+gtaBDtRacttttcWatMttDBcatWtatcttactaBgaYtcttgttttttttYaaScYa\\n\\\n\
+HgtgttNtSatcMtcVaaaStccRcctDaataataStcYtRDSaMtDttgttSagtRRca\\n\\\n\
+tttHatSttMtWgtcgtatSSagactYaaattcaMtWatttaSgYttaRgKaRtccactt\\n\\\n\
+tattRggaMcDaWaWagttttgacatgttctacaaaRaatataataaMttcgDacgaSSt\\n\\\n\
+acaStYRctVaNMtMgtaggcKatcttttattaaaaagVWaHKYagtttttatttaacct\\n\\\n\
+tacgtVtcVaattVMBcttaMtttaStgacttagattWWacVtgWYagWVRctDattBYt\\n\\\n\
+gtttaagaagattattgacVatMaacattVctgtBSgaVtgWWggaKHaatKWcBScSWa\\n\\\n\
+accRVacacaaactaccScattRatatKVtactatatttHttaagtttSKtRtacaaagt\\n\\\n\
+RDttcaaaaWgcacatWaDgtDKacgaacaattacaRNWaatHtttStgttattaaMtgt\\n\\\n\
+tgDcgtMgcatBtgcttcgcgaDWgagctgcgaggggVtaaScNatttacttaatgacag\\n\\\n\
+cccccacatYScaMgtaggtYaNgttctgaMaacNaMRaacaaacaKctacatagYWctg\\n\\\n\
+ttWaaataaaataRattagHacacaagcgKatacBttRttaagtatttccgatctHSaat\\n\\\n\
+actcNttMaagtattMtgRtgaMgcataatHcMtaBSaRattagttgatHtMttaaKagg\\n\\\n\
+YtaaBataSaVatactWtataVWgKgttaaaacagtgcgRatatacatVtHRtVYataSa\\n\\\n\
+KtWaStVcNKHKttactatccctcatgWHatWaRcttactaggatctataDtDHBttata\\n\\\n\
+aaaHgtacVtagaYttYaKcctattcttcttaataNDaaggaaaDYgcggctaaWSctBa\\n\\\n\
+aNtgctggMBaKctaMVKagBaactaWaDaMaccYVtNtaHtVWtKgRtcaaNtYaNacg\\n\\\n\
+gtttNattgVtttctgtBaWgtaattcaagtcaVWtactNggattctttaYtaaagccgc\\n\\\n\
+tcttagHVggaYtgtNcDaVagctctctKgacgtatagYcctRYHDtgBattDaaDgccK\\n\\\n\
+tcHaaStttMcctagtattgcRgWBaVatHaaaataYtgtttagMDMRtaataaggatMt\\n\\\n\
+ttctWgtNtgtgaaaaMaatatRtttMtDgHHtgtcattttcWattRSHcVagaagtacg\\n\\\n\
+ggtaKVattKYagactNaatgtttgKMMgYNtcccgSKttctaStatatNVataYHgtNa\\n\\\n\
+BKRgNacaactgatttcctttaNcgatttctctataScaHtataRagtcRVttacDSDtt\\n\\\n\
+aRtSatacHgtSKacYagttMHtWataggatgactNtatSaNctataVtttRNKtgRacc\\n\\\n\
+tttYtatgttactttttcctttaaacatacaHactMacacggtWataMtBVacRaSaatc\\n\\\n\
+cgtaBVttccagccBcttaRKtgtgcctttttRtgtcagcRttKtaaacKtaaatctcac\\n\\\n\
+aattgcaNtSBaaccgggttattaaBcKatDagttactcttcattVtttHaaggctKKga\\n\\\n\
+tacatcBggScagtVcacattttgaHaDSgHatRMaHWggtatatRgccDttcgtatcga\\n\\\n\
+aacaHtaagttaRatgaVacttagattVKtaaYttaaatcaNatccRttRRaMScNaaaD\\n\\\n\
+gttVHWgtcHaaHgacVaWtgttScactaagSgttatcttagggDtaccagWattWtRtg\\n\\\n\
+ttHWHacgattBtgVcaYatcggttgagKcWtKKcaVtgaYgWctgYggVctgtHgaNcV\\n\\\n\
+taBtWaaYatcDRaaRtSctgaHaYRttagatMatgcatttNattaDttaattgttctaa\\n\\\n\
+ccctcccctagaWBtttHtBccttagaVaatMcBHagaVcWcagBVttcBtaYMccagat\\n\\\n\
+gaaaaHctctaacgttagNWRtcggattNatcRaNHttcagtKttttgWatWttcSaNgg\\n\\\n\
+gaWtactKKMaacatKatacNattgctWtatctaVgagctatgtRaHtYcWcttagccaa\\n\\\n\
+tYttWttaWSSttaHcaaaaagVacVgtaVaRMgattaVcDactttcHHggHRtgNcctt\\n\\\n\
+tYatcatKgctcctctatVcaaaaKaaaagtatatctgMtWtaaaacaStttMtcgactt\\n\\\n\
+taSatcgDataaactaaacaagtaaVctaggaSccaatMVtaaSKNVattttgHccatca\\n\\\n\
+cBVctgcaVatVttRtactgtVcaattHgtaaattaaattttYtatattaaRSgYtgBag\\n\\\n\
+aHSBDgtagcacRHtYcBgtcacttacactaYcgctWtattgSHtSatcataaatataHt\\n\\\n\
+cgtYaaMNgBaatttaRgaMaatatttBtttaaaHHKaatctgatWatYaacttMctctt\\n\\\n\
+ttVctagctDaaagtaVaKaKRtaacBgtatccaaccactHHaagaagaaggaNaaatBW\\n\\\n\
+attccgStaMSaMatBttgcatgRSacgttVVtaaDMtcSgVatWcaSatcttttVatag\\n\\\n\
+ttactttacgatcaccNtaDVgSRcgVcgtgaacgaNtaNatatagtHtMgtHcMtagaa\\n\\\n\
+attBgtataRaaaacaYKgtRccYtatgaagtaataKgtaaMttgaaRVatgcagaKStc\\n\\\n\
+tHNaaatctBBtcttaYaBWHgtVtgacagcaRcataWctcaBcYacYgatDgtDHccta\\n\\\n\
+aagacYRcaggattHaYgtKtaatgcVcaataMYacccatatcacgWDBtgaatcBaata\\n\\\n\
+cKcttRaRtgatgaBDacggtaattaaYtataStgVHDtDctgactcaaatKtacaatgc\\n\\\n\
+gYatBtRaDatHaactgtttatatDttttaaaKVccYcaaccNcBcgHaaVcattHctcg\\n\\\n\
+attaaatBtatgcaaaaatYMctSactHatacgaWacattacMBgHttcgaatVaaaaca\\n\\\n\
+BatatVtctgaaaaWtctRacgBMaatSgRgtgtcgactatcRtattaScctaStagKga\\n\\\n\
+DcWgtYtDDWKRgRtHatRtggtcgaHgggcgtattaMgtcagccaBggWVcWctVaaat\\n\\\n\
+tcgNaatcKWagcNaHtgaaaSaaagctcYctttRVtaaaatNtataaccKtaRgtttaM\\n\\\n\
+tgtKaBtRtNaggaSattHatatWactcagtgtactaKctatttgRYYatKatgtccgtR\\n\\\n\
+tttttatttaatatVgKtttgtatgtNtataRatWYNgtRtHggtaaKaYtKSDcatcKg\\n\\\n\
+taaYatcSRctaVtSMWtVtRWHatttagataDtVggacagVcgKWagBgatBtaaagNc\\n\\\n\
+aRtagcataBggactaacacRctKgttaatcctHgDgttKHHagttgttaatgHBtatHc\\n\\\n\
+DaagtVaBaRccctVgtgDtacRHSctaagagcggWYaBtSaKtHBtaaactYacgNKBa\\n\\\n\
+VYgtaacttagtVttcttaatgtBtatMtMtttaattaatBWccatRtttcatagVgMMt\\n\\\n\
+agctStKctaMactacDNYgKYHgaWcgaHgagattacVgtttgtRaSttaWaVgataat\\n\\\n\
+gtgtYtaStattattMtNgWtgttKaccaatagNYttattcgtatHcWtctaaaNVYKKt\\n\\\n\
+tWtggcDtcgaagtNcagatacgcattaagaccWctgcagcttggNSgaNcHggatgtVt\\n\\\n\
+catNtRaaBNcHVagagaaBtaaSggDaatWaatRccaVgggStctDaacataKttKatt\\n\\\n\
+tggacYtattcSatcttagcaatgaVBMcttDattctYaaRgatgcattttNgVHtKcYR\\n\\\n\
+aatRKctgtaaacRatVSagctgtWacBtKVatctgttttKcgtctaaDcaagtatcSat\\n\\\n\
+aWVgcKKataWaYttcccSaatgaaaacccWgcRctWatNcWtBRttYaattataaNgac\\n\\\n\
+acaatagtttVNtataNaYtaatRaVWKtBatKagtaatataDaNaaaaataMtaagaaS\\n\\\n\
+tccBcaatNgaataWtHaNactgtcDtRcYaaVaaaaaDgtttRatctatgHtgttKtga\\n\\\n\
+aNSgatactttcgagWaaatctKaaDaRttgtggKKagcDgataaattgSaacWaVtaNM\\n\\\n\
+acKtcaDaaatttctRaaVcagNacaScRBatatctRatcctaNatWgRtcDcSaWSgtt\\n\\\n\
+RtKaRtMtKaatgttBHcYaaBtgatSgaSWaScMgatNtctcctatttctYtatMatMt\\n\\\n\
+RRtSaattaMtagaaaaStcgVgRttSVaScagtgDtttatcatcatacRcatatDctta\\n\\\n\
+tcatVRtttataaHtattcYtcaaaatactttgVctagtaaYttagatagtSYacKaaac\\n\\\n\
+gaaKtaaatagataatSatatgaaatSgKtaatVtttatcctgKHaatHattagaaccgt\\n\\\n\
+YaaHactRcggSBNgtgctaaBagBttgtRttaaattYtVRaaaattgtaatVatttctc\\n\\\n\
+ttcatgBcVgtgKgaHaaatattYatagWacNctgaaMcgaattStagWaSgtaaKagtt\\n\\\n\
+ttaagaDgatKcctgtaHtcatggKttVDatcaaggtYcgccagNgtgcVttttagagat\\n\\\n\
+gctaccacggggtNttttaSHaNtatNcctcatSaaVgtactgBHtagcaYggYVKNgta\\n\\\n\
+KBcRttgaWatgaatVtagtcgattYgatgtaatttacDacSctgctaaaStttaWMagD\\n\\\n\
+aaatcaVYctccgggcgaVtaaWtStaKMgDtttcaaMtVgBaatccagNaaatcYRMBg\\n\\\n\
+gttWtaaScKttMWtYataRaDBMaDataatHBcacDaaKDactaMgagttDattaHatH\\n\\\n\
+taYatDtattDcRNStgaatattSDttggtattaaNSYacttcDMgYgBatWtaMagact\\n\\\n\
+VWttctttgYMaYaacRgHWaattgRtaagcattctMKVStatactacHVtatgatcBtV\\n\\\n\
+NataaBttYtSttacKgggWgYDtgaVtYgatDaacattYgatggtRDaVDttNactaSa\\n\\\n\
+MtgNttaacaaSaBStcDctaccacagacgcaHatMataWKYtaYattMcaMtgSttDag\\n\\\n\
+cHacgatcaHttYaKHggagttccgatYcaatgatRaVRcaagatcagtatggScctata\\n\\\n\
+ttaNtagcgacgtgKaaWaactSgagtMYtcttccaKtStaacggMtaagNttattatcg\\n\\\n\
+tctaRcactctctDtaacWYtgaYaSaagaWtNtatttRacatgNaatgttattgWDDcN\\n\\\n\
+aHcctgaaHacSgaataaRaataMHttatMtgaSDSKatatHHaNtacagtccaYatWtc\\n\\\n\
+actaactatKDacSaStcggataHgYatagKtaatKagStaNgtatactatggRHacttg\\n\\\n\
+tattatgtDVagDVaRctacMYattDgtttYgtctatggtKaRSttRccRtaaccttaga\\n\\\n\
+gRatagSaaMaacgcaNtatgaaatcaRaagataatagatactcHaaYKBctccaagaRa\\n\\\n\
+BaStNagataggcgaatgaMtagaatgtcaKttaaatgtaWcaBttaatRcggtgNcaca\\n\\\n\
+aKtttScRtWtgcatagtttWYaagBttDKgcctttatMggNttattBtctagVtacata\\n\\\n\
+aaYttacacaaRttcYtWttgHcaYYtaMgBaBatctNgcDtNttacgacDcgataaSat\\n\\\n\
+YaSttWtcctatKaatgcagHaVaacgctgcatDtgttaSataaaaYSNttatagtaNYt\\n\\\n\
+aDaaaNtggggacttaBggcHgcgtNtaaMcctggtVtaKcgNacNtatVaSWctWtgaW\\n\\\n\
+cggNaBagctctgaYataMgaagatBSttctatacttgtgtKtaattttRagtDtacata\\n\\\n\
+tatatgatNHVgBMtKtaKaNttDHaagatactHaccHtcatttaaagttVaMcNgHata\\n\\\n\
+tKtaNtgYMccttatcaaNagctggacStttcNtggcaVtattactHaSttatgNMVatt\\n\\\n\
+MMDtMactattattgWMSgtHBttStStgatatRaDaagattttctatMtaaaaaggtac\\n\\\n\
+taaVttaSacNaatactgMttgacHaHRttgMacaaaatagttaatatWKRgacDgaRta\\n\\\n\
+tatttattatcYttaWtgtBRtWatgHaaattHataagtVaDtWaVaWtgStcgtMSgaS\\n\\\n\
+RgMKtaaataVacataatgtaSaatttagtcgaaHtaKaatgcacatcggRaggSKctDc\\n\\\n\
+agtcSttcccStYtccRtctctYtcaaKcgagtaMttttcRaYDttgttatctaatcata\\n\\\n\
+NctctgctatcaMatactataggDaHaaSttMtaDtcNatataattctMcStaaBYtaNa\\n\\\n\
+gatgtaatHagagSttgWHVcttatKaYgDctcttggtgttMcRaVgSgggtagacaata\\n\\\n\
+aDtaattSaDaNaHaBctattgNtaccaaRgaVtKNtaaYggHtaKKgHcatctWtctDt\\n\\\n\
+ttctttggSDtNtaStagttataaacaattgcaBaBWggHgcaaaBtYgctaatgaaatW\\n\\\n\
+cDcttHtcMtWWattBHatcatcaaatctKMagtDNatttWaBtHaaaNgMttaaStagt\\n\\\n\
+tctctaatDtcRVaYttgttMtRtgtcaSaaYVgSWDRtaatagctcagDgcWWaaaBaa\\n\\\n\
+RaBctgVgggNgDWStNaNBKcBctaaKtttDcttBaaggBttgaccatgaaaNgttttt\\n\\\n\
+tttatctatgttataccaaDRaaSagtaVtDtcaWatBtacattaWacttaSgtattggD\\n\\\n\
+gKaaatScaattacgWcagKHaaccaYcRcaRttaDttRtttHgaHVggcttBaRgtccc\\n\\\n\
+tDatKaVtKtcRgYtaKttacgtatBtStaagcaattaagaRgBagSaattccSWYttta\\n\\\n\
+ttVaataNctgHgttaaNBgcVYgtRtcccagWNaaaacaDNaBcaaaaRVtcWMgBagM\\n\\\n\
+tttattacgDacttBtactatcattggaaatVccggttRttcatagttVYcatYaSHaHc\\n\\\n\
+ttaaagcNWaHataaaRWtctVtRYtagHtaaaYMataHYtNBctNtKaatattStgaMc\\n\\\n\
+BtRgctaKtgcScSttDgYatcVtggaaKtaagatWccHccgKYctaNNctacaWctttt\\n\\\n\
+gcRtgtVcgaKttcMRHgctaHtVaataaDtatgKDcttatBtDttggNtacttttMtga\\n\\\n\
+acRattaaNagaactcaaaBBVtcDtcgaStaDctgaaaSgttMaDtcgttcaccaaaag\\n\\\n\
+gWtcKcgSMtcDtatgtttStaaBtatagDcatYatWtaaaBacaKgcaDatgRggaaYc\\n\\\n\
+taRtccagattDaWtttggacBaVcHtHtaacDacYgtaatataMagaatgHMatcttat\\n\\\n\
+acgtatttttatattacHactgttataMgStYaattYaccaattgagtcaaattaYtgta\\n\\\n\
+tcatgMcaDcgggtcttDtKgcatgWRtataatatRacacNRBttcHtBgcRttgtgcgt\\n\\\n\
+catacMtttBctatctBaatcattMttMYgattaaVYatgDaatVagtattDacaacDMa\\n\\\n\
+tcMtHcccataagatgBggaccattVWtRtSacatgctcaaggggYtttDtaaNgNtaaB\\n\\\n\
+atggaatgtctRtaBgBtcNYatatNRtagaacMgagSaSDDSaDcctRagtVWSHtVSR\\n\\\n\
+ggaacaBVaccgtttaStagaacaMtactccagtttVctaaRaaHttNcttagcaattta\\n\\\n\
+ttaatRtaaaatctaacDaBttggSagagctacHtaaRWgattcaaBtctRtSHaNtgta\\n\\\n\
+cattVcaHaNaagtataccacaWtaRtaaVKgMYaWgttaKggKMtKcgWatcaDatYtK\\n\\\n\
+SttgtacgaccNctSaattcDcatcttcaaaDKttacHtggttHggRRaRcaWacaMtBW\\n\\\n\
+VHSHgaaMcKattgtaRWttScNattBBatYtaNRgcggaagacHSaattRtttcYgacc\\n\\\n\
+BRccMacccKgatgaacttcgDgHcaaaaaRtatatDtatYVtttttHgSHaSaatagct\\n\\\n\
+NYtaHYaVYttattNtttgaaaYtaKttWtctaNtgagaaaNctNDctaaHgttagDcRt\\n\\\n\
+tatagccBaacgcaRBtRctRtggtaMYYttWtgataatcgaataattattataVaaaaa\\n\\\n\
+ttacNRVYcaaMacNatRttcKatMctgaagactaattataaYgcKcaSYaatMNctcaa\\n\\\n\
+cgtgatttttBacNtgatDccaattattKWWcattttatatatgatBcDtaaaagttgaa\\n\\\n\
+VtaHtaHHtBtataRBgtgDtaataMttRtDgDcttattNtggtctatctaaBcatctaR\\n\\\n\
+atgNacWtaatgaagtcMNaacNgHttatactaWgcNtaStaRgttaaHacccgaYStac\\n\\\n\
+aaaatWggaYaWgaattattcMaactcBKaaaRVNcaNRDcYcgaBctKaacaaaaaSgc\\n\\\n\
+tccYBBHYaVagaatagaaaacagYtctVccaMtcgtttVatcaatttDRtgWctagtac\\n\\\n\
+RttMctgtDctttcKtWttttataaatgVttgBKtgtKWDaWagMtaaagaaattDVtag\\n\\\n\
+gttacatcatttatgtcgMHaVcttaBtVRtcgtaYgBRHatttHgaBcKaYWaatcNSc\\n\\\n\
+tagtaaaaatttacaatcactSWacgtaatgKttWattagttttNaggtctcaagtcact\\n\\\n\
+attcttctaagKggaataMgtttcataagataaaaatagattatDgcBVHWgaBKttDgc\\n\\\n\
+atRHaagcaYcRaattattatgtMatatattgHDtcaDtcaaaHctStattaatHaccga\\n\\\n\
+cNattgatatattttgtgtDtRatagSacaMtcRtcattcccgacacSattgttKaWatt\\n\\\n\
+NHcaacttccgtttSRtgtctgDcgctcaaMagVtBctBMcMcWtgtaacgactctcttR\\n\\\n\
+ggRKSttgYtYatDccagttDgaKccacgVatWcataVaaagaataMgtgataaKYaaat\\n\\\n\
+cHDaacgataYctRtcYatcgcaMgtNttaBttttgatttaRtStgcaacaaaataccVg\\n\\\n\
+aaDgtVgDcStctatatttattaaaaRKDatagaaagaKaaYYcaYSgKStctccSttac\\n\\\n\
+agtcNactttDVttagaaagMHttRaNcSaRaMgBttattggtttaRMggatggcKDgWR\\n\\\n\
+tNaataataWKKacttcKWaaagNaBttaBatMHtccattaacttccccYtcBcYRtaga\\n\\\n\
+ttaagctaaYBDttaNtgaaaccHcaRMtKtaaHMcNBttaNaNcVcgVttWNtDaBatg\\n\\\n\
+ataaVtcWKcttRggWatcattgaRagHgaattNtatttctctattaattaatgaDaaMa\\n\\\n\
+tacgttgggcHaYVaaNaDDttHtcaaHtcVVDgBVagcMacgtgttaaBRNtatRtcag\\n\\\n\
+taagaggtttaagacaVaaggttaWatctccgtVtaDtcDatttccVatgtacNtttccg\\n\\\n\
+tHttatKgScBatgtVgHtYcWagcaKtaMYaaHgtaattaSaHcgcagtWNaatNccNN\\n\\\n\
+YcacgVaagaRacttctcattcccRtgtgtaattagcSttaaStWaMtctNNcSMacatt\\n\\\n\
+ataaactaDgtatWgtagtttaagaaaattgtagtNagtcaataaatttgatMMYactaa\\n\\\n\
+tatcggBWDtVcYttcDHtVttatacYaRgaMaacaStaatcRttttVtagaDtcacWat\\n\\\n\
+ttWtgaaaagaaagNRacDtttStVatBaDNtaactatatcBSMcccaSttccggaMatg\\n\\\n\
+attaaWatKMaBaBatttgataNctgttKtVaagtcagScgaaaDggaWgtgttttKtWt\\n\\\n\
+atttHaatgtagttcactaaKMagttSYBtKtaYgaactcagagRtatagtVtatcaaaW\\n\\\n\
+YagcgNtaDagtacNSaaYDgatBgtcgataacYDtaaactacagWDcYKaagtttatta\\n\\\n\
+gcatcgagttKcatDaattgattatDtcagRtWSKtcgNtMaaaaacaMttKcaWcaaSV\\n\\\n\
+MaaaccagMVtaMaDtMaHaBgaacataBBVtaatVYaNSWcSgNtDNaaKacacBttta\\n\\\n\
+tKtgtttcaaHaMctcagtaacgtcgYtactDcgcctaNgagagcYgatattttaaattt\\n\\\n\
+ccattttacatttDaaRctattttWctttacgtDatYtttcagacgcaaVttagtaaKaa\\n\\\n\
+aRtgVtccataBggacttatttgtttaWNtgttVWtaWNVDaattgtatttBaagcBtaa\\n\\\n\
+BttaaVatcHcaVgacattccNggtcgacKttaaaRtagRtctWagaYggtgMtataatM\\n\\\n\
+tgaaRttattttgWcttNtDRRgMDKacagaaaaggaaaRStcccagtYccVattaNaaK\\n\\\n\
+StNWtgacaVtagaagcttSaaDtcacaacgDYacWDYtgtttKatcVtgcMaDaSKStV\\n\\\n\
+cgtagaaWaKaagtttcHaHgMgMtctataagBtKaaaKKcactggagRRttaagaBaaN\\n\\\n\
+atVVcgRcKSttDaactagtSttSattgttgaaRYatggttVttaataaHttccaagDtg\\n\\\n\
+atNWtaagHtgcYtaactRgcaatgMgtgtRaatRaNaacHKtagactactggaatttcg\\n\\\n\
+ccataacgMctRgatgttaccctaHgtgWaYcactcacYaattcttaBtgacttaaacct\\n\\\n\
+gYgaWatgBttcttVttcgttWttMcNYgtaaaatctYgMgaaattacNgaHgaacDVVM\\n\\\n\
+tttggtHtctaaRgtacagacgHtVtaBMNBgattagcttaRcttacaHcRctgttcaaD\\n\\\n\
+BggttKaacatgKtttYataVaNattccgMcgcgtagtRaVVaattaKaatggttRgaMc\\n\\\n\
+agtatcWBttNtHagctaatctagaaNaaacaYBctatcgcVctBtgcaaagDgttVtga\\n\\\n\
+HtactSNYtaaNccatgtgDacgaVtDcgKaRtacDcttgctaagggcagMDagggtBWR\\n\\\n\
+tttSgccttttttaacgtcHctaVtVDtagatcaNMaVtcVacatHctDWNaataRgcgt\\n\\\n\
+aVHaggtaaaaSgtttMtattDgBtctgatSgtRagagYtctSaKWaataMgattRKtaa\\n\\\n\
+catttYcgtaacacattRWtBtcggtaaatMtaaacBatttctKagtcDtttgcBtKYYB\\n\\\n\
+aKttctVttgttaDtgattttcttccacttgSaaacggaaaNDaattcYNNaWcgaaYat\\n\\\n\
+tttMgcBtcatRtgtaaagatgaWtgaccaYBHgaatagataVVtHtttVgYBtMctaMt\\n\\\n\
+cctgaDcYttgtccaaaRNtacagcMctKaaaggatttacatgtttaaWSaYaKttBtag\\n\\\n\
+DacactagctMtttNaKtctttcNcSattNacttggaacaatDagtattRtgSHaataat\\n\\\n\
+gccVgacccgatactatccctgtRctttgagaSgatcatatcgDcagWaaHSgctYYWta\\n\\\n\
+tHttggttctttatVattatcgactaagtgtagcatVgtgHMtttgtttcgttaKattcM\\n\\\n\
+atttgtttWcaaStNatgtHcaaaDtaagBaKBtRgaBgDtSagtatMtaacYaatYtVc\\n\\\n\
+KatgtgcaacVaaaatactKcRgtaYtgtNgBBNcKtcttaccttKgaRaYcaNKtactt\\n\\\n\
+tgagSBtgtRagaNgcaaaNcacagtVtttHWatgttaNatBgtttaatNgVtctgaata\\n\\\n\
+tcaRtattcttttttttRaaKcRStctcggDgKagattaMaaaKtcaHacttaataataK\\n\\\n\
+taRgDtKVBttttcgtKaggHHcatgttagHggttNctcgtatKKagVagRaaaggaaBt\\n\\\n\
+NatttVKcRttaHctaHtcaaatgtaggHccaBataNaNaggttgcWaatctgatYcaaa\\n\\\n\
+HaatWtaVgaaBttagtaagaKKtaaaKtRHatMaDBtBctagcatWtatttgWttVaaa\\n\\\n\
+ScMNattRactttgtYtttaaaagtaagtMtaMaSttMBtatgaBtttaKtgaatgagYg\\n\\\n\
+tNNacMtcNRacMMHcttWtgtRtctttaacaacattattcYaMagBaacYttMatcttK\\n\\\n\
+cRMtgMNccattaRttNatHaHNaSaaHMacacaVaatacaKaSttHatattMtVatWga\\n\\\n\
+ttttttaYctttKttHgScWaacgHtttcaVaaMgaacagNatcgttaacaaaaagtaca\\n\\\n\
+HBNaattgttKtcttVttaaBtctgctacgBgcWtttcaggacacatMgacatcccagcg\\n\\\n\
+gMgaVKaBattgacttaatgacacacaaaaaatRKaaBctacgtRaDcgtagcVBaacDS\\n\\\n\
+BHaaaaSacatatacagacRNatcttNaaVtaaaataHattagtaaaaSWccgtatWatg\\n\\\n\
+gDttaactattgcccatcttHaSgYataBttBaactattBtcHtgatcaataSttaBtat\\n\\\n\
+KSHYttWggtcYtttBttaataccRgVatStaHaKagaatNtagRMNgtcttYaaSaact\\n\\\n\
+cagDSgagaaYtMttDtMRVgWKWtgMaKtKaDttttgactatacataatcNtatNaHat\\n\\\n\
+tVagacgYgatatatttttgtStWaaatctWaMgagaRttRatacgStgattcttaagaD\\n\\\n\
+taWccaaatRcagcagaaNKagtaaDggcgccBtYtagSBMtactaaataMataBSacRM\\n\\\n\
+gDgattMMgtcHtcaYDtRaDaacggttDaggcMtttatgttaNctaattaVacgaaMMt\\n\\\n\
+aatDccSgtattgaRtWWaccaccgagtactMcgVNgctDctaMScatagcgtcaactat\\n\\\n\
+acRacgHRttgctatttaatgaattataYKttgtaagWgtYttgcHgMtaMattWaWVta\\n\\\n\
+RgcttgYgttBHtYataSccStBtgtagMgtDtggcVaaSBaatagDttgBgtctttctc\\n\\\n\
+attttaNagtHKtaMWcYactVcgcgtatMVtttRacVagDaatcttgctBBcRDgcaac\\n\\\n\
+KttgatSKtYtagBMagaRtcgBattHcBWcaactgatttaatttWDccatttatcgagS\\n\\\n\
+KaWttataHactaHMttaatHtggaHtHagaatgtKtaaRactgtttMatacgatcaagD\\n\\\n\
+gatKaDctataMggtHDtggHacctttRtatcttYattttgacttgaaSaataaatYcgB\\n\\\n\
+aaaaccgNatVBttMacHaKaataagtatKgtcaagactcttaHttcggaattgttDtct\\n\\\n\
+aaccHttttWaaatgaaatataaaWattccYDtKtaaaacggtgaggWVtctattagtga\\n\\\n\
+ctattaagtMgtttaagcatttgSgaaatatccHaaggMaaaattttcWtatKctagDtY\\n\\\n\
+tMcctagagHcactttactatacaaacattaacttaHatcVMYattYgVgtMttaaRtga\\n\\\n\
+aataaDatcaHgtHHatKcDYaatcttMtNcgatYatgSaMaNtcttKcWataScKggta\\n\\\n\
+tcttacgcttWaaagNatgMgHtctttNtaacVtgttcMaaRatccggggactcMtttaY\\n\\\n\
+MtcWRgNctgNccKatcttgYDcMgattNYaRagatHaaHgKctcataRDttacatBatc\\n\\\n\
+cattgDWttatttaWgtcggagaaaaatacaatacSNtgggtttccttacSMaagBatta\\n\\\n\
+caMaNcactMttatgaRBacYcYtcaaaWtagctSaacttWgDMHgaggatgBVgcHaDt\\n\\\n\
+ggaactttggtcNatNgtaKaBcccaNtaagttBaacagtatacDYttcctNgWgcgSMc\\n\\\n\
+acatStctHatgRcNcgtacacaatRttMggaNKKggataaaSaYcMVcMgtaMaHtgat\\n\\\n\
+tYMatYcggtcttcctHtcDccgtgRatcattgcgccgatatMaaYaataaYSggatagc\\n\\\n\
+gcBtNtaaaScaKgttBgagVagttaKagagtatVaactaSacWactSaKatWccaKaaa\\n\\\n\
+atBKgaaKtDMattttgtaaatcRctMatcaaMagMttDgVatggMaaWgttcgaWatga\\n\\\n\
+aatttgRtYtattaWHKcRgctacatKttctaccaaHttRatctaYattaaWatVNccat\\n\\\n\
+NgagtcKttKataStRaatatattcctRWatDctVagttYDgSBaatYgttttgtVaatt\\n\\\n\
+taatagcagMatRaacttBctattgtMagagattaaactaMatVtHtaaatctRgaaaaa\\n\\\n\
+aaatttWacaacaYccYDSaattMatgaccKtaBKWBattgtcaagcHKaagttMMtaat\\n\\\n\
+ttcKcMagNaaKagattggMagaggtaatttYacatcWaaDgatMgKHacMacgcVaaca\\n\\\n\
+DtaDatatYggttBcgtatgWgaSatttgtagaHYRVacaRtctHaaRtatgaactaata\\n\\\n\
+tctSSBgggaaHMWtcaagatKgagtDaSatagttgattVRatNtctMtcSaagaSHaat\\n\\\n\
+aNataataRaaRgattctttaataaagWaRHcYgcatgtWRcttgaaggaMcaataBRaa\\n\\\n\
+ccagStaaacNtttcaatataYtaatatgHaDgcStcWttaacctaRgtYaRtataKtgM\\n\\\n\
+ttttatgactaaaatttacYatcccRWtttHRtattaaatgtttatatttgttYaatMca\\n\\\n\
+RcSVaaDatcgtaYMcatgtagacatgaaattgRtcaaYaaYtRBatKacttataccaNa\\n\\\n\
+aattVaBtctggacaagKaaYaaatatWtMtatcYaaVNtcgHaactBaagKcHgtctac\\n\\\n\
+aatWtaDtSgtaHcataHtactgataNctRgttMtDcDttatHtcgtacatcccaggStt\\n\\\n\
+aBgtcacacWtccNMcNatMVaVgtccDYStatMaccDatggYaRKaaagataRatttHK\\n\\\n\
+tSaaatDgataaacttaHgttgVBtcttVttHgDacgaKatgtatatNYataactctSat\\n\\\n\
+atatattgcHRRYttStggaactHgttttYtttaWtatMcttttctatctDtagVHYgMR\\n\\\n\
+BgtHttcctaatYRttKtaagatggaVRataKDctaMtKBNtMtHNtWtttYcVtattMc\\n\\\n\
+gRaacMcctNSctcatttaaagDcaHtYccSgatgcaatYaaaaDcttcgtaWtaattct\\n\\\n\
+cgttttScttggtaatctttYgtctaactKataHacctMctcttacHtKataacacagcN\\n\\\n\
+RatgKatttttSaaatRYcgDttaMRcgaaattactMtgcgtaagcgttatBtttttaat\\n\\\n\
+taagtNacatHgttcRgacKcBBtVgatKttcgaBaatactDRgtRtgaNacWtcacYtt\\n\\\n\
+aaKcgttctHaKttaNaMgWgWaggtctRgaKgWttSttBtDcNtgtttacaaatYcDRt\\n\\\n\
+gVtgcctattcNtctaaaDMNttttNtggctgagaVctDaacVtWccaagtaacacaNct\\n\\\n\
+gaScattccDHcVBatcgatgtMtaatBgHaatDctMYgagaatgYWKcctaatNaStHa\\n\\\n\
+aaKccgHgcgtYaaYtattgtStgtgcaaRtattaKatattagaWVtcaMtBagttatta\\n\\\n\
+gNaWHcVgcaattttDcMtgtaRHVYtHtctgtaaaaHVtMKacatcgNaatttMatatg\\n\\\n\
+ttgttactagWYtaRacgataKagYNKcattataNaRtgaacKaYgcaaYYacaNccHat\\n\\\n\
+MatDcNgtHttRaWttagaaDcaaaaaatagggtKDtStaDaRtaVtHWKNtgtattVct\\n\\\n\
+SVgRgataDaRaWataBgaagaaKtaataaYgDcaStaNgtaDaaggtattHaRaWMYaY\\n\\\n\
+aWtggttHYgagVtgtgcttttcaaDKcagVcgttagacNaaWtagtaataDttctggtt\\n\\\n\
+VcatcataaagtgKaaaNaMtaBBaattaatWaattgctHaVKaSgDaaVKaHtatatat\\n\\\n\
+HatcatSBagNgHtatcHYMHgttDgtaHtBttWatcgtttaRaattgStKgSKNWKatc\\n\\\n\
+agDtctcagatttctRtYtBatBgHHtKaWtgYBgacVVWaKtacKcDttKMaKaVcggt\\n\\\n\
+gttataagaataaHaatattagtataatMHgttYgaRttagtaRtcaaVatacggtcMcg\\n\\\n\
+agtaaRttacWgactKRYataaaagSattYaWgagatYagKagatgSaagKgttaatMgg\\n\\\n\
+tataatgttWYttatgagaaacctNVataatHcccKtDctcctaatactggctHggaSag\\n\\\n\
+gRtKHaWaattcgSatMatttagaggcYtctaMcgctcataSatatgRagacNaaDagga\\n\\\n\
+VBagaYttKtacNaKgtSYtagttggaWcatcWttaatctatgaVtcgtgtMtatcaYcg\\n\\\n\
+tRccaaYgDctgcMgtgtWgacWtgataacacgcgctBtgttaKtYDtatDcatcagKaV\\n\\\n\
+MctaatcttgVcaaRgcRMtDcgattaHttcaNatgaatMtactacVgtRgatggaWttt\\n\\\n\
+actaaKatgagSaaKggtaNtactVaYtaaKRagaacccacaMtaaMtKtatBcttgtaa\\n\\\n\
+WBtMctaataaVcDaaYtcRHBtcgttNtaaHatttBNgRStVDattBatVtaagttaYa\\n\\\n\
+tVattaagaBcacggtSgtVtatttaRattgatgtaHDKgcaatattKtggcctatgaWD\\n\\\n\
+KRYcggattgRctatNgatacaatMNttctgtcRBYRaaaHctNYattcHtaWcaattct\\n\\\n\
+BtMKtVgYataatMgYtcagcttMDataVtggRtKtgaatgccNcRttcaMtRgattaac\\n\\\n\
+attRcagcctHtWMtgtDRagaKaBtgDttYaaaaKatKgatctVaaYaacWcgcatagB\\n\\\n\
+VtaNtRtYRaggBaaBtgKgttacataagagcatgtRattccacttaccatRaaatgWgD\\n\\\n\
+aMHaYVgVtaSctatcgKaatatattaDgacccYagtgtaYNaaatKcagtBRgagtcca\\n\\\n\
+tgKgaaaccBgaagBtgSttWtacgatWHaYatcgatttRaaNRgcaNaKVacaNtDgat\\n\\\n\
+tgHVaatcDaagcgtatgcNttaDataatcSataaKcaataaHWataBtttatBtcaKtK\\n\\\n\
+tatagttaDgSaYctacaRatNtaWctSaatatttYaKaKtaccWtatcRagacttaYtt\\n\\\n\
+VcKgSDcgagaagatccHtaattctSttatggtKYgtMaHagVaBRatttctgtRgtcta\\n\\\n\
+tgggtaHKgtHacHtSYacgtacacHatacKaaBaVaccaDtatcSaataaHaagagaat\\n\\\n\
+ScagactataaRttagcaaVcaHataKgDacatWccccaagcaBgagWatctaYttgaaa\\n\\\n\
+tctVNcYtttWagHcgcgcDcVaaatgttKcHtNtcaatagtgtNRaactttttcaatgg\\n\\\n\
+WgBcgDtgVgtttctacMtaaataaaRggaaacWaHttaRtNtgctaaRRtVBctYtVta\\n\\\n\
+tDcattDtgaccYatagatYRKatNYKttNgcctagtaWtgaactaMVaacctgaStttc\\n\\\n\
+tgaKVtaaVaRKDttVtVctaDNtataaaDtccccaagtWtcgatcactDgYaBcatcct\\n\\\n\
+MtVtacDaaBtYtMaKNatNtcaNacgDatYcatcgcaRatWBgaacWttKttagYtaat\\n\\\n\
+tcggttgSWttttDWctttacYtatatWtcatDtMgtBttgRtVDggttaacYtacgtac\\n\\\n\
+atgaattgaaWcttMStaDgtatattgaDtcRBcattSgaaVBRgagccaaKtttcDgcg\\n\\\n\
+aSMtatgWattaKttWtgDBMaggBBttBaatWttRtgcNtHcgttttHtKtcWtagHSt\\n\\\n\
+aacagttgatatBtaWSaWggtaataaMttaKacDaatactcBttcaatatHttcBaaSa\\n\\\n\
+aatYggtaRtatNtHcaatcaHtagVtgtattataNggaMtcttHtNagctaaaggtaga\\n\\\n\
+YctMattNaMVNtcKtactBKcaHHcBttaSagaKacataYgctaKaYgttYcgacWVtt\\n\\\n\
+WtSagcaacatcccHaccKtcttaacgaKttcacKtNtacHtatatRtaaatacactaBt\\n\\\n\
+ttgaHaRttggttWtatYagcatYDatcggagagcWBataagRtacctataRKgtBgatg\\n\\\n\
+aDatataSttagBaHtaatNtaDWcWtgtaattacagKttcNtMagtattaNgtctcgtc\\n\\\n\
+ctcttBaHaKcKccgtRcaaYagSattaagtKataDatatatagtcDtaacaWHcaKttD\\n\\\n\
+gaaRcgtgYttgtcatatNtatttttatggccHtgDtYHtWgttatYaacaattcaWtat\\n\\\n\
+NgctcaaaSttRgctaatcaaatNatcgtttaBtNNVtgttataagcaaagattBacgtD\\n\\\n\
+atttNatttaaaDcBgtaSKgacgtagataatttcHMVNttgttBtDtgtaWKaaRMcKM\\n\\\n\
+tHtaVtagataWctccNNaSWtVaHatctcMgggDgtNHtDaDttatatVWttgttattt\\n\\\n\
+aacctttcacaaggaSaDcggttttttatatVtctgVtaacaStDVaKactaMtttaSNa\\n\\\n\
+gtgaaattaNacttSKctattcctctaSagKcaVttaagNaVcttaVaaRNaHaaHttat\\n\\\n\
+gtHttgtgatMccaggtaDcgaccgtWgtWMtttaHcRtattgScctatttKtaaccaag\\n\\\n\
+tYagaHgtWcHaatgccKNRtttagtMYSgaDatctgtgaWDtccMNcgHgcaaacNDaa\\n\\\n\
+aRaStDWtcaaaaHKtaNBctagBtgtattaactaattttVctagaatggcWSatMaccc\\n\\\n\
+ttHttaSgSgtgMRcatRVKtatctgaaaccDNatYgaaVHNgatMgHRtacttaaaRta\\n\\\n\
+tStRtDtatDttYatattHggaBcttHgcgattgaKcKtttcRataMtcgaVttWacatN\\n\\\n\
+catacctRataDDatVaWNcggttgaHtgtMacVtttaBHtgagVttMaataattatgtt\\n\\\n\
+cttagtttgtgcDtSatttgBtcaacHattaaBagVWcgcaSYttMgcttacYKtVtatc\\n\\\n\
+aYaKctgBatgcgggcYcaaaaacgNtctagKBtattatctttKtaVttatagtaYtRag\\n\\\n\
+NtaYataaVtgaatatcHgcaaRataHtacacatgtaNtgtcgYatWMatttgaactacR\\n\\\n\
+ctaWtWtatacaatctBatatgYtaagtatgtgtatSttactVatcttYtaBcKgRaSgg\\n\\\n\
+RaaaaatgcagtaaaWgtaRgcgataatcBaataccgtatttttccatcNHtatWYgatH\\n\\\n\
+SaaaDHttgctgtccHtggggcctaataatttttctatattYWtcattBtgBRcVttaVM\\n\\\n\
+RSgctaatMagtYtttaaaaatBRtcBttcaaVtaacagctccSaaSttKNtHtKYcagc\\n\\\n\
+agaaaccccRtttttaaDcDtaStatccaagcgctHtatcttaDRYgatDHtWcaaaBcW\\n\\\n\
+gKWHttHataagHacgMNKttMKHccaYcatMVaacgttaKgYcaVaaBtacgcaacttt\\n\\\n\
+MctaaHaatgtBatgagaSatgtatgSRgHgWaVWgataaatatttccKagVgataattW\\n\\\n\
+aHNcYggaaatgctHtKtaDtctaaagtMaatVDVactWtSaaWaaMtaHtaSKtcBRaN\\n\\\n\
+cttStggtBttacNagcatagRgtKtgcgaacaacBcgKaatgataagatgaaaattgta\\n\\\n\
+ctgcgggtccHHWHaaNacaBttNKtKtcaaBatatgctaHNgtKcDWgtttatNgVDHg\\n\\\n\
+accaacWctKaaggHttgaRgYaatHcaBacaatgagcaaattactgtaVaaYaDtagat\\n\\\n\
+tgagNKggtggtgKtWKaatacagDRtatRaMRtgattDggtcaaYRtatttNtagaDtc\\n\\\n\
+acaaSDctDtataatcgtactaHttatacaatYaacaaHttHatHtgcgatRRttNgcat\\n\\\n\
+SVtacWWgaaggagtatVMaVaaattScDDKNcaYBYaDatHgtctatBagcaacaagaa\\n\\\n\
+tgagaaRcataaKNaRtBDatcaaacgcattttttaaBtcSgtacaRggatgtMNaattg\\n\\\n\
+gatatWtgagtattaaaVctgcaYMtatgatttttYgaHtgtcttaagWBttHttgtctt\\n\\\n\
+attDtcgtatWtataataSgctaHagcDVcNtaatcaagtaBDaWaDgtttagYctaNcc\\n\\\n\
+DtaKtaHcttaataacccaRKtacaVaatNgcWRaMgaattatgaBaaagattVYaHMDc\\n\\\n\
+aDHtcRcgYtcttaaaWaaaVKgatacRtttRRKYgaatacaWVacVcRtatMacaBtac\\n\\\n\
+tggMataaattttHggNagSctacHgtBagcgtcgtgattNtttgatSaaggMttctttc\\n\\\n\
+ttNtYNagBtaaacaaatttMgaccttacataattgYtcgacBtVMctgStgMDtagtaR\\n\\\n\
+ctHtatgttcatatVRNWataDKatWcgaaaaagttaaaagcacgHNacgtaatctttMR\\n\\\n\
+tgacttttDacctataaacgaaatatgattagaactccSYtaBctttaataacWgaaaYa\\n\\\n\
+tagatgWttcatKtNgatttttcaagHtaYgaaRaDaagtaggagcttatVtagtctttc\\n\\\n\
+attaaaatcgKtattaRttacagVaDatgcatVgattgggtctttHVtagKaaRBtaHta\\n\\\n\
+aggccccaaaaKatggtttaMWgtBtaaacttcactttKHtcgatctccctaYaBacMgt\\n\\\n\
+cttBaBaNgcgaaacaatctagtHccHtKttcRtRVttccVctttcatacYagMVtMcag\\n\\\n\
+aMaaacaataBctgYtaatRaaagattaaccatVRatHtaRagcgcaBcgDttStttttc\\n\\\n\
+VtttaDtKgcaaWaaaaatSccMcVatgtKgtaKgcgatatgtagtSaaaDttatacaaa\\n\\\n\
+catYaRRcVRHctKtcgacKttaaVctaDaatgttMggRcWaacttttHaDaKaDaBctg\\n\\\n\
+taggcgtttaHBccatccattcNHtDaYtaataMttacggctNVaacDattgatatttta\\n\\\n\
+cVttSaattacaaRtataNDgacVtgaacataVRttttaDtcaaacataYDBtttaatBa\\n\\\n\
+DtttYDaDaMccMttNBttatatgagaaMgaNtattHccNataattcaHagtgaaggDga\\n\\\n\
+tgtatatatgYatgaStcataaBStWacgtcccataRMaaDattggttaaattcMKtctM\\n\\\n\
+acaBSactcggaatDDgatDgcWctaacaccgggaVcacWKVacggtaNatatacctMta\\n\\\n\
+tgatagtgcaKagggVaDtgtaacttggagtcKatatcgMcttRaMagcattaBRaStct\\n\\\n\
+YSggaHYtacaactMBaagDcaBDRaaacMYacaHaattagcattaaaHgcgctaaggSc\\n\\\n\
+cKtgaaKtNaBtatDDcKBSaVtgatVYaagVtctSgMctacgttaacWaaattctSgtD\\n\\\n\
+actaaStaaattgcagBBRVctaatatacctNttMcRggctttMttagacRaHcaBaacV\\n\\\n\
+KgaataHttttMgYgattcYaNRgttMgcVaaacaVVcDHaatttgKtMYgtatBtVVct\\n\\\n\
+WgVtatHtacaaHttcacgatagcagtaaNattBatatatttcVgaDagcggttMaagtc\\n\\\n\
+ScHagaaatgcYNggcgtttttMtStggtRatctacttaaatVVtBacttHNttttaRca\\n\\\n\
+aatcacagHgagagtMgatcSWaNRacagDtatactaaDKaSRtgattctccatSaaRtt\\n\\\n\
+aaYctacacNtaRtaactggatgaccYtacactttaattaattgattYgttcagDtNKtt\\n\\\n\
+agDttaaaaaaaBtttaaNaYWKMBaaaacVcBMtatWtgBatatgaacVtattMtYatM\\n\\\n\
+NYDKNcKgDttDaVtaaaatgggatttctgtaaatWtctcWgtVVagtcgRgacttcccc\\n\\\n\
+taDcacagcRcagagtgtWSatgtacatgttaaSttgtaaHcgatgggMagtgaacttat\\n\\\n\
+RtttaVcaccaWaMgtactaatSSaHtcMgaaYtatcgaaggYgggcgtgaNDtgttMNg\\n\\\n\
+aNDMtaattcgVttttaacatgVatgtWVMatatcaKgaaattcaBcctccWcttgaaWH\\n\\\n\
+tWgHtcgNWgaRgctcBgSgaattgcaaHtgattgtgNagtDttHHgBttaaWcaaWagc\\n\\\n\
+aSaHHtaaaVctRaaMagtaDaatHtDMtcVaWMtagSagcttHSattaacaaagtRacM\\n\\\n\
+tRtctgttagcMtcaBatVKtKtKacgagaSNatSactgtatatcBctgagVtYactgta\\n\\\n\
+aattaaaggcYgDHgtaacatSRDatMMccHatKgttaacgactKtgKagtcttcaaHRV\\n\\\n\
+tccttKgtSataatttacaactggatDNgaacttcaRtVaagDcaWatcBctctHYatHa\\n\\\n\
+DaaatttagYatSatccaWtttagaaatVaacBatHcatcgtacaatatcgcNYRcaata\\n\\\n\
+YaRaYtgattVttgaatgaVaactcRcaNStgtgtattMtgaggtNttBaDRcgaaaagc\\n\\\n\
+tNgBcWaWgtSaDcVtgVaatMKBtttcgtttctaaHctaaagYactgMtatBDtcStga\\n\\\n\
+ccgtSDattYaataHctgggaYYttcggttaWaatctggtRagWMaDagtaacBccacta\\n\\\n\
+cgHWMKaatgatWatcctgHcaBaSctVtcMtgtDttacctaVgatYcWaDRaaaaRtag\\n\\\n\
+atcgaMagtggaRaWctctgMgcWttaagKBRtaaDaaWtctgtaagYMttactaHtaat\\n\\\n\
+cttcataacggcacBtSgcgttNHtgtHccatgttttaaagtatcgaKtMttVcataYBB\\n\\\n\
+aKtaMVaVgtattNDSataHcagtWMtaggtaSaaKgttgBtVtttgttatcatKcgHac\\n\\\n\
+acRtctHatNVagSBgatgHtgaRaSgttRcctaacaaattDNttgacctaaYtBgaaaa\\n\\\n\
+tagttattactcttttgatgtNNtVtgtatMgtcttRttcatttgatgacacttcHSaaa\\n\\\n\
+ccaWWDtWagtaRDDVNacVaRatgttBccttaatHtgtaaacStcVNtcacaSRttcYa\\n\\\n\
+gacagaMMttttgMcNttBcgWBtactgVtaRttctccaaYHBtaaagaBattaYacgat\\n\\\n\
+ttacatctgtaaMKaRYtttttactaaVatWgctBtttDVttctggcDaHaggDaagtcg\\n\\\n\
+aWcaagtagtWttHtgKtVataStccaMcWcaagataagatcactctHatgtcYgaKcat\\n\\\n\
+cagatactaagNSStHcctRRNtattgtccttagttagMVgtatagactaactctVcaat\\n\\\n\
+MctgtttgtgttgccttatWgtaBVtttctggMcaaKgDWtcgtaaYStgSactatttHg\\n\\\n\
+atctgKagtagBtVacRaagRtMctatgggcaaaKaaaatacttcHctaRtgtDcttDat\\n\\\n\
+taggaaatttcYHaRaaBttaatggcacKtgctHVcaDcaaaVDaaaVcgMttgtNagcg\\n\\\n\
+taDWgtcgttaatDgKgagcSatatcSHtagtagttggtgtHaWtaHKtatagctgtVga\\n\\\n\
+ttaBVaatgaataagtaatVatSttaHctttKtttgtagttaccttaatcgtagtcctgB\\n\\\n\
+cgactatttVcMacHaaaggaatgDatggKtaHtgStatattaaSagctWcctccRtata\\n\\\n\
+BaDYcgttgcNaagaggatRaaaYtaWgNtSMcaatttactaacatttaaWttHtatBat\\n\\\n\
+tgtcgacaatNgattgcNgtMaaaKaBDattHacttggtRtttaYaacgVactBtaBaKt\\n\\\n\
+gBttatgVttgtVttcaatcWcNctDBaaBgaDHacBttattNtgtDtatttVSaaacag\\n\\\n\
+gatgcRatSgtaSaNtgBatagttcHBgcBBaaattaHgtDattatDaKaatBaaYaaMa\\n\\\n\
+ataaataKtttYtagtBgMatNcatgtttgaNagtgttgtgKaNaSagtttgaSMaYBca\\n\\\n\
+aaacDStagttVacaaaaactaaWttBaagtctgtgcgtMgtaattctcctacctcaNtt\\n\\\n\
+taaccaaaaVtBcacataacaccccBcWMtatVtggaatgaWtcaaWaaaaaaaaWtDta\\n\\\n\
+atatRcctDWtcctaccMtVVatKttaWaaKaaatataaagScHBagaggBaSMtaWaVt\\n\\\n\
+atattactSaaaKNaactatNatccttgaYctattcaaaVgatttYHcRagattttaSat\\n\\\n\
+aggttattcVtaaagaKgtattattKtRttNcggcRgtgtgtWYtaacHgKatKgatYta\\n\\\n\
+cYagDtWcHBDctctgRaYKaYagcactKcacSaRtBttttBHKcMtNtcBatttatttt\\n\\\n\
+tgSatVgaaagaWtcDtagDatatgMacaacRgatatatgtttgtKtNRaatatNatgYc\\n\\\n\
+aHtgHataacKtgagtagtaacYttaNccaaatHcacaacaVDtagtaYtccagcattNt\\n\\\n\
+acKtBtactaaagaBatVtKaaHBctgStgtBgtatgaSNtgDataaccctgtagcaBgt\\n\\\n\
+gatcttaDataStgaMaccaSBBgWagtacKcgattgaDgNNaaaacacagtSatBacKD\\n\\\n\
+gcgtataBKcatacactaSaatYtYcDaactHttcatRtttaatcaattataRtttgtaa\\n\\\n\
+gMcgNttcatcBtYBagtNWNMtSHcattcRctttttRWgaKacKttgggagBcgttcgc\\n\\\n\
+MaWHtaatactgtctctatttataVgtttaBScttttaBMaNaatMacactYtBMggtHa\\n\\\n\
+cMagtaRtctgcatttaHtcaaaatttgagKtgNtactBacaHtcgtatttctMaSRagc\\n\\\n\
+agttaatgtNtaaattgagagWcKtaNttagVtacgatttgaatttcgRtgtWcVatcgt\\n\\\n\
+taaDVctgtttBWgaccagaaagtcSgtVtatagaBccttttcctaaattgHtatcggRa\\n\\\n\
+ttttcaaggcYSKaagWaWtRactaaaacccBatMtttBaatYtaagaactSttcgaaSc\\n\\\n\
+aatagtattgaccaagtgttttctaacatgtttNVaatcaaagagaaaNattaaRtttta\\n\\\n\
+VaaaccgcaggNMtatattVctcaagaggaacgBgtttaacaagttcKcYaatatactaa\\n\\\n\
+ccBaaaSggttcNtattctagttRtBacgScVctcaatttaatYtaaaaaaatgSaatga\\n\\\n\
+tagaMBRatgRcMcgttgaWHtcaVYgaatYtaatctttYttatRaWtctgBtDcgatNa\\n\\\n\
+tcKaBaDgatgtaNatWKctccgatattaacattNaaacDatgBgttctgtDtaaaMggt\\n\\\n\
+gaBaSHataacgccSctaBtttaRBtcNHcDatcDcctagagtcRtaBgWttDRVHagat\\n\\\n\
+tYatgtatcWtaHtttYcattWtaaagtctNgtStggRNcgcggagSSaaagaaaatYcH\\n\\\n\
+DtcgctttaatgYcKBVSgtattRaYBaDaaatBgtatgaHtaaRaRgcaSWNtagatHa\\n\\\n\
+acttNctBtcaccatctMcatattccaSatttgcgaDagDgtatYtaaaVDtaagtttWV\\n\\\n\
+aagtagYatRttaagDcNgacKBcScagHtattatcDaDactaaaaaYgHttBcgaDttg\\n\\\n\
+gataaaKSRcBMaBcgaBSttcWtgNBatRaccgattcatttataacggHVtaattcaca\\n\\\n\
+agagVttaaRaatVVRKcgWtVgacctgDgYaaHaWtctttcacMagggatVgactagMa\\n\\\n\
+aataKaaNWagKatagNaaWtaaaatttgaattttatttgctaaVgaHatBatcaaBWcB\\n\\\n\
+gttcMatcgBaaNgttcgSNaggSaRtttgHtRtattaNttcDcatSaVttttcgaaaaa\\n\\\n\
+ttgHatctaRaggSaNatMDaaatDcacgattttagaHgHaWtYgattaatHNSttatMS\\n\\\n\
+gggNtcKtYatRggtttgtMWVtttaYtagcagBagHaYagttatatggtBacYcattaR\\n\\\n\
+SataBatMtttaaatctHcaaaSaaaagttNSaaWcWRccRtKaagtBWtcaaattSttM\\n\\\n\
+tattggaaaccttaacgttBtWatttatatWcDaatagattcctScacctaagggRaaYt\\n\\\n\
+aNaatgVtBcttaaBaacaMVaaattatStYgRcctgtactatcMcVKatttcgSgatRH\\n\\\n\
+MaaaHtagtaaHtVgcaaataatatcgKKtgccaatBNgaaWcVttgagttaKatagttc\\n\\\n\
+aggKDatDtattgaKaVcaKtaataDataataHSaHcattagttaatRVYcNaHtaRcaa\\n\\\n\
+ggtNHcgtcaaccaBaaagYtHWaaaRcKgaYaaDttgcWYtataRgaatatgtYtgcKt\\n\\\n\
+aNttWacatYHctRaDtYtattcBttttatcSataYaYgttWaRagcacHMgtttHtYtt\\n\\\n\
+YaatcggtatStttcgtRSattaaDaKMaatatactaNBaWgctacacYtgaYVgtgHta\\n\\\n\
+aaRaaRgHtagtWattataaaSDaaWtgMattatcgaaaagtaYRSaWtSgNtBgagcRY\\n\\\n\
+aMDtactaacttaWgtatctagacaagNtattHggataatYttYatcataDcgHgttBtt\\n\\\n\
+ctttVttgccgaaWtaaaacgKgtatctaaaaaNtccDtaDatBMaMggaatNKtatBaa\\n\\\n\
+atVtccRaHtaSacataHattgtttKVYattcataVaattWtcgtgMttcttKtgtctaa\\n\\\n\
+cVtatctatatBRataactcgKatStatattcatHHRttKtccaacgtgggtgRgtgaMt\\n\\\n\
+attattggctatcgtgacMtRcBDtcttgtactaatRHttttaagatcgVMDStattatY\\n\\\n\
+BtttDttgtBtNttgRcMtYtgBacHaWaBaatDKctaagtgaaactaatgRaaKgatcc\\n\\\n\
+aagNaaaatattaggWNtaagtatacttttKcgtcggSYtcttgRctataYcttatataa\\n\\\n\
+agtatattaatttataVaacacaDHatctatttttKYVatHRactttaBHccaWagtact\\n\\\n\
+BtcacgaVgcgttRtttttttSVgtSagtBaaattctgaHgactcttgMcattttagVta\\n\\\n\
+agaattHctHtcaDaaNtaacRggWatagttcgtSttgaDatcNgNagctagDgatcNtt\\n\\\n\
+KgttgtaDtctttRaaYStRatDtgMggactSttaDtagSaVtBDttgtDgccatcacaM\\n\\\n\
+attaaaMtNacaVcgSWcVaaDatcaHaatgaattaMtatccVtctBtaattgtWattat\\n\\\n\
+BRcWcaatgNNtactWYtDaKttaaatcactcagtRaaRgatggtKgcgccaaHgaggat\\n\\\n\
+StattYcaNMtcaBttacttatgagDaNtaMgaaWtgtttcttctaHtMNgttatctaWW\\n\\\n\
+atMtBtaaatagDVatgtBYtatcggcttaagacMRtaHScgatatYgRDtcattatSDa\\n\\\n\
+HggaaataNgaWSRRaaaBaatagBattaDctttgHWNttacaataaaaaaatacggttt\\n\\\n\
+gHgVtaHtWMttNtBtctagtMcgKMgHgYtataHaNagWtcaacYattaataYRgtaWK\\n\\\n\
+gaBctataaccgatttaHaNBRaRaMtccggtNgacMtctcatttgcaattcWgMactta\\n\\\n\
+caaDaaNtactWatVtttagccttMaatcagVaagtctVaaDaBtattaattaYtNaYtg\\n\\\n\
+gattaKtaKctYaMtattYgatattataatKtVgDcttatatNBtcgttgtStttttMag\\n\\\n\
+aggttaHYSttcKgtcKtDNtataagttataagSgttatDtRttattgttttSNggRtca\\n\\\n\
+aKMNatgaatattgtBWtaMacctgggYgaSgaagYataagattacgagaatBtggtRcV\\n\\\n\
+HtgYggaDgaYaKagWagctatagacgaaHgtWaNgacttHRatVaWacKYtgRVNgVcS\\n\\\n\
+gRWctacatcKSactctgWYtBggtataagcttNRttVtgRcaWaaatDMatYattaact\\n\\\n\
+ttcgaagRatSctgccttgcRKaccHtttSNVagtagHagBagttagaccaRtataBcca\\n\\\n\
+taatSHatRtcHagacBWatagcaMtacaRtgtgaaBatctKRtScttccaNaatcNgta\\n\\\n\
+atatWtcaMgactctBtWtaaNactHaaaaRctcgcatggctMcaaNtcagaaaaacaca\\n\\\n\
+gtggggWttRttagtaagaVctVMtcgaatcttcMaaaHcaHBttcgattatgtcaDagc\\n\\\n\
+YRtBtYcgacMgtDcagcgaNgttaataatagcagKYYtcgtaBtYctMaRtaRtDagaa\\n\\\n\
+aacacatgYaBttgattattcgaaNttBctSataaMataWRgaHtttccgtDgaYtatgg\\n\\\n\
+tDgHKgMtatttVtMtVagttaRatMattRagataaccctKctMtSttgaHagtcStcta\\n\\\n\
+tttccSagatgttccacgaggYNttHRacgattcDatatDcataaaatBBttatcgaHtN\\n\\\n\
+HaaatatDNaggctgaNcaaggagttBttMgRagVatBcRtaWgatgBtSgaKtcgHttt\\n\\\n\
+gaatcaaDaHttcSBgHcagtVaaSttDcagccgttNBtgttHagYtattctttRWaaVt\\n\\\n\
+SttcatatKaaRaaaNacaVtVctMtSDtDtRHRcgtaatgctcttaaatSacacaatcg\\n\\\n\
+HattcaWcttaaaatHaaatcNctWttaNMcMtaKctVtcctaagYgatgatcYaaaRac\\n\\\n\
+tctaRDaYagtaacgtDgaggaaatctcaaacatcaScttcKttNtaccatNtaNataca\\n\\\n\
+tttHaaDHgcaDatMWaaBttcRggctMaagctVYcacgatcaDttatYtaatcKatWat\\n\\\n\
+caatVYtNagatttgattgaYttttYgacttVtcKaRagaaaHVgDtaMatKYagagttN\\n\\\n\
+atWttaccNtYtcDWgSatgaRgtMatgKtcgacaagWtacttaagtcgKtgatccttNc\\n\\\n\
+ttatagMatHVggtagcgHctatagccctYttggtaattKNaacgaaYatatVctaataM\\n\\\n\
+aaaYtgVtcKaYtaataacagaatHcacVagatYWHttagaaSMaatWtYtgtaaagNaa\\n\\\n\
+acaVgaWtcacNWgataNttcaSagctMDaRttgNactaccgataMaaatgtttattDtc\\n\\\n\
+aagacgctDHYYatggttcaagccNctccttcMctttagacBtaaWtaWVHggaaaaNat\\n\\\n\
+ttaDtDtgctaaHHtMtatNtMtagtcatttgcaaaRatacagRHtatDNtgtDgaatVg\\n\\\n\
+tVNtcaaatYBMaaaagcaKgtgatgatMgWWMaHttttMgMagatDtataaattaacca\\n\\\n\
+actMtacataaattgRataatacgBtKtaataattRgtatDagDtcRDacctatRcagag\\n\\\n\
+cSHatNtcaScNtttggacNtaaggaccgtgKNttgttNcttgaaRgYgRtNtcagttBc\\n\\\n\
+ttttcHtKtgcttYaaNgYagtaaatgaatggWaMattBHtatctatSgtcYtgcHtaat\\n\\\n\
+tHgaaMtHcagaaSatggtatgccaHBtYtcNattWtgtNgctttaggtttgtWatNtgH\\n\\\n\
+tgcDttactttttttgcNtactKtWRaVcttcatagtgSNKaNccgaataaBttataata\\n\\\n\
+YtSagctttaaatSttggctaaKSaatRccgWHgagDttaaatcatgagMtcgagtVtaD\\n\\\n\
+ggaBtatttgDacataaacgtagYRagBWtgDStKDgatgaagttcattatttaKWcata\\n\\\n\
+aatWRgatataRgttRacaaNKttNtKagaaYaStaactScattattaacgatttaaatg\\n\\\n\
+DtaattagatHgaYataaactatggggatVHtgccgtNgatNYcaStRtagaccacWcaM\\n\\\n\
+tatRagHgVactYtWHtcttcatgatWgagaKggagtatgaWtDtVtNaNtcgYYgtaaa\\n\\\n\
+ctttaDtBactagtaDctatagtaatatttatatataacgHaaaRagKattSagttYtSt\\n\\\n\
+>THREE Homo sapiens frequency\\n\\\n\
+agagagacgatgaaaattaatcgtcaatacgctggcgaacactgagggggacccaatgct\\n\\\n\
+cttctcggtctaaaaaggaatgtgtcagaaattggtcagttcaaaagtagaccggatctt\\n\\\n\
+tgcggagaacaattcacggaacgtagcgttgggaaatatcctttctaccacacatcggat\\n\\\n\
+tttcgccctctcccattatttattgtgttctcacatagaattattgtttagacatccctc\\n\\\n\
+gttgtatggagagttgcccgagcgtaaaggcataatccatataccgccgggtgagtgacc\\n\\\n\
+tgaaattgtttttagttgggatttcgctatggattagcttacacgaagagattctaatgg\\n\\\n\
+tactataggataattataatgctgcgtggcgcagtacaccgttacaaacgtcgttcgcat\\n\\\n\
+atgtggctaacacggtgaaaatacctacatcgtatttgcaatttcggtcgtttcatagag\\n\\\n\
+cgcattgaattactcaaaaattatatatgttgattatttgattagactgcgtggaaagaa\\n\\\n\
+ggggtactcaagccatttgtaaaagctgcatctcgcttaagtttgagagcttacattagt\\n\\\n\
+ctatttcagtcttctaggaaatgtctgtgtgagtggttgtcgtccataggtcactggcat\\n\\\n\
+atgcgattcatgacatgctaaactaagaaagtagattactattaccggcatgcctaatgc\\n\\\n\
+gattgcactgctatgaaggtgcggacgtcgcgcccatgtagccctgataataccaatact\\n\\\n\
+tacatttggtcagcaattctgacattatacctagcacccataaatttactcagacttgag\\n\\\n\
+gacaggctcttggagtcgatcttctgtttgtatgcatgtgatcatatagatgaataagcg\\n\\\n\
+atgcgactagttagggcatagtatagatctgtgtatacagttcagctgaacgtccgcgag\\n\\\n\
+tggaagtacagctgagatctatcctaaaatgcaaccatatcgttcacacatgatatgaac\\n\\\n\
+ccagggggaaacattgagttcagttaaattggcagcgaatcccccaagaagaaggcggag\\n\\\n\
+tgacgttgaacgggcttatggtttttcagtacttcctccgtataagttgagcgaaatgta\\n\\\n\
+aacagaataatcgttgtgttaacaacattaaaatcgcggaatatgatgagaatacacagt\\n\\\n\
+gtgagcatttcacttgtaaaatatctttggtagaacttactttgctttaaatatgttaaa\\n\\\n\
+ccgatctaataatctacaaaacggtagattttgcctagcacattgcgtccttctctattc\\n\\\n\
+agatagaggcaatactcagaaggttttatccaaagcactgtgttgactaacctaagtttt\\n\\\n\
+agtctaataatcatgattgattataggtgccgtggactacatgactcgtccacaaataat\\n\\\n\
+acttagcagatcagcaattggccaagcacccgacttttatttaatggttgtgcaatagtc\\n\\\n\
+cagattcgtattcgggactctttcaaataatagtttcctggcatctaagtaagaaaagct\\n\\\n\
+cataaggaagcgatattatgacacgctcttccgccgctgttttgaaacttgagtattgct\\n\\\n\
+cgtccgaaattgagggtcacttcaaaatttactgagaagacgaagatcgactaaagttaa\\n\\\n\
+aatgctagtccacagttggtcaagttgaattcatccacgagttatatagctattttaatt\\n\\\n\
+tatagtcgagtgtacaaaaaacatccacaataagatttatcttagaataacaacccccgt\\n\\\n\
+atcatcgaaatcctccgttatggcctgactcctcgagcttatagcatttgtgctggcgct\\n\\\n\
+cttgccaggaacttgctcgcgaggtggtgacgagtgagatgatcagtttcattatgatga\\n\\\n\
+tacgattttatcgcgactagttaatcatcatagcaagtaaaatttgaattatgtcattat\\n\\\n\
+catgctccattaacaggttatttaattgatactgacgaaattttttcacaatgggttttc\\n\\\n\
+tagaatttaatatcagtaattgaagccttcataggggtcctactagtatcctacacgacg\\n\\\n\
+caggtccgcagtatcctggagggacgtgttactgattaaaagggtcaaaggaatgaaggc\\n\\\n\
+tcacaatgttacctgcttcaccatagtgagccgatgagttttacattagtactaaatccc\\n\\\n\
+aaatcatactttacgatgaggcttgctagcgctaaagagaatacatacaccaccacatag\\n\\\n\
+aattgttagcgatgatatcaaatagactcctggaagtgtcagggggaaactgttcaatat\\n\\\n\
+ttcgtccacaggactgaccaggcatggaaaagactgacgttggaaactataccatctcac\\n\\\n\
+gcccgacgcttcactaattgatgatccaaaaaatatagcccggattcctgattagcaaag\\n\\\n\
+ggttcacagagaaagatattatcgacgtatatcccaaaaaacagacgtaatgtgcatctt\\n\\\n\
+cgaatcgggatgaatacttgtatcataaaaatgtgacctctagtatacaggttaatgtta\\n\\\n\
+gtgatacacaatactcgtgggccatgggttctcaaataaaatgtaatattgcgtcgatca\\n\\\n\
+ctcacccacgtatttggtctaattatgttttatttagtgacaatccaatagataaccggt\\n\\\n\
+cctattaagggctatatttttagcgaccacgcgtttaaacaaaggattgtatgtagatgg\\n\\\n\
+taccagtttaattgccagtgggcaatcctaagcaaaatgagattctatcctaaagtttgg\\n\\\n\
+gcttgatataagatttcggatgtatgggttttataatcgttggagagctcaatcatgagc\\n\\\n\
+taatacatggatttcgctacctcaccgagagaccttgcatgaagaattctaaccaaaagt\\n\\\n\
+ttaataggccggattggattgagttaattaagaccttgttcagtcatagtaaaaaccctt\\n\\\n\
+aaattttaccgattgacaaagtgagcagtcgcaataccctatgcgaaacgcctcgatagt\\n\\\n\
+gactaggtatacaaggtttttgagttcctttgaaatagttaactaatttaaaattaatta\\n\\\n\
+acgacatggaaatcacagaacctaatgctttgtaggagttatttatgctgtttactgcct\\n\\\n\
+ctacaaccctaataaagcagtcctaagaatgaaacgcatcttttagttcagaaagtggta\\n\\\n\
+tccagggtggtcaatttaataaattcaacatcgggtctcaggatattcggtcatataatt\\n\\\n\
+tattaagggctcttcgagtcttactctgagtgaaattggaaacagtcatccttttcgttg\\n\\\n\
+tgaggcatcttacaccgctatcgatatacaatgcattccaccgcggtgtcccgtacacaa\\n\\\n\
+ggaaacttgttaccttggggatataagaaaactcacacgtctcattattaaactgagtac\\n\\\n\
+aatttttgcacgagaaagtaatgcaatacaatatgatgaaagccagctaatgaaaaggga\\n\\\n\
+tggaacgcacctcggatctgttgcactggattaaaatccgattatttttaaaaatattca\\n\\\n\
+gtgctagagcatatcaggtctacttttttatctggtatgtaaagcccacggagcgatagt\\n\\\n\
+gagatccttacgactcaacgaaaagttataacataactcccgttagccaaagcccaatcc\\n\\\n\
+cgattactgccctaccctaacgtctgccatctaaatatcgaacttgttatgatcaatgtg\\n\\\n\
+actacctcccaccctttccccttcatttgttccactggggataagctagcgttttcagaa\\n\\\n\
+tcaatgcaataagaatagccaattgtctcacttcatcagagctcttggcaattccaggcg\\n\\\n\
+ctacgtggttctggaatatattcatttttcaaatagtaatacgtttagtgttgctattgt\\n\\\n\
+ctacacgtttggatattacgttatgtgagcggacatcaatagttgtctaactctttagta\\n\\\n\
+agccagagatagcactcttagcgaatggataccatcttccataagtttagttaatagtcc\\n\\\n\
+gaaacaactgcttcgagcatatttgaacctccttgtaggcaaatagcctcttcaaagcaa\\n\\\n\
+tcttactaatagatagagtttgttttaagggactactagaaatgggacaatcttaatagt\\n\\\n\
+atgacctaaactgacatttaaagatatatccaggtggcaagcataaagatcattgcgcca\\n\\\n\
+cctccaccgtgggattacttatcagtcgatatcctatatgctaagtttgcgacggcagaa\\n\\\n\
+tacaaactaagctgagttgatgctaaccttacctatgataccccattggaccggttaaca\\n\\\n\
+gccctacttattccaaataaaagaacttttatgctgtagaagctattatagtgatgcctg\\n\\\n\
+gtaacttcagtatattaaaatgacacacatacgccatatagagctcctggaactttgaat\\n\\\n\
+aatgagcgaacttcgaagttgaagagcaagaaaccatatgtcacggttgcctaaagcccg\\n\\\n\
+gtaaccagacatgtgctatcattgatcattatcgaggttttcataaccttgacccattat\\n\\\n\
+cggctgtgcgcggacaagtacttaaatcactagtttcttcacctgcttatcggtaagaaa\\n\\\n\
+taaggttggcaaagaatcgcataagacggacgtagagccgcagcgttgtgcgagtccagg\\n\\\n\
+tgcatgcgcagcaataggattttaaattttgttccatttttaatttagccgtaaggatgt\\n\\\n\
+ccgtaaatgattgaaaattggattcaatctttgggcctatgctactggaacctgatcgac\\n\\\n\
+aaaatttcaaacatacgttaactccgaaagaccgtatttttgcggctagaatagtcagtc\\n\\\n\
+gcttggagccatataccttaccacttaaacgacgtgctcctgtagttgaaatataaacag\\n\\\n\
+aacacaaagactaccgatcatatcaactgaagatctttgtaactttgaggcgaagcaccc\\n\\\n\
+tcttcgagacaactaagagtaaagtaccgggcgccgcaaggagtcgattgggaccctaaa\\n\\\n\
+tcttgacgaattgctaagaggctcagagctaccactgtaatttctctagagcccataata\\n\\\n\
+aatgaacgatacatccgtaggtagcacctaagggattataatggaagccaaatgcagtta\\n\\\n\
+ataatattatatactggcgtacacgattcgacggatctctcacatagtgattcacgaccc\\n\\\n\
+ccccctttgattgacacagcgtcagcattttgcaagaacgatcttctgcatagggtgcgc\\n\\\n\
+caccgtaaggatgacgtcgaagctacaactgggtataatttaccatgcttccctgatgct\\n\\\n\
+gagtgcaatacactaagaatgagtttttaccccatatcaccagtatttgttctgttattg\\n\\\n\
+cgaagaaatggctatgctgagttggcgactaaagtcacccatcctttttattaggtaacc\\n\\\n\
+ccctcccttaaactaactgatttgctggagctgccctgcatacatatactttatcattta\\n\\\n\
+tggacgtccgtgacgcttattatccaccatagtcgatatgctacacggattcattaatgg\\n\\\n\
+atcgtaggagtttaagttatatttactaagatcggtctcggctactatcccgccttaccc\\n\\\n\
+ggcgctatttacggccatttttaatatattgacggtaattattcctatggtttcgaccgc\\n\\\n\
+acgtccttggacaagaaagaatggcaaaaaaaatgtaaaagaaaaaaaatattgagtccc\\n\\\n\
+taccatcatataaaaaatatgtgatgagtaacttgacgaaatgttagtggttattaaaga\\n\\\n\
+ctatctattacaccttttgttttctgtcgtagtatattaaagtctagaagccttacagga\\n\\\n\
+aaatcagggttatacagccgatactccgcagcatgaatcatcgaggaggtgtcctaccat\\n\\\n\
+cgcgccttgtaatcttgtctgtgtatactgtatttagaccttttatacaaagtaaatatc\\n\\\n\
+tcggctttatgtgattgggaggggcctactcaaacatgatgacttgacctaataatcact\\n\\\n\
+gtgcgggcgtcttatgactagctattccttgaaatccaccaccaaatggttaatatgtaa\\n\\\n\
+aaactttgacgatgaaacaaggtgaatgtgtagttactttgtgtaattagctgcgtcgag\\n\\\n\
+cattgcttgtaaaaccgtcaatcgcacacgttacttccataaaatttctacgaatacacc\\n\\\n\
+cttcttaaaaaaaacgtaggaattcacgagtttaacaaacgataactgtataaagtggaa\\n\\\n\
+gtccgaagaaagcagatgcccgaactactcgaagatgtttcgttttcttaaccatagggg\\n\\\n\
+cttcttaatggcccactacgcacattttgttcaagcccgagagggacatccccattacgg\\n\\\n\
+gagtattactaaaactgttccgtaatacgttcagcaagggatgaaaaaggccactgctca\\n\\\n\
+agttattgacgtgggagtattacatcggaagcctgaatcccacactatgatggtctgtac\\n\\\n\
+aggcctagggactgcgtctagacggtattaccggcttctaatcatacgatcgtgagtctt\\n\\\n\
+aacgggaagtaaggctcacacctaccccaaaccatttatctatgtaagtataaaattgtg\\n\\\n\
+cgtaagtgttcaaagtggacaataaagacgtggcaaaaacccccgcacataagccgcttt\\n\\\n\
+agatttcacaaataccaatgcggttaaaaacatccttgagtcgtacatacaccatactcg\\n\\\n\
+cgttaaacggatataacagaagataataaatccggatgtggagtcggtgtaactatagaa\\n\\\n\
+agccaagtgaaataatgcttaccagtcatttagctatacggctttcatttcatgtcaaga\\n\\\n\
+gggtggagtttgacctgtacagttgatatatcaccgatacttagaactcacctaaagcta\\n\\\n\
+aaattgctcgcagcgtgtaatccgcatattacaaacaatagatgggattcattatacata\\n\\\n\
+agacacgatgatctgctttttcaggttgcgagatgttgcctatcgtcaatcgagtcctgc\\n\\\n\
+cttacaccacttaaacaaaagtattgacagggaacctattttcgaggtattatatagtcc\\n\\\n\
+agcttgaatatcaatttgacagttaacctagtgaaaatcagtaagaggaaatacgccaca\\n\\\n\
+ttctccagtgaaattctacgggttatcgtctagtccaactatcaattataactcacgaga\\n\\\n\
+tataagtaaattctcgtacttggcctgatttttattatactttggatccttagtaaacag\\n\\\n\
+gaagggagaaaccttcaacgaaaaacactggattttgttttactctcaaagctcttatat\\n\\\n\
+gacggaaataccctgtcaagtcttaactttattactagactaatgaaatgggcttggggt\\n\\\n\
+ggccagaatcatagtacaatttagcggatacactattcggactttcctatcggctgtctg\\n\\\n\
+gttggataagtatggggactaataggctagacatacctatacttaaactatacaggcgtc\\n\\\n\
+atctatctctgcaactttggagttccctgatgttctcccgccctttgggttcacatcttc\\n\\\n\
+tataccgacacccctaataacgattagtttgtgggttagagtaaattaatacggttaata\\n\\\n\
+ttaatgtatcgttgaaaagctggtgtcgccaataaggtaaccggctaggcagagtatatg\\n\\\n\
+tcacgaagtataactaccctaatgataagctgtaggaataaaattaatgctgtctctaag\\n\\\n\
+cgaagagatatttccgactctgttttaatgacgaatctcattacttctgacttgcaaatg\\n\\\n\
+ttcaatatggcacggtttcacggcacctttgtgacgcatataatgaacttagaagattat\\n\\\n\
+aacgacggaactttatatgataatccgttacgattaaagaatctgttaaatatcataatg\\n\\\n\
+gcattcagttctagaccgtgcatcatggtaaacttactttctctgcatggcgacatacat\\n\\\n\
+ttcgctattcaaattcgcgtgtggttacacccactcgcacctttggaatattaagagaag\\n\\\n\
+atgatcagaaaatccattcgctcaatttttctgacgtacgtctaatttatcctaggagac\\n\\\n\
+aaatcgttttatgtctctcacatttttgaagaaaggttcgagagacaatactcaggtcct\\n\\\n\
+gaactgctagaagatactcggtggagcgtggcaacaatgaaaaactcgtgacataaatga\\n\\\n\
+atgatacttttccaagttcagttaagtgaatatgtttaacatacccggcttttcgatctt\\n\\\n\
+aagctgacgctggacgtgcgagtaatgtcagtctcttacatacactagtgactccaagtt\\n\\\n\
+tcgtcaaaaacgccccctcccttctcgagcccactcacgctatgtattgacgcgaacttg\\n\\\n\
+ttcgggatcagacttttcaggagttcggtcgcgtgtccctatgtgctaatatataagtta\\n\\\n\
+gatcgcattagatgctaatctgaatacttatagacgaccttcaacgagaacgggtaccac\\n\\\n\
+cttgaggctagagttaggtgtgaaacgacaggtagggacatataaaatttgagtgcggct\\n\\\n\
+ttagttaagggtttaattacctactcaaacatcacgctcgcgcccttcgtacgtaatcga\\n\\\n\
+ccatctagaggctaaggggactgtactaggtagtgattaatgatatcctagacgcacgtg\\n\\\n\
+ccttagatcttcagactctgatggtccgcgatcaccgtaattgtagtcctccaactcgat\\n\\\n\
+cactttgttggcgtcaaagaaattacgatatctaaatacttataatacaataaccaagga\\n\\\n\
+tgagaatgactcatcgcgttggagttatattgcttgaagttctatggaatgaaagcacgt\\n\\\n\
+tatctgccgtcccaatatctccagtgagctaattcattggacggtccactttgatcaatc\\n\\\n\
+cccgaggagatgttcggacactttagtctgtaacacttagcgttgagaccacgaacaatt\\n\\\n\
+gattactcagtcttgaaggtgttttccaaagttcattttaaataagactacgataggcct\\n\\\n\
+ttcctattgatataaactacccggctctgttgttcgtgtgagtcgtacttctctgtgttt\\n\\\n\
+ttctgattatagcaagattcgattcttagtgtaaacagcgatttttatttgacccgtcaa\\n\\\n\
+tgagaagcgcataggatctaagcaaaattatcaagttgtgccacaaggtaagatctttcc\\n\\\n\
+agttattgcaggtaggatgtatcccacgttgatagtatgaggtctgacgtcaactgtcta\\n\\\n\
+ggagagttgaccgcgtgcgggtacaccggatttgcatcgatgttgagaacgcagaactcc\\n\\\n\
+cactgtcgtggcggcgttcctgatatttagcaagaggcgttgataaagccctcatcatct\\n\\\n\
+agatctcgacctcatctgccctcttgctccatcattttctacacagactactttcctatc\\n\\\n\
+tacgttagtataattgctttctatcttagtatcatttagagcttctccgtcaacaggttc\\n\\\n\
+gtgctattaaagttagtacgaaagggacaacttgtagcaacgcatttaatcggttttcga\\n\\\n\
+ctacttcgcacaaaatcagataaagaagtttgtcattctattagacattgaattgcgcaa\\n\\\n\
+ttgacttgtaccacttatgatcgaacactgaatcaagactgtgattaactaaaatagaca\\n\\\n\
+agccactatatcaactaataaaaacgcccctggtggtcgaacatagttgactacaggata\\n\\\n\
+attaattggactggagccattacattctctacaatcgtatcacttcccaagtagacaact\\n\\\n\
+ttgaccttgtagtttcatgtacaaaaaaatgctttcgcaggagcacattggtagttcaat\\n\\\n\
+agtttcatgggaacctcttgagccgtcttctgtgggtgtgttcggatagtaggtactgat\\n\\\n\
+aaagtcgtgtcgctttcgatgagagggaattcaccggaaaacaccttggttaacaggata\\n\\\n\
+gtctatgtaaacttcgagacatgtttaagagttaccagcttaatccacggtgctctacta\\n\\\n\
+gtatcatcagctgtcttgcctcgcctagaaatatgcattctatcgttatcctatcaacgg\\n\\\n\
+ttgccgtactgagcagccttattgtggaagagtaatatataaatgtagtcttgtctttac\\n\\\n\
+gaagcagacgtaagtaataatgacttggaataccaaaactaaacatagtggattatcata\\n\\\n\
+ctcaagaactctccagataaataacagtttttacgatacgtcaccaatgagcttaaagat\\n\\\n\
+taggatcctcaaaactgatacaaacgctaattcatttgttattggatccagtatcagtta\\n\\\n\
+aactgaatggagtgaagattgtagaatgttgttctggcctcgcatggggtctaggtgata\\n\\\n\
+tacaatttctcatacttacacggtagtggaaatctgattctagcttcgtagctgactata\\n\\\n\
+ctcaaggaaccactgctcaaggtaggagactagttccgaccctacagtcaaagtggccga\\n\\\n\
+agcttaaactatagactagttgttaaatgctgatttcaagatatcatctatatacagttt\\n\\\n\
+ggacaattatgtgtgcgaaactaaaattcatgctattcagatggatttcacttatgcctt\\n\\\n\
+agaaacagatattgcccgagctcaatcaacagttttagccggaaacaatcgaagcatagg\\n\\\n\
+gacaatgtatcttttcctaaattgccatgtgcagatttctgagtgtcacgaagcgcataa\\n\\\n\
+tagaatcttgtgttgcctcaactcgttgaaaagtttaaaacaatcgcagcagtctttttg\\n\\\n\
+gggtctactgtgtgtttgcaaaataactgaaagaaacgcttgaacaactctgaagtagct\\n\\\n\
+cgagtactcattaaagtgtaacacattagtgaatatcggccaatgaaccaaacgcttccc\\n\\\n\
+ggtacgctatctctctcatcgggaggcgatgtgcaggttatctacgaaagcatcccttta\\n\\\n\
+cgttgagagtgtcgatgcatgaacctcattgtaacaatagcccagcaaattctcatacgt\\n\\\n\
+gcctcagggtccgggcgtactcctccatggaagggcgcgcatctagtgttataccaactc\\n\\\n\
+gctttttaactactatgctgtagttctacaggcatagtggccagtattttctaacttctc\\n\\\n\
+tggatagatgctctcactcctcatccatcacggcttcagtttacgtcttacttgcttgtt\\n\\\n\
+cagcaacggatggaggcattaagtatcttcactgttccctaaaattgctgttcaatatca\\n\\\n\
+aagtaaggacgatacagggaaagctcaagcacactcattgaatactgccccagttgcaac\\n\\\n\
+ctcacttaatctgacaaaaataatgactactctaagtgttgcggaagcagtctcttccac\\n\\\n\
+gagcttgtctgtatcacttcgtataggcatgtaactcgatagacacgaacaccgagtgag\\n\\\n\
+aaactatattcttgcttccgtgtgtgtgacaccaggtaattgatgcggatataagctgga\\n\\\n\
+gatcactcacgcccacacaaggcgctgctacctctttattccaatgtgtaagaatttgct\\n\\\n\
+aacttcatttctagaccgcagctttgcggtcataatttcacggtacggacccttgggtta\\n\\\n\
+gagacttgataacacacttcgcagtttccaccgcgcacatgttttagtggcttctaacat\\n\\\n\
+agaatttttgttgtgacataaagagtgcgtgggagacttgcccgaccgttaagccataat\\n\\\n\
+caattgaaagccccgtgagtcacatctaattggttgtactgcgcatttagctatccttta\\n\\\n\
+gctgactcgaagagattcgattcctaatataggttaattagatggctgccgcgcgaagta\\n\\\n\
+aaacgtgaaaaacgtagtgcgcagatctgcataactcgcgcttaattacttatgagtagt\\n\\\n\
+tccaagttcgctacgttatgagagagattggaattaagcaaatatgttttatggtgattt\\n\\\n\
+tgggatgagaaggactgctaagtacggctactaaacaaatttctaaaaccgccatctacc\\n\\\n\
+ttatcttggagacatttaagttgtatatgtcactagtctagcttttgtctgtgggacgcg\\n\\\n\
+ttctcggaatgagggaaatgcaagagccgattcatcaaatgcttatctaagaaagtagtg\\n\\\n\
+gactattacaccaagcacgaatgccagggaactgctttcttgctcaggacctcgcgacaa\\n\\\n\
+ggtaccccgcataagtcctagaattacatttggtcagcaatgctgacatttgaccgtgaa\\n\\\n\
+aacataattttaatcagaaggcagctcacccgcttgctctagatcttatctttgtatgaa\\n\\\n\
+tgtcagaatttactgcaatatccgttccgaatagtgagggcttagtatagttctctgtat\\n\\\n\
+acaggtcacatcaaactccccctgtcctagtacagctctgagctttaattaattgcatac\\n\\\n\
+atttccttcaatcatcagatgaaaacaccgcgaatcatgctcttctcgtatagggcaaga\\n\\\n\
+gaagcaacaaacaactagcccgactcacgttcatccgccgtatccttgttcagttcttac\\n\\\n\
+tccgtattaggtcagcgaaatctaatcagaataatcggtcgcgtatcaaaattaaaatcc\\n\\\n\
+cgcttgaggttgacaattaaaacgctgagcagttatcggctattagatagtggggtgaaa\\n\\\n\
+gtaattggctggaattatgttaaaacgtgatattaagctaaaatacgctacttgttgccg\\n\\\n\
+acctaattcagtcattcgatattcagttagagccaagaataacaagcttgtataaattga\\n\\\n\
+acggggtgcactaaacgatgtgttactctaatattcagcttggagtatacctgaaggcga\\n\\\n\
+attcatgtatcggccaataataagacgttgaagatcacaatttggactagcaaaagaagg\\n\\\n\
+tgatttatgcgtggggattgagtccactgtacgagtacggtctctggaaaattataggtt\\n\\\n\
+cagggaatataaggaagtaaagataattaccaagagatttttggtatcgctatgacccag\\n\\\n\
+aggtgttctaacgtctgttttgatccgcagaatttctgcctcaatgcatatttgacggac\\n\\\n\
+ttgaactagagcctctaaagttaaatggcgacgcaactgttcctaaacttcaattattac\\n\\\n\
+tactctttttttcctagggtattgtagaggccagtggacaaaataaatcaaatttaagat\\n\\\n\
+gtttcggacattaacatcccccgtagcatagaaatcatcagttatccaatctctcatcga\\n\\\n\
+gcttttacaatttctgctggcgctatggacagcatatgccgcgagacctccgcaagactc\\n\\\n\
+acttgatcactgtaagtatcttcattagaggttagagcctatagttaagctgctgaccta\\n\\\n\
+gtaaaattggtattttctaattttattgctcaagttaaaggttagtgaagggataatgac\\n\\\n\
+gttatttttgaacaatgggttgtattcaattttatatcacgaatggaacccttcattccc\\n\\\n\
+ggcataatactagacgacacgaacaagctccgatctatcagccaggcacgtgttaaggtt\\n\\\n\
+taattccggcaaaccaatgaagcatcaaaaggtgacctgatgcaacttagggtcacgatg\\n\\\n\
+agtttttcaggactacttattacctattaataagttaacatgagccttcataccccgtaa\\n\\\n\
+gacaatacatactccaccaattagaattctgagccatcttatctttttgtatcatcgaag\\n\\\n\
+ggtatggccgaataggttaattagttactcctaacgtctctacaggcatgcatttgacgc\\n\\\n\
+accttcgaaaatagtcaatctctcgccacacgcgtctagtatgcagcatcaaaaatatag\\n\\\n\
+tccacggtttccggattaccaaacgcggcaaagagaaacattgtatcgacggagataact\\n\\\n\
+taatacagaaggaaggggcatcttcgaatacggatgaataattctatctgtttattctga\\n\\\n\
+catcttgttttcaggttaatcttacgcattcaaatgacgcctgccccatgcgtgcgcaat\\n\\\n\
+tattttctaatattgacgagagcaatctcactccttttgggtctatttatgttttattga\\n\\\n\
+ggcacaagcctatacagaacaggtactattaaggccgtgagtgtgagactcaaaccgtgg\\n\\\n\
+aaacaaaggatgggttgttcttggtacaagttttagtgcatgtgggcaatccttaccaaa\\n\\\n\
+atcagatgctatccttaactttgggctgcatttaagatggcggttggaggcctgtgagaa\\n\\\n\
+tcctgcgtgtcatctttaatgaccgaattcatccatgtagattcagatcacacactcatt\\n\\\n\
+ccttgatgttgtctaaacaaaagttgttgtggacgcattggagggagttaagtaacaact\\n\\\n\
+tgggatcgcatacttataaaaattatatgttaaactttcacaaacgctgaagtccaaagt\\n\\\n\
+aactagcccaaacgcctcgagagtcactaggtattaatggtgtttgagttcctgtgaaat\\n\\\n\
+agtgttcgaaggtaaaatttatgtaccaaatcgaaagaacacttaataaggcttgcttgc\\n\\\n\
+acggaggtatgatgtttactgactctacaaccctaattttccagtacgtacattcattcc\\n\\\n\
+aataggttagttctcaaagtgctatacaggctcctcaattgatgatatgcttcagccgct\\n\\\n\
+ctatggatattagctcattttatttaggaagcccgcttagaggcttactatgagggaaat\\n\\\n\
+gccaaaatgtcatacttttcggtgtgtcccatatgacaccgctttacatagaatttgaat\\n\\\n\
+taaaacgcgctctcccgttcactaccatacttggtaccgtgcgcatattacatatagata\\n\\\n\
+taggatcattttttaaagctgtactaggtttgatcgacaatcttatgctatactatatga\\n\\\n\
+tgtaaccctcataatcaataccgatcgtacgatcctagcataggtggcaagcgattttat\\n\\\n\
+gccgattattgtgttaaatagtctgtgagtgtgattatcagggctacgttggtagagggg\\n\\\n\
+ttgtatagacctcgcacacattgtgacatacttaacaatatacgaaaactgatataataa\\n\\\n\
+atccccttacccaaacaccaatcccgttgaatcaactaccataacgtctcccatataaat\\n\\\n\
+tgcctacttgtttgcataaatctgaatacataacaccattgcaccttcttgtgttccaat\\n\\\n\
+cccgttaagattgccttgtcagatgatatgcaagaacaatagcatttgctagcaattatt\\n\\\n\
+aacagctcttcgaattgcctccacataacgcgggagggtatattttaatttggcaaatac\\n\\\n\
+taagtactgttggcgtcatatgctattaacggttggatattaagttatgtcagccgtaag\\n\\\n\
+caagagtgggcgaaatattttgttacccagtgagagcactcttagagtttggatacaata\\n\\\n\
+ggccatatgttgacttaagaggacgtaactacgccgtacaccattgttcaaccgacttct\\n\\\n\
+tggcaaatagaatcgtattagcaatcttaagaatagagacacgttcgtgttagggtatac\\n\\\n\
+tacaaatccgaaaatcttaagaggatcacctaaactgaaatttatacatatttcaacgtg\\n\\\n\
+gatagatttaacataattcagccacctccaacctgggagtaattttcagtagatttacta\\n\\\n\
+gatgattagtggcccaacgcacttgactatataagatctggggatcctaacctgacctat\\n\\\n\
+gagacaaaattggaaacgttaacagcccttatgtgtacaaagaaaagtaagttgttgctg\\n\\\n\
+ttcaacagatgatagtcatgacgcgtaacttcactatagtaaattgaaacaaatacgcaa\\n\\\n\
+tttagacagaatggtacggtcatgaatgacagtaattcgaagtgctagaccaacttaaaa\\n\\\n\
+taggtaaacgtgcccgaaaccccccttaacagaaagctgctatcatggtgcagtatcgac\\n\\\n\
+gtgttcagaaacttgtaacttttgagcaggtccgagcacatggaagtatatcacgtgttt\\n\\\n\
+ctgaaccggcttatccctaagatatatccgtcgcaaactttcgatttagtcccacgtaga\\n\\\n\
+gcccaagcgttgtgcgactccacgtgcatgcccagaaatacgagtttaaatttggttaca\\n\\\n\
+tggttaattttgaccgaagcatcgcactttatgattgataattggattcaatatgtcgcc\\n\\\n\
+ctatgcgaatgcaacatgatccacaatttggctataagacgtttaatccgtatcacactt\\n\\\n\
+tgtttgcggctagtatagtaacgcccgtgcaccaagagtcagtaacaattataagtactc\\n\\\n\
+cgcaggtacttcaaatataaaaactaatcaaacacgacccatatgatcatctgaagatat\\n\\\n\
+ttggaactttctcgacaaccaccctcgtactcaatacttacactaatcgacaggcacacg\\n\\\n\
+caacgtgtacagtcgcaccatattgagtcaagatttgcttagtggcgatgagcgtacacg\\n\\\n\
+cttatttctctagtcacaattagttatctacgagacatcacgagggagcaaataagcgat\\n\\\n\
+gttatggctacacataggcacgtatgaatatgatataagccagttaaacagtcgaaccat\\n\\\n\
+cgagcaaattctcatgcaccaacccacacgttgaggcacaaagagtaagctgtttgaatg\\n\\\n\
+taacttcttctgctgagcgggccccaacgtaaggatcaactagaagagaaaactcggtat\\n\\\n\
+tagtttaaatgcgtcacggagcatgagtgcatttcactaagaatgtctgtgtaaccaata\\n\\\n\
+taacatctatttgttatctgattgcctacttatggctttgcggtcgtggcgactaatgtc\\n\\\n\
+tccaatccttttgaggtcggtaccaactccctttaaattacgctgtgcaggctcatgcac\\n\\\n\
+tgcatacatatacggtagcaggtagggacctcacgcacccttattataatcaatagtagt\\n\\\n\
+tatcagtcaacgaggcaggaatgctgaggtcgaggtgttggtatattttctatgtgccgt\\n\\\n\
+ctaggcgactatcacgcattaccaggcgagatttaagccaattttgaatatagtcaacgt\\n\\\n\
+aatttttactatgggttccaccgaaacgccttgcacaactaagaatcccataaaatatcg\\n\\\n\
+atatcaaataaaagattgtgtcaataccttcatatatattttttcggttgactaacgtga\\n\\\n\
+actaaggttaggggttttgtatgtctatataggaaacagtttcttttctgtcctacttta\\n\\\n\
+gtaaagtcttcaagccttactccaaaatcacggtgattaagccgttactcagcagcatga\\n\\\n\
+ttctgcctgctcgggtcctaaaatccagccttgtaagagtcgctgtgtattagctaggga\\n\\\n\
+gacctttgttaaaaaggatatatcgcggcgggatgtgagtgcgtggcgcatactcaatct\\n\\\n\
+tcagctcgtgtcattataatatctctcccccacgcttttcactagatatgccgtgtaagc\\n\\\n\
+aaacaccttatgcttaatttcgaaaatattggtacttgaaaaaagctgtaggggtactta\\n\\\n\
+atgtctggtaggagatcaggagagaattgagtgtaaaaccgtaaagccctcacctgactt\\n\\\n\
+catgtaaatggcttagaagactccatgatttaataaatactacgaaggaaagactggatc\\n\\\n\
+taaagataactctagtaaggccaactcccttcaatgctgttgccagttataatccaagag\\n\\\n\
+ctgtccttttctgaaccatagcggcttctgaagcgaactagaagcaaagttggttctagc\\n\\\n\
+cagacagccacataccctgtacgggtgtattactaaaactggtccggtattagttcacca\\n\\\n\
+agggaggaattaggcaaaggatctaggtatgcaagtcggagtattacatccctaccctga\\n\\\n\
+atccatcaataggttcctctgtactggccttcgcaatgagtattcaaggttgtacagccg\\n\\\n\
+tataataataagatagtgactatgaacgggaagtaacccgctcaccttccccaaaacatt\\n\\\n\
+gttatatctaagtattaaagtctgccgtagtgttaatactcgaaaataaacaactggcaa\\n\\\n\
+attacaccgcacttaagccgcttttgatttatatttttccaatgcgcttttaaaaataat\\n\\\n\
+tcagtcctacatactaattaagacccttaaacggagatatcacaagttaagttttaacca\\n\\\n\
+tctcgactaggtggaactatagatacccaactcaatttatcattacctgtaatgttccta\\n\\\n\
+gaaggattgcatttcatgtcaagacggtggagtttcacagcgaaacttcagtgtgaacag\\n\\\n\
+attctgagaaatcacctaaacctattagtcagagcacccggttagaaccagttgtcaaaa\\n\\\n\
+aatagagcggttgcatgagacagaagtaacgatgagatccgttgtaacgttgagacatct\\n\\\n\
+ggcctatcgtcaatacagtcctcccttaaaaatatttttaaatactaggcaaacccaaca\\n\\\n\
+taggttagtcctatgtgatacgccacatggtatatcattttgtaacgttacctagggata\\n\\\n\
+atcaggaagtggaattacgcaaaagtagacagtgaaatgcttagggttatagtctagtcc\\n\\\n\
+aaagataaaggataaagcacgtcagagaactatattagccgaatgggaatcattgttagg\\n\\\n\
+agactgtggatcatgtctaaaaagcaacgcagaaacagtcatcgaaaaaatctcgttttt\\n\\\n\
+gtttgaatctaaaagagctttgatgaccgatagtacctgtatactagttactgtattacg\\n\\\n\
+tgtctaatgatttcggattggggtccccagaatcagacgtcattgtagacgattcaagtt\\n\\\n\
+taccaatttaatttcccagctctccttggagaactatcgccaataattgcagtcactttc\\n\\\n\
+cttttctgaaacgataaagccgtcagagttctctgcaacgttggacttacctgaggttct\\n\\\n\
+aacccactttcggttctaatagtagttaacgacacaacgaataacctttactgtggggct\\n\\\n\
+ttcacgatattttttcgcttattattaatggttacgtcataagctggtgtccaaattaag\\n\\\n\
+gttaccggcttcgcagagtagttgtatccaagtataacttccctaatcataagatcgagg\\n\\\n\
+tagaaaattaatgctgtctctaaccgaacagatatgtcccactatgtggtatggacgttg\\n\\\n\
+ctaattacttctgaagggaaattggtcattatggatacgtgtctaccatcaggtcggacg\\n\\\n\
+cagatatggttctgtcttcagttgatccaccgttctttataggataataactgacgatta\\n\\\n\
+aagattatggtaaatagattaagccaattctcttcttgtcagtgaagcatccttaactga\\n\\\n\
+cttgctctgcagcccctcatacatttagctattcaaagtaccggctcgtttcaaactctc\\n\\\n\
+ccacctttggaagaggttgtcaacttgataagtatatcatttacagcattttttcggacg\\n\\\n\
+tacctctaatgtttcattgcagaaaattagttttttctatcgcacattttgcaagtaacg\\n\\\n\
+ttagagacacaattatctgcgaatgaactgctagatctgacgaccgggagcctcgcaaat\\n\\\n\
+atcaaaaaagactgacatatatcaaggagtcgttgacaagtgctggtaagtcaattggtt\\n\\\n\
+tatctgtcccggcgtttcgatcttaagctgaccatgcacggcagagtaatgtcactctcg\\n\\\n\
+ttcttacaagtctgtctccaagggtcggcaaaaaagacccctccattctcgagcccactc\\n\\\n\
+acgatatgtagggacgacaacttgtgcggcttatgaattgtctggactgcgggcgagggt\\n\\\n\
+ccatatctccgaagttagaagggacatacctttagatgataagatcaattcttattgacg\\n\\\n\
+aaattcatccacaacggggaacaacttcaccctagacttacgtctgaaaagacacctagc\\n\\\n\
+gtcttataaaaggtcagtgccccgtttcgtaaggctggaattacctacgcaaacttaaac\\n\\\n\
+ctcgcgcccttccttacgtatcgacaagatagaggctatcgcgaatgtactacggaggca\\n\\\n\
+tgaatcatatactagaaccaagtgcctgtgatattaacaagatgatccgacgcgagcacc\\n\\\n\
+gtaattctaggcataaaactccagcaatttgggggccgaaaacaaatgacgttagctaat\\n\\\n\
+taattatatgacatgatcaaaggaggtcaatcacgcatcgagttcgacgtatattcattg\\n\\\n\
+aacttcgtgcgtttgaaagaaacttttatgaaggcaaaattgatcctgtctcctatttca\\n\\\n\
+tgcgtacctcctagttgataattccccgagcagtggttaggacacttttgtcggtatcaa\\n\\\n\
+gttccggtctcaaaacgtaaaattctgtaatctgtatggatggtctgtgaattagttaat\\n\\\n\
+ttttatgaagtcgtcgagacgcagttcctattgatttattctaaacggagatgtgcttcg\\n\\\n\
+tgggactcggaagtagatctgtgtttatgattattgctactttagatgctgactgttaac\\n\\\n\
+tccgtgttgtttttcaaccgtatatcacaaccgaattggatagaacctatagtttcaagt\\n\\\n\
+tctgccacaaggtatcatatttacagttagtgctggttgcttctttcaaacgtggtgagt\\n\\\n\
+ttgtgctatcacgtcaacggtagagctcagtggaccgagtgcgcgttcaaccctgttcca\\n\\\n\
+gagagggtgtgatagcacatataccacgctcgtcgaggcgttcatgatagtttgcaagag\\n\\\n\
+ccggtgttaaacacatattattattgttatccaactaatcggacctatgcataaagcatt\\n\\\n\
+gtctaaacagaataattgcctatatacggtagttttagtgatttatatcttagtatcagt\\n\\\n\
+tagagcttcgaactcttcaggttcctcatatttaacgttcttcgaaagcgaaaacttcta\\n\\\n\
+caaacgaatgtaagcggttttccaagtagtacctataaatcacagaaagatctgtctcag\\n\\\n\
+tatagttgaaatggtattcagctagtgacgtgtaccaattatcatagttcactcaagcaa\\n\\\n\
+gacgctcattaacgaatatagacaagacactatatcatataataaaaaagaacatggtgc\\n\\\n\
+tcgaacatagttgaattcaccatattgaaggggaatgctgacatgtaattcgctactaga\\n\\\n\
+cgatcaattccctacttgtcaaagttgaactggtacgttcttggaattaaatatgattgc\\n\\\n\
+gctggaccaaattgcgacttcttgagtttcagggcaaacgattgagccggaggatgtccg\\n\\\n\
+tctcttacctttcttgcttatgataaacgacggtccctgtacatcactgggaattctcag\\n\\\n\
+caaaaataattgggtaaatcgagactcgatgtattcggccacaaaggtgttagacgttaa\\n\\\n\
+agattattcaacggggcgataataggatcataaccggtatgcaagcgcattgaaagagcc\\n\\\n\
+atgagatccttatccgataaacgctgcacggtatgtgcagccttattgtcgatcacgaat\\n\\\n\
+ttataaatgtagtctgggctgtaagttgaagacctaagttataatgaagtgcaataccaa\\n\\\n\
+atcgattcatagtggattatcagactcaagatatctcctgataaattacagttgttaaga\\n\\\n\
+tacggataaaatgagatttaagattagcagcctctaatctgtttcaatcccgttggaatg\\n\\\n\
+tggtatgcgatcaaggttaagttaaaatcaagcctgtcttcagtcttgattcttgttctg\\n\\\n\
+ccatcgcatgcggtctacgtgagttaatatgtagcttacgttctagcttgtgctaatctg\\n\\\n\
+agtatagattcgtagaggaatattatcaagcttccacgcctcaacgtacgtgtattggtc\\n\\\n\
+acacaagacactaaaagtggaagtagcgtaaactatagtctagttgttaaatgctcagtt\\n\\\n\
+cttgttatattcgatatactcttggctaatttatgtctgagtatataaaattaatgatat\\n\\\n\
+taacttgcatttcacggatcccttagaaaaagattttgaccgagcgcattataaacggtt\\n\\\n\
+acaccgaatcaatagaagcatacccaatagctttctttgaatttattgcctgcgcaactt\\n\\\n\
+ggctgactctctagatccgaataattctatatggtcgtgacgaaactagttcattactgt\\n\\\n\
+ttaaaatgccaacatgtcttttgggccgataatggctctttgcaaaattactcaatgata\\n\\\n\
+cgattgatcaaagcggtagttgctagtggtagcatgtaagtctatcaaatgtctgattat\\n\\\n\
+ccgaaaatcttccaaaagagtccacgtaccatatctatctcatagcgacgcgaggggaac\\n\\\n\
+cttatctaactatcattccatttaccgggtgactctcgatgcaggatccgattgggataa\\n\\\n\
+attgcccagaaatggctcattcctgactaagggtaaggccgttctcagcaagggaacccc\\n\\\n\
+gcgaatctaggcttataccatctagattgttaactacttgcctgtagttctacagccata\\n\\\n\
+ctggacagttgtttctaaatgatcgggattcatgctagcactcctctgaatgcaccgcgt\\n\\\n\
+aagtttaactattacgtccgtgggcagataaggatggaggctgtatgtatcttaactgtt\\n\\\n\
+acctaatatggctggtaattatcaaagtaaggaccttaatgccatagcgctagcaatcgc\\n\\\n\
+tttgtatactgaccatgtgccaacctctcttaatctgtaaaatataatgtcttagctaac\\n\\\n\
+tgtggacgatcatgtctctgcctagagcttcgctgtatcaattcctatagccagcgtact\\n\\\n\
+agtgacacaacaacaccgtgtgagaaaagatattagtccttacgtctgtctctctacagc\\n\\\n\
+ttattgatgaggattgaacatggacatatagctccccctcaaaagcagatgctacctctt\\n\\\n\
+tattccattctcgaacatttgccgaacttaatttcgacaaacctgaggtcacgtcttaat\\n\\\n\
+ttatcggtaacgtcacgtccctttgagactggataaatatattaccaggggccaacgagc\\n\\\n\
+aattgttggaggcgcttctataatacaaggtgtcttgtcaaagaaagacggcgtgcgtct\\n\\\n\
+cgtgcaactcacttaaccaatattaatgtgaaacccccctctctcacatcttatgcggtg\\n\\\n\
+tactgccctggtacatttcctgtacaggactccaacagtgtagattcctaagatagctgt\\n\\\n\
+tggagttgcctcacgccagatcgaaaaactgaataaactagtgagctgagctgcagaaat\\n\\\n\
+accgcttaattacttatgactagttcaaagggacctacgtgatgtcagacattgcaagga\\n\\\n\
+agaaattaggtttgtgcgtcattttggctggactagcactccttacttcccctactattc\\n\\\n\
+aaatgtcgtaaacagcatgagacaggatcgtgctgacatttaaggtctattgggaacgag\\n\\\n\
+gctacctttggtcgcgcgctcgcgttctccgaatgaccgaaatgcatgagcacagtatgc\\n\\\n\
+aattgcttatagatctaaggtctggtcgttgaaaccaagcacgtaggcctgggaaatcag\\n\\\n\
+ttcttcctcagcaactacacaaaagcgtccaagcattagtacttgtagtaaatgtccgaa\\n\\\n\
+cctatgcgctcatttgaaagtcaaaaaatatttttaagcagtaggcacctaacccgattc\\n\\\n\
+ctctacttagtagctttctttgattctcagaattgactgcaatatcactgcacaattctg\\n\\\n\
+tgccattactagacttctctgtattaacgtctcatcttactaacactcgcctaggacaca\\n\\\n\
+tctgagagtgaagtatttcaatacatttactgaaatcttcagttctaaaatccccgaata\\n\\\n\
+aggctcttatcggtttggccaacacaagaaaaaaacttcttgcaccactcaccttcatac\\n\\\n\
+gcaggagcctggggaacttagtaataactatttcggcagacaaagcttataacaagttgc\\n\\\n\
+cggcgcgtataatatttaaaagaccccttgagctgctcaattaaaacgctcacctggtat\\n\\\n\
+aggctattagatagtgccgtcttagtaaggggcgggaattatcggataaactgatatttt\\n\\\n\
+gataaaataaccgacttgttcacgacataagtcactaaggagattttatctttctccaaa\\n\\\n\
+gtatatcttccttggataatttcaaagcgctgcaatttaagttctgttactagtttatgc\\n\\\n\
+tgctgggaggtgaccggaaggcgtagtaatctagaggcaaattataagaagttcatcata\\n\\\n\
+tcattttcgactacaaaaacaaggtgttgtatgccggcgcattgtgtaaactggacgagt\\n\\\n\
+accctagatggaaaattatacgttaagccaagatttcgatgtaatgataattacctacac\\n\\\n\
+atttttgctatccataggaacaagagctgttctataggctcgtggcatacgaacatttgc\\n\\\n\
+tgccgctatgaatattggaagctcttcaactacagactctattcttaattgccgtcgaaa\\n\\\n\
+atgggccgaatcggctattattaatactcggtttttccgaggggattgttgtcgacagtc\\n\\\n\
+gtaattattattaatattgatgttggtgaggtcatttaaatacaaccttgcagacaatga\\n\\\n\
+ataagggatccaatctctcatactccttttacaattgctcatgcccctatgcaaacctta\\n\\\n\
+tgccgccacacctccgcaactctctcttctgaactgtaagtagcttcattactggtttga\\n\\\n\
+gactatactgaagctgatgacattctaaaatggctattttcgaatgtgattcataatgtt\\n\\\n\
+tatcgtttgggatggcagaatcacgttatttttgatatagcccgggtattctattgtata\\n\\\n\
+gaacgtatgctacaagtcattccccgaagaagactagaagtaaacaacatgcgaccatcg\\n\\\n\
+ttaagccacgcaaggctgtagctttatttcccgataacctatcttccataaatagcggac\\n\\\n\
+agcaggatactgacgctcaacatcagtggttatggtctaatttttaacttttaataaggt\\n\\\n\
+aacttcagcaggcatacacagtaactctttaatttataatcaaattagaagtctgacact\\n\\\n\
+tcttatatttttctatcatccaacgcgatcgcccattagcttattgtgttactaataacg\\n\\\n\
+tatctaaaccaatccttttcaagctactgcctatattgtcaatatatacaaacaacagga\\n\\\n\
+tagtaggctgcttaaaaaatattgtcaaccgtgtacgctttacaatacccggaaatcaca\\n\\\n\
+aactttgtagacaacgagtgaaatttatacactacgaagggccagcgtacaagacccatg\\n\\\n\
+aattaggcgatatgtttattctgacatattggtttatccttaatctgtcgctgtaaaatg\\n\\\n\
+aagccgcccccatccctgcgaattttttttcgaagattcacgactgaaatataaatacgt\\n\\\n\
+ttggctatatttatgttggagggaggcaatagcctttactgttaaccgaagatttagcca\\n\\\n\
+gtgagtgtgacactaaaacactggaataaatgcaggcgttcttctgggtaaaaggtttag\\n\\\n\
+tcaatctcgcctataagttcatatagctctggatataattatctggcccatgcatttatc\\n\\\n\
+atggcgcttggtgccctgtgtgaagccggcctctcatattgaaggtccgaagtattccat\\n\\\n\
+gtacattaagatcactctctcattcatgcatcttggcttaacaaatctggttgtccaagc\\n\\\n\
+tttccaggcacgtatggtacaaattcggatcgaatacttataaaaatgatatgttaaact\\n\\\n\
+gtctaaaacgctcatctacaaagtaaagtgcactaaccaatagagtctcaagaccgtgta\\n\\\n\
+atgctggtgcactgaatgtgtaatacggttagaagggattagttatgttacaaatccatt\\n\\\n\
+gaaaacttaagaagcattgcgtgctcggagggtgcatcttttatcaagagactaacatta\\n\\\n\
+ttttcaacgacgtacatgctttacaatagggtacttatcaaacgccgagaaacgcgccta\\n\\\n\
+tagtgatgttatgattatgacccgatatccattggaccgaattttatgtaggttcccagc\\n\\\n\
+gtactcgcgtaatatctcggtattgccataatgtaatacttgtcggtctctcccagatga\\n\\\n\
+aaaagcgttacagagtatttcaatgaaaaacagcgcgcaacgtcaatacctttaggggta\\n\\\n\
+acggccgctgatttcatatagatatacgataagttggtatagctctactaggtggcatcc\\n\\\n\
+acaatcgttgcatttactatagctggttacaatcataatctataccgttccttacatact\\n\\\n\
+accatagcgggatagcgtttttttgccgttgattgggtttaagaggatgtcagtctcatt\\n\\\n\
+atatccgattcggtgggagagccgttgttttcaaatcgcacactttgtgacataatgtac\\n\\\n\
+aagataacaaaactgatataagatataaactgtcaatatcaccttgacacttgaatcaaa\\n\\\n\
+gtaaattaactcgcaaatataatttgactaattgggtgcagatttctcaattaataaaaa\\n\\\n\
+aatggcaccggatgggcttacaagccccttatcattcacttgtatcatgatttccaagaa\\n\\\n\
+caatagaatttgctagcaagtatgaacagagattcgaattgcatccacagtacgccggag\\n\\\n\
+cgtttattttaatgtggatatgacgatgtactgttggcggcatttgctagtaaccggtcc\\n\\\n\
+ttatttacgtagcgcacacgtaagcatgtctgggagaaatatggtggtacaatctcagag\\n\\\n\
+aaagattacagtttggtttaaataggacttatcgggtcggaagtggaacttaataagcag\\n\\\n\
+tacacaattgggcaacagacgtcttgcctattacaataggattacaatgcgttagatttc\\n\\\n\
+agacacgttcgtgtttggctattcgtcaattccctaaatagttagacgatcaactattat\\n\\\n\
+caaagtgattctttgttcatcctccattcatgtaacagatggcacactacgcataacgcc\\n\\\n\
+gaggaattttaacgagatttaagagagcagttcgggcacaacccacttgactttataaca\\n\\\n\
+gctcggcagcataaacggtaatatgtgacaaatttccaaacgttataagaacgtatgtgt\\n\\\n\
+acttagaaaactaagtggttcatgttcaacagatgtgacgcagcaagcctaacttatcta\\n\\\n\
+ttggttttgctataaaagaacaaagttacacagaatcctaagggcttgtttcacacttat\\n\\\n\
+gcctagtgcttcaccatcttaaaatagcgaaaccggcacgaatcaaaccttaaaacaatg\\n\\\n\
+cgcagatattggtgatggtgactccgggtatgataatggtaactgttgaccagcgcccac\\n\\\n\
+ctcatcgaagtatagaaagtggttaggataaggatgagaccgaacttatttccggccata\\n\\\n\
+actttagattttctacctagtacacaacatcagggcggacacgaaaccgccatcacatca\\n\\\n\
+tataccaggtttaatttgcttaatgggggaagtgtcaacgaaccttcgaactttagcagg\\n\\\n\
+catatggccattatatatggccccagagcagaatgctacagcagacaaaatttggattta\\n\\\n\
+tgtagtttaatacctatcaaacttggtgtgaccatacttgtctaacgacagtgcacaaag\\n\\\n\
+tgtaagttacaattattactactcagcagcttctgcaatgataaaatcttatcatacacg\\n\\\n\
+tcacatatgataatatctacttagggggaacgggctccacaacctacatagtactcaata\\n\\\n\
+cttacactattcgacaggcacaccaaacctgtacagtcccaaaagattgagtcaactttg\\n\\\n\
+cagtactgcagatcacagtaatagcttagttagcgagtcaaaattagttttctacgagac\\n\\\n\
+tgcacgaccgtgcaaatttccgatgtgttggctacaaatagcaacgtatgaatttgtttg\\n\\\n\
+aagccacgtaaactgtacaaccttagagataagtctcaggctactaaaaacacgttgtgg\\n\\\n\
+cactaacaggatcatggttgattcttacttattcggctgaccggcccaataagtaacctt\\n\\\n\
+caactagaacagaataatcgggagtagtttaattcagtcaaggtgcaggtctcattgtaa\\n\\\n\
+ctaacaagctctgtgtaaccaagttaaaatcgttttcttagcggattccctacttatgga\\n\\\n\
+tttgagctcgtccacaatattcgatacaagaagtttgtggtccgtaacaacgaaatttta\\n\\\n\
+attacgctgtgcagcctcatccaaggaattaatagaaggttgatggtaggctccgaacgc\\n\\\n\
+tccatgattataatcaagtggactgtgcagtaaacgaggaaggtatcctgacgtcgtggt\\n\\\n\
+gttcgtttttgttatttgtgccctatacgagtagataaaccatgaacagcacagtgtgaa\\n\\\n\
+cccatggttgattttaggctaccttatttttaatttccgttacacagaaacgaattccac\\n\\\n\
+aactaacatgccattaatttttcgatatcttataaaagatggtcgaaattcattcattta\\n\\\n\
+ttttttttcggttctcgaaagtcaactaagctgtcgcgttttgtttctctttagaggtaa\\n\\\n\
+aagtggctttgatctcctacgtttggatactagtcaaccattactccatttgatccgtga\\n\\\n\
+gtatcacctgtctaacatccagcattatgactcctcggcgaagaaaagacacacttctta\\n\\\n\
+gagtcgatgtgtattagctagggacacagttgtttaatacgatagtgagcccagggaggg\\n\\\n\
+cagtgcgtcccccagtagatttattcagctagtgtaagtataagatatctcacccacgag\\n\\\n\
+gttcaagtgatatgcagtcttagaataatacttatcctgaatttcgatattatgggtact\\n\\\n\
+tcaataatccgctagcgctactttatgtctcgttggacagcaggacacatggcagtctta\\n\\\n\
+aacactaaagacatcacctgaatgaatgtaatgggattacaagaatcaatgaggtattat\\n\\\n\
+atacgacgtaggaaactctggatatatacagtaatctagttacgccatcgcacttcattc\\n\\\n\
+ctctggaaacttagaagacatcagctgtacgtggaggaaccagacccccgtatgtagcca\\n\\\n\
+aatagaaccaaagttgcttatacaaacacacccaatgacaatggaccgctggagttcgta\\n\\\n\
+aactcggaacgtagtactgcacaaacccagcatttagcaataggagctacgtatgcaact\\n\\\n\
+cccacgtggtaataccttcaagctatcaatatataggtgcctagctaatcgcattcgcaa\\n\\\n\
+gcagtattcaagcttgtaaaccagtataataattacagaggctctatgaaacccaacttt\\n\\\n\
+ccagctaaaagtcccaattaaatggttatttcgtacttttaaagtcgcccgttctgttat\\n\\\n\
+tacgcgaattgattctactccaaaattaaacacaaattatcaaccgtttcatttatattt\\n\\\n\
+gtcaatgcagctgtttaaaataaggctctactaaattataattaagacacttattaccag\\n\\\n\
+atttctctagttaagtttgaaccagctcgactaccgcgaaagatacattcccttctctat\\n\\\n\
+ttttcagttcatctatgggtcagagaagcattgaatttattctattcaccctcgtcgttc\\n\\\n\
+acagcgaatcgtcagtgtgatcagtgtatgagaaatatcctaaaccgtttagtcagacca\\n\\\n\
+cacgcttagaacaagtggtctaaaaagactgccctggaaggagtaagaagtatacagctg\\n\\\n\
+atccggtgtatccttcagtcatctgccctatactaattacacgacgcaaggaaaaatagg\\n\\\n\
+tttattttctaggcaaacccttcataggtgactccgatgtgttacgaatcatgcttgaga\\n\\\n\
+atgtgctatcgttaccgacggataataacgatctccaatgaaccaaatgtagaatgtcta\\n\\\n\
+ttgattacccttttactattcgacttagagataggagatagaacctcagtgtactttttt\\n\\\n\
+agccgaatgggaatctttgggaggtgaatggccataaggtcgtaaatccaaccctcttaa\\n\\\n\
+agtcttccatattatatcgttgttcgtggaatcgataacagatttgttgacccatagtaa\\n\\\n\
+atgtatactagtttatgttgtaagtgtagattgttttccgattgccgtccaaactttatg\\n\\\n\
+tcgtaattgtagaccagtaaagttgaccaaggtaagtgcccagcgatcctgcgagatcga\\n\\\n\
+tcgccaatttttccagtcactgtaagtgtaggtttagataaagccgtatgagttatatca\\n\\\n\
+taagggcctcggaaagcagcttcgaaccaaagttcccttataatagtagtttaactataa\\n\\\n\
+aagtatatactggtctgtcgccctttcacgatttgttttaccggtttatgaagcgttacg\\n\\\n\
+tcattagagcggctccaatttaaggttaacggcttccatgtgtagttgtatacaaggata\\n\\\n\
+acttaaagtatctgttcagcgagctagttaagttatcctcgatagaacacaactcagagg\\n\\\n\
+tcccaagatcgggtttgcaacttgctaatttattctcaaggcaaattgggaattatcgat\\n\\\n\
+acctgtataccataaggtcgctcgatgtgatgcttatgtcttctggtgatcctaccttag\\n\\\n\
+ttagtgctgattaacggaacattaatgtttatcgttttgagatttagccaattctctgat\\n\\\n\
+tctaactcaagatgccttatctgacgtgctatgcagcccctaagtattttacattgtaat\\n\\\n\
+aggacacgctcctttaaaactcgccaaaaggtcgttgtggttctctactggttaactata\\n\\\n\
+taatttacagctttgttgagctagttcctctttggtttaagtcctcaatattagttggtt\\n\\\n\
+cgagcgataagttggctagttaccttagtcactatattagatccgaatgttatgcttcat\\n\\\n\
+ctgaagaccgccaccctccaaaatttcttttaagactcacttattgcaaggtgtaggtga\\n\\\n\
+attcggctcgtttctcaagtggtgtatctgtacacgagtttccatattttcatcaacagc\\n\\\n\
+caccgcacacttatgtcactctaggtattaaaagtcgctctacaaggggacgcaattaag\\n\\\n\
+aaacagacatgctagtcaaaaataaacatagcgaggcaccactaattcggccgcttatca\\n\\\n\
+atgggatgctctgcgcgagacgcgccagagctcagtagttagttcggacatacatttact\\n\\\n\
+tcagatgatcaattagttttctacaaatgcttactctaccccgaaaaaagtcaccagact\\n\\\n\
+cttacgtctctttagtatccttccgtcttatataaggtcagtcccccgtttcggtaccct\\n\\\n\
+ggaatttactaagaataatgaaacagcccccaaggacgtacgtttacaaatgatagacca\\n\\\n\
+gatcgcctagcttattccgacgcatgttgcatagaattgaaccaacggaatgtgagagta\\n\\\n\
+actagatgagccgaccacagcacccgtttgcgtcgcagaatacgcctgatagttcggcca\\n\\\n\
+cgaaatcatatgtcctttgagtattaagtatttgtaatgatcaatcgagctcaagcaagc\\n\\\n\
+ttacacttcctcggatattcagggaacttagtgcctttgaaagatacgttgatcaacgaa\\n\\\n\
+aaattgataatggctcatatggaatgcctacctcatagtgctgaattaacacagcactgc\\n\\\n\
+ggacctaacttttcgaggtttcaagttcacgtctcaaaacctaataggctggaatatgta\\n\\\n\
+gggatcctcggtgaatttgtgattgggtttgttgtagtactgaccaagtgaatattcttt\\n\\\n\
+ttttctaaaagcagatctgctgccgggcactacgaaggagatctctgtgtatcattattg\\n\\\n\
+cttcttgacatgatgactcttaaatcactgtgggtgtgcaaaacgatagcacaacccaat\\n\\\n\
+tcgatagtacatattgttgatacttcgcactaaaccgttcatatttaaaggttgtgctcc\\n\\\n\
+ttccttcgttaaatactggtgacttggtcctatctactattagctagacctctggggaac\\n\\\n\
+cacgcccccgtaaaacctgtgcaagagagggggtcatacatcttagacatcgcgcctcca\\n\\\n\
+ccagggaagcattgggtgattgaccaggtgtgtaacaaatatgattattcttatactaat\\n\\\n\
+attagcaaagatgcataatgatttgtattaaatgtataattgaattgataagggtctttt\\n\\\n\
+agtcagtgatagagtagtataaggtagacattagaactcttaaccggacgcagatttttc\\n\\\n\
+ggtcttagtaagccaattagtcgacaaaacaaggtaagagcggttactagtagtacctat\\n\\\n\
+aatgcactgaatcttcggtcgaagtatagttctaatgctatgcagattgtgacggcgaca\\n\\\n\
+aatgttcagacttatatcatgaaacaagctcttgtaagtattgacaaatgaaaagattga\\n\\\n\
+atatttttaaatacaaaatgcgcctacttattaggggaattaaccagattgaaggccaat\\n\\\n\
+cctcacatgtaatgagataatagacgataaatgaaattcttgtaatagttgaactgctac\\n\\\n\
+gtgatgggtattatatatgattgagatcctccaattgccgacgtcttgtcttgatgccca\\n\\\n\
+aaagattgtcaacgaggagctccctcgcgtacctgtcgtccgtatcataaacgacgcgac\\n\\\n\
+atgtacagcactccgaagtataagcaataataatgcgggtaatccagactagatcttttc\\n\\\n\
+ggactcaatgcggtttcacggtaaacatgattaataccggagagtagtcgagcttatcag\\n\\\n\
+cgatgcaagcgaattcattgtgccaggagatacgttgcagataaaaccggcaacgtatgt\\n\\\n\
+caacaagttttggcgatctcgttgtttgtattcgacgaggcgcgggaacttcaagaacta\\n\\\n\
+tcgtatattcaagtccattaccttttagtttcagactggtggagctgactaaagttatat\\n\\\n\
+catcattttgtacactggtttagttaacgataatttcagatttaacatgaccagacgata\\n\\\n\
+atcgctgtatatccagttggaatgtggtttgccagaaaggttaacttataatcaagcctc\\n\\\n\
+tcttcagtcttgattcgtcgtatcccatccattgcgctatacctcagtgtatttggagct\\n\\\n\
+gtagttataccgtgtgctaagatcagtagacatgacgagagcaatattatctaccttaca\\n\\\n\
+agcatcaacggacgtctagtcggaacaaaagactctaaaactcgaacttcaggttaatat\\n\\\n\
+actatagttctgtattcagcagttattcttatattcgatattatcttgcctattggatgt\\n\\\n\
+ctgactttagtatattaatcatagtatctgccatgtaaaggtgccagtactaaatctgtt\\n\\\n\
+tcacagtgcgaattataaacggttacaaccattaaagacaacaagaccctatagctttat\\n\\\n\
+ttgaattttgtcaatgcgcaacttggagctcgcgatacatcccaattagtctatagggtc\\n\\\n\
+gggacgattctacggcatttctggttataatgacaacatggattgtggcccgagaatcgc\\n\\\n\
+tctttcattaattaagcaatcattacagtcttataagcgctacttccgagtggtagcagg\\n\\\n\
+taactcgatataaggtcgcatgagccgaatagcttaaaaaacaggccaccgaacattgat\\n\\\n\
+agagaataccgaccacagcgcaacctttgattactttcattaaattgtacggctcactcg\\n\\\n\
+acatcaagcttaagattgcgataatgtgaactcaaatggatcagtactgaagaaccgtaa\\n\\\n\
+cccacttcgcagaaagcgtacccagagaagatacgctgttacaatatacagggtgaaatt\\n\\\n\
+attgcctgttcttcgtaaccatttcgccaaacttggttagaaatgatagccattcatgat\\n\\\n\
+agaaataagctgaatgataccagtatctttaactatgtagtcagggggaagataacgatg\\n\\\n\
+gtccatgtatgtttctgatatgtgacagtattggccgcgtaatttgctaacgaagctact\\n\\\n\
+taatgcctttgagcttcatatagatttctttaatcaaaatcggcaaaaagatagtatgag\\n\\\n\
+ctataatatatgctagtagagaactctggaccatcatctatatgaatactgattcgagcg\\n\\\n\
+tgcaattactttagcctgcgtactactgactctacaaaacactctgagataagtttgtag\\n\\\n\
+tcagtaagtcgctctctataaaccttttggatgaccattgtacagccacttatagatccc\\n\\\n\
+aataaatagcacaggagacagagtttttcaatgctcgatcatttgccgatagtattttcg\\n\\\n\
+tctaacctcagggcacctattatttgatacctaacctaacggccctttcacaatggagaa\\n\\\n\
+atatatgacatcgggacaaacacaaatggtgggtggccaggagatatgacatggtggcgt\\n\\\n\
+ctctaagaaacacggactccctctaggcaaactcacgtaaccaattttaatgtcaaacaa\\n\\\n\
+aacgctcgaaaagattttgccgtgtaatgacctggtacattgactggtcaggaatacatc\\n\\\n\
+actgtagttgccgtagtgtcctgttggtgttccatcaagacacatcgtataacgcaattt\\n\\\n\
+acgacggacatcagatcaagttatacagattatttaagtatcacgtgtgcattgggacat\\n\\\n\
+aagggatctcacacatgccttggaacatttttgctttgtgccgctttttcgctgcactac\\n\\\n\
+caatccttacttaccagtatattcaaaggtcgttaacagaatgagaaaggttagggctct\\n\\\n\
+aagttatcgtcgattgggatagacgagacatttgcgagcgccctccacggatacgaatct\\n\\\n\
+cccatatcaatgtgaactggatgctatgcagtttagttcttacgtctcctagtggtaaaa\\n\\\n\
+atcaaagtagcactcgcatagcagttattcagaacctaatacacaaaaccgtcaaacatt\\n\\\n\
+ttctaattctaggtatgggccgatcataggagctaaggtgaaactcataaatgttttgtt\\n\\\n\
+agatctagcatcctaaaaagatgcatatactgagtagctggcgtgcattctctcaattgt\\n\\\n\
+atcctttttaactgaactagtcggtcccatttcgtgactgagatctattaaccgataaga\\n\\\n\
+ttaataacactcgcattcgtatcagctcagagtgaagtttttcaataatttgactgatat\\n\\\n\
+attaacttctaaaataaccctttaagcctcggatccgtttcccaatcacatcaaaaattc\\n\\\n\
+ttattccaactatctacggattaacaacgtgcatggggatcgtagtaagaacttgttccg\\n\\\n\
+atcactttgagtatatcaagttgacggcccggttattattgaatagaaacattcacctgc\\n\\\n\
+taaattaaataccgcacatcggatacccgatttcagagggccgtcttactaagggcaggc\\n\\\n\
+tttgttcggtttaactgagatgttcattattttacagtatgcttcaactaatatgtaacg\\n\\\n\
+aaggacagtggatctgtctccatagtagatcttcagtcgtgaatttcataccgctcctat\\n\\\n\
+ttaagttcgcgttcgagttgttgatcatggcacgtgaaagcaacccctagtattctagac\\n\\\n\
+gaaaattttttctagttcatctgataatttgccaattcaaaaacaaccgctggtttcccg\\n\\\n\
+gcgcattctctaaaatggaagtcgaacctagagccattatttgtcggtaacccatgagtt\\n\\\n\
+ccttcttttcagaagttaatacactgtggtcctatacagaggaaaaacagcggttatata\\n\\\n\
+cgatcgtggcataacaacattggatcaagatagcaatttggctacctattctaattctca\\n\\\n\
+ctagattcggtattccactacaatatcggcagattaggattggatgaataatcggtgttt\\n\\\n\
+aagtccggttgcgtctccaatctcctaatttttattaatattgatcttggtgacctattg\\n\\\n\
+taaataaaaacttcaagactttgaataacggtgaaaagatagaagactcatttgaaaatg\\n\\\n\
+gatcatccacagatccaaacattagcaagacactaatccccaactagctattctgatcgc\\n\\\n\
+gatcgtgctgcagtactcctgtcacaatagtctgttcatgatctaattctttttgggctt\\n\\\n\
+tgttcgatggtgattcagaatctttatccggtcgcttccctgtagctactttgtggggat\\n\\\n\
+attgcccggggattatagggttgagatcgtttcctaaaagtatttaaaccaagtagactt\\n\\\n\
+caactaaactacatcagaacatcgtgaagacaccatacgcggtacctttatttaccgata\\n\\\n\
+acatttcttcaagaaataccggtaagcagcataatgaccctaaacagctcggggtatcgt\\n\\\n\
+cgtagttttaaattttatttaggttactgctcaaggaataaaaactaactatttaattta\\n\\\n\
+taataatattacaaggctcacactgattagatttgtctataagacttcgcgatcccccat\\n\\\n\
+taccggattgtcttaagaataaactagataaaccatgcattttctagataaggcctttag\\n\\\n\
+tctaattagatacaaaaaacacgatagttgcatccttaatttattgtgtcaaacctggaa\\n\\\n\
+ccttttaattacccgcaaatcactttatgtcgagactacctctgaaatttattatctacc\\n\\\n\
+taccgcatgaggacttgaaccatcttgtaggagttatgtttattagctaagattcgttta\\n\\\n\
+tcctgtagcggtccatgtatattcaacaagcaaaaagcactcagaattgtttttagttga\\n\\\n\
+gtcaagactgatatataaataagtttccctagttttttcgtggtgggacgatattgaatt\\n\\\n\
+gaatcttaaccgaagagtttcccactctgtcgcacaataatacacgccaatatttccagc\\n\\\n\
+cctgcttatgccttaatcggttactcaatctcccattgaagttcattttgatctgcatag\\n\\\n\
+aagtttcgggcccagccttttttctgccaccttcctccaagctctgtagacgcactctaa\\n\\\n\
+gattgatgctcacatgtattaattctacattaacataaatatataagtcatgcatcttcg\\n\\\n\
+agtaaaatatctggttctccaacatgtcctggcacgtatcgttataatgcccatacatgt\\n\\\n\
+agtattaaaatgattgggttaactggatattaagatcatcgaaattgtaaagtcaaatta\\n\\\n\
+acaatactgtctcaagaccgtgtattcctcgtgctcggaagggctattacgcttacttcc\\n\\\n\
+gttttggtatcttaatatgactttcaaaaattaagttgcagtgagtcctacctgcgtgca\\n\\\n\
+tcggttagcaagagtataaaagttgtttaaacgaactacttgctttacaataccggtcgt\\n\\\n\
+atatatcgccgtgaatccagaagattgtcttctttggattatcaaccgagatcctgtgga\\n\\\n\
+ccgatgttttgggaccttcacagaggactccaggtagagctcgcttttgcattaatctaa\\n\\\n\
+gaattgtacctctctaaaagatctaaaacagtgaatgtgtatttcatggaaaaacacaga\\n\\\n\
+gaaacgtaaattactttaggccgaaaggcacatgagttattatacatatacgagatggtg\\n\\\n\
+gtatacatcgaattcggggcatacactatagttgcattgtatttagctgctttaaataat\\n\\\n\
+atgatattaccttccttacataagacattaccggcataccctggttttcaacttgtgggg\\n\\\n\
+ctttttgacgatcgcactctcatttgatccgagtagggcggtgacccctgcttttcaaat\\n\\\n\
+acaaaaatttcgctatgaaggtaatagattacttttcgctgttatgatagaaacggtaaa\\n\\\n\
+tttaaaattgaaacttctagaaaagtaaagtaacgagaaatgattttgtgaataatgcgg\\n\\\n\
+tcatgattgcgcaagtaagaaaaaaaggcaaaaggatgcgcggaatagaaacttatcagt\\n\\\n\
+cacgggtatcttgatttcattcttcttgtcaattgccgacataggatgaaatcagattcc\\n\\\n\
+aatgcaatacacagtaacccccacccttgattgtaatgtcgatttgaagttgtacgcgtc\\n\\\n\
+gacgaagtggatagtatacgggccttttgtacggtgcgatcaactatgaatctcggcgag\\n\\\n\
+ttagatggtcgtacaatctcacacatagaggtcacttgcctgtaatgacgaattttcggc\\n\\\n\
+taggtactcgaactttattagaagtaaaaatgtgggcaaaagaaggattccattttacaa\\n\\\n\
+gacgattacaatgagttacatgtctctcaacgtagtctttccctagtagtctttgaacta\\n\\\n\
+tttaggtactccagaaaattttagcaaagggtttctgtgtgaatccgccattcatgttta\\n\\\n\
+tgatggaacaataagaataacgccctcgtatgttatcgacagtgaagtcagcagttcggc\\n\\\n\
+caaaaacatattcaatttagtacagatccccagaagttaagctaagtgctctaaaatggc\\n\\\n\
+ctaaacggttatcaaagtaggtctaattactatactaacgggtgcatcgtaataactgct\\n\\\n\
+gtcgatgcaacactatatgatagtgtcgttttgctatatatgtacaatgtgacaaagaag\\n\\\n\
+ccttagcgattcttgcaaacttaggacttcggattctcaatcttaaatgtccgaaaacgc\\n\\\n\
+aaagattcaaaaatttaatctatgagcagatatgcctgatggtgactacgcgtatgttaa\\n\\\n\
+ggctaaatgttgacaaccgcacacataatcgaactattgatagtcgggagcataaccagg\\n\\\n\
+tgaacgtactttgttcacgacatttattgacatgttctaaatacgtctcaaaatcacggc\\n\\\n\
+gcactagaaaacgcaatcaaatcattgtcctggtttaagggccgtaatgccggtagtgtc\\n\\\n\
+aaacttcatgagaactttagctggcttttggccagtatttagggaccaagagcactagcc\\n\\\n\
+ttaagctgaatattttgccatttatctactgttataactttaaaacttggtggcaccaga\\n\\\n\
+cttgtcgatacacacgcatcaatctgtaacgtaaaaggtttactaagaacaagcgtagga\\n\\\n\
+attgagtttatattatatttaaactaaaagatgatattagcttctgagggcgatagggct\\n\\\n\
+ccaaatcataaagaggaatatattattacacgattagaaacccacaacatacctcgaatc\\n\\\n\
+gcccaaaagtttgacgaaacttggcagtactccacatctcagtaatacagttgggagagt\\n\\\n\
+ctcaaatgttgttttattactcaatgaaccaccctcataatttcactgctgttccattaa\\n\\\n\
+atttgcaaacgatcatttgctttgaagaaacgtaaaatcgacaaaattacagataagtag\\n\\\n\
+atgcataataaaaaaaactgctcgctataacacgatcatcgtgcattcttacttaggagc\\n\\\n\
+atcacccgcacaataacgtaccttaaactacaacactattagaccgagtactgtaattca\\n\\\n\
+cgaaagctcaagctcgcattgtaaagaacttgctctctcgtaaaatgtgataatagtttg\\n\\\n\
+cggagaggattcaattattttccattgcacctactccactagattcgataaaagaaggtg\\n\\\n\
+gtcctcccttaaaaagaaatgttaagtaacatcggaaccataagcaaagcatgtaagtga\\n\\\n\
+accgtcatccttccctaagaaacataaaggtttttaataatgtcgactgtgaactataac\\n\\\n\
+tgcatcctttcctgacctactccggttccttgttgttatttctgaacgagaccagtagat\\n\\\n\
+aaacaatgtaaaccacagtgggtaccaatggtgcatgtgacgctaccgttgttttaagtg\\n\\\n\
+cccgtacaaacataagaagtcataatcttacttgaaattaattttgccttttattttttt\\n\\\n\
+tcaggctcgaaattaatgatttgttttttttgaccttctagttacgctaatatgcggtcg\\n\\\n\
+cctgtggtttctattgagtcctataacgggatgggatctaatacgtttggttactagtaa\\n\\\n\
+acaaggtataaatttgataccggagtatcaactgtataacatcaagctttatgactcata\\n\\\n\
+cgcgaagtaatgacacaaggctttcaggagatcgcgagtacagagccactaaggggtgta\\n\\\n\
+ttacgatagtgacaccaccgagcgcactcactccccaagtagatttatgatcctacgcta\\n\\\n\
+agtattagatatataaccaaagaggttctagtcagtgcaactcttagaataataattagc\\n\\\n\
+cggttttgcctttttaggcctaatgcaatattcagctagcccttatgtatctcgcgttcc\\n\\\n\
+acagcaccactcatggcacgcgtttaaactaatcaaatataatctatgaatgttatgcca\\n\\\n\
+gtacttgaataaatcaggttttttataagtccttgcatactctcgttatatactgttaga\\n\\\n\
+gtcttaccccatagaaattctttcatctgcaaacttagaagaattctcagctacggggag\\n\\\n\
+cataaagtccccaggatgttgacaaatacaacaaatgtggcttatacaaacactccatat\\n\\\n\
+gaaaatcgaaccctcgtggtagttttagccgaaccttgtacggataaatccctccatttt\\n\\\n\
+ccaatagcagatacctatcctactacctcgtggtattaaattaaagcttgaaatatagag\\n\\\n\
+ctgcatagcttatccaattcccaagcacgagtctaccgtcgtaaccacgatttgatttac\\n\\\n\
+agacgctagagcaaacccatctttaaacatataagtaaaaattaaagggtgagtgcgtac\\n\\\n\
+gtgtttactagcaacttcgcttattaagacaattgtttataagccataattaaaaacata\\n\\\n\
+tgttcaacaggttcattgatatttgtaattgcacaggtttttaataaggatctacgtaag\\n\\\n\
+tataatgaacaaactttttaccagagttatattctgtactttgaaaatgctcctctaccg\\n\\\n\
+ccttagagactttcaattagattttttgcagttaatctatgcgtaagtgaaccatgcaag\\n\\\n\
+ggatgcgattcaaccgcctcgtgctaaccctatcgtctgtctcataactgtaggtctaat\\n\\\n\
+ataattttcagttttcgaacacataaccctttgaaaatctgctatttaatgtctcacctg\\n\\\n\
+catgcactatcttctatactgctcagaacggctatacgtcactatgctccaagtgacgat\\n\\\n\
+ttaaacgaagcaaggaataataggtttattttagtgcaaaacaattaagtgcggactacg\\n\\\n\
+tgctctttacaataagccttgtgattgggctataggttaagtcccatattaacgatctcc\\n\\\n\
+aatgtacaaaatcgacaatcgctttgcattacccggttactagtcgaattacagatagct\\n\\\n\
+gttagatactcactctaattttggacaacaatcccaatcttggggtcgtctatcgcctga\\n\\\n\
+agctcgtaaatccttccatcttaaacgattacatattatagacttgttcggggtagagat\\n\\\n\
+atcacagttgtgcaaacattgtaaatcgatactagtttatgttggtagtctagttgcttt\\n\\\n\
+taccattccccgaaaaacttgatctactatttcgacaacagtaaacttgaactaggtaag\\n\\\n\
+tgaaaacagagaatgcctcatagtgccactatttgtccactatatgtaagtgtagcttta\\n\\\n\
+cataatccactatgactgagatcattacggcctaggaaagcagcgtagaaaaaaagggcc\\n\\\n\
+cggatattacgactgtaactataaaactagttactggtagcgcgccatgtatagatttgt\\n\\\n\
+tttaccggttgtggttgcgttaacgaatttcagccgcgaaaattgatccgttaaccagtc\\n\\\n\
+catctcgacttctataaaacgataaagtaaagttgatgttcagcctccttcttatggttg\\n\\\n\
+catcgagagtacactactcagtgggaaatagatcggggttcctacttcagattgtattat\\n\\\n\
+ctaggcaattgccgattgtgccatacctggataaaataagctacctacatgtgatgctta\\n\\\n\
+tctattatcgtcatactaccttagggtgtcctgttgaacgctacattaatctttagccgt\\n\\\n\
+ttgagatgttccaatggataggagtctaacgcatgatgaagtttaggaaggcagagcatc\\n\\\n\
+ccactaagtatgtgacagtgtatttcgaaacgagacgttataaatagaaaaaaggtcctt\\n\\\n\
+ctggttctattctgctgaactattgaatggaaagattggttgacctacgtactatttgct\\n\\\n\
+tgaagtcatcaatttgacggggtgagagacatatggtgcatactttacggactctatatt\\n\\\n\
+ttagatcagaagcttagcagtcttctctacaccccctcacgacataattgcttttaagaa\\n\\\n\
+tctatgtttgattcctctacgggaattcggatccgttcgcatgtgcggtttatctaaacc\\n\\\n\
+aggggacatatgttcagctaaagcatacgaacactttgctaactagacgtatgtatagta\\n\\\n\
+gctataaatcccgacgatatttacaaaaagaaatgagactcaaatatatacatagcgacc\\n\\\n\
+ctacacttattcgcaccctgatctaggcgatcctagcacccacacccgaaagtgagcact\\n\\\n\
+agtgtcttccgtattaaatttactgcagttgagattttagttgtctactaaggattactc\\n\\\n\
+taacccgtaataaggatcaagactcggtactagctttactatcattccctatgtgttttc\\n\\\n\
+ctaactcacaagggtacgtaccagcctatgtaattacaataatgataaagacacaaagga\\n\\\n\
+agtaactttacaaatgagtctccagttacactagcttagtccctcccatcttgctttgaa\\n\\\n\
+gtctaaatacgcaatctctgaggatatacagcagaagaacactcataacgttggagtcca\\n\\\n\
+agaattagactcatagggcccccaacatttaatatgtactgtgagtttgaaggtgttcta\\n\\\n\
+ttgttaattcctgctcttgatacatgacacgtactccgtgtttaaggcttcggactgact\\n\\\n\
+ttctttcataagttgagcaacgaaaatttcagaatcgataagttggattcactaactaat\\n\\\n\
+acggctgattgaaaactccactccggacctatatggtcgacctttatacgtaaccgatat\\n\\\n\
+aaaacttataggctggtatatcgagccttcctagcgcaatttcggatggggtttcttcta\\n\\\n\
+ctactcaacaacggaatagtctttgtttagtaaaccagagctcaggacgcccaatacgta\\n\\\n\
+ggagagcgctgtggagcatgtgtcattatggactggagcactcttaaatcactctgcgtg\\n\\\n\
+tgctaaacgatagatcataacatgtcctgagtaaattttcttgatacgtcgcaatatacc\\n\\\n\
+gttattagttaaacgttctcatccgtcatgcgtgaaatacggctgtcgtgctcagatata\\n\\\n\
+ctattagcgactcatctcgcctaacacgcacacgtataaactcggaatgactgccgctct\\n\\\n\
+tacatattagaaatacagactacaccacggaagcattgggtcattctcaaccgctgtata\\n\\\n\
+aaagatgattagtcttataataagattaccaaagaggcagaatcatgggtagtaaatcta\\n\\\n\
+ttattcaagtgattaccgtcgtgtaggcagggagtgaggacgagatggtactcaggacaa\\n\\\n\
+atattaaccggacgaagtggtttacgtcgtactttcactattagtagtaaatacaaggta\\n\\\n\
+acaccggggaatagtactaaatataatgatatctatcttcgggagaacgagtcgtctatt\\n\\\n\
+gctttgaacattctcaaggcgtaaaatgtgctgacttatagcatgatacaaccgattgtt\\n\\\n\
+acttttgtctattcaaaagattgaatagttttttatacaaaagccgcatacttatgacgg\\n\\\n\
+ctagtatacagtttcatcccctagcatcaatgctatggacagtattgaacttataggaaa\\n\\\n\
+ttcttctaatagggcaaatccgtcgtgatgcctattttttttcagtcacatcctcaaatg\\n\\\n\
+gcactagtattgtcgggatcccattaacaggctcaaccacgagctcacgcgaggacatgt\\n\\\n\
+agtccgtatctttaacgaagcgacagcgacagaactcccatggataaccaattataaggc\\n\\\n\
+ccgtaatcctctagacatcgtttaccaataaatccgctttctccgtaatcatgttgaata\\n\\\n\
+ccccagagtagtccagatgataaccgatgaaacacaagtctttctcaatgcacttacggt\\n\\\n\
+gaacttattaccgccaacgtagctcatcaaggttgcgacatctagttgtgtgtttgcgac\\n\\\n\
+gagcccagcgaacttcatcaactttcgtatattcaacgccttgtaattttactttaagac\\n\\\n\
+gcctggtgatgtagattcttagataatcagtttgttatcggctgtactttaccataattt\\n\\\n\
+cacaggtttcaggtcaagaagattatagctgtatatacagttccatgctcggtgcacaga\\n\\\n\
+aacgtgatcggataataatcaatcgcttatgtcgtctttaggcgtatccaatacatgccc\\n\\\n\
+cgataccgcagtgtatttcgacatgtaggtataccgtcgcatttgagctcgagtcaggac\\n\\\n\
+gtcagctagattagattccttaatagaatataccgacctctagtccgaactaaactatag\\n\\\n\
+ataacgccaacttcaggttaattgtctagtcgtctgtttgcagatgggattcttagatga\\n\\\n\
+gtgagtatcggccatattggttcgagcactttagtttttgatgcataggatatgcaatgt\\n\\\n\
+atagctgaaagtactttatctgtttcaaactcacattgattaaaccggtaaacctttaaa\\n\\\n\
+gactacaagaaaatattcagtgagggcaattttgtcaatcacaatcttccagctagagat\\n\\\n\
+acttcacaatttgtcttgaggctacgcaacattagacggattttcgcgttttattgaaat\\n\\\n\
+aatcgaggggcccaagagtatccatagttcattttgtaagatttctttacaggcttatta\\n\\\n\
+cagcttcttcagactcctacatgcttacgagttatatgctagcatgtgaacaatagatta\\n\\\n\
+atatacaggaaaacgtacattgagagagatgaccctacacagcgcaaccgttgagtactt\\n\\\n\
+tcattaaagggtaacgctctcgagacagcatccttaagatggccttattgtcaaatcatt\\n\\\n\
+tgcagaagtacgcaagatccctaaccaacgtagaagaatccctacaaacacatgagacgc\\n\\\n\
+ggtgaaaatagacagggtgttagtattcaatcttcggagtatcaatttcgccaatcttgg\\n\\\n\
+tgagaaagcataccctttcttcagagaaagaagatcaatcataacactatctttaacgag\\n\\\n\
+gtacgcacgcgcatcattacctgcctccatggatctttaggatagcggaaagtattggca\\n\\\n\
+gcgtattgtgatttcgttcctactttatcaatttcacattcatatacatgtcttttatca\\n\\\n\
+aaatcgccaataagataggatgagctatattagatgctagtagagttcgcgccaacatca\\n\\\n\
+tcgataggaatactcaggacagcgtgataggacttttcaatccctaatactctctataat\\n\\\n\
+tataactctctcttaagtttggaggcagtaacgcgctctatataatcagtttgctgcacc\\n\\\n\
+attcttcagcctctgatacatacaaataaattccacagcagtaagagggtttaattgaga\\n\\\n\
+catcttgggaacttaggattttactctaacatcaccgaaacgattattggataccgtacc\\n\\\n\
+taaacgaactttctcaaggcagtaatataggacatccgcaataacacaaatgctgcctcc\\n\\\n\
+ccaggagttatgtcttcctggaggctatatcttacacccactcactataggcaaactaaa\\n\\\n\
+gtttaaatgttgattgtctaaaaaaaagatagataagagttggccggcgtagcacatgcg\\n\\\n\
+aaagtgaatcgtaagctataattctctggacttgaagttctgtcctgttcctctgcaaga\\n\\\n\
+aacaaacttcctttaaagctatttacgacgcacatctcagcaagttataaacatgttgga\\n\\\n\
+agtttctagtcggaattcccaaagaacggatctatctaatgcattcctacatttttcctg\\n\\\n\
+tctgccgatggtgccatcctattcaaagaatttcttaaaagtagattaaatgggactttt\\n\\\n\
+aacaatgagtaaccttacgcctctaagggttcctcgagtgccatacaccagtcaggtccg\\n\\\n\
+agccacatacacggagaacattctaacatagcattctcaactcgatcatttgcaggttac\\n\\\n\
+ttctttcctatcctagtgctaaaaatcatacttgcaatcccatagcacggattaagaacc\\n\\\n\
+taagaaacaattcagtaaaacatgttcgaattcttggtatgggaacatcattgcagctat\\n\\\n\
+ggtctaacgcattaatgtttgggtacatcttccatcatataaacaggaagagtctgacga\\n\\\n\
+cagggagtgcttgcgatcatgtctatcattgtgaaatcaaattgtagctcacatgtcgtc\\n\\\n\
+tatgagagcgtgtatccgataagatttagaaaaatagaagtcgtataagatctcactgaa\\n\\\n\
+cttttgaatgaatgtgaagcatatatgatctgctttaataaaactttatccataggatac\\n\\\n\
+gtttccaaatcaattcaataattattagtcaaaatagataaggatgaacaacctgaaggc\\n\\\n\
+cgatcggacgtagaaagtggtcccatcactttgagttgatattgttgaaccacacgttat\\n\\\n\
+tatggttttcaaacagtctcaggatattgtatatacagataatccgataccagttgtctg\\n\\\n\
+acgcccctcttacgtaccccaccctttgtgacgtttaaagcagttgttcagtattttaaa\\n\\\n\
+ctaggcggcaactaatttggaaagaagcacagtggatatgtctaaattcttgttattcag\\n\\\n\
+gcctgaatttaatacaccgcatagttaacttcgcggtagagttgttcatcatgcctcctc\\n\\\n\
+taagctaccacttctatgatacaccaatagttgttctacggaatctgataattggccaag\\n\\\n\
+tcataaacttccgctgcgttcaacccccttgctcgaatatccaactcgaaaagacagcct\\n\\\n\
+tttggtgtccggaacaaatcagttacttcttttctgatgttaattctctgtggtcagata\\n\\\n\
+cagaccaaaaactccgcggatttaccatcctccaagaacaaatttgcatcaacatagcat\\n\\\n\
+tttggctacatattctaagtctcaatagtttaggttttcaactacattatcccaacatta\\n\\\n\
+ggattggaggaataatagctgggtaagtccccttgcgtctacaatcgactattttttatg\\n\\\n\
+aatatgcttctgccgcacctatggttattaaaaaagtcatgactttgaagaaccctgaaa\\n\\\n\
+agatagatgaatcaggtgtaatggcagcagccaaagagcatataattagcaacactctaa\\n\\\n\
+gaacattatagatatgatgatagcgatcgtcatgatgttatccggtcacaatagtagctt\\n\\\n\
+catcagctaattcgttttgccagtggtgacttgcgctggaagaatcgttatacggtccct\\n\\\n\
+tccctcttgatacggtgggggcttattcaaccgcgtggattgggttgtcatacttgcatt\\n\\\n\
+aaacgatgtaaaccatctagtagtcaactatactaaatcacaaaatagtgatcaatacat\\n\\\n\
+acccgcttcatggttttaaccatttaattgattaaagatattccgctaagaaccattatc\\n\\\n\
+tacctaaactgatcgccgtatcctagtagtttgaaatttgatgtaccgtaatgatcaacg\\n\\\n\
+aagtaaaacgttatattgtatgtagaataataggtcttggagctaaatgatgtgattggt\\n\\\n\
+agtgaagacttacccttacaactttaccggtttctcggaagaatatactagagaatcaat\\n\\\n\
+gcatgggctacataagcactttagtctaatgagataaaaaatacacgagtcttccatcat\\n\\\n\
+gaattttttgtcgaaaaactcgaacctggtaatttaaaccatatatctttatgtcgtcaa\\n\\\n\
+taactctcatatgttttatataacttcccaatcacgacttgtaactgcttgttcgactga\\n\\\n\
+gctgtttgagctatgaggccgggatccggttgagctacatctatttgctacaagaaaaat\\n\\\n\
+gaaagcacatttgttgggagttctggctacactcatagagaaataagtggcccgagtggg\\n\\\n\
+tgcggcctgcctccatattcaagtgtatcttaaaccaagtggttccaacgctcgcgctaa\\n\\\n\
+agaattaaagcctttatttcctccacggagtagcccgtaatccggttcgaaagagaccat\\n\\\n\
+tgaagttaattttcatatccagtgaagtttaggcacaagcatgtgttctgccacatgcct\\n\\\n\
+caaagcgctcttcaaccaagatatgattcatcctaacttcgatgaatgcgtctgtaacat\\n\\\n\
+aaatatagaaggaatgattcggcgagttaattttcgccttctccaacatggcatccctac\\n\\\n\
+gttcgttataaggaccatacatgtaggttttaaaggtttgcggttaatcgatatttacat\\n\\\n\
+catagaaattctatagtcaaatttacaagactctagatactcactcgttgcagccggcta\\n\\\n\
+ggaagcgctttgtaccttacttcccttttcgttgcgtaatatgaatttcatatagtaagt\\n\\\n\
+tcaaggcactcatacctccgtgaagagggtagatagactattaaagttgtttaatagtac\\n\\\n\
+gtattgatggaaatgacccgtaggagatttaccactcaatccacaagattcgctgctgtg\\n\\\n\
+cattatcaaaacagtgcatgtcgaaacatgggttgggtccttcaaacacgaatccaggta\\n\\\n\
+gagatacctttgcaattttt\\n\";\n\
+\n\
+dnaInput = dnaInput + dnaInput + dnaInput;\n\
+\n\
+var ilen, clen,\n\
+ seqs = [\n\
+  /agggtaaa|tttaccct/ig,\n\
+  /[cgt]gggtaaa|tttaccc[acg]/ig,\n\
+  /a[act]ggtaaa|tttacc[agt]t/ig,\n\
+  /ag[act]gtaaa|tttac[agt]ct/ig,\n\
+  /agg[act]taaa|ttta[agt]cct/ig,\n\
+  /aggg[acg]aaa|ttt[cgt]ccct/ig,\n\
+  /agggt[cgt]aa|tt[acg]accct/ig,\n\
+  /agggta[cgt]a|t[acg]taccct/ig,\n\
+  /agggtaa[cgt]|[acg]ttaccct/ig],\n\
+ subs = {\n\
+  B: '(c|g|t)', D: '(a|g|t)', H: '(a|c|t)', K: '(g|t)',\n\
+  M: '(a|c)', N: '(a|c|g|t)', R: '(a|g)', S: '(c|t)',\n\
+  V: '(a|c|g)', W: '(a|t)', Y: '(c|t)' }\n\
+\n\
+ilen = dnaInput.length;\n\
+\n\
+// There is no in-place substitution\n\
+dnaInput = dnaInput.replace(/>.*\\n|\\n/g,\"\")\n\
+clen = dnaInput.length\n\
+\n\
+var dnaOutputString;\n\
+\n\
+for(i in seqs)\n\
+    dnaOutputString += seqs[i].source + \" \" + (dnaInput.match(seqs[i]) || []).length + \"\\n\";\n\
+ // match returns null if no matches, so replace with empty\n\
+\n\
+for(k in subs)\n\
+ dnaInput = dnaInput.replace(k, subs[k]) // FIXME: Would like this to be a global substitution in a future version of SunSpider.\n\
+ // search string, replacement string, flags\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider string-base64</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>string-base64</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+/* ***** BEGIN LICENSE BLOCK *****\n\
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1\n\
+ *\n\
+ * The contents of this file are subject to the Mozilla Public License Version\n\
+ * 1.1 (the \"License\"); you may not use this file except in compliance with\n\
+ * the License. You may obtain a copy of the License at\n\
+ * http://www.mozilla.org/MPL/\n\
+ *\n\
+ * Software distributed under the License is distributed on an \"AS IS\" basis,\n\
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n\
+ * for the specific language governing rights and limitations under the\n\
+ * License.\n\
+ *\n\
+ * The Original Code is Mozilla XML-RPC Client component.\n\
+ *\n\
+ * The Initial Developer of the Original Code is\n\
+ * Digital Creations 2, Inc.\n\
+ * Portions created by the Initial Developer are Copyright (C) 2000\n\
+ * the Initial Developer. All Rights Reserved.\n\
+ *\n\
+ * Contributor(s):\n\
+ *   Martijn Pieters <mj@digicool.com> (original author)\n\
+ *   Samuel Sieb <samuel@sieb.net>\n\
+ *\n\
+ * Alternatively, the contents of this file may be used under the terms of\n\
+ * either the GNU General Public License Version 2 or later (the \"GPL\"), or\n\
+ * the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n\
+ * in which case the provisions of the GPL or the LGPL are applicable instead\n\
+ * of those above. If you wish to allow use of your version of this file only\n\
+ * under the terms of either the GPL or the LGPL, and not to allow others to\n\
+ * use your version of this file under the terms of the MPL, indicate your\n\
+ * decision by deleting the provisions above and replace them with the notice\n\
+ * and other provisions required by the GPL or the LGPL. If you do not delete\n\
+ * the provisions above, a recipient may use your version of this file under\n\
+ * the terms of any one of the MPL, the GPL or the LGPL.\n\
+ *\n\
+ * ***** END LICENSE BLOCK ***** */\n\
+\n\
+// From: http://lxr.mozilla.org/mozilla/source/extensions/xml-rpc/src/nsXmlRpcClient.js#956\n\
+\n\
+/* Convert data (an array of integers) to a Base64 string. */\n\
+var toBase64Table = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\
+var base64Pad = '=';\n\
+\n\
+function toBase64(data) {\n\
+    var result = '';\n\
+    var length = data.length;\n\
+    var i;\n\
+    // Convert every three bytes to 4 ascii characters.\n\
+    for (i = 0; i < (length - 2); i += 3) {\n\
+        result += toBase64Table[data.charCodeAt(i) >> 2];\n\
+        result += toBase64Table[((data.charCodeAt(i) & 0x03) << 4) + (data.charCodeAt(i+1) >> 4)];\n\
+        result += toBase64Table[((data.charCodeAt(i+1) & 0x0f) << 2) + (data.charCodeAt(i+2) >> 6)];\n\
+        result += toBase64Table[data.charCodeAt(i+2) & 0x3f];\n\
+    }\n\
+\n\
+    // Convert the remaining 1 or 2 bytes, pad out to 4 characters.\n\
+    if (length%3) {\n\
+        i = length - (length%3);\n\
+        result += toBase64Table[data.charCodeAt(i) >> 2];\n\
+        if ((length%3) == 2) {\n\
+            result += toBase64Table[((data.charCodeAt(i) & 0x03) << 4) + (data.charCodeAt(i+1) >> 4)];\n\
+            result += toBase64Table[(data.charCodeAt(i+1) & 0x0f) << 2];\n\
+            result += base64Pad;\n\
+        } else {\n\
+            result += toBase64Table[(data.charCodeAt(i) & 0x03) << 4];\n\
+            result += base64Pad + base64Pad;\n\
+        }\n\
+    }\n\
+\n\
+    return result;\n\
+}\n\
+\n\
+/* Convert Base64 data to a string */\n\
+var toBinaryTable = [\n\
+    -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1,\n\
+    -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1,\n\
+    -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,62, -1,-1,-1,63,\n\
+    52,53,54,55, 56,57,58,59, 60,61,-1,-1, -1, 0,-1,-1,\n\
+    -1, 0, 1, 2,  3, 4, 5, 6,  7, 8, 9,10, 11,12,13,14,\n\
+    15,16,17,18, 19,20,21,22, 23,24,25,-1, -1,-1,-1,-1,\n\
+    -1,26,27,28, 29,30,31,32, 33,34,35,36, 37,38,39,40,\n\
+    41,42,43,44, 45,46,47,48, 49,50,51,-1, -1,-1,-1,-1\n\
+];\n\
+\n\
+function base64ToString(data) {\n\
+    var result = '';\n\
+    var leftbits = 0; // number of bits decoded, but yet to be appended\n\
+    var leftdata = 0; // bits decoded, but yet to be appended\n\
+\n\
+    // Convert one by one.\n\
+    for (var i = 0; i < data.length; i++) {\n\
+        var c = toBinaryTable[data.charCodeAt(i) & 0x7f];\n\
+        var padding = (data.charCodeAt(i) == base64Pad.charCodeAt(0));\n\
+        // Skip illegal characters and whitespace\n\
+        if (c == -1) continue;\n\
+        \n\
+        // Collect data into leftdata, update bitcount\n\
+        leftdata = (leftdata << 6) | c;\n\
+        leftbits += 6;\n\
+\n\
+        // If we have 8 or more bits, append 8 bits to the result\n\
+        if (leftbits >= 8) {\n\
+            leftbits -= 8;\n\
+            // Append if not padding.\n\
+            if (!padding)\n\
+                result += String.fromCharCode((leftdata >> leftbits) & 0xff);\n\
+            leftdata &= (1 << leftbits) - 1;\n\
+        }\n\
+    }\n\
+\n\
+    // If there are any bits left, the base64 string was corrupted\n\
+    if (leftbits)\n\
+        throw Components.Exception('Corrupted base64 string');\n\
+\n\
+    return result;\n\
+}\n\
+\n\
+var str = \"\";\n\
+\n\
+for ( var i = 0; i < 8192; i++ )\n\
+        str += String.fromCharCode( (25 * Math.random()) + 97 );\n\
+\n\
+for ( var i = 8192; i <= 16384; i *= 2 ) {\n\
+\n\
+    var base64;\n\
+\n\
+    base64 = toBase64(str);\n\
+    base64ToString(base64);\n\
+\n\
+    // Double the string\n\
+    str += str;\n\
+}\n\
+\n\
+toBinaryTable = null;\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider string-fasta</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>string-fasta</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// The Great Computer Language Shootout\n\
+//  http://shootout.alioth.debian.org\n\
+//\n\
+//  Contributed by Ian Osgood\n\
+\n\
+var last = 42, A = 3877, C = 29573, M = 139968;\n\
+\n\
+function rand(max) {\n\
+  last = (last * A + C) % M;\n\
+  return max * last / M;\n\
+}\n\
+\n\
+var ALU =\n\
+  \"GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG\" +\n\
+  \"GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA\" +\n\
+  \"CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT\" +\n\
+  \"ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA\" +\n\
+  \"GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG\" +\n\
+  \"AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC\" +\n\
+  \"AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA\";\n\
+\n\
+var IUB = {\n\
+  a:0.27, c:0.12, g:0.12, t:0.27,\n\
+  B:0.02, D:0.02, H:0.02, K:0.02,\n\
+  M:0.02, N:0.02, R:0.02, S:0.02,\n\
+  V:0.02, W:0.02, Y:0.02\n\
+}\n\
+\n\
+var HomoSap = {\n\
+  a: 0.3029549426680,\n\
+  c: 0.1979883004921,\n\
+  g: 0.1975473066391,\n\
+  t: 0.3015094502008\n\
+}\n\
+\n\
+function makeCumulative(table) {\n\
+  var last = null;\n\
+  for (var c in table) {\n\
+    if (last) table[c] += table[last];\n\
+    last = c;\n\
+  }\n\
+}\n\
+\n\
+function fastaRepeat(n, seq) {\n\
+  var seqi = 0, lenOut = 60;\n\
+  while (n>0) {\n\
+    if (n<lenOut) lenOut = n;\n\
+    if (seqi + lenOut < seq.length) {\n\
+      ret = seq.substring(seqi, seqi+lenOut);\n\
+      seqi += lenOut;\n\
+    } else {\n\
+      var s = seq.substring(seqi);\n\
+      seqi = lenOut - s.length;\n\
+      ret = s + seq.substring(0, seqi);\n\
+    }\n\
+    n -= lenOut;\n\
+  }\n\
+}\n\
+\n\
+function fastaRandom(n, table) {\n\
+  var line = new Array(60);\n\
+  makeCumulative(table);\n\
+  while (n>0) {\n\
+    if (n<line.length) line = new Array(n);\n\
+    for (var i=0; i<line.length; i++) {\n\
+      var r = rand(1);\n\
+      for (var c in table) {\n\
+        if (r < table[c]) {\n\
+          line[i] = c;\n\
+          break;\n\
+        }\n\
+      }\n\
+    }\n\
+    ret = line.join('');\n\
+    n -= line.length;\n\
+  }\n\
+}\n\
+\n\
+var ret;\n\
+\n\
+var count = 7;\n\
+ret = fastaRepeat(2*count*100000, ALU);\n\
+ret = fastaRandom(3*count*1000, IUB);\n\
+ret = fastaRandom(5*count*1000, HomoSap);\n\
+\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider string-tagcloud</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>string-tagcloud</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+\n\
+/*\n\
+ * Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+ *\n\
+ * Redistribution and use in source and binary forms, with or without\n\
+ * modification, are permitted provided that the following conditions\n\
+ * are met:\n\
+ * 1. Redistributions of source code must retain the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer.\n\
+ * 2. Redistributions in binary form must reproduce the above copyright\n\
+ *    notice, this list of conditions and the following disclaimer in the\n\
+ *    documentation and/or other materials provided with the distribution.\n\
+ *\n\
+ * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+ */\n\
+\n\
+/*\n\
+    Portions from:\n\
+    json.js\n\
+    2007-10-10\n\
+\n\
+    Public Domain\n\
+*/\n\
+\n\
+// This test parses a JSON string giving tag names and popularity, and\n\
+// generates html markup for a \"tagcloud\" view.\n\
+\n\
+if (!Object.prototype.toJSONString) {\n\
+\n\
+    Array.prototype.toJSONString = function (w) {\n\
+        var a = [],     // The array holding the partial texts.\n\
+            i,          // Loop counter.\n\
+            l = this.length,\n\
+            v;          // The value to be stringified.\n\
+\n\
+        for (i = 0; i < l; i += 1) {\n\
+            v = this[i];\n\
+            switch (typeof v) {\n\
+            case 'object':\n\
+\n\
+                if (v && typeof v.toJSONString === 'function') {\n\
+                    a.push(v.toJSONString(w));\n\
+                } else {\n\
+                    a.push('null');\n\
+                }\n\
+                break;\n\
+\n\
+            case 'string':\n\
+            case 'number':\n\
+            case 'boolean':\n\
+                a.push(v.toJSONString());\n\
+                break;\n\
+            default:\n\
+                a.push('null');\n\
+            }\n\
+        }\n\
+\n\
+        return '[' + a.join(',') + ']';\n\
+    };\n\
+\n\
+\n\
+    Boolean.prototype.toJSONString = function () {\n\
+        return String(this);\n\
+    };\n\
+\n\
+\n\
+    Date.prototype.toJSONString = function () {\n\
+\n\
+        function f(n) {\n\
+\n\
+            return n < 10 ? '0' + n : n;\n\
+        }\n\
+\n\
+        return '\"' + this.getUTCFullYear()   + '-' +\n\
+                   f(this.getUTCMonth() + 1) + '-' +\n\
+                   f(this.getUTCDate())      + 'T' +\n\
+                   f(this.getUTCHours())     + ':' +\n\
+                   f(this.getUTCMinutes())   + ':' +\n\
+                   f(this.getUTCSeconds())   + 'Z\"';\n\
+    };\n\
+\n\
+\n\
+    Number.prototype.toJSONString = function () {\n\
+\n\
+        return isFinite(this) ? String(this) : 'null';\n\
+    };\n\
+\n\
+\n\
+    Object.prototype.toJSONString = function (w) {\n\
+        var a = [],     // The array holding the partial texts.\n\
+            k,          // The current key.\n\
+            i,          // The loop counter.\n\
+            v;          // The current value.\n\
+\n\
+        if (w) {\n\
+            for (i = 0; i < w.length; i += 1) {\n\
+                k = w[i];\n\
+                if (typeof k === 'string') {\n\
+                    v = this[k];\n\
+                    switch (typeof v) {\n\
+                    case 'object':\n\
+\n\
+                        if (v) {\n\
+                            if (typeof v.toJSONString === 'function') {\n\
+                                a.push(k.toJSONString() + ':' +\n\
+                                       v.toJSONString(w));\n\
+                            }\n\
+                        } else {\n\
+                            a.push(k.toJSONString() + ':null');\n\
+                        }\n\
+                        break;\n\
+\n\
+                    case 'string':\n\
+                    case 'number':\n\
+                    case 'boolean':\n\
+                        a.push(k.toJSONString() + ':' + v.toJSONString());\n\
+\n\
+                    }\n\
+                }\n\
+            }\n\
+        } else {\n\
+\n\
+            for (k in this) {\n\
+                if (typeof k === 'string' &&\n\
+                        Object.prototype.hasOwnProperty.apply(this, [k])) {\n\
+                    v = this[k];\n\
+                    switch (typeof v) {\n\
+                    case 'object':\n\
+\n\
+                        if (v) {\n\
+                            if (typeof v.toJSONString === 'function') {\n\
+                                a.push(k.toJSONString() + ':' +\n\
+                                       v.toJSONString());\n\
+                            }\n\
+                        } else {\n\
+                            a.push(k.toJSONString() + ':null');\n\
+                        }\n\
+                        break;\n\
+\n\
+                    case 'string':\n\
+                    case 'number':\n\
+                    case 'boolean':\n\
+                        a.push(k.toJSONString() + ':' + v.toJSONString());\n\
+\n\
+                    }\n\
+                }\n\
+            }\n\
+        }\n\
+\n\
+        return '{' + a.join(',') + '}';\n\
+    };\n\
+\n\
+\n\
+    (function (s) {\n\
+\n\
+        var m = {\n\
+            '\\b': '\\\\b',\n\
+            '\\t': '\\\\t',\n\
+            '\\n': '\\\\n',\n\
+            '\\f': '\\\\f',\n\
+            '\\r': '\\\\r',\n\
+            '\"' : '\\\\\"',\n\
+            '\\\\': '\\\\\\\\'\n\
+        };\n\
+\n\
+\n\
+        s.parseJSON = function (filter) {\n\
+            var j;\n\
+\n\
+            function walk(k, v) {\n\
+                var i, n;\n\
+                if (v && typeof v === 'object') {\n\
+                    for (i in v) {\n\
+                        if (Object.prototype.hasOwnProperty.apply(v, [i])) {\n\
+                            n = walk(i, v[i]);\n\
+                            if (n !== undefined) {\n\
+                                v[i] = n;\n\
+                            }\n\
+                        }\n\
+                    }\n\
+                }\n\
+                return filter(k, v);\n\
+            }\n\
+\n\
+            if (/^[\\],:{}\\s]*$/.test(this.replace(/\\\\./g, '@').\n\
+                    replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(:?[eE][+\\-]?\\d+)?/g, ']').\n\
+                    replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\n\
+\n\
+                j = eval('(' + this + ')');\n\
+\n\
+                return typeof filter === 'function' ? walk('', j) : j;\n\
+            }\n\
+\n\
+            throw new SyntaxError('parseJSON');\n\
+        };\n\
+\n\
+\n\
+        s.toJSONString = function () {\n\
+\n\
+            if (/[\"\\\\\\x00-\\x1f]/.test(this)) {\n\
+                return '\"' + this.replace(/[\\x00-\\x1f\\\\\"]/g, function (a) {\n\
+                    var c = m[a];\n\
+                    if (c) {\n\
+                        return c;\n\
+                    }\n\
+                    c = a.charCodeAt();\n\
+                    return '\\\\u00' + Math.floor(c / 16).toString(16) +\n\
+                                               (c % 16).toString(16);\n\
+                }) + '\"';\n\
+            }\n\
+            return '\"' + this + '\"';\n\
+        };\n\
+    })(String.prototype);\n\
+}\n\
+\n\
+var tagInfoJSON = '[\\n  {\\n    \\\"tag\\\": \"titillation\",\\n    \\\"popularity\\\": 4294967296\\n  },\\n  {\\n    \\\"tag\\\": \"foamless\",\\n    \\\"popularity\\\": 1257718401\\n  },\\n  {\\n    \\\"tag\\\": \"snarler\",\\n    \\\"popularity\\\": 613166183\\n  },\\n  {\\n    \\\"tag\\\": \"multangularness\",\\n    \\\"popularity\\\": 368304452\\n  },\\n  {\\n    \\\"tag\\\": \"Fesapo unventurous\",\\n    \\\"popularity\\\": 248026512\\n  },\\n  {\\n    \\\"tag\\\": \"esthesioblast\",\\n    \\\"popularity\\\": 179556755\\n  },\\n  {\\n    \\\"tag\\\": \"echeneidoid\",\\n    \\\"popularity\\\": 136641578\\n  },\\n  {\\n    \\\"tag\\\": \"embryoctony\",\\n    \\\"popularity\\\": 107852576\\n  },\\n  {\\n    \\\"tag\\\": \"undilatory\",\\n    \\\"popularity\\\": 87537981\\n  },\\n  {\\n    \\\"tag\\\": \"predisregard\",\\n    \\\"popularity\\\": 72630939\\n  },\\n  {\\n    \\\"tag\\\": \"allergenic\",\\n    \\\"popularity\\\": 61345190\\n  },\\n  {\\n    \\\"tag\\\": \"uncloudy\",\\n    \\\"popularity\\\": 52580571\\n  },\\n  {\\n    \\\"tag\\\": \"unforeseeably\",\\n    \\\"popularity\\\": 45628109\\n  },\\n  {\\n    \\\"tag\\\": \"sturniform\",\\n    \\\"popularity\\\": 40013489\\n  },\\n  {\\n    \\\"tag\\\": \"anesthetize\",\\n    \\\"popularity\\\": 35409226\\n  },\\n  {\\n    \\\"tag\\\": \"ametabolia\",\\n    \\\"popularity\\\": 31583050\\n  },\\n  {\\n    \\\"tag\\\": \"angiopathy\",\\n    \\\"popularity\\\": 28366350\\n  },\\n  {\\n    \\\"tag\\\": \"sultanaship\",\\n    \\\"popularity\\\": 25634218\\n  },\\n  {\\n    \\\"tag\\\": \"Frenchwise\",\\n    \\\"popularity\\\": 23292461\\n  },\\n  {\\n    \\\"tag\\\": \"cerviconasal\",\\n    \\\"popularity\\\": 21268909\\n  },\\n  {\\n    \\\"tag\\\": \"mercurialness\",\\n    \\\"popularity\\\": 19507481\\n  },\\n  {\\n    \\\"tag\\\": \"glutelin venditate\",\\n    \\\"popularity\\\": 17964042\\n  },\\n  {\\n    \\\"tag\\\": \"acred overblack\",\\n    \\\"popularity\\\": 16603454\\n  },\\n  {\\n    \\\"tag\\\": \"Atik\",\\n    \\\"popularity\\\": 15397451\\n  },\\n  {\\n    \\\"tag\\\": \"puncturer\",\\n    \\\"popularity\\\": 14323077\\n  },\\n  {\\n    \\\"tag\\\": \"pukatea\",\\n    \\\"popularity\\\": 13361525\\n  },\\n  {\\n    \\\"tag\\\": \"suberize\",\\n    \\\"popularity\\\": 12497261\\n  },\\n  {\\n    \\\"tag\\\": \"Godfrey\",\\n    \\\"popularity\\\": 11717365\\n  },\\n  {\\n    \\\"tag\\\": \"tetraptote\",\\n    \\\"popularity\\\": 11011011\\n  },\\n  {\\n    \\\"tag\\\": \"lucidness\",\\n    \\\"popularity\\\": 10369074\\n  },\\n  {\\n    \\\"tag\\\": \"tartness\",\\n    \\\"popularity\\\": 9783815\\n  },\\n  {\\n    \\\"tag\\\": \"axfetch\",\\n    \\\"popularity\\\": 9248634\\n  },\\n  {\\n    \\\"tag\\\": \"preacquittal\",\\n    \\\"popularity\\\": 8757877\\n  },\\n  {\\n    \\\"tag\\\": \"matris\",\\n    \\\"popularity\\\": 8306671\\n  },\\n  {\\n    \\\"tag\\\": \"hyphenate\",\\n    \\\"popularity\\\": 7890801\\n  },\\n  {\\n    \\\"tag\\\": \"semifabulous\",\\n    \\\"popularity\\\": 7506606\\n  },\\n  {\\n    \\\"tag\\\": \"oppressiveness\",\\n    \\\"popularity\\\": 7150890\\n  },\\n  {\\n    \\\"tag\\\": \"Protococcales\",\\n    \\\"popularity\\\": 6820856\\n  },\\n  {\\n    \\\"tag\\\": \"unpreventive\",\\n    \\\"popularity\\\": 6514045\\n  },\\n  {\\n    \\\"tag\\\": \"Cordia\",\\n    \\\"popularity\\\": 6228289\\n  },\\n  {\\n    \\\"tag\\\": \"Wakamba leaflike\",\\n    \\\"popularity\\\": 5961668\\n  },\\n  {\\n    \\\"tag\\\": \"dacryoma\",\\n    \\\"popularity\\\": 5712480\\n  },\\n  {\\n    \\\"tag\\\": \"inguinal\",\\n    \\\"popularity\\\": 5479211\\n  },\\n  {\\n    \\\"tag\\\": \"responseless\",\\n    \\\"popularity\\\": 5260507\\n  },\\n  {\\n    \\\"tag\\\": \"supplementarily\",\\n    \\\"popularity\\\": 5055158\\n  },\\n  {\\n    \\\"tag\\\": \"emu\",\\n    \\\"popularity\\\": 4862079\\n  },\\n  {\\n    \\\"tag\\\": \"countermeet\",\\n    \\\"popularity\\\": 4680292\\n  },\\n  {\\n    \\\"tag\\\": \"purrer\",\\n    \\\"popularity\\\": 4508918\\n  },\\n  {\\n    \\\"tag\\\": \"Corallinaceae\",\\n    \\\"popularity\\\": 4347162\\n  },\\n  {\\n    \\\"tag\\\": \"speculum\",\\n    \\\"popularity\\\": 4194304\\n  },\\n  {\\n    \\\"tag\\\": \"crimpness\",\\n    \\\"popularity\\\": 4049690\\n  },\\n  {\\n    \\\"tag\\\": \"antidetonant\",\\n    \\\"popularity\\\": 3912727\\n  },\\n  {\\n    \\\"tag\\\": \"topeewallah\",\\n    \\\"popularity\\\": 3782875\\n  },\\n  {\\n    \\\"tag\\\": \"fidalgo ballant\",\\n    \\\"popularity\\\": 3659640\\n  },\\n  {\\n    \\\"tag\\\": \"utriculose\",\\n    \\\"popularity\\\": 3542572\\n  },\\n  {\\n    \\\"tag\\\": \"testata\",\\n    \\\"popularity\\\": 3431259\\n  },\\n  {\\n    \\\"tag\\\": \"beltmaking\",\\n    \\\"popularity\\\": 3325322\\n  },\\n  {\\n    \\\"tag\\\": \"necrotype\",\\n    \\\"popularity\\\": 3224413\\n  },\\n  {\\n    \\\"tag\\\": \"ovistic\",\\n    \\\"popularity\\\": 3128215\\n  },\\n  {\\n    \\\"tag\\\": \"swindlership\",\\n    \\\"popularity\\\": 3036431\\n  },\\n  {\\n    \\\"tag\\\": \"augustal\",\\n    \\\"popularity\\\": 2948792\\n  },\\n  {\\n    \\\"tag\\\": \"Titoist\",\\n    \\\"popularity\\\": 2865047\\n  },\\n  {\\n    \\\"tag\\\": \"trisoctahedral\",\\n    \\\"popularity\\\": 2784963\\n  },\\n  {\\n    \\\"tag\\\": \"sequestrator\",\\n    \\\"popularity\\\": 2708327\\n  },\\n  {\\n    \\\"tag\\\": \"sideburns\",\\n    \\\"popularity\\\": 2634939\\n  },\\n  {\\n    \\\"tag\\\": \"paraphrasia\",\\n    \\\"popularity\\\": 2564616\\n  },\\n  {\\n    \\\"tag\\\": \"graminology unbay\",\\n    \\\"popularity\\\": 2497185\\n  },\\n  {\\n    \\\"tag\\\": \"acaridomatium emargination\",\\n    \\\"popularity\\\": 2432487\\n  },\\n  {\\n    \\\"tag\\\": \"roofward\",\\n    \\\"popularity\\\": 2370373\\n  },\\n  {\\n    \\\"tag\\\": \"lauder\",\\n    \\\"popularity\\\": 2310705\\n  },\\n  {\\n    \\\"tag\\\": \"subjunctive\",\\n    \\\"popularity\\\": 2253354\\n  },\\n  {\\n    \\\"tag\\\": \"subelongate\",\\n    \\\"popularity\\\": 2198199\\n  },\\n  {\\n    \\\"tag\\\": \"guacimo\",\\n    \\\"popularity\\\": 2145128\\n  },\\n  {\\n    \\\"tag\\\": \"cockade\",\\n    \\\"popularity\\\": 2094033\\n  },\\n  {\\n    \\\"tag\\\": \"misgauge\",\\n    \\\"popularity\\\": 2044818\\n  },\\n  {\\n    \\\"tag\\\": \"unexpensive\",\\n    \\\"popularity\\\": 1997388\\n  },\\n  {\\n    \\\"tag\\\": \"chebel\",\\n    \\\"popularity\\\": 1951657\\n  },\\n  {\\n    \\\"tag\\\": \"unpursuing\",\\n    \\\"popularity\\\": 1907543\\n  },\\n  {\\n    \\\"tag\\\": \"kilobar\",\\n    \\\"popularity\\\": 1864969\\n  },\\n  {\\n    \\\"tag\\\": \"obsecration\",\\n    \\\"popularity\\\": 1823863\\n  },\\n  {\\n    \\\"tag\\\": \"nacarine\",\\n    \\\"popularity\\\": 1784157\\n  },\\n  {\\n    \\\"tag\\\": \"spirituosity\",\\n    \\\"popularity\\\": 1745787\\n  },\\n  {\\n    \\\"tag\\\": \"movableness deity\",\\n    \\\"popularity\\\": 1708692\\n  },\\n  {\\n    \\\"tag\\\": \"exostracism\",\\n    \\\"popularity\\\": 1672816\\n  },\\n  {\\n    \\\"tag\\\": \"archipterygium\",\\n    \\\"popularity\\\": 1638104\\n  },\\n  {\\n    \\\"tag\\\": \"monostrophic\",\\n    \\\"popularity\\\": 1604506\\n  },\\n  {\\n    \\\"tag\\\": \"gynecide\",\\n    \\\"popularity\\\": 1571974\\n  },\\n  {\\n    \\\"tag\\\": \"gladden\",\\n    \\\"popularity\\\": 1540462\\n  },\\n  {\\n    \\\"tag\\\": \"throughbred\",\\n    \\\"popularity\\\": 1509927\\n  },\\n  {\\n    \\\"tag\\\": \"groper\",\\n    \\\"popularity\\\": 1480329\\n  },\\n  {\\n    \\\"tag\\\": \"Xenosaurus\",\\n    \\\"popularity\\\": 1451628\\n  },\\n  {\\n    \\\"tag\\\": \"photoetcher\",\\n    \\\"popularity\\\": 1423788\\n  },\\n  {\\n    \\\"tag\\\": \"glucosid\",\\n    \\\"popularity\\\": 1396775\\n  },\\n  {\\n    \\\"tag\\\": \"Galtonian\",\\n    \\\"popularity\\\": 1370555\\n  },\\n  {\\n    \\\"tag\\\": \"mesosporic\",\\n    \\\"popularity\\\": 1345097\\n  },\\n  {\\n    \\\"tag\\\": \"theody\",\\n    \\\"popularity\\\": 1320370\\n  },\\n  {\\n    \\\"tag\\\": \"zaffer\",\\n    \\\"popularity\\\": 1296348\\n  },\\n  {\\n    \\\"tag\\\": \"probiology\",\\n    \\\"popularity\\\": 1273003\\n  },\\n  {\\n    \\\"tag\\\": \"rhizomic\",\\n    \\\"popularity\\\": 1250308\\n  },\\n  {\\n    \\\"tag\\\": \"superphosphate\",\\n    \\\"popularity\\\": 1228240\\n  },\\n  {\\n    \\\"tag\\\": \"Hippolytan\",\\n    \\\"popularity\\\": 1206776\\n  },\\n  {\\n    \\\"tag\\\": \"garget\",\\n    \\\"popularity\\\": 1185892\\n  },\\n  {\\n    \\\"tag\\\": \"diploplacula\",\\n    \\\"popularity\\\": 1165568\\n  },\\n  {\\n    \\\"tag\\\": \"orohydrographical\",\\n    \\\"popularity\\\": 1145785\\n  },\\n  {\\n    \\\"tag\\\": \"enhypostatize\",\\n    \\\"popularity\\\": 1126521\\n  },\\n  {\\n    \\\"tag\\\": \"polisman\",\\n    \\\"popularity\\\": 1107759\\n  },\\n  {\\n    \\\"tag\\\": \"acetometer\",\\n    \\\"popularity\\\": 1089482\\n  },\\n  {\\n    \\\"tag\\\": \"unsnatched\",\\n    \\\"popularity\\\": 1071672\\n  },\\n  {\\n    \\\"tag\\\": \"yabber\",\\n    \\\"popularity\\\": 1054313\\n  },\\n  {\\n    \\\"tag\\\": \"demiwolf\",\\n    \\\"popularity\\\": 1037390\\n  },\\n  {\\n    \\\"tag\\\": \"chromascope\",\\n    \\\"popularity\\\": 1020888\\n  },\\n  {\\n    \\\"tag\\\": \"seamanship\",\\n    \\\"popularity\\\": 1004794\\n  },\\n  {\\n    \\\"tag\\\": \"nonfenestrated\",\\n    \\\"popularity\\\": 989092\\n  },\\n  {\\n    \\\"tag\\\": \"hydrophytism\",\\n    \\\"popularity\\\": 973771\\n  },\\n  {\\n    \\\"tag\\\": \"dotter\",\\n    \\\"popularity\\\": 958819\\n  },\\n  {\\n    \\\"tag\\\": \"thermoperiodism\",\\n    \\\"popularity\\\": 944222\\n  },\\n  {\\n    \\\"tag\\\": \"unlawyerlike\",\\n    \\\"popularity\\\": 929970\\n  },\\n  {\\n    \\\"tag\\\": \"enantiomeride citywards\",\\n    \\\"popularity\\\": 916052\\n  },\\n  {\\n    \\\"tag\\\": \"unmetallurgical\",\\n    \\\"popularity\\\": 902456\\n  },\\n  {\\n    \\\"tag\\\": \"prickled\",\\n    \\\"popularity\\\": 889174\\n  },\\n  {\\n    \\\"tag\\\": \"strangerwise manioc\",\\n    \\\"popularity\\\": 876195\\n  },\\n  {\\n    \\\"tag\\\": \"incisorial\",\\n    \\\"popularity\\\": 863510\\n  },\\n  {\\n    \\\"tag\\\": \"irrationalize\",\\n    \\\"popularity\\\": 851110\\n  },\\n  {\\n    \\\"tag\\\": \"nasology\",\\n    \\\"popularity\\\": 838987\\n  },\\n  {\\n    \\\"tag\\\": \"fatuism\",\\n    \\\"popularity\\\": 827131\\n  },\\n  {\\n    \\\"tag\\\": \"Huk\",\\n    \\\"popularity\\\": 815535\\n  },\\n  {\\n    \\\"tag\\\": \"properispomenon\",\\n    \\\"popularity\\\": 804192\\n  },\\n  {\\n    \\\"tag\\\": \"unpummelled\",\\n    \\\"popularity\\\": 793094\\n  },\\n  {\\n    \\\"tag\\\": \"technographically\",\\n    \\\"popularity\\\": 782233\\n  },\\n  {\\n    \\\"tag\\\": \"underfurnish\",\\n    \\\"popularity\\\": 771603\\n  },\\n  {\\n    \\\"tag\\\": \"sinter\",\\n    \\\"popularity\\\": 761198\\n  },\\n  {\\n    \\\"tag\\\": \"lateroanterior\",\\n    \\\"popularity\\\": 751010\\n  },\\n  {\\n    \\\"tag\\\": \"nonpersonification\",\\n    \\\"popularity\\\": 741034\\n  },\\n  {\\n    \\\"tag\\\": \"Sitophilus\",\\n    \\\"popularity\\\": 731264\\n  },\\n  {\\n    \\\"tag\\\": \"unstudded overexerted\",\\n    \\\"popularity\\\": 721694\\n  },\\n  {\\n    \\\"tag\\\": \"tracheation\",\\n    \\\"popularity\\\": 712318\\n  },\\n  {\\n    \\\"tag\\\": \"thirteenth begloze\",\\n    \\\"popularity\\\": 703131\\n  },\\n  {\\n    \\\"tag\\\": \"bespice\",\\n    \\\"popularity\\\": 694129\\n  },\\n  {\\n    \\\"tag\\\": \"doppia\",\\n    \\\"popularity\\\": 685305\\n  },\\n  {\\n    \\\"tag\\\": \"unadorned\",\\n    \\\"popularity\\\": 676656\\n  },\\n  {\\n    \\\"tag\\\": \"dovelet engraff\",\\n    \\\"popularity\\\": 668176\\n  },\\n  {\\n    \\\"tag\\\": \"diphyozooid\",\\n    \\\"popularity\\\": 659862\\n  },\\n  {\\n    \\\"tag\\\": \"mure\",\\n    \\\"popularity\\\": 651708\\n  },\\n  {\\n    \\\"tag\\\": \"Tripitaka\",\\n    \\\"popularity\\\": 643710\\n  },\\n  {\\n    \\\"tag\\\": \"Billjim\",\\n    \\\"popularity\\\": 635865\\n  },\\n  {\\n    \\\"tag\\\": \"pyramidical\",\\n    \\\"popularity\\\": 628169\\n  },\\n  {\\n    \\\"tag\\\": \"circumlocutionist\",\\n    \\\"popularity\\\": 620617\\n  },\\n  {\\n    \\\"tag\\\": \"slapstick\",\\n    \\\"popularity\\\": 613207\\n  },\\n  {\\n    \\\"tag\\\": \"preobedience\",\\n    \\\"popularity\\\": 605934\\n  },\\n  {\\n    \\\"tag\\\": \"unfriarlike\",\\n    \\\"popularity\\\": 598795\\n  },\\n  {\\n    \\\"tag\\\": \"microchromosome\",\\n    \\\"popularity\\\": 591786\\n  },\\n  {\\n    \\\"tag\\\": \"Orphicism\",\\n    \\\"popularity\\\": 584905\\n  },\\n  {\\n    \\\"tag\\\": \"peel\",\\n    \\\"popularity\\\": 578149\\n  },\\n  {\\n    \\\"tag\\\": \"obediential\",\\n    \\\"popularity\\\": 571514\\n  },\\n  {\\n    \\\"tag\\\": \"Peripatidea\",\\n    \\\"popularity\\\": 564997\\n  },\\n  {\\n    \\\"tag\\\": \"undoubtful\",\\n    \\\"popularity\\\": 558596\\n  },\\n  {\\n    \\\"tag\\\": \"lodgeable\",\\n    \\\"popularity\\\": 552307\\n  },\\n  {\\n    \\\"tag\\\": \"pustulated woodchat\",\\n    \\\"popularity\\\": 546129\\n  },\\n  {\\n    \\\"tag\\\": \"antepast\",\\n    \\\"popularity\\\": 540057\\n  },\\n  {\\n    \\\"tag\\\": \"sagittoid matrimoniously\",\\n    \\\"popularity\\\": 534091\\n  },\\n  {\\n    \\\"tag\\\": \"Albizzia\",\\n    \\\"popularity\\\": 528228\\n  },\\n  {\\n    \\\"tag\\\": \"Elateridae unnewness\",\\n    \\\"popularity\\\": 522464\\n  },\\n  {\\n    \\\"tag\\\": \"convertingness\",\\n    \\\"popularity\\\": 516798\\n  },\\n  {\\n    \\\"tag\\\": \"Pelew\",\\n    \\\"popularity\\\": 511228\\n  },\\n  {\\n    \\\"tag\\\": \"recapitulation\",\\n    \\\"popularity\\\": 505751\\n  },\\n  {\\n    \\\"tag\\\": \"shack\",\\n    \\\"popularity\\\": 500365\\n  },\\n  {\\n    \\\"tag\\\": \"unmellowed\",\\n    \\\"popularity\\\": 495069\\n  },\\n  {\\n    \\\"tag\\\": \"pavis capering\",\\n    \\\"popularity\\\": 489859\\n  },\\n  {\\n    \\\"tag\\\": \"fanfare\",\\n    \\\"popularity\\\": 484735\\n  },\\n  {\\n    \\\"tag\\\": \"sole\",\\n    \\\"popularity\\\": 479695\\n  },\\n  {\\n    \\\"tag\\\": \"subarcuate\",\\n    \\\"popularity\\\": 474735\\n  },\\n  {\\n    \\\"tag\\\": \"multivious\",\\n    \\\"popularity\\\": 469856\\n  },\\n  {\\n    \\\"tag\\\": \"squandermania\",\\n    \\\"popularity\\\": 465054\\n  },\\n  {\\n    \\\"tag\\\": \"scintle\",\\n    \\\"popularity\\\": 460329\\n  },\\n  {\\n    \\\"tag\\\": \"hash chirognomic\",\\n    \\\"popularity\\\": 455679\\n  },\\n  {\\n    \\\"tag\\\": \"linseed\",\\n    \\\"popularity\\\": 451101\\n  },\\n  {\\n    \\\"tag\\\": \"redoubtable\",\\n    \\\"popularity\\\": 446596\\n  },\\n  {\\n    \\\"tag\\\": \"poachy reimpact\",\\n    \\\"popularity\\\": 442160\\n  },\\n  {\\n    \\\"tag\\\": \"limestone\",\\n    \\\"popularity\\\": 437792\\n  },\\n  {\\n    \\\"tag\\\": \"serranid\",\\n    \\\"popularity\\\": 433492\\n  },\\n  {\\n    \\\"tag\\\": \"pohna\",\\n    \\\"popularity\\\": 429258\\n  },\\n  {\\n    \\\"tag\\\": \"warwolf\",\\n    \\\"popularity\\\": 425088\\n  },\\n  {\\n    \\\"tag\\\": \"ruthenous\",\\n    \\\"popularity\\\": 420981\\n  },\\n  {\\n    \\\"tag\\\": \"dover\",\\n    \\\"popularity\\\": 416935\\n  },\\n  {\\n    \\\"tag\\\": \"deuteroalbumose\",\\n    \\\"popularity\\\": 412950\\n  },\\n  {\\n    \\\"tag\\\": \"pseudoprophetic\",\\n    \\\"popularity\\\": 409025\\n  },\\n  {\\n    \\\"tag\\\": \"dissoluteness\",\\n    \\\"popularity\\\": 405157\\n  },\\n  {\\n    \\\"tag\\\": \"preinvention\",\\n    \\\"popularity\\\": 401347\\n  },\\n  {\\n    \\\"tag\\\": \"swagbellied\",\\n    \\\"popularity\\\": 397592\\n  },\\n  {\\n    \\\"tag\\\": \"Ophidia\",\\n    \\\"popularity\\\": 393892\\n  },\\n  {\\n    \\\"tag\\\": \"equanimity\",\\n    \\\"popularity\\\": 390245\\n  },\\n  {\\n    \\\"tag\\\": \"troutful\",\\n    \\\"popularity\\\": 386651\\n  },\\n  {\\n    \\\"tag\\\": \"uke\",\\n    \\\"popularity\\\": 383108\\n  },\\n  {\\n    \\\"tag\\\": \"preacquaint\",\\n    \\\"popularity\\\": 379616\\n  },\\n  {\\n    \\\"tag\\\": \"shoq\",\\n    \\\"popularity\\\": 376174\\n  },\\n  {\\n    \\\"tag\\\": \"yox\",\\n    \\\"popularity\\\": 372780\\n  },\\n  {\\n    \\\"tag\\\": \"unelemental\",\\n    \\\"popularity\\\": 369434\\n  },\\n  {\\n    \\\"tag\\\": \"Yavapai\",\\n    \\\"popularity\\\": 366134\\n  },\\n  {\\n    \\\"tag\\\": \"joulean\",\\n    \\\"popularity\\\": 362880\\n  },\\n  {\\n    \\\"tag\\\": \"dracontine\",\\n    \\\"popularity\\\": 359672\\n  },\\n  {\\n    \\\"tag\\\": \"hardmouth\",\\n    \\\"popularity\\\": 356507\\n  },\\n  {\\n    \\\"tag\\\": \"sylvanize\",\\n    \\\"popularity\\\": 353386\\n  },\\n  {\\n    \\\"tag\\\": \"intraparenchymatous meadowbur\",\\n    \\\"popularity\\\": 350308\\n  },\\n  {\\n    \\\"tag\\\": \"uncharily\",\\n    \\\"popularity\\\": 347271\\n  },\\n  {\\n    \\\"tag\\\": \"redtab flexibly\",\\n    \\\"popularity\\\": 344275\\n  },\\n  {\\n    \\\"tag\\\": \"centervelic\",\\n    \\\"popularity\\\": 341319\\n  },\\n  {\\n    \\\"tag\\\": \"unravellable\",\\n    \\\"popularity\\\": 338403\\n  },\\n  {\\n    \\\"tag\\\": \"infortunately\",\\n    \\\"popularity\\\": 335526\\n  },\\n  {\\n    \\\"tag\\\": \"cannel\",\\n    \\\"popularity\\\": 332687\\n  },\\n  {\\n    \\\"tag\\\": \"oxyblepsia\",\\n    \\\"popularity\\\": 329885\\n  },\\n  {\\n    \\\"tag\\\": \"Damon\",\\n    \\\"popularity\\\": 327120\\n  },\\n  {\\n    \\\"tag\\\": \"etherin\",\\n    \\\"popularity\\\": 324391\\n  },\\n  {\\n    \\\"tag\\\": \"luminal\",\\n    \\\"popularity\\\": 321697\\n  },\\n  {\\n    \\\"tag\\\": \"interrogatorily presbyte\",\\n    \\\"popularity\\\": 319038\\n  },\\n  {\\n    \\\"tag\\\": \"hemiclastic\",\\n    \\\"popularity\\\": 316414\\n  },\\n  {\\n    \\\"tag\\\": \"poh flush\",\\n    \\\"popularity\\\": 313823\\n  },\\n  {\\n    \\\"tag\\\": \"Psoroptes\",\\n    \\\"popularity\\\": 311265\\n  },\\n  {\\n    \\\"tag\\\": \"dispirit\",\\n    \\\"popularity\\\": 308740\\n  },\\n  {\\n    \\\"tag\\\": \"nashgab\",\\n    \\\"popularity\\\": 306246\\n  },\\n  {\\n    \\\"tag\\\": \"Aphidiinae\",\\n    \\\"popularity\\\": 303784\\n  },\\n  {\\n    \\\"tag\\\": \"rhapsody nonconstruction\",\\n    \\\"popularity\\\": 301353\\n  },\\n  {\\n    \\\"tag\\\": \"Osmond\",\\n    \\\"popularity\\\": 298952\\n  },\\n  {\\n    \\\"tag\\\": \"Leonis\",\\n    \\\"popularity\\\": 296581\\n  },\\n  {\\n    \\\"tag\\\": \"Lemnian\",\\n    \\\"popularity\\\": 294239\\n  },\\n  {\\n    \\\"tag\\\": \"acetonic gnathonic\",\\n    \\\"popularity\\\": 291926\\n  },\\n  {\\n    \\\"tag\\\": \"surculus\",\\n    \\\"popularity\\\": 289641\\n  },\\n  {\\n    \\\"tag\\\": \"diagonally\",\\n    \\\"popularity\\\": 287384\\n  },\\n  {\\n    \\\"tag\\\": \"counterpenalty\",\\n    \\\"popularity\\\": 285154\\n  },\\n  {\\n    \\\"tag\\\": \"Eugenie\",\\n    \\\"popularity\\\": 282952\\n  },\\n  {\\n    \\\"tag\\\": \"hornbook\",\\n    \\\"popularity\\\": 280776\\n  },\\n  {\\n    \\\"tag\\\": \"miscoin\",\\n    \\\"popularity\\\": 278626\\n  },\\n  {\\n    \\\"tag\\\": \"admi\",\\n    \\\"popularity\\\": 276501\\n  },\\n  {\\n    \\\"tag\\\": \"Tarmac\",\\n    \\\"popularity\\\": 274402\\n  },\\n  {\\n    \\\"tag\\\": \"inexplicable\",\\n    \\\"popularity\\\": 272328\\n  },\\n  {\\n    \\\"tag\\\": \"rascallion\",\\n    \\\"popularity\\\": 270278\\n  },\\n  {\\n    \\\"tag\\\": \"dusterman\",\\n    \\\"popularity\\\": 268252\\n  },\\n  {\\n    \\\"tag\\\": \"osteostomous unhoroscopic\",\\n    \\\"popularity\\\": 266250\\n  },\\n  {\\n    \\\"tag\\\": \"spinibulbar\",\\n    \\\"popularity\\\": 264271\\n  },\\n  {\\n    \\\"tag\\\": \"phototelegraphically\",\\n    \\\"popularity\\\": 262315\\n  },\\n  {\\n    \\\"tag\\\": \"Manihot\",\\n    \\\"popularity\\\": 260381\\n  },\\n  {\\n    \\\"tag\\\": \"neighborhood\",\\n    \\\"popularity\\\": 258470\\n  },\\n  {\\n    \\\"tag\\\": \"Vincetoxicum\",\\n    \\\"popularity\\\": 256581\\n  },\\n  {\\n    \\\"tag\\\": \"khirka\",\\n    \\\"popularity\\\": 254713\\n  },\\n  {\\n    \\\"tag\\\": \"conscriptive\",\\n    \\\"popularity\\\": 252866\\n  },\\n  {\\n    \\\"tag\\\": \"synechthran\",\\n    \\\"popularity\\\": 251040\\n  },\\n  {\\n    \\\"tag\\\": \"Guttiferales\",\\n    \\\"popularity\\\": 249235\\n  },\\n  {\\n    \\\"tag\\\": \"roomful\",\\n    \\\"popularity\\\": 247450\\n  },\\n  {\\n    \\\"tag\\\": \"germinal\",\\n    \\\"popularity\\\": 245685\\n  },\\n  {\\n    \\\"tag\\\": \"untraitorous\",\\n    \\\"popularity\\\": 243939\\n  },\\n  {\\n    \\\"tag\\\": \"nondissenting\",\\n    \\\"popularity\\\": 242213\\n  },\\n  {\\n    \\\"tag\\\": \"amotion\",\\n    \\\"popularity\\\": 240506\\n  },\\n  {\\n    \\\"tag\\\": \"badious\",\\n    \\\"popularity\\\": 238817\\n  },\\n  {\\n    \\\"tag\\\": \"sumpit\",\\n    \\\"popularity\\\": 237147\\n  },\\n  {\\n    \\\"tag\\\": \"ectozoic\",\\n    \\\"popularity\\\": 235496\\n  },\\n  {\\n    \\\"tag\\\": \"elvet\",\\n    \\\"popularity\\\": 233862\\n  },\\n  {\\n    \\\"tag\\\": \"underclerk\",\\n    \\\"popularity\\\": 232246\\n  },\\n  {\\n    \\\"tag\\\": \"reticency\",\\n    \\\"popularity\\\": 230647\\n  },\\n  {\\n    \\\"tag\\\": \"neutroclusion\",\\n    \\\"popularity\\\": 229065\\n  },\\n  {\\n    \\\"tag\\\": \"unbelieving\",\\n    \\\"popularity\\\": 227500\\n  },\\n  {\\n    \\\"tag\\\": \"histogenetic\",\\n    \\\"popularity\\\": 225952\\n  },\\n  {\\n    \\\"tag\\\": \"dermamyiasis\",\\n    \\\"popularity\\\": 224421\\n  },\\n  {\\n    \\\"tag\\\": \"telenergy\",\\n    \\\"popularity\\\": 222905\\n  },\\n  {\\n    \\\"tag\\\": \"axiomatic\",\\n    \\\"popularity\\\": 221406\\n  },\\n  {\\n    \\\"tag\\\": \"undominoed\",\\n    \\\"popularity\\\": 219922\\n  },\\n  {\\n    \\\"tag\\\": \"periosteoma\",\\n    \\\"popularity\\\": 218454\\n  },\\n  {\\n    \\\"tag\\\": \"justiciaryship\",\\n    \\\"popularity\\\": 217001\\n  },\\n  {\\n    \\\"tag\\\": \"autoluminescence\",\\n    \\\"popularity\\\": 215563\\n  },\\n  {\\n    \\\"tag\\\": \"osmous\",\\n    \\\"popularity\\\": 214140\\n  },\\n  {\\n    \\\"tag\\\": \"borgh\",\\n    \\\"popularity\\\": 212731\\n  },\\n  {\\n    \\\"tag\\\": \"bedebt\",\\n    \\\"popularity\\\": 211337\\n  },\\n  {\\n    \\\"tag\\\": \"considerableness adenoidism\",\\n    \\\"popularity\\\": 209957\\n  },\\n  {\\n    \\\"tag\\\": \"sailorizing\",\\n    \\\"popularity\\\": 208592\\n  },\\n  {\\n    \\\"tag\\\": \"Montauk\",\\n    \\\"popularity\\\": 207240\\n  },\\n  {\\n    \\\"tag\\\": \"Bridget\",\\n    \\\"popularity\\\": 205901\\n  },\\n  {\\n    \\\"tag\\\": \"Gekkota\",\\n    \\\"popularity\\\": 204577\\n  },\\n  {\\n    \\\"tag\\\": \"subcorymbose\",\\n    \\\"popularity\\\": 203265\\n  },\\n  {\\n    \\\"tag\\\": \"undersap\",\\n    \\\"popularity\\\": 201967\\n  },\\n  {\\n    \\\"tag\\\": \"poikilothermic\",\\n    \\\"popularity\\\": 200681\\n  },\\n  {\\n    \\\"tag\\\": \"enneatical\",\\n    \\\"popularity\\\": 199409\\n  },\\n  {\\n    \\\"tag\\\": \"martinetism\",\\n    \\\"popularity\\\": 198148\\n  },\\n  {\\n    \\\"tag\\\": \"sustanedly\",\\n    \\\"popularity\\\": 196901\\n  },\\n  {\\n    \\\"tag\\\": \"declaration\",\\n    \\\"popularity\\\": 195665\\n  },\\n  {\\n    \\\"tag\\\": \"myringoplasty\",\\n    \\\"popularity\\\": 194442\\n  },\\n  {\\n    \\\"tag\\\": \"Ginkgo\",\\n    \\\"popularity\\\": 193230\\n  },\\n  {\\n    \\\"tag\\\": \"unrecurrent\",\\n    \\\"popularity\\\": 192031\\n  },\\n  {\\n    \\\"tag\\\": \"proprecedent\",\\n    \\\"popularity\\\": 190843\\n  },\\n  {\\n    \\\"tag\\\": \"roadman\",\\n    \\\"popularity\\\": 189666\\n  },\\n  {\\n    \\\"tag\\\": \"elemin\",\\n    \\\"popularity\\\": 188501\\n  },\\n  {\\n    \\\"tag\\\": \"maggot\",\\n    \\\"popularity\\\": 187347\\n  },\\n  {\\n    \\\"tag\\\": \"alitrunk\",\\n    \\\"popularity\\\": 186204\\n  },\\n  {\\n    \\\"tag\\\": \"introspection\",\\n    \\\"popularity\\\": 185071\\n  },\\n  {\\n    \\\"tag\\\": \"batiker\",\\n    \\\"popularity\\\": 183950\\n  },\\n  {\\n    \\\"tag\\\": \"backhatch oversettle\",\\n    \\\"popularity\\\": 182839\\n  },\\n  {\\n    \\\"tag\\\": \"thresherman\",\\n    \\\"popularity\\\": 181738\\n  },\\n  {\\n    \\\"tag\\\": \"protemperance\",\\n    \\\"popularity\\\": 180648\\n  },\\n  {\\n    \\\"tag\\\": \"undern\",\\n    \\\"popularity\\\": 179568\\n  },\\n  {\\n    \\\"tag\\\": \"tweeg\",\\n    \\\"popularity\\\": 178498\\n  },\\n  {\\n    \\\"tag\\\": \"crosspath\",\\n    \\\"popularity\\\": 177438\\n  },\\n  {\\n    \\\"tag\\\": \"Tangaridae\",\\n    \\\"popularity\\\": 176388\\n  },\\n  {\\n    \\\"tag\\\": \"scrutation\",\\n    \\\"popularity\\\": 175348\\n  },\\n  {\\n    \\\"tag\\\": \"piecemaker\",\\n    \\\"popularity\\\": 174317\\n  },\\n  {\\n    \\\"tag\\\": \"paster\",\\n    \\\"popularity\\\": 173296\\n  },\\n  {\\n    \\\"tag\\\": \"unpretendingness\",\\n    \\\"popularity\\\": 172284\\n  },\\n  {\\n    \\\"tag\\\": \"inframundane\",\\n    \\\"popularity\\\": 171281\\n  },\\n  {\\n    \\\"tag\\\": \"kiblah\",\\n    \\\"popularity\\\": 170287\\n  },\\n  {\\n    \\\"tag\\\": \"playwrighting\",\\n    \\\"popularity\\\": 169302\\n  },\\n  {\\n    \\\"tag\\\": \"gonepoiesis snowslip\",\\n    \\\"popularity\\\": 168326\\n  },\\n  {\\n    \\\"tag\\\": \"hoodwise\",\\n    \\\"popularity\\\": 167359\\n  },\\n  {\\n    \\\"tag\\\": \"postseason\",\\n    \\\"popularity\\\": 166401\\n  },\\n  {\\n    \\\"tag\\\": \"equivocality\",\\n    \\\"popularity\\\": 165451\\n  },\\n  {\\n    \\\"tag\\\": \"Opiliaceae nuclease\",\\n    \\\"popularity\\\": 164509\\n  },\\n  {\\n    \\\"tag\\\": \"sextipara\",\\n    \\\"popularity\\\": 163576\\n  },\\n  {\\n    \\\"tag\\\": \"weeper\",\\n    \\\"popularity\\\": 162651\\n  },\\n  {\\n    \\\"tag\\\": \"frambesia\",\\n    \\\"popularity\\\": 161735\\n  },\\n  {\\n    \\\"tag\\\": \"answerable\",\\n    \\\"popularity\\\": 160826\\n  },\\n  {\\n    \\\"tag\\\": \"Trichosporum\",\\n    \\\"popularity\\\": 159925\\n  },\\n  {\\n    \\\"tag\\\": \"cajuputol\",\\n    \\\"popularity\\\": 159033\\n  },\\n  {\\n    \\\"tag\\\": \"pleomorphous\",\\n    \\\"popularity\\\": 158148\\n  },\\n  {\\n    \\\"tag\\\": \"aculeolate\",\\n    \\\"popularity\\\": 157270\\n  },\\n  {\\n    \\\"tag\\\": \"wherever\",\\n    \\\"popularity\\\": 156400\\n  },\\n  {\\n    \\\"tag\\\": \"collapse\",\\n    \\\"popularity\\\": 155538\\n  },\\n  {\\n    \\\"tag\\\": \"porky\",\\n    \\\"popularity\\\": 154683\\n  },\\n  {\\n    \\\"tag\\\": \"perule\",\\n    \\\"popularity\\\": 153836\\n  },\\n  {\\n    \\\"tag\\\": \"Nevada\",\\n    \\\"popularity\\\": 152996\\n  },\\n  {\\n    \\\"tag\\\": \"conalbumin\",\\n    \\\"popularity\\\": 152162\\n  },\\n  {\\n    \\\"tag\\\": \"tsunami\",\\n    \\\"popularity\\\": 151336\\n  },\\n  {\\n    \\\"tag\\\": \"Gulf\",\\n    \\\"popularity\\\": 150517\\n  },\\n  {\\n    \\\"tag\\\": \"hertz\",\\n    \\\"popularity\\\": 149705\\n  },\\n  {\\n    \\\"tag\\\": \"limmock\",\\n    \\\"popularity\\\": 148900\\n  },\\n  {\\n    \\\"tag\\\": \"Tartarize\",\\n    \\\"popularity\\\": 148101\\n  },\\n  {\\n    \\\"tag\\\": \"entosphenoid\",\\n    \\\"popularity\\\": 147310\\n  },\\n  {\\n    \\\"tag\\\": \"ibis\",\\n    \\\"popularity\\\": 146524\\n  },\\n  {\\n    \\\"tag\\\": \"unyeaned\",\\n    \\\"popularity\\\": 145746\\n  },\\n  {\\n    \\\"tag\\\": \"tritural\",\\n    \\\"popularity\\\": 144973\\n  },\\n  {\\n    \\\"tag\\\": \"hundredary\",\\n    \\\"popularity\\\": 144207\\n  },\\n  {\\n    \\\"tag\\\": \"stolonlike\",\\n    \\\"popularity\\\": 143448\\n  },\\n  {\\n    \\\"tag\\\": \"chorister\",\\n    \\\"popularity\\\": 142694\\n  },\\n  {\\n    \\\"tag\\\": \"mismove\",\\n    \\\"popularity\\\": 141947\\n  },\\n  {\\n    \\\"tag\\\": \"Andine\",\\n    \\\"popularity\\\": 141206\\n  },\\n  {\\n    \\\"tag\\\": \"Annette proneur escribe\",\\n    \\\"popularity\\\": 140471\\n  },\\n  {\\n    \\\"tag\\\": \"exoperidium\",\\n    \\\"popularity\\\": 139742\\n  },\\n  {\\n    \\\"tag\\\": \"disedge\",\\n    \\\"popularity\\\": 139019\\n  },\\n  {\\n    \\\"tag\\\": \"hypochloruria\",\\n    \\\"popularity\\\": 138302\\n  },\\n  {\\n    \\\"tag\\\": \"prepupa\",\\n    \\\"popularity\\\": 137590\\n  },\\n  {\\n    \\\"tag\\\": \"assent\",\\n    \\\"popularity\\\": 136884\\n  },\\n  {\\n    \\\"tag\\\": \"hydrazobenzene\",\\n    \\\"popularity\\\": 136184\\n  },\\n  {\\n    \\\"tag\\\": \"emballonurid\",\\n    \\\"popularity\\\": 135489\\n  },\\n  {\\n    \\\"tag\\\": \"roselle\",\\n    \\\"popularity\\\": 134800\\n  },\\n  {\\n    \\\"tag\\\": \"unifiedly\",\\n    \\\"popularity\\\": 134117\\n  },\\n  {\\n    \\\"tag\\\": \"clang\",\\n    \\\"popularity\\\": 133439\\n  },\\n  {\\n    \\\"tag\\\": \"acetolytic\",\\n    \\\"popularity\\\": 132766\\n  },\\n  {\\n    \\\"tag\\\": \"cladodont\",\\n    \\\"popularity\\\": 132098\\n  },\\n  {\\n    \\\"tag\\\": \"recoast\",\\n    \\\"popularity\\\": 131436\\n  },\\n  {\\n    \\\"tag\\\": \"celebrated tydie Eocarboniferous\",\\n    \\\"popularity\\\": 130779\\n  },\\n  {\\n    \\\"tag\\\": \"superconsciousness\",\\n    \\\"popularity\\\": 130127\\n  },\\n  {\\n    \\\"tag\\\": \"soberness\",\\n    \\\"popularity\\\": 129480\\n  },\\n  {\\n    \\\"tag\\\": \"panoramist\",\\n    \\\"popularity\\\": 128838\\n  },\\n  {\\n    \\\"tag\\\": \"Orbitolina\",\\n    \\\"popularity\\\": 128201\\n  },\\n  {\\n    \\\"tag\\\": \"overlewd\",\\n    \\\"popularity\\\": 127569\\n  },\\n  {\\n    \\\"tag\\\": \"demiquaver\",\\n    \\\"popularity\\\": 126942\\n  },\\n  {\\n    \\\"tag\\\": \"kamelaukion\",\\n    \\\"popularity\\\": 126319\\n  },\\n  {\\n    \\\"tag\\\": \"flancard\",\\n    \\\"popularity\\\": 125702\\n  },\\n  {\\n    \\\"tag\\\": \"tricuspid\",\\n    \\\"popularity\\\": 125089\\n  },\\n  {\\n    \\\"tag\\\": \"bepelt\",\\n    \\\"popularity\\\": 124480\\n  },\\n  {\\n    \\\"tag\\\": \"decuplet\",\\n    \\\"popularity\\\": 123877\\n  },\\n  {\\n    \\\"tag\\\": \"Rockies\",\\n    \\\"popularity\\\": 123278\\n  },\\n  {\\n    \\\"tag\\\": \"unforgeability\",\\n    \\\"popularity\\\": 122683\\n  },\\n  {\\n    \\\"tag\\\": \"mocha\",\\n    \\\"popularity\\\": 122093\\n  },\\n  {\\n    \\\"tag\\\": \"scrunge\",\\n    \\\"popularity\\\": 121507\\n  },\\n  {\\n    \\\"tag\\\": \"delighter\",\\n    \\\"popularity\\\": 120926\\n  },\\n  {\\n    \\\"tag\\\": \"willey Microtinae\",\\n    \\\"popularity\\\": 120349\\n  },\\n  {\\n    \\\"tag\\\": \"unhuntable\",\\n    \\\"popularity\\\": 119777\\n  },\\n  {\\n    \\\"tag\\\": \"historically\",\\n    \\\"popularity\\\": 119208\\n  },\\n  {\\n    \\\"tag\\\": \"vicegerentship\",\\n    \\\"popularity\\\": 118644\\n  },\\n  {\\n    \\\"tag\\\": \"hemangiosarcoma\",\\n    \\\"popularity\\\": 118084\\n  },\\n  {\\n    \\\"tag\\\": \"harpago\",\\n    \\\"popularity\\\": 117528\\n  },\\n  {\\n    \\\"tag\\\": \"unionoid\",\\n    \\\"popularity\\\": 116976\\n  },\\n  {\\n    \\\"tag\\\": \"wiseman\",\\n    \\\"popularity\\\": 116429\\n  },\\n  {\\n    \\\"tag\\\": \"diclinism\",\\n    \\\"popularity\\\": 115885\\n  },\\n  {\\n    \\\"tag\\\": \"Maud\",\\n    \\\"popularity\\\": 115345\\n  },\\n  {\\n    \\\"tag\\\": \"scaphocephalism\",\\n    \\\"popularity\\\": 114809\\n  },\\n  {\\n    \\\"tag\\\": \"obtenebration\",\\n    \\\"popularity\\\": 114277\\n  },\\n  {\\n    \\\"tag\\\": \"cymar predreadnought\",\\n    \\\"popularity\\\": 113749\\n  },\\n  {\\n    \\\"tag\\\": \"discommend\",\\n    \\\"popularity\\\": 113225\\n  },\\n  {\\n    \\\"tag\\\": \"crude\",\\n    \\\"popularity\\\": 112704\\n  },\\n  {\\n    \\\"tag\\\": \"upflash\",\\n    \\\"popularity\\\": 112187\\n  },\\n  {\\n    \\\"tag\\\": \"saltimbank\",\\n    \\\"popularity\\\": 111674\\n  },\\n  {\\n    \\\"tag\\\": \"posthysterical\",\\n    \\\"popularity\\\": 111165\\n  },\\n  {\\n    \\\"tag\\\": \"trample\",\\n    \\\"popularity\\\": 110659\\n  },\\n  {\\n    \\\"tag\\\": \"ungirthed\",\\n    \\\"popularity\\\": 110157\\n  },\\n  {\\n    \\\"tag\\\": \"unshakable\",\\n    \\\"popularity\\\": 109658\\n  },\\n  {\\n    \\\"tag\\\": \"hepatocystic\",\\n    \\\"popularity\\\": 109163\\n  },\\n  {\\n    \\\"tag\\\": \"psammophyte\",\\n    \\\"popularity\\\": 108671\\n  },\\n  {\\n    \\\"tag\\\": \"millionfold\",\\n    \\\"popularity\\\": 108183\\n  },\\n  {\\n    \\\"tag\\\": \"outtaste\",\\n    \\\"popularity\\\": 107698\\n  },\\n  {\\n    \\\"tag\\\": \"poppycockish\",\\n    \\\"popularity\\\": 107217\\n  },\\n  {\\n    \\\"tag\\\": \"viduine\",\\n    \\\"popularity\\\": 106739\\n  },\\n  {\\n    \\\"tag\\\": \"pleasureman\",\\n    \\\"popularity\\\": 106264\\n  },\\n  {\\n    \\\"tag\\\": \"cholesterolemia\",\\n    \\\"popularity\\\": 105792\\n  },\\n  {\\n    \\\"tag\\\": \"hostlerwife\",\\n    \\\"popularity\\\": 105324\\n  },\\n  {\\n    \\\"tag\\\": \"figure undergrass\",\\n    \\\"popularity\\\": 104859\\n  },\\n  {\\n    \\\"tag\\\": \"bedrape\",\\n    \\\"popularity\\\": 104398\\n  },\\n  {\\n    \\\"tag\\\": \"nuttishness\",\\n    \\\"popularity\\\": 103939\\n  },\\n  {\\n    \\\"tag\\\": \"fow\",\\n    \\\"popularity\\\": 103484\\n  },\\n  {\\n    \\\"tag\\\": \"rachianesthesia\",\\n    \\\"popularity\\\": 103031\\n  },\\n  {\\n    \\\"tag\\\": \"recruitable\",\\n    \\\"popularity\\\": 102582\\n  },\\n  {\\n    \\\"tag\\\": \"semianatomical Oenotheraceae\",\\n    \\\"popularity\\\": 102136\\n  },\\n  {\\n    \\\"tag\\\": \"extracapsular\",\\n    \\\"popularity\\\": 101693\\n  },\\n  {\\n    \\\"tag\\\": \"unsigneted\",\\n    \\\"popularity\\\": 101253\\n  },\\n  {\\n    \\\"tag\\\": \"fissural\",\\n    \\\"popularity\\\": 100816\\n  },\\n  {\\n    \\\"tag\\\": \"ayous\",\\n    \\\"popularity\\\": 100381\\n  },\\n  {\\n    \\\"tag\\\": \"crestfallenness odontograph\",\\n    \\\"popularity\\\": 99950\\n  },\\n  {\\n    \\\"tag\\\": \"monopodium\",\\n    \\\"popularity\\\": 99522\\n  },\\n  {\\n    \\\"tag\\\": \"germfree\",\\n    \\\"popularity\\\": 99096\\n  },\\n  {\\n    \\\"tag\\\": \"dauphin\",\\n    \\\"popularity\\\": 98673\\n  },\\n  {\\n    \\\"tag\\\": \"nonagesimal\",\\n    \\\"popularity\\\": 98254\\n  },\\n  {\\n    \\\"tag\\\": \"waterchat\",\\n    \\\"popularity\\\": 97836\\n  },\\n  {\\n    \\\"tag\\\": \"Entelodon\",\\n    \\\"popularity\\\": 97422\\n  },\\n  {\\n    \\\"tag\\\": \"semischolastic\",\\n    \\\"popularity\\\": 97010\\n  },\\n  {\\n    \\\"tag\\\": \"somata\",\\n    \\\"popularity\\\": 96602\\n  },\\n  {\\n    \\\"tag\\\": \"expositorily\",\\n    \\\"popularity\\\": 96195\\n  },\\n  {\\n    \\\"tag\\\": \"bass\",\\n    \\\"popularity\\\": 95792\\n  },\\n  {\\n    \\\"tag\\\": \"calorimetry\",\\n    \\\"popularity\\\": 95391\\n  },\\n  {\\n    \\\"tag\\\": \"entireness\",\\n    \\\"popularity\\\": 94993\\n  },\\n  {\\n    \\\"tag\\\": \"ratline soppiness\",\\n    \\\"popularity\\\": 94597\\n  },\\n  {\\n    \\\"tag\\\": \"shor\",\\n    \\\"popularity\\\": 94204\\n  },\\n  {\\n    \\\"tag\\\": \"coprecipitation\",\\n    \\\"popularity\\\": 93813\\n  },\\n  {\\n    \\\"tag\\\": \"unblushingly\",\\n    \\\"popularity\\\": 93425\\n  },\\n  {\\n    \\\"tag\\\": \"macarize\",\\n    \\\"popularity\\\": 93040\\n  },\\n  {\\n    \\\"tag\\\": \"scruplesomeness\",\\n    \\\"popularity\\\": 92657\\n  },\\n  {\\n    \\\"tag\\\": \"offsaddle\",\\n    \\\"popularity\\\": 92276\\n  },\\n  {\\n    \\\"tag\\\": \"hypertragical\",\\n    \\\"popularity\\\": 91898\\n  },\\n  {\\n    \\\"tag\\\": \"uncassock loined\",\\n    \\\"popularity\\\": 91522\\n  },\\n  {\\n    \\\"tag\\\": \"interlobate\",\\n    \\\"popularity\\\": 91149\\n  },\\n  {\\n    \\\"tag\\\": \"releasor orrisroot stoloniferously\",\\n    \\\"popularity\\\": 90778\\n  },\\n  {\\n    \\\"tag\\\": \"elementoid\",\\n    \\\"popularity\\\": 90410\\n  },\\n  {\\n    \\\"tag\\\": \"Lentilla\",\\n    \\\"popularity\\\": 90043\\n  },\\n  {\\n    \\\"tag\\\": \"distressing\",\\n    \\\"popularity\\\": 89679\\n  },\\n  {\\n    \\\"tag\\\": \"hydrodrome\",\\n    \\\"popularity\\\": 89318\\n  },\\n  {\\n    \\\"tag\\\": \"Jeannette\",\\n    \\\"popularity\\\": 88958\\n  },\\n  {\\n    \\\"tag\\\": \"Kuli\",\\n    \\\"popularity\\\": 88601\\n  },\\n  {\\n    \\\"tag\\\": \"taxinomist\",\\n    \\\"popularity\\\": 88246\\n  },\\n  {\\n    \\\"tag\\\": \"southwestwardly\",\\n    \\\"popularity\\\": 87894\\n  },\\n  {\\n    \\\"tag\\\": \"polyparia\",\\n    \\\"popularity\\\": 87543\\n  },\\n  {\\n    \\\"tag\\\": \"exmeridian\",\\n    \\\"popularity\\\": 87195\\n  },\\n  {\\n    \\\"tag\\\": \"splenius regimentaled\",\\n    \\\"popularity\\\": 86849\\n  },\\n  {\\n    \\\"tag\\\": \"Sphaeropsidaceae\",\\n    \\\"popularity\\\": 86505\\n  },\\n  {\\n    \\\"tag\\\": \"unbegun\",\\n    \\\"popularity\\\": 86163\\n  },\\n  {\\n    \\\"tag\\\": \"something\",\\n    \\\"popularity\\\": 85823\\n  },\\n  {\\n    \\\"tag\\\": \"contaminable nonexpulsion\",\\n    \\\"popularity\\\": 85486\\n  },\\n  {\\n    \\\"tag\\\": \"douser\",\\n    \\\"popularity\\\": 85150\\n  },\\n  {\\n    \\\"tag\\\": \"prostrike\",\\n    \\\"popularity\\\": 84817\\n  },\\n  {\\n    \\\"tag\\\": \"worky\",\\n    \\\"popularity\\\": 84485\\n  },\\n  {\\n    \\\"tag\\\": \"folliful\",\\n    \\\"popularity\\\": 84156\\n  },\\n  {\\n    \\\"tag\\\": \"prioracy\",\\n    \\\"popularity\\\": 83828\\n  },\\n  {\\n    \\\"tag\\\": \"undermentioned\",\\n    \\\"popularity\\\": 83503\\n  },\\n  {\\n    \\\"tag\\\": \"Judaica\",\\n    \\\"popularity\\\": 83179\\n  },\\n  {\\n    \\\"tag\\\": \"multifarious\",\\n    \\\"popularity\\\": 82858\\n  },\\n  {\\n    \\\"tag\\\": \"poogye\",\\n    \\\"popularity\\\": 82538\\n  },\\n  {\\n    \\\"tag\\\": \"Sparganium\",\\n    \\\"popularity\\\": 82221\\n  },\\n  {\\n    \\\"tag\\\": \"thurrock\",\\n    \\\"popularity\\\": 81905\\n  },\\n  {\\n    \\\"tag\\\": \"outblush\",\\n    \\\"popularity\\\": 81591\\n  },\\n  {\\n    \\\"tag\\\": \"Strophanthus supraordination\",\\n    \\\"popularity\\\": 81279\\n  },\\n  {\\n    \\\"tag\\\": \"gingerroot\",\\n    \\\"popularity\\\": 80969\\n  },\\n  {\\n    \\\"tag\\\": \"unconscient\",\\n    \\\"popularity\\\": 80661\\n  },\\n  {\\n    \\\"tag\\\": \"unconstitutionally\",\\n    \\\"popularity\\\": 80354\\n  },\\n  {\\n    \\\"tag\\\": \"plaguily\",\\n    \\\"popularity\\\": 80050\\n  },\\n  {\\n    \\\"tag\\\": \"waterily equatorwards\",\\n    \\\"popularity\\\": 79747\\n  },\\n  {\\n    \\\"tag\\\": \"nondeposition\",\\n    \\\"popularity\\\": 79446\\n  },\\n  {\\n    \\\"tag\\\": \"dronishly\",\\n    \\\"popularity\\\": 79147\\n  },\\n  {\\n    \\\"tag\\\": \"gateado\",\\n    \\\"popularity\\\": 78849\\n  },\\n  {\\n    \\\"tag\\\": \"dislink\",\\n    \\\"popularity\\\": 78553\\n  },\\n  {\\n    \\\"tag\\\": \"Joceline\",\\n    \\\"popularity\\\": 78259\\n  },\\n  {\\n    \\\"tag\\\": \"amphiboliferous\",\\n    \\\"popularity\\\": 77967\\n  },\\n  {\\n    \\\"tag\\\": \"bushrope\",\\n    \\\"popularity\\\": 77676\\n  },\\n  {\\n    \\\"tag\\\": \"plumicorn sulphosalicylic\",\\n    \\\"popularity\\\": 77387\\n  },\\n  {\\n    \\\"tag\\\": \"nonefficiency\",\\n    \\\"popularity\\\": 77100\\n  },\\n  {\\n    \\\"tag\\\": \"hieroscopy\",\\n    \\\"popularity\\\": 76815\\n  },\\n  {\\n    \\\"tag\\\": \"causativeness\",\\n    \\\"popularity\\\": 76531\\n  },\\n  {\\n    \\\"tag\\\": \"swird paleoeremology\",\\n    \\\"popularity\\\": 76249\\n  },\\n  {\\n    \\\"tag\\\": \"camphoric\",\\n    \\\"popularity\\\": 75968\\n  },\\n  {\\n    \\\"tag\\\": \"retaining\",\\n    \\\"popularity\\\": 75689\\n  },\\n  {\\n    \\\"tag\\\": \"thyreoprotein\",\\n    \\\"popularity\\\": 75411\\n  },\\n  {\\n    \\\"tag\\\": \"carbona\",\\n    \\\"popularity\\\": 75136\\n  },\\n  {\\n    \\\"tag\\\": \"protectively\",\\n    \\\"popularity\\\": 74861\\n  },\\n  {\\n    \\\"tag\\\": \"mosasaur\",\\n    \\\"popularity\\\": 74589\\n  },\\n  {\\n    \\\"tag\\\": \"reciprocator\",\\n    \\\"popularity\\\": 74317\\n  },\\n  {\\n    \\\"tag\\\": \"detentive\",\\n    \\\"popularity\\\": 74048\\n  },\\n  {\\n    \\\"tag\\\": \"supravital\",\\n    \\\"popularity\\\": 73780\\n  },\\n  {\\n    \\\"tag\\\": \"Vespertilionidae\",\\n    \\\"popularity\\\": 73513\\n  },\\n  {\\n    \\\"tag\\\": \"parka\",\\n    \\\"popularity\\\": 73248\\n  },\\n  {\\n    \\\"tag\\\": \"pickaway\",\\n    \\\"popularity\\\": 72984\\n  },\\n  {\\n    \\\"tag\\\": \"oleaceous\",\\n    \\\"popularity\\\": 72722\\n  },\\n  {\\n    \\\"tag\\\": \"anticogitative\",\\n    \\\"popularity\\\": 72462\\n  },\\n  {\\n    \\\"tag\\\": \"woe\",\\n    \\\"popularity\\\": 72203\\n  },\\n  {\\n    \\\"tag\\\": \"skeuomorph\",\\n    \\\"popularity\\\": 71945\\n  },\\n  {\\n    \\\"tag\\\": \"helpmeet\",\\n    \\\"popularity\\\": 71689\\n  },\\n  {\\n    \\\"tag\\\": \"Hexactinellida brickmaking\",\\n    \\\"popularity\\\": 71434\\n  },\\n  {\\n    \\\"tag\\\": \"resink\",\\n    \\\"popularity\\\": 71180\\n  },\\n  {\\n    \\\"tag\\\": \"diluter\",\\n    \\\"popularity\\\": 70928\\n  },\\n  {\\n    \\\"tag\\\": \"micromicron\",\\n    \\\"popularity\\\": 70677\\n  },\\n  {\\n    \\\"tag\\\": \"parentage\",\\n    \\\"popularity\\\": 70428\\n  },\\n  {\\n    \\\"tag\\\": \"galactorrhoea\",\\n    \\\"popularity\\\": 70180\\n  },\\n  {\\n    \\\"tag\\\": \"gey\",\\n    \\\"popularity\\\": 69934\\n  },\\n  {\\n    \\\"tag\\\": \"gesticulatory\",\\n    \\\"popularity\\\": 69689\\n  },\\n  {\\n    \\\"tag\\\": \"wergil\",\\n    \\\"popularity\\\": 69445\\n  },\\n  {\\n    \\\"tag\\\": \"Lecanora\",\\n    \\\"popularity\\\": 69202\\n  },\\n  {\\n    \\\"tag\\\": \"malanders karst\",\\n    \\\"popularity\\\": 68961\\n  },\\n  {\\n    \\\"tag\\\": \"vibetoite\",\\n    \\\"popularity\\\": 68721\\n  },\\n  {\\n    \\\"tag\\\": \"unrequitedness\",\\n    \\\"popularity\\\": 68483\\n  },\\n  {\\n    \\\"tag\\\": \"outwash\",\\n    \\\"popularity\\\": 68245\\n  },\\n  {\\n    \\\"tag\\\": \"unsacred\",\\n    \\\"popularity\\\": 68009\\n  },\\n  {\\n    \\\"tag\\\": \"unabetted dividend\",\\n    \\\"popularity\\\": 67775\\n  },\\n  {\\n    \\\"tag\\\": \"untraveling\",\\n    \\\"popularity\\\": 67541\\n  },\\n  {\\n    \\\"tag\\\": \"thermobattery\",\\n    \\\"popularity\\\": 67309\\n  },\\n  {\\n    \\\"tag\\\": \"polypragmist\",\\n    \\\"popularity\\\": 67078\\n  },\\n  {\\n    \\\"tag\\\": \"irrefutableness\",\\n    \\\"popularity\\\": 66848\\n  },\\n  {\\n    \\\"tag\\\": \"remiges\",\\n    \\\"popularity\\\": 66620\\n  },\\n  {\\n    \\\"tag\\\": \"implode\",\\n    \\\"popularity\\\": 66393\\n  },\\n  {\\n    \\\"tag\\\": \"superfluousness\",\\n    \\\"popularity\\\": 66166\\n  },\\n  {\\n    \\\"tag\\\": \"croakily unalleviated\",\\n    \\\"popularity\\\": 65942\\n  },\\n  {\\n    \\\"tag\\\": \"edicule\",\\n    \\\"popularity\\\": 65718\\n  },\\n  {\\n    \\\"tag\\\": \"entophytous\",\\n    \\\"popularity\\\": 65495\\n  },\\n  {\\n    \\\"tag\\\": \"benefactorship Toryish\",\\n    \\\"popularity\\\": 65274\\n  },\\n  {\\n    \\\"tag\\\": \"pseudoamateurish\",\\n    \\\"popularity\\\": 65054\\n  },\\n  {\\n    \\\"tag\\\": \"flueless Iguanodontoidea snipnose\",\\n    \\\"popularity\\\": 64835\\n  },\\n  {\\n    \\\"tag\\\": \"zealotical Zamicrus interpole\",\\n    \\\"popularity\\\": 64617\\n  },\\n  {\\n    \\\"tag\\\": \"whereabout\",\\n    \\\"popularity\\\": 64401\\n  },\\n  {\\n    \\\"tag\\\": \"benzazide\",\\n    \\\"popularity\\\": 64185\\n  },\\n  {\\n    \\\"tag\\\": \"pokeweed\",\\n    \\\"popularity\\\": 63971\\n  },\\n  {\\n    \\\"tag\\\": \"calamitoid\",\\n    \\\"popularity\\\": 63757\\n  },\\n  {\\n    \\\"tag\\\": \"sporozoal\",\\n    \\\"popularity\\\": 63545\\n  },\\n  {\\n    \\\"tag\\\": \"physcioid Welshwoman\",\\n    \\\"popularity\\\": 63334\\n  },\\n  {\\n    \\\"tag\\\": \"wanting\",\\n    \\\"popularity\\\": 63124\\n  },\\n  {\\n    \\\"tag\\\": \"unencumbering\",\\n    \\\"popularity\\\": 62915\\n  },\\n  {\\n    \\\"tag\\\": \"Tupi\",\\n    \\\"popularity\\\": 62707\\n  },\\n  {\\n    \\\"tag\\\": \"potbank\",\\n    \\\"popularity\\\": 62501\\n  },\\n  {\\n    \\\"tag\\\": \"bulked\",\\n    \\\"popularity\\\": 62295\\n  },\\n  {\\n    \\\"tag\\\": \"uparise\",\\n    \\\"popularity\\\": 62090\\n  },\\n  {\\n    \\\"tag\\\": \"Sudra\",\\n    \\\"popularity\\\": 61887\\n  },\\n  {\\n    \\\"tag\\\": \"hyperscrupulosity\",\\n    \\\"popularity\\\": 61684\\n  },\\n  {\\n    \\\"tag\\\": \"subterraneously unmaid\",\\n    \\\"popularity\\\": 61483\\n  },\\n  {\\n    \\\"tag\\\": \"poisonousness\",\\n    \\\"popularity\\\": 61282\\n  },\\n  {\\n    \\\"tag\\\": \"phare\",\\n    \\\"popularity\\\": 61083\\n  },\\n  {\\n    \\\"tag\\\": \"dicynodont\",\\n    \\\"popularity\\\": 60884\\n  },\\n  {\\n    \\\"tag\\\": \"chewer\",\\n    \\\"popularity\\\": 60687\\n  },\\n  {\\n    \\\"tag\\\": \"uliginous\",\\n    \\\"popularity\\\": 60490\\n  },\\n  {\\n    \\\"tag\\\": \"tinman\",\\n    \\\"popularity\\\": 60295\\n  },\\n  {\\n    \\\"tag\\\": \"coconut\",\\n    \\\"popularity\\\": 60100\\n  },\\n  {\\n    \\\"tag\\\": \"phryganeoid\",\\n    \\\"popularity\\\": 59907\\n  },\\n  {\\n    \\\"tag\\\": \"bismillah\",\\n    \\\"popularity\\\": 59714\\n  },\\n  {\\n    \\\"tag\\\": \"tautomeric\",\\n    \\\"popularity\\\": 59523\\n  },\\n  {\\n    \\\"tag\\\": \"jerquer\",\\n    \\\"popularity\\\": 59332\\n  },\\n  {\\n    \\\"tag\\\": \"Dryopithecinae\",\\n    \\\"popularity\\\": 59143\\n  },\\n  {\\n    \\\"tag\\\": \"ghizite\",\\n    \\\"popularity\\\": 58954\\n  },\\n  {\\n    \\\"tag\\\": \"unliveable\",\\n    \\\"popularity\\\": 58766\\n  },\\n  {\\n    \\\"tag\\\": \"craftsmaster\",\\n    \\\"popularity\\\": 58579\\n  },\\n  {\\n    \\\"tag\\\": \"semiscenic\",\\n    \\\"popularity\\\": 58394\\n  },\\n  {\\n    \\\"tag\\\": \"danaid\",\\n    \\\"popularity\\\": 58209\\n  },\\n  {\\n    \\\"tag\\\": \"flawful\",\\n    \\\"popularity\\\": 58025\\n  },\\n  {\\n    \\\"tag\\\": \"risibleness\",\\n    \\\"popularity\\\": 57841\\n  },\\n  {\\n    \\\"tag\\\": \"Muscovite\",\\n    \\\"popularity\\\": 57659\\n  },\\n  {\\n    \\\"tag\\\": \"snaringly\",\\n    \\\"popularity\\\": 57478\\n  },\\n  {\\n    \\\"tag\\\": \"brilliantwise\",\\n    \\\"popularity\\\": 57297\\n  },\\n  {\\n    \\\"tag\\\": \"plebeity\",\\n    \\\"popularity\\\": 57118\\n  },\\n  {\\n    \\\"tag\\\": \"historicalness\",\\n    \\\"popularity\\\": 56939\\n  },\\n  {\\n    \\\"tag\\\": \"piecemeal\",\\n    \\\"popularity\\\": 56761\\n  },\\n  {\\n    \\\"tag\\\": \"maxillipedary\",\\n    \\\"popularity\\\": 56584\\n  },\\n  {\\n    \\\"tag\\\": \"Hypenantron\",\\n    \\\"popularity\\\": 56408\\n  },\\n  {\\n    \\\"tag\\\": \"quaintness avigate\",\\n    \\\"popularity\\\": 56233\\n  },\\n  {\\n    \\\"tag\\\": \"ave\",\\n    \\\"popularity\\\": 56059\\n  },\\n  {\\n    \\\"tag\\\": \"mediaevally\",\\n    \\\"popularity\\\": 55885\\n  },\\n  {\\n    \\\"tag\\\": \"brucite\",\\n    \\\"popularity\\\": 55712\\n  },\\n  {\\n    \\\"tag\\\": \"Schwendenerian\",\\n    \\\"popularity\\\": 55541\\n  },\\n  {\\n    \\\"tag\\\": \"julole\",\\n    \\\"popularity\\\": 55370\\n  },\\n  {\\n    \\\"tag\\\": \"palaeolith\",\\n    \\\"popularity\\\": 55199\\n  },\\n  {\\n    \\\"tag\\\": \"cotyledonary\",\\n    \\\"popularity\\\": 55030\\n  },\\n  {\\n    \\\"tag\\\": \"rond\",\\n    \\\"popularity\\\": 54861\\n  },\\n  {\\n    \\\"tag\\\": \"boomster tassoo\",\\n    \\\"popularity\\\": 54694\\n  },\\n  {\\n    \\\"tag\\\": \"cattishly\",\\n    \\\"popularity\\\": 54527\\n  },\\n  {\\n    \\\"tag\\\": \"tonguefence\",\\n    \\\"popularity\\\": 54360\\n  },\\n  {\\n    \\\"tag\\\": \"hexastylar triskele\",\\n    \\\"popularity\\\": 54195\\n  },\\n  {\\n    \\\"tag\\\": \"ariot\",\\n    \\\"popularity\\\": 54030\\n  },\\n  {\\n    \\\"tag\\\": \"intarsist\",\\n    \\\"popularity\\\": 53867\\n  },\\n  {\\n    \\\"tag\\\": \"Oscines\",\\n    \\\"popularity\\\": 53704\\n  },\\n  {\\n    \\\"tag\\\": \"Spaniolize\",\\n    \\\"popularity\\\": 53541\\n  },\\n  {\\n    \\\"tag\\\": \"smellfungus\",\\n    \\\"popularity\\\": 53380\\n  },\\n  {\\n    \\\"tag\\\": \"redisplay\",\\n    \\\"popularity\\\": 53219\\n  },\\n  {\\n    \\\"tag\\\": \"phosphene\",\\n    \\\"popularity\\\": 53059\\n  },\\n  {\\n    \\\"tag\\\": \"phycomycete\",\\n    \\\"popularity\\\": 52900\\n  },\\n  {\\n    \\\"tag\\\": \"prophetic\",\\n    \\\"popularity\\\": 52741\\n  },\\n  {\\n    \\\"tag\\\": \"overtrustful\",\\n    \\\"popularity\\\": 52584\\n  },\\n  {\\n    \\\"tag\\\": \"pinitol\",\\n    \\\"popularity\\\": 52427\\n  },\\n  {\\n    \\\"tag\\\": \"asthmatic\",\\n    \\\"popularity\\\": 52270\\n  },\\n  {\\n    \\\"tag\\\": \"convulsive\",\\n    \\\"popularity\\\": 52115\\n  },\\n  {\\n    \\\"tag\\\": \"draughtswoman\",\\n    \\\"popularity\\\": 51960\\n  },\\n  {\\n    \\\"tag\\\": \"unetymologizable\",\\n    \\\"popularity\\\": 51806\\n  },\\n  {\\n    \\\"tag\\\": \"centrarchoid\",\\n    \\\"popularity\\\": 51652\\n  },\\n  {\\n    \\\"tag\\\": \"mesioincisal\",\\n    \\\"popularity\\\": 51500\\n  },\\n  {\\n    \\\"tag\\\": \"transbaikal\",\\n    \\\"popularity\\\": 51348\\n  },\\n  {\\n    \\\"tag\\\": \"silveriness\",\\n    \\\"popularity\\\": 51196\\n  },\\n  {\\n    \\\"tag\\\": \"costotomy\",\\n    \\\"popularity\\\": 51046\\n  },\\n  {\\n    \\\"tag\\\": \"caracore\",\\n    \\\"popularity\\\": 50896\\n  },\\n  {\\n    \\\"tag\\\": \"depotentiation\",\\n    \\\"popularity\\\": 50747\\n  },\\n  {\\n    \\\"tag\\\": \"glossoepiglottidean\",\\n    \\\"popularity\\\": 50598\\n  },\\n  {\\n    \\\"tag\\\": \"upswell\",\\n    \\\"popularity\\\": 50450\\n  },\\n  {\\n    \\\"tag\\\": \"flecnodal\",\\n    \\\"popularity\\\": 50303\\n  },\\n  {\\n    \\\"tag\\\": \"coventrate\",\\n    \\\"popularity\\\": 50157\\n  },\\n  {\\n    \\\"tag\\\": \"duchesse\",\\n    \\\"popularity\\\": 50011\\n  },\\n  {\\n    \\\"tag\\\": \"excisemanship trophied\",\\n    \\\"popularity\\\": 49866\\n  },\\n  {\\n    \\\"tag\\\": \"cytinaceous\",\\n    \\\"popularity\\\": 49721\\n  },\\n  {\\n    \\\"tag\\\": \"assuringly\",\\n    \\\"popularity\\\": 49577\\n  },\\n  {\\n    \\\"tag\\\": \"unconducted upliftitis\",\\n    \\\"popularity\\\": 49434\\n  },\\n  {\\n    \\\"tag\\\": \"rachicentesis\",\\n    \\\"popularity\\\": 49292\\n  },\\n  {\\n    \\\"tag\\\": \"antiangular\",\\n    \\\"popularity\\\": 49150\\n  },\\n  {\\n    \\\"tag\\\": \"advisal\",\\n    \\\"popularity\\\": 49008\\n  },\\n  {\\n    \\\"tag\\\": \"birdcatcher\",\\n    \\\"popularity\\\": 48868\\n  },\\n  {\\n    \\\"tag\\\": \"secularistic\",\\n    \\\"popularity\\\": 48728\\n  },\\n  {\\n    \\\"tag\\\": \"grandeeism superinformal\",\\n    \\\"popularity\\\": 48588\\n  },\\n  {\\n    \\\"tag\\\": \"unapprehension\",\\n    \\\"popularity\\\": 48449\\n  },\\n  {\\n    \\\"tag\\\": \"excipulum\",\\n    \\\"popularity\\\": 48311\\n  },\\n  {\\n    \\\"tag\\\": \"decimole\",\\n    \\\"popularity\\\": 48174\\n  },\\n  {\\n    \\\"tag\\\": \"semidrachm\",\\n    \\\"popularity\\\": 48037\\n  },\\n  {\\n    \\\"tag\\\": \"uvulotome\",\\n    \\\"popularity\\\": 47901\\n  },\\n  {\\n    \\\"tag\\\": \"Lemaneaceae\",\\n    \\\"popularity\\\": 47765\\n  },\\n  {\\n    \\\"tag\\\": \"corrade\",\\n    \\\"popularity\\\": 47630\\n  },\\n  {\\n    \\\"tag\\\": \"Kuroshio\",\\n    \\\"popularity\\\": 47495\\n  },\\n  {\\n    \\\"tag\\\": \"Araliophyllum\",\\n    \\\"popularity\\\": 47361\\n  },\\n  {\\n    \\\"tag\\\": \"victoriousness cardiosphygmograph\",\\n    \\\"popularity\\\": 47228\\n  },\\n  {\\n    \\\"tag\\\": \"reinvent\",\\n    \\\"popularity\\\": 47095\\n  },\\n  {\\n    \\\"tag\\\": \"Macrotolagus\",\\n    \\\"popularity\\\": 46963\\n  },\\n  {\\n    \\\"tag\\\": \"strenuousness\",\\n    \\\"popularity\\\": 46831\\n  },\\n  {\\n    \\\"tag\\\": \"deviability\",\\n    \\\"popularity\\\": 46700\\n  },\\n  {\\n    \\\"tag\\\": \"phyllospondylous\",\\n    \\\"popularity\\\": 46570\\n  },\\n  {\\n    \\\"tag\\\": \"bisect rudderhole\",\\n    \\\"popularity\\\": 46440\\n  },\\n  {\\n    \\\"tag\\\": \"crownwork\",\\n    \\\"popularity\\\": 46311\\n  },\\n  {\\n    \\\"tag\\\": \"Ascalabota\",\\n    \\\"popularity\\\": 46182\\n  },\\n  {\\n    \\\"tag\\\": \"prostatomyomectomy\",\\n    \\\"popularity\\\": 46054\\n  },\\n  {\\n    \\\"tag\\\": \"neurosyphilis\",\\n    \\\"popularity\\\": 45926\\n  },\\n  {\\n    \\\"tag\\\": \"tabloid scraplet\",\\n    \\\"popularity\\\": 45799\\n  },\\n  {\\n    \\\"tag\\\": \"nonmedullated servility\",\\n    \\\"popularity\\\": 45673\\n  },\\n  {\\n    \\\"tag\\\": \"melopoeic practicalization\",\\n    \\\"popularity\\\": 45547\\n  },\\n  {\\n    \\\"tag\\\": \"nonrhythmic\",\\n    \\\"popularity\\\": 45421\\n  },\\n  {\\n    \\\"tag\\\": \"deplorer\",\\n    \\\"popularity\\\": 45296\\n  },\\n  {\\n    \\\"tag\\\": \"Ophion\",\\n    \\\"popularity\\\": 45172\\n  },\\n  {\\n    \\\"tag\\\": \"subprioress\",\\n    \\\"popularity\\\": 45048\\n  },\\n  {\\n    \\\"tag\\\": \"semiregular\",\\n    \\\"popularity\\\": 44925\\n  },\\n  {\\n    \\\"tag\\\": \"praelection\",\\n    \\\"popularity\\\": 44802\\n  },\\n  {\\n    \\\"tag\\\": \"discinct\",\\n    \\\"popularity\\\": 44680\\n  },\\n  {\\n    \\\"tag\\\": \"preplace\",\\n    \\\"popularity\\\": 44558\\n  },\\n  {\\n    \\\"tag\\\": \"paternoster\",\\n    \\\"popularity\\\": 44437\\n  },\\n  {\\n    \\\"tag\\\": \"suboccipital\",\\n    \\\"popularity\\\": 44316\\n  },\\n  {\\n    \\\"tag\\\": \"Teutophil\",\\n    \\\"popularity\\\": 44196\\n  },\\n  {\\n    \\\"tag\\\": \"tracheole\",\\n    \\\"popularity\\\": 44076\\n  },\\n  {\\n    \\\"tag\\\": \"subsmile\",\\n    \\\"popularity\\\": 43957\\n  },\\n  {\\n    \\\"tag\\\": \"nonapostatizing\",\\n    \\\"popularity\\\": 43839\\n  },\\n  {\\n    \\\"tag\\\": \"cleidotomy\",\\n    \\\"popularity\\\": 43720\\n  },\\n  {\\n    \\\"tag\\\": \"hingle\",\\n    \\\"popularity\\\": 43603\\n  },\\n  {\\n    \\\"tag\\\": \"jocoque\",\\n    \\\"popularity\\\": 43486\\n  },\\n  {\\n    \\\"tag\\\": \"trundler notidanian\",\\n    \\\"popularity\\\": 43369\\n  },\\n  {\\n    \\\"tag\\\": \"strangling misdaub\",\\n    \\\"popularity\\\": 43253\\n  },\\n  {\\n    \\\"tag\\\": \"noncancellable\",\\n    \\\"popularity\\\": 43137\\n  },\\n  {\\n    \\\"tag\\\": \"lavabo\",\\n    \\\"popularity\\\": 43022\\n  },\\n  {\\n    \\\"tag\\\": \"lanterloo\",\\n    \\\"popularity\\\": 42907\\n  },\\n  {\\n    \\\"tag\\\": \"uncitizenly\",\\n    \\\"popularity\\\": 42793\\n  },\\n  {\\n    \\\"tag\\\": \"autoturning\",\\n    \\\"popularity\\\": 42679\\n  },\\n  {\\n    \\\"tag\\\": \"Haganah\",\\n    \\\"popularity\\\": 42566\\n  },\\n  {\\n    \\\"tag\\\": \"Glecoma\",\\n    \\\"popularity\\\": 42453\\n  },\\n  {\\n    \\\"tag\\\": \"membered\",\\n    \\\"popularity\\\": 42341\\n  },\\n  {\\n    \\\"tag\\\": \"consuetudinal\",\\n    \\\"popularity\\\": 42229\\n  },\\n  {\\n    \\\"tag\\\": \"gatehouse\",\\n    \\\"popularity\\\": 42117\\n  },\\n  {\\n    \\\"tag\\\": \"tetherball\",\\n    \\\"popularity\\\": 42006\\n  },\\n  {\\n    \\\"tag\\\": \"counterrevolutionist numismatical\",\\n    \\\"popularity\\\": 41896\\n  },\\n  {\\n    \\\"tag\\\": \"pagehood plateiasmus\",\\n    \\\"popularity\\\": 41786\\n  },\\n  {\\n    \\\"tag\\\": \"pelterer\",\\n    \\\"popularity\\\": 41676\\n  },\\n  {\\n    \\\"tag\\\": \"splenemphraxis\",\\n    \\\"popularity\\\": 41567\\n  },\\n  {\\n    \\\"tag\\\": \"Crypturidae\",\\n    \\\"popularity\\\": 41458\\n  },\\n  {\\n    \\\"tag\\\": \"caboodle\",\\n    \\\"popularity\\\": 41350\\n  },\\n  {\\n    \\\"tag\\\": \"Filaria\",\\n    \\\"popularity\\\": 41242\\n  },\\n  {\\n    \\\"tag\\\": \"noninvincibility\",\\n    \\\"popularity\\\": 41135\\n  },\\n  {\\n    \\\"tag\\\": \"preadvertisement\",\\n    \\\"popularity\\\": 41028\\n  },\\n  {\\n    \\\"tag\\\": \"bathrobe\",\\n    \\\"popularity\\\": 40921\\n  },\\n  {\\n    \\\"tag\\\": \"nitrifier\",\\n    \\\"popularity\\\": 40815\\n  },\\n  {\\n    \\\"tag\\\": \"furthermore\",\\n    \\\"popularity\\\": 40709\\n  },\\n  {\\n    \\\"tag\\\": \"recrate\",\\n    \\\"popularity\\\": 40604\\n  },\\n  {\\n    \\\"tag\\\": \"inexist\",\\n    \\\"popularity\\\": 40499\\n  },\\n  {\\n    \\\"tag\\\": \"Mocoan\",\\n    \\\"popularity\\\": 40395\\n  },\\n  {\\n    \\\"tag\\\": \"forint\",\\n    \\\"popularity\\\": 40291\\n  },\\n  {\\n    \\\"tag\\\": \"cardiomyoliposis\",\\n    \\\"popularity\\\": 40187\\n  },\\n  {\\n    \\\"tag\\\": \"channeling\",\\n    \\\"popularity\\\": 40084\\n  },\\n  {\\n    \\\"tag\\\": \"quebrachine\",\\n    \\\"popularity\\\": 39981\\n  },\\n  {\\n    \\\"tag\\\": \"magistery\",\\n    \\\"popularity\\\": 39879\\n  },\\n  {\\n    \\\"tag\\\": \"koko\",\\n    \\\"popularity\\\": 39777\\n  },\\n  {\\n    \\\"tag\\\": \"nobilify\",\\n    \\\"popularity\\\": 39676\\n  },\\n  {\\n    \\\"tag\\\": \"articulate taprooted\",\\n    \\\"popularity\\\": 39575\\n  },\\n  {\\n    \\\"tag\\\": \"cardiotonic Nicaragua\",\\n    \\\"popularity\\\": 39474\\n  },\\n  {\\n    \\\"tag\\\": \"assertiveness\",\\n    \\\"popularity\\\": 39374\\n  },\\n  {\\n    \\\"tag\\\": \"springtail\",\\n    \\\"popularity\\\": 39274\\n  },\\n  {\\n    \\\"tag\\\": \"spontoon\",\\n    \\\"popularity\\\": 39174\\n  },\\n  {\\n    \\\"tag\\\": \"plesiobiosis\",\\n    \\\"popularity\\\": 39075\\n  },\\n  {\\n    \\\"tag\\\": \"rooinek\",\\n    \\\"popularity\\\": 38976\\n  },\\n  {\\n    \\\"tag\\\": \"hairif falsehood\",\\n    \\\"popularity\\\": 38878\\n  },\\n  {\\n    \\\"tag\\\": \"synodally\",\\n    \\\"popularity\\\": 38780\\n  },\\n  {\\n    \\\"tag\\\": \"biodynamics\",\\n    \\\"popularity\\\": 38683\\n  },\\n  {\\n    \\\"tag\\\": \"trickling\",\\n    \\\"popularity\\\": 38585\\n  },\\n  {\\n    \\\"tag\\\": \"oxfly daystar\",\\n    \\\"popularity\\\": 38489\\n  },\\n  {\\n    \\\"tag\\\": \"epicycloidal\",\\n    \\\"popularity\\\": 38392\\n  },\\n  {\\n    \\\"tag\\\": \"shorthand\",\\n    \\\"popularity\\\": 38296\\n  },\\n  {\\n    \\\"tag\\\": \"herpolhode\",\\n    \\\"popularity\\\": 38201\\n  },\\n  {\\n    \\\"tag\\\": \"polysynthesism\",\\n    \\\"popularity\\\": 38105\\n  },\\n  {\\n    \\\"tag\\\": \"cany\",\\n    \\\"popularity\\\": 38010\\n  },\\n  {\\n    \\\"tag\\\": \"sideage\",\\n    \\\"popularity\\\": 37916\\n  },\\n  {\\n    \\\"tag\\\": \"strainableness\",\\n    \\\"popularity\\\": 37822\\n  },\\n  {\\n    \\\"tag\\\": \"superformidable\",\\n    \\\"popularity\\\": 37728\\n  },\\n  {\\n    \\\"tag\\\": \"slendang\",\\n    \\\"popularity\\\": 37634\\n  },\\n  {\\n    \\\"tag\\\": \"impropriation\",\\n    \\\"popularity\\\": 37541\\n  },\\n  {\\n    \\\"tag\\\": \"ficklehearted\",\\n    \\\"popularity\\\": 37449\\n  },\\n  {\\n    \\\"tag\\\": \"wintrify\",\\n    \\\"popularity\\\": 37356\\n  },\\n  {\\n    \\\"tag\\\": \"geomorphogenist\",\\n    \\\"popularity\\\": 37264\\n  },\\n  {\\n    \\\"tag\\\": \"smuggleable\",\\n    \\\"popularity\\\": 37173\\n  },\\n  {\\n    \\\"tag\\\": \"delapsion\",\\n    \\\"popularity\\\": 37081\\n  },\\n  {\\n    \\\"tag\\\": \"projective\",\\n    \\\"popularity\\\": 36990\\n  },\\n  {\\n    \\\"tag\\\": \"unglue exfoliation\",\\n    \\\"popularity\\\": 36900\\n  },\\n  {\\n    \\\"tag\\\": \"Acerae\",\\n    \\\"popularity\\\": 36810\\n  },\\n  {\\n    \\\"tag\\\": \"unstaged\",\\n    \\\"popularity\\\": 36720\\n  },\\n  {\\n    \\\"tag\\\": \"ranal\",\\n    \\\"popularity\\\": 36630\\n  },\\n  {\\n    \\\"tag\\\": \"worrier\",\\n    \\\"popularity\\\": 36541\\n  },\\n  {\\n    \\\"tag\\\": \"unhid\",\\n    \\\"popularity\\\": 36452\\n  },\\n  {\\n    \\\"tag\\\": \"adequation\",\\n    \\\"popularity\\\": 36363\\n  },\\n  {\\n    \\\"tag\\\": \"strongylid Sokotri\",\\n    \\\"popularity\\\": 36275\\n  },\\n  {\\n    \\\"tag\\\": \"fumingly\",\\n    \\\"popularity\\\": 36187\\n  },\\n  {\\n    \\\"tag\\\": \"gynosporangium phaenogenetic\",\\n    \\\"popularity\\\": 36100\\n  },\\n  {\\n    \\\"tag\\\": \"uniunguiculate\",\\n    \\\"popularity\\\": 36012\\n  },\\n  {\\n    \\\"tag\\\": \"prudelike\",\\n    \\\"popularity\\\": 35926\\n  },\\n  {\\n    \\\"tag\\\": \"seminomata\",\\n    \\\"popularity\\\": 35839\\n  },\\n  {\\n    \\\"tag\\\": \"trinklet\",\\n    \\\"popularity\\\": 35753\\n  },\\n  {\\n    \\\"tag\\\": \"risorial\",\\n    \\\"popularity\\\": 35667\\n  },\\n  {\\n    \\\"tag\\\": \"pericardiocentesis\",\\n    \\\"popularity\\\": 35581\\n  },\\n  {\\n    \\\"tag\\\": \"filmist\",\\n    \\\"popularity\\\": 35496\\n  },\\n  {\\n    \\\"tag\\\": \"Nana\",\\n    \\\"popularity\\\": 35411\\n  },\\n  {\\n    \\\"tag\\\": \"cynipoid\",\\n    \\\"popularity\\\": 35326\\n  },\\n  {\\n    \\\"tag\\\": \"cteniform\",\\n    \\\"popularity\\\": 35242\\n  },\\n  {\\n    \\\"tag\\\": \"semiflex\",\\n    \\\"popularity\\\": 35158\\n  },\\n  {\\n    \\\"tag\\\": \"solstitially\",\\n    \\\"popularity\\\": 35074\\n  },\\n  {\\n    \\\"tag\\\": \"Algarsife\",\\n    \\\"popularity\\\": 34991\\n  },\\n  {\\n    \\\"tag\\\": \"noncriminal\",\\n    \\\"popularity\\\": 34908\\n  },\\n  {\\n    \\\"tag\\\": \"compassion\",\\n    \\\"popularity\\\": 34825\\n  },\\n  {\\n    \\\"tag\\\": \"Buddhic\",\\n    \\\"popularity\\\": 34743\\n  },\\n  {\\n    \\\"tag\\\": \"vellicative dactylically hotfoot\",\\n    \\\"popularity\\\": 34661\\n  },\\n  {\\n    \\\"tag\\\": \"chicory\",\\n    \\\"popularity\\\": 34579\\n  },\\n  {\\n    \\\"tag\\\": \"transperitoneally\",\\n    \\\"popularity\\\": 34497\\n  },\\n  {\\n    \\\"tag\\\": \"pennae\",\\n    \\\"popularity\\\": 34416\\n  },\\n  {\\n    \\\"tag\\\": \"Flamandize\",\\n    \\\"popularity\\\": 34335\\n  },\\n  {\\n    \\\"tag\\\": \"underviewer\",\\n    \\\"popularity\\\": 34254\\n  },\\n  {\\n    \\\"tag\\\": \"assoil\",\\n    \\\"popularity\\\": 34174\\n  },\\n  {\\n    \\\"tag\\\": \"saccharobacillus\",\\n    \\\"popularity\\\": 34094\\n  },\\n  {\\n    \\\"tag\\\": \"biacetylene\",\\n    \\\"popularity\\\": 34014\\n  },\\n  {\\n    \\\"tag\\\": \"mouchardism\",\\n    \\\"popularity\\\": 33935\\n  },\\n  {\\n    \\\"tag\\\": \"anisomeric\",\\n    \\\"popularity\\\": 33856\\n  },\\n  {\\n    \\\"tag\\\": \"digestive\",\\n    \\\"popularity\\\": 33777\\n  },\\n  {\\n    \\\"tag\\\": \"darlingly\",\\n    \\\"popularity\\\": 33698\\n  },\\n  {\\n    \\\"tag\\\": \"liman\",\\n    \\\"popularity\\\": 33620\\n  },\\n  {\\n    \\\"tag\\\": \"soldanrie\",\\n    \\\"popularity\\\": 33542\\n  },\\n  {\\n    \\\"tag\\\": \"sully\",\\n    \\\"popularity\\\": 33464\\n  },\\n  {\\n    \\\"tag\\\": \"brightsmith\",\\n    \\\"popularity\\\": 33387\\n  },\\n  {\\n    \\\"tag\\\": \"inwrap antiliturgist ureterocervical\",\\n    \\\"popularity\\\": 33309\\n  },\\n  {\\n    \\\"tag\\\": \"discommodity\",\\n    \\\"popularity\\\": 33232\\n  },\\n  {\\n    \\\"tag\\\": \"typical aggrandizer\",\\n    \\\"popularity\\\": 33156\\n  },\\n  {\\n    \\\"tag\\\": \"xenogeny\",\\n    \\\"popularity\\\": 33079\\n  },\\n  {\\n    \\\"tag\\\": \"uncountrified\",\\n    \\\"popularity\\\": 33003\\n  },\\n  {\\n    \\\"tag\\\": \"Podarge\",\\n    \\\"popularity\\\": 32928\\n  },\\n  {\\n    \\\"tag\\\": \"uninterviewed\",\\n    \\\"popularity\\\": 32852\\n  },\\n  {\\n    \\\"tag\\\": \"underprior\",\\n    \\\"popularity\\\": 32777\\n  },\\n  {\\n    \\\"tag\\\": \"leiomyomatous\",\\n    \\\"popularity\\\": 32702\\n  },\\n  {\\n    \\\"tag\\\": \"postdysenteric\",\\n    \\\"popularity\\\": 32627\\n  },\\n  {\\n    \\\"tag\\\": \"Fusicladium\",\\n    \\\"popularity\\\": 32553\\n  },\\n  {\\n    \\\"tag\\\": \"Dulcinea\",\\n    \\\"popularity\\\": 32478\\n  },\\n  {\\n    \\\"tag\\\": \"interspersion\",\\n    \\\"popularity\\\": 32404\\n  },\\n  {\\n    \\\"tag\\\": \"preobligate\",\\n    \\\"popularity\\\": 32331\\n  },\\n  {\\n    \\\"tag\\\": \"subaggregate\",\\n    \\\"popularity\\\": 32257\\n  },\\n  {\\n    \\\"tag\\\": \"grammarianism\",\\n    \\\"popularity\\\": 32184\\n  },\\n  {\\n    \\\"tag\\\": \"palikar\",\\n    \\\"popularity\\\": 32111\\n  },\\n  {\\n    \\\"tag\\\": \"facileness\",\\n    \\\"popularity\\\": 32039\\n  },\\n  {\\n    \\\"tag\\\": \"deuterofibrinose\",\\n    \\\"popularity\\\": 31966\\n  },\\n  {\\n    \\\"tag\\\": \"pseudesthesia\",\\n    \\\"popularity\\\": 31894\\n  },\\n  {\\n    \\\"tag\\\": \"sedimentary\",\\n    \\\"popularity\\\": 31822\\n  },\\n  {\\n    \\\"tag\\\": \"typewrite\",\\n    \\\"popularity\\\": 31751\\n  },\\n  {\\n    \\\"tag\\\": \"immemorable\",\\n    \\\"popularity\\\": 31679\\n  },\\n  {\\n    \\\"tag\\\": \"Myrtus\",\\n    \\\"popularity\\\": 31608\\n  },\\n  {\\n    \\\"tag\\\": \"hauchecornite\",\\n    \\\"popularity\\\": 31537\\n  },\\n  {\\n    \\\"tag\\\": \"galleylike\",\\n    \\\"popularity\\\": 31467\\n  },\\n  {\\n    \\\"tag\\\": \"thimber\",\\n    \\\"popularity\\\": 31396\\n  },\\n  {\\n    \\\"tag\\\": \"Hegelianism\",\\n    \\\"popularity\\\": 31326\\n  },\\n  {\\n    \\\"tag\\\": \"strig\",\\n    \\\"popularity\\\": 31256\\n  },\\n  {\\n    \\\"tag\\\": \"skyre\",\\n    \\\"popularity\\\": 31187\\n  },\\n  {\\n    \\\"tag\\\": \"eupepticism\",\\n    \\\"popularity\\\": 31117\\n  },\\n  {\\n    \\\"tag\\\": \"eponymism\",\\n    \\\"popularity\\\": 31048\\n  },\\n  {\\n    \\\"tag\\\": \"flunkeyhood\",\\n    \\\"popularity\\\": 30979\\n  },\\n  {\\n    \\\"tag\\\": \"Abama\",\\n    \\\"popularity\\\": 30911\\n  },\\n  {\\n    \\\"tag\\\": \"adiadochokinesis\",\\n    \\\"popularity\\\": 30842\\n  },\\n  {\\n    \\\"tag\\\": \"spendthrifty\",\\n    \\\"popularity\\\": 30774\\n  },\\n  {\\n    \\\"tag\\\": \"chalcedony\",\\n    \\\"popularity\\\": 30706\\n  },\\n  {\\n    \\\"tag\\\": \"authorism\",\\n    \\\"popularity\\\": 30638\\n  },\\n  {\\n    \\\"tag\\\": \"nasturtium\",\\n    \\\"popularity\\\": 30571\\n  },\\n  {\\n    \\\"tag\\\": \"Acanthocereus\",\\n    \\\"popularity\\\": 30504\\n  },\\n  {\\n    \\\"tag\\\": \"uncollapsible\",\\n    \\\"popularity\\\": 30437\\n  },\\n  {\\n    \\\"tag\\\": \"excursionist\",\\n    \\\"popularity\\\": 30370\\n  },\\n  {\\n    \\\"tag\\\": \"fogbow\",\\n    \\\"popularity\\\": 30303\\n  },\\n  {\\n    \\\"tag\\\": \"overlie\",\\n    \\\"popularity\\\": 30237\\n  },\\n  {\\n    \\\"tag\\\": \"velours\",\\n    \\\"popularity\\\": 30171\\n  },\\n  {\\n    \\\"tag\\\": \"zoodendria madrigal stagbush\",\\n    \\\"popularity\\\": 30105\\n  },\\n  {\\n    \\\"tag\\\": \"imi\",\\n    \\\"popularity\\\": 30039\\n  },\\n  {\\n    \\\"tag\\\": \"cojudge\",\\n    \\\"popularity\\\": 29974\\n  },\\n  {\\n    \\\"tag\\\": \"depurate argal\",\\n    \\\"popularity\\\": 29909\\n  },\\n  {\\n    \\\"tag\\\": \"unrecognition\",\\n    \\\"popularity\\\": 29844\\n  },\\n  {\\n    \\\"tag\\\": \"paunchful\",\\n    \\\"popularity\\\": 29779\\n  },\\n  {\\n    \\\"tag\\\": \"invalued\",\\n    \\\"popularity\\\": 29714\\n  },\\n  {\\n    \\\"tag\\\": \"probang\",\\n    \\\"popularity\\\": 29650\\n  },\\n  {\\n    \\\"tag\\\": \"chetvert\",\\n    \\\"popularity\\\": 29586\\n  },\\n  {\\n    \\\"tag\\\": \"enactable\",\\n    \\\"popularity\\\": 29522\\n  },\\n  {\\n    \\\"tag\\\": \"detoxicate adhibit\",\\n    \\\"popularity\\\": 29458\\n  },\\n  {\\n    \\\"tag\\\": \"kullaite\",\\n    \\\"popularity\\\": 29395\\n  },\\n  {\\n    \\\"tag\\\": \"undazzling\",\\n    \\\"popularity\\\": 29332\\n  },\\n  {\\n    \\\"tag\\\": \"excalation\",\\n    \\\"popularity\\\": 29269\\n  },\\n  {\\n    \\\"tag\\\": \"sievings\",\\n    \\\"popularity\\\": 29206\\n  },\\n  {\\n    \\\"tag\\\": \"disenthral\",\\n    \\\"popularity\\\": 29143\\n  },\\n  {\\n    \\\"tag\\\": \"disinterestedly\",\\n    \\\"popularity\\\": 29081\\n  },\\n  {\\n    \\\"tag\\\": \"stanner\",\\n    \\\"popularity\\\": 29018\\n  },\\n  {\\n    \\\"tag\\\": \"recapitulative\",\\n    \\\"popularity\\\": 28956\\n  },\\n  {\\n    \\\"tag\\\": \"objectivist\",\\n    \\\"popularity\\\": 28895\\n  },\\n  {\\n    \\\"tag\\\": \"hypermetropia\",\\n    \\\"popularity\\\": 28833\\n  },\\n  {\\n    \\\"tag\\\": \"incumbency\",\\n    \\\"popularity\\\": 28772\\n  },\\n  {\\n    \\\"tag\\\": \"protegee\",\\n    \\\"popularity\\\": 28711\\n  },\\n  {\\n    \\\"tag\\\": \"zealotic\",\\n    \\\"popularity\\\": 28650\\n  },\\n  {\\n    \\\"tag\\\": \"predebit\",\\n    \\\"popularity\\\": 28589\\n  },\\n  {\\n    \\\"tag\\\": \"cupolar\",\\n    \\\"popularity\\\": 28528\\n  },\\n  {\\n    \\\"tag\\\": \"unattributed\",\\n    \\\"popularity\\\": 28468\\n  },\\n  {\\n    \\\"tag\\\": \"louisine\",\\n    \\\"popularity\\\": 28408\\n  },\\n  {\\n    \\\"tag\\\": \"illustrate\",\\n    \\\"popularity\\\": 28348\\n  },\\n  {\\n    \\\"tag\\\": \"inofficiousness\",\\n    \\\"popularity\\\": 28288\\n  },\\n  {\\n    \\\"tag\\\": \"Americawards\",\\n    \\\"popularity\\\": 28228\\n  },\\n  {\\n    \\\"tag\\\": \"foreflap\",\\n    \\\"popularity\\\": 28169\\n  },\\n  {\\n    \\\"tag\\\": \"eruditeness\",\\n    \\\"popularity\\\": 28110\\n  },\\n  {\\n    \\\"tag\\\": \"copiopsia\",\\n    \\\"popularity\\\": 28051\\n  },\\n  {\\n    \\\"tag\\\": \"sporuliferous\",\\n    \\\"popularity\\\": 27992\\n  },\\n  {\\n    \\\"tag\\\": \"muttering\",\\n    \\\"popularity\\\": 27934\\n  },\\n  {\\n    \\\"tag\\\": \"prepsychology adrip\",\\n    \\\"popularity\\\": 27875\\n  },\\n  {\\n    \\\"tag\\\": \"unfriendly\",\\n    \\\"popularity\\\": 27817\\n  },\\n  {\\n    \\\"tag\\\": \"sulphanilic\",\\n    \\\"popularity\\\": 27759\\n  },\\n  {\\n    \\\"tag\\\": \"Coelococcus\",\\n    \\\"popularity\\\": 27701\\n  },\\n  {\\n    \\\"tag\\\": \"undoubtfulness\",\\n    \\\"popularity\\\": 27643\\n  },\\n  {\\n    \\\"tag\\\": \"flaringly\",\\n    \\\"popularity\\\": 27586\\n  },\\n  {\\n    \\\"tag\\\": \"unordain\",\\n    \\\"popularity\\\": 27529\\n  },\\n  {\\n    \\\"tag\\\": \"fratchety\",\\n    \\\"popularity\\\": 27472\\n  },\\n  {\\n    \\\"tag\\\": \"decadentism dolefully\",\\n    \\\"popularity\\\": 27415\\n  },\\n  {\\n    \\\"tag\\\": \"synthronus\",\\n    \\\"popularity\\\": 27358\\n  },\\n  {\\n    \\\"tag\\\": \"maiid\",\\n    \\\"popularity\\\": 27301\\n  },\\n  {\\n    \\\"tag\\\": \"rhinobyon\",\\n    \\\"popularity\\\": 27245\\n  },\\n  {\\n    \\\"tag\\\": \"Didynamia\",\\n    \\\"popularity\\\": 27189\\n  },\\n  {\\n    \\\"tag\\\": \"millionairedom\",\\n    \\\"popularity\\\": 27133\\n  },\\n  {\\n    \\\"tag\\\": \"mulierine\",\\n    \\\"popularity\\\": 27077\\n  },\\n  {\\n    \\\"tag\\\": \"Mayo\",\\n    \\\"popularity\\\": 27021\\n  },\\n  {\\n    \\\"tag\\\": \"perceivedness\",\\n    \\\"popularity\\\": 26966\\n  },\\n  {\\n    \\\"tag\\\": \"unadoration\",\\n    \\\"popularity\\\": 26911\\n  },\\n  {\\n    \\\"tag\\\": \"regraft\",\\n    \\\"popularity\\\": 26856\\n  },\\n  {\\n    \\\"tag\\\": \"witch\",\\n    \\\"popularity\\\": 26801\\n  },\\n  {\\n    \\\"tag\\\": \"ungrow\",\\n    \\\"popularity\\\": 26746\\n  },\\n  {\\n    \\\"tag\\\": \"glossopharyngeus\",\\n    \\\"popularity\\\": 26691\\n  },\\n  {\\n    \\\"tag\\\": \"unstirrable\",\\n    \\\"popularity\\\": 26637\\n  },\\n  {\\n    \\\"tag\\\": \"synodsman\",\\n    \\\"popularity\\\": 26583\\n  },\\n  {\\n    \\\"tag\\\": \"placentalian\",\\n    \\\"popularity\\\": 26529\\n  },\\n  {\\n    \\\"tag\\\": \"corpulently\",\\n    \\\"popularity\\\": 26475\\n  },\\n  {\\n    \\\"tag\\\": \"photochromoscope\",\\n    \\\"popularity\\\": 26421\\n  },\\n  {\\n    \\\"tag\\\": \"indusiate retinasphaltum chokestrap\",\\n    \\\"popularity\\\": 26368\\n  },\\n  {\\n    \\\"tag\\\": \"murdrum\",\\n    \\\"popularity\\\": 26314\\n  },\\n  {\\n    \\\"tag\\\": \"belatedness\",\\n    \\\"popularity\\\": 26261\\n  },\\n  {\\n    \\\"tag\\\": \"Cochin\",\\n    \\\"popularity\\\": 26208\\n  },\\n  {\\n    \\\"tag\\\": \"Leonist\",\\n    \\\"popularity\\\": 26155\\n  },\\n  {\\n    \\\"tag\\\": \"keeker confined\",\\n    \\\"popularity\\\": 26102\\n  },\\n  {\\n    \\\"tag\\\": \"unintellectual\",\\n    \\\"popularity\\\": 26050\\n  },\\n  {\\n    \\\"tag\\\": \"nymphaline bait\",\\n    \\\"popularity\\\": 25997\\n  },\\n  {\\n    \\\"tag\\\": \"sarcosporidiosis\",\\n    \\\"popularity\\\": 25945\\n  },\\n  {\\n    \\\"tag\\\": \"catawamptiously\",\\n    \\\"popularity\\\": 25893\\n  },\\n  {\\n    \\\"tag\\\": \"outshame\",\\n    \\\"popularity\\\": 25841\\n  },\\n  {\\n    \\\"tag\\\": \"animalism\",\\n    \\\"popularity\\\": 25790\\n  },\\n  {\\n    \\\"tag\\\": \"epithalamial\",\\n    \\\"popularity\\\": 25738\\n  },\\n  {\\n    \\\"tag\\\": \"ganner\",\\n    \\\"popularity\\\": 25687\\n  },\\n  {\\n    \\\"tag\\\": \"desilicify\",\\n    \\\"popularity\\\": 25635\\n  },\\n  {\\n    \\\"tag\\\": \"dandyism\",\\n    \\\"popularity\\\": 25584\\n  },\\n  {\\n    \\\"tag\\\": \"hyleg\",\\n    \\\"popularity\\\": 25533\\n  },\\n  {\\n    \\\"tag\\\": \"photophysical\",\\n    \\\"popularity\\\": 25483\\n  },\\n  {\\n    \\\"tag\\\": \"underload\",\\n    \\\"popularity\\\": 25432\\n  },\\n  {\\n    \\\"tag\\\": \"unintrusive\",\\n    \\\"popularity\\\": 25382\\n  },\\n  {\\n    \\\"tag\\\": \"succinamic\",\\n    \\\"popularity\\\": 25331\\n  },\\n  {\\n    \\\"tag\\\": \"matchy\",\\n    \\\"popularity\\\": 25281\\n  },\\n  {\\n    \\\"tag\\\": \"concordal\",\\n    \\\"popularity\\\": 25231\\n  },\\n  {\\n    \\\"tag\\\": \"exteriority\",\\n    \\\"popularity\\\": 25181\\n  },\\n  {\\n    \\\"tag\\\": \"sterculiad\",\\n    \\\"popularity\\\": 25132\\n  },\\n  {\\n    \\\"tag\\\": \"sulfoxylic\",\\n    \\\"popularity\\\": 25082\\n  },\\n  {\\n    \\\"tag\\\": \"oversubscription\",\\n    \\\"popularity\\\": 25033\\n  },\\n  {\\n    \\\"tag\\\": \"chiasmic\",\\n    \\\"popularity\\\": 24984\\n  },\\n  {\\n    \\\"tag\\\": \"pseudoparthenogenesis\",\\n    \\\"popularity\\\": 24935\\n  },\\n  {\\n    \\\"tag\\\": \"indorse\",\\n    \\\"popularity\\\": 24886\\n  },\\n  {\\n    \\\"tag\\\": \"Krishnaite\",\\n    \\\"popularity\\\": 24837\\n  },\\n  {\\n    \\\"tag\\\": \"calcinize\",\\n    \\\"popularity\\\": 24788\\n  },\\n  {\\n    \\\"tag\\\": \"rhodium\",\\n    \\\"popularity\\\": 24740\\n  },\\n  {\\n    \\\"tag\\\": \"tragopan\",\\n    \\\"popularity\\\": 24692\\n  },\\n  {\\n    \\\"tag\\\": \"overwhelmingly\",\\n    \\\"popularity\\\": 24643\\n  },\\n  {\\n    \\\"tag\\\": \"procidence accorporate\",\\n    \\\"popularity\\\": 24595\\n  },\\n  {\\n    \\\"tag\\\": \"polemize speelless\",\\n    \\\"popularity\\\": 24548\\n  },\\n  {\\n    \\\"tag\\\": \"radiocarpal goran\",\\n    \\\"popularity\\\": 24500\\n  },\\n  {\\n    \\\"tag\\\": \"counteroffer Pelodytes\",\\n    \\\"popularity\\\": 24452\\n  },\\n  {\\n    \\\"tag\\\": \"lionhearted\",\\n    \\\"popularity\\\": 24405\\n  },\\n  {\\n    \\\"tag\\\": \"paramastoid\",\\n    \\\"popularity\\\": 24358\\n  },\\n  {\\n    \\\"tag\\\": \"murine\",\\n    \\\"popularity\\\": 24310\\n  },\\n  {\\n    \\\"tag\\\": \"woodbined\",\\n    \\\"popularity\\\": 24263\\n  },\\n  {\\n    \\\"tag\\\": \"packthread\",\\n    \\\"popularity\\\": 24217\\n  },\\n  {\\n    \\\"tag\\\": \"citreous\",\\n    \\\"popularity\\\": 24170\\n  },\\n  {\\n    \\\"tag\\\": \"unfallaciously\",\\n    \\\"popularity\\\": 24123\\n  },\\n  {\\n    \\\"tag\\\": \"tentwork reincarnadine\",\\n    \\\"popularity\\\": 24077\\n  },\\n  {\\n    \\\"tag\\\": \"verminousness\",\\n    \\\"popularity\\\": 24030\\n  },\\n  {\\n    \\\"tag\\\": \"sillometer\",\\n    \\\"popularity\\\": 23984\\n  },\\n  {\\n    \\\"tag\\\": \"jointy\",\\n    \\\"popularity\\\": 23938\\n  },\\n  {\\n    \\\"tag\\\": \"streptolysin\",\\n    \\\"popularity\\\": 23892\\n  },\\n  {\\n    \\\"tag\\\": \"Florentinism\",\\n    \\\"popularity\\\": 23847\\n  },\\n  {\\n    \\\"tag\\\": \"monosomatous\",\\n    \\\"popularity\\\": 23801\\n  },\\n  {\\n    \\\"tag\\\": \"capsulociliary\",\\n    \\\"popularity\\\": 23756\\n  },\\n  {\\n    \\\"tag\\\": \"organum\",\\n    \\\"popularity\\\": 23710\\n  },\\n  {\\n    \\\"tag\\\": \"overtly\",\\n    \\\"popularity\\\": 23665\\n  },\\n  {\\n    \\\"tag\\\": \"ophthalmoscopical\",\\n    \\\"popularity\\\": 23620\\n  },\\n  {\\n    \\\"tag\\\": \"supposititiously\",\\n    \\\"popularity\\\": 23575\\n  },\\n  {\\n    \\\"tag\\\": \"radiochemistry\",\\n    \\\"popularity\\\": 23530\\n  },\\n  {\\n    \\\"tag\\\": \"flaxtail\",\\n    \\\"popularity\\\": 23486\\n  },\\n  {\\n    \\\"tag\\\": \"pretympanic\",\\n    \\\"popularity\\\": 23441\\n  },\\n  {\\n    \\\"tag\\\": \"auscultation\",\\n    \\\"popularity\\\": 23397\\n  },\\n  {\\n    \\\"tag\\\": \"hairdresser\",\\n    \\\"popularity\\\": 23352\\n  },\\n  {\\n    \\\"tag\\\": \"chaffless\",\\n    \\\"popularity\\\": 23308\\n  },\\n  {\\n    \\\"tag\\\": \"polioencephalitis\",\\n    \\\"popularity\\\": 23264\\n  },\\n  {\\n    \\\"tag\\\": \"axolotl\",\\n    \\\"popularity\\\": 23220\\n  },\\n  {\\n    \\\"tag\\\": \"smous\",\\n    \\\"popularity\\\": 23177\\n  },\\n  {\\n    \\\"tag\\\": \"morgen disenamour toothed\",\\n    \\\"popularity\\\": 23133\\n  },\\n  {\\n    \\\"tag\\\": \"chaiseless\",\\n    \\\"popularity\\\": 23089\\n  },\\n  {\\n    \\\"tag\\\": \"frugally\",\\n    \\\"popularity\\\": 23046\\n  },\\n  {\\n    \\\"tag\\\": \"combustive antievolutionist cinenegative\",\\n    \\\"popularity\\\": 23003\\n  },\\n  {\\n    \\\"tag\\\": \"malacolite\",\\n    \\\"popularity\\\": 22960\\n  },\\n  {\\n    \\\"tag\\\": \"borne\",\\n    \\\"popularity\\\": 22917\\n  },\\n  {\\n    \\\"tag\\\": \"mercaptole\",\\n    \\\"popularity\\\": 22874\\n  },\\n  {\\n    \\\"tag\\\": \"judicatory\",\\n    \\\"popularity\\\": 22831\\n  },\\n  {\\n    \\\"tag\\\": \"noctivagation\",\\n    \\\"popularity\\\": 22789\\n  },\\n  {\\n    \\\"tag\\\": \"synthete\",\\n    \\\"popularity\\\": 22746\\n  },\\n  {\\n    \\\"tag\\\": \"tomboyism\",\\n    \\\"popularity\\\": 22704\\n  },\\n  {\\n    \\\"tag\\\": \"serranoid\",\\n    \\\"popularity\\\": 22661\\n  },\\n  {\\n    \\\"tag\\\": \"impostorism\",\\n    \\\"popularity\\\": 22619\\n  },\\n  {\\n    \\\"tag\\\": \"flagellosis Talitha\",\\n    \\\"popularity\\\": 22577\\n  },\\n  {\\n    \\\"tag\\\": \"pseudoviscous\",\\n    \\\"popularity\\\": 22535\\n  },\\n  {\\n    \\\"tag\\\": \"Galleriidae\",\\n    \\\"popularity\\\": 22494\\n  },\\n  {\\n    \\\"tag\\\": \"undulation didelph Comintern\",\\n    \\\"popularity\\\": 22452\\n  },\\n  {\\n    \\\"tag\\\": \"triangulopyramidal\",\\n    \\\"popularity\\\": 22411\\n  },\\n  {\\n    \\\"tag\\\": \"middlings\",\\n    \\\"popularity\\\": 22369\\n  },\\n  {\\n    \\\"tag\\\": \"piperazin\",\\n    \\\"popularity\\\": 22328\\n  },\\n  {\\n    \\\"tag\\\": \"endostitis\",\\n    \\\"popularity\\\": 22287\\n  },\\n  {\\n    \\\"tag\\\": \"swordlike\",\\n    \\\"popularity\\\": 22246\\n  },\\n  {\\n    \\\"tag\\\": \"forthwith\",\\n    \\\"popularity\\\": 22205\\n  },\\n  {\\n    \\\"tag\\\": \"menaceful\",\\n    \\\"popularity\\\": 22164\\n  },\\n  {\\n    \\\"tag\\\": \"explantation defective\",\\n    \\\"popularity\\\": 22123\\n  },\\n  {\\n    \\\"tag\\\": \"arrear\",\\n    \\\"popularity\\\": 22083\\n  },\\n  {\\n    \\\"tag\\\": \"engraft\",\\n    \\\"popularity\\\": 22042\\n  },\\n  {\\n    \\\"tag\\\": \"revolunteer\",\\n    \\\"popularity\\\": 22002\\n  },\\n  {\\n    \\\"tag\\\": \"foliaceous\",\\n    \\\"popularity\\\": 21962\\n  },\\n  {\\n    \\\"tag\\\": \"pseudograph\",\\n    \\\"popularity\\\": 21922\\n  },\\n  {\\n    \\\"tag\\\": \"maenaite\",\\n    \\\"popularity\\\": 21882\\n  },\\n  {\\n    \\\"tag\\\": \"interfinger\",\\n    \\\"popularity\\\": 21842\\n  },\\n  {\\n    \\\"tag\\\": \"macroscopically\",\\n    \\\"popularity\\\": 21802\\n  },\\n  {\\n    \\\"tag\\\": \"bluewood\",\\n    \\\"popularity\\\": 21762\\n  },\\n  {\\n    \\\"tag\\\": \"chikara\",\\n    \\\"popularity\\\": 21723\\n  },\\n  {\\n    \\\"tag\\\": \"reprehension diazeuxis nickelous\",\\n    \\\"popularity\\\": 21683\\n  },\\n  {\\n    \\\"tag\\\": \"vacuation\",\\n    \\\"popularity\\\": 21644\\n  },\\n  {\\n    \\\"tag\\\": \"Sartish\",\\n    \\\"popularity\\\": 21605\\n  },\\n  {\\n    \\\"tag\\\": \"pseudogyny\",\\n    \\\"popularity\\\": 21566\\n  },\\n  {\\n    \\\"tag\\\": \"friedcake\",\\n    \\\"popularity\\\": 21527\\n  },\\n  {\\n    \\\"tag\\\": \"thraw\",\\n    \\\"popularity\\\": 21488\\n  },\\n  {\\n    \\\"tag\\\": \"bifid\",\\n    \\\"popularity\\\": 21449\\n  },\\n  {\\n    \\\"tag\\\": \"truthlessly\",\\n    \\\"popularity\\\": 21411\\n  },\\n  {\\n    \\\"tag\\\": \"lungy\",\\n    \\\"popularity\\\": 21372\\n  },\\n  {\\n    \\\"tag\\\": \"fluoborite\",\\n    \\\"popularity\\\": 21334\\n  },\\n  {\\n    \\\"tag\\\": \"anthropolithic\",\\n    \\\"popularity\\\": 21295\\n  },\\n  {\\n    \\\"tag\\\": \"coachee straw\",\\n    \\\"popularity\\\": 21257\\n  },\\n  {\\n    \\\"tag\\\": \"dehorner Grecize\",\\n    \\\"popularity\\\": 21219\\n  },\\n  {\\n    \\\"tag\\\": \"spondylopyosis\",\\n    \\\"popularity\\\": 21181\\n  },\\n  {\\n    \\\"tag\\\": \"institutionary\",\\n    \\\"popularity\\\": 21143\\n  },\\n  {\\n    \\\"tag\\\": \"agentry\",\\n    \\\"popularity\\\": 21105\\n  },\\n  {\\n    \\\"tag\\\": \"musing bietle\",\\n    \\\"popularity\\\": 21068\\n  },\\n  {\\n    \\\"tag\\\": \"cormophyte\",\\n    \\\"popularity\\\": 21030\\n  },\\n  {\\n    \\\"tag\\\": \"semielliptic\",\\n    \\\"popularity\\\": 20993\\n  },\\n  {\\n    \\\"tag\\\": \"ependytes\",\\n    \\\"popularity\\\": 20955\\n  },\\n  {\\n    \\\"tag\\\": \"coachmaster\",\\n    \\\"popularity\\\": 20918\\n  },\\n  {\\n    \\\"tag\\\": \"overexuberant\",\\n    \\\"popularity\\\": 20881\\n  },\\n  {\\n    \\\"tag\\\": \"selectable\",\\n    \\\"popularity\\\": 20844\\n  },\\n  {\\n    \\\"tag\\\": \"saclike\",\\n    \\\"popularity\\\": 20807\\n  },\\n  {\\n    \\\"tag\\\": \"mullion\",\\n    \\\"popularity\\\": 20770\\n  },\\n  {\\n    \\\"tag\\\": \"pantheonize prevalency\",\\n    \\\"popularity\\\": 20733\\n  },\\n  {\\n    \\\"tag\\\": \"trophosperm\",\\n    \\\"popularity\\\": 20697\\n  },\\n  {\\n    \\\"tag\\\": \"paraphrasist\",\\n    \\\"popularity\\\": 20660\\n  },\\n  {\\n    \\\"tag\\\": \"undercarry\",\\n    \\\"popularity\\\": 20624\\n  },\\n  {\\n    \\\"tag\\\": \"thallogenic\",\\n    \\\"popularity\\\": 20587\\n  },\\n  {\\n    \\\"tag\\\": \"bulgy forbid\",\\n    \\\"popularity\\\": 20551\\n  },\\n  {\\n    \\\"tag\\\": \"proliquor gratulatory\",\\n    \\\"popularity\\\": 20515\\n  },\\n  {\\n    \\\"tag\\\": \"booker\",\\n    \\\"popularity\\\": 20479\\n  },\\n  {\\n    \\\"tag\\\": \"wizen\",\\n    \\\"popularity\\\": 20443\\n  },\\n  {\\n    \\\"tag\\\": \"synchondrosially\",\\n    \\\"popularity\\\": 20407\\n  },\\n  {\\n    \\\"tag\\\": \"herbless\",\\n    \\\"popularity\\\": 20371\\n  },\\n  {\\n    \\\"tag\\\": \"arfvedsonite\",\\n    \\\"popularity\\\": 20336\\n  },\\n  {\\n    \\\"tag\\\": \"Neuroptera\",\\n    \\\"popularity\\\": 20300\\n  },\\n  {\\n    \\\"tag\\\": \"fingerstone\",\\n    \\\"popularity\\\": 20265\\n  },\\n  {\\n    \\\"tag\\\": \"Odontoglossae\",\\n    \\\"popularity\\\": 20229\\n  },\\n  {\\n    \\\"tag\\\": \"transmigrator\",\\n    \\\"popularity\\\": 20194\\n  },\\n  {\\n    \\\"tag\\\": \"Dehaites\",\\n    \\\"popularity\\\": 20159\\n  },\\n  {\\n    \\\"tag\\\": \"Molinist\",\\n    \\\"popularity\\\": 20124\\n  },\\n  {\\n    \\\"tag\\\": \"novelistic\",\\n    \\\"popularity\\\": 20089\\n  },\\n  {\\n    \\\"tag\\\": \"astelic\",\\n    \\\"popularity\\\": 20054\\n  },\\n  {\\n    \\\"tag\\\": \"pyelometry\",\\n    \\\"popularity\\\": 20019\\n  },\\n  {\\n    \\\"tag\\\": \"pigmentation\",\\n    \\\"popularity\\\": 19984\\n  },\\n  {\\n    \\\"tag\\\": \"epinaos\",\\n    \\\"popularity\\\": 19950\\n  },\\n  {\\n    \\\"tag\\\": \"outdare\",\\n    \\\"popularity\\\": 19915\\n  },\\n  {\\n    \\\"tag\\\": \"Funje philaristocracy\",\\n    \\\"popularity\\\": 19881\\n  },\\n  {\\n    \\\"tag\\\": \"keddah\",\\n    \\\"popularity\\\": 19846\\n  },\\n  {\\n    \\\"tag\\\": \"axoidean\",\\n    \\\"popularity\\\": 19812\\n  },\\n  {\\n    \\\"tag\\\": \"ovule\",\\n    \\\"popularity\\\": 19778\\n  },\\n  {\\n    \\\"tag\\\": \"solidify\",\\n    \\\"popularity\\\": 19744\\n  },\\n  {\\n    \\\"tag\\\": \"noncelestial\",\\n    \\\"popularity\\\": 19710\\n  },\\n  {\\n    \\\"tag\\\": \"overmultiplication\",\\n    \\\"popularity\\\": 19676\\n  },\\n  {\\n    \\\"tag\\\": \"hexatetrahedron\",\\n    \\\"popularity\\\": 19642\\n  },\\n  {\\n    \\\"tag\\\": \"pliciform\",\\n    \\\"popularity\\\": 19609\\n  },\\n  {\\n    \\\"tag\\\": \"zimbalon\",\\n    \\\"popularity\\\": 19575\\n  },\\n  {\\n    \\\"tag\\\": \"annexational\",\\n    \\\"popularity\\\": 19542\\n  },\\n  {\\n    \\\"tag\\\": \"eurhodol\",\\n    \\\"popularity\\\": 19508\\n  },\\n  {\\n    \\\"tag\\\": \"yark\",\\n    \\\"popularity\\\": 19475\\n  },\\n  {\\n    \\\"tag\\\": \"illegality nitroalizarin\",\\n    \\\"popularity\\\": 19442\\n  },\\n  {\\n    \\\"tag\\\": \"quadratum\",\\n    \\\"popularity\\\": 19409\\n  },\\n  {\\n    \\\"tag\\\": \"saccharine\",\\n    \\\"popularity\\\": 19376\\n  },\\n  {\\n    \\\"tag\\\": \"unemploy\",\\n    \\\"popularity\\\": 19343\\n  },\\n  {\\n    \\\"tag\\\": \"uniclinal unipotent\",\\n    \\\"popularity\\\": 19310\\n  },\\n  {\\n    \\\"tag\\\": \"turbo\",\\n    \\\"popularity\\\": 19277\\n  },\\n  {\\n    \\\"tag\\\": \"sybarism\",\\n    \\\"popularity\\\": 19244\\n  },\\n  {\\n    \\\"tag\\\": \"motacilline\",\\n    \\\"popularity\\\": 19212\\n  },\\n  {\\n    \\\"tag\\\": \"weaselly\",\\n    \\\"popularity\\\": 19179\\n  },\\n  {\\n    \\\"tag\\\": \"plastid\",\\n    \\\"popularity\\\": 19147\\n  },\\n  {\\n    \\\"tag\\\": \"wasting\",\\n    \\\"popularity\\\": 19114\\n  },\\n  {\\n    \\\"tag\\\": \"begrime fluting\",\\n    \\\"popularity\\\": 19082\\n  },\\n  {\\n    \\\"tag\\\": \"Nephilinae\",\\n    \\\"popularity\\\": 19050\\n  },\\n  {\\n    \\\"tag\\\": \"disregardance\",\\n    \\\"popularity\\\": 19018\\n  },\\n  {\\n    \\\"tag\\\": \"Shakerlike\",\\n    \\\"popularity\\\": 18986\\n  },\\n  {\\n    \\\"tag\\\": \"uniped\",\\n    \\\"popularity\\\": 18954\\n  },\\n  {\\n    \\\"tag\\\": \"knap\",\\n    \\\"popularity\\\": 18922\\n  },\\n  {\\n    \\\"tag\\\": \"electivism undergardener\",\\n    \\\"popularity\\\": 18890\\n  },\\n  {\\n    \\\"tag\\\": \"hulverheaded\",\\n    \\\"popularity\\\": 18858\\n  },\\n  {\\n    \\\"tag\\\": \"unruptured\",\\n    \\\"popularity\\\": 18827\\n  },\\n  {\\n    \\\"tag\\\": \"solemnize credently\",\\n    \\\"popularity\\\": 18795\\n  },\\n  {\\n    \\\"tag\\\": \"pentastomoid possessingly\",\\n    \\\"popularity\\\": 18764\\n  },\\n  {\\n    \\\"tag\\\": \"octose\",\\n    \\\"popularity\\\": 18733\\n  },\\n  {\\n    \\\"tag\\\": \"psithurism indefensibility\",\\n    \\\"popularity\\\": 18701\\n  },\\n  {\\n    \\\"tag\\\": \"torrentuous cyanometer subcrenate\",\\n    \\\"popularity\\\": 18670\\n  },\\n  {\\n    \\\"tag\\\": \"photoplaywright tapaculo\",\\n    \\\"popularity\\\": 18639\\n  },\\n  {\\n    \\\"tag\\\": \"univalence\",\\n    \\\"popularity\\\": 18608\\n  },\\n  {\\n    \\\"tag\\\": \"Porthetria\",\\n    \\\"popularity\\\": 18577\\n  },\\n  {\\n    \\\"tag\\\": \"funambulo\",\\n    \\\"popularity\\\": 18546\\n  },\\n  {\\n    \\\"tag\\\": \"pedion\",\\n    \\\"popularity\\\": 18515\\n  },\\n  {\\n    \\\"tag\\\": \"horticulturally\",\\n    \\\"popularity\\\": 18485\\n  },\\n  {\\n    \\\"tag\\\": \"marennin\",\\n    \\\"popularity\\\": 18454\\n  },\\n  {\\n    \\\"tag\\\": \"horselaugh\",\\n    \\\"popularity\\\": 18423\\n  },\\n  {\\n    \\\"tag\\\": \"semiexecutive\",\\n    \\\"popularity\\\": 18393\\n  },\\n  {\\n    \\\"tag\\\": \"Monopteridae\",\\n    \\\"popularity\\\": 18363\\n  },\\n  {\\n    \\\"tag\\\": \"commonable\",\\n    \\\"popularity\\\": 18332\\n  },\\n  {\\n    \\\"tag\\\": \"dreariment\",\\n    \\\"popularity\\\": 18302\\n  },\\n  {\\n    \\\"tag\\\": \"disbud\",\\n    \\\"popularity\\\": 18272\\n  },\\n  {\\n    \\\"tag\\\": \"monocled\",\\n    \\\"popularity\\\": 18242\\n  },\\n  {\\n    \\\"tag\\\": \"hurlbarrow\",\\n    \\\"popularity\\\": 18212\\n  },\\n  {\\n    \\\"tag\\\": \"opiateproof\",\\n    \\\"popularity\\\": 18182\\n  },\\n  {\\n    \\\"tag\\\": \"Fahrenheit\",\\n    \\\"popularity\\\": 18152\\n  },\\n  {\\n    \\\"tag\\\": \"writhed\",\\n    \\\"popularity\\\": 18122\\n  },\\n  {\\n    \\\"tag\\\": \"Volstead\",\\n    \\\"popularity\\\": 18093\\n  },\\n  {\\n    \\\"tag\\\": \"yesternight\",\\n    \\\"popularity\\\": 18063\\n  },\\n  {\\n    \\\"tag\\\": \"readmittance\",\\n    \\\"popularity\\\": 18033\\n  },\\n  {\\n    \\\"tag\\\": \"reiterable\",\\n    \\\"popularity\\\": 18004\\n  },\\n  {\\n    \\\"tag\\\": \"triquetral\",\\n    \\\"popularity\\\": 17975\\n  },\\n  {\\n    \\\"tag\\\": \"guillotinement\",\\n    \\\"popularity\\\": 17945\\n  },\\n  {\\n    \\\"tag\\\": \"repermission\",\\n    \\\"popularity\\\": 17916\\n  },\\n  {\\n    \\\"tag\\\": \"assishly\",\\n    \\\"popularity\\\": 17887\\n  },\\n  {\\n    \\\"tag\\\": \"daidle\",\\n    \\\"popularity\\\": 17858\\n  },\\n  {\\n    \\\"tag\\\": \"prismatoid\",\\n    \\\"popularity\\\": 17829\\n  },\\n  {\\n    \\\"tag\\\": \"irreptitious\",\\n    \\\"popularity\\\": 17800\\n  },\\n  {\\n    \\\"tag\\\": \"sourdeline\",\\n    \\\"popularity\\\": 17771\\n  },\\n  {\\n    \\\"tag\\\": \"Austrian\",\\n    \\\"popularity\\\": 17742\\n  },\\n  {\\n    \\\"tag\\\": \"psychorrhagic\",\\n    \\\"popularity\\\": 17713\\n  },\\n  {\\n    \\\"tag\\\": \"Monumbo\",\\n    \\\"popularity\\\": 17685\\n  },\\n  {\\n    \\\"tag\\\": \"cloiochoanitic\",\\n    \\\"popularity\\\": 17656\\n  },\\n  {\\n    \\\"tag\\\": \"hant\",\\n    \\\"popularity\\\": 17628\\n  },\\n  {\\n    \\\"tag\\\": \"roily pulldown\",\\n    \\\"popularity\\\": 17599\\n  },\\n  {\\n    \\\"tag\\\": \"recongratulation\",\\n    \\\"popularity\\\": 17571\\n  },\\n  {\\n    \\\"tag\\\": \"Peking\",\\n    \\\"popularity\\\": 17543\\n  },\\n  {\\n    \\\"tag\\\": \"erdvark\",\\n    \\\"popularity\\\": 17514\\n  },\\n  {\\n    \\\"tag\\\": \"antimnemonic\",\\n    \\\"popularity\\\": 17486\\n  },\\n  {\\n    \\\"tag\\\": \"noncapillarity\",\\n    \\\"popularity\\\": 17458\\n  },\\n  {\\n    \\\"tag\\\": \"irrepressive\",\\n    \\\"popularity\\\": 17430\\n  },\\n  {\\n    \\\"tag\\\": \"Petromyzontes\",\\n    \\\"popularity\\\": 17402\\n  },\\n  {\\n    \\\"tag\\\": \"piscatorially\",\\n    \\\"popularity\\\": 17374\\n  },\\n  {\\n    \\\"tag\\\": \"cholesterosis\",\\n    \\\"popularity\\\": 17346\\n  },\\n  {\\n    \\\"tag\\\": \"denunciate\",\\n    \\\"popularity\\\": 17319\\n  },\\n  {\\n    \\\"tag\\\": \"unmetalled\",\\n    \\\"popularity\\\": 17291\\n  },\\n  {\\n    \\\"tag\\\": \"Tigris enruin\",\\n    \\\"popularity\\\": 17263\\n  },\\n  {\\n    \\\"tag\\\": \"anaspalin\",\\n    \\\"popularity\\\": 17236\\n  },\\n  {\\n    \\\"tag\\\": \"monodromy\",\\n    \\\"popularity\\\": 17208\\n  },\\n  {\\n    \\\"tag\\\": \"Canichanan\",\\n    \\\"popularity\\\": 17181\\n  },\\n  {\\n    \\\"tag\\\": \"mesolabe\",\\n    \\\"popularity\\\": 17154\\n  },\\n  {\\n    \\\"tag\\\": \"trichothallic overcunningness\",\\n    \\\"popularity\\\": 17127\\n  },\\n  {\\n    \\\"tag\\\": \"spinsterishly\",\\n    \\\"popularity\\\": 17099\\n  },\\n  {\\n    \\\"tag\\\": \"sensilla\",\\n    \\\"popularity\\\": 17072\\n  },\\n  {\\n    \\\"tag\\\": \"wifelkin\",\\n    \\\"popularity\\\": 17045\\n  },\\n  {\\n    \\\"tag\\\": \"suppositionless\",\\n    \\\"popularity\\\": 17018\\n  },\\n  {\\n    \\\"tag\\\": \"irksomeness\",\\n    \\\"popularity\\\": 16991\\n  },\\n  {\\n    \\\"tag\\\": \"sanbenito\",\\n    \\\"popularity\\\": 16964\\n  },\\n  {\\n    \\\"tag\\\": \"nonstatement\",\\n    \\\"popularity\\\": 16938\\n  },\\n  {\\n    \\\"tag\\\": \"phenoloid\",\\n    \\\"popularity\\\": 16911\\n  },\\n  {\\n    \\\"tag\\\": \"Steinberger\",\\n    \\\"popularity\\\": 16884\\n  },\\n  {\\n    \\\"tag\\\": \"replicated boom\",\\n    \\\"popularity\\\": 16858\\n  },\\n  {\\n    \\\"tag\\\": \"sciomachiology\",\\n    \\\"popularity\\\": 16831\\n  },\\n  {\\n    \\\"tag\\\": \"starwise\",\\n    \\\"popularity\\\": 16805\\n  },\\n  {\\n    \\\"tag\\\": \"prerich\",\\n    \\\"popularity\\\": 16778\\n  },\\n  {\\n    \\\"tag\\\": \"unspawned\",\\n    \\\"popularity\\\": 16752\\n  },\\n  {\\n    \\\"tag\\\": \"unindentable\",\\n    \\\"popularity\\\": 16726\\n  },\\n  {\\n    \\\"tag\\\": \"stromatic\",\\n    \\\"popularity\\\": 16700\\n  },\\n  {\\n    \\\"tag\\\": \"fetishize\",\\n    \\\"popularity\\\": 16673\\n  },\\n  {\\n    \\\"tag\\\": \"dihydroxy\",\\n    \\\"popularity\\\": 16647\\n  },\\n  {\\n    \\\"tag\\\": \"precaudal\",\\n    \\\"popularity\\\": 16621\\n  },\\n  {\\n    \\\"tag\\\": \"Madagascar\",\\n    \\\"popularity\\\": 16595\\n  },\\n  {\\n    \\\"tag\\\": \"repinement\",\\n    \\\"popularity\\\": 16570\\n  },\\n  {\\n    \\\"tag\\\": \"noncathedral wenzel\",\\n    \\\"popularity\\\": 16544\\n  },\\n  {\\n    \\\"tag\\\": \"corollike\",\\n    \\\"popularity\\\": 16518\\n  },\\n  {\\n    \\\"tag\\\": \"pubes unamortization\",\\n    \\\"popularity\\\": 16492\\n  },\\n  {\\n    \\\"tag\\\": \"brickcroft\",\\n    \\\"popularity\\\": 16467\\n  },\\n  {\\n    \\\"tag\\\": \"intertrabecular\",\\n    \\\"popularity\\\": 16441\\n  },\\n  {\\n    \\\"tag\\\": \"formulaic\",\\n    \\\"popularity\\\": 16416\\n  },\\n  {\\n    \\\"tag\\\": \"arienzo\",\\n    \\\"popularity\\\": 16390\\n  },\\n  {\\n    \\\"tag\\\": \"Mazzinian\",\\n    \\\"popularity\\\": 16365\\n  },\\n  {\\n    \\\"tag\\\": \"wallowishly\",\\n    \\\"popularity\\\": 16339\\n  },\\n  {\\n    \\\"tag\\\": \"sysselman\",\\n    \\\"popularity\\\": 16314\\n  },\\n  {\\n    \\\"tag\\\": \"seligmannite\",\\n    \\\"popularity\\\": 16289\\n  },\\n  {\\n    \\\"tag\\\": \"harlequinery\",\\n    \\\"popularity\\\": 16264\\n  },\\n  {\\n    \\\"tag\\\": \"zucchetto\",\\n    \\\"popularity\\\": 16239\\n  },\\n  {\\n    \\\"tag\\\": \"malonyl\",\\n    \\\"popularity\\\": 16214\\n  },\\n  {\\n    \\\"tag\\\": \"patwari\",\\n    \\\"popularity\\\": 16189\\n  },\\n  {\\n    \\\"tag\\\": \"neoholmia venturesomeness\",\\n    \\\"popularity\\\": 16164\\n  },\\n  {\\n    \\\"tag\\\": \"Dehwar\",\\n    \\\"popularity\\\": 16139\\n  },\\n  {\\n    \\\"tag\\\": \"fetiferous\",\\n    \\\"popularity\\\": 16114\\n  },\\n  {\\n    \\\"tag\\\": \"chromatophore\",\\n    \\\"popularity\\\": 16090\\n  },\\n  {\\n    \\\"tag\\\": \"reregistration\",\\n    \\\"popularity\\\": 16065\\n  },\\n  {\\n    \\\"tag\\\": \"alienor\",\\n    \\\"popularity\\\": 16040\\n  },\\n  {\\n    \\\"tag\\\": \"Hexagynia\",\\n    \\\"popularity\\\": 16016\\n  },\\n  {\\n    \\\"tag\\\": \"cerebrotonia\",\\n    \\\"popularity\\\": 15991\\n  },\\n  {\\n    \\\"tag\\\": \"deedbox\",\\n    \\\"popularity\\\": 15967\\n  },\\n  {\\n    \\\"tag\\\": \"staab\",\\n    \\\"popularity\\\": 15943\\n  },\\n  {\\n    \\\"tag\\\": \"uratemia\",\\n    \\\"popularity\\\": 15918\\n  },\\n  {\\n    \\\"tag\\\": \"flaunt\",\\n    \\\"popularity\\\": 15894\\n  },\\n  {\\n    \\\"tag\\\": \"bogy\",\\n    \\\"popularity\\\": 15870\\n  },\\n  {\\n    \\\"tag\\\": \"subcartilaginous\",\\n    \\\"popularity\\\": 15846\\n  },\\n  {\\n    \\\"tag\\\": \"protonephridial\",\\n    \\\"popularity\\\": 15822\\n  },\\n  {\\n    \\\"tag\\\": \"Boswellia\",\\n    \\\"popularity\\\": 15798\\n  },\\n  {\\n    \\\"tag\\\": \"relaxant untiaraed protoepiphyte\",\\n    \\\"popularity\\\": 15774\\n  },\\n  {\\n    \\\"tag\\\": \"nesslerization\",\\n    \\\"popularity\\\": 15750\\n  },\\n  {\\n    \\\"tag\\\": \"precession\",\\n    \\\"popularity\\\": 15726\\n  },\\n  {\\n    \\\"tag\\\": \"peat\",\\n    \\\"popularity\\\": 15702\\n  },\\n  {\\n    \\\"tag\\\": \"unbit\",\\n    \\\"popularity\\\": 15678\\n  },\\n  {\\n    \\\"tag\\\": \"snailish\",\\n    \\\"popularity\\\": 15655\\n  },\\n  {\\n    \\\"tag\\\": \"porismatical\",\\n    \\\"popularity\\\": 15631\\n  },\\n  {\\n    \\\"tag\\\": \"hooflike\",\\n    \\\"popularity\\\": 15608\\n  },\\n  {\\n    \\\"tag\\\": \"resuppose phene cranic\",\\n    \\\"popularity\\\": 15584\\n  },\\n  {\\n    \\\"tag\\\": \"peptonization kipskin\",\\n    \\\"popularity\\\": 15561\\n  },\\n  {\\n    \\\"tag\\\": \"birdstone\",\\n    \\\"popularity\\\": 15537\\n  },\\n  {\\n    \\\"tag\\\": \"empty inferoanterior\",\\n    \\\"popularity\\\": 15514\\n  },\\n  {\\n    \\\"tag\\\": \"androtauric\",\\n    \\\"popularity\\\": 15491\\n  },\\n  {\\n    \\\"tag\\\": \"triamide\",\\n    \\\"popularity\\\": 15467\\n  },\\n  {\\n    \\\"tag\\\": \"showmanry\",\\n    \\\"popularity\\\": 15444\\n  },\\n  {\\n    \\\"tag\\\": \"doing\",\\n    \\\"popularity\\\": 15421\\n  },\\n  {\\n    \\\"tag\\\": \"bouchaleen\",\\n    \\\"popularity\\\": 15398\\n  },\\n  {\\n    \\\"tag\\\": \"precollude\",\\n    \\\"popularity\\\": 15375\\n  },\\n  {\\n    \\\"tag\\\": \"finger\",\\n    \\\"popularity\\\": 15352\\n  },\\n  {\\n    \\\"tag\\\": \"limnetic intermessenger\",\\n    \\\"popularity\\\": 15329\\n  },\\n  {\\n    \\\"tag\\\": \"uncharitable picrotoxic\",\\n    \\\"popularity\\\": 15306\\n  },\\n  {\\n    \\\"tag\\\": \"nationalizer Phasmidae\",\\n    \\\"popularity\\\": 15283\\n  },\\n  {\\n    \\\"tag\\\": \"laughingstock\",\\n    \\\"popularity\\\": 15261\\n  },\\n  {\\n    \\\"tag\\\": \"nondeferential\",\\n    \\\"popularity\\\": 15238\\n  },\\n  {\\n    \\\"tag\\\": \"uproariously\",\\n    \\\"popularity\\\": 15215\\n  },\\n  {\\n    \\\"tag\\\": \"manzanilla\",\\n    \\\"popularity\\\": 15193\\n  },\\n  {\\n    \\\"tag\\\": \"khahoon\",\\n    \\\"popularity\\\": 15170\\n  },\\n  {\\n    \\\"tag\\\": \"olericulturally longshanks\",\\n    \\\"popularity\\\": 15148\\n  },\\n  {\\n    \\\"tag\\\": \"enthusiastically methionic\",\\n    \\\"popularity\\\": 15125\\n  },\\n  {\\n    \\\"tag\\\": \"pobs\",\\n    \\\"popularity\\\": 15103\\n  },\\n  {\\n    \\\"tag\\\": \"tricarpellate\",\\n    \\\"popularity\\\": 15081\\n  },\\n  {\\n    \\\"tag\\\": \"souterrain\",\\n    \\\"popularity\\\": 15058\\n  },\\n  {\\n    \\\"tag\\\": \"tethelin\",\\n    \\\"popularity\\\": 15036\\n  },\\n  {\\n    \\\"tag\\\": \"tartle\",\\n    \\\"popularity\\\": 15014\\n  },\\n  {\\n    \\\"tag\\\": \"tidelike\",\\n    \\\"popularity\\\": 14992\\n  },\\n  {\\n    \\\"tag\\\": \"cosmoramic\",\\n    \\\"popularity\\\": 14970\\n  },\\n  {\\n    \\\"tag\\\": \"pretardiness\",\\n    \\\"popularity\\\": 14948\\n  },\\n  {\\n    \\\"tag\\\": \"insoul\",\\n    \\\"popularity\\\": 14926\\n  },\\n  {\\n    \\\"tag\\\": \"anthroxan\",\\n    \\\"popularity\\\": 14904\\n  },\\n  {\\n    \\\"tag\\\": \"jilter\",\\n    \\\"popularity\\\": 14882\\n  },\\n  {\\n    \\\"tag\\\": \"pectinibranchian trematode\",\\n    \\\"popularity\\\": 14860\\n  },\\n  {\\n    \\\"tag\\\": \"Renaissancist\",\\n    \\\"popularity\\\": 14838\\n  },\\n  {\\n    \\\"tag\\\": \"imaginant\",\\n    \\\"popularity\\\": 14817\\n  },\\n  {\\n    \\\"tag\\\": \"supercensure\",\\n    \\\"popularity\\\": 14795\\n  },\\n  {\\n    \\\"tag\\\": \"festilogy\",\\n    \\\"popularity\\\": 14773\\n  },\\n  {\\n    \\\"tag\\\": \"regression\",\\n    \\\"popularity\\\": 14752\\n  },\\n  {\\n    \\\"tag\\\": \"mesobregmate languorously\",\\n    \\\"popularity\\\": 14730\\n  },\\n  {\\n    \\\"tag\\\": \"unsupernaturalized\",\\n    \\\"popularity\\\": 14709\\n  },\\n  {\\n    \\\"tag\\\": \"boobyish\",\\n    \\\"popularity\\\": 14687\\n  },\\n  {\\n    \\\"tag\\\": \"scopolamine\",\\n    \\\"popularity\\\": 14666\\n  },\\n  {\\n    \\\"tag\\\": \"reamputation unchristianly\",\\n    \\\"popularity\\\": 14645\\n  },\\n  {\\n    \\\"tag\\\": \"cuneatic\",\\n    \\\"popularity\\\": 14623\\n  },\\n  {\\n    \\\"tag\\\": \"heathberry\",\\n    \\\"popularity\\\": 14602\\n  },\\n  {\\n    \\\"tag\\\": \"hate\",\\n    \\\"popularity\\\": 14581\\n  },\\n  {\\n    \\\"tag\\\": \"redeemableness\",\\n    \\\"popularity\\\": 14560\\n  },\\n  {\\n    \\\"tag\\\": \"damasse\",\\n    \\\"popularity\\\": 14539\\n  },\\n  {\\n    \\\"tag\\\": \"thrillsome\",\\n    \\\"popularity\\\": 14518\\n  },\\n  {\\n    \\\"tag\\\": \"disseverment\",\\n    \\\"popularity\\\": 14497\\n  },\\n  {\\n    \\\"tag\\\": \"underbishopric Ostyak\",\\n    \\\"popularity\\\": 14476\\n  },\\n  {\\n    \\\"tag\\\": \"Exoascales\",\\n    \\\"popularity\\\": 14455\\n  },\\n  {\\n    \\\"tag\\\": \"soiled\",\\n    \\\"popularity\\\": 14434\\n  },\\n  {\\n    \\\"tag\\\": \"Cain\",\\n    \\\"popularity\\\": 14413\\n  },\\n  {\\n    \\\"tag\\\": \"mismanageable arenae\",\\n    \\\"popularity\\\": 14392\\n  },\\n  {\\n    \\\"tag\\\": \"manducate unhinderably\",\\n    \\\"popularity\\\": 14372\\n  },\\n  {\\n    \\\"tag\\\": \"peregrin\",\\n    \\\"popularity\\\": 14351\\n  },\\n  {\\n    \\\"tag\\\": \"musicianly\",\\n    \\\"popularity\\\": 14330\\n  },\\n  {\\n    \\\"tag\\\": \"aln\",\\n    \\\"popularity\\\": 14310\\n  },\\n  {\\n    \\\"tag\\\": \"intercentrum\",\\n    \\\"popularity\\\": 14289\\n  },\\n  {\\n    \\\"tag\\\": \"roothold\",\\n    \\\"popularity\\\": 14269\\n  },\\n  {\\n    \\\"tag\\\": \"jane aneurism\",\\n    \\\"popularity\\\": 14248\\n  },\\n  {\\n    \\\"tag\\\": \"insinuatively forefeel phytolatrous\",\\n    \\\"popularity\\\": 14228\\n  },\\n  {\\n    \\\"tag\\\": \"kanchil\",\\n    \\\"popularity\\\": 14208\\n  },\\n  {\\n    \\\"tag\\\": \"Austrophile\",\\n    \\\"popularity\\\": 14187\\n  },\\n  {\\n    \\\"tag\\\": \"unterrorized\",\\n    \\\"popularity\\\": 14167\\n  },\\n  {\\n    \\\"tag\\\": \"admeasure\",\\n    \\\"popularity\\\": 14147\\n  },\\n  {\\n    \\\"tag\\\": \"electrodissolution\",\\n    \\\"popularity\\\": 14127\\n  },\\n  {\\n    \\\"tag\\\": \"unweddedly\",\\n    \\\"popularity\\\": 14107\\n  },\\n  {\\n    \\\"tag\\\": \"unannoying\",\\n    \\\"popularity\\\": 14087\\n  },\\n  {\\n    \\\"tag\\\": \"uningenuous\",\\n    \\\"popularity\\\": 14067\\n  },\\n  {\\n    \\\"tag\\\": \"omnibenevolent\",\\n    \\\"popularity\\\": 14047\\n  },\\n  {\\n    \\\"tag\\\": \"commissure\",\\n    \\\"popularity\\\": 14027\\n  },\\n  {\\n    \\\"tag\\\": \"tellureted\",\\n    \\\"popularity\\\": 14007\\n  },\\n  {\\n    \\\"tag\\\": \"suffragan\",\\n    \\\"popularity\\\": 13987\\n  },\\n  {\\n    \\\"tag\\\": \"sphaeriaceous\",\\n    \\\"popularity\\\": 13967\\n  },\\n  {\\n    \\\"tag\\\": \"unfearing\",\\n    \\\"popularity\\\": 13947\\n  },\\n  {\\n    \\\"tag\\\": \"stentoriousness precounsellor\",\\n    \\\"popularity\\\": 13928\\n  },\\n  {\\n    \\\"tag\\\": \"haemaspectroscope\",\\n    \\\"popularity\\\": 13908\\n  },\\n  {\\n    \\\"tag\\\": \"teras\",\\n    \\\"popularity\\\": 13888\\n  },\\n  {\\n    \\\"tag\\\": \"pulicine\",\\n    \\\"popularity\\\": 13869\\n  },\\n  {\\n    \\\"tag\\\": \"colicystopyelitis\",\\n    \\\"popularity\\\": 13849\\n  },\\n  {\\n    \\\"tag\\\": \"Physalia\",\\n    \\\"popularity\\\": 13830\\n  },\\n  {\\n    \\\"tag\\\": \"Saxicolidae\",\\n    \\\"popularity\\\": 13810\\n  },\\n  {\\n    \\\"tag\\\": \"peritonital\",\\n    \\\"popularity\\\": 13791\\n  },\\n  {\\n    \\\"tag\\\": \"dysphotic\",\\n    \\\"popularity\\\": 13771\\n  },\\n  {\\n    \\\"tag\\\": \"unabandoned\",\\n    \\\"popularity\\\": 13752\\n  },\\n  {\\n    \\\"tag\\\": \"rashful\",\\n    \\\"popularity\\\": 13733\\n  },\\n  {\\n    \\\"tag\\\": \"goodyness Manobo\",\\n    \\\"popularity\\\": 13714\\n  },\\n  {\\n    \\\"tag\\\": \"glaring\",\\n    \\\"popularity\\\": 13694\\n  },\\n  {\\n    \\\"tag\\\": \"horrorful\",\\n    \\\"popularity\\\": 13675\\n  },\\n  {\\n    \\\"tag\\\": \"intercepting\",\\n    \\\"popularity\\\": 13656\\n  },\\n  {\\n    \\\"tag\\\": \"semifine\",\\n    \\\"popularity\\\": 13637\\n  },\\n  {\\n    \\\"tag\\\": \"Gaypoo\",\\n    \\\"popularity\\\": 13618\\n  },\\n  {\\n    \\\"tag\\\": \"Metrosideros\",\\n    \\\"popularity\\\": 13599\\n  },\\n  {\\n    \\\"tag\\\": \"thoracicolumbar\",\\n    \\\"popularity\\\": 13580\\n  },\\n  {\\n    \\\"tag\\\": \"unserried\",\\n    \\\"popularity\\\": 13561\\n  },\\n  {\\n    \\\"tag\\\": \"keeperess cauterization\",\\n    \\\"popularity\\\": 13542\\n  },\\n  {\\n    \\\"tag\\\": \"administrant\",\\n    \\\"popularity\\\": 13523\\n  },\\n  {\\n    \\\"tag\\\": \"unpropitiatedness\",\\n    \\\"popularity\\\": 13505\\n  },\\n  {\\n    \\\"tag\\\": \"pensileness\",\\n    \\\"popularity\\\": 13486\\n  },\\n  {\\n    \\\"tag\\\": \"quinaldic unreceivable\",\\n    \\\"popularity\\\": 13467\\n  },\\n  {\\n    \\\"tag\\\": \"Carnaria\",\\n    \\\"popularity\\\": 13448\\n  },\\n  {\\n    \\\"tag\\\": \"azothionium wurrus\",\\n    \\\"popularity\\\": 13430\\n  },\\n  {\\n    \\\"tag\\\": \"mistresshood\",\\n    \\\"popularity\\\": 13411\\n  },\\n  {\\n    \\\"tag\\\": \"Savara\",\\n    \\\"popularity\\\": 13393\\n  },\\n  {\\n    \\\"tag\\\": \"dasyurine\",\\n    \\\"popularity\\\": 13374\\n  },\\n  {\\n    \\\"tag\\\": \"superideal\",\\n    \\\"popularity\\\": 13356\\n  },\\n  {\\n    \\\"tag\\\": \"Parisianize\",\\n    \\\"popularity\\\": 13337\\n  },\\n  {\\n    \\\"tag\\\": \"underearth\",\\n    \\\"popularity\\\": 13319\\n  },\\n  {\\n    \\\"tag\\\": \"athrogenic\",\\n    \\\"popularity\\\": 13301\\n  },\\n  {\\n    \\\"tag\\\": \"communicate\",\\n    \\\"popularity\\\": 13282\\n  },\\n  {\\n    \\\"tag\\\": \"denervation enworthed\",\\n    \\\"popularity\\\": 13264\\n  },\\n  {\\n    \\\"tag\\\": \"subbromide\",\\n    \\\"popularity\\\": 13246\\n  },\\n  {\\n    \\\"tag\\\": \"stenocoriasis\",\\n    \\\"popularity\\\": 13228\\n  },\\n  {\\n    \\\"tag\\\": \"facetiousness\",\\n    \\\"popularity\\\": 13209\\n  },\\n  {\\n    \\\"tag\\\": \"twaddling\",\\n    \\\"popularity\\\": 13191\\n  },\\n  {\\n    \\\"tag\\\": \"tetartoconid\",\\n    \\\"popularity\\\": 13173\\n  },\\n  {\\n    \\\"tag\\\": \"audiophile\",\\n    \\\"popularity\\\": 13155\\n  },\\n  {\\n    \\\"tag\\\": \"fustigate\",\\n    \\\"popularity\\\": 13137\\n  },\\n  {\\n    \\\"tag\\\": \"Sorbian cacophonia\",\\n    \\\"popularity\\\": 13119\\n  },\\n  {\\n    \\\"tag\\\": \"fondish\",\\n    \\\"popularity\\\": 13101\\n  },\\n  {\\n    \\\"tag\\\": \"endomastoiditis\",\\n    \\\"popularity\\\": 13084\\n  },\\n  {\\n    \\\"tag\\\": \"sniptious\",\\n    \\\"popularity\\\": 13066\\n  },\\n  {\\n    \\\"tag\\\": \"glochidiate\",\\n    \\\"popularity\\\": 13048\\n  },\\n  {\\n    \\\"tag\\\": \"polycarboxylic\",\\n    \\\"popularity\\\": 13030\\n  },\\n  {\\n    \\\"tag\\\": \"stamp\",\\n    \\\"popularity\\\": 13012\\n  },\\n  {\\n    \\\"tag\\\": \"tritonymph endotoxoid\",\\n    \\\"popularity\\\": 12995\\n  },\\n  {\\n    \\\"tag\\\": \"wolfskin\",\\n    \\\"popularity\\\": 12977\\n  },\\n  {\\n    \\\"tag\\\": \"oncosimeter\",\\n    \\\"popularity\\\": 12959\\n  },\\n  {\\n    \\\"tag\\\": \"outward\",\\n    \\\"popularity\\\": 12942\\n  },\\n  {\\n    \\\"tag\\\": \"circumscribed\",\\n    \\\"popularity\\\": 12924\\n  },\\n  {\\n    \\\"tag\\\": \"autohemolytic\",\\n    \\\"popularity\\\": 12907\\n  },\\n  {\\n    \\\"tag\\\": \"isorhamnose\",\\n    \\\"popularity\\\": 12889\\n  },\\n  {\\n    \\\"tag\\\": \"monarchomachic\",\\n    \\\"popularity\\\": 12872\\n  },\\n  {\\n    \\\"tag\\\": \"phaenomenon\",\\n    \\\"popularity\\\": 12855\\n  },\\n  {\\n    \\\"tag\\\": \"angiopressure\",\\n    \\\"popularity\\\": 12837\\n  },\\n  {\\n    \\\"tag\\\": \"similarize\",\\n    \\\"popularity\\\": 12820\\n  },\\n  {\\n    \\\"tag\\\": \"unseeable\",\\n    \\\"popularity\\\": 12803\\n  },\\n  {\\n    \\\"tag\\\": \"Toryize\",\\n    \\\"popularity\\\": 12785\\n  },\\n  {\\n    \\\"tag\\\": \"fruitling\",\\n    \\\"popularity\\\": 12768\\n  },\\n  {\\n    \\\"tag\\\": \"axle\",\\n    \\\"popularity\\\": 12751\\n  },\\n  {\\n    \\\"tag\\\": \"priestal cocked\",\\n    \\\"popularity\\\": 12734\\n  },\\n  {\\n    \\\"tag\\\": \"serotoxin\",\\n    \\\"popularity\\\": 12717\\n  },\\n  {\\n    \\\"tag\\\": \"unmovably\",\\n    \\\"popularity\\\": 12700\\n  },\\n  {\\n    \\\"tag\\\": \"darbha\",\\n    \\\"popularity\\\": 12683\\n  },\\n  {\\n    \\\"tag\\\": \"Mongolize\",\\n    \\\"popularity\\\": 12666\\n  },\\n  {\\n    \\\"tag\\\": \"clusteringly\",\\n    \\\"popularity\\\": 12649\\n  },\\n  {\\n    \\\"tag\\\": \"tendence\",\\n    \\\"popularity\\\": 12632\\n  },\\n  {\\n    \\\"tag\\\": \"foziness\",\\n    \\\"popularity\\\": 12615\\n  },\\n  {\\n    \\\"tag\\\": \"brickkiln lithify\",\\n    \\\"popularity\\\": 12598\\n  },\\n  {\\n    \\\"tag\\\": \"unpriest\",\\n    \\\"popularity\\\": 12581\\n  },\\n  {\\n    \\\"tag\\\": \"convincer\",\\n    \\\"popularity\\\": 12564\\n  },\\n  {\\n    \\\"tag\\\": \"mornlike\",\\n    \\\"popularity\\\": 12548\\n  },\\n  {\\n    \\\"tag\\\": \"overaddiction ostentatiousness\",\\n    \\\"popularity\\\": 12531\\n  },\\n  {\\n    \\\"tag\\\": \"diffusively moccasin pendom\",\\n    \\\"popularity\\\": 12514\\n  },\\n  {\\n    \\\"tag\\\": \"boose\",\\n    \\\"popularity\\\": 12498\\n  },\\n  {\\n    \\\"tag\\\": \"myonosus\",\\n    \\\"popularity\\\": 12481\\n  },\\n  {\\n    \\\"tag\\\": \"handsome\",\\n    \\\"popularity\\\": 12464\\n  },\\n  {\\n    \\\"tag\\\": \"paroxysmic\",\\n    \\\"popularity\\\": 12448\\n  },\\n  {\\n    \\\"tag\\\": \"Ulidian\",\\n    \\\"popularity\\\": 12431\\n  },\\n  {\\n    \\\"tag\\\": \"heartache\",\\n    \\\"popularity\\\": 12415\\n  },\\n  {\\n    \\\"tag\\\": \"torporize\",\\n    \\\"popularity\\\": 12398\\n  },\\n  {\\n    \\\"tag\\\": \"hippish\",\\n    \\\"popularity\\\": 12382\\n  },\\n  {\\n    \\\"tag\\\": \"stigmal militation\",\\n    \\\"popularity\\\": 12366\\n  },\\n  {\\n    \\\"tag\\\": \"matmaker\",\\n    \\\"popularity\\\": 12349\\n  },\\n  {\\n    \\\"tag\\\": \"marantaceous bivoluminous\",\\n    \\\"popularity\\\": 12333\\n  },\\n  {\\n    \\\"tag\\\": \"Uraniidae\",\\n    \\\"popularity\\\": 12317\\n  },\\n  {\\n    \\\"tag\\\": \"risper\",\\n    \\\"popularity\\\": 12301\\n  },\\n  {\\n    \\\"tag\\\": \"tintinnabulation\",\\n    \\\"popularity\\\": 12284\\n  },\\n  {\\n    \\\"tag\\\": \"tributorian\",\\n    \\\"popularity\\\": 12268\\n  },\\n  {\\n    \\\"tag\\\": \"ashamedly\",\\n    \\\"popularity\\\": 12252\\n  },\\n  {\\n    \\\"tag\\\": \"Macrourus\",\\n    \\\"popularity\\\": 12236\\n  },\\n  {\\n    \\\"tag\\\": \"Chora\",\\n    \\\"popularity\\\": 12220\\n  },\\n  {\\n    \\\"tag\\\": \"caul\",\\n    \\\"popularity\\\": 12204\\n  },\\n  {\\n    \\\"tag\\\": \"exsector\",\\n    \\\"popularity\\\": 12188\\n  },\\n  {\\n    \\\"tag\\\": \"acutish\",\\n    \\\"popularity\\\": 12172\\n  },\\n  {\\n    \\\"tag\\\": \"amphichrome\",\\n    \\\"popularity\\\": 12156\\n  },\\n  {\\n    \\\"tag\\\": \"guarder\",\\n    \\\"popularity\\\": 12140\\n  },\\n  {\\n    \\\"tag\\\": \"sculpturally\",\\n    \\\"popularity\\\": 12124\\n  },\\n  {\\n    \\\"tag\\\": \"benightmare\",\\n    \\\"popularity\\\": 12108\\n  },\\n  {\\n    \\\"tag\\\": \"chucky\",\\n    \\\"popularity\\\": 12093\\n  },\\n  {\\n    \\\"tag\\\": \"Venetian\",\\n    \\\"popularity\\\": 12077\\n  },\\n  {\\n    \\\"tag\\\": \"autotheater\",\\n    \\\"popularity\\\": 12061\\n  },\\n  {\\n    \\\"tag\\\": \"planarioid\",\\n    \\\"popularity\\\": 12045\\n  },\\n  {\\n    \\\"tag\\\": \"handkerchiefful\",\\n    \\\"popularity\\\": 12030\\n  },\\n  {\\n    \\\"tag\\\": \"fuliginousness potentize\",\\n    \\\"popularity\\\": 12014\\n  },\\n  {\\n    \\\"tag\\\": \"pantheum\",\\n    \\\"popularity\\\": 11998\\n  },\\n  {\\n    \\\"tag\\\": \"heavyweight\",\\n    \\\"popularity\\\": 11983\\n  },\\n  {\\n    \\\"tag\\\": \"unbrick\",\\n    \\\"popularity\\\": 11967\\n  },\\n  {\\n    \\\"tag\\\": \"duomachy\",\\n    \\\"popularity\\\": 11952\\n  },\\n  {\\n    \\\"tag\\\": \"polyphyodont\",\\n    \\\"popularity\\\": 11936\\n  },\\n  {\\n    \\\"tag\\\": \"hibernacle\",\\n    \\\"popularity\\\": 11921\\n  },\\n  {\\n    \\\"tag\\\": \"undistend\",\\n    \\\"popularity\\\": 11905\\n  },\\n  {\\n    \\\"tag\\\": \"hystericky\",\\n    \\\"popularity\\\": 11890\\n  },\\n  {\\n    \\\"tag\\\": \"paleolimnology\",\\n    \\\"popularity\\\": 11875\\n  },\\n  {\\n    \\\"tag\\\": \"cedarware\",\\n    \\\"popularity\\\": 11859\\n  },\\n  {\\n    \\\"tag\\\": \"overwrested\",\\n    \\\"popularity\\\": 11844\\n  },\\n  {\\n    \\\"tag\\\": \"Syriacism\",\\n    \\\"popularity\\\": 11829\\n  },\\n  {\\n    \\\"tag\\\": \"pretan\",\\n    \\\"popularity\\\": 11813\\n  },\\n  {\\n    \\\"tag\\\": \"formant\",\\n    \\\"popularity\\\": 11798\\n  },\\n  {\\n    \\\"tag\\\": \"pharmacopoeist Fedia\",\\n    \\\"popularity\\\": 11783\\n  },\\n  {\\n    \\\"tag\\\": \"exorcist eerisome\",\\n    \\\"popularity\\\": 11768\\n  },\\n  {\\n    \\\"tag\\\": \"separation\",\\n    \\\"popularity\\\": 11753\\n  },\\n  {\\n    \\\"tag\\\": \"infancy\",\\n    \\\"popularity\\\": 11738\\n  },\\n  {\\n    \\\"tag\\\": \"ecrasite\",\\n    \\\"popularity\\\": 11723\\n  },\\n  {\\n    \\\"tag\\\": \"propolize\",\\n    \\\"popularity\\\": 11708\\n  },\\n  {\\n    \\\"tag\\\": \"uncram phyllin\",\\n    \\\"popularity\\\": 11693\\n  },\\n  {\\n    \\\"tag\\\": \"thymopathy\",\\n    \\\"popularity\\\": 11678\\n  },\\n  {\\n    \\\"tag\\\": \"omniscient\",\\n    \\\"popularity\\\": 11663\\n  },\\n  {\\n    \\\"tag\\\": \"coussinet hazer\",\\n    \\\"popularity\\\": 11648\\n  },\\n  {\\n    \\\"tag\\\": \"contributiveness\",\\n    \\\"popularity\\\": 11633\\n  },\\n  {\\n    \\\"tag\\\": \"septifluous\",\\n    \\\"popularity\\\": 11618\\n  },\\n  {\\n    \\\"tag\\\": \"halfness\",\\n    \\\"popularity\\\": 11603\\n  },\\n  {\\n    \\\"tag\\\": \"tocher\",\\n    \\\"popularity\\\": 11589\\n  },\\n  {\\n    \\\"tag\\\": \"monotonist\",\\n    \\\"popularity\\\": 11574\\n  },\\n  {\\n    \\\"tag\\\": \"headchair\",\\n    \\\"popularity\\\": 11559\\n  },\\n  {\\n    \\\"tag\\\": \"everywhence\",\\n    \\\"popularity\\\": 11544\\n  },\\n  {\\n    \\\"tag\\\": \"gerate\",\\n    \\\"popularity\\\": 11530\\n  },\\n  {\\n    \\\"tag\\\": \"unrepellent\",\\n    \\\"popularity\\\": 11515\\n  },\\n  {\\n    \\\"tag\\\": \"inidoneous\",\\n    \\\"popularity\\\": 11500\\n  },\\n  {\\n    \\\"tag\\\": \"Rifi\",\\n    \\\"popularity\\\": 11486\\n  },\\n  {\\n    \\\"tag\\\": \"unstop\",\\n    \\\"popularity\\\": 11471\\n  },\\n  {\\n    \\\"tag\\\": \"conformer\",\\n    \\\"popularity\\\": 11457\\n  },\\n  {\\n    \\\"tag\\\": \"vivisectionally\",\\n    \\\"popularity\\\": 11442\\n  },\\n  {\\n    \\\"tag\\\": \"nonfinishing\",\\n    \\\"popularity\\\": 11428\\n  },\\n  {\\n    \\\"tag\\\": \"tyranness\",\\n    \\\"popularity\\\": 11413\\n  },\\n  {\\n    \\\"tag\\\": \"shepherdage havoc\",\\n    \\\"popularity\\\": 11399\\n  },\\n  {\\n    \\\"tag\\\": \"coronale\",\\n    \\\"popularity\\\": 11385\\n  },\\n  {\\n    \\\"tag\\\": \"airmarker\",\\n    \\\"popularity\\\": 11370\\n  },\\n  {\\n    \\\"tag\\\": \"subpanel\",\\n    \\\"popularity\\\": 11356\\n  },\\n  {\\n    \\\"tag\\\": \"conciliation\",\\n    \\\"popularity\\\": 11342\\n  },\\n  {\\n    \\\"tag\\\": \"supergun\",\\n    \\\"popularity\\\": 11327\\n  },\\n  {\\n    \\\"tag\\\": \"photoheliography\",\\n    \\\"popularity\\\": 11313\\n  },\\n  {\\n    \\\"tag\\\": \"cacosmia\",\\n    \\\"popularity\\\": 11299\\n  },\\n  {\\n    \\\"tag\\\": \"caressant\",\\n    \\\"popularity\\\": 11285\\n  },\\n  {\\n    \\\"tag\\\": \"swivet\",\\n    \\\"popularity\\\": 11270\\n  },\\n  {\\n    \\\"tag\\\": \"coddler\",\\n    \\\"popularity\\\": 11256\\n  },\\n  {\\n    \\\"tag\\\": \"rakehellish\",\\n    \\\"popularity\\\": 11242\\n  },\\n  {\\n    \\\"tag\\\": \"recohabitation\",\\n    \\\"popularity\\\": 11228\\n  },\\n  {\\n    \\\"tag\\\": \"postillator\",\\n    \\\"popularity\\\": 11214\\n  },\\n  {\\n    \\\"tag\\\": \"receipt\",\\n    \\\"popularity\\\": 11200\\n  },\\n  {\\n    \\\"tag\\\": \"nonconformistical\",\\n    \\\"popularity\\\": 11186\\n  },\\n  {\\n    \\\"tag\\\": \"unglorified\",\\n    \\\"popularity\\\": 11172\\n  },\\n  {\\n    \\\"tag\\\": \"unordinariness\",\\n    \\\"popularity\\\": 11158\\n  },\\n  {\\n    \\\"tag\\\": \"tetrahydroxy\",\\n    \\\"popularity\\\": 11144\\n  },\\n  {\\n    \\\"tag\\\": \"haploperistomic corporeity\",\\n    \\\"popularity\\\": 11130\\n  },\\n  {\\n    \\\"tag\\\": \"varical\",\\n    \\\"popularity\\\": 11117\\n  },\\n  {\\n    \\\"tag\\\": \"pilferment\",\\n    \\\"popularity\\\": 11103\\n  },\\n  {\\n    \\\"tag\\\": \"reverentially playcraft\",\\n    \\\"popularity\\\": 11089\\n  },\\n  {\\n    \\\"tag\\\": \"unretentive\",\\n    \\\"popularity\\\": 11075\\n  },\\n  {\\n    \\\"tag\\\": \"readiness\",\\n    \\\"popularity\\\": 11061\\n  },\\n  {\\n    \\\"tag\\\": \"thermomagnetism\",\\n    \\\"popularity\\\": 11048\\n  },\\n  {\\n    \\\"tag\\\": \"spotless\",\\n    \\\"popularity\\\": 11034\\n  },\\n  {\\n    \\\"tag\\\": \"semishrubby\",\\n    \\\"popularity\\\": 11020\\n  },\\n  {\\n    \\\"tag\\\": \"metrotomy\",\\n    \\\"popularity\\\": 11007\\n  },\\n  {\\n    \\\"tag\\\": \"hocker\",\\n    \\\"popularity\\\": 10993\\n  },\\n  {\\n    \\\"tag\\\": \"anecdotal\",\\n    \\\"popularity\\\": 10979\\n  },\\n  {\\n    \\\"tag\\\": \"tetrabelodont\",\\n    \\\"popularity\\\": 10966\\n  },\\n  {\\n    \\\"tag\\\": \"Ramillied\",\\n    \\\"popularity\\\": 10952\\n  },\\n  {\\n    \\\"tag\\\": \"sympatheticism\",\\n    \\\"popularity\\\": 10939\\n  },\\n  {\\n    \\\"tag\\\": \"kiskatom\",\\n    \\\"popularity\\\": 10925\\n  },\\n  {\\n    \\\"tag\\\": \"concyclically\",\\n    \\\"popularity\\\": 10912\\n  },\\n  {\\n    \\\"tag\\\": \"tunicless\",\\n    \\\"popularity\\\": 10899\\n  },\\n  {\\n    \\\"tag\\\": \"formalistic\",\\n    \\\"popularity\\\": 10885\\n  },\\n  {\\n    \\\"tag\\\": \"thermacogenesis\",\\n    \\\"popularity\\\": 10872\\n  },\\n  {\\n    \\\"tag\\\": \"multimotored\",\\n    \\\"popularity\\\": 10858\\n  },\\n  {\\n    \\\"tag\\\": \"inversive\",\\n    \\\"popularity\\\": 10845\\n  },\\n  {\\n    \\\"tag\\\": \"Jatki\",\\n    \\\"popularity\\\": 10832\\n  },\\n  {\\n    \\\"tag\\\": \"highest\",\\n    \\\"popularity\\\": 10818\\n  },\\n  {\\n    \\\"tag\\\": \"rubidic\",\\n    \\\"popularity\\\": 10805\\n  },\\n  {\\n    \\\"tag\\\": \"acranial\",\\n    \\\"popularity\\\": 10792\\n  },\\n  {\\n    \\\"tag\\\": \"pulvinulus\",\\n    \\\"popularity\\\": 10779\\n  },\\n  {\\n    \\\"tag\\\": \"nattiness\",\\n    \\\"popularity\\\": 10766\\n  },\\n  {\\n    \\\"tag\\\": \"antisimoniacal\",\\n    \\\"popularity\\\": 10752\\n  },\\n  {\\n    \\\"tag\\\": \"tetanize\",\\n    \\\"popularity\\\": 10739\\n  },\\n  {\\n    \\\"tag\\\": \"spectrophobia\",\\n    \\\"popularity\\\": 10726\\n  },\\n  {\\n    \\\"tag\\\": \"monopolitical\",\\n    \\\"popularity\\\": 10713\\n  },\\n  {\\n    \\\"tag\\\": \"teallite\",\\n    \\\"popularity\\\": 10700\\n  },\\n  {\\n    \\\"tag\\\": \"alicyclic interpellator\",\\n    \\\"popularity\\\": 10687\\n  },\\n  {\\n    \\\"tag\\\": \"nonsynthesized\",\\n    \\\"popularity\\\": 10674\\n  },\\n  {\\n    \\\"tag\\\": \"wheelwrighting\",\\n    \\\"popularity\\\": 10661\\n  },\\n  {\\n    \\\"tag\\\": \"pelliculate\",\\n    \\\"popularity\\\": 10648\\n  },\\n  {\\n    \\\"tag\\\": \"Euphyllopoda\",\\n    \\\"popularity\\\": 10635\\n  },\\n  {\\n    \\\"tag\\\": \"graver\",\\n    \\\"popularity\\\": 10622\\n  },\\n  {\\n    \\\"tag\\\": \"automorph\",\\n    \\\"popularity\\\": 10609\\n  },\\n  {\\n    \\\"tag\\\": \"underhanded\",\\n    \\\"popularity\\\": 10597\\n  },\\n  {\\n    \\\"tag\\\": \"causal\",\\n    \\\"popularity\\\": 10584\\n  },\\n  {\\n    \\\"tag\\\": \"odoom\",\\n    \\\"popularity\\\": 10571\\n  },\\n  {\\n    \\\"tag\\\": \"apodictical\",\\n    \\\"popularity\\\": 10558\\n  },\\n  {\\n    \\\"tag\\\": \"foundery\",\\n    \\\"popularity\\\": 10545\\n  },\\n  {\\n    \\\"tag\\\": \"unneighbored\",\\n    \\\"popularity\\\": 10533\\n  },\\n  {\\n    \\\"tag\\\": \"woolshearing\",\\n    \\\"popularity\\\": 10520\\n  },\\n  {\\n    \\\"tag\\\": \"boschveld\",\\n    \\\"popularity\\\": 10507\\n  },\\n  {\\n    \\\"tag\\\": \"unhardened lipopod\",\\n    \\\"popularity\\\": 10495\\n  },\\n  {\\n    \\\"tag\\\": \"unenriching\",\\n    \\\"popularity\\\": 10482\\n  },\\n  {\\n    \\\"tag\\\": \"spak\",\\n    \\\"popularity\\\": 10469\\n  },\\n  {\\n    \\\"tag\\\": \"yogasana\",\\n    \\\"popularity\\\": 10457\\n  },\\n  {\\n    \\\"tag\\\": \"depoetize\",\\n    \\\"popularity\\\": 10444\\n  },\\n  {\\n    \\\"tag\\\": \"parousiamania\",\\n    \\\"popularity\\\": 10432\\n  },\\n  {\\n    \\\"tag\\\": \"longlegs\",\\n    \\\"popularity\\\": 10419\\n  },\\n  {\\n    \\\"tag\\\": \"gelatinizability\",\\n    \\\"popularity\\\": 10407\\n  },\\n  {\\n    \\\"tag\\\": \"edeology\",\\n    \\\"popularity\\\": 10394\\n  },\\n  {\\n    \\\"tag\\\": \"sodwork\",\\n    \\\"popularity\\\": 10382\\n  },\\n  {\\n    \\\"tag\\\": \"somnambule\",\\n    \\\"popularity\\\": 10369\\n  },\\n  {\\n    \\\"tag\\\": \"antiquing\",\\n    \\\"popularity\\\": 10357\\n  },\\n  {\\n    \\\"tag\\\": \"intaker\",\\n    \\\"popularity\\\": 10344\\n  },\\n  {\\n    \\\"tag\\\": \"Gerberia\",\\n    \\\"popularity\\\": 10332\\n  },\\n  {\\n    \\\"tag\\\": \"preadmit\",\\n    \\\"popularity\\\": 10320\\n  },\\n  {\\n    \\\"tag\\\": \"bullhorn\",\\n    \\\"popularity\\\": 10307\\n  },\\n  {\\n    \\\"tag\\\": \"sororal\",\\n    \\\"popularity\\\": 10295\\n  },\\n  {\\n    \\\"tag\\\": \"phaeophyceous\",\\n    \\\"popularity\\\": 10283\\n  },\\n  {\\n    \\\"tag\\\": \"omphalopsychite\",\\n    \\\"popularity\\\": 10271\\n  },\\n  {\\n    \\\"tag\\\": \"substantious\",\\n    \\\"popularity\\\": 10258\\n  },\\n  {\\n    \\\"tag\\\": \"undemonstratively\",\\n    \\\"popularity\\\": 10246\\n  },\\n  {\\n    \\\"tag\\\": \"corallike blackit\",\\n    \\\"popularity\\\": 10234\\n  },\\n  {\\n    \\\"tag\\\": \"amoebous\",\\n    \\\"popularity\\\": 10222\\n  },\\n  {\\n    \\\"tag\\\": \"Polypodium\",\\n    \\\"popularity\\\": 10210\\n  },\\n  {\\n    \\\"tag\\\": \"blodite\",\\n    \\\"popularity\\\": 10198\\n  },\\n  {\\n    \\\"tag\\\": \"hordarian\",\\n    \\\"popularity\\\": 10186\\n  },\\n  {\\n    \\\"tag\\\": \"nonmoral\",\\n    \\\"popularity\\\": 10174\\n  },\\n  {\\n    \\\"tag\\\": \"dredgeful\",\\n    \\\"popularity\\\": 10162\\n  },\\n  {\\n    \\\"tag\\\": \"nourishingly\",\\n    \\\"popularity\\\": 10150\\n  },\\n  {\\n    \\\"tag\\\": \"seamy\",\\n    \\\"popularity\\\": 10138\\n  },\\n  {\\n    \\\"tag\\\": \"vara\",\\n    \\\"popularity\\\": 10126\\n  },\\n  {\\n    \\\"tag\\\": \"incorruptibleness\",\\n    \\\"popularity\\\": 10114\\n  },\\n  {\\n    \\\"tag\\\": \"manipulator\",\\n    \\\"popularity\\\": 10102\\n  },\\n  {\\n    \\\"tag\\\": \"chromodiascope uncountably\",\\n    \\\"popularity\\\": 10090\\n  },\\n  {\\n    \\\"tag\\\": \"typhemia\",\\n    \\\"popularity\\\": 10078\\n  },\\n  {\\n    \\\"tag\\\": \"Smalcaldic\",\\n    \\\"popularity\\\": 10066\\n  },\\n  {\\n    \\\"tag\\\": \"precontrive\",\\n    \\\"popularity\\\": 10054\\n  },\\n  {\\n    \\\"tag\\\": \"sowarry\",\\n    \\\"popularity\\\": 10042\\n  },\\n  {\\n    \\\"tag\\\": \"monopodic\",\\n    \\\"popularity\\\": 10031\\n  },\\n  {\\n    \\\"tag\\\": \"recodify\",\\n    \\\"popularity\\\": 10019\\n  },\\n  {\\n    \\\"tag\\\": \"phosphowolframic rimple\",\\n    \\\"popularity\\\": 10007\\n  },\\n  {\\n    \\\"tag\\\": \"triconch\",\\n    \\\"popularity\\\": 9995\\n  },\\n  {\\n    \\\"tag\\\": \"pycnodontoid\",\\n    \\\"popularity\\\": 9984\\n  },\\n  {\\n    \\\"tag\\\": \"bradyspermatism\",\\n    \\\"popularity\\\": 9972\\n  },\\n  {\\n    \\\"tag\\\": \"extensionist\",\\n    \\\"popularity\\\": 9960\\n  },\\n  {\\n    \\\"tag\\\": \"characterize\",\\n    \\\"popularity\\\": 9949\\n  },\\n  {\\n    \\\"tag\\\": \"anatreptic proteolytic\",\\n    \\\"popularity\\\": 9937\\n  },\\n  {\\n    \\\"tag\\\": \"waterboard\",\\n    \\\"popularity\\\": 9925\\n  },\\n  {\\n    \\\"tag\\\": \"allopathically\",\\n    \\\"popularity\\\": 9914\\n  },\\n  {\\n    \\\"tag\\\": \"arithmetician\",\\n    \\\"popularity\\\": 9902\\n  },\\n  {\\n    \\\"tag\\\": \"subsist\",\\n    \\\"popularity\\\": 9891\\n  },\\n  {\\n    \\\"tag\\\": \"Islamitish\",\\n    \\\"popularity\\\": 9879\\n  },\\n  {\\n    \\\"tag\\\": \"biddy\",\\n    \\\"popularity\\\": 9868\\n  },\\n  {\\n    \\\"tag\\\": \"reverberation\",\\n    \\\"popularity\\\": 9856\\n  },\\n  {\\n    \\\"tag\\\": \"Zaporogue\",\\n    \\\"popularity\\\": 9845\\n  },\\n  {\\n    \\\"tag\\\": \"soapberry\",\\n    \\\"popularity\\\": 9833\\n  },\\n  {\\n    \\\"tag\\\": \"physiognomics\",\\n    \\\"popularity\\\": 9822\\n  },\\n  {\\n    \\\"tag\\\": \"hospitalization\",\\n    \\\"popularity\\\": 9810\\n  },\\n  {\\n    \\\"tag\\\": \"dissembler\",\\n    \\\"popularity\\\": 9799\\n  },\\n  {\\n    \\\"tag\\\": \"festinate\",\\n    \\\"popularity\\\": 9788\\n  },\\n  {\\n    \\\"tag\\\": \"angiectopia\",\\n    \\\"popularity\\\": 9776\\n  },\\n  {\\n    \\\"tag\\\": \"Pulicidae\",\\n    \\\"popularity\\\": 9765\\n  },\\n  {\\n    \\\"tag\\\": \"beslimer\",\\n    \\\"popularity\\\": 9754\\n  },\\n  {\\n    \\\"tag\\\": \"nontreaty\",\\n    \\\"popularity\\\": 9743\\n  },\\n  {\\n    \\\"tag\\\": \"unhaggled\",\\n    \\\"popularity\\\": 9731\\n  },\\n  {\\n    \\\"tag\\\": \"catfall\",\\n    \\\"popularity\\\": 9720\\n  },\\n  {\\n    \\\"tag\\\": \"stola\",\\n    \\\"popularity\\\": 9709\\n  },\\n  {\\n    \\\"tag\\\": \"pataco\",\\n    \\\"popularity\\\": 9698\\n  },\\n  {\\n    \\\"tag\\\": \"ontologistic\",\\n    \\\"popularity\\\": 9686\\n  },\\n  {\\n    \\\"tag\\\": \"aerosphere\",\\n    \\\"popularity\\\": 9675\\n  },\\n  {\\n    \\\"tag\\\": \"deobstruent\",\\n    \\\"popularity\\\": 9664\\n  },\\n  {\\n    \\\"tag\\\": \"threepence\",\\n    \\\"popularity\\\": 9653\\n  },\\n  {\\n    \\\"tag\\\": \"cyprinoid\",\\n    \\\"popularity\\\": 9642\\n  },\\n  {\\n    \\\"tag\\\": \"overbank\",\\n    \\\"popularity\\\": 9631\\n  },\\n  {\\n    \\\"tag\\\": \"prostyle\",\\n    \\\"popularity\\\": 9620\\n  },\\n  {\\n    \\\"tag\\\": \"photoactivation\",\\n    \\\"popularity\\\": 9609\\n  },\\n  {\\n    \\\"tag\\\": \"homothetic\",\\n    \\\"popularity\\\": 9598\\n  },\\n  {\\n    \\\"tag\\\": \"roguedom\",\\n    \\\"popularity\\\": 9587\\n  },\\n  {\\n    \\\"tag\\\": \"underschool\",\\n    \\\"popularity\\\": 9576\\n  },\\n  {\\n    \\\"tag\\\": \"tractility\",\\n    \\\"popularity\\\": 9565\\n  },\\n  {\\n    \\\"tag\\\": \"gardenin\",\\n    \\\"popularity\\\": 9554\\n  },\\n  {\\n    \\\"tag\\\": \"Micromastictora\",\\n    \\\"popularity\\\": 9543\\n  },\\n  {\\n    \\\"tag\\\": \"gossypine\",\\n    \\\"popularity\\\": 9532\\n  },\\n  {\\n    \\\"tag\\\": \"amylodyspepsia\",\\n    \\\"popularity\\\": 9521\\n  },\\n  {\\n    \\\"tag\\\": \"Luciana\",\\n    \\\"popularity\\\": 9510\\n  },\\n  {\\n    \\\"tag\\\": \"meetly nonfisherman\",\\n    \\\"popularity\\\": 9500\\n  },\\n  {\\n    \\\"tag\\\": \"backhanded\",\\n    \\\"popularity\\\": 9489\\n  },\\n  {\\n    \\\"tag\\\": \"decrustation\",\\n    \\\"popularity\\\": 9478\\n  },\\n  {\\n    \\\"tag\\\": \"pinrail\",\\n    \\\"popularity\\\": 9467\\n  },\\n  {\\n    \\\"tag\\\": \"Mahori\",\\n    \\\"popularity\\\": 9456\\n  },\\n  {\\n    \\\"tag\\\": \"unsizable\",\\n    \\\"popularity\\\": 9446\\n  },\\n  {\\n    \\\"tag\\\": \"disawa\",\\n    \\\"popularity\\\": 9435\\n  },\\n  {\\n    \\\"tag\\\": \"launderability inconsidered\",\\n    \\\"popularity\\\": 9424\\n  },\\n  {\\n    \\\"tag\\\": \"unclassical\",\\n    \\\"popularity\\\": 9414\\n  },\\n  {\\n    \\\"tag\\\": \"inobtrusiveness\",\\n    \\\"popularity\\\": 9403\\n  },\\n  {\\n    \\\"tag\\\": \"sialogenous\",\\n    \\\"popularity\\\": 9392\\n  },\\n  {\\n    \\\"tag\\\": \"sulphonamide\",\\n    \\\"popularity\\\": 9382\\n  },\\n  {\\n    \\\"tag\\\": \"diluvion\",\\n    \\\"popularity\\\": 9371\\n  },\\n  {\\n    \\\"tag\\\": \"deuteranope\",\\n    \\\"popularity\\\": 9361\\n  },\\n  {\\n    \\\"tag\\\": \"addition\",\\n    \\\"popularity\\\": 9350\\n  },\\n  {\\n    \\\"tag\\\": \"bockeret\",\\n    \\\"popularity\\\": 9339\\n  },\\n  {\\n    \\\"tag\\\": \"unidentified\",\\n    \\\"popularity\\\": 9329\\n  },\\n  {\\n    \\\"tag\\\": \"caryatic\",\\n    \\\"popularity\\\": 9318\\n  },\\n  {\\n    \\\"tag\\\": \"misattribution\",\\n    \\\"popularity\\\": 9308\\n  },\\n  {\\n    \\\"tag\\\": \"outray\",\\n    \\\"popularity\\\": 9297\\n  },\\n  {\\n    \\\"tag\\\": \"areometrical\",\\n    \\\"popularity\\\": 9287\\n  },\\n  {\\n    \\\"tag\\\": \"antilogism\",\\n    \\\"popularity\\\": 9277\\n  },\\n  {\\n    \\\"tag\\\": \"inadjustable\",\\n    \\\"popularity\\\": 9266\\n  },\\n  {\\n    \\\"tag\\\": \"byssus\",\\n    \\\"popularity\\\": 9256\\n  },\\n  {\\n    \\\"tag\\\": \"trun\",\\n    \\\"popularity\\\": 9245\\n  },\\n  {\\n    \\\"tag\\\": \"thereology\",\\n    \\\"popularity\\\": 9235\\n  },\\n  {\\n    \\\"tag\\\": \"extort\",\\n    \\\"popularity\\\": 9225\\n  },\\n  {\\n    \\\"tag\\\": \"bumpkin\",\\n    \\\"popularity\\\": 9214\\n  },\\n  {\\n    \\\"tag\\\": \"sulphobenzide\",\\n    \\\"popularity\\\": 9204\\n  },\\n  {\\n    \\\"tag\\\": \"hydrogeology\",\\n    \\\"popularity\\\": 9194\\n  },\\n  {\\n    \\\"tag\\\": \"nidulariaceous\",\\n    \\\"popularity\\\": 9183\\n  },\\n  {\\n    \\\"tag\\\": \"propodiale\",\\n    \\\"popularity\\\": 9173\\n  },\\n  {\\n    \\\"tag\\\": \"fierily\",\\n    \\\"popularity\\\": 9163\\n  },\\n  {\\n    \\\"tag\\\": \"aerotonometry\",\\n    \\\"popularity\\\": 9153\\n  },\\n  {\\n    \\\"tag\\\": \"pelobatid oversuperstitious\",\\n    \\\"popularity\\\": 9142\\n  },\\n  {\\n    \\\"tag\\\": \"restringent\",\\n    \\\"popularity\\\": 9132\\n  },\\n  {\\n    \\\"tag\\\": \"tetrapodic\",\\n    \\\"popularity\\\": 9122\\n  },\\n  {\\n    \\\"tag\\\": \"heroicness Vendidad\",\\n    \\\"popularity\\\": 9112\\n  },\\n  {\\n    \\\"tag\\\": \"Sphingurus\",\\n    \\\"popularity\\\": 9102\\n  },\\n  {\\n    \\\"tag\\\": \"sclerote\",\\n    \\\"popularity\\\": 9092\\n  },\\n  {\\n    \\\"tag\\\": \"unkeyed\",\\n    \\\"popularity\\\": 9082\\n  },\\n  {\\n    \\\"tag\\\": \"superparliamentary\",\\n    \\\"popularity\\\": 9072\\n  },\\n  {\\n    \\\"tag\\\": \"hetericism\",\\n    \\\"popularity\\\": 9061\\n  },\\n  {\\n    \\\"tag\\\": \"hucklebone\",\\n    \\\"popularity\\\": 9051\\n  },\\n  {\\n    \\\"tag\\\": \"yojan\",\\n    \\\"popularity\\\": 9041\\n  },\\n  {\\n    \\\"tag\\\": \"bossed\",\\n    \\\"popularity\\\": 9031\\n  },\\n  {\\n    \\\"tag\\\": \"spiderwork\",\\n    \\\"popularity\\\": 9021\\n  },\\n  {\\n    \\\"tag\\\": \"millfeed dullery\",\\n    \\\"popularity\\\": 9011\\n  },\\n  {\\n    \\\"tag\\\": \"adnoun\",\\n    \\\"popularity\\\": 9001\\n  },\\n  {\\n    \\\"tag\\\": \"mesometric\",\\n    \\\"popularity\\\": 8992\\n  },\\n  {\\n    \\\"tag\\\": \"doublehandedness\",\\n    \\\"popularity\\\": 8982\\n  },\\n  {\\n    \\\"tag\\\": \"suppurant\",\\n    \\\"popularity\\\": 8972\\n  },\\n  {\\n    \\\"tag\\\": \"Berlinize\",\\n    \\\"popularity\\\": 8962\\n  },\\n  {\\n    \\\"tag\\\": \"sontag\",\\n    \\\"popularity\\\": 8952\\n  },\\n  {\\n    \\\"tag\\\": \"biplane\",\\n    \\\"popularity\\\": 8942\\n  },\\n  {\\n    \\\"tag\\\": \"insula\",\\n    \\\"popularity\\\": 8932\\n  },\\n  {\\n    \\\"tag\\\": \"unbrand\",\\n    \\\"popularity\\\": 8922\\n  },\\n  {\\n    \\\"tag\\\": \"Basilosaurus\",\\n    \\\"popularity\\\": 8913\\n  },\\n  {\\n    \\\"tag\\\": \"prenomination\",\\n    \\\"popularity\\\": 8903\\n  },\\n  {\\n    \\\"tag\\\": \"untextual\",\\n    \\\"popularity\\\": 8893\\n  },\\n  {\\n    \\\"tag\\\": \"coleslaw\",\\n    \\\"popularity\\\": 8883\\n  },\\n  {\\n    \\\"tag\\\": \"langsyne\",\\n    \\\"popularity\\\": 8874\\n  },\\n  {\\n    \\\"tag\\\": \"impede\",\\n    \\\"popularity\\\": 8864\\n  },\\n  {\\n    \\\"tag\\\": \"irrigator\",\\n    \\\"popularity\\\": 8854\\n  },\\n  {\\n    \\\"tag\\\": \"deflocculation\",\\n    \\\"popularity\\\": 8844\\n  },\\n  {\\n    \\\"tag\\\": \"narghile\",\\n    \\\"popularity\\\": 8835\\n  },\\n  {\\n    \\\"tag\\\": \"unguardedly ebenaceous\",\\n    \\\"popularity\\\": 8825\\n  },\\n  {\\n    \\\"tag\\\": \"conversantly subocular\",\\n    \\\"popularity\\\": 8815\\n  },\\n  {\\n    \\\"tag\\\": \"hydroponic\",\\n    \\\"popularity\\\": 8806\\n  },\\n  {\\n    \\\"tag\\\": \"anthropopsychism\",\\n    \\\"popularity\\\": 8796\\n  },\\n  {\\n    \\\"tag\\\": \"panoptic\",\\n    \\\"popularity\\\": 8787\\n  },\\n  {\\n    \\\"tag\\\": \"insufferable\",\\n    \\\"popularity\\\": 8777\\n  },\\n  {\\n    \\\"tag\\\": \"salema\",\\n    \\\"popularity\\\": 8768\\n  },\\n  {\\n    \\\"tag\\\": \"Myriapoda\",\\n    \\\"popularity\\\": 8758\\n  },\\n  {\\n    \\\"tag\\\": \"regarrison\",\\n    \\\"popularity\\\": 8748\\n  },\\n  {\\n    \\\"tag\\\": \"overlearned\",\\n    \\\"popularity\\\": 8739\\n  },\\n  {\\n    \\\"tag\\\": \"ultraroyalist conventical bureaucratical\",\\n    \\\"popularity\\\": 8729\\n  },\\n  {\\n    \\\"tag\\\": \"epicaridan\",\\n    \\\"popularity\\\": 8720\\n  },\\n  {\\n    \\\"tag\\\": \"poetastress\",\\n    \\\"popularity\\\": 8711\\n  },\\n  {\\n    \\\"tag\\\": \"monophthalmus\",\\n    \\\"popularity\\\": 8701\\n  },\\n  {\\n    \\\"tag\\\": \"simnel\",\\n    \\\"popularity\\\": 8692\\n  },\\n  {\\n    \\\"tag\\\": \"compotor\",\\n    \\\"popularity\\\": 8682\\n  },\\n  {\\n    \\\"tag\\\": \"hydrolase\",\\n    \\\"popularity\\\": 8673\\n  },\\n  {\\n    \\\"tag\\\": \"attemptless\",\\n    \\\"popularity\\\": 8663\\n  },\\n  {\\n    \\\"tag\\\": \"visceroptosis\",\\n    \\\"popularity\\\": 8654\\n  },\\n  {\\n    \\\"tag\\\": \"unpreparedly\",\\n    \\\"popularity\\\": 8645\\n  },\\n  {\\n    \\\"tag\\\": \"mastage\",\\n    \\\"popularity\\\": 8635\\n  },\\n  {\\n    \\\"tag\\\": \"preinfluence\",\\n    \\\"popularity\\\": 8626\\n  },\\n  {\\n    \\\"tag\\\": \"Siwan\",\\n    \\\"popularity\\\": 8617\\n  },\\n  {\\n    \\\"tag\\\": \"ceratotheca belvedere\",\\n    \\\"popularity\\\": 8607\\n  },\\n  {\\n    \\\"tag\\\": \"disenablement\",\\n    \\\"popularity\\\": 8598\\n  },\\n  {\\n    \\\"tag\\\": \"nine\",\\n    \\\"popularity\\\": 8589\\n  },\\n  {\\n    \\\"tag\\\": \"spellingdown abridgment\",\\n    \\\"popularity\\\": 8580\\n  },\\n  {\\n    \\\"tag\\\": \"twilightless\",\\n    \\\"popularity\\\": 8571\\n  },\\n  {\\n    \\\"tag\\\": \"overflow\",\\n    \\\"popularity\\\": 8561\\n  },\\n  {\\n    \\\"tag\\\": \"mismeasurement\",\\n    \\\"popularity\\\": 8552\\n  },\\n  {\\n    \\\"tag\\\": \"nawabship\",\\n    \\\"popularity\\\": 8543\\n  },\\n  {\\n    \\\"tag\\\": \"Phrynosoma\",\\n    \\\"popularity\\\": 8534\\n  },\\n  {\\n    \\\"tag\\\": \"unanticipatingly\",\\n    \\\"popularity\\\": 8525\\n  },\\n  {\\n    \\\"tag\\\": \"blankite\",\\n    \\\"popularity\\\": 8516\\n  },\\n  {\\n    \\\"tag\\\": \"role\",\\n    \\\"popularity\\\": 8506\\n  },\\n  {\\n    \\\"tag\\\": \"peperine edelweiss\",\\n    \\\"popularity\\\": 8497\\n  },\\n  {\\n    \\\"tag\\\": \"unhysterical\",\\n    \\\"popularity\\\": 8488\\n  },\\n  {\\n    \\\"tag\\\": \"attentiveness\",\\n    \\\"popularity\\\": 8479\\n  },\\n  {\\n    \\\"tag\\\": \"scintillant\",\\n    \\\"popularity\\\": 8470\\n  },\\n  {\\n    \\\"tag\\\": \"stenostomatous\",\\n    \\\"popularity\\\": 8461\\n  },\\n  {\\n    \\\"tag\\\": \"pectinite\",\\n    \\\"popularity\\\": 8452\\n  },\\n  {\\n    \\\"tag\\\": \"herring\",\\n    \\\"popularity\\\": 8443\\n  },\\n  {\\n    \\\"tag\\\": \"interroom\",\\n    \\\"popularity\\\": 8434\\n  },\\n  {\\n    \\\"tag\\\": \"laccol\",\\n    \\\"popularity\\\": 8425\\n  },\\n  {\\n    \\\"tag\\\": \"unpartably kylite\",\\n    \\\"popularity\\\": 8416\\n  },\\n  {\\n    \\\"tag\\\": \"spirivalve\",\\n    \\\"popularity\\\": 8407\\n  },\\n  {\\n    \\\"tag\\\": \"hoosegow\",\\n    \\\"popularity\\\": 8398\\n  },\\n  {\\n    \\\"tag\\\": \"doat\",\\n    \\\"popularity\\\": 8389\\n  },\\n  {\\n    \\\"tag\\\": \"amphibian\",\\n    \\\"popularity\\\": 8380\\n  },\\n  {\\n    \\\"tag\\\": \"exposit\",\\n    \\\"popularity\\\": 8371\\n  },\\n  {\\n    \\\"tag\\\": \"canopy\",\\n    \\\"popularity\\\": 8363\\n  },\\n  {\\n    \\\"tag\\\": \"houndlike\",\\n    \\\"popularity\\\": 8354\\n  },\\n  {\\n    \\\"tag\\\": \"spikebill\",\\n    \\\"popularity\\\": 8345\\n  },\\n  {\\n    \\\"tag\\\": \"wiseacre pyrotechnic\",\\n    \\\"popularity\\\": 8336\\n  },\\n  {\\n    \\\"tag\\\": \"confessingly woodman\",\\n    \\\"popularity\\\": 8327\\n  },\\n  {\\n    \\\"tag\\\": \"overside\",\\n    \\\"popularity\\\": 8318\\n  },\\n  {\\n    \\\"tag\\\": \"oftwhiles\",\\n    \\\"popularity\\\": 8310\\n  },\\n  {\\n    \\\"tag\\\": \"Musophagidae\",\\n    \\\"popularity\\\": 8301\\n  },\\n  {\\n    \\\"tag\\\": \"slumberer\",\\n    \\\"popularity\\\": 8292\\n  },\\n  {\\n    \\\"tag\\\": \"leiotrichy\",\\n    \\\"popularity\\\": 8283\\n  },\\n  {\\n    \\\"tag\\\": \"Mantispidae\",\\n    \\\"popularity\\\": 8275\\n  },\\n  {\\n    \\\"tag\\\": \"perceptually\",\\n    \\\"popularity\\\": 8266\\n  },\\n  {\\n    \\\"tag\\\": \"biller\",\\n    \\\"popularity\\\": 8257\\n  },\\n  {\\n    \\\"tag\\\": \"eudaemonical\",\\n    \\\"popularity\\\": 8249\\n  },\\n  {\\n    \\\"tag\\\": \"underfiend\",\\n    \\\"popularity\\\": 8240\\n  },\\n  {\\n    \\\"tag\\\": \"impartible\",\\n    \\\"popularity\\\": 8231\\n  },\\n  {\\n    \\\"tag\\\": \"saxicavous\",\\n    \\\"popularity\\\": 8223\\n  },\\n  {\\n    \\\"tag\\\": \"yapster\",\\n    \\\"popularity\\\": 8214\\n  },\\n  {\\n    \\\"tag\\\": \"aliseptal\",\\n    \\\"popularity\\\": 8205\\n  },\\n  {\\n    \\\"tag\\\": \"omniparient\",\\n    \\\"popularity\\\": 8197\\n  },\\n  {\\n    \\\"tag\\\": \"nishiki\",\\n    \\\"popularity\\\": 8188\\n  },\\n  {\\n    \\\"tag\\\": \"yuzluk\",\\n    \\\"popularity\\\": 8180\\n  },\\n  {\\n    \\\"tag\\\": \"solderer\",\\n    \\\"popularity\\\": 8171\\n  },\\n  {\\n    \\\"tag\\\": \"Pinna\",\\n    \\\"popularity\\\": 8162\\n  },\\n  {\\n    \\\"tag\\\": \"reinterfere\",\\n    \\\"popularity\\\": 8154\\n  },\\n  {\\n    \\\"tag\\\": \"superepic\",\\n    \\\"popularity\\\": 8145\\n  },\\n  {\\n    \\\"tag\\\": \"ronquil\",\\n    \\\"popularity\\\": 8137\\n  },\\n  {\\n    \\\"tag\\\": \"bratstvo\",\\n    \\\"popularity\\\": 8128\\n  },\\n  {\\n    \\\"tag\\\": \"Thea\",\\n    \\\"popularity\\\": 8120\\n  },\\n  {\\n    \\\"tag\\\": \"hermaphroditical\",\\n    \\\"popularity\\\": 8111\\n  },\\n  {\\n    \\\"tag\\\": \"enlief\",\\n    \\\"popularity\\\": 8103\\n  },\\n  {\\n    \\\"tag\\\": \"Jesuate\",\\n    \\\"popularity\\\": 8095\\n  },\\n  {\\n    \\\"tag\\\": \"gaysome\",\\n    \\\"popularity\\\": 8086\\n  },\\n  {\\n    \\\"tag\\\": \"iliohypogastric\",\\n    \\\"popularity\\\": 8078\\n  },\\n  {\\n    \\\"tag\\\": \"regardance\",\\n    \\\"popularity\\\": 8069\\n  },\\n  {\\n    \\\"tag\\\": \"cumulately\",\\n    \\\"popularity\\\": 8061\\n  },\\n  {\\n    \\\"tag\\\": \"haustorial nucleolocentrosome\",\\n    \\\"popularity\\\": 8053\\n  },\\n  {\\n    \\\"tag\\\": \"cosmocrat\",\\n    \\\"popularity\\\": 8044\\n  },\\n  {\\n    \\\"tag\\\": \"onyxitis\",\\n    \\\"popularity\\\": 8036\\n  },\\n  {\\n    \\\"tag\\\": \"Cabinda\",\\n    \\\"popularity\\\": 8028\\n  },\\n  {\\n    \\\"tag\\\": \"coresort\",\\n    \\\"popularity\\\": 8019\\n  },\\n  {\\n    \\\"tag\\\": \"drusy preformant\",\\n    \\\"popularity\\\": 8011\\n  },\\n  {\\n    \\\"tag\\\": \"piningly\",\\n    \\\"popularity\\\": 8003\\n  },\\n  {\\n    \\\"tag\\\": \"bootlessly\",\\n    \\\"popularity\\\": 7994\\n  },\\n  {\\n    \\\"tag\\\": \"talari\",\\n    \\\"popularity\\\": 7986\\n  },\\n  {\\n    \\\"tag\\\": \"amidoacetal\",\\n    \\\"popularity\\\": 7978\\n  },\\n  {\\n    \\\"tag\\\": \"pschent\",\\n    \\\"popularity\\\": 7970\\n  },\\n  {\\n    \\\"tag\\\": \"consumptional scarer titivate\",\\n    \\\"popularity\\\": 7962\\n  },\\n  {\\n    \\\"tag\\\": \"Anserinae\",\\n    \\\"popularity\\\": 7953\\n  },\\n  {\\n    \\\"tag\\\": \"flaunter\",\\n    \\\"popularity\\\": 7945\\n  },\\n  {\\n    \\\"tag\\\": \"reindeer\",\\n    \\\"popularity\\\": 7937\\n  },\\n  {\\n    \\\"tag\\\": \"disparage\",\\n    \\\"popularity\\\": 7929\\n  },\\n  {\\n    \\\"tag\\\": \"superheat\",\\n    \\\"popularity\\\": 7921\\n  },\\n  {\\n    \\\"tag\\\": \"Chromatium\",\\n    \\\"popularity\\\": 7912\\n  },\\n  {\\n    \\\"tag\\\": \"Tina\",\\n    \\\"popularity\\\": 7904\\n  },\\n  {\\n    \\\"tag\\\": \"rededicatory\",\\n    \\\"popularity\\\": 7896\\n  },\\n  {\\n    \\\"tag\\\": \"nontransient\",\\n    \\\"popularity\\\": 7888\\n  },\\n  {\\n    \\\"tag\\\": \"Phocaean brinkless\",\\n    \\\"popularity\\\": 7880\\n  },\\n  {\\n    \\\"tag\\\": \"ventriculose\",\\n    \\\"popularity\\\": 7872\\n  },\\n  {\\n    \\\"tag\\\": \"upplough\",\\n    \\\"popularity\\\": 7864\\n  },\\n  {\\n    \\\"tag\\\": \"succorless\",\\n    \\\"popularity\\\": 7856\\n  },\\n  {\\n    \\\"tag\\\": \"hayrake\",\\n    \\\"popularity\\\": 7848\\n  },\\n  {\\n    \\\"tag\\\": \"merriness amorphia\",\\n    \\\"popularity\\\": 7840\\n  },\\n  {\\n    \\\"tag\\\": \"merycism\",\\n    \\\"popularity\\\": 7832\\n  },\\n  {\\n    \\\"tag\\\": \"checkrow\",\\n    \\\"popularity\\\": 7824\\n  },\\n  {\\n    \\\"tag\\\": \"scry\",\\n    \\\"popularity\\\": 7816\\n  },\\n  {\\n    \\\"tag\\\": \"obvolve\",\\n    \\\"popularity\\\": 7808\\n  },\\n  {\\n    \\\"tag\\\": \"orchard\",\\n    \\\"popularity\\\": 7800\\n  },\\n  {\\n    \\\"tag\\\": \"isomerize\",\\n    \\\"popularity\\\": 7792\\n  },\\n  {\\n    \\\"tag\\\": \"competitrix\",\\n    \\\"popularity\\\": 7784\\n  },\\n  {\\n    \\\"tag\\\": \"unbannered\",\\n    \\\"popularity\\\": 7776\\n  },\\n  {\\n    \\\"tag\\\": \"undoctrined\",\\n    \\\"popularity\\\": 7768\\n  },\\n  {\\n    \\\"tag\\\": \"theologian\",\\n    \\\"popularity\\\": 7760\\n  },\\n  {\\n    \\\"tag\\\": \"nebby\",\\n    \\\"popularity\\\": 7752\\n  },\\n  {\\n    \\\"tag\\\": \"Cardiazol\",\\n    \\\"popularity\\\": 7745\\n  },\\n  {\\n    \\\"tag\\\": \"phagedenic\",\\n    \\\"popularity\\\": 7737\\n  },\\n  {\\n    \\\"tag\\\": \"nostalgic\",\\n    \\\"popularity\\\": 7729\\n  },\\n  {\\n    \\\"tag\\\": \"orthodoxy\",\\n    \\\"popularity\\\": 7721\\n  },\\n  {\\n    \\\"tag\\\": \"oversanguine\",\\n    \\\"popularity\\\": 7713\\n  },\\n  {\\n    \\\"tag\\\": \"lish\",\\n    \\\"popularity\\\": 7705\\n  },\\n  {\\n    \\\"tag\\\": \"ketogenic\",\\n    \\\"popularity\\\": 7698\\n  },\\n  {\\n    \\\"tag\\\": \"syndicalize\",\\n    \\\"popularity\\\": 7690\\n  },\\n  {\\n    \\\"tag\\\": \"leeftail\",\\n    \\\"popularity\\\": 7682\\n  },\\n  {\\n    \\\"tag\\\": \"bulbomedullary\",\\n    \\\"popularity\\\": 7674\\n  },\\n  {\\n    \\\"tag\\\": \"reletter\",\\n    \\\"popularity\\\": 7667\\n  },\\n  {\\n    \\\"tag\\\": \"bitterly\",\\n    \\\"popularity\\\": 7659\\n  },\\n  {\\n    \\\"tag\\\": \"participatory\",\\n    \\\"popularity\\\": 7651\\n  },\\n  {\\n    \\\"tag\\\": \"baldberry\",\\n    \\\"popularity\\\": 7643\\n  },\\n  {\\n    \\\"tag\\\": \"prowaterpower\",\\n    \\\"popularity\\\": 7636\\n  },\\n  {\\n    \\\"tag\\\": \"lexicographical\",\\n    \\\"popularity\\\": 7628\\n  },\\n  {\\n    \\\"tag\\\": \"Anisodactyli\",\\n    \\\"popularity\\\": 7620\\n  },\\n  {\\n    \\\"tag\\\": \"amphipodous\",\\n    \\\"popularity\\\": 7613\\n  },\\n  {\\n    \\\"tag\\\": \"triglandular\",\\n    \\\"popularity\\\": 7605\\n  },\\n  {\\n    \\\"tag\\\": \"xanthopsin\",\\n    \\\"popularity\\\": 7597\\n  },\\n  {\\n    \\\"tag\\\": \"indefinitude\",\\n    \\\"popularity\\\": 7590\\n  },\\n  {\\n    \\\"tag\\\": \"bookworm\",\\n    \\\"popularity\\\": 7582\\n  },\\n  {\\n    \\\"tag\\\": \"suffocative\",\\n    \\\"popularity\\\": 7574\\n  },\\n  {\\n    \\\"tag\\\": \"uncongested tyrant\",\\n    \\\"popularity\\\": 7567\\n  },\\n  {\\n    \\\"tag\\\": \"alow harmoniously Pamir\",\\n    \\\"popularity\\\": 7559\\n  },\\n  {\\n    \\\"tag\\\": \"monander\",\\n    \\\"popularity\\\": 7552\\n  },\\n  {\\n    \\\"tag\\\": \"bagatelle\",\\n    \\\"popularity\\\": 7544\\n  },\\n  {\\n    \\\"tag\\\": \"membranology\",\\n    \\\"popularity\\\": 7537\\n  },\\n  {\\n    \\\"tag\\\": \"parturifacient\",\\n    \\\"popularity\\\": 7529\\n  },\\n  {\\n    \\\"tag\\\": \"excitovascular\",\\n    \\\"popularity\\\": 7522\\n  },\\n  {\\n    \\\"tag\\\": \"homopolar\",\\n    \\\"popularity\\\": 7514\\n  },\\n  {\\n    \\\"tag\\\": \"phobiac\",\\n    \\\"popularity\\\": 7507\\n  },\\n  {\\n    \\\"tag\\\": \"clype\",\\n    \\\"popularity\\\": 7499\\n  },\\n  {\\n    \\\"tag\\\": \"unsubversive\",\\n    \\\"popularity\\\": 7492\\n  },\\n  {\\n    \\\"tag\\\": \"bostrychoidal scorpionwort\",\\n    \\\"popularity\\\": 7484\\n  },\\n  {\\n    \\\"tag\\\": \"biliteralism\",\\n    \\\"popularity\\\": 7477\\n  },\\n  {\\n    \\\"tag\\\": \"dentatocostate\",\\n    \\\"popularity\\\": 7469\\n  },\\n  {\\n    \\\"tag\\\": \"Pici\",\\n    \\\"popularity\\\": 7462\\n  },\\n  {\\n    \\\"tag\\\": \"sideritic\",\\n    \\\"popularity\\\": 7454\\n  },\\n  {\\n    \\\"tag\\\": \"syntaxis\",\\n    \\\"popularity\\\": 7447\\n  },\\n  {\\n    \\\"tag\\\": \"ingest\",\\n    \\\"popularity\\\": 7440\\n  },\\n  {\\n    \\\"tag\\\": \"rigmarolish\",\\n    \\\"popularity\\\": 7432\\n  },\\n  {\\n    \\\"tag\\\": \"ocreaceous\",\\n    \\\"popularity\\\": 7425\\n  },\\n  {\\n    \\\"tag\\\": \"hyperbrachyskelic\",\\n    \\\"popularity\\\": 7418\\n  },\\n  {\\n    \\\"tag\\\": \"basophobia\",\\n    \\\"popularity\\\": 7410\\n  },\\n  {\\n    \\\"tag\\\": \"substantialness\",\\n    \\\"popularity\\\": 7403\\n  },\\n  {\\n    \\\"tag\\\": \"agglutinoid\",\\n    \\\"popularity\\\": 7396\\n  },\\n  {\\n    \\\"tag\\\": \"longleaf\",\\n    \\\"popularity\\\": 7388\\n  },\\n  {\\n    \\\"tag\\\": \"electroengraving\",\\n    \\\"popularity\\\": 7381\\n  },\\n  {\\n    \\\"tag\\\": \"laparoenterotomy\",\\n    \\\"popularity\\\": 7374\\n  },\\n  {\\n    \\\"tag\\\": \"oxalylurea\",\\n    \\\"popularity\\\": 7366\\n  },\\n  {\\n    \\\"tag\\\": \"unattaintedly\",\\n    \\\"popularity\\\": 7359\\n  },\\n  {\\n    \\\"tag\\\": \"pennystone\",\\n    \\\"popularity\\\": 7352\\n  },\\n  {\\n    \\\"tag\\\": \"Plumbaginaceae\",\\n    \\\"popularity\\\": 7345\\n  },\\n  {\\n    \\\"tag\\\": \"horntip\",\\n    \\\"popularity\\\": 7337\\n  },\\n  {\\n    \\\"tag\\\": \"begrudge\",\\n    \\\"popularity\\\": 7330\\n  },\\n  {\\n    \\\"tag\\\": \"bechignoned\",\\n    \\\"popularity\\\": 7323\\n  },\\n  {\\n    \\\"tag\\\": \"hologonidium\",\\n    \\\"popularity\\\": 7316\\n  },\\n  {\\n    \\\"tag\\\": \"Pulian\",\\n    \\\"popularity\\\": 7309\\n  },\\n  {\\n    \\\"tag\\\": \"gratulation\",\\n    \\\"popularity\\\": 7301\\n  },\\n  {\\n    \\\"tag\\\": \"Sebright\",\\n    \\\"popularity\\\": 7294\\n  },\\n  {\\n    \\\"tag\\\": \"coinstantaneous emotionally\",\\n    \\\"popularity\\\": 7287\\n  },\\n  {\\n    \\\"tag\\\": \"thoracostracan\",\\n    \\\"popularity\\\": 7280\\n  },\\n  {\\n    \\\"tag\\\": \"saurodont\",\\n    \\\"popularity\\\": 7273\\n  },\\n  {\\n    \\\"tag\\\": \"coseat\",\\n    \\\"popularity\\\": 7266\\n  },\\n  {\\n    \\\"tag\\\": \"irascibility\",\\n    \\\"popularity\\\": 7259\\n  },\\n  {\\n    \\\"tag\\\": \"occlude\",\\n    \\\"popularity\\\": 7251\\n  },\\n  {\\n    \\\"tag\\\": \"metallurgist\",\\n    \\\"popularity\\\": 7244\\n  },\\n  {\\n    \\\"tag\\\": \"extraviolet\",\\n    \\\"popularity\\\": 7237\\n  },\\n  {\\n    \\\"tag\\\": \"clinic\",\\n    \\\"popularity\\\": 7230\\n  },\\n  {\\n    \\\"tag\\\": \"skater\",\\n    \\\"popularity\\\": 7223\\n  },\\n  {\\n    \\\"tag\\\": \"linguistic\",\\n    \\\"popularity\\\": 7216\\n  },\\n  {\\n    \\\"tag\\\": \"attacheship\",\\n    \\\"popularity\\\": 7209\\n  },\\n  {\\n    \\\"tag\\\": \"Rachianectes\",\\n    \\\"popularity\\\": 7202\\n  },\\n  {\\n    \\\"tag\\\": \"foliolose\",\\n    \\\"popularity\\\": 7195\\n  },\\n  {\\n    \\\"tag\\\": \"claudetite\",\\n    \\\"popularity\\\": 7188\\n  },\\n  {\\n    \\\"tag\\\": \"aphidian scratching\",\\n    \\\"popularity\\\": 7181\\n  },\\n  {\\n    \\\"tag\\\": \"Carida\",\\n    \\\"popularity\\\": 7174\\n  },\\n  {\\n    \\\"tag\\\": \"tiepin polymicroscope\",\\n    \\\"popularity\\\": 7167\\n  },\\n  {\\n    \\\"tag\\\": \"telpherage\",\\n    \\\"popularity\\\": 7160\\n  },\\n  {\\n    \\\"tag\\\": \"meek\",\\n    \\\"popularity\\\": 7153\\n  },\\n  {\\n    \\\"tag\\\": \"swiftness\",\\n    \\\"popularity\\\": 7146\\n  },\\n  {\\n    \\\"tag\\\": \"gentes\",\\n    \\\"popularity\\\": 7139\\n  },\\n  {\\n    \\\"tag\\\": \"uncommemorated\",\\n    \\\"popularity\\\": 7132\\n  },\\n  {\\n    \\\"tag\\\": \"Lazarus\",\\n    \\\"popularity\\\": 7125\\n  },\\n  {\\n    \\\"tag\\\": \"redivive\",\\n    \\\"popularity\\\": 7119\\n  },\\n  {\\n    \\\"tag\\\": \"nonfebrile\",\\n    \\\"popularity\\\": 7112\\n  },\\n  {\\n    \\\"tag\\\": \"nymphet\",\\n    \\\"popularity\\\": 7105\\n  },\\n  {\\n    \\\"tag\\\": \"areologically\",\\n    \\\"popularity\\\": 7098\\n  },\\n  {\\n    \\\"tag\\\": \"undonkey\",\\n    \\\"popularity\\\": 7091\\n  },\\n  {\\n    \\\"tag\\\": \"projecting\",\\n    \\\"popularity\\\": 7084\\n  },\\n  {\\n    \\\"tag\\\": \"pinnigrade\",\\n    \\\"popularity\\\": 7077\\n  },\\n  {\\n    \\\"tag\\\": \"butylation\",\\n    \\\"popularity\\\": 7071\\n  },\\n  {\\n    \\\"tag\\\": \"philologistic lenticle\",\\n    \\\"popularity\\\": 7064\\n  },\\n  {\\n    \\\"tag\\\": \"nooky\",\\n    \\\"popularity\\\": 7057\\n  },\\n  {\\n    \\\"tag\\\": \"incestuousness\",\\n    \\\"popularity\\\": 7050\\n  },\\n  {\\n    \\\"tag\\\": \"palingenetically\",\\n    \\\"popularity\\\": 7043\\n  },\\n  {\\n    \\\"tag\\\": \"mitochondria\",\\n    \\\"popularity\\\": 7037\\n  },\\n  {\\n    \\\"tag\\\": \"truthify\",\\n    \\\"popularity\\\": 7030\\n  },\\n  {\\n    \\\"tag\\\": \"titanyl\",\\n    \\\"popularity\\\": 7023\\n  },\\n  {\\n    \\\"tag\\\": \"bestride\",\\n    \\\"popularity\\\": 7016\\n  },\\n  {\\n    \\\"tag\\\": \"chende\",\\n    \\\"popularity\\\": 7010\\n  },\\n  {\\n    \\\"tag\\\": \"Chaucerian monophote\",\\n    \\\"popularity\\\": 7003\\n  },\\n  {\\n    \\\"tag\\\": \"cutback\",\\n    \\\"popularity\\\": 6996\\n  },\\n  {\\n    \\\"tag\\\": \"unpatiently\",\\n    \\\"popularity\\\": 6989\\n  },\\n  {\\n    \\\"tag\\\": \"subvitreous\",\\n    \\\"popularity\\\": 6983\\n  },\\n  {\\n    \\\"tag\\\": \"organizable\",\\n    \\\"popularity\\\": 6976\\n  },\\n  {\\n    \\\"tag\\\": \"anniverse uncomprehensible\",\\n    \\\"popularity\\\": 6969\\n  },\\n  {\\n    \\\"tag\\\": \"hyalescence\",\\n    \\\"popularity\\\": 6963\\n  },\\n  {\\n    \\\"tag\\\": \"amniochorial\",\\n    \\\"popularity\\\": 6956\\n  },\\n  {\\n    \\\"tag\\\": \"Corybantian\",\\n    \\\"popularity\\\": 6949\\n  },\\n  {\\n    \\\"tag\\\": \"genocide Scaphitidae\",\\n    \\\"popularity\\\": 6943\\n  },\\n  {\\n    \\\"tag\\\": \"accordionist\",\\n    \\\"popularity\\\": 6936\\n  },\\n  {\\n    \\\"tag\\\": \"becheck\",\\n    \\\"popularity\\\": 6930\\n  },\\n  {\\n    \\\"tag\\\": \"overproduce\",\\n    \\\"popularity\\\": 6923\\n  },\\n  {\\n    \\\"tag\\\": \"unmaniac frijolillo\",\\n    \\\"popularity\\\": 6916\\n  },\\n  {\\n    \\\"tag\\\": \"multisulcated\",\\n    \\\"popularity\\\": 6910\\n  },\\n  {\\n    \\\"tag\\\": \"wennebergite\",\\n    \\\"popularity\\\": 6903\\n  },\\n  {\\n    \\\"tag\\\": \"tautousious mowth\",\\n    \\\"popularity\\\": 6897\\n  },\\n  {\\n    \\\"tag\\\": \"marigold\",\\n    \\\"popularity\\\": 6890\\n  },\\n  {\\n    \\\"tag\\\": \"affray\",\\n    \\\"popularity\\\": 6884\\n  },\\n  {\\n    \\\"tag\\\": \"nonidolatrous\",\\n    \\\"popularity\\\": 6877\\n  },\\n  {\\n    \\\"tag\\\": \"aphrasia\",\\n    \\\"popularity\\\": 6871\\n  },\\n  {\\n    \\\"tag\\\": \"muddlingly\",\\n    \\\"popularity\\\": 6864\\n  },\\n  {\\n    \\\"tag\\\": \"clear\",\\n    \\\"popularity\\\": 6858\\n  },\\n  {\\n    \\\"tag\\\": \"Clitoria\",\\n    \\\"popularity\\\": 6851\\n  },\\n  {\\n    \\\"tag\\\": \"apportionment underwaist\",\\n    \\\"popularity\\\": 6845\\n  },\\n  {\\n    \\\"tag\\\": \"kodakist\",\\n    \\\"popularity\\\": 6838\\n  },\\n  {\\n    \\\"tag\\\": \"Momotidae\",\\n    \\\"popularity\\\": 6832\\n  },\\n  {\\n    \\\"tag\\\": \"cryptovalency\",\\n    \\\"popularity\\\": 6825\\n  },\\n  {\\n    \\\"tag\\\": \"floe\",\\n    \\\"popularity\\\": 6819\\n  },\\n  {\\n    \\\"tag\\\": \"aphagia\",\\n    \\\"popularity\\\": 6812\\n  },\\n  {\\n    \\\"tag\\\": \"brontograph\",\\n    \\\"popularity\\\": 6806\\n  },\\n  {\\n    \\\"tag\\\": \"tubulous\",\\n    \\\"popularity\\\": 6799\\n  },\\n  {\\n    \\\"tag\\\": \"unhorse\",\\n    \\\"popularity\\\": 6793\\n  },\\n  {\\n    \\\"tag\\\": \"chlordane\",\\n    \\\"popularity\\\": 6787\\n  },\\n  {\\n    \\\"tag\\\": \"colloquy brochan\",\\n    \\\"popularity\\\": 6780\\n  },\\n  {\\n    \\\"tag\\\": \"sloosh\",\\n    \\\"popularity\\\": 6774\\n  },\\n  {\\n    \\\"tag\\\": \"battered\",\\n    \\\"popularity\\\": 6767\\n  },\\n  {\\n    \\\"tag\\\": \"monocularity pluriguttulate\",\\n    \\\"popularity\\\": 6761\\n  },\\n  {\\n    \\\"tag\\\": \"chiastoneury\",\\n    \\\"popularity\\\": 6755\\n  },\\n  {\\n    \\\"tag\\\": \"Sanguinaria\",\\n    \\\"popularity\\\": 6748\\n  },\\n  {\\n    \\\"tag\\\": \"confessionary\",\\n    \\\"popularity\\\": 6742\\n  },\\n  {\\n    \\\"tag\\\": \"enzymic\",\\n    \\\"popularity\\\": 6736\\n  },\\n  {\\n    \\\"tag\\\": \"cord\",\\n    \\\"popularity\\\": 6729\\n  },\\n  {\\n    \\\"tag\\\": \"oviducal\",\\n    \\\"popularity\\\": 6723\\n  },\\n  {\\n    \\\"tag\\\": \"crozzle outsea\",\\n    \\\"popularity\\\": 6717\\n  },\\n  {\\n    \\\"tag\\\": \"balladical\",\\n    \\\"popularity\\\": 6710\\n  },\\n  {\\n    \\\"tag\\\": \"uncollectibleness\",\\n    \\\"popularity\\\": 6704\\n  },\\n  {\\n    \\\"tag\\\": \"predorsal\",\\n    \\\"popularity\\\": 6698\\n  },\\n  {\\n    \\\"tag\\\": \"reauthenticate\",\\n    \\\"popularity\\\": 6692\\n  },\\n  {\\n    \\\"tag\\\": \"ravissant\",\\n    \\\"popularity\\\": 6685\\n  },\\n  {\\n    \\\"tag\\\": \"advantageousness\",\\n    \\\"popularity\\\": 6679\\n  },\\n  {\\n    \\\"tag\\\": \"rung\",\\n    \\\"popularity\\\": 6673\\n  },\\n  {\\n    \\\"tag\\\": \"duncedom\",\\n    \\\"popularity\\\": 6667\\n  },\\n  {\\n    \\\"tag\\\": \"hematolite\",\\n    \\\"popularity\\\": 6660\\n  },\\n  {\\n    \\\"tag\\\": \"thisness\",\\n    \\\"popularity\\\": 6654\\n  },\\n  {\\n    \\\"tag\\\": \"mapau\",\\n    \\\"popularity\\\": 6648\\n  },\\n  {\\n    \\\"tag\\\": \"Hecatic\",\\n    \\\"popularity\\\": 6642\\n  },\\n  {\\n    \\\"tag\\\": \"meningoencephalocele\",\\n    \\\"popularity\\\": 6636\\n  },\\n  {\\n    \\\"tag\\\": \"confection sorra\",\\n    \\\"popularity\\\": 6630\\n  },\\n  {\\n    \\\"tag\\\": \"unsedate\",\\n    \\\"popularity\\\": 6623\\n  },\\n  {\\n    \\\"tag\\\": \"meningocerebritis\",\\n    \\\"popularity\\\": 6617\\n  },\\n  {\\n    \\\"tag\\\": \"biopsychological\",\\n    \\\"popularity\\\": 6611\\n  },\\n  {\\n    \\\"tag\\\": \"clavicithern\",\\n    \\\"popularity\\\": 6605\\n  },\\n  {\\n    \\\"tag\\\": \"resun\",\\n    \\\"popularity\\\": 6599\\n  },\\n  {\\n    \\\"tag\\\": \"bayamo\",\\n    \\\"popularity\\\": 6593\\n  },\\n  {\\n    \\\"tag\\\": \"seeableness\",\\n    \\\"popularity\\\": 6587\\n  },\\n  {\\n    \\\"tag\\\": \"hypsidolichocephalism\",\\n    \\\"popularity\\\": 6581\\n  },\\n  {\\n    \\\"tag\\\": \"salivous\",\\n    \\\"popularity\\\": 6574\\n  },\\n  {\\n    \\\"tag\\\": \"neumatize\",\\n    \\\"popularity\\\": 6568\\n  },\\n  {\\n    \\\"tag\\\": \"stree\",\\n    \\\"popularity\\\": 6562\\n  },\\n  {\\n    \\\"tag\\\": \"markshot\",\\n    \\\"popularity\\\": 6556\\n  },\\n  {\\n    \\\"tag\\\": \"phraseologically\",\\n    \\\"popularity\\\": 6550\\n  },\\n  {\\n    \\\"tag\\\": \"yealing\",\\n    \\\"popularity\\\": 6544\\n  },\\n  {\\n    \\\"tag\\\": \"puggy\",\\n    \\\"popularity\\\": 6538\\n  },\\n  {\\n    \\\"tag\\\": \"sexadecimal\",\\n    \\\"popularity\\\": 6532\\n  },\\n  {\\n    \\\"tag\\\": \"unofficerlike\",\\n    \\\"popularity\\\": 6526\\n  },\\n  {\\n    \\\"tag\\\": \"curiosa\",\\n    \\\"popularity\\\": 6520\\n  },\\n  {\\n    \\\"tag\\\": \"pedomotor\",\\n    \\\"popularity\\\": 6514\\n  },\\n  {\\n    \\\"tag\\\": \"astrally\",\\n    \\\"popularity\\\": 6508\\n  },\\n  {\\n    \\\"tag\\\": \"prosomatic\",\\n    \\\"popularity\\\": 6502\\n  },\\n  {\\n    \\\"tag\\\": \"bulletheaded\",\\n    \\\"popularity\\\": 6496\\n  },\\n  {\\n    \\\"tag\\\": \"fortuned\",\\n    \\\"popularity\\\": 6490\\n  },\\n  {\\n    \\\"tag\\\": \"pixy\",\\n    \\\"popularity\\\": 6484\\n  },\\n  {\\n    \\\"tag\\\": \"protectrix\",\\n    \\\"popularity\\\": 6478\\n  },\\n  {\\n    \\\"tag\\\": \"arthritical\",\\n    \\\"popularity\\\": 6472\\n  },\\n  {\\n    \\\"tag\\\": \"coction\",\\n    \\\"popularity\\\": 6466\\n  },\\n  {\\n    \\\"tag\\\": \"Anthropos\",\\n    \\\"popularity\\\": 6460\\n  },\\n  {\\n    \\\"tag\\\": \"runer\",\\n    \\\"popularity\\\": 6454\\n  },\\n  {\\n    \\\"tag\\\": \"prenotify\",\\n    \\\"popularity\\\": 6449\\n  },\\n  {\\n    \\\"tag\\\": \"microspheric gastroparalysis\",\\n    \\\"popularity\\\": 6443\\n  },\\n  {\\n    \\\"tag\\\": \"Jovicentrical\",\\n    \\\"popularity\\\": 6437\\n  },\\n  {\\n    \\\"tag\\\": \"ceratopsid\",\\n    \\\"popularity\\\": 6431\\n  },\\n  {\\n    \\\"tag\\\": \"Theodoric\",\\n    \\\"popularity\\\": 6425\\n  },\\n  {\\n    \\\"tag\\\": \"Pactolus\",\\n    \\\"popularity\\\": 6419\\n  },\\n  {\\n    \\\"tag\\\": \"spawning\",\\n    \\\"popularity\\\": 6413\\n  },\\n  {\\n    \\\"tag\\\": \"nonconfidential\",\\n    \\\"popularity\\\": 6407\\n  },\\n  {\\n    \\\"tag\\\": \"halotrichite infumate\",\\n    \\\"popularity\\\": 6402\\n  },\\n  {\\n    \\\"tag\\\": \"undiscriminatingly\",\\n    \\\"popularity\\\": 6396\\n  },\\n  {\\n    \\\"tag\\\": \"unexasperated\",\\n    \\\"popularity\\\": 6390\\n  },\\n  {\\n    \\\"tag\\\": \"isoeugenol\",\\n    \\\"popularity\\\": 6384\\n  },\\n  {\\n    \\\"tag\\\": \"pressboard\",\\n    \\\"popularity\\\": 6378\\n  },\\n  {\\n    \\\"tag\\\": \"unshrew\",\\n    \\\"popularity\\\": 6372\\n  },\\n  {\\n    \\\"tag\\\": \"huffingly\",\\n    \\\"popularity\\\": 6367\\n  },\\n  {\\n    \\\"tag\\\": \"wagaun\",\\n    \\\"popularity\\\": 6361\\n  },\\n  {\\n    \\\"tag\\\": \"squirt Philistine\",\\n    \\\"popularity\\\": 6355\\n  },\\n  {\\n    \\\"tag\\\": \"kryptic\",\\n    \\\"popularity\\\": 6349\\n  },\\n  {\\n    \\\"tag\\\": \"paraform\",\\n    \\\"popularity\\\": 6344\\n  },\\n  {\\n    \\\"tag\\\": \"preverify\",\\n    \\\"popularity\\\": 6338\\n  },\\n  {\\n    \\\"tag\\\": \"dalar\",\\n    \\\"popularity\\\": 6332\\n  },\\n  {\\n    \\\"tag\\\": \"interdictor appraisingly\",\\n    \\\"popularity\\\": 6326\\n  },\\n  {\\n    \\\"tag\\\": \"chipped\",\\n    \\\"popularity\\\": 6321\\n  },\\n  {\\n    \\\"tag\\\": \"Pteropoda\",\\n    \\\"popularity\\\": 6315\\n  },\\n  {\\n    \\\"tag\\\": \"Bohairic\",\\n    \\\"popularity\\\": 6309\\n  },\\n  {\\n    \\\"tag\\\": \"felting\",\\n    \\\"popularity\\\": 6303\\n  },\\n  {\\n    \\\"tag\\\": \"compurgatorial\",\\n    \\\"popularity\\\": 6298\\n  },\\n  {\\n    \\\"tag\\\": \"unclead\",\\n    \\\"popularity\\\": 6292\\n  },\\n  {\\n    \\\"tag\\\": \"stockish\",\\n    \\\"popularity\\\": 6286\\n  },\\n  {\\n    \\\"tag\\\": \"mulligatawny\",\\n    \\\"popularity\\\": 6281\\n  },\\n  {\\n    \\\"tag\\\": \"Monotheletism\",\\n    \\\"popularity\\\": 6275\\n  },\\n  {\\n    \\\"tag\\\": \"lutanist\",\\n    \\\"popularity\\\": 6269\\n  },\\n  {\\n    \\\"tag\\\": \"gluttonize\",\\n    \\\"popularity\\\": 6264\\n  },\\n  {\\n    \\\"tag\\\": \"hackneyed\",\\n    \\\"popularity\\\": 6258\\n  },\\n  {\\n    \\\"tag\\\": \"yield\",\\n    \\\"popularity\\\": 6253\\n  },\\n  {\\n    \\\"tag\\\": \"sulphonamido\",\\n    \\\"popularity\\\": 6247\\n  },\\n  {\\n    \\\"tag\\\": \"granulative\",\\n    \\\"popularity\\\": 6241\\n  },\\n  {\\n    \\\"tag\\\": \"swingy\",\\n    \\\"popularity\\\": 6236\\n  },\\n  {\\n    \\\"tag\\\": \"Desmidiales\",\\n    \\\"popularity\\\": 6230\\n  },\\n  {\\n    \\\"tag\\\": \"tootlish\",\\n    \\\"popularity\\\": 6224\\n  },\\n  {\\n    \\\"tag\\\": \"unsatisfiedly\",\\n    \\\"popularity\\\": 6219\\n  },\\n  {\\n    \\\"tag\\\": \"burucha\",\\n    \\\"popularity\\\": 6213\\n  },\\n  {\\n    \\\"tag\\\": \"premeditatingly\",\\n    \\\"popularity\\\": 6208\\n  },\\n  {\\n    \\\"tag\\\": \"cowrie\",\\n    \\\"popularity\\\": 6202\\n  },\\n  {\\n    \\\"tag\\\": \"pleurolysis\",\\n    \\\"popularity\\\": 6197\\n  },\\n  {\\n    \\\"tag\\\": \"nationalist\",\\n    \\\"popularity\\\": 6191\\n  },\\n  {\\n    \\\"tag\\\": \"Pholadacea\",\\n    \\\"popularity\\\": 6186\\n  },\\n  {\\n    \\\"tag\\\": \"anakrousis\",\\n    \\\"popularity\\\": 6180\\n  },\\n  {\\n    \\\"tag\\\": \"proctorial\",\\n    \\\"popularity\\\": 6175\\n  },\\n  {\\n    \\\"tag\\\": \"cavillation\",\\n    \\\"popularity\\\": 6169\\n  },\\n  {\\n    \\\"tag\\\": \"cervicobregmatic\",\\n    \\\"popularity\\\": 6163\\n  },\\n  {\\n    \\\"tag\\\": \"interspecific\",\\n    \\\"popularity\\\": 6158\\n  },\\n  {\\n    \\\"tag\\\": \"Teutonity\",\\n    \\\"popularity\\\": 6152\\n  },\\n  {\\n    \\\"tag\\\": \"snakeholing\",\\n    \\\"popularity\\\": 6147\\n  },\\n  {\\n    \\\"tag\\\": \"balcony\",\\n    \\\"popularity\\\": 6142\\n  },\\n  {\\n    \\\"tag\\\": \"latchless\",\\n    \\\"popularity\\\": 6136\\n  },\\n  {\\n    \\\"tag\\\": \"Mithraea\",\\n    \\\"popularity\\\": 6131\\n  },\\n  {\\n    \\\"tag\\\": \"pseudepigraph\",\\n    \\\"popularity\\\": 6125\\n  },\\n  {\\n    \\\"tag\\\": \"flosser\",\\n    \\\"popularity\\\": 6120\\n  },\\n  {\\n    \\\"tag\\\": \"kotyle\",\\n    \\\"popularity\\\": 6114\\n  },\\n  {\\n    \\\"tag\\\": \"outdo\",\\n    \\\"popularity\\\": 6109\\n  },\\n  {\\n    \\\"tag\\\": \"interclerical\",\\n    \\\"popularity\\\": 6103\\n  },\\n  {\\n    \\\"tag\\\": \"aurar\",\\n    \\\"popularity\\\": 6098\\n  },\\n  {\\n    \\\"tag\\\": \"apophyseal\",\\n    \\\"popularity\\\": 6093\\n  },\\n  {\\n    \\\"tag\\\": \"Miro\",\\n    \\\"popularity\\\": 6087\\n  },\\n  {\\n    \\\"tag\\\": \"Priscillian\",\\n    \\\"popularity\\\": 6082\\n  },\\n  {\\n    \\\"tag\\\": \"alluvia\",\\n    \\\"popularity\\\": 6076\\n  },\\n  {\\n    \\\"tag\\\": \"exordize\",\\n    \\\"popularity\\\": 6071\\n  },\\n  {\\n    \\\"tag\\\": \"breakage\",\\n    \\\"popularity\\\": 6066\\n  },\\n  {\\n    \\\"tag\\\": \"unclosable\",\\n    \\\"popularity\\\": 6060\\n  },\\n  {\\n    \\\"tag\\\": \"monocondylous\",\\n    \\\"popularity\\\": 6055\\n  },\\n  {\\n    \\\"tag\\\": \"dyarchy\",\\n    \\\"popularity\\\": 6050\\n  },\\n  {\\n    \\\"tag\\\": \"subchelate\",\\n    \\\"popularity\\\": 6044\\n  },\\n  {\\n    \\\"tag\\\": \"hearsay\",\\n    \\\"popularity\\\": 6039\\n  },\\n  {\\n    \\\"tag\\\": \"prestigiously\",\\n    \\\"popularity\\\": 6034\\n  },\\n  {\\n    \\\"tag\\\": \"unimuscular\",\\n    \\\"popularity\\\": 6028\\n  },\\n  {\\n    \\\"tag\\\": \"lingwort\",\\n    \\\"popularity\\\": 6023\\n  },\\n  {\\n    \\\"tag\\\": \"jealous\",\\n    \\\"popularity\\\": 6018\\n  },\\n  {\\n    \\\"tag\\\": \"artilleryman\",\\n    \\\"popularity\\\": 6012\\n  },\\n  {\\n    \\\"tag\\\": \"phantasmagorially\",\\n    \\\"popularity\\\": 6007\\n  },\\n  {\\n    \\\"tag\\\": \"stagnum\",\\n    \\\"popularity\\\": 6002\\n  },\\n  {\\n    \\\"tag\\\": \"organotropism shatteringly\",\\n    \\\"popularity\\\": 5997\\n  },\\n  {\\n    \\\"tag\\\": \"Mytilus Hebraist\",\\n    \\\"popularity\\\": 5991\\n  },\\n  {\\n    \\\"tag\\\": \"returf\",\\n    \\\"popularity\\\": 5986\\n  },\\n  {\\n    \\\"tag\\\": \"townfolk\",\\n    \\\"popularity\\\": 5981\\n  },\\n  {\\n    \\\"tag\\\": \"propitiative\",\\n    \\\"popularity\\\": 5976\\n  },\\n  {\\n    \\\"tag\\\": \"Anita unsullied\",\\n    \\\"popularity\\\": 5970\\n  },\\n  {\\n    \\\"tag\\\": \"bandoleered\",\\n    \\\"popularity\\\": 5965\\n  },\\n  {\\n    \\\"tag\\\": \"cubby\",\\n    \\\"popularity\\\": 5960\\n  },\\n  {\\n    \\\"tag\\\": \"Hexanchus\",\\n    \\\"popularity\\\": 5955\\n  },\\n  {\\n    \\\"tag\\\": \"circuminsular\",\\n    \\\"popularity\\\": 5949\\n  },\\n  {\\n    \\\"tag\\\": \"chamberletted eumycete\",\\n    \\\"popularity\\\": 5944\\n  },\\n  {\\n    \\\"tag\\\": \"secure\",\\n    \\\"popularity\\\": 5939\\n  },\\n  {\\n    \\\"tag\\\": \"Edwardean\",\\n    \\\"popularity\\\": 5934\\n  },\\n  {\\n    \\\"tag\\\": \"strenth\",\\n    \\\"popularity\\\": 5929\\n  },\\n  {\\n    \\\"tag\\\": \"exhaustless\",\\n    \\\"popularity\\\": 5923\\n  },\\n  {\\n    \\\"tag\\\": \"electioneerer\",\\n    \\\"popularity\\\": 5918\\n  },\\n  {\\n    \\\"tag\\\": \"estoile\",\\n    \\\"popularity\\\": 5913\\n  },\\n  {\\n    \\\"tag\\\": \"redden\",\\n    \\\"popularity\\\": 5908\\n  },\\n  {\\n    \\\"tag\\\": \"solicitee\",\\n    \\\"popularity\\\": 5903\\n  },\\n  {\\n    \\\"tag\\\": \"nonpatented\",\\n    \\\"popularity\\\": 5898\\n  },\\n  {\\n    \\\"tag\\\": \"lemming\",\\n    \\\"popularity\\\": 5893\\n  },\\n  {\\n    \\\"tag\\\": \"marled subalate\",\\n    \\\"popularity\\\": 5887\\n  },\\n  {\\n    \\\"tag\\\": \"premial horizonward\",\\n    \\\"popularity\\\": 5882\\n  },\\n  {\\n    \\\"tag\\\": \"nonrefueling\",\\n    \\\"popularity\\\": 5877\\n  },\\n  {\\n    \\\"tag\\\": \"rupturewort\",\\n    \\\"popularity\\\": 5872\\n  },\\n  {\\n    \\\"tag\\\": \"unfed\",\\n    \\\"popularity\\\": 5867\\n  },\\n  {\\n    \\\"tag\\\": \"empanelment\",\\n    \\\"popularity\\\": 5862\\n  },\\n  {\\n    \\\"tag\\\": \"isoosmosis\",\\n    \\\"popularity\\\": 5857\\n  },\\n  {\\n    \\\"tag\\\": \"jipijapa\",\\n    \\\"popularity\\\": 5852\\n  },\\n  {\\n    \\\"tag\\\": \"Fiji\",\\n    \\\"popularity\\\": 5847\\n  },\\n  {\\n    \\\"tag\\\": \"interferant\",\\n    \\\"popularity\\\": 5842\\n  },\\n  {\\n    \\\"tag\\\": \"reconstitution\",\\n    \\\"popularity\\\": 5837\\n  },\\n  {\\n    \\\"tag\\\": \"dockyardman\",\\n    \\\"popularity\\\": 5832\\n  },\\n  {\\n    \\\"tag\\\": \"dolichopodous\",\\n    \\\"popularity\\\": 5826\\n  },\\n  {\\n    \\\"tag\\\": \"whiteworm\",\\n    \\\"popularity\\\": 5821\\n  },\\n  {\\n    \\\"tag\\\": \"atheistically\",\\n    \\\"popularity\\\": 5816\\n  },\\n  {\\n    \\\"tag\\\": \"nonconcern\",\\n    \\\"popularity\\\": 5811\\n  },\\n  {\\n    \\\"tag\\\": \"scarabaeidoid\",\\n    \\\"popularity\\\": 5806\\n  },\\n  {\\n    \\\"tag\\\": \"triumviri\",\\n    \\\"popularity\\\": 5801\\n  },\\n  {\\n    \\\"tag\\\": \"rakit\",\\n    \\\"popularity\\\": 5796\\n  },\\n  {\\n    \\\"tag\\\": \"leecheater\",\\n    \\\"popularity\\\": 5791\\n  },\\n  {\\n    \\\"tag\\\": \"Arthrostraca\",\\n    \\\"popularity\\\": 5786\\n  },\\n  {\\n    \\\"tag\\\": \"upknit\",\\n    \\\"popularity\\\": 5781\\n  },\\n  {\\n    \\\"tag\\\": \"tymbalon\",\\n    \\\"popularity\\\": 5776\\n  },\\n  {\\n    \\\"tag\\\": \"inventurous\",\\n    \\\"popularity\\\": 5771\\n  },\\n  {\\n    \\\"tag\\\": \"perradiate\",\\n    \\\"popularity\\\": 5766\\n  },\\n  {\\n    \\\"tag\\\": \"seer\",\\n    \\\"popularity\\\": 5762\\n  },\\n  {\\n    \\\"tag\\\": \"Auricularia\",\\n    \\\"popularity\\\": 5757\\n  },\\n  {\\n    \\\"tag\\\": \"wettish exclusivity\",\\n    \\\"popularity\\\": 5752\\n  },\\n  {\\n    \\\"tag\\\": \"arteriosympathectomy\",\\n    \\\"popularity\\\": 5747\\n  },\\n  {\\n    \\\"tag\\\": \"tunlike\",\\n    \\\"popularity\\\": 5742\\n  },\\n  {\\n    \\\"tag\\\": \"cephalocercal\",\\n    \\\"popularity\\\": 5737\\n  },\\n  {\\n    \\\"tag\\\": \"meaninglessness\",\\n    \\\"popularity\\\": 5732\\n  },\\n  {\\n    \\\"tag\\\": \"fountful\",\\n    \\\"popularity\\\": 5727\\n  },\\n  {\\n    \\\"tag\\\": \"appraisement\",\\n    \\\"popularity\\\": 5722\\n  },\\n  {\\n    \\\"tag\\\": \"geniculated\",\\n    \\\"popularity\\\": 5717\\n  },\\n  {\\n    \\\"tag\\\": \"rotator\",\\n    \\\"popularity\\\": 5712\\n  },\\n  {\\n    \\\"tag\\\": \"foremarch biography\",\\n    \\\"popularity\\\": 5707\\n  },\\n  {\\n    \\\"tag\\\": \"arid\",\\n    \\\"popularity\\\": 5703\\n  },\\n  {\\n    \\\"tag\\\": \"inapprehensible\",\\n    \\\"popularity\\\": 5698\\n  },\\n  {\\n    \\\"tag\\\": \"chlorosulphonic\",\\n    \\\"popularity\\\": 5693\\n  },\\n  {\\n    \\\"tag\\\": \"braguette\",\\n    \\\"popularity\\\": 5688\\n  },\\n  {\\n    \\\"tag\\\": \"panophthalmitis\",\\n    \\\"popularity\\\": 5683\\n  },\\n  {\\n    \\\"tag\\\": \"pro objurgatorily\",\\n    \\\"popularity\\\": 5678\\n  },\\n  {\\n    \\\"tag\\\": \"zooplasty\",\\n    \\\"popularity\\\": 5673\\n  },\\n  {\\n    \\\"tag\\\": \"Terebratulidae\",\\n    \\\"popularity\\\": 5669\\n  },\\n  {\\n    \\\"tag\\\": \"Mahran\",\\n    \\\"popularity\\\": 5664\\n  },\\n  {\\n    \\\"tag\\\": \"anthologize merocele\",\\n    \\\"popularity\\\": 5659\\n  },\\n  {\\n    \\\"tag\\\": \"firecracker chiropractic\",\\n    \\\"popularity\\\": 5654\\n  },\\n  {\\n    \\\"tag\\\": \"tenorist\",\\n    \\\"popularity\\\": 5649\\n  },\\n  {\\n    \\\"tag\\\": \"amphitene\",\\n    \\\"popularity\\\": 5645\\n  },\\n  {\\n    \\\"tag\\\": \"silverbush toadstone\",\\n    \\\"popularity\\\": 5640\\n  },\\n  {\\n    \\\"tag\\\": \"entozoological\",\\n    \\\"popularity\\\": 5635\\n  },\\n  {\\n    \\\"tag\\\": \"trustlessness\",\\n    \\\"popularity\\\": 5630\\n  },\\n  {\\n    \\\"tag\\\": \"reassay\",\\n    \\\"popularity\\\": 5625\\n  },\\n  {\\n    \\\"tag\\\": \"chrysalides\",\\n    \\\"popularity\\\": 5621\\n  },\\n  {\\n    \\\"tag\\\": \"truncation\",\\n    \\\"popularity\\\": 5616\\n  },\\n  {\\n    \\\"tag\\\": \"unwavered mausoleal\",\\n    \\\"popularity\\\": 5611\\n  },\\n  {\\n    \\\"tag\\\": \"unserrated\",\\n    \\\"popularity\\\": 5606\\n  },\\n  {\\n    \\\"tag\\\": \"frampler\",\\n    \\\"popularity\\\": 5602\\n  },\\n  {\\n    \\\"tag\\\": \"celestial\",\\n    \\\"popularity\\\": 5597\\n  },\\n  {\\n    \\\"tag\\\": \"depreter\",\\n    \\\"popularity\\\": 5592\\n  },\\n  {\\n    \\\"tag\\\": \"retaliate\",\\n    \\\"popularity\\\": 5588\\n  },\\n  {\\n    \\\"tag\\\": \"decempunctate\",\\n    \\\"popularity\\\": 5583\\n  },\\n  {\\n    \\\"tag\\\": \"submitter\",\\n    \\\"popularity\\\": 5578\\n  },\\n  {\\n    \\\"tag\\\": \"phenothiazine\",\\n    \\\"popularity\\\": 5573\\n  },\\n  {\\n    \\\"tag\\\": \"hobbledehoyish\",\\n    \\\"popularity\\\": 5569\\n  },\\n  {\\n    \\\"tag\\\": \"erraticness\",\\n    \\\"popularity\\\": 5564\\n  },\\n  {\\n    \\\"tag\\\": \"ovariodysneuria\",\\n    \\\"popularity\\\": 5559\\n  },\\n  {\\n    \\\"tag\\\": \"puja\",\\n    \\\"popularity\\\": 5555\\n  },\\n  {\\n    \\\"tag\\\": \"cesspool\",\\n    \\\"popularity\\\": 5550\\n  },\\n  {\\n    \\\"tag\\\": \"sonation\",\\n    \\\"popularity\\\": 5545\\n  },\\n  {\\n    \\\"tag\\\": \"moggan\",\\n    \\\"popularity\\\": 5541\\n  },\\n  {\\n    \\\"tag\\\": \"overjutting\",\\n    \\\"popularity\\\": 5536\\n  },\\n  {\\n    \\\"tag\\\": \"cohobate\",\\n    \\\"popularity\\\": 5531\\n  },\\n  {\\n    \\\"tag\\\": \"Distoma\",\\n    \\\"popularity\\\": 5527\\n  },\\n  {\\n    \\\"tag\\\": \"Plectognathi\",\\n    \\\"popularity\\\": 5522\\n  },\\n  {\\n    \\\"tag\\\": \"dumple caliphate\",\\n    \\\"popularity\\\": 5517\\n  },\\n  {\\n    \\\"tag\\\": \"shiko\",\\n    \\\"popularity\\\": 5513\\n  },\\n  {\\n    \\\"tag\\\": \"downness\",\\n    \\\"popularity\\\": 5508\\n  },\\n  {\\n    \\\"tag\\\": \"whippletree\",\\n    \\\"popularity\\\": 5504\\n  },\\n  {\\n    \\\"tag\\\": \"nymphaeum\",\\n    \\\"popularity\\\": 5499\\n  },\\n  {\\n    \\\"tag\\\": \"there trest\",\\n    \\\"popularity\\\": 5494\\n  },\\n  {\\n    \\\"tag\\\": \"psychrometer\",\\n    \\\"popularity\\\": 5490\\n  },\\n  {\\n    \\\"tag\\\": \"pyelograph\",\\n    \\\"popularity\\\": 5485\\n  },\\n  {\\n    \\\"tag\\\": \"unsalvable\",\\n    \\\"popularity\\\": 5481\\n  },\\n  {\\n    \\\"tag\\\": \"bescreen\",\\n    \\\"popularity\\\": 5476\\n  },\\n  {\\n    \\\"tag\\\": \"cushy\",\\n    \\\"popularity\\\": 5471\\n  },\\n  {\\n    \\\"tag\\\": \"plicatolobate\",\\n    \\\"popularity\\\": 5467\\n  },\\n  {\\n    \\\"tag\\\": \"lakie\",\\n    \\\"popularity\\\": 5462\\n  },\\n  {\\n    \\\"tag\\\": \"anthropodeoxycholic\",\\n    \\\"popularity\\\": 5458\\n  },\\n  {\\n    \\\"tag\\\": \"resatisfaction\",\\n    \\\"popularity\\\": 5453\\n  },\\n  {\\n    \\\"tag\\\": \"unravelment unaccidental\",\\n    \\\"popularity\\\": 5449\\n  },\\n  {\\n    \\\"tag\\\": \"telewriter monogeneous\",\\n    \\\"popularity\\\": 5444\\n  },\\n  {\\n    \\\"tag\\\": \"unsabred\",\\n    \\\"popularity\\\": 5440\\n  },\\n  {\\n    \\\"tag\\\": \"startlingly\",\\n    \\\"popularity\\\": 5435\\n  },\\n  {\\n    \\\"tag\\\": \"Aralia\",\\n    \\\"popularity\\\": 5431\\n  },\\n  {\\n    \\\"tag\\\": \"alamonti\",\\n    \\\"popularity\\\": 5426\\n  },\\n  {\\n    \\\"tag\\\": \"Franklinization\",\\n    \\\"popularity\\\": 5422\\n  },\\n  {\\n    \\\"tag\\\": \"parliament\",\\n    \\\"popularity\\\": 5417\\n  },\\n  {\\n    \\\"tag\\\": \"schoolkeeper\",\\n    \\\"popularity\\\": 5413\\n  },\\n  {\\n    \\\"tag\\\": \"nonsociety\",\\n    \\\"popularity\\\": 5408\\n  },\\n  {\\n    \\\"tag\\\": \"parenthetic\",\\n    \\\"popularity\\\": 5404\\n  },\\n  {\\n    \\\"tag\\\": \"stog\",\\n    \\\"popularity\\\": 5399\\n  },\\n  {\\n    \\\"tag\\\": \"Pristipomidae\",\\n    \\\"popularity\\\": 5395\\n  },\\n  {\\n    \\\"tag\\\": \"exocarp\",\\n    \\\"popularity\\\": 5390\\n  },\\n  {\\n    \\\"tag\\\": \"monaxonial\",\\n    \\\"popularity\\\": 5386\\n  },\\n  {\\n    \\\"tag\\\": \"tramroad\",\\n    \\\"popularity\\\": 5381\\n  },\\n  {\\n    \\\"tag\\\": \"hookah\",\\n    \\\"popularity\\\": 5377\\n  },\\n  {\\n    \\\"tag\\\": \"saccharonic\",\\n    \\\"popularity\\\": 5372\\n  },\\n  {\\n    \\\"tag\\\": \"perimetrium\",\\n    \\\"popularity\\\": 5368\\n  },\\n  {\\n    \\\"tag\\\": \"libelluloid\",\\n    \\\"popularity\\\": 5364\\n  },\\n  {\\n    \\\"tag\\\": \"overrunningly\",\\n    \\\"popularity\\\": 5359\\n  },\\n  {\\n    \\\"tag\\\": \"untwister\",\\n    \\\"popularity\\\": 5355\\n  },\\n  {\\n    \\\"tag\\\": \"ninnyhammer\",\\n    \\\"popularity\\\": 5350\\n  },\\n  {\\n    \\\"tag\\\": \"metranate\",\\n    \\\"popularity\\\": 5346\\n  },\\n  {\\n    \\\"tag\\\": \"sarcoblast\",\\n    \\\"popularity\\\": 5341\\n  },\\n  {\\n    \\\"tag\\\": \"porkish\",\\n    \\\"popularity\\\": 5337\\n  },\\n  {\\n    \\\"tag\\\": \"chauvinistic\",\\n    \\\"popularity\\\": 5333\\n  },\\n  {\\n    \\\"tag\\\": \"sexagesimal\",\\n    \\\"popularity\\\": 5328\\n  },\\n  {\\n    \\\"tag\\\": \"hematogenic\",\\n    \\\"popularity\\\": 5324\\n  },\\n  {\\n    \\\"tag\\\": \"selfpreservatory\",\\n    \\\"popularity\\\": 5320\\n  },\\n  {\\n    \\\"tag\\\": \"myelauxe\",\\n    \\\"popularity\\\": 5315\\n  },\\n  {\\n    \\\"tag\\\": \"triply\",\\n    \\\"popularity\\\": 5311\\n  },\\n  {\\n    \\\"tag\\\": \"metaphysicous\",\\n    \\\"popularity\\\": 5306\\n  },\\n  {\\n    \\\"tag\\\": \"vitrinoid\",\\n    \\\"popularity\\\": 5302\\n  },\\n  {\\n    \\\"tag\\\": \"glabellae\",\\n    \\\"popularity\\\": 5298\\n  },\\n  {\\n    \\\"tag\\\": \"moonlighter\",\\n    \\\"popularity\\\": 5293\\n  },\\n  {\\n    \\\"tag\\\": \"monotheistically epexegetical\",\\n    \\\"popularity\\\": 5289\\n  },\\n  {\\n    \\\"tag\\\": \"pseudolateral\",\\n    \\\"popularity\\\": 5285\\n  },\\n  {\\n    \\\"tag\\\": \"heptamethylene\",\\n    \\\"popularity\\\": 5280\\n  },\\n  {\\n    \\\"tag\\\": \"salvadora\",\\n    \\\"popularity\\\": 5276\\n  },\\n  {\\n    \\\"tag\\\": \"unjovial diphenylthiourea\",\\n    \\\"popularity\\\": 5272\\n  },\\n  {\\n    \\\"tag\\\": \"thievishness\",\\n    \\\"popularity\\\": 5268\\n  },\\n  {\\n    \\\"tag\\\": \"unridable\",\\n    \\\"popularity\\\": 5263\\n  },\\n  {\\n    \\\"tag\\\": \"underhandedly\",\\n    \\\"popularity\\\": 5259\\n  },\\n  {\\n    \\\"tag\\\": \"fungiform\",\\n    \\\"popularity\\\": 5255\\n  },\\n  {\\n    \\\"tag\\\": \"scruffle\",\\n    \\\"popularity\\\": 5250\\n  },\\n  {\\n    \\\"tag\\\": \"preindisposition\",\\n    \\\"popularity\\\": 5246\\n  },\\n  {\\n    \\\"tag\\\": \"Amadis\",\\n    \\\"popularity\\\": 5242\\n  },\\n  {\\n    \\\"tag\\\": \"Culex\",\\n    \\\"popularity\\\": 5238\\n  },\\n  {\\n    \\\"tag\\\": \"churning\",\\n    \\\"popularity\\\": 5233\\n  },\\n  {\\n    \\\"tag\\\": \"imperite\",\\n    \\\"popularity\\\": 5229\\n  },\\n  {\\n    \\\"tag\\\": \"levorotation\",\\n    \\\"popularity\\\": 5225\\n  },\\n  {\\n    \\\"tag\\\": \"barbate\",\\n    \\\"popularity\\\": 5221\\n  },\\n  {\\n    \\\"tag\\\": \"knotwort\",\\n    \\\"popularity\\\": 5216\\n  },\\n  {\\n    \\\"tag\\\": \"gypsiferous\",\\n    \\\"popularity\\\": 5212\\n  },\\n  {\\n    \\\"tag\\\": \"tourmalinic\",\\n    \\\"popularity\\\": 5208\\n  },\\n  {\\n    \\\"tag\\\": \"helleboric\",\\n    \\\"popularity\\\": 5204\\n  },\\n  {\\n    \\\"tag\\\": \"pneumograph\",\\n    \\\"popularity\\\": 5199\\n  },\\n  {\\n    \\\"tag\\\": \"Peltigeraceae\",\\n    \\\"popularity\\\": 5195\\n  },\\n  {\\n    \\\"tag\\\": \"busine\",\\n    \\\"popularity\\\": 5191\\n  },\\n  {\\n    \\\"tag\\\": \"Ailuridae\",\\n    \\\"popularity\\\": 5187\\n  },\\n  {\\n    \\\"tag\\\": \"azotate\",\\n    \\\"popularity\\\": 5183\\n  },\\n  {\\n    \\\"tag\\\": \"unlikable\",\\n    \\\"popularity\\\": 5178\\n  },\\n  {\\n    \\\"tag\\\": \"sloyd\",\\n    \\\"popularity\\\": 5174\\n  },\\n  {\\n    \\\"tag\\\": \"biblioclasm\",\\n    \\\"popularity\\\": 5170\\n  },\\n  {\\n    \\\"tag\\\": \"Seres\",\\n    \\\"popularity\\\": 5166\\n  },\\n  {\\n    \\\"tag\\\": \"unaccurateness\",\\n    \\\"popularity\\\": 5162\\n  },\\n  {\\n    \\\"tag\\\": \"scrollwise\",\\n    \\\"popularity\\\": 5157\\n  },\\n  {\\n    \\\"tag\\\": \"flandowser\",\\n    \\\"popularity\\\": 5153\\n  },\\n  {\\n    \\\"tag\\\": \"unblackened\",\\n    \\\"popularity\\\": 5149\\n  },\\n  {\\n    \\\"tag\\\": \"schistosternia\",\\n    \\\"popularity\\\": 5145\\n  },\\n  {\\n    \\\"tag\\\": \"fuse\",\\n    \\\"popularity\\\": 5141\\n  },\\n  {\\n    \\\"tag\\\": \"narthecal\",\\n    \\\"popularity\\\": 5137\\n  },\\n  {\\n    \\\"tag\\\": \"Cueva\",\\n    \\\"popularity\\\": 5133\\n  },\\n  {\\n    \\\"tag\\\": \"appositeness\",\\n    \\\"popularity\\\": 5128\\n  },\\n  {\\n    \\\"tag\\\": \"proindustrial\",\\n    \\\"popularity\\\": 5124\\n  },\\n  {\\n    \\\"tag\\\": \"dermatorrhoea\",\\n    \\\"popularity\\\": 5120\\n  },\\n  {\\n    \\\"tag\\\": \"oxyurous tendential\",\\n    \\\"popularity\\\": 5116\\n  },\\n  {\\n    \\\"tag\\\": \"isopurpurin\",\\n    \\\"popularity\\\": 5112\\n  },\\n  {\\n    \\\"tag\\\": \"impose\",\\n    \\\"popularity\\\": 5108\\n  },\\n  {\\n    \\\"tag\\\": \"wordsmanship\",\\n    \\\"popularity\\\": 5104\\n  },\\n  {\\n    \\\"tag\\\": \"saturator\",\\n    \\\"popularity\\\": 5100\\n  },\\n  {\\n    \\\"tag\\\": \"Nordicity\",\\n    \\\"popularity\\\": 5096\\n  },\\n  {\\n    \\\"tag\\\": \"interaccuse\",\\n    \\\"popularity\\\": 5092\\n  },\\n  {\\n    \\\"tag\\\": \"acridinic\",\\n    \\\"popularity\\\": 5087\\n  },\\n  {\\n    \\\"tag\\\": \"scholion\",\\n    \\\"popularity\\\": 5083\\n  },\\n  {\\n    \\\"tag\\\": \"pseudoaconitine\",\\n    \\\"popularity\\\": 5079\\n  },\\n  {\\n    \\\"tag\\\": \"doctorial\",\\n    \\\"popularity\\\": 5075\\n  },\\n  {\\n    \\\"tag\\\": \"Etchimin\",\\n    \\\"popularity\\\": 5071\\n  },\\n  {\\n    \\\"tag\\\": \"oliviform\",\\n    \\\"popularity\\\": 5067\\n  },\\n  {\\n    \\\"tag\\\": \"Pele\",\\n    \\\"popularity\\\": 5063\\n  },\\n  {\\n    \\\"tag\\\": \"Chiromantis Progymnasium\",\\n    \\\"popularity\\\": 5059\\n  },\\n  {\\n    \\\"tag\\\": \"toxosis\",\\n    \\\"popularity\\\": 5055\\n  },\\n  {\\n    \\\"tag\\\": \"spadilla\",\\n    \\\"popularity\\\": 5051\\n  },\\n  {\\n    \\\"tag\\\": \"Actinopterygii\",\\n    \\\"popularity\\\": 5047\\n  },\\n  {\\n    \\\"tag\\\": \"untiring\",\\n    \\\"popularity\\\": 5043\\n  },\\n  {\\n    \\\"tag\\\": \"butyral\",\\n    \\\"popularity\\\": 5039\\n  },\\n  {\\n    \\\"tag\\\": \"Gymnoderinae\",\\n    \\\"popularity\\\": 5035\\n  },\\n  {\\n    \\\"tag\\\": \"testudo\",\\n    \\\"popularity\\\": 5031\\n  },\\n  {\\n    \\\"tag\\\": \"frigorify\",\\n    \\\"popularity\\\": 5027\\n  },\\n  {\\n    \\\"tag\\\": \"aliency\",\\n    \\\"popularity\\\": 5023\\n  },\\n  {\\n    \\\"tag\\\": \"jargon\",\\n    \\\"popularity\\\": 5019\\n  },\\n  {\\n    \\\"tag\\\": \"counterservice\",\\n    \\\"popularity\\\": 5015\\n  },\\n  {\\n    \\\"tag\\\": \"isostrychnine\",\\n    \\\"popularity\\\": 5011\\n  },\\n  {\\n    \\\"tag\\\": \"tellership\",\\n    \\\"popularity\\\": 5007\\n  },\\n  {\\n    \\\"tag\\\": \"miscegenetic\",\\n    \\\"popularity\\\": 5003\\n  },\\n  {\\n    \\\"tag\\\": \"sorcer\",\\n    \\\"popularity\\\": 4999\\n  },\\n  {\\n    \\\"tag\\\": \"tilewright\",\\n    \\\"popularity\\\": 4995\\n  },\\n  {\\n    \\\"tag\\\": \"cyanoplastid\",\\n    \\\"popularity\\\": 4991\\n  },\\n  {\\n    \\\"tag\\\": \"fluxionally\",\\n    \\\"popularity\\\": 4987\\n  },\\n  {\\n    \\\"tag\\\": \"proudhearted\",\\n    \\\"popularity\\\": 4983\\n  },\\n  {\\n    \\\"tag\\\": \"blithely\",\\n    \\\"popularity\\\": 4979\\n  },\\n  {\\n    \\\"tag\\\": \"jestproof\",\\n    \\\"popularity\\\": 4975\\n  },\\n  {\\n    \\\"tag\\\": \"jestwise\",\\n    \\\"popularity\\\": 4971\\n  },\\n  {\\n    \\\"tag\\\": \"nonassimilable\",\\n    \\\"popularity\\\": 4967\\n  },\\n  {\\n    \\\"tag\\\": \"compurgation\",\\n    \\\"popularity\\\": 4964\\n  },\\n  {\\n    \\\"tag\\\": \"unhate\",\\n    \\\"popularity\\\": 4960\\n  },\\n  {\\n    \\\"tag\\\": \"haplodonty\",\\n    \\\"popularity\\\": 4956\\n  },\\n  {\\n    \\\"tag\\\": \"cardholder\",\\n    \\\"popularity\\\": 4952\\n  },\\n  {\\n    \\\"tag\\\": \"rainlight megohmmeter overstout\",\\n    \\\"popularity\\\": 4948\\n  },\\n  {\\n    \\\"tag\\\": \"itchless\",\\n    \\\"popularity\\\": 4944\\n  },\\n  {\\n    \\\"tag\\\": \"begiggle\",\\n    \\\"popularity\\\": 4940\\n  },\\n  {\\n    \\\"tag\\\": \"chromatosphere\",\\n    \\\"popularity\\\": 4936\\n  },\\n  {\\n    \\\"tag\\\": \"typicality\",\\n    \\\"popularity\\\": 4932\\n  },\\n  {\\n    \\\"tag\\\": \"overgrown\",\\n    \\\"popularity\\\": 4928\\n  },\\n  {\\n    \\\"tag\\\": \"envolume\",\\n    \\\"popularity\\\": 4925\\n  },\\n  {\\n    \\\"tag\\\": \"pachycholia\",\\n    \\\"popularity\\\": 4921\\n  },\\n  {\\n    \\\"tag\\\": \"passageable\",\\n    \\\"popularity\\\": 4917\\n  },\\n  {\\n    \\\"tag\\\": \"pathopoiesis\",\\n    \\\"popularity\\\": 4913\\n  },\\n  {\\n    \\\"tag\\\": \"overbreak\",\\n    \\\"popularity\\\": 4909\\n  },\\n  {\\n    \\\"tag\\\": \"satyric\",\\n    \\\"popularity\\\": 4905\\n  },\\n  {\\n    \\\"tag\\\": \"unaudited\",\\n    \\\"popularity\\\": 4901\\n  },\\n  {\\n    \\\"tag\\\": \"whimble\",\\n    \\\"popularity\\\": 4898\\n  },\\n  {\\n    \\\"tag\\\": \"pressureless\",\\n    \\\"popularity\\\": 4894\\n  },\\n  {\\n    \\\"tag\\\": \"Selene\",\\n    \\\"popularity\\\": 4890\\n  },\\n  {\\n    \\\"tag\\\": \"slithery\",\\n    \\\"popularity\\\": 4886\\n  },\\n  {\\n    \\\"tag\\\": \"nondisfigurement\",\\n    \\\"popularity\\\": 4882\\n  },\\n  {\\n    \\\"tag\\\": \"overdelicious\",\\n    \\\"popularity\\\": 4878\\n  },\\n  {\\n    \\\"tag\\\": \"Perca\",\\n    \\\"popularity\\\": 4875\\n  },\\n  {\\n    \\\"tag\\\": \"Palladium\",\\n    \\\"popularity\\\": 4871\\n  },\\n  {\\n    \\\"tag\\\": \"insagacity\",\\n    \\\"popularity\\\": 4867\\n  },\\n  {\\n    \\\"tag\\\": \"peristoma\",\\n    \\\"popularity\\\": 4863\\n  },\\n  {\\n    \\\"tag\\\": \"uncreativeness\",\\n    \\\"popularity\\\": 4859\\n  },\\n  {\\n    \\\"tag\\\": \"incomparability surfboarding\",\\n    \\\"popularity\\\": 4856\\n  },\\n  {\\n    \\\"tag\\\": \"bacillar\",\\n    \\\"popularity\\\": 4852\\n  },\\n  {\\n    \\\"tag\\\": \"ulcerative\",\\n    \\\"popularity\\\": 4848\\n  },\\n  {\\n    \\\"tag\\\": \"stychomythia\",\\n    \\\"popularity\\\": 4844\\n  },\\n  {\\n    \\\"tag\\\": \"sesma somatics nonentry\",\\n    \\\"popularity\\\": 4840\\n  },\\n  {\\n    \\\"tag\\\": \"unsepulchred\",\\n    \\\"popularity\\\": 4837\\n  },\\n  {\\n    \\\"tag\\\": \"cephalanthium\",\\n    \\\"popularity\\\": 4833\\n  },\\n  {\\n    \\\"tag\\\": \"Asiaticization\",\\n    \\\"popularity\\\": 4829\\n  },\\n  {\\n    \\\"tag\\\": \"killeen\",\\n    \\\"popularity\\\": 4825\\n  },\\n  {\\n    \\\"tag\\\": \"Pseudococcus\",\\n    \\\"popularity\\\": 4822\\n  },\\n  {\\n    \\\"tag\\\": \"untractable\",\\n    \\\"popularity\\\": 4818\\n  },\\n  {\\n    \\\"tag\\\": \"apolegamic\",\\n    \\\"popularity\\\": 4814\\n  },\\n  {\\n    \\\"tag\\\": \"hyperpnea\",\\n    \\\"popularity\\\": 4810\\n  },\\n  {\\n    \\\"tag\\\": \"martyrolatry\",\\n    \\\"popularity\\\": 4807\\n  },\\n  {\\n    \\\"tag\\\": \"Sarmatic\",\\n    \\\"popularity\\\": 4803\\n  },\\n  {\\n    \\\"tag\\\": \"nonsurface\",\\n    \\\"popularity\\\": 4799\\n  },\\n  {\\n    \\\"tag\\\": \"adjoined\",\\n    \\\"popularity\\\": 4796\\n  },\\n  {\\n    \\\"tag\\\": \"vasiform\",\\n    \\\"popularity\\\": 4792\\n  },\\n  {\\n    \\\"tag\\\": \"tastelessness\",\\n    \\\"popularity\\\": 4788\\n  },\\n  {\\n    \\\"tag\\\": \"rumbo\",\\n    \\\"popularity\\\": 4784\\n  },\\n  {\\n    \\\"tag\\\": \"subdititious\",\\n    \\\"popularity\\\": 4781\\n  },\\n  {\\n    \\\"tag\\\": \"reparticipation\",\\n    \\\"popularity\\\": 4777\\n  },\\n  {\\n    \\\"tag\\\": \"Yorkshireism\",\\n    \\\"popularity\\\": 4773\\n  },\\n  {\\n    \\\"tag\\\": \"outcrow\",\\n    \\\"popularity\\\": 4770\\n  },\\n  {\\n    \\\"tag\\\": \"casserole\",\\n    \\\"popularity\\\": 4766\\n  },\\n  {\\n    \\\"tag\\\": \"semideltaic\",\\n    \\\"popularity\\\": 4762\\n  },\\n  {\\n    \\\"tag\\\": \"freemason\",\\n    \\\"popularity\\\": 4759\\n  },\\n  {\\n    \\\"tag\\\": \"catkin\",\\n    \\\"popularity\\\": 4755\\n  },\\n  {\\n    \\\"tag\\\": \"conscient\",\\n    \\\"popularity\\\": 4751\\n  },\\n  {\\n    \\\"tag\\\": \"reliably\",\\n    \\\"popularity\\\": 4748\\n  },\\n  {\\n    \\\"tag\\\": \"Telembi\",\\n    \\\"popularity\\\": 4744\\n  },\\n  {\\n    \\\"tag\\\": \"hide\",\\n    \\\"popularity\\\": 4740\\n  },\\n  {\\n    \\\"tag\\\": \"social\",\\n    \\\"popularity\\\": 4737\\n  },\\n  {\\n    \\\"tag\\\": \"ichneutic\",\\n    \\\"popularity\\\": 4733\\n  },\\n  {\\n    \\\"tag\\\": \"polypotome blouse pentagrammatic\",\\n    \\\"popularity\\\": 4729\\n  },\\n  {\\n    \\\"tag\\\": \"airdrome pesthole\",\\n    \\\"popularity\\\": 4726\\n  },\\n  {\\n    \\\"tag\\\": \"unportended\",\\n    \\\"popularity\\\": 4722\\n  },\\n  {\\n    \\\"tag\\\": \"sheerly\",\\n    \\\"popularity\\\": 4719\\n  },\\n  {\\n    \\\"tag\\\": \"acardiac\",\\n    \\\"popularity\\\": 4715\\n  },\\n  {\\n    \\\"tag\\\": \"fetor\",\\n    \\\"popularity\\\": 4711\\n  },\\n  {\\n    \\\"tag\\\": \"storax\",\\n    \\\"popularity\\\": 4708\\n  },\\n  {\\n    \\\"tag\\\": \"syndactylic\",\\n    \\\"popularity\\\": 4704\\n  },\\n  {\\n    \\\"tag\\\": \"otiatrics\",\\n    \\\"popularity\\\": 4700\\n  },\\n  {\\n    \\\"tag\\\": \"range\",\\n    \\\"popularity\\\": 4697\\n  },\\n  {\\n    \\\"tag\\\": \"branchway\",\\n    \\\"popularity\\\": 4693\\n  },\\n  {\\n    \\\"tag\\\": \"beatific\",\\n    \\\"popularity\\\": 4690\\n  },\\n  {\\n    \\\"tag\\\": \"Rugosa\",\\n    \\\"popularity\\\": 4686\\n  },\\n  {\\n    \\\"tag\\\": \"rafty\",\\n    \\\"popularity\\\": 4682\\n  },\\n  {\\n    \\\"tag\\\": \"gapy\",\\n    \\\"popularity\\\": 4679\\n  },\\n  {\\n    \\\"tag\\\": \"heterocercal\",\\n    \\\"popularity\\\": 4675\\n  },\\n  {\\n    \\\"tag\\\": \"actinopterygious\",\\n    \\\"popularity\\\": 4672\\n  },\\n  {\\n    \\\"tag\\\": \"glauconite\",\\n    \\\"popularity\\\": 4668\\n  },\\n  {\\n    \\\"tag\\\": \"limbless priest\",\\n    \\\"popularity\\\": 4665\\n  },\\n  {\\n    \\\"tag\\\": \"chrysene\",\\n    \\\"popularity\\\": 4661\\n  },\\n  {\\n    \\\"tag\\\": \"isentropic\",\\n    \\\"popularity\\\": 4658\\n  },\\n  {\\n    \\\"tag\\\": \"lairdess\",\\n    \\\"popularity\\\": 4654\\n  },\\n  {\\n    \\\"tag\\\": \"butterhead choliambic\",\\n    \\\"popularity\\\": 4650\\n  },\\n  {\\n    \\\"tag\\\": \"hexaseme\",\\n    \\\"popularity\\\": 4647\\n  },\\n  {\\n    \\\"tag\\\": \"treeify\",\\n    \\\"popularity\\\": 4643\\n  },\\n  {\\n    \\\"tag\\\": \"coronetted fructify\",\\n    \\\"popularity\\\": 4640\\n  },\\n  {\\n    \\\"tag\\\": \"admiralty\",\\n    \\\"popularity\\\": 4636\\n  },\\n  {\\n    \\\"tag\\\": \"Flosculariidae\",\\n    \\\"popularity\\\": 4633\\n  },\\n  {\\n    \\\"tag\\\": \"limaceous\",\\n    \\\"popularity\\\": 4629\\n  },\\n  {\\n    \\\"tag\\\": \"subterconscious\",\\n    \\\"popularity\\\": 4626\\n  },\\n  {\\n    \\\"tag\\\": \"stayless\",\\n    \\\"popularity\\\": 4622\\n  },\\n  {\\n    \\\"tag\\\": \"psha\",\\n    \\\"popularity\\\": 4619\\n  },\\n  {\\n    \\\"tag\\\": \"Mediterraneanize\",\\n    \\\"popularity\\\": 4615\\n  },\\n  {\\n    \\\"tag\\\": \"impenetrably\",\\n    \\\"popularity\\\": 4612\\n  },\\n  {\\n    \\\"tag\\\": \"Myrmeleonidae\",\\n    \\\"popularity\\\": 4608\\n  },\\n  {\\n    \\\"tag\\\": \"germander\",\\n    \\\"popularity\\\": 4605\\n  },\\n  {\\n    \\\"tag\\\": \"Buri\",\\n    \\\"popularity\\\": 4601\\n  },\\n  {\\n    \\\"tag\\\": \"papyrotamia\",\\n    \\\"popularity\\\": 4598\\n  },\\n  {\\n    \\\"tag\\\": \"Toxylon\",\\n    \\\"popularity\\\": 4594\\n  },\\n  {\\n    \\\"tag\\\": \"batatilla\",\\n    \\\"popularity\\\": 4591\\n  },\\n  {\\n    \\\"tag\\\": \"fabella assumer\",\\n    \\\"popularity\\\": 4587\\n  },\\n  {\\n    \\\"tag\\\": \"macromethod\",\\n    \\\"popularity\\\": 4584\\n  },\\n  {\\n    \\\"tag\\\": \"Blechnum\",\\n    \\\"popularity\\\": 4580\\n  },\\n  {\\n    \\\"tag\\\": \"pantography\",\\n    \\\"popularity\\\": 4577\\n  },\\n  {\\n    \\\"tag\\\": \"seminovel\",\\n    \\\"popularity\\\": 4574\\n  },\\n  {\\n    \\\"tag\\\": \"disembarrassment\",\\n    \\\"popularity\\\": 4570\\n  },\\n  {\\n    \\\"tag\\\": \"bushmaking\",\\n    \\\"popularity\\\": 4567\\n  },\\n  {\\n    \\\"tag\\\": \"neurosis\",\\n    \\\"popularity\\\": 4563\\n  },\\n  {\\n    \\\"tag\\\": \"Animalia\",\\n    \\\"popularity\\\": 4560\\n  },\\n  {\\n    \\\"tag\\\": \"Bernice\",\\n    \\\"popularity\\\": 4556\\n  },\\n  {\\n    \\\"tag\\\": \"wisen\",\\n    \\\"popularity\\\": 4553\\n  },\\n  {\\n    \\\"tag\\\": \"subhymenium\",\\n    \\\"popularity\\\": 4549\\n  },\\n  {\\n    \\\"tag\\\": \"esophagomycosis\",\\n    \\\"popularity\\\": 4546\\n  },\\n  {\\n    \\\"tag\\\": \"wireworks\",\\n    \\\"popularity\\\": 4543\\n  },\\n  {\\n    \\\"tag\\\": \"Sabellidae\",\\n    \\\"popularity\\\": 4539\\n  },\\n  {\\n    \\\"tag\\\": \"fustianish\",\\n    \\\"popularity\\\": 4536\\n  },\\n  {\\n    \\\"tag\\\": \"professively\",\\n    \\\"popularity\\\": 4532\\n  },\\n  {\\n    \\\"tag\\\": \"overcorruptly\",\\n    \\\"popularity\\\": 4529\\n  },\\n  {\\n    \\\"tag\\\": \"overcreep\",\\n    \\\"popularity\\\": 4526\\n  },\\n  {\\n    \\\"tag\\\": \"Castilloa\",\\n    \\\"popularity\\\": 4522\\n  },\\n  {\\n    \\\"tag\\\": \"forelady Georgie\",\\n    \\\"popularity\\\": 4519\\n  },\\n  {\\n    \\\"tag\\\": \"outsider\",\\n    \\\"popularity\\\": 4515\\n  },\\n  {\\n    \\\"tag\\\": \"Enukki\",\\n    \\\"popularity\\\": 4512\\n  },\\n  {\\n    \\\"tag\\\": \"gypsy\",\\n    \\\"popularity\\\": 4509\\n  },\\n  {\\n    \\\"tag\\\": \"Passamaquoddy\",\\n    \\\"popularity\\\": 4505\\n  },\\n  {\\n    \\\"tag\\\": \"reposit\",\\n    \\\"popularity\\\": 4502\\n  },\\n  {\\n    \\\"tag\\\": \"overtenderness\",\\n    \\\"popularity\\\": 4499\\n  },\\n  {\\n    \\\"tag\\\": \"keratome\",\\n    \\\"popularity\\\": 4495\\n  },\\n  {\\n    \\\"tag\\\": \"interclavicular hypermonosyllable Susanna\",\\n    \\\"popularity\\\": 4492\\n  },\\n  {\\n    \\\"tag\\\": \"mispropose\",\\n    \\\"popularity\\\": 4489\\n  },\\n  {\\n    \\\"tag\\\": \"Membranipora\",\\n    \\\"popularity\\\": 4485\\n  },\\n  {\\n    \\\"tag\\\": \"lampad\",\\n    \\\"popularity\\\": 4482\\n  },\\n  {\\n    \\\"tag\\\": \"header\",\\n    \\\"popularity\\\": 4479\\n  },\\n  {\\n    \\\"tag\\\": \"triseriate\",\\n    \\\"popularity\\\": 4475\\n  },\\n  {\\n    \\\"tag\\\": \"distrainment\",\\n    \\\"popularity\\\": 4472\\n  },\\n  {\\n    \\\"tag\\\": \"staphyloplastic\",\\n    \\\"popularity\\\": 4469\\n  },\\n  {\\n    \\\"tag\\\": \"outscour\",\\n    \\\"popularity\\\": 4465\\n  },\\n  {\\n    \\\"tag\\\": \"tallowmaking\",\\n    \\\"popularity\\\": 4462\\n  },\\n  {\\n    \\\"tag\\\": \"plugger\",\\n    \\\"popularity\\\": 4459\\n  },\\n  {\\n    \\\"tag\\\": \"fashionize\",\\n    \\\"popularity\\\": 4455\\n  },\\n  {\\n    \\\"tag\\\": \"puzzle\",\\n    \\\"popularity\\\": 4452\\n  },\\n  {\\n    \\\"tag\\\": \"imbrue\",\\n    \\\"popularity\\\": 4449\\n  },\\n  {\\n    \\\"tag\\\": \"osteoblast\",\\n    \\\"popularity\\\": 4445\\n  },\\n  {\\n    \\\"tag\\\": \"Hydrocores\",\\n    \\\"popularity\\\": 4442\\n  },\\n  {\\n    \\\"tag\\\": \"Lutra\",\\n    \\\"popularity\\\": 4439\\n  },\\n  {\\n    \\\"tag\\\": \"upridge scarfy\",\\n    \\\"popularity\\\": 4435\\n  },\\n  {\\n    \\\"tag\\\": \"ancon taffle\",\\n    \\\"popularity\\\": 4432\\n  },\\n  {\\n    \\\"tag\\\": \"impest\",\\n    \\\"popularity\\\": 4429\\n  },\\n  {\\n    \\\"tag\\\": \"uncollatedness\",\\n    \\\"popularity\\\": 4426\\n  },\\n  {\\n    \\\"tag\\\": \"hypersensitize\",\\n    \\\"popularity\\\": 4422\\n  },\\n  {\\n    \\\"tag\\\": \"autographically\",\\n    \\\"popularity\\\": 4419\\n  },\\n  {\\n    \\\"tag\\\": \"louther\",\\n    \\\"popularity\\\": 4416\\n  },\\n  {\\n    \\\"tag\\\": \"Ollie\",\\n    \\\"popularity\\\": 4413\\n  },\\n  {\\n    \\\"tag\\\": \"recompensate\",\\n    \\\"popularity\\\": 4409\\n  },\\n  {\\n    \\\"tag\\\": \"Shan\",\\n    \\\"popularity\\\": 4406\\n  },\\n  {\\n    \\\"tag\\\": \"brachycnemic\",\\n    \\\"popularity\\\": 4403\\n  },\\n  {\\n    \\\"tag\\\": \"Carinatae\",\\n    \\\"popularity\\\": 4399\\n  },\\n  {\\n    \\\"tag\\\": \"geotherm\",\\n    \\\"popularity\\\": 4396\\n  },\\n  {\\n    \\\"tag\\\": \"sawback\",\\n    \\\"popularity\\\": 4393\\n  },\\n  {\\n    \\\"tag\\\": \"Novatianist\",\\n    \\\"popularity\\\": 4390\\n  },\\n  {\\n    \\\"tag\\\": \"reapproach\",\\n    \\\"popularity\\\": 4387\\n  },\\n  {\\n    \\\"tag\\\": \"myelopoietic\",\\n    \\\"popularity\\\": 4383\\n  },\\n  {\\n    \\\"tag\\\": \"cyanin\",\\n    \\\"popularity\\\": 4380\\n  },\\n  {\\n    \\\"tag\\\": \"unsmutted\",\\n    \\\"popularity\\\": 4377\\n  },\\n  {\\n    \\\"tag\\\": \"nonpapist\",\\n    \\\"popularity\\\": 4374\\n  },\\n  {\\n    \\\"tag\\\": \"transbaikalian\",\\n    \\\"popularity\\\": 4370\\n  },\\n  {\\n    \\\"tag\\\": \"connately\",\\n    \\\"popularity\\\": 4367\\n  },\\n  {\\n    \\\"tag\\\": \"tenderize iterance\",\\n    \\\"popularity\\\": 4364\\n  },\\n  {\\n    \\\"tag\\\": \"hydrostatical\",\\n    \\\"popularity\\\": 4361\\n  },\\n  {\\n    \\\"tag\\\": \"unflag\",\\n    \\\"popularity\\\": 4358\\n  },\\n  {\\n    \\\"tag\\\": \"translate\",\\n    \\\"popularity\\\": 4354\\n  },\\n  {\\n    \\\"tag\\\": \"Scorzonera\",\\n    \\\"popularity\\\": 4351\\n  },\\n  {\\n    \\\"tag\\\": \"uncomforted\",\\n    \\\"popularity\\\": 4348\\n  },\\n  {\\n    \\\"tag\\\": \"risser varied\",\\n    \\\"popularity\\\": 4345\\n  },\\n  {\\n    \\\"tag\\\": \"plumbate\",\\n    \\\"popularity\\\": 4342\\n  },\\n  {\\n    \\\"tag\\\": \"Usneaceae\",\\n    \\\"popularity\\\": 4338\\n  },\\n  {\\n    \\\"tag\\\": \"fohat\",\\n    \\\"popularity\\\": 4335\\n  },\\n  {\\n    \\\"tag\\\": \"slagging\",\\n    \\\"popularity\\\": 4332\\n  },\\n  {\\n    \\\"tag\\\": \"superserious\",\\n    \\\"popularity\\\": 4329\\n  },\\n  {\\n    \\\"tag\\\": \"theocracy\",\\n    \\\"popularity\\\": 4326\\n  },\\n  {\\n    \\\"tag\\\": \"valonia\",\\n    \\\"popularity\\\": 4323\\n  },\\n  {\\n    \\\"tag\\\": \"Sapindales\",\\n    \\\"popularity\\\": 4319\\n  },\\n  {\\n    \\\"tag\\\": \"palaeozoologist\",\\n    \\\"popularity\\\": 4316\\n  },\\n  {\\n    \\\"tag\\\": \"yalb\",\\n    \\\"popularity\\\": 4313\\n  },\\n  {\\n    \\\"tag\\\": \"unviewed\",\\n    \\\"popularity\\\": 4310\\n  },\\n  {\\n    \\\"tag\\\": \"polyarteritis\",\\n    \\\"popularity\\\": 4307\\n  },\\n  {\\n    \\\"tag\\\": \"vectorial\",\\n    \\\"popularity\\\": 4304\\n  },\\n  {\\n    \\\"tag\\\": \"skimpingly\",\\n    \\\"popularity\\\": 4301\\n  },\\n  {\\n    \\\"tag\\\": \"athort\",\\n    \\\"popularity\\\": 4297\\n  },\\n  {\\n    \\\"tag\\\": \"tribofluorescence\",\\n    \\\"popularity\\\": 4294\\n  },\\n  {\\n    \\\"tag\\\": \"benzonitrol\",\\n    \\\"popularity\\\": 4291\\n  },\\n  {\\n    \\\"tag\\\": \"swiller subobtuse subjacency\",\\n    \\\"popularity\\\": 4288\\n  },\\n  {\\n    \\\"tag\\\": \"uncompassed\",\\n    \\\"popularity\\\": 4285\\n  },\\n  {\\n    \\\"tag\\\": \"cacochymia\",\\n    \\\"popularity\\\": 4282\\n  },\\n  {\\n    \\\"tag\\\": \"commensalist butadiene\",\\n    \\\"popularity\\\": 4279\\n  },\\n  {\\n    \\\"tag\\\": \"culpable\",\\n    \\\"popularity\\\": 4276\\n  },\\n  {\\n    \\\"tag\\\": \"contributive\",\\n    \\\"popularity\\\": 4273\\n  },\\n  {\\n    \\\"tag\\\": \"attemperately\",\\n    \\\"popularity\\\": 4269\\n  },\\n  {\\n    \\\"tag\\\": \"spelt\",\\n    \\\"popularity\\\": 4266\\n  },\\n  {\\n    \\\"tag\\\": \"exoneration\",\\n    \\\"popularity\\\": 4263\\n  },\\n  {\\n    \\\"tag\\\": \"antivivisectionist\",\\n    \\\"popularity\\\": 4260\\n  },\\n  {\\n    \\\"tag\\\": \"granitification\",\\n    \\\"popularity\\\": 4257\\n  },\\n  {\\n    \\\"tag\\\": \"palladize\",\\n    \\\"popularity\\\": 4254\\n  },\\n  {\\n    \\\"tag\\\": \"marksmanship\",\\n    \\\"popularity\\\": 4251\\n  },\\n  {\\n    \\\"tag\\\": \"bullydom\",\\n    \\\"popularity\\\": 4248\\n  },\\n  {\\n    \\\"tag\\\": \"spirality\",\\n    \\\"popularity\\\": 4245\\n  },\\n  {\\n    \\\"tag\\\": \"caliginous\",\\n    \\\"popularity\\\": 4242\\n  },\\n  {\\n    \\\"tag\\\": \"reportedly\",\\n    \\\"popularity\\\": 4239\\n  },\\n  {\\n    \\\"tag\\\": \"polyad\",\\n    \\\"popularity\\\": 4236\\n  },\\n  {\\n    \\\"tag\\\": \"arthroempyesis\",\\n    \\\"popularity\\\": 4233\\n  },\\n  {\\n    \\\"tag\\\": \"semibay facultatively\",\\n    \\\"popularity\\\": 4229\\n  },\\n  {\\n    \\\"tag\\\": \"metastatically\",\\n    \\\"popularity\\\": 4226\\n  },\\n  {\\n    \\\"tag\\\": \"prophetically\",\\n    \\\"popularity\\\": 4223\\n  },\\n  {\\n    \\\"tag\\\": \"Linguatula elapid\",\\n    \\\"popularity\\\": 4220\\n  },\\n  {\\n    \\\"tag\\\": \"pyknatom\",\\n    \\\"popularity\\\": 4217\\n  },\\n  {\\n    \\\"tag\\\": \"centimeter\",\\n    \\\"popularity\\\": 4214\\n  },\\n  {\\n    \\\"tag\\\": \"mensurate\",\\n    \\\"popularity\\\": 4211\\n  },\\n  {\\n    \\\"tag\\\": \"migraine\",\\n    \\\"popularity\\\": 4208\\n  },\\n  {\\n    \\\"tag\\\": \"pentagamist\",\\n    \\\"popularity\\\": 4205\\n  },\\n  {\\n    \\\"tag\\\": \"querken\",\\n    \\\"popularity\\\": 4202\\n  },\\n  {\\n    \\\"tag\\\": \"ambulance\",\\n    \\\"popularity\\\": 4199\\n  },\\n  {\\n    \\\"tag\\\": \"Stokavian\",\\n    \\\"popularity\\\": 4196\\n  },\\n  {\\n    \\\"tag\\\": \"malvasian\",\\n    \\\"popularity\\\": 4193\\n  },\\n  {\\n    \\\"tag\\\": \"uncouthsome\",\\n    \\\"popularity\\\": 4190\\n  },\\n  {\\n    \\\"tag\\\": \"readable\",\\n    \\\"popularity\\\": 4187\\n  },\\n  {\\n    \\\"tag\\\": \"enlodge\",\\n    \\\"popularity\\\": 4184\\n  },\\n  {\\n    \\\"tag\\\": \"plasterwise Appendiculariidae perspectograph\",\\n    \\\"popularity\\\": 4181\\n  },\\n  {\\n    \\\"tag\\\": \"inkweed\",\\n    \\\"popularity\\\": 4178\\n  },\\n  {\\n    \\\"tag\\\": \"streep\",\\n    \\\"popularity\\\": 4175\\n  },\\n  {\\n    \\\"tag\\\": \"diadelphian cultured\",\\n    \\\"popularity\\\": 4172\\n  },\\n  {\\n    \\\"tag\\\": \"hymenopterous\",\\n    \\\"popularity\\\": 4169\\n  },\\n  {\\n    \\\"tag\\\": \"unexorableness\",\\n    \\\"popularity\\\": 4166\\n  },\\n  {\\n    \\\"tag\\\": \"cascaron\",\\n    \\\"popularity\\\": 4163\\n  },\\n  {\\n    \\\"tag\\\": \"undaintiness\",\\n    \\\"popularity\\\": 4160\\n  },\\n  {\\n    \\\"tag\\\": \"Curtana\",\\n    \\\"popularity\\\": 4157\\n  },\\n  {\\n    \\\"tag\\\": \"scurvied\",\\n    \\\"popularity\\\": 4154\\n  },\\n  {\\n    \\\"tag\\\": \"molluscoidal\",\\n    \\\"popularity\\\": 4151\\n  },\\n  {\\n    \\\"tag\\\": \"yurt\",\\n    \\\"popularity\\\": 4148\\n  },\\n  {\\n    \\\"tag\\\": \"deciduitis\",\\n    \\\"popularity\\\": 4145\\n  },\\n  {\\n    \\\"tag\\\": \"creephole\",\\n    \\\"popularity\\\": 4142\\n  },\\n  {\\n    \\\"tag\\\": \"quatrefeuille\",\\n    \\\"popularity\\\": 4139\\n  },\\n  {\\n    \\\"tag\\\": \"bicapitate adenomatome\",\\n    \\\"popularity\\\": 4136\\n  },\\n  {\\n    \\\"tag\\\": \"damassin\",\\n    \\\"popularity\\\": 4134\\n  },\\n  {\\n    \\\"tag\\\": \"planching\",\\n    \\\"popularity\\\": 4131\\n  },\\n  {\\n    \\\"tag\\\": \"dashedly inferential\",\\n    \\\"popularity\\\": 4128\\n  },\\n  {\\n    \\\"tag\\\": \"lobe\",\\n    \\\"popularity\\\": 4125\\n  },\\n  {\\n    \\\"tag\\\": \"Hyrachyus\",\\n    \\\"popularity\\\": 4122\\n  },\\n  {\\n    \\\"tag\\\": \"knab\",\\n    \\\"popularity\\\": 4119\\n  },\\n  {\\n    \\\"tag\\\": \"discohexaster\",\\n    \\\"popularity\\\": 4116\\n  },\\n  {\\n    \\\"tag\\\": \"malign\",\\n    \\\"popularity\\\": 4113\\n  },\\n  {\\n    \\\"tag\\\": \"pedagoguism\",\\n    \\\"popularity\\\": 4110\\n  },\\n  {\\n    \\\"tag\\\": \"shrubbery\",\\n    \\\"popularity\\\": 4107\\n  },\\n  {\\n    \\\"tag\\\": \"undershrub\",\\n    \\\"popularity\\\": 4104\\n  },\\n  {\\n    \\\"tag\\\": \"bureaucrat\",\\n    \\\"popularity\\\": 4101\\n  },\\n  {\\n    \\\"tag\\\": \"pantaleon\",\\n    \\\"popularity\\\": 4098\\n  },\\n  {\\n    \\\"tag\\\": \"mesoventral\",\\n    \\\"popularity\\\": 4096\\n  }]';\n\
+\n\
+var log2 = Math.log(2);\n\
+var tagInfo = tagInfoJSON.parseJSON(function(a, b) { if (a == \"popularity\") { return Math.log(b) / log2; } else {return b; } });\n\
+\n\
+function makeTagCloud(tagInfo)\n\
+{\n\
+    var output = '<div class=\"tagCloud\" style=\"width: 100%\">';\n\
+\n\
+    tagInfo.sort(function(a, b) { if (a.tag < b.tag) { return -1; } else if (a.tag == b.tag) { return 0; } else return 1; });\n\
+\n\
+    for (var i = 0; i < tagInfo.length; i++) {\n\
+        var tag = tagInfo[i].tag;\n\
+\n\
+        var validates = true;\n\
+        for (var j = 0; j < tag.length; j++) {\n\
+            var ch = tag.charCodeAt(j);\n\
+            if (ch < 0x20 || ch >= 0x7f) {\n\
+                validates = false;\n\
+                break;\n\
+            }\n\
+        }\n\
+\n\
+        if (!validates)\n\
+            continue;\n\
+\n\
+        var url = \"http://example.com/tag/\" + tag.replace(\" \", \"\").toLowerCase();\n\
+        var popularity = tagInfo[i].popularity;\n\
+        var color = 'rgb(' + Math.floor(255 * (popularity - 12) / 20) + ', 0, 255)';\n\
+        output += ' <a href=\"' + url + '\" style=\"font-size: ' + popularity + 'px; color: ' + color + '\">' + tag + '</a> \\n';\n\
+    }\n\
+\n\
+    output += '</div>';\n\
+    output.replace(\" \", \"&nbsp;\");\n\
+\n\
+    return output;\n\
+}\n\
+\n\
+var tagcloud = makeTagCloud(tagInfo);\n\
+tagInfo = null;\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider string-unpack-code</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>string-unpack-code</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+// This test case unpacks the compressed code for the MochiKit,\n\
+// jQuery, Dojo and Prototype JavaScript libraries.\n\
+\n\
+/***\n\
+    MochiKit.MochiKit 1.3.1 : PACKED VERSION\n\
+    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please\n\
+    diff against the source tree, not this file.\n\
+\n\
+    See <http://mochikit.com/> for documentation, downloads, license, etc.\n\
+\n\
+    (c) 2005 Bob Ippolito.  All rights Reserved.\n\
+***/\n\
+\n\
+for (var i = 0; i < 2; i++) {\n\
+\n\
+var decompressedMochiKit = function(p,a,c,k,e,d){e=function(c){return(c<a?\"\":e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)d[e(c)]=k[c]||e(c);k=[function(e){return d[e]}];e=function(){return'\\\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c]);return p}('if(H(1q)!=\"L\"){1q.2X(\"B.J\")}if(H(B)==\"L\"){B={}}if(H(B.J)==\"L\"){B.J={}}B.J.1Y=\"1.3.1\";B.J.1r=\"B.J\";B.J.2l=G(7V,vR){if(7V===O){7V={}}R(u i=1;i<M.K;i++){u o=M[i];if(H(o)!=\"L\"&&o!==O){R(u k in o){7V[k]=o[k]}}}F 7V};B.J.2l(B.J,{1K:G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"},1l:G(){F D.1K()},4f:G(n){if(M.K===0){n=1}F G(){F n++}},4L:G(mw){u me=M.2U;if(M.K==1){me.1U=mw;F Y me()}},bg:G(vQ){u X=[];u m=B.J;u aw=m.1R(O,M);1M(aw.K){u o=aw.2P();if(o&&H(o)==\"3n\"&&H(o.K)==\"2y\"){R(u i=o.K-1;i>=0;i--){aw.e9(o[i])}}N{X.1c(o)}}F X},1R:G(7U,1i,av){if(!av){av=0}if(1i){u l=1i.K;if(H(l)!=\"2y\"){if(H(B.15)!=\"L\"){1i=B.15.2G(1i);l=1i.K}N{14 Y 3p(\"au 2E an at-as 3W B.15 2E ar\")}}if(!7U){7U=[]}R(u i=av;i<l;i++){7U.1c(1i[i])}}F 7U},8Z:G(5g,1i){if(5g===O){5g={}}R(u i=1;i<M.K;i++){u o=M[i];if(H(o)!=\"L\"&&o!==O){R(u k in o){u v=o[k];if(H(5g[k])==\"3n\"&&H(v)==\"3n\"){M.2U(5g[k],v)}N{5g[k]=v}}}}F 5g},lO:G(6c,1i){if(6c===O){6c={}}R(u i=1;i<M.K;i++){u o=M[i];R(u k in o){if(!(k in 6c)){6c[k]=o[k]}}}F 6c},lN:G(1i){u fj=[];R(u mv in 1i){fj.1c(mv)}F fj},lM:G(1i){u fh=[];u e;R(u fi in 1i){u v;1f{v=1i[fi]}1e(e){2V}fh.1c([fi,v])}F fh},jq:G(fg,ff,fe){fe.1U=Y B.J.5a(fg.1r+\".\"+ff);fg[ff]=fe},4i:{7L:G(a){F!!a},vP:G(a){F!a},eE:G(a){F a},2E:G(a){F~a},vO:G(a){F-a},vN:G(a,b){F a+b},vM:G(a,b){F a-b},4u:G(a,b){F a/b},vL:G(a,b){F a%b},vK:G(a,b){F a*b},3W:G(a,b){F a&b},or:G(a,b){F a|b},vJ:G(a,b){F a^b},vI:G(a,b){F a<<b},vH:G(a,b){F a>>b},vG:G(a,b){F a>>>b},eq:G(a,b){F a==b},ne:G(a,b){F a!=b},gt:G(a,b){F a>b},ge:G(a,b){F a>=b},lt:G(a,b){F a<b},le:G(a,b){F a<=b},vF:G(a,b){F B.J.2f(a,b)===0},vE:G(a,b){F B.J.2f(a,b)!==0},vD:G(a,b){F B.J.2f(a,b)==1},vC:G(a,b){F B.J.2f(a,b)!=-1},vB:G(a,b){F B.J.2f(a,b)==-1},vA:G(a,b){F B.J.2f(a,b)!=1},vz:G(a,b){F a&&b},vy:G(a,b){F a||b},vx:G(a,b){F b in a}},24:G(mu){F G(){F D[mu].1w(D,M)}},lL:G(mt){F G(a9){F a9[mt]}},66:G(){u fd={};R(u i=0;i<M.K;i++){u 6b=M[i];fd[6b]=6b}F G(){R(u i=0;i<M.K;i++){if(!(H(M[i])in fd)){F 1m}}F 1h}},lJ:G(){R(u i=0;i<M.K;i++){if(M[i]!==O){F 1m}}F 1h},lK:G(){R(u i=0;i<M.K;i++){u o=M[i];if(!(H(o)==\"L\"||o===O)){F 1m}}F 1h},lI:G(1i){F!B.J.7e.1w(D,M)},7e:G(1i){R(u i=0;i<M.K;i++){u o=M[i];if(!(o&&o.K)){F 1m}}F 1h},3A:G(){R(u i=0;i<M.K;i++){u o=M[i];u 6b=H(o);if((6b!=\"3n\"&&!(6b==\"G\"&&H(o.vw)==\"G\"))||o===O||H(o.K)!=\"2y\"){F 1m}}F 1h},eN:G(){R(u i=0;i<M.K;i++){u o=M[i];if(H(o)!=\"3n\"||o===O||H(o.9P)!=\"G\"){F 1m}}F 1h},lH:G(fn){if(fn===O){F B.J.1R(O,M,1)}u fc=[];R(u i=1;i<M.K;i++){fc.1c(fn(M[i]))}F fc},2r:G(fn,1g){u m=B.J;u 6a=B.15;u fb=m.3A;if(M.K<=2){if(!fb(1g)){if(6a){1g=6a.2G(1g);if(fn===O){F 1g}}N{14 Y 3p(\"au 2E an at-as 3W B.15 2E ar\")}}if(fn===O){F m.1R(O,1g)}u 69=[];R(u i=0;i<1g.K;i++){69.1c(fn(1g[i]))}F 69}N{if(fn===O){fn=7o}u 7T=O;R(i=1;i<M.K;i++){if(!fb(M[i])){if(6a){F 6a.2G(6a.4c.1w(O,M))}N{14 Y 3p(\"au 2E an at-as 3W B.15 2E ar\")}}u l=M[i].K;if(7T===O||7T>l){7T=l}}69=[];R(i=0;i<7T;i++){u fa=[];R(u j=1;j<M.K;j++){fa.1c(M[j][i])}69.1c(fn.1w(D,fa))}F 69}},lG:G(fn){u f9=[];if(fn===O){fn=B.J.4i.7L}R(u i=1;i<M.K;i++){u o=M[i];if(fn(o)){f9.1c(o)}}F f9},47:G(fn,1g,7S){u aq=[];u m=B.J;if(!m.3A(1g)){if(B.15){1g=B.15.2G(1g)}N{14 Y 3p(\"au 2E an at-as 3W B.15 2E ar\")}}if(fn===O){fn=m.4i.7L}if(H(7o.1U.47)==\"G\"){F 7o.1U.47.cz(1g,fn,7S)}N{if(H(7S)==\"L\"||7S===O){R(u i=0;i<1g.K;i++){u o=1g[i];if(fn(o)){aq.1c(o)}}}N{R(i=0;i<1g.K;i++){o=1g[i];if(fn.cz(7S,o)){aq.1c(o)}}}}F aq},mq:G(7R){F G(){hd(M.K){3j 0:F 7R();3j 1:F 7R(M[0]);3j 2:F 7R(M[0],M[1]);3j 3:F 7R(M[0],M[1],M[2])}u f8=[];R(u i=0;i<M.K;i++){f8.1c(\"M[\"+i+\"]\")}F dB(\"(1A(\"+f8.2b(\",\")+\"))\")}},lv:G(mr,ms){u m=B.J;F m.1O.1w(D,m.1R([ms,mr],M,2))},1O:G(3c,4o){if(H(3c)==\"1n\"){3c=4o[3c]}u ao=3c.f5;u 5f=3c.am;u f6=3c.f7;u m=B.J;if(H(3c)==\"G\"&&H(3c.1w)==\"L\"){3c=m.mq(3c)}if(H(ao)!=\"G\"){ao=3c}if(H(4o)!=\"L\"){f6=4o}if(H(5f)==\"L\"){5f=[]}N{5f=5f.9T()}m.1R(5f,M,2);u 7Q=G(){u ap=M;u me=M.2U;if(me.am.K>0){ap=m.2o(me.am,ap)}u 4o=me.f7;if(!4o){4o=D}F me.f5.1w(4o,ap)};7Q.f7=f6;7Q.f5=ao;7Q.am=5f;F 7Q},lF:G(7P){u mp=B.J.1O;R(u k in 7P){u f4=7P[k];if(H(f4)==\"G\"){7P[k]=mp(f4,7P)}}},5u:G(mo,mn,ml,mk){B.J.ae.5M(mo,mn,ml,mk)},mj:{\"5L\":1h,\"1n\":1h,\"2y\":1h},2f:G(a,b){if(a==b){F 0}u f3=(H(a)==\"L\"||a===O);u f2=(H(b)==\"L\"||b===O);if(f3&&f2){F 0}N{if(f3){F-1}N{if(f2){F 1}}}u m=B.J;u f1=m.mj;if(!(H(a)in f1&&H(b)in f1)){1f{F m.ae.3C(a,b)}1e(e){if(e!=m.4d){14 e}}}if(a<b){F-1}N{if(a>b){F 1}}u f0=m.U;14 Y 3p(f0(a)+\" 3W \"+f0(b)+\" 9v 2E be vv\")},eM:G(a,b){F B.J.2f(a.9P(),b.9P())},eL:G(a,b){u mi=B.J.2f;u 7O=a.K;u al=0;if(7O>b.K){al=1;7O=b.K}N{if(7O<b.K){al=-1}}R(u i=0;i<7O;i++){u 4j=mi(a[i],b[i]);if(4j){F 4j}}F al},7M:G(mh,mg,mf,md){B.J.ad.5M(mh,mg,mf,md)},U:G(o){if(H(o)==\"L\"){F\"L\"}N{if(o===O){F\"O\"}}1f{if(H(o.1K)==\"G\"){F o.1K()}N{if(H(o.U)==\"G\"&&o.U!=M.2U){F o.U()}}F B.J.ad.3C(o)}1e(e){if(H(o.1r)==\"1n\"&&(o.1l==cZ.1U.1l||o.1l==vu.1U.1l)){F o.1r}}1f{u eZ=(o+\"\")}1e(e){F\"[\"+H(o)+\"]\"}if(H(o)==\"G\"){o=eZ.23(/^\\\\s+/,\"\");u 5n=o.2A(\"{\");if(5n!=-1){o=o.3H(0,5n)+\"{...}\"}}F eZ},eK:G(o){u m=B.J;F\"[\"+m.2r(m.U,o).2b(\", \")+\"]\"},ac:G(o){F(\"\\\\\"\"+o.23(/([\"\\\\\\\\])/g,\"\\\\\\\\$1\")+\"\\\\\"\").23(/[\\\\f]/g,\"\\\\\\\\f\").23(/[\\\\b]/g,\"\\\\\\\\b\").23(/[\\\\n]/g,\"\\\\\\\\n\").23(/[\\\\t]/g,\"\\\\\\\\t\").23(/[\\\\r]/g,\"\\\\\\\\r\")},eJ:G(o){F o+\"\"},ly:G(mc,mb,ma,m9){B.J.ab.5M(mc,mb,ma,m9)},lx:G(){F dB(\"(\"+M[0]+\")\")},lz:G(o){u 5e=H(o);if(5e==\"L\"){F\"L\"}N{if(5e==\"2y\"||5e==\"5L\"){F o+\"\"}N{if(o===O){F\"O\"}}}u m=B.J;u eY=m.ac;if(5e==\"1n\"){F eY(o)}u me=M.2U;u 3S;if(H(o.m8)==\"G\"){3S=o.m8();if(o!==3S){F me(3S)}}if(H(o.m7)==\"G\"){3S=o.m7();if(o!==3S){F me(3S)}}if(5e!=\"G\"&&H(o.K)==\"2y\"){u X=[];R(u i=0;i<o.K;i++){u 2i=me(o[i]);if(H(2i)!=\"1n\"){2i=\"L\"}X.1c(2i)}F\"[\"+X.2b(\", \")+\"]\"}1f{3S=m.ab.3C(o);F me(3S)}1e(e){if(e!=m.4d){14 e}}if(5e==\"G\"){F O}X=[];R(u k in o){u ak;if(H(k)==\"2y\"){ak=\"\\\\\"\"+k+\"\\\\\"\"}N{if(H(k)==\"1n\"){ak=eY(k)}N{2V}}2i=me(o[k]);if(H(2i)!=\"1n\"){2V}X.1c(ak+\":\"+2i)}F\"{\"+X.2b(\", \")+\"}\"},lE:G(a,b){F(B.J.2f(a,b)===0)},lD:G(eX,4n){if(eX.K!=4n.K){F 1m}F(B.J.2f(eX,4n)===0)},2o:G(){u eW=[];u m6=B.J.1R;R(u i=0;i<M.K;i++){m6(eW,M[i])}F eW},eR:G(2h){u m=B.J;u eU=m.2f;if(M.K==1){F G(a,b){F eU(a[2h],b[2h])}}u eV=m.1R(O,M);F G(a,b){u aj=0;R(u i=0;(aj===0)&&(i<eV.K);i++){u 2h=eV[i];aj=eU(a[2h],b[2h])}F aj}},lC:G(2h){u m5=B.J.eR.1w(D,M);F G(a,b){F m5(b,a)}},2z:G(m4){u m=B.J;F m.1O.1w(D,m.1R([m4,L],M,1))},67:G(m0,1g){if(1g.K===0){F O}u ai=1g[0];u m3=B.J.2f;R(u i=1;i<1g.K;i++){u o=1g[i];if(m3(o,ai)==m0){ai=o}}F ai},lB:G(){F B.J.67(1,M)},lA:G(){F B.J.67(-1,M)},bi:G(1g,lY,lZ,3B){if(H(3B)==\"L\"||3B===O){3B=1g.K}R(u i=(lZ||0);i<3B;i++){if(1g[i]===lY){F i}}F-1},eO:G(1g,lW,lX,3B){if(H(3B)==\"L\"||3B===O){3B=1g.K}u 4j=B.J.2f;R(u i=(lX||0);i<3B;i++){if(4j(1g[i],lW)===0){F i}}F-1},d4:G(1j,lV){u ah=[1j];u lU=B.J.1R;1M(ah.K){u X=lV(ah.2P());if(X){lU(ah,X)}}},3f:G(ag){u 2w=ag.1r;if(H(2w)==\"L\"){2w=\"\"}N{2w=2w+\".\"}R(u 1b in ag){u o=ag[1b];if(H(o)==\"G\"&&H(o.1r)==\"L\"){1f{o.1r=2w+1b}1e(e){}}}},dw:G(3s,68){if(H(B.S)!=\"L\"&&M.K==1&&(H(3s)==\"1n\"||(H(3s.3T)!=\"L\"&&3s.3T>0))){u kv=B.S.d5(3s);3s=kv[0];68=kv[1]}N{if(M.K==1){u o=3s;3s=[];68=[];R(u k in o){u v=o[k];if(H(v)!=\"G\"){3s.1c(k);68.1c(v)}}}}u W=[];u lT=28.2a(3s.K,68.K);u eT=B.J.af;R(u i=0;i<lT;i++){v=68[i];if(H(v)!=\"L\"&&v!==O){W.1c(eT(3s[i])+\"=\"+eT(v))}}F W.2b(\"&\")},lw:G(lS,lQ){u 7N=lS.23(/\\\\+/g,\"%20\").2R(\"&\");u o={};u 5d;if(H(lR)!=\"L\"){5d=lR}N{5d=vt}if(lQ){R(u i=0;i<7N.K;i++){u 2n=7N[i].2R(\"=\");u 1b=5d(2n[0]);u 4n=o[1b];if(!(4n 2C 7o)){4n=[];o[1b]=4n}4n.1c(5d(2n[1]))}}N{R(i=0;i<7N.K;i++){2n=7N[i].2R(\"=\");o[5d(2n[0])]=5d(2n[1])}}F o}});B.J.4a=G(){D.4m=[]};B.J.4a.1U={5M:G(1b,eS,3y,lP){if(lP){D.4m.e9([1b,eS,3y])}N{D.4m.1c([1b,eS,3y])}},3C:G(){R(u i=0;i<D.4m.K;i++){u 2n=D.4m[i];if(2n[1].1w(D,M)){F 2n[2].1w(D,M)}}14 B.J.4d},vs:G(1b){R(u i=0;i<D.4m.K;i++){u 2n=D.4m[i];if(2n[0]==1b){D.4m.4y(i,1);F 1h}}F 1m}};B.J.1z=[\"4f\",\"4L\",\"1R\",\"2l\",\"8Z\",\"lO\",\"lN\",\"lM\",\"5a\",\"4i\",\"24\",\"lL\",\"66\",\"lo\",\"ln\",\"lK\",\"lJ\",\"lI\",\"7e\",\"3A\",\"eN\",\"lH\",\"2r\",\"lG\",\"47\",\"1O\",\"lF\",\"4d\",\"4a\",\"5u\",\"2f\",\"7M\",\"U\",\"lE\",\"lD\",\"2o\",\"eR\",\"lC\",\"2z\",\"lm\",\"67\",\"lp\",\"eI\",\"lB\",\"lA\",\"d4\",\"ll\",\"af\",\"dw\",\"lz\",\"ly\",\"lx\",\"lw\",\"eO\",\"bi\",\"bg\",\"lv\"];B.J.1W=[\"3f\",\"ae\",\"ad\",\"ab\",\"eM\",\"eL\",\"eK\",\"ac\",\"eJ\"];B.J.2Y=G(lu,eP){if(H(B.eQ)==\"L\"){B.eQ=(B.3d||(H(1x)==\"L\"&&H(1q)==\"L\"))}if(!B.eQ){F}u 1p=eP.2k[\":1p\"];R(u i=0;i<1p.K;i++){lu[1p[i]]=eP[1p[i]]}};B.J.2d=G(){u m=D;m.vr=m.24;m.vq=m.eO;if(H(ls)!=\"L\"){m.af=G(lr){F ls(lr).23(/\\\\\\'/g,\"%27\")}}N{m.af=G(lq){F vp(lq).23(/\\\\+/g,\"%2B\").23(/\\\\\"/g,\"%22\").W.23(/\\\\\\'/g,\"%27\")}}m.5a=G(1b){D.43=1b;D.1b=1b};m.5a.1U=Y 2x();m.2l(m.5a.1U,{U:G(){if(D.43&&D.43!=D.1b){F D.1b+\"(\"+m.U(D.43)+\")\"}N{F D.1b+\"()\"}},1l:m.24(\"U\")});m.4d=Y m.5a(\"B.J.4d\");m.lp=m.2z(m.67,1);m.eI=m.2z(m.67,-1);m.lo=m.66(\"G\");m.ln=m.66(\"L\");m.lm=m.2z(m.2l,O);m.ll=m.2z(m.2r,O);m.ae=Y m.4a();m.5u(\"vo\",m.eN,m.eM);m.5u(\"ej\",m.3A,m.eL);m.ad=Y m.4a();m.7M(\"ej\",m.3A,m.eK);m.7M(\"1n\",m.66(\"1n\"),m.ac);m.7M(\"vn\",m.66(\"2y\",\"5L\"),m.eJ);m.ab=Y m.4a();u 1p=m.2o(m.1z,m.1W);m.2k={\":3e\":m.2o(m.1W),\":1p\":1p};m.3f(D)};B.J.2d();if(!B.3d){2f=B.J.2f}B.J.2Y(D,B.J);if(H(1q)!=\"L\"){1q.2X(\"B.15\");1q.2M(\"B.J\")}if(H(1x)!=\"L\"){1x.26(\"B.J\",[])}1f{if(H(B.J)==\"L\"){14\"\"}}1e(e){14\"B.15 3F on B.J!\"}if(H(B.15)==\"L\"){B.15={}}B.15.1r=\"B.15\";B.15.1Y=\"1.3.1\";B.J.2l(B.15,{1K:G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"},1l:G(){F D.1K()},9W:G(1b,lk,lj,lh){B.15.9Y.5M(1b,lk,lj,lh)},1Q:G(3R,lg){u I=B.15;if(M.K==2){F I.9Z(G(a){F a!=lg},3R)}if(H(3R.1a)==\"G\"){F 3R}N{if(H(3R.1Q)==\"G\"){F 3R.1Q()}}1f{F I.9Y.3C(3R)}1e(e){u m=B.J;if(e==m.4d){e=Y 3p(H(3R)+\": \"+m.U(3R)+\" is 2E vm\")}14 e}},eu:G(n){if(!n){n=0}u m=B.J;F{U:G(){F\"eu(\"+n+\")\"},1l:m.24(\"U\"),1a:m.4f(n)}},et:G(p){u I=B.15;u m=B.J;u 1g=[];u lf=I.1Q(p);F{U:G(){F\"et(...)\"},1l:m.24(\"U\"),1a:G(){1f{u W=lf.1a();1g.1c(W);F W}1e(e){if(e!=I.25){14 e}if(1g.K===0){D.1a=G(){14 I.25}}N{u i=-1;D.1a=G(){i=(i+1)%1g.K;F 1g[i]}}F D.1a()}}}},7b:G(Q,n){u m=B.J;if(H(n)==\"L\"){F{U:G(){F\"7b(\"+m.U(Q)+\")\"},1l:m.24(\"U\"),1a:G(){F Q}}}F{U:G(){F\"7b(\"+m.U(Q)+\", \"+n+\")\"},1l:m.24(\"U\"),1a:G(){if(n<=0){14 B.15.25}n-=1;F Q}}},1a:G(ld){F ld.1a()},es:G(p,q){u m=B.J;u 1a=B.15.1a;u lc=m.2r(1Q,M);F{U:G(){F\"es(...)\"},1l:m.24(\"U\"),1a:G(){F m.2r(1a,lc)}}},a1:G(3b,1V){u m=B.J;1V=B.15.1Q(1V);if(3b===O){3b=m.4i.7L}F{U:G(){F\"a1(...)\"},1l:m.24(\"U\"),1a:G(){1M(1h){u W=1V.1a();if(3b(W)){F W}}F L}}},a0:G(3b,1V){u m=B.J;1V=B.15.1Q(1V);if(3b===O){3b=m.4i.7L}F{U:G(){F\"a0(...)\"},1l:m.24(\"U\"),1a:G(){1M(1h){u W=1V.1a();if(!3b(W)){F W}}F L}}},er:G(1V){u I=B.15;u m=B.J;1V=I.1Q(1V);u 5c=0;u 2J=0;u 3a=1;u i=-1;if(M.K==2){2J=M[1]}N{if(M.K==3){5c=M[1];2J=M[2]}N{5c=M[1];2J=M[2];3a=M[3]}}F{U:G(){F\"er(\"+[\"...\",5c,2J,3a].2b(\", \")+\")\"},1l:m.24(\"U\"),1a:G(){u W;1M(i<5c){W=1V.1a();i++}if(5c>=2J){14 I.25}5c+=3a;F W}}},4c:G(aa,p,q){u m=B.J;u I=B.15;u lb=m.2r(I.1Q,m.1R(O,M,1));u 2r=m.2r;u 1a=I.1a;F{U:G(){F\"4c(...)\"},1l:m.24(\"U\"),1a:G(){F aa.1w(D,2r(1a,lb))}}},ep:G(aa,1V,I){1V=B.15.1Q(1V);u m=B.J;F{U:G(){F\"ep(...)\"},1l:m.24(\"U\"),1a:G(){F aa.1w(I,1V.1a())}}},55:G(p,q){u I=B.15;u m=B.J;if(M.K==1){F I.1Q(M[0])}u 64=m.2r(I.1Q,M);F{U:G(){F\"55(...)\"},1l:m.24(\"U\"),1a:G(){1M(64.K>1){1f{F 64[0].1a()}1e(e){if(e!=I.25){14 e}64.2P()}}if(64.K==1){u a9=64.2P();D.1a=m.1O(\"1a\",a9);F D.1a()}14 I.25}}},9Z:G(3b,1V){u I=B.15;1V=I.1Q(1V);F{U:G(){F\"9Z(...)\"},1l:B.J.24(\"U\"),1a:G(){u W=1V.1a();if(!3b(W)){D.1a=G(){14 I.25};D.1a()}F W}}},eo:G(3b,1V){1V=B.15.1Q(1V);u m=B.J;u 1O=m.1O;F{\"U\":G(){F\"eo(...)\"},\"1l\":m.24(\"U\"),\"1a\":G(){1M(1h){u W=1V.1a();if(!3b(W)){2K}}D.1a=1O(\"1a\",1V);F W}}},a7:G(63,2u,la){2u.62[63]=-1;u m=B.J;u l9=m.eI;F{U:G(){F\"en(\"+63+\", ...)\"},1l:m.24(\"U\"),1a:G(){u W;u i=2u.62[63];if(i==2u.29){W=la.1a();2u.a8.1c(W);2u.29+=1;2u.62[63]+=1}N{W=2u.a8[i-2u.2a];2u.62[63]+=1;if(i==2u.2a&&l9(2u.62)!=2u.2a){2u.2a+=1;2u.a8.2P()}}F W}}},en:G(a6,n){u W=[];u 2u={\"62\":[],\"a8\":[],\"29\":-1,\"2a\":-1};if(M.K==1){n=2}u I=B.15;a6=I.1Q(a6);u a7=I.a7;R(u i=0;i<n;i++){W.1c(a7(i,2u,a6))}F W},2G:G(4l){u m=B.J;if(H(4l.9T)==\"G\"){F 4l.9T()}N{if(m.3A(4l)){F m.2o(4l)}}u I=B.15;4l=I.1Q(4l);u W=[];1f{1M(1h){W.1c(4l.1a())}}1e(e){if(e!=I.25){14 e}F W}F L},7H:G(fn,7K,l8){u i=0;u x=l8;u I=B.15;7K=I.1Q(7K);if(M.K<3){1f{x=7K.1a()}1e(e){if(e==I.25){e=Y 3p(\"7H() of vl vk vj no vi 3m\")}14 e}i++}1f{1M(1h){x=fn(x,7K.1a())}}1e(e){if(e!=I.25){14 e}}F x},7I:G(){u 4k=0;u 2J=0;u 3a=1;if(M.K==1){2J=M[0]}N{if(M.K==2){4k=M[0];2J=M[1]}N{if(M.K==3){4k=M[0];2J=M[1];3a=M[2]}N{14 Y 3p(\"7I() vh 1, 2, or 3 M!\")}}}if(3a===0){14 Y 3p(\"7I() 3a 5p 2E be 0\")}F{1a:G(){if((3a>0&&4k>=2J)||(3a<0&&4k<=2J)){14 B.15.25}u W=4k;4k+=3a;F W},U:G(){F\"7I(\"+[4k,2J,3a].2b(\", \")+\")\"},1l:B.J.24(\"U\")}},l0:G(a5,l7){u x=l7||0;u I=B.15;a5=I.1Q(a5);1f{1M(1h){x+=a5.1a()}}1e(e){if(e!=I.25){14 e}}F x},em:G(a4){u I=B.15;a4=I.1Q(a4);1f{1M(1h){a4.1a()}}1e(e){if(e!=I.25){14 e}}},9a:G(7J,1A,I){u m=B.J;if(M.K>2){1A=m.1O(1A,I)}if(m.3A(7J)){1f{R(u i=0;i<7J.K;i++){1A(7J[i])}}1e(e){if(e!=B.15.25){14 e}}}N{I=B.15;I.em(I.4c(1A,7J))}},kZ:G(l6,1A){u I=B.15;1f{I.a0(1A,l6).1a();F 1m}1e(e){if(e!=I.25){14 e}F 1h}},kY:G(l5,4j){u W=B.15.2G(l5);if(M.K==1){4j=B.J.2f}W.iz(4j);F W},kX:G(l4){u W=B.15.2G(l4);W.vg();F W},kW:G(l3,1A){u I=B.15;1f{I.a1(1A,l3).1a();F 1h}1e(e){if(e!=I.25){14 e}F 1m}},kV:G(1g,5b){if(B.J.3A(5b)){R(u i=0;i<5b.K;i++){1g.1c(5b[i])}}N{u I=B.15;5b=I.1Q(5b);1f{1M(1h){1g.1c(5b.1a())}}1e(e){if(e!=I.25){14 e}}}F 1g},ek:G(a3,eH){u m=B.J;u I=B.15;if(M.K<2){eH=m.4i.eE}a3=I.1Q(a3);u pk=L;u k=L;u v;G eF(){v=a3.1a();k=eH(v)}G l2(){u 7j=v;v=L;F 7j}u eG=1h;F{U:G(){F\"ek(...)\"},1a:G(){1M(k==pk){eF();if(eG){eG=1m;2K}}pk=k;F[k,{1a:G(){if(v==L){eF()}if(k!=pk){14 I.25}F l2()}}]}}},kU:G(a2,eD){u m=B.J;u I=B.15;if(M.K<2){eD=m.4i.eE}a2=I.1Q(a2);u ey=[];u eA=1h;u ez;1M(1h){1f{u eB=a2.1a();u 2h=eD(eB)}1e(e){if(e==I.25){2K}14 e}if(eA||2h!=ez){u eC=[];ey.1c([2h,eC])}eC.1c(eB);eA=1m;ez=2h}F ey},9X:G(ex){u i=0;F{U:G(){F\"9X(...)\"},1l:B.J.24(\"U\"),1a:G(){if(i>=ex.K){14 B.15.25}F ex[i++]}}},eh:G(ew){F(ew&&H(ew.ei)==\"G\")},9V:G(l1){F{U:G(){F\"9V(...)\"},1l:B.J.24(\"U\"),1a:G(){u W=l1.ei();if(W===O||W===L){14 B.15.25}F W}}}});B.15.1W=[\"9Y\",\"9X\",\"eh\",\"9V\",];B.15.1z=[\"25\",\"9W\",\"1Q\",\"eu\",\"et\",\"7b\",\"1a\",\"es\",\"a1\",\"a0\",\"er\",\"4c\",\"ep\",\"55\",\"9Z\",\"eo\",\"en\",\"2G\",\"7H\",\"7I\",\"l0\",\"em\",\"9a\",\"kZ\",\"kY\",\"kX\",\"kW\",\"kV\",\"ek\",\"kU\"];B.15.2d=G(){u m=B.J;D.25=Y m.5a(\"25\");D.9Y=Y m.4a();D.9W(\"ej\",m.3A,D.9X);D.9W(\"ei\",D.eh,D.9V);D.2k={\":3e\":D.1z,\":1p\":m.2o(D.1z,D.1W)};m.3f(D)};B.15.2d();if(!B.3d){7H=B.15.7H}B.J.2Y(D,B.15);if(H(1q)!=\"L\"){1q.2X(\"B.1H\");1q.2M(\"B.J\")}if(H(1x)!=\"L\"){1x.26(\"B.J\",[])}1f{if(H(B.J)==\"L\"){14\"\"}}1e(e){14\"B.1H 3F on B.J!\"}if(H(B.1H)==\"L\"){B.1H={}}B.1H.1r=\"B.1H\";B.1H.1Y=\"1.3.1\";B.1H.1K=G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"};B.1H.1l=G(){F D.1K()};B.1H.1z=[\"5C\",\"49\",\"7A\",\"kR\",\"2L\",\"5Z\",\"kG\",\"ch\",\"kE\",\"kC\"];B.1H.1W=[\"ef\",\"e8\",\"e7\"];B.1H.49=G(1P,kT,3z){D.1P=1P;D.3N=kT;D.3z=3z;D.vf=Y 3Q()};B.1H.49.1U={U:G(){u m=B.J;F\"49(\"+m.2r(m.U,[D.1P,D.3N,D.3z]).2b(\", \")+\")\"},1l:B.J.24(\"U\")};B.J.2l(B.1H,{ef:G(7F){u I=B.1H;if(H(7F)==\"1n\"){7F=I.5C[7F]}F G(1t){u 7G=1t.3N;if(H(7G)==\"1n\"){7G=I.5C[7G]}F 7G>=7F}},e8:G(){u kS=B.1H.49;R(u i=0;i<M.K;i++){if(!(M[i]2C kS)){F 1m}}F 1h},e7:G(a,b){F B.J.2f([a.3N,a.3z],[b.3N,b.3z])},kR:G(1t){cq(\"1P: \"+1t.1P+\"\\\\ve: \"+1t.3N+\"\\\\vd: \"+1t.3z.2b(\" \"))}});B.1H.7A=G(7E){D.4f=0;if(H(7E)==\"L\"||7E===O){7E=-1}D.ec=7E;D.4h=[];D.7C={};D.e5=1m};B.1H.7A.1U={vc:G(){D.4h.4y(0,D.4h.K)},kK:G(1t){if(H(2O)!=\"L\"&&2O.eg&&2O.eg.5Z){2O.eg.5Z(1t)}N{if(H(7h)!=\"L\"&&7h.kQ){7h.kQ(1t)}N{if(H(5X)==\"G\"){5X(1t)}}}},kL:G(1t){R(u k in D.7C){u 2n=D.7C[k];if(2n.kO!=k||(2n[0]&&!2n[0](1t))){2V}2n[1](1t)}},hE:G(ee,7D,kP){if(H(7D)==\"1n\"){7D=B.1H.ef(7D)}u ed=[7D,kP];ed.kO=ee;D.7C[ee]=ed},c9:G(kN){gi D.7C[kN]},kH:G(kM,vb){u 1t=Y B.1H.49(D.4f,kM,B.J.1R(O,M,1));D.4h.1c(1t);D.kL(1t);if(D.e5){D.kK(1t.3N+\": \"+1t.3z.2b(\" \"))}D.4f+=1;1M(D.ec>=0&&D.4h.K>D.ec){D.4h.2P()}},c8:G(9U){u ea=0;if(!(H(9U)==\"L\"||9U===O)){ea=28.29(0,D.4h.K-9U)}F D.4h.9T(ea)},kJ:G(7B){if(H(7B)==\"L\"||7B===O){7B=30}u 9S=D.c8(7B);if(9S.K){u 1g=2r(G(m){F\"\\\\n  [\"+m.1P+\"] \"+m.3N+\": \"+m.3z.2b(\" \")},9S);1g.e9(\"va \"+9S.K+\" v9:\");F 1g.2b(\"\")}F\"\"},v8:G(kI){if(H(B.1I)==\"L\"){cq(D.kJ())}N{B.1I.bY(kI||1m)}}};B.1H.2d=G(){D.5C={8M:40,8L:50,8K:30,8J:20,8I:10};u m=B.J;m.5u(\"49\",D.e8,D.e7);u 61=m.2z;u e6=D.7A;u 60=e6.1U.kH;m.2l(D.7A.1U,{kF:61(60,\"8I\"),5Z:61(60,\"8J\"),dE:61(60,\"8M\"),kD:61(60,\"8L\"),kB:61(60,\"8K\")});u I=D;u 5Y=G(1b){F G(){I.2L[1b].1w(I.2L,M)}};D.5Z=5Y(\"5Z\");D.kG=5Y(\"dE\");D.ch=5Y(\"kF\");D.kE=5Y(\"kD\");D.kC=5Y(\"kB\");D.2L=Y e6();D.2L.e5=1h;D.2k={\":3e\":D.1z,\":1p\":m.2o(D.1z,D.1W)};m.3f(D)};if(H(5X)==\"L\"&&H(2v)!=\"L\"&&2v.kA&&H(kz)!=\"L\"){5X=G(){5X.3G=M;u ev=2v.kA(\"v7\");ev.v6(\"5X\",1m,1h);kz(ev)}}B.1H.2d();B.J.2Y(D,B.1H);if(H(1q)!=\"L\"){1q.2X(\"B.1D\")}if(H(B)==\"L\"){B={}}if(H(B.1D)==\"L\"){B.1D={}}B.1D.1r=\"B.1D\";B.1D.1Y=\"1.3.1\";B.1D.1K=G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"};B.1D.1l=G(){F D.1K()};B.1D.ks=G(1y){1y=1y+\"\";if(H(1y)!=\"1n\"||1y.K===0){F O}u 7z=1y.2R(\"-\");if(7z.K===0){F O}F Y 3Q(7z[0],7z[1]-1,7z[2])};B.1D.ky=/(\\\\d{4,})(?:-(\\\\d{1,2})(?:-(\\\\d{1,2})(?:[T ](\\\\d{1,2}):(\\\\d{1,2})(?::(\\\\d{1,2})(?:\\\\.(\\\\d+))?)?(?:(Z)|([+-])(\\\\d{1,2})(?::(\\\\d{1,2}))?)?)?)?)?/;B.1D.kr=G(1y){1y=1y+\"\";if(H(1y)!=\"1n\"||1y.K===0){F O}u X=1y.3C(B.1D.ky);if(H(X)==\"L\"||X===O){F O}u 5W,7y,7x,9R,2a,9Q,7w;5W=3w(X[1],10);if(H(X[2])==\"L\"||X[2]===\"\"){F Y 3Q(5W)}7y=3w(X[2],10)-1;7x=3w(X[3],10);if(H(X[4])==\"L\"||X[4]===\"\"){F Y 3Q(5W,7y,7x)}9R=3w(X[4],10);2a=3w(X[5],10);9Q=(H(X[6])!=\"L\"&&X[6]!==\"\")?3w(X[6],10):0;if(H(X[7])!=\"L\"&&X[7]!==\"\"){7w=28.ha(c5*4M(\"0.\"+X[7]))}N{7w=0}if((H(X[8])==\"L\"||X[8]===\"\")&&(H(X[9])==\"L\"||X[9]===\"\")){F Y 3Q(5W,7y,7x,9R,2a,9Q,7w)}u 58;if(H(X[9])!=\"L\"&&X[9]!==\"\"){58=3w(X[10],10)*v5;if(H(X[11])!=\"L\"&&X[11]!==\"\"){58+=3w(X[11],10)*kw}if(X[9]==\"-\"){58=-58}}N{58=0}F Y 3Q(3Q.v4(5W,7y,7x,9R,2a,9Q,7w)-58)};B.1D.dY=G(2g,kx){if(H(2g)==\"L\"||2g===O){F O}u hh=2g.v3();u mm=2g.v2();u ss=2g.v1();u 1g=[((kx&&(hh<10))?\"0\"+hh:hh),((mm<10)?\"0\"+mm:mm),((ss<10)?\"0\"+ss:ss)];F 1g.2b(\":\")};B.1D.kq=G(2g,7v){if(H(2g)==\"L\"||2g===O){F O}u ku=7v?\"T\":\" \";u kt=7v?\"Z\":\"\";if(7v){2g=Y 3Q(2g.9P()+(2g.v0()*kw))}F B.1D.dX(2g)+ku+B.1D.dY(2g,7v)+kt};B.1D.dX=G(2g){if(H(2g)==\"L\"||2g===O){F O}u e4=B.1D.e3;F[2g.dZ(),e4(2g.e1()+1),e4(2g.e0())].2b(\"-\")};B.1D.kp=G(d){d=d+\"\";if(H(d)!=\"1n\"||d.K===0){F O}u a=d.2R(\"/\");F Y 3Q(a[2],a[0]-1,a[1])};B.1D.e3=G(n){F(n>9)?n:\"0\"+n};B.1D.ko=G(d){if(H(d)==\"L\"||d===O){F O}u e2=B.1D.e3;F[e2(d.e1()+1),e2(d.e0()),d.dZ()].2b(\"/\")};B.1D.kn=G(d){if(H(d)==\"L\"||d===O){F O}F[d.e1()+1,d.e0(),d.dZ()].2b(\"/\")};B.1D.1z=[\"ks\",\"kr\",\"dY\",\"kq\",\"dX\",\"kp\",\"ko\",\"kn\"];B.1D.1W=[];B.1D.2k={\":3e\":B.1D.1z,\":1p\":B.1D.1z};B.1D.2d=G(){u 2w=D.1r+\".\";R(u k in D){u o=D[k];if(H(o)==\"G\"&&H(o.1r)==\"L\"){1f{o.1r=2w+k}1e(e){}}}};B.1D.2d();if(H(B.J)!=\"L\"){B.J.2Y(D,B.1D)}N{(G(km,dW){if((H(1x)==\"L\"&&H(1q)==\"L\")||(H(B.3d)==\"5L\"&&B.3d)){u 1p=dW.2k[\":1p\"];R(u i=0;i<1p.K;i++){km[1p[i]]=dW[1p[i]]}}})(D,B.1D)}if(H(1q)!=\"L\"){1q.2X(\"B.1s\")}if(H(B)==\"L\"){B={}}if(H(B.1s)==\"L\"){B.1s={}}B.1s.1r=\"B.1s\";B.1s.1Y=\"1.3.1\";B.1s.1K=G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"};B.1s.1l=G(){F D.1K()};B.1s.ke=G(kl,kk,kj,ki,kh,dV,kg,9N,kf){F G(1P){1P=4M(1P);if(H(1P)==\"L\"||1P===O||k8(1P)){F kl}u 9L=kk;u 9K=kj;if(1P<0){1P=-1P}N{9L=9L.23(/-/,\"\")}u me=M.2U;u 9M=B.1s.dJ(ki);if(kh){1P=1P*3k;9K=9M.9y+9K}1P=B.1s.dK(1P,dV);u 9O=1P.2R(/\\\\./);u 3r=9O[0];u 3P=(9O.K==1)?\"\":9O[1];u X=\"\";1M(3r.K<kg){3r=\"0\"+3r}if(9N){1M(3r.K>9N){u i=3r.K-9N;X=9M.9A+3r.2W(i,3r.K)+X;3r=3r.2W(0,i)}}X=3r+X;if(dV>0){1M(3P.K<kf){3P=3P+\"0\"}X=X+9M.9z+3P}F 9L+X+9K}};B.1s.k5=G(9J,9H,9G){if(H(9H)==\"L\"){9H=\"\"}u 3q=9J.3C(/((?:[0#]+,)?[0#]+)(?:\\\\.([0#]+))?(%)?/);if(!3q){14 3p(\"uZ uY\")}u 7u=9J.3H(0,3q.c6);u kd=9J.3H(3q.c6+3q[0].K);if(7u.uX(/-/)==-1){7u=7u+\"-\"}u 9I=3q[1];u 3P=(H(3q[2])==\"1n\"&&3q[2]!=\"\")?3q[2]:\"\";u kc=(H(3q[3])==\"1n\"&&3q[3]!=\"\");u dU=9I.2R(/,/);u 9F;if(H(9G)==\"L\"){9G=\"dG\"}if(dU.K==1){9F=O}N{9F=dU[1].K}u ka=9I.K-9I.23(/0/g,\"\").K;u k9=3P.K-3P.23(/0/g,\"\").K;u kb=3P.K;u W=B.1s.ke(9H,7u,kd,9G,kc,kb,ka,9F,k9);u m=B.J;if(m){u fn=M.2U;u 3G=m.2o(M);W.U=G(){F[I.1r,\"(\",2r(m.U,3G).2b(\", \"),\")\"].2b(\"\")}}F W};B.1s.dJ=G(4g){if(H(4g)==\"L\"||4g===O){4g=\"dG\"}if(H(4g)==\"1n\"){u W=B.1s.5V[4g];if(H(W)==\"1n\"){W=M.2U(W);B.1s.5V[4g]=W}F W}N{F 4g}};B.1s.k4=G(dT,9E){if(9E){u X=dT/9E;if(!k8(X)){F B.1s.9B(dT/9E)}}F\"0\"};B.1s.9B=G(dS){u dR=(dS<0?\"-\":\"\");u s=28.8B(28.uW(dS)*3k).1l();if(s==\"0\"){F s}if(s.K<3){1M(s.3Z(s.K-1)==\"0\"){s=s.2W(0,s.K-1)}F dR+\"0.\"+s}u 5E=dR+s.2W(0,s.K-2);u 7t=s.2W(s.K-2,s.K);if(7t==\"uV\"){F 5E}N{if(7t.3Z(1)==\"0\"){F 5E+\".\"+7t.3Z(0)}N{F 5E+\".\"+7t}}};B.1s.dI=G(1y,dQ){1y=1y+\"\";if(H(1y)!=\"1n\"){F O}if(!dQ){F 1y.23(/^\\\\s+/,\"\")}N{F 1y.23(Y 8V(\"^[\"+dQ+\"]+\"),\"\")}};B.1s.dH=G(1y,dP){1y=1y+\"\";if(H(1y)!=\"1n\"){F O}if(!dP){F 1y.23(/\\\\s+$/,\"\")}N{F 1y.23(Y 8V(\"[\"+dP+\"]+$\"),\"\")}};B.1s.k2=G(1y,dO){u I=B.1s;F I.dH(I.dI(1y,dO),dO)};B.1s.dL=G(9D,9C){9D=28.8B(9D*28.dN(10,9C));u X=(9D*28.dN(10,-9C)).6I(9C);if(X.3Z(0)==\".\"){X=\"0\"+X}F X};B.1s.dK=G(k7,dM){F B.1s.dL(k7+0.5*28.dN(10,-dM),dM)};B.1s.k3=G(k6){F B.1s.9B(3k*k6)+\"%\"};B.1s.1z=[\"dL\",\"dK\",\"k5\",\"dJ\",\"k4\",\"9B\",\"k3\",\"dI\",\"dH\",\"k2\"];B.1s.5V={k1:{9A:\",\",9z:\".\",9y:\"%\"},uU:{9A:\".\",9z:\",\",9y:\"%\"},uT:{9A:\" \",9z:\",\",9y:\"%\"},\"dG\":\"k1\"};B.1s.1W=[];B.1s.2k={\":1p\":B.1s.1z,\":3e\":B.1s.1z};B.1s.2d=G(){u 2w=D.1r+\".\";u k,v,o;R(k in D.5V){o=D.5V[k];if(H(o)==\"3n\"){o.U=G(){F D.1r};o.1r=2w+\"5V.\"+k}}R(k in D){o=D[k];if(H(o)==\"G\"&&H(o.1r)==\"L\"){1f{o.1r=2w+k}1e(e){}}}};B.1s.2d();if(H(B.J)!=\"L\"){B.J.2Y(D,B.1s)}N{(G(k0,dF){if((H(1x)==\"L\"&&H(1q)==\"L\")||(H(B.3d)==\"5L\"&&B.3d)){u 1p=dF.2k[\":1p\"];R(u i=0;i<1p.K;i++){k0[1p[i]]=dF[1p[i]]}}})(D,B.1s)}if(H(1q)!=\"L\"){1q.2X(\"B.1k\");1q.2M(\"B.J\")}if(H(1x)!=\"L\"){1x.26(\"B.J\",[])}1f{if(H(B.J)==\"L\"){14\"\"}}1e(e){14\"B.1k 3F on B.J!\"}if(H(B.1k)==\"L\"){B.1k={}}B.1k.1r=\"B.1k\";B.1k.1Y=\"1.3.1\";B.1k.1K=G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"};B.1k.1l=G(){F D.1K()};B.1k.2t=G(jZ){D.55=[];D.id=D.7n();D.2H=-1;D.54=0;D.53=[O,O];D.7m=jZ;D.7l=1m;D.7r=1m};B.1k.2t.1U={U:G(){u 7s;if(D.2H==-1){7s=\"uS\"}N{if(D.2H===0){7s=\"uR\"}N{7s=\"dE\"}}F\"2t(\"+D.id+\", \"+7s+\")\"},1l:B.J.24(\"U\"),7n:B.J.4f(),jY:G(){u I=B.1k;if(D.2H==-1){if(D.7m){D.7m(D)}N{D.7l=1h}if(D.2H==-1){D.52(Y I.di(D))}}N{if((D.2H===0)&&(D.53[0]2C I.2t)){D.53[0].jY()}}},jQ:G(){D.54++},jX:G(){D.54--;if((D.54===0)&&(D.2H>=0)){D.9u()}},jR:G(X){D.9x(X);D.jX()},9x:G(X){D.2H=((X 2C 2x)?1:0);D.53[D.2H]=X;D.9u()},dD:G(){if(D.2H!=-1){if(!D.7l){14 Y B.1k.dj(D)}D.7l=1m;F}},3o:G(X){D.dD();if(X 2C B.1k.2t){14 Y 2x(\"2t jW 9v aB be 7r if jV jU jT jS of a 3o\")}D.9x(X)},52:G(X){D.dD();u I=B.1k;if(X 2C I.2t){14 Y 2x(\"2t jW 9v aB be 7r if jV jU jT jS of a 3o\")}if(!(X 2C 2x)){X=Y I.9p(X)}D.9x(X)},jP:G(fn){if(M.K>1){fn=B.J.2z.1w(O,M)}F D.9w(fn,fn)},5Q:G(fn){if(M.K>1){fn=B.J.2z.1w(O,M)}F D.9w(fn,O)},jA:G(fn){if(M.K>1){fn=B.J.2z.1w(O,M)}F D.9w(O,fn)},9w:G(cb,eb){if(D.7r){14 Y 2x(\"uQ uP 9v 2E be re-uO\")}D.55.1c([cb,eb]);if(D.2H>=0){D.9u()}F D},9u:G(){u dC=D.55;u 56=D.2H;u X=D.53[56];u I=D;u cb=O;1M(dC.K>0&&D.54===0){u 2n=dC.2P();u f=2n[56];if(f===O){2V}1f{X=f(X);56=((X 2C 2x)?1:0);if(X 2C B.1k.2t){cb=G(X){I.jR(X)};D.jQ()}}1e(3O){56=1;if(!(3O 2C 2x)){3O=Y B.1k.9p(3O)}X=3O}}D.2H=56;D.53[56]=X;if(cb&&D.54){X.jP(cb);X.7r=1h}}};B.J.2l(B.1k,{dk:G(){F dB(\"(\"+M[0].jN+\")\")},dp:G(uN){u d=Y B.1k.2t();d.3o.1w(d,M);F d},9q:G(uM){u d=Y B.1k.2t();d.52.1w(d,M);F d},do:G(){u I=M.2U;if(!I.7q){u dy=[G(){F Y 7q()},G(){F Y dA(\"jO.dz\")},G(){F Y dA(\"uL.dz\")},G(){F Y dA(\"jO.dz.4.0\")},G(){14 Y B.1k.dh(\"uK uJ 2E uI 7q\")}];R(u i=0;i<dy.K;i++){u 1A=dy[i];1f{I.7q=1A;F 1A()}1e(e){}}}F I.7q()},dx:G(){},jK:G(d){if(D.uH==4){1f{D.5T=O}1e(e){1f{D.5T=B.1k.dx}1e(e){}}u 5U=O;1f{5U=D.jm;if(!5U&&B.J.7e(D.jN)){5U=jM}}1e(e){}if(5U==hQ||5U==jM){d.3o(D)}N{u 3O=Y B.1k.dg(D,\"uG uF\");if(3O.2y){d.52(3O)}N{d.52(3O)}}}},jL:G(2s){1f{2s.5T=O}1e(e){1f{2s.5T=B.1k.dx}1e(e){}}2s.uE()},dl:G(2s,7p){if(H(7p)==\"L\"||7p===O){7p=\"\"}u m=B.J;u I=B.1k;u d=Y I.2t(m.2z(I.jL,2s));1f{2s.5T=m.1O(I.jK,2s,d);2s.uD(7p)}1e(e){1f{2s.5T=O}1e(uC){}d.52(e)}F d},dn:G(5F){u I=B.1k;u 2s=I.do();if(M.K>1){u m=B.J;u qs=m.dw.1w(O,m.1R(O,M,1));if(qs){5F+=\"?\"+qs}}2s.cp(\"uB\",5F,1h);F I.dl(2s)},jv:G(5F){u I=B.1k;u d=I.dn.1w(I,M);d=d.5Q(I.dk);F d},dm:G(jJ,dv){u d=Y B.1k.2t();u m=B.J;if(H(dv)!=\"L\"){d.5Q(G(){F dv})}u jI=uA(m.1O(\"3o\",d),28.8B(jJ*c5));d.7m=G(){1f{uz(jI)}1e(e){}};F d},ju:G(jH,1A){u m=B.J;u jG=m.2z.1w(m,m.1R(O,M,1));F B.1k.dm(jH).5Q(G(X){F jG()})}});B.1k.5O=G(){D.5S=[];D.4e=1m;D.id=D.7n()};B.1k.5O.1U={bX:B.1k.5O,uy:G(){d=Y B.1k.2t();if(D.4e){D.5S.1c(d)}N{D.4e=1h;d.3o(D)}F d},jF:G(){if(!D.4e){14 3p(\"ux to jF an jE 5O\")}D.4e=1m;if(D.5S.K>0){D.4e=1h;D.5S.2P().3o(D)}},7n:B.J.4f(),U:G(){u 9t;if(D.4e){9t=\"4e, \"+D.5S.K+\" 5S\"}N{9t=\"jE\"}F\"5O(\"+D.id+\", \"+9t+\")\"},1l:B.J.24(\"U\")};B.1k.7i=G(2G,du,jC,jB,jD){D.2G=2G;D.9r=Y 7o(D.2G.K);D.55=[];D.id=D.7n();D.2H=-1;D.54=0;D.53=[O,O];D.7m=jD;D.7l=1m;if(D.2G.K===0&&!du){D.3o(D.9r)}D.dr=0;D.jz=du;D.jy=jC;D.jx=jB;u 9s=0;B.J.2r(B.J.1O(G(d){d.5Q(B.J.1O(D.dt,D),9s,1h);d.jA(B.J.1O(D.dt,D),9s,1m);9s+=1},D),D.2G)};B.J.2l(B.1k.7i.1U,B.1k.2t.1U);B.J.2l(B.1k.7i.1U,{dt:G(ds,7k,5R){D.9r[ds]=[7k,5R];D.dr+=1;if(D.2H!==0){if(7k&&D.jz){D.3o([ds,5R])}N{if(!7k&&D.jy){D.52(5R)}N{if(D.dr==D.2G.K){D.3o(D.9r)}}}}if(!7k&&D.jx){5R=O}F 5R}});B.1k.jt=G(jw){u d=Y B.1k.7i(jw,1m,1h,1m);d.5Q(G(dq){u 7j=[];R(u i=0;i<dq.K;i++){7j.1c(dq[i][1])}F 7j});F d};B.1k.jr=G(1A){u I=B.1k;u 5P;1f{u r=1A.1w(O,B.J.1R([],M,1));if(r 2C I.2t){5P=r}N{if(r 2C 2x){5P=I.9q(r)}N{5P=I.dp(r)}}}1e(e){5P=I.9q(e)}F 5P};B.1k.1z=[\"dj\",\"di\",\"dh\",\"9p\",\"dg\",\"2t\",\"dp\",\"9q\",\"do\",\"dn\",\"jv\",\"dm\",\"ju\",\"dl\",\"5O\",\"7i\",\"jt\",\"jr\"];B.1k.1W=[\"dk\"];B.1k.2d=G(){u m=B.J;u ne=m.2z(m.jq,D);ne(\"dj\",G(jp){D.jo=jp});ne(\"di\",G(jn){D.jo=jn});ne(\"dh\",G(1t){D.43=1t});ne(\"9p\",G(1t){D.43=1t});ne(\"dg\",G(2s,1t){D.2s=2s;D.43=1t;1f{D.2y=2s.jm}1e(e){}});D.2k={\":3e\":D.1z,\":1p\":m.2o(D.1z,D.1W)};m.3f(D)};B.1k.2d();B.J.2Y(D,B.1k);if(H(1q)!=\"L\"){1q.2X(\"B.S\");1q.2M(\"B.15\")}if(H(1x)!=\"L\"){1x.26(\"B.15\",[])}1f{if(H(B.15)==\"L\"){14\"\"}}1e(e){14\"B.S 3F on B.15!\"}if(H(B.S)==\"L\"){B.S={}}B.S.1r=\"B.S\";B.S.1Y=\"1.3.1\";B.S.1K=G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"};B.S.1l=G(){F D.1K()};B.S.1z=[\"d5\",\"cr\",\"b9\",\"95\",\"94\",\"j3\",\"9k\",\"cX\",\"cw\",\"iT\",\"iV\",\"4X\",\"9j\",\"iQ\",\"hS\",\"cs\",\"ia\",\"i9\",\"i8\",\"i7\",\"i6\",\"i5\",\"i4\",\"hV\",\"i3\",\"i2\",\"i1\",\"cu\",\"hW\",\"ct\",\"i0\",\"hZ\",\"hY\",\"hX\",\"P\",\"io\",\"il\",\"ik\",\"ij\",\"cm\",\"ih\",\"ii\",\"ig\",\"ie\",\"ic\",\"cv\",\"8d\",\"A\",\"6m\",\"ib\",\"1E\",\"$\",\"4q\",\"aH\",\"cO\",\"cN\",\"iM\",\"5G\",\"iK\",\"9d\",\"9e\",\"iH\",\"iD\",\"9c\",\"iB\",\"cG\",\"97\",\"hU\",\"hT\",\"iw\",\"jh\",\"jb\",\"j6\",\"j5\",\"jk\",\"jl\"];B.S.1W=[\"9b\"];B.S.5N=G(w,h){D.w=w;D.h=h};B.S.5N.1U.U=G(){u U=B.J.U;F\"{w: \"+U(D.w)+\", h: \"+U(D.h)+\"}\"};B.S.5t=G(x,y){D.x=x;D.y=y};B.S.5t.1U.U=G(){u U=B.J.U;F\"{x: \"+U(D.x)+\", y: \"+U(D.y)+\"}\"};B.S.5t.1U.1l=G(){F D.U()};B.J.2l(B.S,{jl:G(Q,o){Q=B.S.1E(Q);B.S.4X(Q,{\"1T\":{\"9o\":o,\"-hL-9o\":o,\"-uw-9o\":o,\"47\":\" uv(9o=\"+(o*3k)+\")\"}})},jk:G(){u d=Y B.S.5N();u w=B.S.3X;u b=B.S.1Z.5s;if(w.jj){d.w=w.jj;d.h=w.uu}N{if(b.dd.9n){d.w=b.dd.9n;d.h=b.dd.ji}N{if(b&&b.9n){d.w=b.9n;d.h=b.ji}}}F d},jh:G(Q){u I=B.S;if(H(Q.w)==\"2y\"||H(Q.h)==\"2y\"){F Y I.5N(Q.w||0,Q.h||0)}Q=I.1E(Q);if(!Q){F L}if(I.4q(Q,\"3u\")!=\"98\"){F Y I.5N(Q.jg||0,Q.ci||0)}u s=Q.1T;u je=s.dc;u jf=s.6P;s.dc=\"fR\";s.6P=\"j8\";s.3u=\"\";u jd=Q.jg;u jc=Q.ci;s.3u=\"98\";s.6P=jf;s.dc=je;F Y I.5N(jd,jc)},jb:G(Q,4Z){u I=B.S;Q=I.1E(Q);if(!Q){F L}u c=Y I.5t(0,0);if(Q.x&&Q.y){c.x+=Q.x||0;c.y+=Q.y||0;F c}N{if(Q.3t===O||I.4q(Q,\"3u\")==\"98\"){F L}}u 51=O;u 2j=O;u d=B.S.1Z;u de=d.7Z;u b=d.5s;if(Q.ja){51=Q.ja();c.x+=51.2I+(de.6y||b.6y)-(de.8q||b.8q);c.y+=51.3D+(de.4C||b.4C)-(de.8p||b.8p)}N{if(d.j9){51=d.j9(Q);c.x+=51.x;c.y+=51.y}N{if(Q.8g){c.x+=Q.db;c.y+=Q.da;2j=Q.8g;if(2j!=Q){1M(2j){c.x+=2j.db;c.y+=2j.da;2j=2j.8g}}u ua=ut.us.8G();if((H(7h)!=\"L\"&&4M(7h.ur())<9)||(ua.2A(\"uq\")!=-1&&I.4q(Q,\"6P\")==\"j8\")){c.x-=b.db;c.y-=b.da}}}}if(H(4Z)!=\"L\"){4Z=M.2U(4Z);if(4Z){c.x-=(4Z.x||0);c.y-=(4Z.y||0)}}if(Q.3t){2j=Q.3t}N{2j=O}1M(2j&&2j.j7!=\"uo\"&&2j.j7!=\"co\"){c.x-=2j.6y;c.y-=2j.4C;if(2j.3t){2j=2j.3t}N{2j=O}}F c},j6:G(Q,d9,7g){Q=B.S.1E(Q);if(H(7g)==\"L\"){7g=\"px\"}B.S.4X(Q,{\"1T\":{\"5A\":d9.w+7g,\"3V\":d9.h+7g}})},j5:G(Q,d8,7f){Q=B.S.1E(Q);if(H(7f)==\"L\"){7f=\"px\"}B.S.4X(Q,{\"1T\":{\"2I\":d8.x+7f,\"3D\":d8.y+7f}})},cr:G(){F B.S.3X},b9:G(){F B.S.1Z},95:G(2m,1A){u I=B.S;u d6=I.1Z;u d7=I.un;u W;1f{I.3X=2m;I.1Z=2m.2v;W=1A()}1e(e){I.3X=d7;I.1Z=d6;14 e}I.3X=d7;I.1Z=d6;F W},d5:G(Q){u 7d=[];u 7c=[];u m=B.J;u I=B.S;if(H(Q)==\"L\"||Q===O){Q=I.1Z}N{Q=I.1E(Q)}m.d4(Q,G(Q){u 1b=Q.1b;if(m.7e(1b)){u 4Y=Q.cD;if(4Y==\"cv\"&&(Q.1J==\"um\"||Q.1J==\"uk\")&&!Q.ip){F O}if(4Y==\"ct\"){if(Q.j4>=0){u 9m=Q.1S[Q.j4];7d.1c(1b);7c.1c((9m.3m)?9m.3m:9m.7X);F O}7d.1c(1b);7c.1c(\"\");F O}if(4Y==\"cu\"||4Y==\"P\"||4Y==\"8d\"||4Y==\"6m\"){F Q.5h}7d.1c(1b);7c.1c(Q.3m||\"\");F O}F Q.5h});F[7d,7c]},94:G(1N,1A){u I=B.S;u d3=I.1Z;u W;1f{I.1Z=1N;W=1A()}1e(e){I.1Z=d3;14 e}I.1Z=d3;F W},j3:G(1b,j2,3y,j1){B.S.9b.5M(1b,j2,3y,j1)},9k:G(1j,7a){u im=B.15;u I=B.S;u 1Q=im.1Q;u iY=im.7b;u 4c=im.4c;u iX=I.9b;u iZ=I.9k;u iW=B.J.4d;1M(1h){if(H(1j)==\"L\"||1j===O){F O}if(H(1j.3T)!=\"L\"&&1j.3T>0){F 1j}if(H(1j)==\"2y\"||H(1j)==\"5L\"){1j=1j.1l()}if(H(1j)==\"1n\"){F I.1Z.4S(1j)}if(H(1j.j0)==\"G\"){1j=1j.j0(7a);2V}if(H(1j)==\"G\"){1j=1j(7a);2V}u 9l=O;1f{9l=1Q(1j)}1e(e){}if(9l){F 4c(iZ,9l,iY(7a))}1f{1j=iX.3C(1j,7a);2V}1e(e){if(e!=iW){14 e}}F I.1Z.4S(1j.1l())}F L},iV:G(1j,79,iU){u o={};o[79]=iU;1f{F B.S.4X(1j,o)}1e(e){}F O},iT:G(1j,79){u I=B.S;u d2=I.4U.99[79];1j=I.1E(1j);1f{if(d2){F 1j[d2]}F 1j.fm(79)}1e(e){}F O},4X:G(1j,5K){u Q=1j;u I=B.S;if(H(1j)==\"1n\"){Q=I.1E(1j)}if(5K){u d0=B.J.8Z;if(I.4U.6X){R(u k in 5K){u v=5K[k];if(H(v)==\"3n\"&&H(Q[k])==\"3n\"){d0(Q[k],v)}N{if(k.2W(0,2)==\"on\"){if(H(v)==\"1n\"){v=Y cZ(v)}Q[k]=v}N{Q.4p(k,v)}}}}N{u iS=I.4U.99;R(k in 5K){v=5K[k];u d1=iS[k];if(k==\"1T\"&&H(v)==\"1n\"){Q.1T.3x=v}N{if(H(d1)==\"1n\"){Q[d1]=v}N{if(H(Q[k])==\"3n\"&&H(v)==\"3n\"){d0(Q[k],v)}N{if(k.2W(0,2)==\"on\"){if(H(v)==\"1n\"){v=Y cZ(v)}Q[k]=v}N{Q.4p(k,v)}}}}}}}F Q},9j:G(1j){u Q=1j;u I=B.S;if(H(1j)==\"1n\"){Q=I.1E(1j)}u 78=[I.9k(B.J.1R(O,M,1),Q)];u iR=B.J.2o;1M(78.K){u n=78.2P();if(H(n)==\"L\"||n===O){}N{if(H(n.3T)==\"2y\"){Q.2c(n)}N{78=iR(n,78)}}}F Q},iQ:G(1j){u Q=1j;u I=B.S;if(H(1j)==\"1n\"){Q=I.1E(1j);M[0]=Q}u cY;1M((cY=Q.6n)){Q.6S(cY)}if(M.K<2){F Q}N{F I.9j.1w(D,M)}},cX:G(1b,4b){u Q;u I=B.S;u m=B.J;if(H(4b)==\"1n\"||H(4b)==\"2y\"){u 3G=m.1R([1b,O],M,1);F M.2U.1w(D,3G)}if(H(1b)==\"1n\"){if(4b&&\"1b\"in 4b&&!I.4U.6X){1b=(\"<\"+1b+\" 1b=\\\\\"\"+I.9c(4b.1b)+\"\\\\\">\")}Q=I.1Z.2S(1b)}N{Q=1b}if(4b){I.4X(Q,4b)}if(M.K<=2){F Q}N{u 3G=m.1R([Q],M,2);F I.9j.1w(D,3G)}},cw:G(){u m=B.J;F m.2z.1w(D,m.1R([B.S.cX],M))},cs:G(5J,1d){u I=B.S;5J=I.1E(5J);u cW=5J.3t;if(1d){1d=I.1E(1d);cW.uj(1d,5J)}N{cW.6S(5J)}F 1d},1E:G(id){u I=B.S;if(M.K==1){F((H(id)==\"1n\")?I.1Z.hN(id):id)}N{F B.J.2r(I.1E,M)}},4q:G(iP,cV,cU){if(M.K==2){cU=cV}u I=B.S;u el=I.1E(iP);u 77=I.1Z;if(!el||el==77){F L}if(el.iO){F el.iO[cV]}if(H(77.5k)==\"L\"){F L}if(77.5k===O){F L}u 9i=77.5k.g4(el,O);if(H(9i)==\"L\"||9i===O){F L}F 9i.6q(cU)},aH:G(76,9g,4W){u I=B.S;if(H(76)==\"L\"||76===O){76=\"*\"}if(H(4W)==\"L\"||4W===O){4W=I.1Z}4W=I.1E(4W);u 9h=(4W.fr(76)||I.1Z.1p);if(H(9g)==\"L\"||9g===O){F B.J.1R(O,9h)}u cR=[];R(u i=0;i<9h.K;i++){u cS=9h[i];u cT=cS.3M.2R(\" \");R(u j=0;j<cT.K;j++){if(cT[j]==9g){cR.1c(cS);2K}}}F cR},iN:G(5I,9f){u W=G(){u cQ=M.2U.5H;R(u i=0;i<cQ.K;i++){if(cQ[i].1w(D,M)===1m){2K}}if(9f){1f{D[5I]=O}1e(e){}}};W.5H=[];F W},cO:G(cP,5I,1A,9f){u I=B.S;u 4V=cP[5I];u 75=4V;if(!(H(4V)==\"G\"&&H(4V.5H)==\"3n\"&&4V.5H!==O)){75=I.iN(5I,9f);if(H(4V)==\"G\"){75.5H.1c(4V)}cP[5I]=75}75.5H.1c(1A)},cN:G(1A){u I=B.S;I.cO(I.3X,\"gh\",1A,1h)},iM:G(74){u I=B.S;I.cN(G(){74=I.1E(74);if(74){74.ui()}})},5G:G(iL,cM){u I=B.S;u 1i=I.1E(iL);if(I.4U.6X){1i.4p(\"iq\",cM)}N{1i.4p(\"3M\",cM)}},iK:G(cL){u I=B.S;R(u i=1;i<M.K;i++){u 1i=I.1E(M[i]);if(!I.9d(1i,cL)){I.9e(1i,cL)}}},9d:G(iJ,73){u I=B.S;u 1i=I.1E(iJ);u 2F=1i.3M;if(2F.K===0){I.5G(1i,73);F 1h}if(2F==73){F 1m}u cK=1i.3M.2R(\" \");R(u i=0;i<cK.K;i++){if(cK[i]==73){F 1m}}I.5G(1i,2F+\" \"+73);F 1h},9e:G(iI,cJ){u I=B.S;u 1i=I.1E(iI);u 2F=1i.3M;if(2F.K===0){F 1m}if(2F==cJ){I.5G(1i,\"\");F 1h}u 72=1i.3M.2R(\" \");R(u i=0;i<72.K;i++){if(72[i]==cJ){72.4y(i,1);I.5G(1i,72.2b(\" \"));F 1h}}F 1m},iH:G(iG,iF,iE){u 1i=B.S.1E(iG);u X=B.S.9e(1i,iF);if(X){B.S.9d(1i,iE)}F X},iD:G(iC,uh){u 1i=B.S.1E(iC);u cI=1i.3M.2R(\" \");R(u i=1;i<M.K;i++){u cH=1m;R(u j=0;j<cI.K;j++){if(cI[j]==M[i]){cH=1h;2K}}if(!cH){F 1m}}F 1h},9c:G(s){F s.23(/&/g,\"&ug;\").23(/\"/g,\"&uf;\").23(/</g,\"&lt;\").23(/>/g,\"&gt;\")},iB:G(2q){F B.S.cG(2q).2b(\"\")},cG:G(2q,1g){if(H(1g)==\"L\"||1g===O){1g=[]}u 70=[2q];u I=B.S;u cB=I.9c;u iA=I.4U;1M(70.K){2q=70.hP();if(H(2q)==\"1n\"){1g.1c(2q)}N{if(2q.3T==1){1g.1c(\"<\"+2q.cD.8G());u 71=[];u cF=iA(2q);R(u i=0;i<cF.K;i++){u a=cF[i];71.1c([\" \",a.1b,\"=\\\\\"\",cB(a.3m),\"\\\\\"\"])}71.iz();R(i=0;i<71.K;i++){u cE=71[i];R(u j=0;j<cE.K;j++){1g.1c(cE[j])}}if(2q.ue()){1g.1c(\">\");70.1c(\"</\"+2q.cD.8G()+\">\");u cC=2q.5h;R(i=cC.K-1;i>=0;i--){70.1c(cC[i])}}N{1g.1c(\"/>\")}}N{if(2q.3T==3){1g.1c(cB(2q.iv))}}}}F 1g},97:G(ix,cA){u m=B.J;u iy=m.1R(O,M,1);B.15.9a(m.47(O,m.2r(B.S.1E,iy)),G(cA){cA.1T.3u=ix})},iw:G(1j,iu){u W=[];(G(1j){u cn=1j.5h;if(cn){R(u i=0;i<cn.K;i++){M.2U.cz(D,cn[i])}}u cy=1j.iv;if(H(cy)==\"1n\"){W.1c(cy)}})(B.S.1E(1j));if(iu){F W}N{F W.2b(\"\")}},2d:G(2m){u m=B.J;D.1Z=2v;D.3X=2m;D.9b=Y m.4a();u 6Z=D.1Z.2S(\"cj\");u 2T;if(6Z&&6Z.6Y&&6Z.6Y.K>0){u it=m.47;2T=G(1j){F it(2T.ir,1j.6Y)};2T.cx={};B.15.9a(6Z.6Y,G(a){2T.cx[a.1b]=a.3m});2T.ir=G(a){F(2T.cx[a.1b]!=a.3m)};2T.6X=1m;2T.99={\"iq\":\"3M\",\"ip\":\"ud\",\"uc\":\"ub\",\"R\":\"u9\"}}N{2T=G(1j){F 1j.6Y};2T.6X=1h;2T.99={}}D.4U=2T;u 1C=D.cw;D.io=1C(\"ul\");D.il=1C(\"ol\");D.ik=1C(\"li\");D.ij=1C(\"td\");D.cm=1C(\"tr\");D.ii=1C(\"u8\");D.ih=1C(\"u7\");D.ig=1C(\"u6\");D.ie=1C(\"u5\");D.ic=1C(\"th\");D.cv=1C(\"ck\");D.8d=1C(\"cj\");D.A=1C(\"a\");D.6m=1C(\"4u\");D.ib=1C(\"u4\");D.ia=1C(\"2e\");D.i9=1C(\"tt\");D.i8=1C(\"4O\");D.i7=1C(\"h1\");D.i6=1C(\"h2\");D.i5=1C(\"h3\");D.i4=1C(\"br\");D.i3=1C(\"hr\");D.i2=1C(\"u3\");D.i1=1C(\"u2\");D.cu=1C(\"u1\");D.P=1C(\"p\");D.ct=1C(\"u0\");D.i0=1C(\"hJ\");D.hZ=1C(\"tZ\");D.hY=1C(\"tY\");D.hX=1C(\"tX\");D.hW=1C(\"tW\");D.hV=1C(\"tV\");D.hU=m.2z(D.97,\"98\");D.hT=m.2z(D.97,\"8c\");D.hS=D.cs;D.$=D.1E;D.2k={\":3e\":D.1z,\":1p\":m.2o(D.1z,D.1W)};m.3f(D)}});B.S.2d(((H(2O)==\"L\")?D:2O));if(!B.3d){95=B.S.95;94=B.S.94}B.J.2Y(D,B.S);if(H(1q)!=\"L\"){1q.2X(\"B.1I\");1q.2M(\"B.1H\");1q.2M(\"B.J\")}if(H(1x)!=\"L\"){1x.26(\"B.1H\",[]);1x.26(\"B.J\",[])}1f{if(H(B.J)==\"L\"||H(B.1H)==\"L\"){14\"\"}}1e(e){14\"B.1I 3F on B.J 3W B.1H!\"}if(H(B.1I)==\"L\"){B.1I={}}B.1I.1r=\"B.1I\";B.1I.1Y=\"1.3.1\";B.1I.1K=G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"};B.1I.1l=G(){F D.1K()};B.1I.bY=G(6W){u m=B.1I;6W=!(!6W);if(m.3l&&m.3l.8Q!=6W){m.3l.hA();m.3l=O}if(!m.3l||m.3l.8P){m.3l=Y m.1I(6W,B.1H.2L)}F m.3l};B.1I.1I=G(4R,6V){if(H(6V)==\"L\"||6V===O){6V=B.1H.2L}D.2L=6V;u tU=B.J.2l;u c3=B.J.8Z;u 1O=B.J.1O;u hM=B.J.4L;u 2m=2O;u 6U=\"tT\";if(H(B.S)!=\"L\"){2m=B.S.cr()}if(!4R){u 5F=2m.tS.tR.2R(\"?\")[0].23(/[:\\\\/.><&]/g,\"hR\");u 1b=6U+\"hR\"+5F;u 5D=2m.cp(\"\",1b,\"tQ,tP,3V=hQ\");if(!5D){cq(\"tO tN to cp tM 2O tL to hP-up tK.\");F L}5D.2v.fl(\"<!tJ co tI \\\\\"-//tH//tG co 4.0 tF//tE\\\\\" \"+\"\\\\\"fq://fp.tD.fo/cm/tC/tB.tA\\\\\">\"+\"<hO><5E><8Y>[B.1I]</8Y></5E>\"+\"<5s></5s></hO>\");5D.2v.hG();5D.2v.8Y+=\" \"+2m.2v.8Y;2m=5D}u 1N=2m.2v;D.1N=1N;u 21=1N.hN(6U);u c4=!!21;if(21&&H(21.5B)!=\"L\"){21.5B.2L=D.2L;21.5B.6K();F 21.5B}if(c4){u cl;1M((cl=21.6n)){21.6S(cl)}}N{21=1N.2S(\"4u\");21.id=6U}21.5B=D;u 8T=1N.2S(\"ck\");u 8S=1N.2S(\"ck\");u 6O=1N.2S(\"2e\");u 6N=1N.2S(\"2e\");u 6M=1N.2S(\"2e\");u 6L=1N.2S(\"2e\");u 3L=1N.2S(\"4u\");u 42=1N.2S(\"4u\");u 8U=6U+\"tz\";D.8N=hM(D.8N);u 4T=[];u 6R=O;u cf=G(1t){u 6T=1t.3N;if(H(6T)==\"2y\"){6T=B.1H.5C[6T]}F 6T};u cd=G(1t){F 1t.3z.2b(\" \")};u ca=1O(G(1t){u 8W=cf(1t);u 7X=cd(1t);u c=D.8N[8W];u p=1N.2S(\"cj\");p.3M=\"B-49 B-5C-\"+8W;p.1T.3x=\"ty: 2N; 4F-8X: -hL-4O-3y; 4F-8X: -o-4O-3y; 4F-8X: 4O-3y; 4F-8X: 4O-tx; hK-3y: 2K-hK; 3y-hJ: tw; 3U: \"+c;p.2c(1N.4S(8W+\": \"+7X));42.2c(p);42.2c(1N.2S(\"br\"));if(3L.ci>3L.hI){3L.4C=0}N{3L.4C=3L.hI}},D);u hD=G(1t){4T[4T.K]=1t;ca(1t)};u hF=G(){u cg,ce;1f{cg=Y 8V(8T.3m);ce=Y 8V(8S.3m)}1e(e){ch(\"2x in 47 tv: \"+e.43);F O}F G(1t){F(cg.hH(cf(1t))&&ce.hH(cd(1t)))}};u cc=G(){1M(42.6n){42.6S(42.6n)}};u hB=G(){4T=[];cc()};u bZ=1O(G(){if(D.8P){F}D.8P=1h;if(B.1I.3l==D){B.1I.3l=O}D.2L.c9(8U);21.5B=O;if(4R){21.3t.6S(21)}N{D.2m.hG()}},D);u c7=G(){cc();R(u i=0;i<4T.K;i++){u 1t=4T[i];if(6R===O||6R(1t)){ca(1t)}}};D.6K=G(){6R=hF();c7();D.2L.c9(8U);D.2L.hE(8U,6R,hD)};u c0=1O(G(){4T=D.2L.c8();c7()},D);u c2=1O(G(6Q){6Q=6Q||2O.6D;2h=6Q.6w||6Q.8t;if(2h==13){D.6K()}},D);u 31=\"3u: 8c; z-c6: c5; 2I: 2N; 6f: 2N; 6P: tu; 5A: 3k%; he-3U: 4F; c1: \"+D.8O;if(4R){31+=\"; 3V: ts; 3E-3D: fO 8a 8y\"}N{31+=\"; 3V: 3k%;\"}21.1T.3x=31;if(!c4){1N.5s.2c(21)}31={\"3x\":\"5A: 33%; 3u: 8Q; c1: \"+D.8O};c3(8T,{\"3m\":\"8L|8M|8K|8J|8I\",\"hC\":c2,\"1T\":31});21.2c(8T);c3(8S,{\"3m\":\".*\",\"hC\":c2,\"1T\":31});21.2c(8S);31=\"5A: 8%; 3u:8Q; c1: \"+D.8O;6O.2c(1N.4S(\"tq\"));6O.8R=1O(\"6K\",D);6O.1T.3x=31;21.2c(6O);6N.2c(1N.4S(\"tp\"));6N.8R=c0;6N.1T.3x=31;21.2c(6N);6M.2c(1N.4S(\"tn\"));6M.8R=hB;6M.1T.3x=31;21.2c(6M);6L.2c(1N.4S(\"tm\"));6L.8R=bZ;6L.1T.3x=31;21.2c(6L);3L.1T.3x=\"fS: tk; 5A: 3k%\";42.1T.3x=\"5A: 3k%; 3V: \"+(4R?\"tj\":\"3k%\");3L.2c(42);21.2c(3L);D.6K();c0();if(4R){D.2m=L}N{D.2m=2m}D.8Q=4R;D.hA=bZ;D.8P=1m;F D};B.1I.1I.1U={\"8O\":\"ti tg,tf-te\",\"8N\":{\"8M\":\"1v\",\"8L\":\"gU\",\"8K\":\"1F\",\"8J\":\"8y\",\"8I\":\"bx\"}};B.1I.1W=[\"1I\"];B.1I.1z=[\"bY\"];B.1I.2d=G(){D.2k={\":3e\":D.1z,\":1p\":B.J.2o(D.1z,D.1W)};B.J.3f(D);B.1I.3l=O};B.1I.2d();B.J.2Y(D,B.1I);if(H(1q)!=\"L\"){1q.2X(\"B.V\");1q.2M(\"B.J\")}if(H(1x)!=\"L\"){1x.26(\"B.J\",[])}1f{if(H(B.J)==\"L\"){14\"\"}}1e(e){14\"B.V 3F on B.J\"}if(H(B.V)==\"L\"){B.V={}}B.V.1r=\"B.V\";B.V.1Y=\"1.3.1\";B.V.1K=G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"};B.V.1l=G(){F D.1K()};B.V.V=G(1v,hz,1F,6J){if(H(6J)==\"L\"||6J===O){6J=1}D.1B={r:1v,g:hz,b:1F,a:6J}};B.V.V.1U={bX:B.V.V,tc:G(hy){u 1B=D.1B;u m=B.V;F m.V.3Y(1B.r,1B.g,1B.b,hy)},tb:G(1o){u 1G=D.41();1G.h=1o;u m=B.V;F m.V.4H(1G)},ta:G(hx){u 1G=D.41();1G.s=hx;u m=B.V;F m.V.4H(1G)},t9:G(hw){u 1G=D.41();1G.l=hw;u m=B.V;F m.V.4H(1G)},t8:G(hv){u 1G=D.41();1G.l=28.29(1G.l-hv,0);u m=B.V;F m.V.4H(1G)},t7:G(hu){u 1G=D.41();1G.l=28.2a(1G.l+hu,1);u m=B.V;F m.V.4H(1G)},fJ:G(ht,5z){if(H(5z)==\"L\"||5z===O){5z=0.5}u sf=1-5z;u s=D.1B;u d=ht.1B;u df=5z;F B.V.V.3Y((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df))},h4:G(hs){u a=D.6r();u b=hs.6r();F B.J.2f([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a])},hq:G(){F D.41().b>0.5},t6:G(){F(!D.hq())},t5:G(){u c=D.41();u 2Z=B.V.6F;u W=D.ho;if(!W){u 5y=(2Z(c.h,bF).6I(0)+\",\"+2Z(c.s,3k).hp(4)+\"%\"+\",\"+2Z(c.l,3k).hp(4)+\"%\");u a=c.a;if(a>=1){a=1;W=\"1G(\"+5y+\")\"}N{if(a<=0){a=0}W=\"t4(\"+5y+\",\"+a+\")\"}D.ho=W}F W},hl:G(){u c=D.1B;u 2Z=B.V.6F;u W=D.hn;if(!W){u 5y=(2Z(c.r,3h).6I(0)+\",\"+2Z(c.g,3h).6I(0)+\",\"+2Z(c.b,3h).6I(0));if(c.a!=1){W=\"t3(\"+5y+\",\"+c.a+\")\"}N{W=\"1B(\"+5y+\")\"}D.hn=W}F W},6r:G(){F B.J.4L(D.1B)},t2:G(){u m=B.V;u c=D.1B;u 2Z=B.V.6F;u W=D.hm;if(!W){W=(\"#\"+m.6E(2Z(c.r,3h))+m.6E(2Z(c.g,3h))+m.6E(2Z(c.b,3h)));D.hm=W}F W},t1:G(){u 2Q=D.2Q;u c=D.1B;if(H(2Q)==\"L\"||2Q===O){2Q=B.V.bA(D.1B);D.2Q=2Q}F B.J.4L(2Q)},41:G(){u 1G=D.1G;u c=D.1B;if(H(1G)==\"L\"||1G===O){1G=B.V.bC(D.1B);D.1G=1G}F B.J.4L(1G)},1l:G(){F D.hl()},U:G(){u c=D.1B;u hk=[c.r,c.g,c.b,c.a];F D.bX.1r+\"(\"+hk.2b(\", \")+\")\"}};B.J.2l(B.V.V,{3Y:G(1v,bW,1F,8H){u hj=B.V.V;if(M.K==1){u 1B=1v;1v=1B.r;bW=1B.g;1F=1B.b;if(H(1B.a)==\"L\"){8H=L}N{8H=1B.a}}F Y hj(1v,bW,1F,8H)},4H:G(1o,t0,sZ,sY){u m=B.V;F m.V.3Y(m.bB.1w(m,M))},sX:G(1o,sW,sV,sU){u m=B.V;F m.V.3Y(m.bz.1w(m,M))},hi:G(1b){u 8F=B.V.V;if(1b.3Z(0)==\"\\\\\"\"){1b=1b.3H(1,1b.K-2)}u bV=8F.by[1b.8G()];if(H(bV)==\"1n\"){F 8F.bT(bV)}N{if(1b==\"aP\"){F 8F.sT()}}F O},8f:G(4Q){u I=B.V.V;u bU=4Q.3H(0,3);if(bU==\"1B\"){F I.h9(4Q)}N{if(bU==\"1G\"){F I.h8(4Q)}N{if(4Q.3Z(0)==\"#\"){F I.bT(4Q)}}}F I.hi(4Q)},bT:G(4P){if(4P.3Z(0)==\"#\"){4P=4P.2W(1)}u 8E=[];u i,5x;if(4P.K==3){R(i=0;i<3;i++){5x=4P.3H(i,1);8E.1c(3w(5x+5x,16)/3h)}}N{R(i=0;i<6;i+=2){5x=4P.3H(i,2);8E.1c(3w(5x,16)/3h)}}u bS=B.V.V;F bS.3Y.1w(bS,8E)},bG:G(4O,hf,hg,4N){if(4N.2A(4O)===0){4N=4N.2W(4N.2A(\"(\",3)+1,4N.K-1)}u bR=4N.2R(/\\\\s*,\\\\s*/);u bP=[];R(u i=0;i<bR.K;i++){u c=bR[i];u 2i;u bQ=c.2W(c.K-3);if(c.3Z(c.K-1)==\"%\"){2i=0.bE*4M(c.2W(0,c.K-1))}N{if(bQ==\"sS\"){2i=4M(c)/bF}N{if(bQ==\"sR\"){2i=4M(c)/(28.sQ*2)}N{2i=hg[i]*4M(c)}}}bP.1c(2i)}F D[hf].1w(D,bP)},bN:G(Q,sP,sO){u d=B.S;u 2F=B.V.V;R(Q=d.1E(Q);Q;Q=Q.3t){u bO=d.4q.1w(d,M);if(!bO){2V}u 8D=2F.8f(bO);if(!8D){2K}if(8D.6r().a>0){F 8D}}F O},ba:G(Q){u 2F=B.V.V;F 2F.bN(Q,\"aZ\",\"he-3U\")||2F.sN()},sM:G(Q){u 2F=B.V.V;F 2F.bN(Q,\"3U\",\"3U\")||2F.sL()},sK:G(){F B.J.4L(B.V.V.by)}});B.J.2l(B.V,{6F:G(v,8C){v*=8C;if(v<0){F 0}N{if(v>8C){F 8C}N{F v}}},hc:G(n1,n2,1o){if(1o>6){1o-=6}N{if(1o<0){1o+=6}}u 2i;if(1o<1){2i=n1+(n2-n1)*1o}N{if(1o<3){2i=n2}N{if(1o<4){2i=n1+(n2-n1)*(4-1o)}N{2i=n1}}}F 2i},bz:G(1o,5w,3i,bM){if(M.K==1){u 2Q=1o;1o=2Q.h;5w=2Q.s;3i=2Q.v;bM=2Q.a}u 1v;u 3K;u 1F;if(5w===0){1v=0;3K=0;1F=0}N{u i=28.8B(1o*6);u f=(1o*6)-i;u p=3i*(1-5w);u q=3i*(1-(5w*f));u t=3i*(1-(5w*(1-f)));hd(i){3j 1:1v=q;3K=3i;1F=p;2K;3j 2:1v=p;3K=3i;1F=t;2K;3j 3:1v=p;3K=q;1F=3i;2K;3j 4:1v=t;3K=p;1F=3i;2K;3j 5:1v=3i;3K=p;1F=q;2K;3j 6:3j 0:1v=3i;3K=t;1F=p;2K}}F{r:1v,g:3K,b:1F,a:bM}},bB:G(1o,5v,3v,bL){if(M.K==1){u 1G=1o;1o=1G.h;5v=1G.s;3v=1G.l;bL=1G.a}u 1v;u 8A;u 1F;if(5v===0){1v=3v;8A=3v;1F=3v}N{u m2;if(3v<=0.5){m2=3v*(1+5v)}N{m2=3v+5v-(3v*5v)}u m1=(2*3v)-m2;u f=B.V.hc;u h6=1o*6;1v=f(m1,m2,h6+2);8A=f(m1,m2,h6);1F=f(m1,m2,h6-2)}F{r:1v,g:8A,b:1F,a:bL}},bA:G(1v,4K,1F,bK){if(M.K==1){u 1B=1v;1v=1B.r;4K=1B.g;1F=1B.b;bK=1B.a}u 29=28.29(28.29(1v,4K),1F);u 2a=28.2a(28.2a(1v,4K),1F);u 1o;u 8z;u hb=29;if(2a==29){1o=0;8z=0}N{u 6H=(29-2a);8z=6H/29;if(1v==29){1o=(4K-1F)/6H}N{if(4K==29){1o=2+((1F-1v)/6H)}N{1o=4+((1v-4K)/6H)}}1o/=6;if(1o<0){1o+=1}if(1o>1){1o-=1}}F{h:1o,s:8z,v:hb,a:bK}},bC:G(1v,4J,1F,bI){if(M.K==1){u 1B=1v;1v=1B.r;4J=1B.g;1F=1B.b;bI=1B.a}u 29=28.29(1v,28.29(4J,1F));u 2a=28.2a(1v,28.2a(4J,1F));u 1o;u 6G;u bJ=(29+2a)/2;u 4I=29-2a;if(4I===0){1o=0;6G=0}N{if(bJ<=0.5){6G=4I/(29+2a)}N{6G=4I/(2-29-2a)}if(1v==29){1o=(4J-1F)/4I}N{if(4J==29){1o=2+((1F-1v)/4I)}N{1o=4+((1v-4J)/4I)}}1o/=6;if(1o<0){1o+=1}if(1o>1){1o-=1}}F{h:1o,s:6G,l:bJ,a:bI}},6E:G(1P){1P=28.ha(1P);u bH=1P.1l(16);if(1P<16){F\"0\"+bH}F bH},2d:G(){u m=B.J;D.V.h9=m.1O(D.V.bG,D.V,\"1B\",\"3Y\",[1/3h,1/3h,1/3h,1]);D.V.h8=m.1O(D.V.bG,D.V,\"1G\",\"4H\",[1/bF,0.bE,0.bE,1]);u 4G=1/3;u bD={8y:[0,0,0],1F:[0,0,1],gY:[0.6,0.4,0.2],gX:[0,1,1],sJ:[4G,4G,4G],gR:[0.5,0.5,0.5],bx:[0,1,0],sI:[2*4G,2*4G,2*4G],gN:[1,0,1],gL:[1,0.5,0],gK:[0.5,0,0.5],1v:[1,0,0],aP:[0,0,0,0],4F:[1,1,1],gI:[1,1,0]};u h7=G(1b,r,g,b,a){u W=D.3Y(r,g,b,a);D[1b]=G(){F W};F W};R(u k in bD){u 1b=k+\"V\";u h5=m.2o([h7,D.V,1b],bD[k]);D.V[1b]=m.1O.1w(O,h5)}u h0=G(){R(u i=0;i<M.K;i++){if(!(M[i]2C V)){F 1m}}F 1h};u gZ=G(a,b){F a.h4(b)};m.3f(D);m.5u(D.V.1r,h0,gZ);D.2k={\":3e\":D.1z,\":1p\":m.2o(D.1z,D.1W)}}});B.V.1z=[\"V\"];B.V.1W=[\"6F\",\"bC\",\"bB\",\"bA\",\"bz\",\"6E\"];B.V.2d();B.J.2Y(D,B.V);B.V.V.by={sH:\"#sG\",sF:\"#sE\",sD:\"#gW\",sC:\"#sB\",sA:\"#sz\",sy:\"#sx\",sw:\"#sv\",8y:\"#su\",st:\"#sr\",1F:\"#sq\",sp:\"#so\",gY:\"#sn\",sm:\"#sl\",sk:\"#sj\",si:\"#sh\",sg:\"#se\",sd:\"#sc\",sb:\"#sa\",s9:\"#s8\",s7:\"#s6\",gX:\"#gW\",s5:\"#s4\",s3:\"#s2\",s1:\"#s0\",rZ:\"#gV\",rY:\"#rX\",rW:\"#gV\",rV:\"#rU\",rT:\"#rS\",rR:\"#rQ\",rP:\"#rO\",rN:\"#rM\",gU:\"#rL\",rK:\"#rJ\",rI:\"#rH\",rG:\"#rF\",rE:\"#gT\",rD:\"#gT\",rC:\"#rB\",rA:\"#rz\",ry:\"#rx\",rw:\"#rv\",ru:\"#gS\",rt:\"#gS\",rs:\"#rr\",rq:\"#rp\",ro:\"#rn\",rm:\"#rl\",rk:\"#gM\",rj:\"#ri\",rh:\"#rg\",rf:\"#rd\",rc:\"#rb\",gR:\"#gQ\",bx:\"#ra\",r9:\"#r8\",r7:\"#gQ\",r6:\"#r5\",r4:\"#r3\",r2:\"#r1\",r0:\"#qZ\",qY:\"#qX\",qW:\"#qV\",qU:\"#qT\",qS:\"#qR\",qQ:\"#qP\",qO:\"#qN\",qM:\"#qL\",qK:\"#qJ\",qI:\"#qH\",qG:\"#qF\",qE:\"#gP\",qD:\"#qC\",qB:\"#gP\",qA:\"#qz\",qy:\"#qx\",qw:\"#qv\",qu:\"#qt\",qr:\"#gO\",qq:\"#gO\",qp:\"#qo\",qn:\"#qm\",ql:\"#qk\",qj:\"#qi\",qh:\"#qg\",gN:\"#gM\",qf:\"#qe\",qd:\"#qc\",qb:\"#qa\",q9:\"#q8\",q7:\"#q6\",q5:\"#q4\",q3:\"#q2\",q1:\"#q0\",pZ:\"#pY\",pX:\"#pW\",pV:\"#pU\",pT:\"#pS\",pR:\"#pQ\",pP:\"#pO\",pN:\"#pM\",pL:\"#pK\",pJ:\"#pI\",pH:\"#pG\",pF:\"#pE\",gL:\"#pD\",pC:\"#pB\",pA:\"#pz\",py:\"#pw\",pv:\"#pu\",pt:\"#ps\",pr:\"#pq\",pp:\"#po\",pn:\"#pm\",pl:\"#pj\",pi:\"#ph\",pg:\"#pf\",pe:\"#pd\",gK:\"#pc\",1v:\"#pb\",pa:\"#p9\",p8:\"#p7\",p6:\"#p5\",p4:\"#p3\",p2:\"#p1\",p0:\"#oZ\",oY:\"#oX\",oW:\"#oV\",oU:\"#oT\",oS:\"#oR\",oQ:\"#oP\",oO:\"#gJ\",oN:\"#gJ\",oM:\"#oL\",oK:\"#oJ\",oI:\"#oH\",oG:\"#oF\",oE:\"#oD\",oC:\"#oB\",oA:\"#oz\",oy:\"#ox\",ow:\"#ov\",ou:\"#ot\",4F:\"#os\",oq:\"#op\",gI:\"#oo\",om:\"#ok\"};if(H(1q)!=\"L\"){1q.2X(\"B.1u\");1q.2M(\"B.J\");1q.2M(\"B.S\")}if(H(1x)!=\"L\"){1x.26(\"B.J\",[]);1x.26(\"B.S\",[])}1f{if(H(B.J)==\"L\"){14\"\"}}1e(e){14\"B.1u 3F on B.J!\"}1f{if(H(B.S)==\"L\"){14\"\"}}1e(e){14\"B.1u 3F on B.S!\"}if(H(B.1u)==\"L\"){B.1u={}}B.1u.1r=\"B.1u\";B.1u.1Y=\"1.3.1\";B.1u.4x=[];B.1u.bq=G(1d,e){D.1L=e||2O.6D;D.gH=1d};B.J.2l(B.1u.bq.1U,{1K:G(){u U=B.J.U;u 1y=\"{6D(): \"+U(D.6D())+\", 1d(): \"+U(D.1d())+\", 1J(): \"+U(D.1J())+\", 8x(): \"+U(D.8x())+\", 4E(): \"+\"{8w: \"+U(D.4E().8w)+\", 8v: \"+U(D.4E().8v)+\", 8u: \"+U(D.4E().8u)+\", 2P: \"+U(D.4E().2P)+\", bw: \"+U(D.4E().bw)+\"}\";if(D.1J()&&D.1J().2A(\"2h\")===0){1y+=\", 2h(): {3J: \"+U(D.2h().3J)+\", 1n: \"+U(D.2h().1n)+\"}\"}if(D.1J()&&(D.1J().2A(\"3I\")===0||D.1J().2A(\"gE\")!=-1||D.1J()==\"gD\")){1y+=\", 3I(): {4D: \"+U(D.3I().4D)+\", 6A: \"+U(D.3I().6A);if(D.1J()!=\"gC\"){1y+=\", 2e: {2I: \"+U(D.3I().2e.2I)+\", 6v: \"+U(D.3I().2e.6v)+\", 3g: \"+U(D.3I().2e.3g)+\"}}\"}N{1y+=\"}\"}}if(D.1J()==\"gG\"||D.1J()==\"gF\"){1y+=\", 6C(): \"+U(D.6C())}1y+=\"}\";F 1y},1l:G(){F D.1K()},1d:G(){F D.gH},6D:G(){F D.1L},1J:G(){F D.1L.1J||L},8x:G(){F D.1L.8x||D.1L.oj},6C:G(){if(D.1J()==\"gG\"){F(D.1L.6C||D.1L.aW)}N{if(D.1J()==\"gF\"){F(D.1L.6C||D.1L.oi)}}F L},4E:G(){u m={};m.8w=D.1L.oh;m.8v=D.1L.og;m.8u=D.1L.oe||1m;m.2P=D.1L.od;m.bw=m.8w||m.8v||m.2P||m.8u;F m},2h:G(){u k={};if(D.1J()&&D.1J().2A(\"2h\")===0){if(D.1J()==\"oc\"||D.1J()==\"ob\"){k.3J=D.1L.8t;k.1n=(B.1u.5r[k.3J]||\"oa\");F k}N{if(D.1J()==\"o9\"){k.3J=0;k.1n=\"\";if(H(D.1L.6B)!=\"L\"&&D.1L.6B!==0&&!B.1u.bv[D.1L.6B]){k.3J=D.1L.6B;k.1n=bu.bt(k.3J)}N{if(D.1L.8t&&H(D.1L.6B)==\"L\"){k.3J=D.1L.8t;k.1n=bu.bt(k.3J)}}F k}}}F L},3I:G(){u m={};u e=D.1L;if(D.1J()&&(D.1J().2A(\"3I\")===0||D.1J().2A(\"gE\")!=-1||D.1J()==\"gD\")){m.6A=Y B.S.5t(0,0);if(e.6z||e.6x){m.6A.x=(!e.6z||e.6z<0)?0:e.6z;m.6A.y=(!e.6x||e.6x<0)?0:e.6x}m.4D=Y B.S.5t(0,0);if(e.8s||e.8r){m.4D.x=(!e.8s||e.8s<0)?0:e.8s;m.4D.y=(!e.8r||e.8r<0)?0:e.8r}N{u de=B.S.1Z.7Z;u b=B.S.1Z.5s;m.4D.x=e.6z+(de.6y||b.6y)-(de.8q||b.8q);m.4D.y=e.6x+(de.4C||b.4C)-(de.8p||b.8p)}if(D.1J()!=\"gC\"){m.2e={};m.2e.2I=1m;m.2e.3g=1m;m.2e.6v=1m;if(e.6w){m.2e.2I=(e.6w==1);m.2e.6v=(e.6w==2);m.2e.3g=(e.6w==3)}N{m.2e.2I=!!(e.2e&1);m.2e.3g=!!(e.2e&2);m.2e.6v=!!(e.2e&4)}}F m}F L},2J:G(){D.8o();D.8n()},8o:G(){if(D.1L.8o){D.1L.8o()}N{D.1L.o8=1h}},8n:G(){if(D.1L.8n){D.1L.8n()}N{D.1L.o7=1m}}});B.1u.bv={3:\"gz\",o6:\"gA\",o5:\"gy\",o4:\"gx\",o3:\"gw\",o2:\"gv\",o1:\"gu\",o0:\"gs\",nZ:\"gr\",nY:\"gq\",nX:\"gp\",nW:\"go\"};R(i=gB;i<=nV;i++){B.1u.bv[i]=\"gk\"+(i-gB+1)}B.1u.5r={8:\"nU\",9:\"nT\",12:\"gA\",13:\"gz\",16:\"nS\",17:\"nR\",18:\"nQ\",19:\"nP\",20:\"nO\",27:\"nN\",32:\"nM\",33:\"gy\",34:\"gx\",35:\"gw\",36:\"gv\",37:\"gu\",38:\"gs\",39:\"gr\",40:\"gq\",44:\"nL\",45:\"gp\",46:\"go\",59:\"gn\",91:\"nK\",92:\"nJ\",93:\"nI\",nH:\"nG\",nF:\"nE\",nD:\"nC-gm\",nB:\"nA\",nz:\"ny\",nx:\"nw\",nv:\"nu\",nt:\"gn\",ns:\"nr\",nq:\"np\",nn:\"nm-gm\",nl:\"nk\",nj:\"ni\",nh:\"ng\",nf:\"nd\",nc:\"nb\",na:\"n9\",n8:\"n7\"};R(u i=48;i<=57;i++){B.1u.5r[i]=\"gl\"+(i-48)}R(i=65;i<=90;i++){B.1u.5r[i]=\"gl\"+bu.bt(i)}R(i=96;i<=n6;i++){B.1u.5r[i]=\"n5\"+(i-96)}R(i=gj;i<=n4;i++){B.1u.5r[i]=\"gk\"+(i-gj+1)}B.J.2l(B.1u,{1K:G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"},1l:G(){F D.1K()},g7:G(){u I=B.1u;u bs=I.4x;R(u i=0;i<bs.K;i++){I.6t(bs[i])}gi I.4x;1f{2O.gh=L}1e(e){}1f{2O.g8=L}1e(e){}},gb:G(1d,1A,1i,gg){u E=B.1u.bq;if(!gg){F B.J.1O(1A,1i)}1i=1i||1d;if(H(1A)==\"1n\"){F G(gf){1i[1A].1w(1i,[Y E(1d,gf)])}}N{F G(gd){1A.1w(1i,[Y E(1d,gd)])}}},6s:G(1d,2D,5q,4B){1d=B.S.1E(1d);u I=B.1u;if(H(2D)!=\"1n\"){14 Y 2x(\"\\'2D\\' 5p be a 1n\")}u 1i=O;u 1A=O;if(H(4B)!=\"L\"){1i=5q;1A=4B;if(H(4B)==\"1n\"){if(H(5q[4B])!=\"G\"){14 Y 2x(\"\\'bp\\' 5p be a G on \\'gc\\'\")}}N{if(H(4B)!=\"G\"){14 Y 2x(\"\\'bp\\' 5p be a G or 1n\")}}}N{if(H(5q)!=\"G\"){14 Y 2x(\"\\'gc\\' 5p be a G if \\'bp\\' is 2E n3\")}N{1A=5q}}if(H(1i)==\"L\"||1i===O){1i=1d}u bm=!!(1d.bo||1d.bn);u 8m=I.gb(1d,1A,1i,bm);if(1d.bo){1d.bo(2D.3H(2),8m,1m)}N{if(1d.bn){1d.bn(2D,8m)}}u bk=[1d,2D,8m,bm,5q,4B];I.4x.1c(bk);F bk},6t:G(6u){if(!6u[3]){F}u 1d=6u[0];u 2D=6u[1];u bj=6u[2];if(1d.ga){1d.ga(2D.3H(2),bj,1m)}N{if(1d.g9){1d.g9(2D,bj)}N{14 Y 2x(\"\\'1d\\' 5p be a S n0\")}}},8j:G(bh){u I=B.1u;u 5o=I.4x;u m=B.J;if(M.K>1){u 1d=B.S.1E(M[0]);u 2D=M[1];u 1i=M[2];u 1A=M[3];R(u i=5o.K-1;i>=0;i--){u o=5o[i];if(o[0]===1d&&o[1]===2D&&o[4]===1i&&o[5]===1A){I.6t(o);5o.4y(i,1);F 1h}}}N{u 5n=m.bi(5o,bh);if(5n>=0){I.6t(bh);5o.4y(5n,1);F 1h}}F 1m},8i:G(1d,2D){1d=B.S.1E(1d);u m=B.J;u 8l=m.bg(m.1R(O,M,1));u I=B.1u;u bd=I.6t;u 4z=I.4x;if(8l.K===0){R(u i=4z.K-1;i>=0;i--){u 4A=4z[i];if(4A[0]===1d){bd(4A);4z.4y(i,1)}}}N{u bf={};R(u i=0;i<8l.K;i++){bf[8l[i]]=1h}R(u i=4z.K-1;i>=0;i--){u 4A=4z[i];if(4A[0]===1d&&4A[1]in bf){bd(4A);4z.4y(i,1)}}}},8h:G(1d,2D){u bc=B.1u.4x;1d=B.S.1E(1d);u 3G=B.J.1R(O,M,2);u 5m=[];R(u i=0;i<bc.K;i++){u 8k=bc[i];if(8k[0]===1d&&8k[1]===2D){1f{8k[2].1w(1d,3G)}1e(e){5m.1c(e)}}}if(5m.K==1){14 5m[0]}N{if(5m.K>1){u e=Y 2x(\"mZ bb mY in mX \\'2D\\', mW bb mV\");e.bb=5m;14 e}}}});B.1u.1W=[];B.1u.1z=[\"6s\",\"8j\",\"8h\",\"8i\"];B.1u.2d=G(2m){u m=B.J;D.1Z=2v;D.3X=2m;1f{D.6s(2O,\"g8\",D.g7)}1e(e){}D.2k={\":3e\":D.1z,\":1p\":m.2o(D.1z,D.1W)};m.3f(D)};B.1u.2d(D);if(!B.3d){6s=B.1u.6s;8j=B.1u.8j;8i=B.1u.8i;8h=B.1u.8h}B.J.2Y(D,B.1u);if(H(1q)!=\"L\"){1q.2X(\"B.1X\");1q.2M(\"B.J\");1q.2M(\"B.S\");1q.2M(\"B.V\")}if(H(1x)!=\"L\"){1x.26(\"B.J\",[]);1x.26(\"B.S\",[]);1x.26(\"B.V\",[])}1f{if(H(B.J)==\"L\"||H(B.S)==\"L\"||H(B.V)==\"L\"){14\"\"}}1e(e){14\"B.1X 3F on B.J, B.S 3W B.V!\"}if(H(B.1X)==\"L\"){B.1X={}}B.1X.1r=\"B.1X\";B.1X.1Y=\"1.3.1\";B.1X.1K=G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"};B.1X.1l=G(){F D.1K()};B.1X.aI=G(e,g6){e=B.S.1E(e);D.fN(g6);if(D.1S.fL){e=D.g5(e)}u 4w=D.1S.3U;u C=B.V.V;if(D.1S.3U==\"aW\"){4w=C.ba(e)}N{if(!(4w 2C C)){4w=C.8f(4w)}}D.82=(4w.6r().a<=0);u 5l=D.1S.aV;if(D.1S.aV==\"fM\"){5l=C.ba(e.8g)}N{if(!(5l 2C C)){5l=C.8f(5l)}}D.g3(e,4w,5l)};B.1X.aI.1U={g5:G(e){u mU=e.3t;u 1N=B.S.b9();if(H(1N.5k)==\"L\"||1N.5k===O){F e}u 4v=1N.5k.g4(e,O);if(H(4v)==\"L\"||4v===O){F e}u b8=B.S.6m({\"1T\":{3u:\"8c\",mT:4v.6q(\"6p-3D\"),85:4v.6q(\"6p-3g\"),mS:4v.6q(\"6p-6f\"),86:4v.6q(\"6p-2I\"),6p:\"2N\"}});b8.6o=e.6o;e.6o=\"\";e.2c(b8);F e},g3:G(e,b7,8e){if(D.1S.3E){D.g2(e,8e)}if(D.fy()){D.fX(e,b7,8e)}if(D.fx()){D.fV(e,b7,8e)}},g2:G(el,g1){u b6=\"6l 8a \"+D.aQ(g1);u g0=\"3E-2I: \"+b6;u fZ=\"3E-3g: \"+b6;u fY=\"1T=\\'\"+g0+\";\"+fZ+\"\\'\";el.6o=\"<4u \"+fY+\">\"+el.6o+\"</4u>\"},fX:G(el,fW,b5){u b4=D.b1(b5);R(u i=0;i<D.1S.89;i++){b4.2c(D.b0(fW,b5,i,\"3D\"))}el.1T.mR=0;el.mQ(b4,el.6n)},fV:G(el,fU,b3){u b2=D.b1(b3);R(u i=(D.1S.89-1);i>=0;i--){b2.2c(D.b0(fU,b3,i,\"6f\"))}el.1T.mP=0;el.2c(b2)},b1:G(fT){u 2q=B.S;F 2q.6m({1T:{aZ:fT.1l()}})},b0:G(aY,fQ,n,aX){u 6k=B.S.8d();u 2p=6k.1T;2p.aZ=aY.1l();2p.3u=\"8c\";2p.3V=\"6l\";2p.fS=\"fR\";2p.mO=\"6l\";u 8b=D.aQ(aY,fQ);if(D.1S.3E&&n===0){2p.mN=\"8a\";2p.mM=\"6l\";2p.84=\"2N\";2p.83=\"2N\";2p.mL=\"2N\";2p.3V=\"2N\";2p.fP=8b.1l()}N{if(8b){2p.fP=8b.1l();2p.mK=\"8a\";2p.mJ=\"2N 6l\"}}if(!D.1S.4r&&(n==(D.1S.89-1))){2p.3V=\"fO\"}D.fI(6k,n,aX);D.fG(6k,n,aX);F 6k},fN:G(fK){D.1S={6g:\"1p\",3U:\"aW\",aV:\"fM\",5j:1h,3E:1m,4r:1m,fL:1m};B.J.2l(D.1S,fK);D.1S.89=(D.1S.4r?2:4)},aL:G(){u 88=D.1S.6g;if(D.6h(88,\"1p\",\"3D\")){F\"\"}u aU=(88.2A(\"tl\")!=-1);u aT=(88.2A(\"tr\")!=-1);if(aU&&aT){F\"\"}if(aU){F\"2I\"}if(aT){F\"3g\"}F\"\"},aK:G(){u 87=D.1S.6g;if(D.6h(87,\"1p\",\"6f\")){F\"\"}u aS=(87.2A(\"bl\")!=-1);u aR=(87.2A(\"br\")!=-1);if(aS&&aR){F\"\"}if(aS){F\"2I\"}if(aR){F\"3g\"}F\"\"},aQ:G(aN,aO){if(aN==\"aP\"){F aO}N{if(D.1S.3E){F D.1S.3E}N{if(D.1S.5j){F aO.fJ(aN)}}}F\"\"},fI:G(el,n,fH){u 6j=D.fE(n)+\"px\";u aM=(fH==\"3D\"?D.aL():D.aK());u 4t=el.1T;if(aM==\"2I\"){4t.86=6j;4t.85=\"2N\"}N{if(aM==\"3g\"){4t.85=6j;4t.86=\"2N\"}N{4t.86=6j;4t.85=6j}}},fG:G(el,n,fF){u 6i=D.fz(n)+\"px\";u aJ=(fF==\"3D\"?D.aL():D.aK());u 4s=el.1T;if(aJ==\"2I\"){4s.84=6i;4s.83=\"2N\"}N{if(aJ==\"3g\"){4s.83=6i;4s.84=\"2N\"}N{4s.84=6i;4s.83=6i}}},fE:G(n){if(D.82){F 0}u o=D.1S;if(o.4r&&o.5j){u fD=[1,0];F fD[n]}N{if(o.4r){u fC=[2,1];F fC[n]}N{if(o.5j){u fB=[3,2,1,0];F fB[n]}N{u fA=[5,3,2,1];F fA[n]}}}},fz:G(n){u o=D.1S;u 5i;if(o.4r&&(o.5j||D.82)){F 1}N{if(o.4r){5i=[1,0]}N{if(o.5j){5i=[2,1,1,1]}N{if(o.3E){5i=[0,2,0,0]}N{if(D.82){5i=[5,3,2,1]}N{F 0}}}}}F 5i[n]},6h:G(1y){R(u i=1;i<M.K;i++){if(1y.2A(M[i])!=-1){F 1h}}F 1m},fy:G(){F D.6h(D.1S.6g,\"1p\",\"3D\",\"tl\",\"tr\")},fx:G(){F D.6h(D.1S.6g,\"1p\",\"6f\",\"bl\",\"br\")},mI:G(el){F(el.5h.K==1&&el.5h[0].3T==3)}};B.1X.aF=G(e,fw){Y B.1X.aI(e,fw)};B.1X.fs=G(fv,fu,ft){u aG=B.S.aH(fv,fu);R(u i=0;i<aG.K;i++){B.1X.aF(aG[i],ft)}};B.1X.V=B.V.V;B.1X.mH=B.S.4q;B.1X.2d=G(){u m=B.J;m.3f(D);D.2k={\":3e\":D.1z,\":1p\":m.2o(D.1z,D.1W)}};B.1X.1z=[\"aF\",\"fs\"];B.1X.1W=[];B.1X.2d();B.J.2Y(D,B.1X);if(H(B)==\"L\"){B={}}if(H(B.B)==\"L\"){B.B={}}B.B.1r=\"B.B\";B.B.1Y=\"1.3.1\";B.B.1K=G(){F\"[\"+D.1r+\" \"+D.1Y+\"]\"};B.B.1l=G(){F D.1K()};B.B.aA=[\"J\",\"15\",\"1H\",\"1D\",\"1s\",\"1k\",\"S\",\"1I\",\"V\",\"1u\",\"1X\"];if(H(1x)!=\"L\"||H(1q)!=\"L\"){if(H(1q)!=\"L\"){1q.2X(\"B.B\");1q.2M(\"B.*\")}if(H(1x)!=\"L\"){1x.26(\"B.J\",[]);1x.26(\"B.15\",[]);1x.26(\"B.1H\",[]);1x.26(\"B.1D\",[]);1x.26(\"B.1s\",[]);1x.26(\"B.1k\",[]);1x.26(\"B.S\",[]);1x.26(\"B.1I\",[]);1x.26(\"B.V\",[]);1x.26(\"B.1u\",[]);1x.26(\"B.1X\",[])}(G(){u 6e=B.J.1R;u I=B.B;u aE=I.aA;u aD=[];u aC=[];u 81={};u i,k,m,1p;R(i=0;i<aE.K;i++){m=B[aE[i]];6e(aD,m.1z);6e(aC,m.1W);R(k in m.2k){81[k]=6e(81[k],m.2k[k])}1p=m.2k[\":1p\"];if(!1p){1p=6e(O,m.1z,m.1W)}u j;R(j=0;j<1p.K;j++){k=1p[j];I[k]=m[k]}}I.1z=aD;I.1W=aC;I.2k=81}())}N{if(H(B.3d)==\"L\"){B.3d=1h}(G(){u 80=2v.fr(\"7W\");u ay=\"fq://fp.mG.fo/mF/mE/mD.is.aB.mC\";u 2w=O;u ax=O;u az={};u i;R(i=0;i<80.K;i++){u 1d=80[i].fm(\"1d\");if(!1d){2V}az[1d]=1h;if(1d.3C(/B.js$/)){2w=1d.2W(0,1d.mB(\"B.js\"));ax=80[i]}}if(2w===O){F}u 6d=B.B.aA;R(u i=0;i<6d.K;i++){if(B[6d[i]]){2V}u 7Y=2w+6d[i]+\".js\";if(7Y in az){2V}if(2v.7Z&&2v.7Z.mA==ay){u s=2v.mz(ay,\"7W\");s.4p(\"id\",\"my\"+2w+6d[i]);s.4p(\"1d\",7Y);s.4p(\"1J\",\"mx/x-fk\");ax.3t.2c(s)}N{2v.fl(\"<7W 1d=\\\\\"\"+7Y+\"\\\\\" 1J=\\\\\"7X/fk\\\\\"></7W>\")}}})()}',62,1976,'||||||||||||||||||||||||||||||var|||||||MochiKit||this||return|function|typeof|self|Base|length|undefined|arguments|else|null||elem|for|DOM||repr|Color|rval|res|new||||||throw|Iter|||||next|name|push|src|catch|try|lst|true|obj|node|Async|toString|false|string|hue|all|dojo|NAME|Format|msg|Signal|red|apply|JSAN|str|EXPORT|func|rgb|_425|DateTime|getElement|blue|hsl|Logging|LoggingPane|type|__repr__|_event|while|doc|bind|num|iter|extend|options|style|prototype|seq|EXPORT_OK|Visual|VERSION|_document||_434||replace|forwardCall|StopIteration|use||Math|max|min|join|appendChild|__new__|button|compare|date|key|val|_329|EXPORT_TAGS|update|win|pair|concat|_596|dom|map|req|Deferred|sync|document|base|Error|number|partial|indexOf||instanceof|sig|not|cls|list|fired|left|stop|break|logger|require|0px|window|shift|hsv|split|createElement|_423|callee|continue|substring|provide|_exportSymbols|ccc||_464|||||||||step|pred|_51|__compat__|common|nameFunctions|right|255|_517|case|100|_loggingPane|value|object|callback|TypeError|_251|_246|_113|parentNode|display|_522|parseInt|cssText|wrap|info|isArrayLike|end|match|top|border|depends|args|substr|mouse|code|_519|_443|className|level|err|frac|Date|_135|_85|nodeType|color|height|and|_window|fromRGB|charAt||asHSL|_444|message||||filter||LogMessage|AdapterRegistry|_366|imap|NotFound|locked|counter|_262|_messages|operator|cmp|_165|_161|pairs|arr|_52|setAttribute|computedStyle|compact|_614|_610|div|_576|_572|_observers|splice|_565|_566|_555|scrollTop|page|modifier|white|_541|fromHSL|_539|_535|_528|clone|parseFloat|_505|pre|_499|_497|_427|createTextNode|_446|attributeArray|_388|_379|updateNodeAttributes|_341|_326||box|errback|results|paused|chain|_285||ofs||NamedError|_175|_147|_122|_83|_54|_17|childNodes|_619|blend|defaultView|_574|_569|idx|_562|must|_554|_specialKeys|body|Coordinates|registerComparator|_521|_516|hex|mid|_478|width|loggingPane|LogLevel|nwin|head|url|setElementClass|callStack|path|dest|_359|boolean|register|Dimensions|DeferredLock|_313|addCallback|_310|waiting|onreadystatechange|_290|LOCALE|year|printfire|_214|log|_213|_211|pos|_155|_153||typeMatcher|listMinMax|_114|_40|itr|typ|_19|_634|_625|bottom|corners|_hasString|_612|_608|_595|1px|DIV|firstChild|innerHTML|padding|getPropertyValue|asRGB|connect|_disconnect|_559|middle|which|clientY|scrollLeft|clientX|client|charCode|relatedTarget|event|toColorPart|clampColorComponent|_537|_534|toFixed|_468|buildAndApplyFilter|_442|_441|_440|_439|position|_463|_447|removeChild|_449|uid|_428|_426|compliant|attributes|_422|_409|_412|_400|_395|_390|_389|_377|_375|_363|attr|ctx|repeat|_340|_339|isNotEmpty|_335|_333|opera|DeferredList|ret|_309|silentlyCancelled|canceller|_nextId|Array|_293|XMLHttpRequest|chained|_281|tail|_252|_225|msec|day|month|iso|Logger|_208|listeners|_200|_198|_194|_196|reduce|range|_169|_162|truth|registerRepr|_121|_70|_58|_56|_47|_45|_41|_13|_1|script|text|uri|documentElement|_630|_629|isTransparent|borderRightWidth|borderLeftWidth|marginRight|marginLeft|_602|_599|numSlices|solid|_597|block|SPAN|_579|fromString|offsetParent|signal|disconnectAll|disconnect|_570|_563|_557|preventDefault|stopPropagation|clientTop|clientLeft|pageY|pageX|keyCode|meta|ctrl|alt|target|black|_532|_524|floor|_513|_512|_500|_495|toLowerCase|_487|DEBUG|INFO|WARNING|FATAL|ERROR|colorTable|logFont|closed|inline|onclick|_438|_437|_445|RegExp|_452|space|title|updatetree|||||withDocument|withWindow||setDisplayForElement|none|renames|forEach|domConverters|escapeHTML|addElementClass|removeElementClass|once|_378|_380|_376|appendChildNodes|coerceToDOM|_355|opt|clientWidth|opacity|GenericError|fail|resultList|_307|_301|_fire|can|addCallbacks|_resback|percent|decimal|separator|twoDigitFloat|_274|_273|_264|_257|_250|_249|_254|_248|_243|_242|fmt|_240|_245|getTime|sec|hour|_209|slice|_206|iterateNextIter|registerIteratorFactory|arrayLikeIter|iteratorRegistry|takewhile|ifilterfalse|ifilter|_181|_176|_168|_166|_159|_tee|deque|arg|fun|jsonRegistry|reprString|reprRegistry|comparatorRegistry|urlEncode|_110|_108|cur|_95|_87|_71|im_preargs||_53|_57|_46|present|like|array|Argument|_15|_12|_632|_631|_633|SUBMODULES|only|_628|_627|_626|roundElement|_624|getElementsByTagAndClassName|_RoundCorners|_613|_whichSideBottom|_whichSideTop|_609|_605|_606|transparent|_borderColor|_604|_603|_601|_600|bgColor|fromElement|_594|_592|backgroundColor|_createCornerSlice|_createCorner|_590|_589|_587|_586|_581|_578|_577|currentDocument|fromBackground|errors|_568|_564||sigs|flattenArguments|_561|findIdentical|_560|_558||_556|attachEvent|addEventListener|funcOrStr|Event||_548|fromCharCode|String|_specialMacKeys|any|green|_namedColors|hsvToRGB|rgbToHSV|hslToRGB|rgbToHSL|_542|01|360|_fromColorString|_540|_536|_538|_529|_523|_518|fromComputedStyle|_511|_507|_508|_506|_501|fromHexString|_498|_496|_486|__class__|createLoggingPane|_459|_461|font|_462|_430|_435|1000|index|_460|getMessages|removeListener|_451||_457|_450|infore|_448|_456|logDebug|offsetHeight|span|input|_436|TR||HTML|open|alert|currentWindow|swapDOM|SELECT|FORM|INPUT|createDOMFunc|ignoreAttr|_421|call|_417|_410|_415|nodeName|_414|_413|emitHTML|good|_406|_399|_397|_393|_392|addLoadEvent|addToCallStack|_387|_386|_381|_382|_383|_373|_372|_369|createDOM|_365|Function|_360|_362|_358|_344|nodeWalk|formContents|_337|_338|_334|_332|offsetTop|offsetLeft|visibility|parentElement|||XMLHttpRequestError|BrowserComplianceError|CancelledError|AlreadyCalledError|evalJSONRequest|sendXMLHttpRequest|wait|doSimpleXMLHttpRequest|getXMLHttpRequest|succeed|_312|finishedCount|_308|_cbDeferred|_303|_297|queryString|_nothing|_289|XMLHTTP|ActiveXObject|eval|_284|_check|error|_279|default|rstrip|lstrip|formatLocale|roundToFixed|truncToFixed|_276|pow|_272|_271|_270|sign|_265|_263|tmp|_238|_232|toISODate|toISOTime|getFullYear|getDate|getMonth|_230|_padTwo|_228|useNativeConsole|_212|compareLogMessage|isLogMessage|unshift|_207||maxSize|_202|_199|logLevelAtLeast|console|hasIterateNext|iterateNext|arrayLike|groupby||exhaust|tee|dropwhile|applymap||islice|izip|cycle|count||_189|_188|_183|_185|_184|_186|_187|_182|identity|fetch|_180|_177|listMin|reprNumber|reprArrayLike|compareArrayLike|compareDateLike|isDateLike|findValue|_128|__export__|keyComparator|_124|_118|_93|_94|_90|_88|_84|_77|_68|_67|_66|_65|_60|im_func|_55|im_self|_48|_44|_42|_39|_36|_33|_27|_26|_25|_22|_24|_20|javascript|write|getAttribute||org|www|http|getElementsByTagName|roundClass|_623|_622|_621|_620|_isBottomRounded|_isTopRounded|_borderSize|_618|_617|_616|_615|_marginSize|_611|_setBorder|_607|_setMargin|blendedColor|_598|__unstable__wrapElement|fromParent|_setOptions|2px|borderColor|_593|hidden|overflow|_591|_588|_roundBottomCorners|_585|_roundTopCorners|_584|_583|_582|_580|_renderBorder|_roundCornersImpl|getComputedStyle|_doWrap|_571|_unloadCache|onunload|detachEvent|removeEventListener|_listener|objOrFunc|_552||_551|_549|onload|delete|112|KEY_F|KEY_|MINUS|KEY_SEMICOLON|KEY_DELETE|KEY_INSERT|KEY_ARROW_DOWN|KEY_ARROW_RIGHT|KEY_ARROW_UP||KEY_ARROW_LEFT|KEY_HOME|KEY_END|KEY_PAGE_DOWN|KEY_PAGE_UP|KEY_ENTER|KEY_NUM_PAD_CLEAR|63236|mousemove|contextmenu|click|mouseout|mouseover|_src|yellow|708090|purple|orange|ff00ff|magenta|778899|d3d3d3|808080|gray|696969|2f4f4f|darkred|a9a9a9|00ffff|cyan|brown|_547|_546||||compareRGB|_545||_543|fromHSLString|fromRGBString|round|_533|_hslValue|switch|background|_503|_504||fromName|_488|col|toRGBString|_hexString|_rgbString|_hslString|toPrecision|isLight||_481|_477|_476|_475|_474|_473|_469|_466|closePane|_458|onkeypress|_454|addListener|_455|close|test|scrollHeight|option|word|moz|_431|getElementById|html|pop|200|_|removeElement|showElement|hideElement|CANVAS|STRONG|FIELDSET|LEGEND|OPTGROUP|OPTION|TEXTAREA|LABEL|HR|BR|H3|H2|H1|PRE|TT|BUTTON|IMG|TH||TABLE||TFOOT|THEAD|TBODY|TD|LI|OL|||UL|checked|class|ignoreAttrFilter||_424|_419|nodeValue|scrapeText|_416|_418|sort|_411|toHTML|_404|hasElementClass|_403|_402|_401|swapElementClass|_398|_394|toggleElementClass|_391|focusOnLoad|_newCallStack|currentStyle|_371|replaceChildNodes|_364|_361|getNodeAttribute|_357|setNodeAttribute|_354|_352|_350|_353|toDOM|_346|_345|registerDOMConverter|selectedIndex|setElementPosition|setElementDimensions|tagName|absolute|getBoxObjectFor|getBoundingClientRect|elementPosition|_325|_324|_322|_323|offsetWidth|elementDimensions|clientHeight|innerWidth|getViewportDimensions|setOpacity|status|_317|deferred|_316|_newNamedError|maybeDeferred||gatherResults|callLater|loadJSONDoc|_311|consumeErrors|fireOnOneErrback|fireOnOneCallback|addErrback|_305|_304|_306|unlocked|release|_300|_299|_298|_296|_xhr_onreadystatechange|_xhr_canceller|304|responseText|Msxml2|addBoth|_pause|_continue|result|the|are|they|instances|_unpause|cancel|_280|_278|en_US|strip|percentFormat|twoDigitAverage|numberFormatter|_277|_275|isNaN|_259|_258|_260|_255|_253|_numberFormatter|_241|_239|_237|_236|_235|_234|_233|_231|toAmericanDate|toPaddedAmericanDate|americanDate|toISOTimestamp|isoTimestamp|isoDate|foot|sep||60000|_221|_isoRegexp|dispatchEvent|createEvent|warning|logWarning|fatal|logFatal|debug|logError|baseLog|_210|getMessageText|logToConsole|dispatchListeners|_204|_203|ident|_201|postError|alertListener|_197|_192|groupby_as_array|iextend|some|reversed|sorted|every|sum|_190|eat|_174|_173|_172|_171|_167|_163|_158|_157|_151|_144|_141||_139|_136|_134||_133|_132|zip|merge|isUndefined|isCallable|listMax|_131|_130|encodeURIComponent||_127|method|parseQueryString|evalJSON|registerJSON|serializeJSON|objMin|objMax|reverseKeyComparator|arrayEqual|objEqual|bindMethods|xfilter|xmap|isEmpty|isNull|isUndefinedOrNull|itemgetter|items|keys|setdefault|_126|_120|decodeURIComponent|_119|len|_109|_107|_104|_105|_101|_102|_98|||_100|_97|_96|_91|json|__json__|_82|_81|_80|_79|_76||_75|_74|_73|_69|_primitives|_64|_63||_62|_61|_59|_wrapDumbFunction|_49|_50|_31|_30|_21|_7|application|MochiKit_|createElementNS|namespaceURI|lastIndexOf|xul|there|gatekeeper|keymaster|mozilla|getElementsComputedStyle|_hasSingleTextChild|borderWidth|borderStyle|borderBottomWidth|borderTopWidth|borderTopStyle|fontSize|paddingBottom|insertBefore|paddingTop|marginBottom|marginTop|_575|property|see|handling|thrown|Multiple|element|||given|123|KEY_NUM_PAD_|105|KEY_APOSTROPHE|222|KEY_RIGHT_SQUARE_BRACKET|221|KEY_REVERSE_SOLIDUS|220|KEY_LEFT_SQUARE_BRACKET||219|KEY_GRAVE_ACCENT|192|KEY_SOLIDUS|191|KEY_FULL_STOP|190|KEY_HYPHEN|189||KEY_COMMA|188|KEY_EQUALS_SIGN|187|186|KEY_SCROLL_LOCK|145|KEY_NUM_LOCK|144|KEY_NUM_PAD_SOLIDUS|111|KEY_NUM_PAD_FULL_STOP|110|KEY_NUM_PAD_HYPHEN|109|KEY_NUM_PAD_PLUS_SIGN|107|KEY_NUM_PAD_ASTERISK|106|KEY_SELECT|KEY_WINDOWS_RIGHT|KEY_WINDOWS_LEFT|KEY_PRINT_SCREEN|KEY_SPACEBAR|KEY_ESCAPE|KEY_CAPS_LOCK|KEY_PAUSE|KEY_ALT|KEY_CTRL|KEY_SHIFT|KEY_TAB|KEY_BACKSPACE|63242|63272|63302|63233|63235|63232|63234|63273|63275|63277|63276|63289|returnValue|cancelBubble|keypress|KEY_UNKNOWN|keyup|keydown|shiftKey|metaKey||ctrlKey|altKey|toElement|srcElement|9acd32||yellowgreen||ffff00|f5f5f5|whitesmoke||ffffff|f5deb3|wheat|ee82ee|violet|40e0d0|turquoise|ff6347|tomato|d8bfd8|thistle|008080|teal|d2b48c|tan|4682b4|steelblue|00ff7f|springgreen|fffafa|snow|slategrey|slategray|6a5acd|slateblue|87ceeb|skyblue|c0c0c0|silver|a0522d|sienna|fff5ee|seashell|2e8b57|seagreen|f4a460|sandybrown|fa8072|salmon|8b4513|saddlebrown|4169e1|royalblue|bc8f8f|rosybrown|ff0000|800080|b0e0e6|powderblue|dda0dd|plum|ffc0cb|pink|cd853f||peru|ffdab9|peachpuff|ffefd5|papayawhip|db7093|palevioletred|afeeee|paleturquoise|98fb98|palegreen|eee8aa||palegoldenrod|da70d6|orchid|ff4500|orangered|ffa500|6b8e23|olivedrab|808000|olive|fdf5e6|oldlace|000080|navy|ffdead|navajowhite|ffe4b5|moccasin|ffe4e1|mistyrose|f5fffa|mintcream|191970|midnightblue|c71585|mediumvioletred|48d1cc|mediumturquoise|00fa9a|mediumspringgreen|7b68ee|mediumslateblue|3cb371|mediumseagreen|9370db|mediumpurple|ba55d3|mediumorchid|0000cd|mediumblue|66cdaa|mediumaquamarine|800000|maroon|faf0e6|linen|32cd32|limegreen|00ff00|lime|ffffe0|lightyellow|b0c4de|lightsteelblue|lightslategrey|lightslategray||87cefa|lightskyblue|20b2aa|lightseagreen|ffa07a|lightsalmon|ffb6c1|lightpink|lightgrey|90ee90|lightgreen|lightgray|fafad2|lightgoldenrodyellow|e0ffff|lightcyan|f08080|lightcoral|add8e6|lightblue|fffacd|lemonchiffon|7cfc00|lawngreen|fff0f5|lavenderblush|e6e6fa|lavender|f0e68c|khaki|fffff0|ivory|4b0082|indigo|cd5c5c|indianred|ff69b4|hotpink|f0fff0|honeydew|grey|adff2f|greenyellow|008000|daa520|goldenrod|ffd700||gold|f8f8ff|ghostwhite|dcdcdc|gainsboro|fuchsia|228b22|forestgreen|fffaf0|floralwhite|b22222|firebrick|1e90ff|dodgerblue|dimgrey|dimgray|00bfff|deepskyblue|ff1493|deeppink|9400d3|darkviolet|00ced1|darkturquoise|darkslategrey|darkslategray|483d8b|darkslateblue|8fbc8f|darkseagreen|e9967a|darksalmon|8b0000|9932cc|darkorchid|ff8c00|darkorange|556b2f|darkolivegreen|8b008b|darkmagenta|bdb76b|darkkhaki|darkgrey|006400|darkgreen|darkgray|b8860b|darkgoldenrod|008b8b|darkcyan|00008b|darkblue|dc143c|crimson|fff8dc|cornsilk|6495ed|cornflowerblue|ff7f50|coral|d2691e||chocolate|7fff00|chartreuse|5f9ea0|cadetblue|deb887|burlywood|a52a2a|8a2be2|blueviolet|0000ff|ffebcd||blanchedalmond|000000|ffe4c4|bisque|f5f5dc|beige|f0ffff|azure|7fffd4|aquamarine|aqua|faebd7|antiquewhite|f0f8ff|aliceblue|lightGray|darkGray|namedColors|blackColor|fromText|whiteColor|_510|_509|PI|rad|deg|transparentColor|_494|_493|_492|fromHSV|_491|_490|_489|asHSV|toHexString|rgba|hsla|toHSLString|isDark|lighterColorWithLevel|darkerColorWithLevel|colorWithLightness|colorWithSaturation|colorWithHue|colorWithAlpha||serif|sans|Verdana||8pt|8em|auto||Close|Clear||Load|Filter||10em||fixed|regex|emergency|line|margin|_Listener|dtd|loose|html4|w3|EN|Transitional|DTD|W3C|PUBLIC|DOCTYPE|blocking|due|debugging|able|Not|resizable|dependent|href|location|_MochiKit_LoggingPane|_429|canvas|strong|fieldset|legend|optgroup|select|form|textarea|label|img|table|tfoot|thead|tbody|htmlFor||useMap|usemap|defaultChecked|hasChildNodes|quot|amp|_405|focus|replaceChild|checkbox||radio|_win|BODY||safari|version|userAgent|navigator|innerHeight|alpha|khtml|Tried|acquire|clearTimeout|setTimeout|GET|ignore|send|abort|failed|Request|readyState|support|does|Browser|Microsoft|_288|_287|used|Deferreds|Chained|success|unfired|fr_FR|de_DE|00|abs|search|pattern|Invalid|getTimezoneOffset|getSeconds|getMinutes|getHours|UTC|3600000|initEvent|Events|debuggingBookmarklet|MESSAGES|LAST|_205|clear|ninfo|nlevel|timestamp|reverse|takes|initial|with|sequence|empty|iterable|numbers|dateLike|escape|find|forward|unregister|unescape|Object|compared|item|contains|logor|logand|cle|clt|cge|cgt|cne|ceq|zrshift|rshift|lshift|xor|mul|mod|sub|add|neg|lognot|_9|_2'.split('|'),0,{})\n\
+\n\
+\n\
+/*\n\
+ * jQuery 1.2.1 - New Wave Javascript\n\
+ *\n\
+ * Copyright (c) 2007 John Resig (jquery.com)\n\
+ * Dual licensed under the MIT (MIT-LICENSE.txt)\n\
+ * and GPL (GPL-LICENSE.txt) licenses.\n\
+ *\n\
+ * $Date: 2007-09-16 23:42:06 -0400 (Sun, 16 Sep 2007) $\n\
+ * $Rev: 3353 $\n\
+ */\n\
+\n\
+var decompressedJQuery = function(p,a,c,k,e,r){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c]);return p}('(G(){9(1m E!=\"W\")H w=E;H E=18.15=G(a,b){I 6 7u E?6.5N(a,b):1u E(a,b)};9(1m $!=\"W\")H D=$;18.$=E;H u=/^[^<]*(<(.|\\\\s)+>)[^>]*$|^#(\\\\w+)$/;E.1b=E.3A={5N:G(c,a){c=c||U;9(1m c==\"1M\"){H m=u.2S(c);9(m&&(m[1]||!a)){9(m[1])c=E.4D([m[1]],a);J{H b=U.3S(m[3]);9(b)9(b.22!=m[3])I E().1Y(c);J{6[0]=b;6.K=1;I 6}J c=[]}}J I 1u E(a).1Y(c)}J 9(E.1n(c))I 1u E(U)[E.1b.2d?\"2d\":\"39\"](c);I 6.6v(c.1c==1B&&c||(c.4c||c.K&&c!=18&&!c.1y&&c[0]!=W&&c[0].1y)&&E.2h(c)||[c])},4c:\"1.2.1\",7Y:G(){I 6.K},K:0,21:G(a){I a==W?E.2h(6):6[a]},2o:G(a){H b=E(a);b.4Y=6;I b},6v:G(a){6.K=0;1B.3A.1a.16(6,a);I 6},N:G(a,b){I E.N(6,a,b)},4I:G(a){H b=-1;6.N(G(i){9(6==a)b=i});I b},1x:G(f,d,e){H c=f;9(f.1c==3X)9(d==W)I 6.K&&E[e||\"1x\"](6[0],f)||W;J{c={};c[f]=d}I 6.N(G(a){L(H b 1i c)E.1x(e?6.R:6,b,E.1e(6,c[b],e,a,b))})},17:G(b,a){I 6.1x(b,a,\"3C\")},2g:G(e){9(1m e!=\"5i\"&&e!=S)I 6.4n().3g(U.6F(e));H t=\"\";E.N(e||6,G(){E.N(6.3j,G(){9(6.1y!=8)t+=6.1y!=1?6.6x:E.1b.2g([6])})});I t},5m:G(b){9(6[0])E(b,6[0].3H).6u().3d(6[0]).1X(G(){H a=6;1W(a.1w)a=a.1w;I a}).3g(6);I 6},8m:G(a){I 6.N(G(){E(6).6q().5m(a)})},8d:G(a){I 6.N(G(){E(6).5m(a)})},3g:G(){I 6.3z(1q,Q,1,G(a){6.58(a)})},6j:G(){I 6.3z(1q,Q,-1,G(a){6.3d(a,6.1w)})},6g:G(){I 6.3z(1q,P,1,G(a){6.12.3d(a,6)})},50:G(){I 6.3z(1q,P,-1,G(a){6.12.3d(a,6.2q)})},2D:G(){I 6.4Y||E([])},1Y:G(t){H b=E.1X(6,G(a){I E.1Y(t,a)});I 6.2o(/[^+>] [^+>]/.14(t)||t.1g(\"..\")>-1?E.4V(b):b)},6u:G(e){H f=6.1X(G(){I 6.67?E(6.67)[0]:6.4R(Q)});H d=f.1Y(\"*\").4O().N(G(){9(6[F]!=W)6[F]=S});9(e===Q)6.1Y(\"*\").4O().N(G(i){H c=E.M(6,\"2P\");L(H a 1i c)L(H b 1i c[a])E.1j.1f(d[i],a,c[a][b],c[a][b].M)});I f},1E:G(t){I 6.2o(E.1n(t)&&E.2W(6,G(b,a){I t.16(b,[a])})||E.3m(t,6))},5V:G(t){I 6.2o(t.1c==3X&&E.3m(t,6,Q)||E.2W(6,G(a){I(t.1c==1B||t.4c)?E.2A(a,t)<0:a!=t}))},1f:G(t){I 6.2o(E.1R(6.21(),t.1c==3X?E(t).21():t.K!=W&&(!t.11||E.11(t,\"2Y\"))?t:[t]))},3t:G(a){I a?E.3m(a,6).K>0:P},7c:G(a){I 6.3t(\".\"+a)},3i:G(b){9(b==W){9(6.K){H c=6[0];9(E.11(c,\"24\")){H e=c.4Z,a=[],Y=c.Y,2G=c.O==\"24-2G\";9(e<0)I S;L(H i=2G?e:0,33=2G?e+1:Y.K;i<33;i++){H d=Y[i];9(d.26){H b=E.V.1h&&!d.9V[\"1Q\"].9L?d.2g:d.1Q;9(2G)I b;a.1a(b)}}I a}J I 6[0].1Q.1p(/\\\\r/g,\"\")}}J I 6.N(G(){9(b.1c==1B&&/4k|5j/.14(6.O))6.2Q=(E.2A(6.1Q,b)>=0||E.2A(6.2H,b)>=0);J 9(E.11(6,\"24\")){H a=b.1c==1B?b:[b];E(\"9h\",6).N(G(){6.26=(E.2A(6.1Q,a)>=0||E.2A(6.2g,a)>=0)});9(!a.K)6.4Z=-1}J 6.1Q=b})},4o:G(a){I a==W?(6.K?6[0].3O:S):6.4n().3g(a)},6H:G(a){I 6.50(a).28()},6E:G(i){I 6.2J(i,i+1)},2J:G(){I 6.2o(1B.3A.2J.16(6,1q))},1X:G(b){I 6.2o(E.1X(6,G(a,i){I b.2O(a,i,a)}))},4O:G(){I 6.1f(6.4Y)},3z:G(f,d,g,e){H c=6.K>1,a;I 6.N(G(){9(!a){a=E.4D(f,6.3H);9(g<0)a.8U()}H b=6;9(d&&E.11(6,\"1I\")&&E.11(a[0],\"4m\"))b=6.4l(\"1K\")[0]||6.58(U.5B(\"1K\"));E.N(a,G(){H a=c?6.4R(Q):6;9(!5A(0,a))e.2O(b,a)})})}};G 5A(i,b){H a=E.11(b,\"1J\");9(a){9(b.3k)E.3G({1d:b.3k,3e:P,1V:\"1J\"});J E.5f(b.2g||b.6s||b.3O||\"\");9(b.12)b.12.3b(b)}J 9(b.1y==1)E(\"1J\",b).N(5A);I a}E.1k=E.1b.1k=G(){H c=1q[0]||{},a=1,2c=1q.K,5e=P;9(c.1c==8o){5e=c;c=1q[1]||{}}9(2c==1){c=6;a=0}H b;L(;a<2c;a++)9((b=1q[a])!=S)L(H i 1i b){9(c==b[i])6r;9(5e&&1m b[i]==\\'5i\\'&&c[i])E.1k(c[i],b[i]);J 9(b[i]!=W)c[i]=b[i]}I c};H F=\"15\"+(1u 3D()).3B(),6p=0,5c={};E.1k({8a:G(a){18.$=D;9(a)18.15=w;I E},1n:G(a){I!!a&&1m a!=\"1M\"&&!a.11&&a.1c!=1B&&/G/i.14(a+\"\")},4a:G(a){I a.2V&&!a.1G||a.37&&a.3H&&!a.3H.1G},5f:G(a){a=E.36(a);9(a){9(18.6l)18.6l(a);J 9(E.V.1N)18.56(a,0);J 3w.2O(18,a)}},11:G(b,a){I b.11&&b.11.27()==a.27()},1L:{},M:G(c,d,b){c=c==18?5c:c;H a=c[F];9(!a)a=c[F]=++6p;9(d&&!E.1L[a])E.1L[a]={};9(b!=W)E.1L[a][d]=b;I d?E.1L[a][d]:a},30:G(c,b){c=c==18?5c:c;H a=c[F];9(b){9(E.1L[a]){2E E.1L[a][b];b=\"\";L(b 1i E.1L[a])1T;9(!b)E.30(c)}}J{2a{2E c[F]}29(e){9(c.53)c.53(F)}2E E.1L[a]}},N:G(a,b,c){9(c){9(a.K==W)L(H i 1i a)b.16(a[i],c);J L(H i=0,48=a.K;i<48;i++)9(b.16(a[i],c)===P)1T}J{9(a.K==W)L(H i 1i a)b.2O(a[i],i,a[i]);J L(H i=0,48=a.K,3i=a[0];i<48&&b.2O(3i,i,3i)!==P;3i=a[++i]){}}I a},1e:G(c,b,d,e,a){9(E.1n(b))b=b.2O(c,[e]);H f=/z-?4I|7T-?7Q|1r|69|7P-?1H/i;I b&&b.1c==4W&&d==\"3C\"&&!f.14(a)?b+\"2T\":b},1o:{1f:G(b,c){E.N((c||\"\").2l(/\\\\s+/),G(i,a){9(!E.1o.3K(b.1o,a))b.1o+=(b.1o?\" \":\"\")+a})},28:G(b,c){b.1o=c!=W?E.2W(b.1o.2l(/\\\\s+/),G(a){I!E.1o.3K(c,a)}).66(\" \"):\"\"},3K:G(t,c){I E.2A(c,(t.1o||t).3s().2l(/\\\\s+/))>-1}},2k:G(e,o,f){L(H i 1i o){e.R[\"3r\"+i]=e.R[i];e.R[i]=o[i]}f.16(e,[]);L(H i 1i o)e.R[i]=e.R[\"3r\"+i]},17:G(e,p){9(p==\"1H\"||p==\"2N\"){H b={},42,41,d=[\"7J\",\"7I\",\"7G\",\"7F\"];E.N(d,G(){b[\"7C\"+6]=0;b[\"7B\"+6+\"5Z\"]=0});E.2k(e,b,G(){9(E(e).3t(\\':3R\\')){42=e.7A;41=e.7w}J{e=E(e.4R(Q)).1Y(\":4k\").5W(\"2Q\").2D().17({4C:\"1P\",2X:\"4F\",19:\"2Z\",7o:\"0\",1S:\"0\"}).5R(e.12)[0];H a=E.17(e.12,\"2X\")||\"3V\";9(a==\"3V\")e.12.R.2X=\"7g\";42=e.7e;41=e.7b;9(a==\"3V\")e.12.R.2X=\"3V\";e.12.3b(e)}});I p==\"1H\"?42:41}I E.3C(e,p)},3C:G(h,j,i){H g,2w=[],2k=[];G 3n(a){9(!E.V.1N)I P;H b=U.3o.3Z(a,S);I!b||b.4y(\"3n\")==\"\"}9(j==\"1r\"&&E.V.1h){g=E.1x(h.R,\"1r\");I g==\"\"?\"1\":g}9(j.1t(/4u/i))j=y;9(!i&&h.R[j])g=h.R[j];J 9(U.3o&&U.3o.3Z){9(j.1t(/4u/i))j=\"4u\";j=j.1p(/([A-Z])/g,\"-$1\").2p();H d=U.3o.3Z(h,S);9(d&&!3n(h))g=d.4y(j);J{L(H a=h;a&&3n(a);a=a.12)2w.4w(a);L(a=0;a<2w.K;a++)9(3n(2w[a])){2k[a]=2w[a].R.19;2w[a].R.19=\"2Z\"}g=j==\"19\"&&2k[2w.K-1]!=S?\"2s\":U.3o.3Z(h,S).4y(j)||\"\";L(a=0;a<2k.K;a++)9(2k[a]!=S)2w[a].R.19=2k[a]}9(j==\"1r\"&&g==\"\")g=\"1\"}J 9(h.3Q){H f=j.1p(/\\\\-(\\\\w)/g,G(m,c){I c.27()});g=h.3Q[j]||h.3Q[f];9(!/^\\\\d+(2T)?$/i.14(g)&&/^\\\\d/.14(g)){H k=h.R.1S;H e=h.4v.1S;h.4v.1S=h.3Q.1S;h.R.1S=g||0;g=h.R.71+\"2T\";h.R.1S=k;h.4v.1S=e}}I g},4D:G(a,e){H r=[];e=e||U;E.N(a,G(i,d){9(!d)I;9(d.1c==4W)d=d.3s();9(1m d==\"1M\"){d=d.1p(/(<(\\\\w+)[^>]*?)\\\\/>/g,G(m,a,b){I b.1t(/^(70|6Z|6Y|9Q|4t|9N|9K|3a|9G|9E)$/i)?m:a+\"></\"+b+\">\"});H s=E.36(d).2p(),1s=e.5B(\"1s\"),2x=[];H c=!s.1g(\"<9y\")&&[1,\"<24>\",\"</24>\"]||!s.1g(\"<9w\")&&[1,\"<6T>\",\"</6T>\"]||s.1t(/^<(9u|1K|9t|9r|9p)/)&&[1,\"<1I>\",\"</1I>\"]||!s.1g(\"<4m\")&&[2,\"<1I><1K>\",\"</1K></1I>\"]||(!s.1g(\"<9m\")||!s.1g(\"<9k\"))&&[3,\"<1I><1K><4m>\",\"</4m></1K></1I>\"]||!s.1g(\"<6Y\")&&[2,\"<1I><1K></1K><6L>\",\"</6L></1I>\"]||E.V.1h&&[1,\"1s<1s>\",\"</1s>\"]||[0,\"\",\"\"];1s.3O=c[1]+d+c[2];1W(c[0]--)1s=1s.5p;9(E.V.1h){9(!s.1g(\"<1I\")&&s.1g(\"<1K\")<0)2x=1s.1w&&1s.1w.3j;J 9(c[1]==\"<1I>\"&&s.1g(\"<1K\")<0)2x=1s.3j;L(H n=2x.K-1;n>=0;--n)9(E.11(2x[n],\"1K\")&&!2x[n].3j.K)2x[n].12.3b(2x[n]);9(/^\\\\s/.14(d))1s.3d(e.6F(d.1t(/^\\\\s*/)[0]),1s.1w)}d=E.2h(1s.3j)}9(0===d.K&&(!E.11(d,\"2Y\")&&!E.11(d,\"24\")))I;9(d[0]==W||E.11(d,\"2Y\")||d.Y)r.1a(d);J r=E.1R(r,d)});I r},1x:G(c,d,a){H e=E.4a(c)?{}:E.5o;9(d==\"26\"&&E.V.1N)c.12.4Z;9(e[d]){9(a!=W)c[e[d]]=a;I c[e[d]]}J 9(E.V.1h&&d==\"R\")I E.1x(c.R,\"9e\",a);J 9(a==W&&E.V.1h&&E.11(c,\"2Y\")&&(d==\"9d\"||d==\"9a\"))I c.97(d).6x;J 9(c.37){9(a!=W){9(d==\"O\"&&E.11(c,\"4t\")&&c.12)6G\"O 94 93\\'t 92 91\";c.90(d,a)}9(E.V.1h&&/6C|3k/.14(d)&&!E.4a(c))I c.4p(d,2);I c.4p(d)}J{9(d==\"1r\"&&E.V.1h){9(a!=W){c.69=1;c.1E=(c.1E||\"\").1p(/6O\\\\([^)]*\\\\)/,\"\")+(3I(a).3s()==\"8S\"?\"\":\"6O(1r=\"+a*6A+\")\")}I c.1E?(3I(c.1E.1t(/1r=([^)]*)/)[1])/6A).3s():\"\"}d=d.1p(/-([a-z])/8Q,G(z,b){I b.27()});9(a!=W)c[d]=a;I c[d]}},36:G(t){I(t||\"\").1p(/^\\\\s+|\\\\s+$/g,\"\")},2h:G(a){H r=[];9(1m a!=\"8P\")L(H i=0,2c=a.K;i<2c;i++)r.1a(a[i]);J r=a.2J(0);I r},2A:G(b,a){L(H i=0,2c=a.K;i<2c;i++)9(a[i]==b)I i;I-1},1R:G(a,b){9(E.V.1h){L(H i=0;b[i];i++)9(b[i].1y!=8)a.1a(b[i])}J L(H i=0;b[i];i++)a.1a(b[i]);I a},4V:G(b){H r=[],2f={};2a{L(H i=0,6y=b.K;i<6y;i++){H a=E.M(b[i]);9(!2f[a]){2f[a]=Q;r.1a(b[i])}}}29(e){r=b}I r},2W:G(b,a,c){9(1m a==\"1M\")a=3w(\"P||G(a,i){I \"+a+\"}\");H d=[];L(H i=0,4g=b.K;i<4g;i++)9(!c&&a(b[i],i)||c&&!a(b[i],i))d.1a(b[i]);I d},1X:G(c,b){9(1m b==\"1M\")b=3w(\"P||G(a){I \"+b+\"}\");H d=[];L(H i=0,4g=c.K;i<4g;i++){H a=b(c[i],i);9(a!==S&&a!=W){9(a.1c!=1B)a=[a];d=d.8M(a)}}I d}});H v=8K.8I.2p();E.V={4s:(v.1t(/.+(?:8F|8E|8C|8B)[\\\\/: ]([\\\\d.]+)/)||[])[1],1N:/6w/.14(v),34:/34/.14(v),1h:/1h/.14(v)&&!/34/.14(v),35:/35/.14(v)&&!/(8z|6w)/.14(v)};H y=E.V.1h?\"4h\":\"5h\";E.1k({5g:!E.V.1h||U.8y==\"8x\",4h:E.V.1h?\"4h\":\"5h\",5o:{\"L\":\"8w\",\"8v\":\"1o\",\"4u\":y,5h:y,4h:y,3O:\"3O\",1o:\"1o\",1Q:\"1Q\",3c:\"3c\",2Q:\"2Q\",8u:\"8t\",26:\"26\",8s:\"8r\"}});E.N({1D:\"a.12\",8q:\"15.4e(a,\\'12\\')\",8p:\"15.2I(a,2,\\'2q\\')\",8n:\"15.2I(a,2,\\'4d\\')\",8l:\"15.4e(a,\\'2q\\')\",8k:\"15.4e(a,\\'4d\\')\",8j:\"15.5d(a.12.1w,a)\",8i:\"15.5d(a.1w)\",6q:\"15.11(a,\\'8h\\')?a.8f||a.8e.U:15.2h(a.3j)\"},G(i,n){E.1b[i]=G(a){H b=E.1X(6,n);9(a&&1m a==\"1M\")b=E.3m(a,b);I 6.2o(E.4V(b))}});E.N({5R:\"3g\",8c:\"6j\",3d:\"6g\",8b:\"50\",89:\"6H\"},G(i,n){E.1b[i]=G(){H a=1q;I 6.N(G(){L(H j=0,2c=a.K;j<2c;j++)E(a[j])[n](6)})}});E.N({5W:G(a){E.1x(6,a,\"\");6.53(a)},88:G(c){E.1o.1f(6,c)},87:G(c){E.1o.28(6,c)},86:G(c){E.1o[E.1o.3K(6,c)?\"28\":\"1f\"](6,c)},28:G(a){9(!a||E.1E(a,[6]).r.K){E.30(6);6.12.3b(6)}},4n:G(){E(\"*\",6).N(G(){E.30(6)});1W(6.1w)6.3b(6.1w)}},G(i,n){E.1b[i]=G(){I 6.N(n,1q)}});E.N([\"85\",\"5Z\"],G(i,a){H n=a.2p();E.1b[n]=G(h){I 6[0]==18?E.V.1N&&3y[\"84\"+a]||E.5g&&38.33(U.2V[\"5a\"+a],U.1G[\"5a\"+a])||U.1G[\"5a\"+a]:6[0]==U?38.33(U.1G[\"6n\"+a],U.1G[\"6m\"+a]):h==W?(6.K?E.17(6[0],n):S):6.17(n,h.1c==3X?h:h+\"2T\")}});H C=E.V.1N&&3x(E.V.4s)<83?\"(?:[\\\\\\\\w*57-]|\\\\\\\\\\\\\\\\.)\":\"(?:[\\\\\\\\w\\\\82-\\\\81*57-]|\\\\\\\\\\\\\\\\.)\",6k=1u 47(\"^>\\\\\\\\s*(\"+C+\"+)\"),6i=1u 47(\"^(\"+C+\"+)(#)(\"+C+\"+)\"),6h=1u 47(\"^([#.]?)(\"+C+\"*)\");E.1k({55:{\"\":\"m[2]==\\'*\\'||15.11(a,m[2])\",\"#\":\"a.4p(\\'22\\')==m[2]\",\":\":{80:\"i<m[3]-0\",7Z:\"i>m[3]-0\",2I:\"m[3]-0==i\",6E:\"m[3]-0==i\",3v:\"i==0\",3u:\"i==r.K-1\",6f:\"i%2==0\",6e:\"i%2\",\"3v-46\":\"a.12.4l(\\'*\\')[0]==a\",\"3u-46\":\"15.2I(a.12.5p,1,\\'4d\\')==a\",\"7X-46\":\"!15.2I(a.12.5p,2,\\'4d\\')\",1D:\"a.1w\",4n:\"!a.1w\",7W:\"(a.6s||a.7V||15(a).2g()||\\'\\').1g(m[3])>=0\",3R:\\'\"1P\"!=a.O&&15.17(a,\"19\")!=\"2s\"&&15.17(a,\"4C\")!=\"1P\"\\',1P:\\'\"1P\"==a.O||15.17(a,\"19\")==\"2s\"||15.17(a,\"4C\")==\"1P\"\\',7U:\"!a.3c\",3c:\"a.3c\",2Q:\"a.2Q\",26:\"a.26||15.1x(a,\\'26\\')\",2g:\"\\'2g\\'==a.O\",4k:\"\\'4k\\'==a.O\",5j:\"\\'5j\\'==a.O\",54:\"\\'54\\'==a.O\",52:\"\\'52\\'==a.O\",51:\"\\'51\\'==a.O\",6d:\"\\'6d\\'==a.O\",6c:\"\\'6c\\'==a.O\",2r:\\'\"2r\"==a.O||15.11(a,\"2r\")\\',4t:\"/4t|24|6b|2r/i.14(a.11)\",3K:\"15.1Y(m[3],a).K\",7S:\"/h\\\\\\\\d/i.14(a.11)\",7R:\"15.2W(15.32,G(1b){I a==1b.T;}).K\"}},6a:[/^(\\\\[) *@?([\\\\w-]+) *([!*$^~=]*) *(\\'?\"?)(.*?)\\\\4 *\\\\]/,/^(:)([\\\\w-]+)\\\\(\"?\\'?(.*?(\\\\(.*?\\\\))?[^(]*?)\"?\\'?\\\\)/,1u 47(\"^([:.#]*)(\"+C+\"+)\")],3m:G(a,c,b){H d,2b=[];1W(a&&a!=d){d=a;H f=E.1E(a,c,b);a=f.t.1p(/^\\\\s*,\\\\s*/,\"\");2b=b?c=f.r:E.1R(2b,f.r)}I 2b},1Y:G(t,o){9(1m t!=\"1M\")I[t];9(o&&!o.1y)o=S;o=o||U;H d=[o],2f=[],3u;1W(t&&3u!=t){H r=[];3u=t;t=E.36(t);H l=P;H g=6k;H m=g.2S(t);9(m){H p=m[1].27();L(H i=0;d[i];i++)L(H c=d[i].1w;c;c=c.2q)9(c.1y==1&&(p==\"*\"||c.11.27()==p.27()))r.1a(c);d=r;t=t.1p(g,\"\");9(t.1g(\" \")==0)6r;l=Q}J{g=/^([>+~])\\\\s*(\\\\w*)/i;9((m=g.2S(t))!=S){r=[];H p=m[2],1R={};m=m[1];L(H j=0,31=d.K;j<31;j++){H n=m==\"~\"||m==\"+\"?d[j].2q:d[j].1w;L(;n;n=n.2q)9(n.1y==1){H h=E.M(n);9(m==\"~\"&&1R[h])1T;9(!p||n.11.27()==p.27()){9(m==\"~\")1R[h]=Q;r.1a(n)}9(m==\"+\")1T}}d=r;t=E.36(t.1p(g,\"\"));l=Q}}9(t&&!l){9(!t.1g(\",\")){9(o==d[0])d.44();2f=E.1R(2f,d);r=d=[o];t=\" \"+t.68(1,t.K)}J{H k=6i;H m=k.2S(t);9(m){m=[0,m[2],m[3],m[1]]}J{k=6h;m=k.2S(t)}m[2]=m[2].1p(/\\\\\\\\/g,\"\");H f=d[d.K-1];9(m[1]==\"#\"&&f&&f.3S&&!E.4a(f)){H q=f.3S(m[2]);9((E.V.1h||E.V.34)&&q&&1m q.22==\"1M\"&&q.22!=m[2])q=E(\\'[@22=\"\\'+m[2]+\\'\"]\\',f)[0];d=r=q&&(!m[3]||E.11(q,m[3]))?[q]:[]}J{L(H i=0;d[i];i++){H a=m[1]==\"#\"&&m[3]?m[3]:m[1]!=\"\"||m[0]==\"\"?\"*\":m[2];9(a==\"*\"&&d[i].11.2p()==\"5i\")a=\"3a\";r=E.1R(r,d[i].4l(a))}9(m[1]==\".\")r=E.4X(r,m[2]);9(m[1]==\"#\"){H e=[];L(H i=0;r[i];i++)9(r[i].4p(\"22\")==m[2]){e=[r[i]];1T}r=e}d=r}t=t.1p(k,\"\")}}9(t){H b=E.1E(t,r);d=r=b.r;t=E.36(b.t)}}9(t)d=[];9(d&&o==d[0])d.44();2f=E.1R(2f,d);I 2f},4X:G(r,m,a){m=\" \"+m+\" \";H c=[];L(H i=0;r[i];i++){H b=(\" \"+r[i].1o+\" \").1g(m)>=0;9(!a&&b||a&&!b)c.1a(r[i])}I c},1E:G(t,r,h){H d;1W(t&&t!=d){d=t;H p=E.6a,m;L(H i=0;p[i];i++){m=p[i].2S(t);9(m){t=t.7O(m[0].K);m[2]=m[2].1p(/\\\\\\\\/g,\"\");1T}}9(!m)1T;9(m[1]==\":\"&&m[2]==\"5V\")r=E.1E(m[3],r,Q).r;J 9(m[1]==\".\")r=E.4X(r,m[2],h);J 9(m[1]==\"[\"){H g=[],O=m[3];L(H i=0,31=r.K;i<31;i++){H a=r[i],z=a[E.5o[m[2]]||m[2]];9(z==S||/6C|3k|26/.14(m[2]))z=E.1x(a,m[2])||\\'\\';9((O==\"\"&&!!z||O==\"=\"&&z==m[5]||O==\"!=\"&&z!=m[5]||O==\"^=\"&&z&&!z.1g(m[5])||O==\"$=\"&&z.68(z.K-m[5].K)==m[5]||(O==\"*=\"||O==\"~=\")&&z.1g(m[5])>=0)^h)g.1a(a)}r=g}J 9(m[1]==\":\"&&m[2]==\"2I-46\"){H e={},g=[],14=/(\\\\d*)n\\\\+?(\\\\d*)/.2S(m[3]==\"6f\"&&\"2n\"||m[3]==\"6e\"&&\"2n+1\"||!/\\\\D/.14(m[3])&&\"n+\"+m[3]||m[3]),3v=(14[1]||1)-0,d=14[2]-0;L(H i=0,31=r.K;i<31;i++){H j=r[i],12=j.12,22=E.M(12);9(!e[22]){H c=1;L(H n=12.1w;n;n=n.2q)9(n.1y==1)n.4U=c++;e[22]=Q}H b=P;9(3v==1){9(d==0||j.4U==d)b=Q}J 9((j.4U+d)%3v==0)b=Q;9(b^h)g.1a(j)}r=g}J{H f=E.55[m[1]];9(1m f!=\"1M\")f=E.55[m[1]][m[2]];f=3w(\"P||G(a,i){I \"+f+\"}\");r=E.2W(r,f,h)}}I{r:r,t:t}},4e:G(b,c){H d=[];H a=b[c];1W(a&&a!=U){9(a.1y==1)d.1a(a);a=a[c]}I d},2I:G(a,e,c,b){e=e||1;H d=0;L(;a;a=a[c])9(a.1y==1&&++d==e)1T;I a},5d:G(n,a){H r=[];L(;n;n=n.2q){9(n.1y==1&&(!a||n!=a))r.1a(n)}I r}});E.1j={1f:G(g,e,c,h){9(E.V.1h&&g.4j!=W)g=18;9(!c.2u)c.2u=6.2u++;9(h!=W){H d=c;c=G(){I d.16(6,1q)};c.M=h;c.2u=d.2u}H i=e.2l(\".\");e=i[0];c.O=i[1];H b=E.M(g,\"2P\")||E.M(g,\"2P\",{});H f=E.M(g,\"2t\",G(){H a;9(1m E==\"W\"||E.1j.4T)I a;a=E.1j.2t.16(g,1q);I a});H j=b[e];9(!j){j=b[e]={};9(g.4S)g.4S(e,f,P);J g.7N(\"43\"+e,f)}j[c.2u]=c;6.1Z[e]=Q},2u:1,1Z:{},28:G(d,c,b){H e=E.M(d,\"2P\"),2L,4I;9(1m c==\"1M\"){H a=c.2l(\".\");c=a[0]}9(e){9(c&&c.O){b=c.4Q;c=c.O}9(!c){L(c 1i e)6.28(d,c)}J 9(e[c]){9(b)2E e[c][b.2u];J L(b 1i e[c])9(!a[1]||e[c][b].O==a[1])2E e[c][b];L(2L 1i e[c])1T;9(!2L){9(d.4P)d.4P(c,E.M(d,\"2t\"),P);J d.7M(\"43\"+c,E.M(d,\"2t\"));2L=S;2E e[c]}}L(2L 1i e)1T;9(!2L){E.30(d,\"2P\");E.30(d,\"2t\")}}},1F:G(d,b,e,c,f){b=E.2h(b||[]);9(!e){9(6.1Z[d])E(\"*\").1f([18,U]).1F(d,b)}J{H a,2L,1b=E.1n(e[d]||S),4N=!b[0]||!b[0].2M;9(4N)b.4w(6.4M({O:d,2m:e}));b[0].O=d;9(E.1n(E.M(e,\"2t\")))a=E.M(e,\"2t\").16(e,b);9(!1b&&e[\"43\"+d]&&e[\"43\"+d].16(e,b)===P)a=P;9(4N)b.44();9(f&&f.16(e,b)===P)a=P;9(1b&&c!==P&&a!==P&&!(E.11(e,\\'a\\')&&d==\"4L\")){6.4T=Q;e[d]()}6.4T=P}I a},2t:G(d){H a;d=E.1j.4M(d||18.1j||{});H b=d.O.2l(\".\");d.O=b[0];H c=E.M(6,\"2P\")&&E.M(6,\"2P\")[d.O],3q=1B.3A.2J.2O(1q,1);3q.4w(d);L(H j 1i c){3q[0].4Q=c[j];3q[0].M=c[j].M;9(!b[1]||c[j].O==b[1]){H e=c[j].16(6,3q);9(a!==P)a=e;9(e===P){d.2M();d.3p()}}}9(E.V.1h)d.2m=d.2M=d.3p=d.4Q=d.M=S;I a},4M:G(c){H a=c;c=E.1k({},a);c.2M=G(){9(a.2M)a.2M();a.7L=P};c.3p=G(){9(a.3p)a.3p();a.7K=Q};9(!c.2m&&c.65)c.2m=c.65;9(E.V.1N&&c.2m.1y==3)c.2m=a.2m.12;9(!c.4K&&c.4J)c.4K=c.4J==c.2m?c.7H:c.4J;9(c.64==S&&c.63!=S){H e=U.2V,b=U.1G;c.64=c.63+(e&&e.2R||b.2R||0);c.7E=c.7D+(e&&e.2B||b.2B||0)}9(!c.3Y&&(c.61||c.60))c.3Y=c.61||c.60;9(!c.5F&&c.5D)c.5F=c.5D;9(!c.3Y&&c.2r)c.3Y=(c.2r&1?1:(c.2r&2?3:(c.2r&4?2:0)));I c}};E.1b.1k({3W:G(c,a,b){I c==\"5Y\"?6.2G(c,a,b):6.N(G(){E.1j.1f(6,c,b||a,b&&a)})},2G:G(d,b,c){I 6.N(G(){E.1j.1f(6,d,G(a){E(6).5X(a);I(c||b).16(6,1q)},c&&b)})},5X:G(a,b){I 6.N(G(){E.1j.28(6,a,b)})},1F:G(c,a,b){I 6.N(G(){E.1j.1F(c,a,6,Q,b)})},7x:G(c,a,b){9(6[0])I E.1j.1F(c,a,6[0],P,b)},25:G(){H a=1q;I 6.4L(G(e){6.4H=0==6.4H?1:0;e.2M();I a[6.4H].16(6,[e])||P})},7v:G(f,g){G 4G(e){H p=e.4K;1W(p&&p!=6)2a{p=p.12}29(e){p=6};9(p==6)I P;I(e.O==\"4x\"?f:g).16(6,[e])}I 6.4x(4G).5U(4G)},2d:G(f){5T();9(E.3T)f.16(U,[E]);J E.3l.1a(G(){I f.16(6,[E])});I 6}});E.1k({3T:P,3l:[],2d:G(){9(!E.3T){E.3T=Q;9(E.3l){E.N(E.3l,G(){6.16(U)});E.3l=S}9(E.V.35||E.V.34)U.4P(\"5S\",E.2d,P);9(!18.7t.K)E(18).39(G(){E(\"#4E\").28()})}}});E.N((\"7s,7r,39,7q,6n,5Y,4L,7p,\"+\"7n,7m,7l,4x,5U,7k,24,\"+\"51,7j,7i,7h,3U\").2l(\",\"),G(i,o){E.1b[o]=G(f){I f?6.3W(o,f):6.1F(o)}});H x=P;G 5T(){9(x)I;x=Q;9(E.V.35||E.V.34)U.4S(\"5S\",E.2d,P);J 9(E.V.1h){U.7f(\"<7d\"+\"7y 22=4E 7z=Q \"+\"3k=//:><\\\\/1J>\");H a=U.3S(\"4E\");9(a)a.62=G(){9(6.2C!=\"1l\")I;E.2d()};a=S}J 9(E.V.1N)E.4B=4j(G(){9(U.2C==\"5Q\"||U.2C==\"1l\"){4A(E.4B);E.4B=S;E.2d()}},10);E.1j.1f(18,\"39\",E.2d)}E.1b.1k({39:G(g,d,c){9(E.1n(g))I 6.3W(\"39\",g);H e=g.1g(\" \");9(e>=0){H i=g.2J(e,g.K);g=g.2J(0,e)}c=c||G(){};H f=\"4z\";9(d)9(E.1n(d)){c=d;d=S}J{d=E.3a(d);f=\"5P\"}H h=6;E.3G({1d:g,O:f,M:d,1l:G(a,b){9(b==\"1C\"||b==\"5O\")h.4o(i?E(\"<1s/>\").3g(a.40.1p(/<1J(.|\\\\s)*?\\\\/1J>/g,\"\")).1Y(i):a.40);56(G(){h.N(c,[a.40,b,a])},13)}});I 6},7a:G(){I E.3a(6.5M())},5M:G(){I 6.1X(G(){I E.11(6,\"2Y\")?E.2h(6.79):6}).1E(G(){I 6.2H&&!6.3c&&(6.2Q||/24|6b/i.14(6.11)||/2g|1P|52/i.14(6.O))}).1X(G(i,c){H b=E(6).3i();I b==S?S:b.1c==1B?E.1X(b,G(a,i){I{2H:c.2H,1Q:a}}):{2H:c.2H,1Q:b}}).21()}});E.N(\"5L,5K,6t,5J,5I,5H\".2l(\",\"),G(i,o){E.1b[o]=G(f){I 6.3W(o,f)}});H B=(1u 3D).3B();E.1k({21:G(d,b,a,c){9(E.1n(b)){a=b;b=S}I E.3G({O:\"4z\",1d:d,M:b,1C:a,1V:c})},78:G(b,a){I E.21(b,S,a,\"1J\")},77:G(c,b,a){I E.21(c,b,a,\"45\")},76:G(d,b,a,c){9(E.1n(b)){a=b;b={}}I E.3G({O:\"5P\",1d:d,M:b,1C:a,1V:c})},75:G(a){E.1k(E.59,a)},59:{1Z:Q,O:\"4z\",2z:0,5G:\"74/x-73-2Y-72\",6o:Q,3e:Q,M:S},49:{},3G:G(s){H f,2y=/=(\\\\?|%3F)/g,1v,M;s=E.1k(Q,s,E.1k(Q,{},E.59,s));9(s.M&&s.6o&&1m s.M!=\"1M\")s.M=E.3a(s.M);9(s.1V==\"4b\"){9(s.O.2p()==\"21\"){9(!s.1d.1t(2y))s.1d+=(s.1d.1t(/\\\\?/)?\"&\":\"?\")+(s.4b||\"5E\")+\"=?\"}J 9(!s.M||!s.M.1t(2y))s.M=(s.M?s.M+\"&\":\"\")+(s.4b||\"5E\")+\"=?\";s.1V=\"45\"}9(s.1V==\"45\"&&(s.M&&s.M.1t(2y)||s.1d.1t(2y))){f=\"4b\"+B++;9(s.M)s.M=s.M.1p(2y,\"=\"+f);s.1d=s.1d.1p(2y,\"=\"+f);s.1V=\"1J\";18[f]=G(a){M=a;1C();1l();18[f]=W;2a{2E 18[f]}29(e){}}}9(s.1V==\"1J\"&&s.1L==S)s.1L=P;9(s.1L===P&&s.O.2p()==\"21\")s.1d+=(s.1d.1t(/\\\\?/)?\"&\":\"?\")+\"57=\"+(1u 3D()).3B();9(s.M&&s.O.2p()==\"21\"){s.1d+=(s.1d.1t(/\\\\?/)?\"&\":\"?\")+s.M;s.M=S}9(s.1Z&&!E.5b++)E.1j.1F(\"5L\");9(!s.1d.1g(\"8g\")&&s.1V==\"1J\"){H h=U.4l(\"9U\")[0];H g=U.5B(\"1J\");g.3k=s.1d;9(!f&&(s.1C||s.1l)){H j=P;g.9R=g.62=G(){9(!j&&(!6.2C||6.2C==\"5Q\"||6.2C==\"1l\")){j=Q;1C();1l();h.3b(g)}}}h.58(g);I}H k=P;H i=18.6X?1u 6X(\"9P.9O\"):1u 6W();i.9M(s.O,s.1d,s.3e);9(s.M)i.5C(\"9J-9I\",s.5G);9(s.5y)i.5C(\"9H-5x-9F\",E.49[s.1d]||\"9D, 9C 9B 9A 5v:5v:5v 9z\");i.5C(\"X-9x-9v\",\"6W\");9(s.6U)s.6U(i);9(s.1Z)E.1j.1F(\"5H\",[i,s]);H c=G(a){9(!k&&i&&(i.2C==4||a==\"2z\")){k=Q;9(d){4A(d);d=S}1v=a==\"2z\"&&\"2z\"||!E.6S(i)&&\"3U\"||s.5y&&E.6R(i,s.1d)&&\"5O\"||\"1C\";9(1v==\"1C\"){2a{M=E.6Q(i,s.1V)}29(e){1v=\"5k\"}}9(1v==\"1C\"){H b;2a{b=i.5s(\"6P-5x\")}29(e){}9(s.5y&&b)E.49[s.1d]=b;9(!f)1C()}J E.5r(s,i,1v);1l();9(s.3e)i=S}};9(s.3e){H d=4j(c,13);9(s.2z>0)56(G(){9(i){i.9q();9(!k)c(\"2z\")}},s.2z)}2a{i.9o(s.M)}29(e){E.5r(s,i,S,e)}9(!s.3e)c();I i;G 1C(){9(s.1C)s.1C(M,1v);9(s.1Z)E.1j.1F(\"5I\",[i,s])}G 1l(){9(s.1l)s.1l(i,1v);9(s.1Z)E.1j.1F(\"6t\",[i,s]);9(s.1Z&&!--E.5b)E.1j.1F(\"5K\")}},5r:G(s,a,b,e){9(s.3U)s.3U(a,b,e);9(s.1Z)E.1j.1F(\"5J\",[a,s,e])},5b:0,6S:G(r){2a{I!r.1v&&9n.9l==\"54:\"||(r.1v>=6N&&r.1v<9j)||r.1v==6M||E.V.1N&&r.1v==W}29(e){}I P},6R:G(a,c){2a{H b=a.5s(\"6P-5x\");I a.1v==6M||b==E.49[c]||E.V.1N&&a.1v==W}29(e){}I P},6Q:G(r,b){H c=r.5s(\"9i-O\");H d=b==\"6K\"||!b&&c&&c.1g(\"6K\")>=0;H a=d?r.9g:r.40;9(d&&a.2V.37==\"5k\")6G\"5k\";9(b==\"1J\")E.5f(a);9(b==\"45\")a=3w(\"(\"+a+\")\");I a},3a:G(a){H s=[];9(a.1c==1B||a.4c)E.N(a,G(){s.1a(3f(6.2H)+\"=\"+3f(6.1Q))});J L(H j 1i a)9(a[j]&&a[j].1c==1B)E.N(a[j],G(){s.1a(3f(j)+\"=\"+3f(6))});J s.1a(3f(j)+\"=\"+3f(a[j]));I s.66(\"&\").1p(/%20/g,\"+\")}});E.1b.1k({1A:G(b,a){I b?6.1U({1H:\"1A\",2N:\"1A\",1r:\"1A\"},b,a):6.1E(\":1P\").N(G(){6.R.19=6.3h?6.3h:\"\";9(E.17(6,\"19\")==\"2s\")6.R.19=\"2Z\"}).2D()},1z:G(b,a){I b?6.1U({1H:\"1z\",2N:\"1z\",1r:\"1z\"},b,a):6.1E(\":3R\").N(G(){6.3h=6.3h||E.17(6,\"19\");9(6.3h==\"2s\")6.3h=\"2Z\";6.R.19=\"2s\"}).2D()},6J:E.1b.25,25:G(a,b){I E.1n(a)&&E.1n(b)?6.6J(a,b):a?6.1U({1H:\"25\",2N:\"25\",1r:\"25\"},a,b):6.N(G(){E(6)[E(6).3t(\":1P\")?\"1A\":\"1z\"]()})},9c:G(b,a){I 6.1U({1H:\"1A\"},b,a)},9b:G(b,a){I 6.1U({1H:\"1z\"},b,a)},99:G(b,a){I 6.1U({1H:\"25\"},b,a)},98:G(b,a){I 6.1U({1r:\"1A\"},b,a)},96:G(b,a){I 6.1U({1r:\"1z\"},b,a)},95:G(c,a,b){I 6.1U({1r:a},c,b)},1U:G(k,i,h,g){H j=E.6D(i,h,g);I 6[j.3L===P?\"N\":\"3L\"](G(){j=E.1k({},j);H f=E(6).3t(\":1P\"),3y=6;L(H p 1i k){9(k[p]==\"1z\"&&f||k[p]==\"1A\"&&!f)I E.1n(j.1l)&&j.1l.16(6);9(p==\"1H\"||p==\"2N\"){j.19=E.17(6,\"19\");j.2U=6.R.2U}}9(j.2U!=S)6.R.2U=\"1P\";j.3M=E.1k({},k);E.N(k,G(c,a){H e=1u E.2j(3y,j,c);9(/25|1A|1z/.14(a))e[a==\"25\"?f?\"1A\":\"1z\":a](k);J{H b=a.3s().1t(/^([+-]=)?([\\\\d+-.]+)(.*)$/),1O=e.2b(Q)||0;9(b){H d=3I(b[2]),2i=b[3]||\"2T\";9(2i!=\"2T\"){3y.R[c]=(d||1)+2i;1O=((d||1)/e.2b(Q))*1O;3y.R[c]=1O+2i}9(b[1])d=((b[1]==\"-=\"?-1:1)*d)+1O;e.3N(1O,d,2i)}J e.3N(1O,a,\"\")}});I Q})},3L:G(a,b){9(E.1n(a)){b=a;a=\"2j\"}9(!a||(1m a==\"1M\"&&!b))I A(6[0],a);I 6.N(G(){9(b.1c==1B)A(6,a,b);J{A(6,a).1a(b);9(A(6,a).K==1)b.16(6)}})},9f:G(){H a=E.32;I 6.N(G(){L(H i=0;i<a.K;i++)9(a[i].T==6)a.6I(i--,1)}).5n()}});H A=G(b,c,a){9(!b)I;H q=E.M(b,c+\"3L\");9(!q||a)q=E.M(b,c+\"3L\",a?E.2h(a):[]);I q};E.1b.5n=G(a){a=a||\"2j\";I 6.N(G(){H q=A(6,a);q.44();9(q.K)q[0].16(6)})};E.1k({6D:G(b,a,c){H d=b&&b.1c==8Z?b:{1l:c||!c&&a||E.1n(b)&&b,2e:b,3J:c&&a||a&&a.1c!=8Y&&a};d.2e=(d.2e&&d.2e.1c==4W?d.2e:{8X:8W,8V:6N}[d.2e])||8T;d.3r=d.1l;d.1l=G(){E(6).5n();9(E.1n(d.3r))d.3r.16(6)};I d},3J:{6B:G(p,n,b,a){I b+a*p},5q:G(p,n,b,a){I((-38.9s(p*38.8R)/2)+0.5)*a+b}},32:[],2j:G(b,c,a){6.Y=c;6.T=b;6.1e=a;9(!c.3P)c.3P={}}});E.2j.3A={4r:G(){9(6.Y.2F)6.Y.2F.16(6.T,[6.2v,6]);(E.2j.2F[6.1e]||E.2j.2F.6z)(6);9(6.1e==\"1H\"||6.1e==\"2N\")6.T.R.19=\"2Z\"},2b:G(a){9(6.T[6.1e]!=S&&6.T.R[6.1e]==S)I 6.T[6.1e];H r=3I(E.3C(6.T,6.1e,a));I r&&r>-8O?r:3I(E.17(6.T,6.1e))||0},3N:G(c,b,e){6.5u=(1u 3D()).3B();6.1O=c;6.2D=b;6.2i=e||6.2i||\"2T\";6.2v=6.1O;6.4q=6.4i=0;6.4r();H f=6;G t(){I f.2F()}t.T=6.T;E.32.1a(t);9(E.32.K==1){H d=4j(G(){H a=E.32;L(H i=0;i<a.K;i++)9(!a[i]())a.6I(i--,1);9(!a.K)4A(d)},13)}},1A:G(){6.Y.3P[6.1e]=E.1x(6.T.R,6.1e);6.Y.1A=Q;6.3N(0,6.2b());9(6.1e==\"2N\"||6.1e==\"1H\")6.T.R[6.1e]=\"8N\";E(6.T).1A()},1z:G(){6.Y.3P[6.1e]=E.1x(6.T.R,6.1e);6.Y.1z=Q;6.3N(6.2b(),0)},2F:G(){H t=(1u 3D()).3B();9(t>6.Y.2e+6.5u){6.2v=6.2D;6.4q=6.4i=1;6.4r();6.Y.3M[6.1e]=Q;H a=Q;L(H i 1i 6.Y.3M)9(6.Y.3M[i]!==Q)a=P;9(a){9(6.Y.19!=S){6.T.R.2U=6.Y.2U;6.T.R.19=6.Y.19;9(E.17(6.T,\"19\")==\"2s\")6.T.R.19=\"2Z\"}9(6.Y.1z)6.T.R.19=\"2s\";9(6.Y.1z||6.Y.1A)L(H p 1i 6.Y.3M)E.1x(6.T.R,p,6.Y.3P[p])}9(a&&E.1n(6.Y.1l))6.Y.1l.16(6.T);I P}J{H n=t-6.5u;6.4i=n/6.Y.2e;6.4q=E.3J[6.Y.3J||(E.3J.5q?\"5q\":\"6B\")](6.4i,n,0,1,6.Y.2e);6.2v=6.1O+((6.2D-6.1O)*6.4q);6.4r()}I Q}};E.2j.2F={2R:G(a){a.T.2R=a.2v},2B:G(a){a.T.2B=a.2v},1r:G(a){E.1x(a.T.R,\"1r\",a.2v)},6z:G(a){a.T.R[a.1e]=a.2v+a.2i}};E.1b.6m=G(){H c=0,3E=0,T=6[0],5t;9(T)8L(E.V){H b=E.17(T,\"2X\")==\"4F\",1D=T.12,23=T.23,2K=T.3H,4f=1N&&3x(4s)<8J;9(T.6V){5w=T.6V();1f(5w.1S+38.33(2K.2V.2R,2K.1G.2R),5w.3E+38.33(2K.2V.2B,2K.1G.2B));9(1h){H d=E(\"4o\").17(\"8H\");d=(d==\"8G\"||E.5g&&3x(4s)>=7)&&2||d;1f(-d,-d)}}J{1f(T.5l,T.5z);1W(23){1f(23.5l,23.5z);9(35&&/^t[d|h]$/i.14(1D.37)||!4f)d(23);9(4f&&!b&&E.17(23,\"2X\")==\"4F\")b=Q;23=23.23}1W(1D.37&&!/^1G|4o$/i.14(1D.37)){9(!/^8D|1I-9S.*$/i.14(E.17(1D,\"19\")))1f(-1D.2R,-1D.2B);9(35&&E.17(1D,\"2U\")!=\"3R\")d(1D);1D=1D.12}9(4f&&b)1f(-2K.1G.5l,-2K.1G.5z)}5t={3E:3E,1S:c}}I 5t;G d(a){1f(E.17(a,\"9T\"),E.17(a,\"8A\"))}G 1f(l,t){c+=3x(l)||0;3E+=3x(t)||0}}})();',62,616,'||||||this|||if|||||||||||||||||||||||||||||||||function|var|return|else|length|for|data|each|type|false|true|style|null|elem|document|browser|undefined||options|||nodeName|parentNode||test|jQuery|apply|css|window|display|push|fn|constructor|url|prop|add|indexOf|msie|in|event|extend|complete|typeof|isFunction|className|replace|arguments|opacity|div|match|new|status|firstChild|attr|nodeType|hide|show|Array|success|parent|filter|trigger|body|height|table|script|tbody|cache|string|safari|start|hidden|value|merge|left|break|animate|dataType|while|map|find|global||get|id|offsetParent|select|toggle|selected|toUpperCase|remove|catch|try|cur|al|ready|duration|done|text|makeArray|unit|fx|swap|split|target||pushStack|toLowerCase|nextSibling|button|none|handle|guid|now|stack|tb|jsre|timeout|inArray|scrollTop|readyState|end|delete|step|one|name|nth|slice|doc|ret|preventDefault|width|call|events|checked|scrollLeft|exec|px|overflow|documentElement|grep|position|form|block|removeData|rl|timers|max|opera|mozilla|trim|tagName|Math|load|param|removeChild|disabled|insertBefore|async|encodeURIComponent|append|oldblock|val|childNodes|src|readyList|multiFilter|color|defaultView|stopPropagation|args|old|toString|is|last|first|eval|parseInt|self|domManip|prototype|getTime|curCSS|Date|top||ajax|ownerDocument|parseFloat|easing|has|queue|curAnim|custom|innerHTML|orig|currentStyle|visible|getElementById|isReady|error|static|bind|String|which|getComputedStyle|responseText|oWidth|oHeight|on|shift|json|child|RegExp|ol|lastModified|isXMLDoc|jsonp|jquery|previousSibling|dir|safari2|el|styleFloat|state|setInterval|radio|getElementsByTagName|tr|empty|html|getAttribute|pos|update|version|input|float|runtimeStyle|unshift|mouseover|getPropertyValue|GET|clearInterval|safariTimer|visibility|clean|__ie_init|absolute|handleHover|lastToggle|index|fromElement|relatedTarget|click|fix|evt|andSelf|removeEventListener|handler|cloneNode|addEventListener|triggered|nodeIndex|unique|Number|classFilter|prevObject|selectedIndex|after|submit|password|removeAttribute|file|expr|setTimeout|_|appendChild|ajaxSettings|client|active|win|sibling|deep|globalEval|boxModel|cssFloat|object|checkbox|parsererror|offsetLeft|wrapAll|dequeue|props|lastChild|swing|handleError|getResponseHeader|results|startTime|00|box|Modified|ifModified|offsetTop|evalScript|createElement|setRequestHeader|ctrlKey|callback|metaKey|contentType|ajaxSend|ajaxSuccess|ajaxError|ajaxStop|ajaxStart|serializeArray|init|notmodified|POST|loaded|appendTo|DOMContentLoaded|bindReady|mouseout|not|removeAttr|unbind|unload|Width|keyCode|charCode|onreadystatechange|clientX|pageX|srcElement|join|outerHTML|substr|zoom|parse|textarea|reset|image|odd|even|before|quickClass|quickID|prepend|quickChild|execScript|offset|scroll|processData|uuid|contents|continue|textContent|ajaxComplete|clone|setArray|webkit|nodeValue|fl|_default|100|linear|href|speed|eq|createTextNode|throw|replaceWith|splice|_toggle|xml|colgroup|304|200|alpha|Last|httpData|httpNotModified|httpSuccess|fieldset|beforeSend|getBoundingClientRect|XMLHttpRequest|ActiveXObject|col|br|abbr|pixelLeft|urlencoded|www|application|ajaxSetup|post|getJSON|getScript|elements|serialize|clientWidth|hasClass|scr|clientHeight|write|relative|keyup|keypress|keydown|change|mousemove|mouseup|mousedown|right|dblclick|resize|focus|blur|frames|instanceof|hover|offsetWidth|triggerHandler|ipt|defer|offsetHeight|border|padding|clientY|pageY|Left|Right|toElement|Bottom|Top|cancelBubble|returnValue|detachEvent|attachEvent|substring|line|weight|animated|header|font|enabled|innerText|contains|only|size|gt|lt|uFFFF|u0128|417|inner|Height|toggleClass|removeClass|addClass|replaceAll|noConflict|insertAfter|prependTo|wrap|contentWindow|contentDocument|http|iframe|children|siblings|prevAll|nextAll|wrapInner|prev|Boolean|next|parents|maxLength|maxlength|readOnly|readonly|class|htmlFor|CSS1Compat|compatMode|compatible|borderTopWidth|ie|ra|inline|it|rv|medium|borderWidth|userAgent|522|navigator|with|concat|1px|10000|array|ig|PI|NaN|400|reverse|fast|600|slow|Function|Object|setAttribute|changed|be|can|property|fadeTo|fadeOut|getAttributeNode|fadeIn|slideToggle|method|slideUp|slideDown|action|cssText|stop|responseXML|option|content|300|th|protocol|td|location|send|cap|abort|colg|cos|tfoot|thead|With|leg|Requested|opt|GMT|1970|Jan|01|Thu|area|Since|hr|If|Type|Content|meta|specified|open|link|XMLHTTP|Microsoft|img|onload|row|borderLeftWidth|head|attributes'.split('|'),0,{});\n\
+\n\
+/*\n\
+    Copyright (c) 2004-2007, The Dojo Foundation\n\
+    All Rights Reserved.\n\
+\n\
+    Licensed under the Academic Free License version 2.1 or above OR the\n\
+    modified BSD license. For more information on Dojo licensing, see:\n\
+\n\
+        http://dojotoolkit.org/community/licensing.shtml\n\
+*/\n\
+\n\
+/*\n\
+    This is a compiled version of Dojo, built for deployment and not for\n\
+    development. To get an editable version, please visit:\n\
+\n\
+        http://dojotoolkit.org\n\
+\n\
+    for documentation and information on getting the source.\n\
+*/\n\
+\n\
+var decompressedDojo = function(p,a,c,k,e,d){e=function(c){return(c<a?\"\":e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)d[e(c)]=k[c]||e(c);k=[function(e){return d[e]}];e=function(){return'\\\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c]);return p}('if(V z==\"1k\"){(B(){if(V D[\"1o\"]==\"1k\"){D.1o={}}if((!D[\"1z\"])||(!1z[\"ca\"])){D.1z={}}A cn=[\"rA\",\"rz\",\"1K\",\"ry\",\"rx\",\"9f\",\"rw\",\"rv\",\"ru\",\"rt\",\"rs\",\"rr\",\"rq\",\"ro\",\"rn\",\"rm\"];A i=0,24;1s(24=cn[i++]){if(!1z[24]){1z[24]=B(){}}}if(V D[\"z\"]==\"1k\"){D.z={}}z.1W=D;A d3={im:U,rl:U,rk:\"\",rj:\"\",ri:\"\",rh:K,rg:U};R(A 8z in d3){if(V 1o[8z]==\"1k\"){1o[8z]=d3[8z]}}A jK=[\"rf\",\"rd\",\"rc\",\"rb\"];A t;1s(t=jK.3a()){z[\"is\"+t]=U}})();z.8h=1o.8h;z.cY={jJ:0,jI:9,jH:0,jG:\"\",jF:2V(\"$ra: r9 $\".1f(/[0-9]+/)[0]),2i:B(){4G(z.cY){C jJ+\".\"+jI+\".\"+jH+jG+\" (\"+jF+\")\"}}};z.d1=B(jE,jD,1V){A 2h=1V||z.1W;R(A i=0,p;2h&&(p=jE[i]);i++){2h=(p in 2h?2h[p]:(jD?2h[p]={}:1k))}C 2h};z.88=B(jC,jA,jB){A d2=jC.1A(\".\"),p=d2.8q(),M=z.d1(d2,K,jB);C(M&&p?(M[p]=jA):1k)};z.6q=B(jz,jy,jx){C z.d1(jz.1A(\".\"),jy,jx)};z.r8=B(jw,M){C!!z.6q(jw,U,M)};z[\"3u\"]=B(d0){C z.1W.3u?z.1W.3u(d0):3u(d0)};z.ia=B(jv,cZ,cX){A 8y=\"r7: \"+jv;if(cZ){8y+=\" \"+cZ}if(cX){8y+=\" -- r6 be r5 in cY: \"+cX}1z.1K(8y)};z.r4=B(ju,cW){A cV=\"r3: \"+ju+\" -- r2 r1 4F r0 qZ qY.\";if(cW){cV+=\" \"+cW}1z.1K(cV)};(B(){A cR={53:{},6p:0,1h:{},8k:{z:{1p:\"z\",1Z:\".\"},cU:{1p:\"cU\",1Z:\"../qX/cU\"},cT:{1p:\"cT\",1Z:\"cT\"}},cN:B(cS){A mp=D.8k;C jp(mp[cS]&&mp[cS].1Z)},jk:B(8x){A mp=D.8k;if(D.cN(8x)){C mp[8x].1Z}C 8x},8v:[],6t:U,56:[],8t:[],8u:U};R(A cQ in cR){z[cQ]=cR[cQ]}})();z.jg=B(8w,cP,cb){A 1g=(((8w.2s(0)==\"/\"||8w.1f(/^\\\\w+:/)))?\"\":D.51)+8w;if(1o.jt&&z.c8){1g+=\"?\"+67(1o.jt).2f(/\\\\W+/g,\"\")}1u{C!cP?D.cO(1g,cb):D.jq(1g,cP,cb)}1y(e){1z.1K(e);C U}};z.cO=B(1g,cb){if(D.8v[1g]){C K}A 6u=D.iR(1g,K);if(!6u){C U}D.8v[1g]=K;D.8v.Y(1g);if(cb){6u=\"(\"+6u+\")\"}A jr=z[\"3u\"](6u+\"\\\\r\\\\n//@ qW=\"+1g);if(cb){cb(jr)}C K};z.jq=B(1g,jo,cb){A ok=U;1u{ok=D.cO(1g,cb)}1y(e){1z.1K(\"qV je \",1g,\" 4G 9f: \",e)}C jp(ok&&D.53[jo])};z.6m=B(){D.8u=K;D.6t=K;A 57=D.56;D.56=[];R(A x=0;x<57.G;x++){57[x]()}D.8u=U;if(z.6t&&z.6p==0&&D.56.G>0){z.8s()}};z.ck=B(){A 57=D.8t;1s(57.G){(57.8q())()}};z.qU=B(M,jn){A d=z;if(P.G==1){d.56.Y(M)}I{if(P.G>1){d.56.Y(B(){M[jn]()})}}if(d.6t&&d.6p==0&&!d.8u){d.8s()}};z.dW=B(M,jm){A d=z;if(P.G==1){d.8t.Y(M)}I{if(P.G>1){d.8t.Y(B(){M[jm]()})}}};z.iM=B(){if(D.6t){C}if(D.6p>0){1z.1K(\"qT qS in qR!\");C}z.8s()};z.8s=B(){if(V 5c==\"8b\"||(1o[\"qQ\"]&&z.2M)){5c(\"z.6m();\",0)}I{z.6m()}};z.cF=B(jl){A 4v=jl.1A(\".\");R(A i=4v.G;i>0;i--){A 8r=4v.2w(0,i).22(\".\");if((i==1)&&!D.cN(8r)){4v[0]=\"../\"+4v[0]}I{A cM=D.jk(8r);if(cM!=8r){4v.3S(0,i,cM);3f}}}C 4v};z.jj=U;z.8m=B(2T,qP,55){55=D.jj||55;A 54=D.53[2T];if(54){C 54}A cL=2T.1A(\".\");A 3L=D.cF(2T);A jh=((3L[0].2s(0)!=\"/\")&&!3L[0].1f(/^\\\\w+:/));A ji=3L[3L.G-1];A 3m;if(ji==\"*\"){2T=cL.2w(0,-1).22(\".\");3L.8q();3m=3L.22(\"/\")+\"/\"+(1o[\"qO\"]||\"qN\")+\".js\";if(jh&&3m.2s(0)==\"/\"){3m=3m.2w(1)}}I{3m=3L.22(\"/\")+\".js\";2T=cL.22(\".\")}A jf=(!55)?2T:L;A ok=D.jg(3m,jf);if((!ok)&&(!55)){2m S 1O(\"qM 3O 4E \\'\"+2T+\"\\'; 72 qL \\'\"+3m+\"\\'\")}if((!55)&&(!D[\"qK\"])){54=D.53[2T];if(!54){2m S 1O(\"qJ \\'\"+2T+\"\\' is 3O qI a8 je \\'\"+3m+\"\\'\")}}C 54};z.8c=z.8m;z.1Q=B(cK){A cJ=cK+\"\";A 8p=cJ;A 6s=cK.1A(/\\\\./);if(6s[6s.G-1]==\"*\"){6s.8q();8p=6s.22(\".\")}A 8o=z.6q(8p,K);D.53[cJ]=8o;D.53[8p]=8o;C 8o};z.qH=B(8n){A jd=8n[\"qG\"]||[];A cI=jd.3U(8n[z.j4]||8n[\"aY\"]||[]);R(A x=0;x<cI.G;x++){A 8l=cI[x];if(8l.1P==4e){z.8m.14(z,8l)}I{z.8m(8l)}}};z.jb=B(jc,qF){if(jc===K){A cH=[];R(A i=1;i<P.G;i++){cH.Y(P[i])}z.8c.14(z,cH)}};z.qE=z.jb;z.io=B(cG,ja){D.8k[cG]={1p:cG,1Z:ja}};z.qD=B(qC,qB,qA,qz){z.8c(\"z.j9\");z.j9.qy.14(z.qx,P)};(B(){A j7=S 9G(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\\\\\?([^#]*))?(#(.*))?$\");A j6=S 9G(\"^((([^:]+:)?([^@]+))@)?([^:]*)(:([0-9]+))?$\");z.4r=B(){A n=L;A 1V=P;A 1g=1V[0];R(A i=1;i<1V.G;i++){if(!1V[i]){6c}A 1t=S z.4r(1V[i]+\"\");A 4u=S z.4r(1g+\"\");if((1t.28==\"\")&&(!1t.4t)&&(!1t.3l)&&(!1t.1r)){if(1t.52!=n){4u.52=1t.52}1t=4u}I{if(!1t.4t){1t.4t=4u.4t;if(!1t.3l){1t.3l=4u.3l;if(1t.28.2s(0)!=\"/\"){A j8=4u.28.21(0,4u.28.31(\"/\")+1)+1t.28;A 1X=j8.1A(\"/\");R(A j=0;j<1X.G;j++){if(1X[j]==\".\"){if(j==1X.G-1){1X[j]=\"\"}I{1X.3S(j,1);j--}}I{if(j>0&&!(j==1&&1X[0]==\"\")&&1X[j]==\"..\"&&1X[j-1]!=\"..\"){if(j==(1X.G-1)){1X.3S(j,1);1X[j-1]=\"\"}I{1X.3S(j-1,2);j-=2}}}}1t.28=1X.22(\"/\")}}}}1g=\"\";if(1t.4t){1g+=1t.4t+\":\"}if(1t.3l){1g+=\"//\"+1t.3l}1g+=1t.28;if(1t.1r){1g+=\"?\"+1t.1r}if(1t.52){1g+=\"#\"+1t.52}}D.1g=1g.2i();A r=D.1g.1f(j7);D.4t=r[2]||(r[1]?\"\":n);D.3l=r[4]||(r[3]?\"\":n);D.28=r[5];D.1r=r[7]||(r[6]?\"\":n);D.52=r[9]||(r[8]?\"\":n);if(D.3l!=n){r=D.3l.1f(j6);D.8X=r[3]||n;D.8W=r[4]||n;D.qw=r[5];D.qv=r[7]||n}};z.4r.1C.2i=B(){C D.1g}})();z.qu=B(j5,2E){A 2B=z.cF(j5).22(\"/\");if(!2B){C L}if(2B.31(\"/\")!=2B.G-1){2B+=\"/\"}A cE=2B.T(\":\");if(2B.2s(0)!=\"/\"&&(cE==-1||cE>2B.T(\"/\"))){2B=z.51+2B}C S z.4r(2B,2E)};if(V 26!=\"1k\"){z.c8=K;z.j4=\"qt\";(B(){A d=z;if(1q&&1q.4I){A 8j=1q.4I(\"ak\");A j3=/z(\\\\.qs)?\\\\.js([\\\\?\\\\.]|$)/i;R(A i=0;i<8j.G;i++){A 4X=8j[i].5t(\"4X\");if(!4X){6c}A m=4X.1f(j3);if(m){if(!1o[\"51\"]){1o[\"51\"]=4X.21(0,m.hK)}A cD=8j[i].5t(\"1o\");if(cD){A cC=3u(\"({ \"+cD+\" })\");R(A x in cC){1o[x]=cC[x]}}3f}}}d.51=1o[\"51\"];A n=cq;A 8i=n.iL;A 4Z=n.qr;A 6r=2k(4Z);d.2M=(8i.T(\"qq\")>=0)?6r:0;d.6B=(4Z.T(\"qo\")>=0)||(4Z.T(\"j2\")>=0)?6r:0;d.3o=(4Z.T(\"j2\")>=0)?6r:0;A j1=8i.T(\"qn\");d.gu=d.7B=((j1>=0)&&(!d.6B))?6r:0;d.j0=0;d.1l=0;d.iV=0;1u{if(d.7B){d.j0=2k(8i.1A(\"qm/\")[1].1A(\" \")[0])}if((1q.gx)&&(!d.2M)){d.1l=2k(4Z.1A(\"qk \")[1].1A(\";\")[0])}}1y(e){}if(z.1l&&(26.8f.cu===\"9q:\")){1o.iT=K}d.iX=B(){A 2A;A qj;A cB=d.6q(\"cz.cy\");if(cB){C cB}if(V iZ!=\"1k\"){2A=S iZ()}I{if(d.1l){1u{2A=S 9j(\"qi.qh\")}1y(e){}}I{if(cq.qg[\"8Z/x-iY\"]){2A=1q.a9(\"8b\");2A.cA(\"Z\",\"8Z/x-iY\");2A.cA(\"3n\",0);2A.cA(\"58\",0);2A.1c.gq=\"7C\";1q.5K.4c(2A)}}}if(!2A){C L}z.88(\"cz.cy.qf\",2A);C z.6q(\"cz.cy\")};A iW=d.iX();if(iW){d.iV=K}A cm=1q[\"aX\"];d.qe=(cm==\"aW\")||(cm==\"gr\")||(d.1l<6);d.8h=1o.8h||(d.1l?n.qd:n.qc).1M();d.qb=1z.1K;d.cx=[\"iU.8g\",\"em.8g\",\"iU.8g.4.0\"];d.9b=B(){A 4s=L;A cv=L;if(!z.1l||!1o.iT){1u{4s=S qa()}1y(e){}}if(!4s){R(A i=0;i<3;++i){A cw=z.cx[i];1u{4s=S 9j(cw)}1y(e){cv=e}if(4s){z.cx=[cw];3f}}}if(!4s){2m S 1O(\"8g 3O q9: \"+cv)}C 4s};d.8Y=B(iS){A 4Y=iS.3N||0;C((4Y>=q8)&&(4Y<q7))||(4Y==q6)||(4Y==q5)||(!4Y&&(8f.cu==\"9q:\"||8f.cu==\"q4:\"))};A cs=1q.4I(\"q3\");A iQ=(cs&&cs.G>0);d.iR=B(1g,iP){A 3K=D.9b();if(!iQ&&z.4r){1g=(S z.4r(26.8f,1g)).2i()}3K.dL(\"dD\",1g,U);1u{3K.dI(L);if(!d.8Y(3K)){A 1G=1O(\"q2 4F 4E \"+1g+\" 3N:\"+3K.3N);1G.3N=3K.3N;1G.2G=3K.2G;2m 1G}}1y(e){if(iP){C L}2m e}C 3K.2G}})();z.iO=U;z.6o=B(e){z.iO=K;A cr=(e&&e.Z)?e.Z.1M():\"4E\";if(P.2O.iN||(cr!=\"q1\"&&cr!=\"4E\")){C}P.2O.iN=K;if(V z[\"8e\"]!=\"1k\"){dX(z.8e);63 z.8e}if(z.6p==0){z.iM()}};if(1q.66){if(z.2M||(z.7B&&(1o[\"q0\"]===K))){1q.66(\"pZ\",z.6o,L)}26.66(\"4E\",z.6o,L)}if(/(pY|pX)/i.6Z(cq.iL)){z.8e=dN(B(){if(/6m|iJ/.6Z(1q.6F)){z.6o()}},10)}(B(){A 3g=26;A 8d=B(cp,fp){A iK=3g[cp]||B(){};3g[cp]=B(){fp.14(3g,P);iK.14(3g,P)}};if(z.1l){1q.fJ(\"<iI\"+\"iH pW 4X=\\\\\"//:\\\\\" \"+\"pV=\\\\\"if(D.6F==\\'iJ\\'){z.6o();}\\\\\">\"+\"</iI\"+\"iH>\");A co=K;8d(\"iG\",B(){3g.5c(B(){co=U},0)});8d(\"pU\",B(){if(co){z.ck()}});1u{1q.pT.2P(\"v\",\"pS:pR-pQ-pP:pO\");1q.pN().pM(\"v\\\\\\\\:*\",\"pL:2E(#aY#pK)\")}1y(e){}}I{8d(\"iG\",B(){z.ck()})}})();z.pJ=B(){};z.1e=26[\"1q\"]||L;z.3E=B(){C z.1e.3E||z.1e.4I(\"3E\")[0]};z.ch=B(iF,iE){z.1W=iF;z.1e=iE};z.cf=B(4q,6n,iD){if((6n)&&((V 4q==\"3c\")||(4q 1N 67))){4q=6n[4q]}C(6n?4q.14(6n,iD||[]):4q())};z.pI=B(cj,iC,iB,iA){A cg;A iz=z.1W;A iy=z.1e;1u{z.ch(cj,cj.1q);cg=z.cf(iC,iB,iA)}ir{z.ch(iz,iy)}C cg};z.pH=B(ix,iw,iv,iu){A ce;A ip=z.1e;1u{z.1e=ix;ce=z.cf(iw,iv,iu)}ir{z.1e=ip}C ce};if(1o[\"cd\"]){R(A cc in 1o[\"cd\"]){z.io(cc,1o[\"cd\"][cc])}}}if(1o.im){if(!1z.ca){z.8c(\"z.pG.ca\")}}}if(!z.1h[\"z.X.c9\"]){z.1h[\"z.X.c9\"]=K;z.1Q(\"z.X.c9\");z.1R=B(it){C(V it==\"3c\"||it 1N 67)};z.2l=B(it){C(it&&it 1N 4e||V it==\"6a\"||((V z[\"1H\"]!=\"1k\")&&(it 1N z.1H)))};if(z.c8&&z.3o){z.1Y=B(it){if((V(it)==\"B\")&&(it==\"[8b 1H]\")){C U}C(V it==\"B\"||it 1N bI)}}I{z.1Y=B(it){C(V it==\"B\"||it 1N bI)}}z.ib=B(it){if(V it==\"1k\"){C U}C(it===L||V it==\"8b\"||z.2l(it)||z.1Y(it))};z.pF=B(it){A d=z;if((!it)||(V it==\"1k\")){C U}if(d.1R(it)){C U}if(d.1Y(it)){C U}if(d.2l(it)){C K}if((it.5w)&&(it.5w.1M()==\"3R\")){C U}if(pE(it.G)){C K}C U};z.pD=B(it){if(!it){C U}C!z.1Y(it)&&/\\\\{\\\\s*\\\\[il 5h\\\\]\\\\s*\\\\}/.6Z(67(it))};z.c7=B(M,4W){A 8a={};R(A x in 4W){if((V 8a[x]==\"1k\")||(8a[x]!=4W[x])){M[x]=4W[x]}}if(z.1l){A p=4W.2i;if((V(p)==\"B\")&&(p!=M.2i)&&(p!=8a.2i)&&(p!=\"\\\\pC 2i() {\\\\n    [il 5h]\\\\n}\\\\n\")){M.2i=4W.2i}}C M};z.1x=B(M,pB){R(A i=1,l=P.G;i<l;i++){z.c7(M,P[i])}C M};z.4M=B(c6,pA){R(A i=1,l=P.G;i<l;i++){z.c7(c6.1C,P[i])}C c6};z.ig=B(c5,89){A ij=z.4d(P,2);A ik=z.1R(89);C B(){A ih=z.4d(P);A f=(ik?(c5||z.1W)[89]:89);C(f)&&(f.14(c5||D,ij.3U(ih)))}};z.2p=B(2z,3k){if(P.G>2){C z.ig.14(z,P)}if(!3k){3k=2z;2z=L}if(z.1R(3k)){2z=2z||z.1W;if(!2z[3k]){2m([\"z.2p: ie[\\\\\"\",3k,\"\\\\\"] is L (ie=\\\\\"\",2z,\"\\\\\")\"].22(\"\"))}C B(){C 2z[3k].14(2z,P||[])}}I{C(!2z?3k:B(){C 3k.14(2z,P||[])})}};z.6j=B(M,c3){B c4(){};c4.1C=M;A c2=S c4();if(c3){z.1x(c2,c3)}C c2};z.7X=B(pz){A Q=[L];C z.2p.14(z,Q.3U(z.4d(P)))};z.4d=B(M,ic){A Q=[];R(A x=ic||0;x<M.G;x++){Q.Y(M[x])}C Q};z.c1=B(o){if(!o){C o}if(z.2l(o)){A r=[];R(A i=0;i<o.G;++i){r.Y(z.c1(o[i]))}C r}I{if(z.ib(o)){if(o.2t&&o.a7){C o.a7(K)}I{A r=S o.1P();R(A i in o){if(!(i in r)||r[i]!=o[i]){r[i]=z.c1(o[i])}}C r}}}C o};z.7g=B(2H){C 2H.2f(/^\\\\s\\\\s*/,\"\").2f(/\\\\s\\\\s*$/,\"\")}}if(!z.1h[\"z.X.2r\"]){z.1h[\"z.X.2r\"]=K;z.1Q(\"z.X.2r\");z.2r=B(6l,4p,3j){if(z.1Y(3j)||(P.G>3)){z.ia(\"z.2r: R 9P \\'\"+6l+\"\\' py pw B as \\'1P\\' pv pu of as a pt i3.\",\"\",\"1.0\");A c=3j;3j=P[3]||{};3j.1P=c}A dd=P.2O,4V=L;if(z.2l(4p)){4V=4p;4p=4V.3a()}if(4V){R(A i=0,m;i<4V.G;i++){m=4V[i];if(!m){2m(\"ps #\"+i+\" 4F pr of \"+6l+\" is L. pq\\'s pp a po pl is 3O 6m.\")}4p=dd.6j(4p,m)}}A i9=(3j||0).1P,6k=dd.6j(4p),fn;R(A i in 3j){if(z.1Y(fn=3j[i])&&(!0[i])){fn.i4=i}}z.4M(6k,{4o:6l,bY:i9,bZ:L},3j||0);6k.1C.1P=6k;C z.88(6l,6k)};z.1x(z.2r,{6j:B(c0,i8){A bp=(c0||0).1C,mp=(i8||0).1C;A 2S=z.2r.i7();z.1x(2S,{84:bp,1x:mp});if(c0){2S.1C=z.6j(bp)}z.4M(2S,z.2r.i6,mp||0,{bY:L});2S.1C.1P=2S;2S.1C.4o=(bp||0).4o+\"pk\"+(mp||0).4o;z.88(2S.1C.4o,2S);C 2S},i7:B(){C B(){D.i5(P)}},i6:{i5:B(86){A c=86.2O,s=c.84,ct=s&&s.1P,m=c.1x,87=m&&m.1P,a=86,ii,fn;if(a[0]){if((fn=a[0][\"bZ\"])){a=fn.14(D,a)||a}}if(fn=c.1C.bZ){a=fn.14(D,a)||a}if(ct&&ct.14){ct.14(D,a)}if(87&&87.14){87.14(D,a)}if(ii=c.1C.bY){ii.14(D,86)}},bX:B(85){A c=D.1P,p,m;1s(c){p=c.84;m=c.1x;if(m==85||(m 1N 85.1P)){C p}if(m&&(m=m.bX(85))){C m}c=p&&p.1P}},6h:B(83,82,bW,6i){A p=bW,c,m,f;do{c=p.1P;m=c.1x;if(m&&(m=D.6h(83,82,m,6i))){C m}if((f=p[83])&&(6i==(f==82))){C p}p=c.84}1s(p);C!6i&&(p=D.bX(bW))&&D.6h(83,82,p,6i)},bU:B(2R,4U,bV){A a=P;if(!z.1R(a[0])){bV=4U;4U=2R;2R=4U.2O.i4}A c=4U.2O,p=D.1P.1C,a=bV||4U,fn,mp;if(D[2R]!=c||p[2R]==c){mp=D.6h(2R,c,p,K);if(!mp){2m(D.4o+\": 1p i3 (\\\\\"\"+2R+\"\\\\\") 4F bU pj 1f 2O (2r.js)\")}p=D.6h(2R,c,mp,U)}fn=p&&p[2R];if(!fn){1z.1K(mp.4o+\": no bU \\\\\"\"+2R+\"\\\\\" ph pg (2r.js)\");C}C fn.14(D,a)}}})}if(!z.1h[\"z.X.2c\"]){z.1h[\"z.X.2c\"]=K;z.1Q(\"z.X.2c\");z.3i={i2:B(){C B(){A ap=4e.1C,c=P.2O,ls=c.2b,t=c.5V;A r=t&&t.14(D,P);R(A i in ls){if(!(i in ap)){ls[i].14(D,P)}}C r}},2P:B(6g,bT,i1){6g=6g||z.1W;A f=6g[bT];if(!f||!f.2b){A d=z.3i.i2();d.5V=f;d.2b=[];f=6g[bT]=d}C f.2b.Y(i1)},3J:B(i0,hZ,bS){A f=(i0||z.1W)[hZ];if(f&&f.2b&&bS--){63 f.2b[bS]}}};z.2c=B(M,pd,pc,pa,p9){A a=P,F=[],i=0;F.Y(z.1R(a[0])?L:a[i++],a[i++]);A a1=a[i+1];F.Y(z.1R(a1)||z.1Y(a1)?a[i++]:L,a[i++]);R(A l=a.G;i<l;i++){F.Y(a[i])}C z.by.14(D,F)};z.by=B(M,bR,hY,hX){A l=z.3i,h=l.2P(M,bR,z.2p(hY,hX));C[M,bR,h,l]};z.p8=B(6f){if(6f&&6f[0]!==1k){z.bv.14(D,6f);63 6f[0]}};z.bv=B(M,hV,hU,hW){hW.3J(M,hV,hU)};z.80={};z.p7=B(bQ,hT,hS){C[bQ,z.3i.2P(z.80,bQ,z.2p(hT,hS))]};z.p6=B(81){if(81){z.3i.3J(z.80,81[0],81[1])}};z.hQ=B(hR,F){A f=z.80[hR];(f)&&(f.14(D,F||[]))};z.p5=B(hP,M,bP){A pf=B(){z.hQ(hP,P)};C(bP)?z.2c(M,bP,pf):z.2c(M,pf)}}if(!z.1h[\"z.X.30\"]){z.1h[\"z.X.30\"]=K;z.1Q(\"z.X.30\");z.30=B(hO){D.bM=[];D.id=D.hN();D.2y=-1;D.3M=0;D.4R=[L,L];D.bO=hO;D.7Z=U};z.4M(z.30,{hN:(B(){A n=1;C B(){C n++}})(),4C:B(){if(D.2y==-1){if(D.bO){D.bO(D)}I{D.7Z=K}if(D.2y==-1){A 1G=S 1O(\"30 p4\");1G.dY=\"4C\";D.5i(1G)}}I{if((D.2y==0)&&(D.4R[0]1N z.30)){D.4R[0].4C()}}},7V:B(1v){D.2y=((1v 1N 1O)?1:0);D.4R[D.2y]=1v;D.7U()},bN:B(){if(D.2y!=-1){if(!D.7Z){2m S 1O(\"p3 p2!\")}D.7Z=U;C}},dM:B(1v){D.bN();D.7V(1v)},5i:B(1v){D.bN();if(!(1v 1N 1O)){1v=S 1O(1v)}D.7V(1v)},9e:B(cb,4T){A 6e=z.2p(cb,4T);if(P.G>2){6e=z.7X(6e,P,2)}C D.5k(6e,6e)},ef:B(cb,4T){A 7Y=z.2p(cb,4T);if(P.G>2){7Y=z.7X(7Y,P,2)}C D.5k(7Y,L)},ed:B(cb,4T){A 7W=z.2p(cb,4T);if(P.G>2){7W=z.7X(7W,P,2)}C D.5k(L,7W)},5k:B(cb,eb){D.bM.Y([cb,eb]);if(D.2y>=0){D.7U()}C D},7U:B(){A bL=D.bM;A 4n=D.2y;A 1v=D.4R[4n];A 4S=D;A cb=L;1s((bL.G>0)&&(D.3M==0)){A f=bL.3a()[4n];if(!f){6c}1u{1v=f(1v);4n=((1v 1N 1O)?1:0);if(1v 1N z.30){cb=B(1v){4S.7V(1v);4S.3M--;if((4S.3M==0)&&(4S.2y>=0)){4S.7U()}};D.3M++}}1y(1G){1z.1K(1G);4n=1;1v=1G}}D.2y=4n;D.4R[4n]=1v;if((cb)&&(D.3M)){1v.9e(cb)}}})}if(!z.1h[\"z.X.2e\"]){z.1h[\"z.X.2e\"]=K;z.1Q(\"z.X.2e\");z.5m=B(2e){1u{C 3u(\"(\"+2e+\")\")}1y(e){1z.1K(e);C 2e}};z.bK=B(2H){C(\"\\\\\"\"+2H.2f(/([\"\\\\\\\\])/g,\"\\\\\\\\$1\")+\"\\\\\"\").2f(/[\\\\f]/g,\"\\\\\\\\f\").2f(/[\\\\b]/g,\"\\\\\\\\b\").2f(/[\\\\n]/g,\"\\\\\\\\n\").2f(/[\\\\t]/g,\"\\\\\\\\t\").2f(/[\\\\r]/g,\"\\\\\\\\r\")};z.hM=\"\\\\t\";z.eq=B(it,4l,4P){4P=4P||\"\";A 4k=(4l?4P+z.hM:\"\");A 6b=(4l?\"\\\\n\":\"\");A 4Q=V(it);if(4Q==\"1k\"){C\"1k\"}I{if((4Q==\"4J\")||(4Q==\"p1\")){C it+\"\"}I{if(it===L){C\"L\"}}}if(4Q==\"3c\"){C z.bK(it)}A 6d=P.2O;A 4m;if(V it.hL==\"B\"){4m=it.hL();if(it!==4m){C 6d(4m,4l,4k)}}if(V it.2e==\"B\"){4m=it.2e();if(it!==4m){C 6d(4m,4l,4k)}}if(z.2l(it)){A 1v=[];R(A i=0;i<it.G;i++){A 1U=6d(it[i],4l,4k);if(V(1U)!=\"3c\"){1U=\"1k\"}1v.Y(6b+4k+1U)}C\"[\"+1v.22(\", \")+6b+4P+\"]\"}if(4Q==\"B\"){C L}A bJ=[];R(A 1i in it){A 7T;if(V(1i)==\"4J\"){7T=\"\\\\\"\"+1i+\"\\\\\"\"}I{if(V(1i)==\"3c\"){7T=z.bK(1i)}I{6c}}1U=6d(it[1i],4l,4k);if(V(1U)!=\"3c\"){6c}bJ.Y(6b+4k+7T+\": \"+1U)}C\"{\"+bJ.22(\", \")+6b+4P+\"}\"}}if(!z.1h[\"z.X.6a\"]){z.1h[\"z.X.6a\"]=K;z.1Q(\"z.X.6a\");(B(){A 69=B(Q,M,cb){C[(z.1R(Q)?Q.1A(\"\"):Q),(M||z.1W),(z.1R(cb)?(S bI(\"1m\",\"hK\",\"6a\",cb)):cb)]};z.1x(z,{T:B(bH,hH,hI,hJ){A i=0,2q=1,1d=bH.G;if(hJ){i=1d-1;2q=1d=-1}R(i=hI||i;i!=1d;i+=2q){if(bH[i]==hH){C i}}C-1},31:B(hG,hF,hE){C z.T(hG,hF,hE,K)},1n:B(Q,hD,M){if(!Q||!Q.G){C}A 1I=69(Q,M,hD);Q=1I[0];R(A i=0,l=1I[0].G;i<l;i++){1I[2].2d(1I[1],Q[i],i,Q)}},bE:B(bF,Q,hC,M){A 1I=69(Q,M,hC);Q=1I[0];R(A i=0,l=Q.G;i<l;i++){A bG=!!1I[2].2d(1I[1],Q[i],i,Q);if(bF^bG){C bG}}C bF},ah:B(Q,hB,hA){C D.bE(K,Q,hB,hA)},ag:B(Q,hz,hy){C D.bE(U,Q,hz,hy)},23:B(Q,7t,M){A 1I=69(Q,M,7t);Q=1I[0];A bD=((P[3])?(S P[3]()):[]);R(A i=0;i<Q.G;++i){bD.Y(1I[2].2d(1I[1],Q[i],i,Q))}C bD},3T:B(Q,hx,M){A 1I=69(Q,M,hx);Q=1I[0];A bC=[];R(A i=0;i<Q.G;i++){if(1I[2].2d(1I[1],Q[i],i,Q)){bC.Y(Q[i])}}C bC}})})()}if(!z.1h[\"z.X.1J\"]){z.1h[\"z.X.1J\"]=K;z.1Q(\"z.X.1J\");z.1J=B(bB){if(bB){D.hw(bB)}};z.1J.hp={p0:[0,0,0],oZ:[60,60,60],oY:[2j,2j,2j],oX:[1T,1T,1T],oW:[2j,0,0],oV:[1T,0,0],oU:[2j,0,2j],oT:[1T,0,1T],oS:[0,2j,0],oR:[0,1T,0],oQ:[2j,2j,0],oP:[1T,1T,0],oO:[0,0,2j],oN:[0,0,1T],oM:[0,2j,2j],oL:[0,1T,1T]};z.4M(z.1J,{r:1T,g:1T,b:1T,a:1,bz:B(r,g,b,a){A t=D;t.r=r;t.g=g;t.b=b;t.a=a},hw:B(2Q){A d=z;if(d.1R(2Q)){d.hq(2Q,D)}I{if(d.2l(2Q)){d.7P(2Q,D)}I{D.bz(2Q.r,2Q.g,2Q.b,2Q.a);if(!(2Q 1N d.1J)){D.7Q()}}}C D},7Q:B(){C D},oK:B(){A t=D;C[t.r,t.g,t.b]},oJ:B(){A t=D;C[t.r,t.g,t.b,t.a]},oI:B(){A Q=z.23([\"r\",\"g\",\"b\"],B(x){A s=D[x].2i(16);C s.G<2?\"0\"+s:s},D);C\"#\"+Q.22(\"\")},8F:B(hv){A t=D,7S=t.r+\", \"+t.g+\", \"+t.b;C(hv?\"hs(\"+7S+\", \"+t.a:\"7S(\"+7S)+\")\"},2i:B(){C D.8F(K)}});z.d8=B(bA,1d,hu,M){A d=z,t=M||S z.1J();d.1n([\"r\",\"g\",\"b\",\"a\"],B(x){t[x]=bA[x]+(1d[x]-bA[x])*hu;if(x!=\"a\"){t[x]=2Y.oH(t[x])}});C t.7Q()};z.ho=B(ht,M){A m=ht.1M().1f(/^hs?\\\\(([\\\\s\\\\.,0-9]+)\\\\)/);C m&&z.7P(m[1].1A(/\\\\s*,\\\\s*/),M)};z.hn=B(4j,M){A d=z,t=M||S d.1J(),7R=(4j.G==4)?4:8,hr=(1<<7R)-1;4j=2V(\"oG\"+4j.3b(1));if(2L(4j)){C L}d.1n([\"b\",\"g\",\"r\"],B(x){A c=4j&hr;4j>>=7R;t[x]=7R==4?17*c:c});t.a=1;C t};z.7P=B(a,M){A t=M||S z.1J();t.bz(2V(a[0]),2V(a[1]),2V(a[2]),2V(a[3]));if(2L(t.a)){t.a=1}C t.7Q()};z.hq=B(2H,M){A a=z.1J.hp[2H];C a&&z.7P(a,M)||z.ho(2H,M)||z.hn(2H,M)}}if(!z.1h[\"z.X\"]){z.1h[\"z.X\"]=K;z.1Q(\"z.X\")}if(!z.1h[\"z.X.5Z\"]){z.1h[\"z.X.5Z\"]=K;z.1Q(\"z.X.5Z\");(B(){A 1j=z.b2={2P:B(E,68,fp){if(!E){C}68=1j.4O(68);fp=1j.7G(68,fp);E.66(68,fp,U);C fp},3J:B(E,hm,hl){(E)&&(E.oF(1j.4O(hm),hl,U))},4O:B(1p){C(1p.2w(0,2)==\"on\"?1p.2w(2):1p)},7G:B(1p,fp){C(1p!=\"4b\"?fp:B(e){C fp.2d(D,1j.4i(e,D))})},4i:B(H,oE){4w(H.Z){2X\"4b\":1j.7K(H);3f}C H},7K:B(H){H.oD=(H.3h?67.oC(H.3h):\"\")}};z.oB=B(H,hk){C 1j.4i(H,hk)};z.gY=B(H){H.7J();H.7I()};A 7O=z.3i;z.by=B(M,bx,hh,hg,hi){A hj=M&&(M.2t||M.oA||M.66);A bw=!hj?0:(!hi?1:2),l=[z.3i,1j,7O][bw];A h=l.2P(M,bx,z.2p(hh,hg));C[M,bx,h,bw]};z.bv=B(M,he,hd,hf){([z.3i,1j,7O][hf]).3J(M,he,hd)};z.5W={oz:8,gV:9,oy:12,ox:13,ow:16,ov:17,ou:18,gG:19,ot:20,os:27,or:32,b5:33,b4:34,gE:35,gF:36,b7:37,b9:38,b6:39,b8:40,gD:45,8S:46,oq:47,oo:91,om:92,ol:93,oj:96,oi:97,oh:98,og:99,oe:6D,od:oc,ob:oa,o9:o8,o7:o6,o5:o4,o3:bi,o2:o1,o0:nZ,nY:nX,nW:nV,nU:bk,gS:nT,gR:nS,gQ:nR,gP:nQ,gO:nP,gN:nO,gM:nN,gL:nM,gK:nL,gJ:nK,gI:nJ,gH:nI,nH:nG,nF:nE,nD:nC,gB:nB,gC:nA};if(z.1l){bf=B(e,5h){1u{C(e.3I=5h)}1y(e){C 0}};A 61=z.3i;if(!1o.nz){7O=61=z.gy={b3:[],2P:B(64,bu,hc){64=64||z.1W;A f=64[bu];if(!f||!f.2b){A d=z.gz();d.5V=f&&(7M.Y(f)-1);d.2b=[];f=64[bu]=d}C f.2b.Y(7M.Y(hc)-1)},3J:B(hb,ha,7N){A f=(hb||z.1W)[ha],l=f&&f.2b;if(f&&l&&7N--){63 7M[l[7N]];63 l[7N]}}};A 7M=61.b3}z.1x(1j,{2P:B(E,62,fp){if(!E){C}62=1j.4O(62);if(62==\"h3\"){A kd=E.bs;if(!kd||!kd.2b||!kd.h9){1j.2P(E,\"bs\",1j.h4);E.bs.h9=K}}C 61.2P(E,62,1j.7G(fp))},3J:B(E,h8,h7){61.3J(E,1j.4O(h8),h7)},4O:B(7L){C(7L.2w(0,2)!=\"on\"?\"on\"+7L:7L)},ny:B(){},4i:B(H,4N){if(!H){A w=(4N)&&((4N.aD||4N.1q||4N).nx)||26;H=w.5Z}if(!H){C(H)}H.5V=H.br;H.bh=(4N||H.br);H.nw=H.nv;H.nu=H.nr;A bq=H.br,1e=(bq&&bq.aD)||1q;A bn=((z.1l<6)||(1e[\"aX\"]==\"aW\"))?1e.3E:1e.5K;A bm=z.aB();H.nq=H.np+z.aH(bn.5I||0)-bm.x;H.nn=H.nm+(bn.5G||0)-bm.y;if(H.Z==\"fk\"){H.h6=H.nl}if(H.Z==\"fj\"){H.h6=H.nk}H.7I=1j.bc;H.7J=1j.ba;C 1j.h5(H)},h5:B(H){4w(H.Z){2X\"4b\":A c=(\"3h\"in H?H.3h:H.3I);if(c==10){c=0;H.3I=13}I{if(c==13||c==27){c=0}I{if(c==3){c=99}}}H.3h=c;1j.7K(H);3f}C H},gZ:{bi:42,bk:47,h2:59,nj:43,ni:44,nh:45,ng:46,nf:47,60:96,h1:91,nb:92,na:93,h0:39},h4:B(H){A kp=H.bh.h3;if(!kp||!kp.2b){C}A k=H.3I;A bj=(k!=13)&&(k!=32)&&(k!=27)&&(k<48||k>90)&&(k<96||k>bk)&&(k<h2||k>60)&&(k<h1||k>h0);if(bj||H.5Y){A c=(bj?0:k);if(H.5Y){if(k==3||k==13){C}I{if(c>95&&c<bi){c-=48}I{if((!H.5X)&&(c>=65&&c<=90)){c+=32}I{c=1j.gZ[c]||c}}}}A 2x=1j.7H(H,{Z:\"4b\",2x:K,3h:c});kp.2d(H.bh,2x);H.bg=2x.bg;H.bd=2x.bd;bf(H,2x.3I)}},bc:B(){D.bg=K},ba:B(){D.n9=D.3I;if(D.5Y){bf(D,0)}D.bd=U}});z.gY=B(H){H=H||26.5Z;1j.bc.2d(H);1j.ba.2d(H)}}1j.7H=B(H,gX){A 2x=z.1x({},H,gX);1j.7K(2x);2x.7J=B(){H.7J()};2x.7I=B(){H.7I()};C 2x};if(z.2M){z.1x(1j,{4i:B(H,n8){4w(H.Z){2X\"4b\":A c=H.n7;if(c==3){c=99}c=((c<41)&&(!H.5X)?0:c);if((H.5Y)&&(!H.5X)&&(c>=65)&&(c<=90)){c+=32}C 1j.7H(H,{3h:c})}C H}})}if(z.3o){z.1x(1j,{4i:B(H,n6){4w(H.Z){2X\"4b\":A c=H.3h,s=H.5X,k=H.3I;k=k||gA[H.gW]||0;if(H.gW==\"n5\"){c=0}I{if((H.5Y)&&(c>0)&&(c<27)){c+=96}I{if(c==z.5W.gU){c=z.5W.gV;s=K}I{c=(c>=32&&c<gT?c:0)}}}C 1j.7H(H,{3h:c,5X:s,3I:k})}C H}});z.1x(z.5W,{gU:25,b9:gT,b8:n4,b7:n3,b6:n2,gS:n1,gR:n0,gQ:mZ,gP:mY,gO:mX,gN:mW,gM:mV,gL:mU,gK:mT,gJ:mS,gI:mR,gH:mQ,gG:mP,8S:mO,gF:mN,gE:mM,b5:mL,b4:mK,gD:mJ,mI:mH,gC:mG,gB:mF});A dk=z.5W,gA={\"mE\":dk.b9,\"mD\":dk.b8,\"mC\":dk.b7,\"mB\":dk.b6,\"mA\":dk.b5,\"mz\":dk.b4}}})();if(z.1l){z.gz=B(){C B(){A ap=4e.1C,h=z.gy.b3,c=P.2O,ls=c.2b,t=h[c.5V];A r=t&&t.14(D,P);R(A i in ls){if(!(i in ap)){h[ls[i]].14(D,P)}}C r}};z.b2.7G=B(fp){A f=z.b2.4i;C B(e){C fp.2d(D,f(e,D))}}}}if(!z.1h[\"z.X.b1\"]){z.1h[\"z.X.b1\"]=K;z.1Q(\"z.X.b1\");1u{1q.my(\"mx\",U,K)}1y(e){}if(z.1l||z.2M){z.1D=B(id,1e){if(z.1R(id)){A b0=(1e||z.1e);A 11=b0.gv(id);if((11)&&(11.gw.id.1Z==id)){C 11}I{A 5U=b0.gx[id];if(!5U){C}if(!5U.G){C 5U}A i=0;1s(11=5U[i++]){if(11.gw.id.1Z==id){C 11}}}}I{C id}}}I{z.1D=B(id,1e){if(z.1R(id)){C(1e||z.1e).gv(id)}I{C id}}}(B(){A 5T=L;z.mw=B(E){E=z.1D(E);1u{if(!5T){5T=1q.a9(\"mv\")}5T.4c(E.1L?E.1L.fs(E):E);5T.9L=\"\"}1y(e){}};z.mu=B(E,7F){1u{E=z.1D(E);7F=z.1D(7F);1s(E){if(E===7F){C K}E=E.1L}}1y(e){}C U};z.mt=B(E,5S){E=z.1D(E);if(z.gu){E.1c.ms=(5S)?\"dg\":\"7C\"}I{if(z.6B){E.1c.mr=(5S)?\"8K\":\"7C\"}I{if(z.1l){E.gs=(5S)?\"\":\"on\";z.1r(\"*\",E).1n(B(gt){gt.gs=(5S)?\"\":\"on\"})}}}};A 5R=B(E,4h){4h.1L.mq(E,4h);C K};A aZ=B(E,4h){A pn=4h.1L;if(4h==pn.fm){pn.4c(E)}I{C 5R(E,4h.71)}C K};z.5E=B(E,2a,3H){if((!E)||(!2a)||(V 3H==\"1k\")){C U}E=z.1D(E);2a=z.1D(2a);if(V 3H==\"4J\"){A cn=2a.3W;if(((3H==0)&&(cn.G==0))||(cn.G==3H)){2a.4c(E);C K}if(3H==0){C 5R(E,2a.5A)}C aZ(E,cn[3H-1])}4w(3H.1M()){2X\"mo\":C 5R(E,2a);2X\"a8\":C aZ(E,2a);2X\"9M\":if(2a.5A){C 5R(E,2a.5A)}I{2a.4c(E);C K}3f;aY:2a.4c(E);C K}};z.aP=\"5g-3G\";if(z.1l){A aV=1q.aX;z.aP=(aV==\"aW\")||(aV==\"gr\")||(z.1l<6)?\"g5-3G\":\"5g-3G\"}A 1E,dv=1q.mn;if(z.3o){1E=B(E){A s=dv.3F(E,L);if(!s&&E.1c){E.1c.gq=\"\";s=dv.3F(E,L)}C s||{}}}I{if(z.1l){1E=B(E){C E.gn}}I{1E=B(E){C dv.3F(E,L)}}}z.3F=1E;if(!z.1l){z.4g=B(mm,gp){C 2k(gp)||0}}I{z.4g=B(go,2N){if(!2N){C 0}if(2N==\"ml\"){C 4}if(2N.2w&&(2N.2w(-2)==\"px\")){C 2k(2N)}4G(go){A gm=1c.2g;A gl=aU.2g;aU.2g=gn.2g;1u{1c.2g=2N;2N=1c.mk}1y(e){2N=0}1c.2g=gm;aU.2g=gl}C 2N}}z.ge=(z.1l?B(E){1u{C(E.mj.mi.2W/6D)}1y(e){C 1}}:B(E){C z.3F(E).2W});z.gf=(z.1l?B(E,7D){if(7D==1){E.1c.7E=E.1c.7E.2f(/gk:[^;]*;/i,\"\");if(E.gj.1M()==\"gi\"){z.1r(\"> gh\",E).1n(B(i){i.1c.7E=i.1c.7E.2f(/gk:[^;]*;/i,\"\")})}}I{A o=\"mh(mg=\"+(7D*6D)+\")\";E.1c.3T=o}if(E.gj.1M()==\"gi\"){z.1r(\"> gh\",E).1n(B(i){i.1c.3T=o})}C 7D}:B(E,gg){C E.1c.2W=gg});A 5Q={3n:K,58:K,2g:K,5J:K};A gd=B(E,Z,5P){Z=Z.1M();if(5Q[Z]===K){C z.4g(E,5P)}I{if(5Q[Z]===U){C 5P}I{if((Z.T(\"mf\")>=0)||(Z.T(\"md\")>=0)||(Z.T(\"3n\")>=0)||(Z.T(\"58\")>=0)||(Z.T(\"5q\")>=0)||(Z.T(\"mc\")>=0)||(Z.T(\"ma\")>=0)){5Q[Z]=K;C z.4g(E,5P)}I{5Q[Z]=U;C 5P}}}};z.1c=B(E,5O,aT){A n=z.1D(E),F=P.G,op=(5O==\"2W\");if(F==3){C op?z.gf(n,aT):n.1c[5O]=aT}if(F==2&&op){C z.ge(n)}A s=z.3F(n);C(F==1)?s:gd(n,5O,s[5O])};z.7A=B(n,gc){A s=gc||1E(n),px=z.4g,l=px(n,s.m9),t=px(n,s.m8);C{l:l,t:t,w:l+px(n,s.m7),h:t+px(n,s.m6)}};z.5N=B(n,gb){A ne=\"7C\",px=z.4g,s=gb||1E(n),bl=(s.m5!=ne?px(n,s.m4):0),bt=(s.m3!=ne?px(n,s.m2):0);C{l:bl,t:bt,w:bl+(s.m1!=ne?px(n,s.m0):0),h:bt+(s.lZ!=ne?px(n,s.lY):0)}};z.aN=B(n,ga){A s=ga||1E(n),p=z.7A(n,s),b=z.5N(n,s);C{l:p.l+b.l,t:p.t+b.t,w:p.w+b.w,h:p.h+b.h}};z.aM=B(n,g9){A s=g9||1E(n),px=z.4g,l=px(n,s.lX),t=px(n,s.lW),r=px(n,s.lV),b=px(n,s.lU);if(z.3o&&(s.ax!=\"fU\")){r=l}C{l:l,t:t,w:l+r,h:t+b}};z.au=B(E,g8){A s=g8||1E(E),me=z.aM(E,s);A l=E.fT-me.l,t=E.fS-me.t;if(z.7B){A aS=2k(s.2g),aR=2k(s.5J);if(!2L(aS)&&!2L(aR)){l=aS,t=aR}I{A p=E.1L;if(p&&p.1c){A aQ=1E(p);if(aQ.lT!=\"lS\"){A be=z.5N(p,aQ);l+=be.l,t+=be.t}}}}I{if(z.2M){A p=E.1L;if(p){A be=z.5N(p);l-=be.l,t-=be.t}}}C{l:l,t:t,w:E.6v+me.w,h:E.8D+me.h}};z.aK=B(E,g7){A s=g7||1E(E),pe=z.7A(E,s),be=z.5N(E,s),w=E.aF,h;if(!w){w=E.6v,h=E.8D}I{h=E.lR,be.w=be.h=0}if(z.2M){pe.l+=be.l;pe.t+=be.t}C{l:pe.l,t:pe.t,w:w-pe.w-be.w,h:h-pe.h-be.h}};z.lQ=B(E,g6){A s=g6||1E(E),pe=z.7A(E,s),cb=z.aK(E,s);C{l:cb.l-pe.l,t:cb.t-pe.t,w:cb.w+pe.w,h:cb.h+pe.h}};z.aL=B(E,l,t,w,h,u){u=u||\"px\";4G(E.1c){if(!2L(l)){2g=l+u}if(!2L(t)){5J=t+u}if(w>=0){3n=w+u}if(h>=0){58=h+u}}};z.aO=B(E){A n=E.5w;C(z.aP==\"g5-3G\")||(n==\"lP\")||(n==\"lO\")};z.fX=B(E,7z,7y,g4){A bb=z.aO(E);if(bb){A pb=z.aN(E,g4);if(7z>=0){7z+=pb.w}if(7y>=0){7y+=pb.h}}z.aL(E,g3,g3,7z,7y)};z.fY=B(E,g1,g0,5M,5L,g2){A s=g2||z.3F(E);A bb=z.aO(E),pb=bb?fZ:z.aN(E,s),mb=z.aM(E,s);if(5M>=0){5M=2Y.5q(5M-pb.w-mb.w,0)}if(5L>=0){5L=2Y.5q(5L-pb.h-mb.h,0)}z.aL(E,g1,g0,5M,5L)};A fZ={l:0,t:0,w:0,h:0};z.lN=B(E,3G){A n=z.1D(E),s=1E(n),b=3G;C!b?z.au(n,s):z.fY(n,b.l,b.t,b.w,b.h,s)};z.lM=B(E,3G){A n=z.1D(E),s=1E(n),b=3G;C!b?z.aK(n,s):z.fX(n,b.w,b.h,s)};A 5H=B(E,1a){if(!(E=(E||0).1L)){C 0}A 1U,aJ=0,2h=z.3E();1s(E&&E.1c){if(1E(E).ax==\"lL\"){C 0}1U=E[1a];if(1U){aJ+=1U-0;if(E==2h){3f}}E=E.1L}C aJ};z.fQ=B(){A 2h=z.3E();A 3g=z.1W;A de=z.1e.5K;C{y:(3g.lK||de.5G||2h.5G||0),x:(3g.lJ||z.aH(de.5I)||2h.5I||0)}};z.aG=B(){C V z.aI==\"1k\"?(z.aI=z.3F(z.3E()).lI==\"lH\"):z.aI};z.aB=B(){A de=z.1e.5K;if(z.1l>=7){C{x:de.aC().2g,y:de.aC().5J}}I{C{x:z.aG()||26.am==26?de.fW:de.6v-de.aF-de.fW,y:de.lG}}};z.aH=B(aE){if(z.1l&&!z.aG()){A de=z.1e.5K;C aE+de.aF-de.lF}C aE};z.fP=B(E,aw){A ay=E.aD;A J={x:0,y:0};A 7w=U;A db=z.3E();if(z.1l){A aA=E.aC();A az=z.aB();J.x=aA.2g-az.x;J.y=aA.5J-az.y}I{if(ay[\"fV\"]){A bo=ay.fV(E);J.x=bo.x-5H(E,\"5I\");J.y=bo.y-5H(E,\"5G\")}I{if(E[\"fR\"]){7w=K;A 7x;if(z.3o&&(1E(E).ax==\"fU\")&&(E.1L==db)){7x=db}I{7x=db.1L}if(E.1L!=db){A nd=E;if(z.2M){nd=db}J.x-=5H(nd,\"5I\");J.y-=5H(nd,\"5G\")}A 4f=E;do{A n=4f[\"fT\"];if(!z.2M||n>0){J.x+=2L(n)?0:n}A m=4f[\"fS\"];J.y+=2L(m)?0:m;4f=4f.fR}1s((4f!=7x)&&4f)}I{if(E[\"x\"]&&E[\"y\"]){J.x+=2L(E.x)?0:E.x;J.y+=2L(E.y)?0:E.y}}}}if(7w||aw){A av=z.fQ();A m=7w?(!aw?-1:0):1;J.y+=m*av.y;J.x+=m*av.x}C J};z.af=B(E,fO){A n=z.1D(E),s=1E(n),mb=z.au(n,s);A at=z.fP(n,fO);mb.x=at.x;mb.y=at.y;C mb}})();z.fL=B(E,fN){C((\" \"+E.3A+\" \").T(\" \"+fN+\" \")>=0)};z.7s=B(E,ar){A 7v=E.3A;if((\" \"+7v+\" \").T(\" \"+ar+\" \")<0){E.3A=7v+(7v?\" \":\"\")+ar}};z.7r=B(E,fM){A t=z.7g((\" \"+E.3A+\" \").2f(\" \"+fM+\" \",\" \"));if(E.3A!=t){E.3A=t}};z.lE=B(E,aq,7u){if(V 7u==\"1k\"){7u=!z.fL(E,aq)}z[7u?\"7s\":\"7r\"](E,aq)}}if(!z.1h[\"z.X.1H\"]){z.1h[\"z.X.1H\"]=K;z.1Q(\"z.X.1H\");(B(){A d=z;z.1H=B(){A F=P;if((F.G==1)&&(V F[0]==\"4J\")){D.G=eK(F[0])}I{if(F.G){d.1n(F,B(i){D.Y(i)},D)}}};z.1H.1C=S 4e;if(d.1l){A fK=B(al){C(\"A a2 = am.\"+al+\"; \"+\"A ap = 4e.1C; \"+\"A ao = a2.1C; \"+\"R(A x in ao){ ap[x] = ao[x]; } \"+\"am.\"+al+\" = 4e; \")};A fI=fK(\"z.1H\");A aj=26.lD();aj.1q.fJ(\"<ak>\"+fI+\"</ak>\");aj.lC(1,1,1,1)}z.4M(z.1H,{T:B(fH,fG){C d.T(D,fH,fG)},31:B(lB,lA){A aa=d.4d(P);aa.ae(D);C d.31.14(d,aa)},ah:B(fF,fE){C d.ah(D,fF,fE)},ag:B(fD,fC){C d.ag(D,fD,fC)},1n:B(fB,fA){d.1n(D,fB,fA);C D},23:B(7t,M){C d.23(D,7t,M,d.1H)},af:B(){C d.23(D,d.af)},1c:B(lz,ly){A aa=d.4d(P);aa.ae(D[0]);A s=d.1c.14(d,aa);C(P.G>1)?D:s},lx:B(lw,lv){A aa=d.4d(P);aa.ae(L);A s=D.23(B(i){aa[0]=i;C d.1c.14(d,aa)});C(P.G>1)?D:s},7s:B(fz){C D.1n(B(i){z.7s(i,fz)})},7r:B(fy){C D.1n(B(i){z.7r(i,fy)})},5E:B(fw,7q){A 1m=d.1r(fw)[0];7q=7q||\"72\";R(A x=0;x<D.G;x++){d.5E(D[x],1m,7q)}C D},2c:B(fv,fu,ft){D.1n(B(1m){d.2c(1m,fv,fu,ft)});C D},lu:B(ad){A ac=(ad)?d.9t(D,ad):D;ac.1n(B(1m){if(1m[\"1L\"]){1m.1L.fs(1m)}});C ac},lt:B(fr,fq){A 1m=D[0];C d.1r(fr).1n(B(ai){d.5E(ai,1m,(fq||\"72\"))})},1r:B(7p){7p=7p||\"\";A J=S d.1H();D.1n(B(1m){d.1r(7p,1m).1n(B(ab){if(V ab!=\"1k\"){J.Y(ab)}})});C J},3T:B(fo){A 5F=D;A 1V=P;A r=S d.1H();A rp=B(t){if(V t!=\"1k\"){r.Y(t)}};if(d.1R(fo)){5F=d.9t(D,1V[0]);if(1V.G==1){C 5F}d.1n(d.3T(5F,1V[1],1V[2]),rp);C r}d.1n(d.3T(5F,1V[0],1V[1]),rp);C r},lr:B(7o,7n){A 1S=d.1e.a9(\"lq\");if(d.1R(7o)){1S.9L=7o}I{1S.4c(7o)}A ct=((7n==\"9M\")||(7n==\"a8\"))?\"fm\":\"5A\";D.1n(B(1m){A 24=1S.a7(K);1s(24[ct]){d.5E(24[ct],1m,7n)}});C D},7m:B(fl,F){A a5=[];F=F||{};D.1n(B(1m){A a6={E:1m};d.1x(a6,F);a5.Y(d[fl](a6))});C d.fx.lp(a5)},8I:B(F){C D.7m(\"8I\",F)},8H:B(F){C D.7m(\"8H\",F)},6y:B(F){C D.7m(\"6y\",F)}});z.1n([\"fk\",\"lo\",\"fj\",\"fi\",\"ln\",\"lm\",\"ll\",\"fi\",\"lk\",\"lj\",\"4b\"],B(H){A a4=\"on\"+H;z.1H.1C[a4]=B(a,b){C D.2c(a4,a,b)}})})()}if(!z.1h[\"z.X.1r\"]){z.1h[\"z.X.1r\"]=K;z.1Q(\"z.X.1r\");(B(){A d=z;A 2I=B(q){C[q.T(\"#\"),q.T(\".\"),q.T(\"[\"),q.T(\":\")]};A a0=B(a3,fh){A ql=a3.G;A i=2I(a3);A 1d=ql;R(A x=fh;x<i.G;x++){if(i[x]>=0){if(i[x]<1d){1d=i[x]}}}C(1d<0)?ql:1d};A 6X=B(7l){A i=2I(7l);if(i[0]!=-1){C 7l.21(i[0]+1,a0(7l,1))}I{C\"\"}};A 5r=B(7k){A 5D;A i=2I(7k);if((i[0]==0)||(i[1]==0)){5D=0}I{5D=a0(7k,0)}C((5D>0)?7k.3b(0,5D).1M():\"*\")};A fg=B(Q){A J=-1;R(A x=0;x<Q.G;x++){A 1S=Q[x];if(1S>=0){if((1S>J)||(J==-1)){J=1S}}}C J};A 9H=B(7i){A i=2I(7i);if(-1==i[1]){C\"\"}A di=i[1]+1;A 7j=fg(i.2w(2));if(di<7j){C 7i.21(di,7j)}I{if(-1==7j){C 7i.3b(di)}I{C\"\"}}};A f3=[{1i:\"|=\",1f:B(15,fe){C\"[5z(3U(\\' \\',@\"+15+\",\\' \\'), \\' \"+fe+\"-\\')]\"}},{1i:\"~=\",1f:B(15,fd){C\"[5z(3U(\\' \\',@\"+15+\",\\' \\'), \\' \"+fd+\" \\')]\"}},{1i:\"^=\",1f:B(15,fb){C\"[li-4G(@\"+15+\", \\'\"+fb+\"\\')]\"}},{1i:\"*=\",1f:B(15,fa){C\"[5z(@\"+15+\", \\'\"+fa+\"\\')]\"}},{1i:\"$=\",1f:B(15,9Z){C\"[21(@\"+15+\", 3c-G(@\"+15+\")-\"+(9Z.G-1)+\")=\\'\"+9Z+\"\\']\"}},{1i:\"!=\",1f:B(15,f9){C\"[3O(@\"+15+\"=\\'\"+f9+\"\\')]\"}},{1i:\"=\",1f:B(15,f8){C\"[@\"+15+\"=\\'\"+f8+\"\\']\"}}];A 9C=B(9Y,3Z,f7,f6){A 49;A i=2I(3Z);if(i[2]>=0){A 4L=3Z.T(\"]\",i[2]);A 29=3Z.21(i[2]+1,4L);1s(29&&29.G){if(29.2s(0)==\"@\"){29=29.2w(1)}49=L;R(A x=0;x<9Y.G;x++){A 1S=9Y[x];A 7h=29.T(1S.1i);if(7h>=0){A 15=29.21(0,7h);A 4a=29.21(7h+1S.1i.G);if((4a.2s(0)==\"\\\\\"\")||(4a.2s(0)==\"\\'\")){4a=4a.21(1,4a.G-1)}49=1S.1f(d.7g(15),d.7g(4a));3f}}if((!49)&&(29.G)){49=f7(29)}if(49){f6(49)}29=L;A 7f=3Z.T(\"[\",4L);if(0<=7f){4L=3Z.T(\"]\",7f);if(0<=4L){29=3Z.21(7f+1,4L)}}}}};A f0=B(f5){A 4K=\".\";A 7e=f5.1A(\" \");1s(7e.G){A 2K=7e.3a();A 7d;if(2K==\">\"){7d=\"/\";2K=7e.3a()}I{7d=\"//\"}A f4=5r(2K);4K+=7d+f4;A id=6X(2K);if(id.G){4K+=\"[@id=\\'\"+id+\"\\'][1]\"}A cn=9H(2K);if(cn.G){A 9X=\" \";if(cn.2s(cn.G-1)==\"*\"){9X=\"\";cn=cn.3b(0,cn.G-1)}4K+=\"[5z(3U(\\' \\',@9P,\\' \\'), \\' \"+cn+9X+\"\\')]\"}9C(f3,2K,B(f2){C\"[@\"+f2+\"]\"},B(f1){4K+=f1})}C 4K};A 7a={};A eC=B(28){if(7a[28]){C 7a[28]}A 1e=d.1e;A 9W=f0(28);A 4H=B(9V){A J=[];A 7b;1u{7b=1e.9x(9W,9V,L,lh.lg,L)}1y(e){1z.1K(\"lf in le:\",9W,\"lc:\",9V);1z.1K(e)}A 7c=7b.eZ();1s(7c){J.Y(7c);7c=7b.eZ()}C J};C 7a[28]=4H};A 5x={};A 9B={};A 3y=B(79,78){if(!79){C 78}if(!78){C 79}C B(){C 79.14(26,P)&&78.14(26,P)}};A 75=B(9U,3Y,5B,2J){A 2v=2J+1;A 76=(3Y.G==2v);A 2K=3Y[2J];if(2K==\">\"){A 77=9U.3W;if(!77.G){C}2v++;76=(3Y.G==2v);A 4H=6O(3Y[2J+1]);R(A x=0,11;x<77.G,11=77[x];x++){if(4H(11)){if(76){5B.Y(11)}I{75(11,3Y,5B,2v)}}}}A 5C=6U(2K)(9U);if(76){1s(5C.G){5B.Y(5C.3a())}}I{1s(5C.G){75(5C.3a(),3Y,5B,2v)}}};A eE=B(9T,eY){A J=[];A x=9T.G-1,11;1s(11=9T[x--]){75(11,eY,J,0)}C J};A 6O=B(3D){if(5x[3D]){C 5x[3D]}A ff=L;A 9S=5r(3D);if(9S!=\"*\"){ff=3y(ff,B(N){C((N.2t==1)&&(9S==N.5w.1M()))})}A 9R=6X(3D);if(9R.G){ff=3y(ff,B(N){C((N.2t==1)&&(N.id==9R))})}if(2Y.5q.14(D,2I(3D).2w(1))>=0){ff=3y(ff,9z(3D))}C 5x[3D]=ff};A 5y=B(E){A pn=E.1L;A 9Q=pn.3W;A 2v=-1;A 3C=pn.5A;if(!3C){C 2v}A ci=E[\"eW\"];A cl=pn[\"eX\"];if(((V cl==\"4J\")&&(cl!=9Q.G))||(V ci!=\"4J\")){pn[\"eX\"]=9Q.G;A 2J=1;do{if(3C===E){2v=2J}if(3C.2t==1){3C[\"eW\"]=2J;2J++}3C=3C.71}1s(3C)}I{2v=ci}C 2v};A lb=0;A 3X=B(N,15){A 74=\"\";if(15==\"9P\"){C N.3A||74}if(15==\"R\"){C N.la||74}C N.5t(15,2)||74};A eH=[{1i:\"|=\",1f:B(15,9O){A eV=\" \"+9O+\"-\";C B(N){A ea=\" \"+(N.5t(15,2)||\"\");C((ea==9O)||(ea.T(eV)==0))}}},{1i:\"^=\",1f:B(15,eU){C B(N){C(3X(N,15).T(eU)==0)}}},{1i:\"*=\",1f:B(15,eT){C B(N){C(3X(N,15).T(eT)>=0)}}},{1i:\"~=\",1f:B(15,eS){A 9N=\" \"+eS+\" \";C B(N){A ea=\" \"+3X(N,15)+\" \";C(ea.T(9N)>=0)}}},{1i:\"$=\",1f:B(15,73){A 9N=\" \"+73;C B(N){A ea=\" \"+3X(N,15);C(ea.31(73)==(ea.G-73.G))}}},{1i:\"!=\",1f:B(15,eR){C B(N){C(3X(N,15)!=eR)}}},{1i:\"=\",1f:B(15,eQ){C B(N){C(3X(N,15)==eQ)}}}];A 9E=[{1i:\"9M-9K\",1f:B(1p,l9){C B(N){if(N.2t!=1){C U}A fc=N.eP;1s(fc&&(fc.2t!=1)){fc=fc.eP}C(!fc)}}},{1i:\"72-9K\",1f:B(1p,l8){C B(N){if(N.2t!=1){C U}A nc=N.71;1s(nc&&(nc.2t!=1)){nc=nc.71}C(!nc)}}},{1i:\"l7\",1f:B(1p,l6){C B(N){A cn=N.3W;A eO=N.3W.G;R(A x=eO-1;x>=0;x--){A nt=cn[x].2t;if((nt==1)||(nt==3)){C U}}C K}}},{1i:\"5z\",1f:B(1p,eN){C B(N){C(N.9L.T(eN)>=0)}}},{1i:\"3O\",1f:B(1p,eM){A eL=6O(eM);C B(N){C(!eL(N))}}},{1i:\"l5-9K\",1f:B(1p,2u){A pi=eK;if(2u==\"l4\"){C B(N){C(((5y(N))%2)==1)}}I{if((2u==\"2n\")||(2u==\"l3\")){C B(N){C((5y(N)%2)==0)}}I{if(2u.T(\"l2+\")==0){A 70=pi(2u.3b(3));C B(N){C(N.1L.3W[70-1]===N)}}I{if((2u.T(\"n+\")>0)&&(2u.G>3)){A 9J=2u.1A(\"n+\",2);A eJ=pi(9J[0]);A 2J=pi(9J[1]);C B(N){C((5y(N)%eJ)==2J)}}I{if(2u.T(\"n\")==-1){A 70=pi(2u);C B(N){C(5y(N)==70)}}}}}}}}];A 9z=B(3e){A 9I=(9B[3e]||5x[3e]);if(9I){C 9I}A ff=L;A i=2I(3e);if(i[0]>=0){A 24=5r(3e);if(24!=\"*\"){ff=3y(ff,B(N){C(N.5w.1M()==24)})}}A 5u;A 3B=9H(3e);if(3B.G){A 9F=3B.2s(3B.G-1)==\"*\";if(9F){3B=3B.3b(0,3B.G-1)}A re=S 9G(\"(?:^|\\\\\\\\s)\"+3B+(9F?\".*\":\"\")+\"(?:\\\\\\\\s|$)\");ff=3y(ff,B(N){C re.6Z(N.3A)})}if(i[3]>=0){A 3z=3e.3b(i[3]+1);A 9D=\"\";A 5v=3z.T(\"(\");A 6Y=3z.31(\")\");if((0<=5v)&&(0<=6Y)&&(6Y>5v)){9D=3z.21(5v+1,6Y);3z=3z.3b(0,5v)}5u=L;R(A x=0;x<9E.G;x++){A 1S=9E[x];if(1S.1i==3z){5u=1S.1f(3z,9D);3f}}if(5u){ff=3y(ff,5u)}}A eG=(d.1l)?B(5s){A eI=5s.1M();C B(N){C N[5s]||N[eI]}}:B(5s){C B(N){C(N&&N.5t&&N.l1(5s))}};9C(eH,3e,eG,B(eF){ff=3y(ff,eF)});if(!ff){ff=B(){C K}}C 9B[3e]=ff};A 6W={};A 6U=B(3d,1B){A 9A=6W[3d];if(9A){C 9A}A i=2I(3d);A id=6X(3d);if(i[0]==0){C 6W[3d]=B(1B){C[d.1D(id)]}}A 9y=9z(3d);A 5p;if(i[0]>=0){5p=B(1B){A 11=d.1D(id);if(9y(11)){C[11]}}}I{A 3V;A 24=5r(3d);if(2Y.5q.14(D,2I(3d))==-1){5p=B(1B){A J=[];A 11,x=0,3V=1B.4I(24);1s(11=3V[x++]){J.Y(11)}C J}}I{5p=B(1B){A J=[];A 11,x=0,3V=1B.4I(24);1s(11=3V[x++]){if(9y(11)){J.Y(11)}}C J}}}C 6W[3d]=5p};A l0={};A 5o={\">\":B(1B){A J=[];A 11,x=0,3V=1B.3W;1s(11=3V[x++]){if(11.2t==1){J.Y(11)}}C J}};A 9w=B(6V){if(0>6V.T(\" \")){C 6U(6V)}A eD=B(1B){A 6S=6V.1A(\" \");A 6T;if(6S[0]==\">\"){6T=[1B]}I{6T=6U(6S.3a())(1B)}C eE(6T,6S)};C eD};A 9v=((1q[\"9x\"]&&!d.3o)?B(3x){A 6R=3x.1A(\" \");if((1q[\"9x\"])&&(3x.T(\":\")==-1)&&((K))){if(((6R.G>2)&&(3x.T(\">\")==-1))||(6R.G>3)||(3x.T(\"[\")>=0)||((1==6R.G)&&(0<=3x.T(\".\")))){C eC(3x)}}C 9w(3x)}:9w);A ey=B(3w){if(5o[3w]){C 5o[3w]}if(0>3w.T(\",\")){C 5o[3w]=9v(3w)}I{A eB=3w.1A(/\\\\s*,\\\\s*/);A 4H=B(1B){A eA=0;A J=[];A 6Q;1s(6Q=eB[eA++]){J=J.3U(9v(6Q,6Q.T(\" \"))(1B))}C J};C 5o[3w]=4H}};A 5n=0;A ez=B(Q){A J=S d.1H();if(!Q){C J}if(Q[0]){J.Y(Q[0])}if(Q.G<2){C J}5n++;Q[0][\"9u\"]=5n;R(A x=1,11;11=Q[x];x++){if(Q[x][\"9u\"]!=5n){J.Y(11)}11[\"9u\"]=5n}C J};d.1r=B(6P,1B){if(V 6P!=\"3c\"){C S d.1H(6P)}if(V 1B==\"3c\"){1B=d.1D(1B)}C ez(ey(6P)(1B||d.1e))};d.9t=B(ex,9s){A 9r=S d.1H();A ff=(9s)?6O(9s):B(){C K};R(A x=0,11;11=ex[x];x++){if(ff(11)){9r.Y(11)}}C 9r}})()}if(!z.1h[\"z.X.1b\"]){z.1h[\"z.X.1b\"]=K;z.1Q(\"z.X.1b\");z.6K=B(ew){A J={};A iq=\"kZ[Z!=9q][Z!=kY][Z!=et][Z!=kX][Z!=kW], kV, kU\";z.1r(iq,ew).3T(B(E){C(!E.kT)}).1n(B(1m){A 3v=1m.1p;A Z=(1m.Z||\"\").1M();if((Z==\"kS\")||(Z==\"kR\")){if(1m.kQ){J[3v]=1m.1Z}}I{if(1m.kP){A ev=J[3v]=[];z.1r(\"kO[kN]\",1m).1n(B(eu){ev.Y(eu.1Z)})}I{J[3v]=1m.1Z;if(Z==\"et\"){J[3v+\".x\"]=J[3v+\".y\"]=J[3v].x=J[3v].y=0}}}});C J};z.9h=B(23){A ec=kM;A J=\"\";A es={};R(A x in 23){if(23[x]!=es[x]){if(z.2l(23[x])){R(A y=0;y<23[x].G;y++){J+=ec(x)+\"=\"+ec(23[x][y])+\"&\"}}I{J+=ec(x)+\"=\"+ec(23[x])+\"&\"}}}if((J.G)&&(J.2s(J.G-1)==\"&\")){J=J.3b(0,J.G-1)}C J};z.kL=B(er){C z.9h(z.6K(er))};z.kK=B(ep){C z.eq(z.6K(ep))};z.kJ=B(2H){A J={};A qp=2H.1A(\"&\");A dc=kI;z.1n(qp,B(1m){if(1m.G){A 9p=1m.1A(\"=\");A 1p=dc(9p.3a());A 1U=dc(9p.22(\"=\"));if(z.1R(J[1p])){J[1p]=[J[1p]]}if(z.2l(J[1p])){J[1p].Y(1U)}I{J[1p]=1U}}});C J};z.e1=U;z.e6={\"9g\":B(1b){C 1b.2G},\"2e\":B(1b){if(!1o.eo){1z.1K(\"kH kG kF a kE of 9g/2e-6M-9m\"+\" 4F kD kC kB kA 4G en kz\"+\" (ky 1o.eo=K 4F kx kw D kv)\")}C z.5m(1b.2G)},\"2e-6M-ku\":B(1b){A 6N=1b.2G;A 9o=6N.T(\"/*\");A 9n=6N.31(\"*/\");if((9o==-1)||(9n==-1)){C z.5m(1b.2G)}C z.5m(6N.21(9o+2,9n))},\"2e-6M-9m\":B(1b){A 6L=1b.2G;A 9l=6L.T(\"/*\");A 9k=6L.31(\"*/\");if((9l==-1)||(9k==-1)){1z.1K(\"kt en ks\\'t 6M 9m!\");C\"\"}C z.5m(6L.21(9l+2,9k))},\"kr\":B(1b){C z.3u(1b.2G)},\"kq\":B(1b){if(z.1l&&!1b.el){z.1n([\"ko\",\"em\",\"kn\",\"km\"],B(i){1u{A 1e=S 9j(kl[i]+\".kk\");1e.kj=U;1e.ki(1b.2G);C 1e}1y(e){}})}I{C 1b.el}}};(B(){z.e5=B(F,ej,ei,eh){A 2F={};2F.F=F;A 6J=L;if(F.3R){A 3R=z.1D(F.3R);A 9i=3R.kh(\"kg\");2F.2E=F.2E||(9i?9i.1Z:L);6J=z.6K(3R)}I{2F.2E=F.2E}A 5l=[{}];if(6J){5l.Y(6J)}if(F.5g){5l.Y(F.5g)}if(F.ek){5l.Y({\"z.ek\":S 5d().8O()})}2F.1r=z.9h(z.1x.14(L,5l));2F.9d=F.9d||\"9g\";A d=S z.30(ej);d.5k(ei,B(eg){C eh(eg,d)});A ld=F.4E;if(ld&&z.1Y(ld)){d.ef(B(ee){C ld.2d(F,ee,2F)})}A 1G=F.9f;if(1G&&z.1Y(1G)){d.ed(B(e9){C 1G.2d(F,e9,2F)})}A 6I=F.kf;if(6I&&z.1Y(6I)){d.9e(B(e8){C 6I.2d(F,e8,2F)})}d.1F=2F;C d};A e4=B(O){O.e0=K;A 1b=O.1F.1b;if(V 1b.e7==\"B\"){1b.e7()}};A e3=B(O){C z.e6[O.1F.9d](O.1F.1b)};A e2=B(9c,O){1z.1K(9c);C 9c};A 3Q=B(F){A O=z.e5(F,e4,e3,e2);O.1F.1b=z.9b(O.1F.F);C O};A 5j=L;A 3t=[];A 94=B(){A dZ=(S 5d()).dU();if(!z.e1){z.1n(3t,B(4D,6H){if(!4D){C}A O=4D.O;1u{if(!O||O.e0||!4D.dT(O)){3t.3S(6H,1);C}if(4D.dR(O)){3t.3S(6H,1);4D.dP(O)}I{if(O.9a){if(O.9a+(O.1F.F.6G||0)<dZ){3t.3S(6H,1);A 1G=S 1O(\"6G ke\");1G.dY=\"6G\";O.5i(1G);O.4C()}}}}1y(e){1z.1K(e);O.5i(S 1O(\"kc!\"))}})}if(!3t.G){dX(5j);5j=L;C}};z.dV=B(){1u{z.1n(3t,B(i){i.O.4C()})}1y(e){}};if(z.1l){z.dW(z.dV)}z.dH=B(O,dS,dQ,dO){if(O.1F.F.6G){O.9a=(S 5d()).dU()}3t.Y({O:O,dT:dS,dR:dQ,dP:dO});if(!5j){5j=dN(94,50)}94()};A dJ=\"8Z/x-kb-3R-ka\";A dG=B(O){C O.1F.1b.6F};A dF=B(O){C 4==O.1F.1b.6F};A dE=B(O){if(z.8Y(O.1F.1b)){O.dM(O)}I{O.5i(S 1O(\"k9 k8 k7 5h:\"+O.1F.1b.3N))}};A 3P=B(Z,O){A 3s=O.1F;A F=3s.F;3s.1b.dL(Z,3s.2E,(F.k6!==K),(F.8X?F.8X:1k),(F.8W?F.8W:1k));if(F.6E){R(A 5f in F.6E){if(5f.1M()===\"5g-Z\"&&!F.8V){F.8V=F.6E[5f]}I{3s.1b.dK(5f,F.6E[5f])}}}3s.1b.dK(\"k5-k4\",(F.8V||dJ));1u{3s.1b.dI(3s.1r)}1y(e){O.4C()}z.dH(O,dG,dF,dE);C O};z.8T=B(4B){if(4B.1r.G){4B.2E+=(4B.2E.T(\"?\")==-1?\"?\":\"&\")+4B.1r;4B.1r=L}};z.k3=B(F){A O=3Q(F);z.8T(O.1F);C 3P(\"dD\",O)};z.k2=B(F){C 3P(\"dC\",3Q(F))};z.k1=B(F){A O=3Q(F);O.1F.1r=F.k0;C 3P(\"dC\",O)};z.jZ=B(F){C 3P(\"dA\",3Q(F))};z.jY=B(F){A O=3Q(F);A dB=O.1F;if(F[\"8U\"]){dB.1r=F.8U;F.8U=L}C 3P(\"dA\",O)};z.jX=B(F){A O=3Q(F);z.8T(O.1F);C 3P(\"8S\",O)};z.dz=B(jW){2m S 1O(\"z.dz 3O jV jU\")}})()}if(!z.1h[\"z.X.fx\"]){z.1h[\"z.X.fx\"]=K;z.1Q(\"z.X.fx\");z.dx=B(dy,1d){D.1w=dy;D.1d=1d;D.4x=B(n){C((D.1d-D.1w)*n)+D.1w}};z.2r(\"z.d6\",L,{1P:B(F){z.1x(D,F);if(z.2l(D.2C)){D.2C=S z.dx(D.2C[0],D.2C[1])}},2C:L,8Q:jT,5a:L,4z:0,dj:10,du:L,6x:L,dt:L,8B:L,dh:L,ds:L,dr:L,dm:L,2D:U,2Z:U,4A:L,8N:L,3r:L,2o:0,4y:0,3q:B(H,F){if(D[H]){D[H].14(D,F||[])}C D},5b:B(dw,8R){if(8R){5e(D.3r);D.2D=D.2Z=U;D.2o=0}I{if(D.2D&&!D.2Z){C D}}D.3q(\"6x\");A d=dw||D.du;if(d>0){5c(z.2p(D,B(){D.5b(L,8R)}),d);C D}D.4A=S 5d().8O();if(D.2Z){D.4A-=D.8Q*D.2o}D.8N=D.4A+D.8Q;D.2D=K;D.2Z=U;A 8P=D.2C.4x(D.2o);if(!D.2o){if(!D.4y){D.4y=D.4z}D.3q(\"dt\",[8P])}D.3q(\"ds\",[8P]);D.8M();C D},jS:B(){5e(D.3r);if(!D.2D){C D}D.2Z=K;D.3q(\"dr\",[D.2C.4x(D.2o)]);C D},jR:B(dq,dp){5e(D.3r);D.2D=D.2Z=K;D.2o=dq*6D;if(dp){D.5b()}C D},jQ:B(dn){if(!D.3r){C}5e(D.3r);if(dn){D.2o=1}D.3q(\"dm\",[D.2C.4x(D.2o)]);D.2D=D.2Z=U;C D},3N:B(){if(D.2D){C D.2Z?\"3M\":\"jP\"}C\"jO\"},8M:B(){5e(D.3r);if(D.2D){A dl=S 5d().8O();A 2q=(dl-D.4A)/(D.8N-D.4A);if(2q>=1){2q=1}D.2o=2q;if(D.5a){2q=D.5a(2q)}D.3q(\"8B\",[D.2C.4x(2q)]);if(2q<1){D.3r=5c(z.2p(D,\"8M\"),D.dj)}I{D.2D=U;if(D.4z>0){D.4z--;D.5b(L,K)}I{if(D.4z==-1){D.5b(L,K)}I{if(D.4y){D.4z=D.4y;D.4y=0}}}D.2o=0;D.3q(\"dh\")}}C D}});(B(){A df=B(E){if(z.1l){A ns=E.1c;if(!ns.8L.G&&z.1c(E,\"8L\")==\"dg\"){ns.8L=\"1\"}if(!ns.3n.G&&z.1c(E,\"3n\")==\"8K\"){ns.3n=\"8K\"}}};z.6C=B(F){if(V F.1d==\"1k\"){2m S 1O(\"z.6C jN an 1d 1Z\")}F.E=z.1D(F.E);A 3p=z.1x({6w:{}},F);A 8J=(3p.6w.2W={});8J.1w=(V 3p.1w==\"1k\")?B(){C 2V(z.1c(3p.E,\"2W\"))}:3p.1w;8J.1d=3p.1d;A 2U=z.6y(3p);z.2c(2U,\"6x\",L,B(){df(3p.E)});C 2U};z.8I=B(F){C z.6C(z.1x({1d:1},F))};z.8H=B(F){C z.6C(z.1x({1d:0},F))};if(z.6B&&!z.3o){z.8E=B(n){C 2k(\"0.5\")+((2Y.da((n+2k(\"1.5\"))*2Y.d9))/2)}}I{z.8E=B(n){C 0.5+((2Y.da((n+1.5)*2Y.d9))/2)}}A d4=B(6A){D.8G=6A;R(A p in 6A){A 1a=6A[p];if(1a.1w 1N z.1J){1a.d7=S z.1J()}}D.4x=B(r){A J={};R(A p in D.8G){A 1a=D.8G[p];A 6z=L;if(1a.1w 1N z.1J){6z=z.d8(1a.1w,1a.1d,r,1a.d7).8F()}I{if(!z.2l(1a.1w)){6z=((1a.1d-1a.1w)*r)+1a.1w+(p!=\"2W\"?1a.jM||\"px\":\"\")}}J[p]=6z}C J}};z.6y=B(F){F.E=z.1D(F.E);if(!F.5a){F.5a=z.8E}A 2U=S z.d6(F);z.2c(2U,\"6x\",2U,B(){A pm={};R(A p in D.6w){A 1a=pm[p]=z.1x({},D.6w[p]);if(z.1Y(1a.1w)){1a.1w=1a.1w()}if(z.1Y(1a.1d)){1a.1d=1a.1d()}A d5=(p.1M().T(\"jL\")>=0);B 8C(E,p){4w(p){2X\"58\":C E.8D;2X\"3n\":C E.6v}A v=z.1c(E,p);C(p==\"2W\")?2V(v):2k(v)};if(V 1a.1d==\"1k\"){1a.1d=8C(D.E,p)}I{if(V 1a.1w==\"1k\"){1a.1w=8C(D.E,p)}}if(d5){1a.1w=S z.1J(1a.1w);1a.1d=S z.1J(1a.1d)}I{1a.1w=(p==\"2W\")?2V(1a.1w):2k(1a.1w)}}D.2C=S d4(pm)});z.2c(2U,\"8B\",2U,B(8A){R(A s in 8A){z.1c(D.E,s,8A[s])}});C 2U}})()}',62,1711,'|||||||||||||||||||||||||||||||||||dojo|var|function|return|this|node|args|length|evt|else|ret|true|null|obj|elem|dfd|arguments|arr|for|new|indexOf|false|typeof||_base|push|type||te|||apply|attr|||||prop|xhr|style|end|doc|match|uri|_hasResource|key|del|undefined|isIE|item|forEach|djConfig|name|document|query|while|_66|try|res|start|mixin|catch|console|split|root|prototype|byId|gcs|ioArgs|err|NodeList|_p|Color|debug|parentNode|toLowerCase|instanceof|Error|constructor|provide|isString|ta|255|val|_a|global|_69|isFunction|value||substring|join|map|tn||window||path|_343|_220|_listeners|connect|call|json|replace|left|_b|toString|128|parseFloat|isArray|throw||_percent|hitch|step|declare|charAt|nodeType|_3c3|nidx|slice|faux|fired|_c4|_7e|loc|curve|_active|url|_44c|responseText|str|_312|idx|tqp|isNaN|isOpera|_22d|callee|add|_18b|_f8|_e2|_41|anim|Number|opacity|case|Math|_paused|Deferred|lastIndexOf|||||||||shift|substr|string|_3e7|_3ce|break|_w|charCode|_listener|_d5|_c5|authority|_49|width|isSafari|_49e|fire|_timer|_47b|_465|eval|_in|_40c|_409|_362|_3d9|className|_3d5|_386|_37a|body|getComputedStyle|box|_221|keyCode|remove|_8d|_46|paused|status|not|_478|_461|form|splice|filter|concat|tret|childNodes|_38b|_367|_33d||||||||||_340|_348|keypress|appendChild|_toArray|Array|_2b0|_toPixelValue|ref|_fixEvent|_19f|_14c|_14a|_150|_141|declaredClass|_d4|_99|_Url|_83|scheme|_67|_3d|switch|getValue|_startRepeatCount|repeat|_startTime|_47e|cancel|tif|load|to|with|tf|getElementsByTagName|number|_34c|_342|extend|_1e3|_normalizeEventName|_14b|_14e|results|self|cbfn|_f9|_d8|_b2|src|_88|dav||baseUrl|fragment|_loadedModules|_44|_43|_loaders|mll|height||easing|play|setTimeout|Date|clearTimeout|hdr|content|code|errback|_464|addCallbacks|_450|fromJson|_413|_3fc|_3ee|max|_31e|cond|getAttribute|_3d4|obi|tagName|_360|_381|contains|firstChild|_368|_372|_320|place|_2fa|scrollTop|_299|scrollLeft|top|documentElement|_288|_287|_getBorderExtents|_23f|_23d|_239|_218|_216|_211|eles|target|keys|shiftKey|ctrlKey|event|192|iel|_1db|delete|_1cf||addEventListener|String|_1af|_157|array|_14d|continue|_14f|_137|_11f|_106|_findMethod|has|_delegate|_dc|_d3|loaded|_9a|_loadInit|_inFlightCount|getObject|tv|_4f|_postLoad|_2d|offsetWidth|properties|beforeBegin|animateProperty|_4ad|_4a6|isKhtml|_fade|100|headers|readyState|timeout|_469|_457|_44d|formToObject|_441|comment|_43d|_36f|_419|tp|_40a|_406|_407|_373|_403|_3e6|_31b|cbi|test|_3c7|nextSibling|last|_3a1|_38e|_365|_36b|ecn|_364|_363|_356|_35e|_35f|_34f|_34d|_349|trim|tci|_328|_32b|_31f|_31c|_anim|_300|_2ff|_2f5|_2e7|removeClass|addClass|func|_2c4|cls|_2a9|_2ae|_280|_27f|_getPadExtents|isMoz|none|_233|cssText|_214|_fixCallback|_synthesizeEvent|stopPropagation|preventDefault|_setKeyChar|_1e1|ieh|_1d7|_1be|colorFromArray|sanitize|bits|rgb|_156|_fire|_resback|_13d|partial|_13a|silentlyCancelled|_topics|_127|_f1|_f0|superclass|_ec|_e3|mct|setObject|_bf|_b3|object|require|_92|_khtmlTimer|location|XMLHTTP|locale|dua|_71|_modulePrefixes|_55|_loadModule|_51|_50|_4e|pop|_3f|_callLoaded|_unloaders|_loadNotifying|_loadedUrls|_27|_24|_1d|_5|_4b7|onAnimate|getStyle|offsetHeight|_defaultEasing|toCss|_properties|fadeOut|fadeIn|_49f|auto|zoom|_cycle|_endTime|valueOf|_494|duration|_492|DELETE|_ioAddQueryToUrl|putData|contentType|password|user|_isDocumentOk|application|||||_466||||||startTime|_xhrObj|_45f|handleAs|addBoth|error|text|objectToQuery|_44f|ActiveXObject|_443|_442|filtered|_43f|_43e|_437|file|tnl|_41c|_filterQueryResult|_zipIdx|_408|_402|evaluate|_3ed|_380|fHit|_361|_33b|_3da|_3ab|_3d6|RegExp|_327|_3cf|_3c9|child|innerHTML|first|tval|_391|class|pnc|_37e|_37c|_375|_366|_35c|_35a|_353|_33c|_336|_314|||_315|_oe|_307|_309|cloneNode|after|createElement||_2f8|_2ef|_2ee|unshift|coords|some|every||_2cb|script|_2c9|parent||a2p||_2c3|_2bd||abs|_getMarginBox|_2b3|_2a6|position|_2a7|_2ac|_2ab|_getIeDocumentElementOffset|getBoundingClientRect|ownerDocument|_2a3|clientWidth|_isBodyLtr|_fixIeBiDiScrollLeft|_bodyLtr|_29d|_getContentBox|_setBox|_getMarginExtents|_getPadBorderExtents|_usesBorderBox|boxModel|pcs|st|sl|_240|runtimeStyle|_dcm|BackCompat|compatMode|default|_21b|_d|html|_event_listener|handlers|PAGE_DOWN|PAGE_UP|RIGHT_ARROW|LEFT_ARROW|DOWN_ARROW|UP_ARROW|_preventDefault||_stopPropagation|returnValue||_trySetKeyCode|cancelBubble|currentTarget|106|_1ee|111||_1e8|_1e7|||se|srcElement|onkeydown||_1d0|_disconnect|lid|_1c0|_connect|_set|_195|_185|_183|_17d|_everyOrSome|_16b|_172|_15b|Function|_154|_escapeString|_140|chain|_check|canceller|_12d|_124|_11a|_10d|_107|inherited|_fa|_f2|_findMixin|_constructor|preamble|_de|clone|tmp|_c7|TMP|_be|_ba|_mixin|isBrowser|lang|firebug||param|modulePaths|_a7|_fireCallback|_a0|setContext||_9c|unloaded||||_96|_93|navigator|_90|_89||protocol|_84|_86|_XMLHTTP_PROGIDS|gears|google|setAttribute|_80|_77|cfg|_6f|_getModuleSymbols|_5a|_58|_53|_4d|_4c|_45|_40|_moduleHasPrefix|_loadUri|_28|_26|_21|_22|tests|doh|_20|_1f|_1c|version|_1b|_19|_getProp|_11|_4|_4a5|_4b3|_Animation|tempColor|blendColors|PI|sin|||||_49a|normal|onEnd||rate||curr|onStop|_497||_496|pct|onPause|onPlay|onBegin|delay||_491|_Line|_48b|wrapForm|PUT|_487|POST|GET|_476|_474|_472|_ioWatch|send|_471|setRequestHeader|open|callback|setInterval|_470|resHandle|_46f|ioCheck|_46e|validCheck|getTime|_ioCancelAll|addOnUnload|clearInterval|dojoType|now|canceled|_blockAsync|_45e|_45c|_459|_ioSetArgs|_contentHandlers|abort|_458|_456||||addErrback|_454|addCallback|_452|_44b|_44a|_449|preventCache|responseXML|Microsoft|JSON|usePlainJson|_431|toJson|_430|_42d|image|opt|ria|_421|_41b|_40b|_zip|_410|_40d|_357|sqf|_374|_3e5|_3df|_38f|clc|pred|parseInt|ntf|_3bf|_3bc|cnl|previousSibling|_3a9|_3a6|_39c|_399|_396|_392|__cachedIndex|__cachedLength|_376|iterateNext|_34a|_355|_354|_32c|_350|_34b|_33f|_33e|_33a|_338|_334|_332||_330|_32e||_322|_316|mousemove|mouseout|mouseover|_305|lastChild||_2f9||_2f2|_2f1|removeChild|_2ec|_2eb|_2ea|_2e6||_2e4|_2e2|_2d6|_2d5|_2d4|_2d3|_2d2|_2d1|_2cd|_2cc|scs|write|_2c8|hasClass|_2c0|_2bb|_2b5|_abs|_docScroll|offsetParent|offsetTop|offsetLeft|absolute|getBoxObjectFor|clientLeft|_setContentSize|_setMarginBox|_28d|_286|_285|_289|NaN|_281|border|_272|_26b|_260|_258|_253|_24c|_246|_23a|_getOpacity|_setOpacity|_238|td|tr|nodeName|FILTER|_22f|_22e|currentStyle|_22c|_22b|display|QuirksMode|unselectable|_217|isMozilla|getElementById|attributes|all|_ie_listener|_getIeDispatcher|_1fd|NUM_LOCK|SCROLL_LOCK|INSERT|END|HOME|PAUSE|F12|F11|F10|F9|F8|F7|F6|F5|F4|F3|F2|F1|63232|SHIFT_TAB|TAB|keyIdentifier|_1f3|stopEvent|_punctMap|222|219|186|onkeypress|_stealthKeyDown|_fixKeys|relatedTarget|_1e0|_1df|_stealthKeydown|_1d6|_1d5|_1d1|_1ca|_1c9|_1cb|_1c2|_1c1|_1c3|_1c4|_1bc|_1b3|_1b2|colorFromHex|colorFromRgb|named|colorFromString|mask|rgba|_19c|_197|_192|setColor|_180|_178|_177|_175|_174|_16d|_166|_164|_163|_162|_15c|_15d|_15e|index|__json__|toJsonIndentStr|_nextId|_12f|_12b|publish|_128|_126|_125|_122|_121|_123|_11c|_11b|_10c|_10b|_108|getDispatcher|argument|nom|_construct|_core|_makeCtor|_df|_db|deprecated|isObject|_cc||scope||_hitchArgs|_c2||pre|_c1|native|isDebug||registerModulePath|_a8||finally|||_a6|_a5|_a4|_a3|_a2|_a1|_9f|_9e|_9d|_9b|_98|_97|onbeforeunload|ipt|scr|complete|_95|userAgent|_modulesLoaded|initialized|_initFired|_8c|_8a|_getText|_87|ieForceActiveXXhr|Msxml2|isGears|_81|_gearsObject|googlegears|GearsFactory|isFF|_7d|Safari|_72|_name|_6c|ire|ore|_68|i18n|_5b|requireIf|_56|_52|loading|_4a|_loadPath|_47|_48|_global_omit_module_check|_getModulePrefix|_3c|_3a|_37|_30|Boolean|_loadUriAndCheck|_2e||cacheBust|_1e|_1a|_17|_16|_15|_14|_f|_10|_e|_9|_8|revision|flag|patch|minor|major|_6|color|units|needs|stopped|playing|stop|gotoPercent|pause|1000|implemented|yet|_48a|xhrDelete|rawXhrPut|xhrPut|postData|rawXhrPost|xhrPost|xhrGet|Type|Content|sync|response|http|bad|urlencoded|www|_watchInFlightError||exceeded|handle|action|getAttributeNode|loadXML|async|XMLDOM|prefixes|MSXML3|MSXML|MSXML2||xml|javascript|wasn|your|optional|message|off|turn|use|endpoints|issues|security|potential|avoid|mimetype|using|consider|please|decodeURIComponent|queryToObject|formToJson|formToQuery|encodeURIComponent|selected|option|multiple|checked|checkbox|radio|disabled|textarea|select|button|reset|submit|input|_3fb|hasAttribute|0n|even|odd|nth|_3b5|empty|_3b1|_3ad|htmlFor|_38a|under||exprssion|failure|ANY_TYPE|XPathResult|starts|keyup|keydown|mouseup|mousedown|blur|click|combine|span|addContent||adopt|orphan|_2de|_2dd|styles|_2da|_2d9|_2cf|_2ce|show|createPopup|toggleClass|scrollWidth|clientTop|ltr|direction|pageXOffset|pageYOffset|fixed|contentBox|marginBox|BUTTON|TABLE|_getBorderBox|clientHeight|visible|overflow|marginBottom|marginRight|marginTop|marginLeft|borderBottomWidth|borderBottomStyle|borderRightWidth|borderRightStyle|borderTopWidth|borderTopStyle|borderLeftWidth|borderLeftStyle|paddingBottom|paddingRight|paddingTop|paddingLeft|offset||min|padding||margin|Opacity|Alpha|alpha|filters|pixelLeft|medium|_22a|defaultView|before||insertBefore|KhtmlUserSelect|MozUserSelect|setSelectable|isDescendant|div|_destroyElement|BackgroundImageCache|execCommand|PageDown|PageUp|Right|Left|Down|Up|63289|63249|63248|PRINT_SCREEN|63302|63277|63276|63275|63273|63272|63250|63247|63246|63245|63244|63243|63242|63241|63240|63239|63238|63237|63236|63235|63234|63233|Enter|_1f9|which|_1f6|bubbledKeyCode|221|220||||191|190|189|188|187|toElement|fromElement|clientY|pageY||clientX|pageX|offsetY|||layerY|offsetX|layerX|parentWindow|_nop|_allow_leaks|145|144|126|F15|125|F14|124|F13|123|122|121|120|119|118|117|116|115|114|113|112|NUMPAD_DIVIDE|110|NUMPAD_PERIOD|109|NUMPAD_MINUS|108|NUMPAD_ENTER|107|NUMPAD_PLUS|NUMPAD_MULTIPLY|105|NUMPAD_9|104|NUMPAD_8|103|NUMPAD_7|102|NUMPAD_6|101|NUMPAD_5|NUMPAD_4||NUMPAD_3|NUMPAD_2|NUMPAD_1|NUMPAD_0||SELECT|RIGHT_WINDOW||LEFT_WINDOW||HELP|SPACE|ESCAPE|CAPS_LOCK|ALT|CTRL|SHIFT|ENTER|CLEAR|BACKSPACE|attachEvent|fixEvent|fromCharCode|keyChar|_1b9|removeEventListener|0x|round|toHex|toRgba|toRgb|aqua|teal|blue|navy|yellow|olive|lime|green|fuchsia|purple|red|maroon|white|gray|silver|black|boolean|called|already|Cancelled|connectPublisher|unsubscribe|subscribe|disconnect|_113|_112||_111|_110|||found|was||must|_|module|||required|likely|It|declaration|Mixin|separate|instead|property|initializer||pass|_c9|_bb|_b7|nfunction|isAlien|isFinite|isArrayLike|_firebug|withDoc|withGlobal|_writeIncludes|VML|behavior|addRule|createStyleSheet|vml|com|microsoft|schemas|urn|namespaces|onunload|onreadystatechange|defer|khtml|WebKit|DOMContentLoaded|enableMozDomContentLoaded|domcontentloaded|Unable|base|chrome|1223|304|300|200|available|XMLHttpRequest|_println|language|userLanguage|isQuirks|factory|mimeTypes|Factory|Gears|_7f|MSIE||Firefox|Gecko|Konqueror||Opera|appVersion|xd|browser|moduleUrl|port|host|hostenv|_requireLocalization|_5f|_5e|_5d|_5c|requireLocalization|requireAfterIf|_57|common|platformRequire|defined|symbol|_isXDomain|tried|Could|__package__|packageFileName|_42|useXDomain|flight|still|files|addOnLoad|failed|sourceURL|util|notice|without|change|subject|APIs|EXPERIMENTAL|experimental|removed|will|DEPRECATED|exists|10315|Rev|Mobile|Spidermonkey|Rhino||Browser|delayMozLoadingFix|preventBackButtonFix|libraryScriptUri|baseRelativePath|baseScriptUri|allowQueryConfig|warn|trace|timeEnd||time|profileEnd|profile|log|info|groupEnd|group|dirxml|dir|count|assert'.split('|'),0,{});\n\
+\n\
+\n\
+/*\n\
+\n\
+Prototype 1.5 rc0\n\
+ - Adapted from Ruby on Rails - http://dev.rubyonrails.org/browser/spinoffs/prototype/src\n\
+ - By Lunarmedia, 06 August, 2006\n\
+ - Available at (and packed with) JavascriptCompressor.com\n\
+\n\
+Please note this version is missing the selector.js component of the full Prototype library. \n\
+You can get the compressed version of selector at JavascriptCompressor.com\n\
+\n\
+*/\n\
+\n\
+var decompressedPrototype = function(p,a,c,k,e,d){e=function(c){return(c<a?\"\":e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--){d[e(c)]=k[c]||e(c)}k=[(function(e){return d[e]})];e=(function(){return'\\\\w+'});c=1};while(c--){if(k[c]){p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c])}}return p}('d T={4l:\\'1.5.8P\\',3E:\\'(?:<3G.*?>)((\\\\n|\\\\r|.)*?)(?:<\\\\/3G>)\\',2v:7(){},K:7(x){c x}};d 1b={17:7(){c 7(){6.1I.2n(6,N)}}};d 1e=z q();q.u=7(5d,O){G(d 1G 2M O){5d[1G]=O[1G]}c 5d};q.1U=7(U){1j{f(U==1v)c\\'1v\\';f(U==1L)c\\'1L\\';c U.1U?U.1U():U.2C()}1s(e){f(e 8R 9l)c\\'...\\';25 e}};7j.v.1d=7(){d 43=6,23=$A(N),U=23.8S();c 7(){c 43.2n(U,23.3s($A(N)))}};7j.v.8U=7(U){d 43=6;c 7(C){c 43.8V(U,C||1W.C)}};q.u(8Q.v,{8W:7(){d 4Z=6.2C(16);f(6<16)c\\'0\\'+4Z;c 4Z},5j:7(){c 6+1},8Y:7(o){$R(0,6,11).V(o);c 6}});d 6s={6j:7(){d 48;G(d i=0;i<N.t;i++){d 6L=N[i];1j{48=6L();1y}1s(e){}}c 48}};d 6Q=1b.17();6Q.v={1I:7(1a,1J){6.1a=1a;6.1J=1J;6.41=Y;6.2A()},2A:7(){5Z(6.2D.1d(6),6.1J*4z)},2D:7(){f(!6.41){1j{6.41=11;6.1a()}8Z{6.41=Y}}}};q.u(4b.v,{2T:7(1A,1z){d L=\\'\\',O=6,I;1z=N.90.52(1z);1H(O.t>0){f(I=O.I(1A)){L+=O.47(0,I.w);L+=(1z(I)||\\'\\').2C();O=O.47(I.w+I[0].t)}1D{L+=O,O=\\'\\'}}c L},92:7(1A,1z,3i){1z=6.2T.52(1z);3i=3i===1v?1:3i;c 6.2T(1A,7(I){f(--3i<0)c I[0];c 1z(I)})},93:7(1A,o){6.2T(1A,o);c 6},94:7(t,2S){t=t||30;2S=2S===1v?\\'...\\':2S;c 6.t>t?6.47(0,t-2S.t)+2S:6},9F:7(){c 6.2y(/^\\\\s+/,\\'\\').2y(/\\\\s+$/,\\'\\')},71:7(){c 6.2y(/<\\\\/?[^>]+>/7Y,\\'\\')},2Q:7(){c 6.2y(z 3O(T.3E,\\'5P\\'),\\'\\')},70:7(){d 6Y=z 3O(T.3E,\\'5P\\');d 5p=z 3O(T.3E,\\'98\\');c(6.I(6Y)||[]).1C(7(5o){c(5o.I(5p)||[\\'\\',\\'\\'])[1]})},3q:7(){c 6.70().1C(7(3G){c 4q(3G)})},9E:7(){d 1q=J.4Y(\\'1q\\');d 1Y=J.9D(6);1q.75(1Y);c 1q.3h},9c:7(){d 1q=J.4Y(\\'1q\\');1q.3h=6.71();c 1q.2z[0]?1q.2z[0].6q:\\'\\'},78:7(){d 7i=6.I(/^\\\\??(.*)$/)[1].3j(\\'&\\');c 7i.36({},7(5b,72){d 1i=72.3j(\\'=\\');5b[1i[0]]=1i[1];c 5b})},1Z:7(){c 6.3j(\\'\\')},3P:7(){d 2l=6.3j(\\'-\\');f(2l.t==1)c 2l[0];d 54=6.5g(\\'-\\')==0?2l[0].7e(0).3Y()+2l[0].7g(1):2l[0];G(d i=1,73=2l.t;i<73;i++){d s=2l[i];54+=s.7e(0).3Y()+s.7g(1)}c 54},1U:7(){c\"\\'\"+6.2y(/\\\\\\\\/g,\\'\\\\\\\\\\\\\\\\\\').2y(/\\'/g,\\'\\\\\\\\\\\\\\'\\')+\"\\'\"}});4b.v.2T.52=7(1z){f(2i 1z==\\'7\\')c 1z;d 2U=z 3n(1z);c 7(I){c 2U.7a(I)}};4b.v.9h=4b.v.78;d 3n=1b.17();3n.79=/(^|.|\\\\r|\\\\n)(#\\\\{(.*?)\\\\})/;3n.v={1I:7(2U,1A){6.2U=2U.2C();6.1A=1A||3n.79},7a:7(U){c 6.2U.2T(6.1A,7(I){d 53=I[1];f(53==\\'\\\\\\\\\\')c I[2];c 53+(U[I[3]]||\\'\\').2C()})}};d $1y=z q();d $49=z q();d 1p={V:7(o){d w=0;1j{6.2m(7(h){1j{o(h,w++)}1s(e){f(e!=$49)25 e}})}1s(e){f(e!=$1y)25 e}},9n:7(o){d L=11;6.V(7(h,w){L=L&&!!(o||T.K)(h,w);f(!L)25 $1y});c L},9o:7(o){d L=11;6.V(7(h,w){f(L=!!(o||T.K)(h,w))25 $1y});c L},3e:7(o){d P=[];6.V(7(h,w){P.W(o(h,w))});c P},7n:7(o){d L;6.V(7(h,w){f(o(h,w)){L=h;25 $1y}});c L},7o:7(o){d P=[];6.V(7(h,w){f(o(h,w))P.W(h)});c P},9p:7(1A,o){d P=[];6.V(7(h,w){d 7c=h.2C();f(7c.I(1A))P.W((o||T.K)(h,w))});c P},1M:7(U){d 51=Y;6.V(7(h){f(h==U){51=11;25 $1y}});c 51},36:7(45,o){6.V(7(h,w){45=o(45,h,w)});c 45},9q:7(1F){d 23=$A(N).47(1);c 6.3e(7(h){c h[1F].2n(h,23)})},9s:7(o){d L;6.V(7(h,w){h=(o||T.K)(h,w);f(L==1v||h>=L)L=h});c L},9u:7(o){d L;6.V(7(h,w){h=(o||T.K)(h,w);f(L==1v||h<L)L=h});c L},9v:7(o){d 50=[],58=[];6.V(7(h,w){((o||T.K)(h,w)?50:58).W(h)});c[50,58]},3r:7(1G){d P=[];6.V(7(h,w){P.W(h[1G])});c P},9x:7(o){d P=[];6.V(7(h,w){f(!o(h,w))P.W(h)});c P},9y:7(o){c 6.3e(7(h,w){c{h:h,59:o(h,w)}}).9z(7(18,3U){d a=18.59,b=3U.59;c a<b?-1:a>b?1:0}).3r(\\'h\\')},1Z:7(){c 6.3e(T.K)},9B:7(){d o=T.K,23=$A(N);f(2i 23.5e()==\\'7\\')o=23.9C();d 7l=[6].3s(23).1C($A);c 6.1C(7(h,w){c o(7l.3r(w))})},1U:7(){c\\'#<1p:\\'+6.1Z().1U()+\\'>\\'}};q.u(1p,{1C:1p.3e,5v:1p.7n,1k:1p.7o,8M:1p.1M,7p:1p.1Z});d $A=1E.7q=7(2R){f(!2R)c[];f(2R.1Z){c 2R.1Z()}1D{d P=[];G(d i=0;i<2R.t;i++)P.W(2R[i]);c P}};q.u(1E.v,1p);f(!1E.v.4d)1E.v.4d=1E.v.4m;q.u(1E.v,{2m:7(o){G(d i=0;i<6.t;i++)o(6[i])},5i:7(){6.t=0;c 6},7r:7(){c 6[0]},5e:7(){c 6[6.t-1]},7s:7(){c 6.1k(7(h){c h!=1v||h!=1L})},6J:7(){c 6.36([],7(6H,h){c 6H.3s(h&&h.5D==1E?h.6J():[h])})},5s:7(){d 4N=$A(N);c 6.1k(7(h){c!4N.1M(h)})},5g:7(U){G(d i=0;i<6.t;i++)f(6[i]==U)c i;c-1},4m:7(5h){c(5h!==Y?6:6.1Z()).4d()},1U:7(){c\\'[\\'+6.1C(q.1U).1N(\\', \\')+\\']\\'}});d 4h={2m:7(o){G(d 1O 2M 6){d h=6[1O];f(2i h==\\'7\\')49;d 1i=[1O,h];1i.1O=1O;1i.h=h;o(1i)}},7t:7(){c 6.3r(\\'1O\\')},4N:7(){c 6.3r(\\'h\\')},7u:7(2N){c $H(2N).36($H(6),7(4Q,1i){4Q[1i.1O]=1i.h;c 4Q})},7w:7(){c 6.1C(7(1i){c 1i.1C(4n).1N(\\'=\\')}).1N(\\'&\\')},1U:7(){c\\'#<4h:{\\'+6.1C(7(1i){c 1i.1C(q.1U).1N(\\': \\')}).1N(\\', \\')+\\'}>\\'}};7 $H(U){d 2N=q.u({},U||{});q.u(2N,1p);q.u(2N,4h);c 2N};3L=1b.17();q.u(3L.v,1p);q.u(3L.v,{1I:7(22,2x,2H){6.22=22;6.2x=2x;6.2H=2H},2m:7(o){d h=6.22;2q{o(h);h=h.5j()}1H(6.1M(h))},1M:7(h){f(h<6.22)c Y;f(6.2H)c h<6.2x;c h<=6.2x}});d $R=7(22,2x,2H){c z 3L(22,2x,2H)};d M={4w:7(){c 6s.6j(7(){c z 5C()},7(){c z 5n(\\'7y.6d\\')},7(){c z 5n(\\'7z.6d\\')})||Y},4s:0};M.2W={3b:[],2m:7(o){6.3b.2m(o)},69:7(4F){f(!6.1M(4F))6.3b.W(4F)},7A:7(5t){6.3b=6.3b.5s(5t)},3y:7(1a,26,E,2Z){6.V(7(3o){f(3o[1a]&&2i 3o[1a]==\\'7\\'){1j{3o[1a].2n(3o,[26,E,2Z])}1s(e){}}})}};q.u(M.2W,1p);M.2W.69({5G:7(){M.4s++},1B:7(){M.4s--}});M.44=7(){};M.44.v={4a:7(m){6.m={1F:\\'4j\\',4p:11,5H:\\'5E/x-86-Q-7C\\',28:\\'\\'};q.u(6.m,m||{})},3l:7(){c 6.E.32==1v||6.E.32==0||(6.E.32>=84&&6.E.32<7E)},7G:7(){c!6.3l()}};M.3t=1b.17();M.3t.5L=[\\'7H\\',\\'80\\',\\'7I\\',\\'7J\\',\\'4t\\'];M.3t.v=q.u(z M.44(),{1I:7(1l,m){6.E=M.4w();6.4a(m);6.26(1l)},26:7(1l){d 28=6.m.28||\\'\\';f(28.t>0)28+=\\'&7K=\\';1j{6.1l=1l;f(6.m.1F==\\'7L\\'&&28.t>0)6.1l+=(6.1l.I(/\\\\?/)?\\'&\\':\\'?\\')+28;M.2W.3y(\\'5G\\',6,6.E);6.E.7N(6.m.1F,6.1l,6.m.4p);f(6.m.4p){6.E.5T=6.5J.1d(6);2Y((7(){6.4r(1)}).1d(6),10)}6.5A();d 1c=6.m.5V?6.m.5V:28;6.E.7O(6.m.1F==\\'4j\\'?1c:1L)}1s(e){6.3p(e)}},5A:7(){d 1P=[\\'X-7P-7Q\\',\\'5C\\',\\'X-T-4l\\',T.4l,\\'7R\\',\\'1Y/7m, 1Y/2e, 5E/5F, 1Y/5F, */*\\'];f(6.m.1F==\\'4j\\'){1P.W(\\'5Q-2g\\',6.m.5H);f(6.E.7S)1P.W(\\'7T\\',\\'7U\\')}f(6.m.1P)1P.W.2n(1P,6.m.1P);G(d i=0;i<1P.t;i+=2)6.E.7V(1P[i],1P[i+1])},5J:7(){d 2F=6.E.2F;f(2F!=1)6.4r(6.E.2F)},4A:7(B){1j{c 6.E.7W(B)}1s(e){}},5M:7(){1j{c 4q(\\'(\\'+6.4A(\\'X-7X\\')+\\')\\')}1s(e){}},5R:7(){1j{c 4q(6.E.3F)}1s(e){6.3p(e)}},4r:7(2F){d C=M.3t.5L[2F];d E=6.E,2Z=6.5M();f(C==\\'4t\\'){1j{(6.m[\\'2I\\'+6.E.32]||6.m[\\'2I\\'+(6.3l()?\\'81\\':\\'82\\')]||T.2v)(E,2Z)}1s(e){6.3p(e)}f((6.4A(\\'5Q-2g\\')||\\'\\').I(/^1Y\\\\/7m/i))6.5R()}1j{(6.m[\\'2I\\'+C]||T.2v)(E,2Z);M.2W.3y(\\'2I\\'+C,6,E,2Z)}1s(e){6.3p(e)}f(C==\\'4t\\')6.E.5T=T.2v},3p:7(57){(6.m.5W||T.2v)(6,57);M.2W.3y(\\'5W\\',6,57)}});M.4C=1b.17();q.u(q.u(M.4C.v,M.3t.v),{1I:7(1w,1l,m){6.4x={3m:1w.3m?$(1w.3m):$(1w),3z:1w.3z?$(1w.3z):(1w.3m?1L:$(1w))};6.E=M.4w();6.4a(m);d 1B=6.m.1B||T.2v;6.m.1B=(7(E,U){6.5Y();1B(E,U)}).1d(6);6.26(1l)},5Y:7(){d 3A=6.3l()?6.4x.3m:6.4x.3z;d 3k=6.E.3F;f(!6.m.3q)3k=3k.2Q();f(3A){f(6.m.60){z 6.m.60(3A,3k)}1D{k.6h(3A,3k)}}f(6.3l()){f(6.1B)2Y(6.1B.1d(6),10)}}});M.61=1b.17();M.61.v=q.u(z M.44(),{1I:7(1w,1l,m){6.4a(m);6.1B=6.m.1B;6.1J=(6.m.1J||2);6.2s=(6.m.2s||1);6.4B={};6.1w=1w;6.1l=1l;6.22()},22:7(){6.m.1B=6.63.1d(6);6.2D()},7b:7(){6.4B.1B=1v;89(6.65);(6.1B||T.2v).2n(6,N)},63:7(26){f(6.m.2s){6.2s=(26.3F==6.64?6.2s*6.m.2s:1);6.64=26.3F}6.65=2Y(6.2D.1d(6),6.2s*6.1J*4z)},2D:7(){6.4B=z M.4C(6.1w,6.1l,6.m)}});7 $(){d P=[],4;G(d i=0;i<N.t;i++){4=N[i];f(2i 4==\\'8c\\')4=J.8d(4);P.W(k.u(4))}c P.t<2?P[0]:P};J.8f=7(1f,6a){d 6b=($(6a)||J.1c).4D(\\'*\\');c $A(6b).36([],7(12,4E){f(4E.1f.I(z 3O(\"(^|\\\\\\\\s)\"+1f+\"(\\\\\\\\s|$)\")))12.W(k.u(4E));c 12})};f(!1W.k)d k=z q();k.u=7(4){f(!4)c;f(4X)c 4;f(!4.6e&&4.1h&&4!=1W){d 2a=k.3d,2r=k.u.2r;G(d 1G 2M 2a){d h=2a[1G];f(2i h==\\'7\\')4[1G]=2r.4W(h)}}4.6e=11;c 4};k.u.2r={4W:7(h){c 6[h]=6[h]||7(){c h.2n(1L,[6].3s($A(N)))}}};k.3d={4U:7(4){c $(4).l.2B!=\\'3Q\\'},6N:7(){G(d i=0;i<N.t;i++){d 4=$(N[i]);k[k.4U(4)?\\'6f\\':\\'6w\\'](4)}},6f:7(){G(d i=0;i<N.t;i++){d 4=$(N[i]);4.l.2B=\\'3Q\\'}},6w:7(){G(d i=0;i<N.t;i++){d 4=$(N[i]);4.l.2B=\\'\\'}},42:7(4){4=$(4);4.1X.8h(4)},6h:7(4,2e){$(4).3h=2e.2Q();2Y(7(){2e.3q()},10)},2y:7(4,2e){4=$(4);f(4.6k){4.6k=2e.2Q()}1D{d 1K=4.6R.6S();1K.56(4);4.1X.8i(1K.6T(2e.2Q()),4)}2Y(7(){2e.3q()},10)},8k:7(4){4=$(4);c 4.2k},3K:7(4){c z k.3S(4)},8l:7(4,1f){f(!(4=$(4)))c;c k.3K(4).1M(1f)},8m:7(4,1f){f(!(4=$(4)))c;c k.3K(4).7k(1f)},8n:7(4,1f){f(!(4=$(4)))c;c k.3K(4).42(1f)},8p:7(4){4=$(4);G(d i=0;i<4.2z.t;i++){d 3M=4.2z[i];f(3M.8q==3&&!/\\\\S/.4v(3M.6q))k.42(3M)}},8r:7(4){c $(4).3h.I(/^\\\\s*$/)},8s:7(4,3I){4=$(4),3I=$(3I);1H(4=4.1X)f(4==3I)c 11;c Y},6t:7(4){4=$(4);d x=4.x?4.x:4.2f,y=4.y?4.y:4.29;1W.6t(x,y)},1R:7(4,l){4=$(4);d h=4.l[l.3P()];f(!h){f(J.4J&&J.4J.6v){d 4L=J.4J.6v(4,1L);h=4L?4L.8v(l):1L}1D f(4.6x){h=4.6x[l.3P()]}}f(1W.6E&&[\\'18\\',\\'1n\\',\\'3U\\',\\'6G\\'].1M(l))f(k.1R(4,\\'14\\')==\\'4G\\')h=\\'6y\\';c h==\\'6y\\'?1L:h},8x:7(4,l){4=$(4);G(d B 2M l)4.l[B.3P()]=l[B]},8y:7(4){4=$(4);f(k.1R(4,\\'2B\\')!=\\'3Q\\')c{21:4.2p,24:4.2k};d 20=4.l;d 6B=20.4O;d 6A=20.14;20.4O=\\'31\\';20.14=\\'2o\\';20.2B=\\'\\';d 6C=4.6m;d 6D=4.6p;20.2B=\\'3Q\\';20.14=6A;20.4O=6B;c{21:6C,24:6D}},8z:7(4){4=$(4);d 4R=k.1R(4,\\'14\\');f(4R==\\'4G\\'||!4R){4.4T=11;4.l.14=\\'3T\\';f(1W.6E){4.l.1n=0;4.l.18=0}}},8A:7(4){4=$(4);f(4.4T){4.4T=1v;4.l.14=4.l.1n=4.l.18=4.l.6G=4.l.3U=\\'\\'}},8B:7(4){4=$(4);f(4.3c)c;4.3c=4.l.3V;f((k.1R(4,\\'3V\\')||\\'4U\\')!=\\'31\\')4.l.3V=\\'31\\'},8D:7(4){4=$(4);f(4.3c)c;4.l.3V=4.3c;4.3c=1v}};q.u(k,k.3d);d 4X=Y;f(!3W&&/3x|3w|3u/.4v(33.62)){d 3W={}};k.6K=7(2a){q.u(k.3d,2a||{});f(2i 3W!=\\'1v\\'){d 2a=k.3d,2r=k.u.2r;G(d 1G 2M 2a){d h=2a[1G];f(2i h==\\'7\\')3W.v[1G]=2r.4W(h)}4X=11}};k.6K();d 6M=z q();6M.2B=k.6N;1e.1g=7(3f){6.3f=3f};1e.1g.v={1I:7(4,2t){6.4=$(4);6.2t=2t.2Q();f(6.3f&&6.4.6O){1j{6.4.6O(6.3f,6.2t)}1s(e){d 1h=6.4.1h.2w();f(1h==\\'4V\\'||1h==\\'8N\\'){6.2X(6.6U())}1D{25 e}}}1D{6.1K=6.4.6R.6S();f(6.2V)6.2V();6.2X([6.1K.6T(6.2t)])}2Y(7(){2t.3q()},10)},6U:7(){d 1q=J.4Y(\\'1q\\');1q.3h=\\'<6V><4V>\\'+6.2t+\\'</4V></6V>\\';c $A(1q.2z[0].2z[0].2z)}};d 1g=z q();1g.6W=1b.17();1g.6W.v=q.u(z 1e.1g(\\'96\\'),{2V:7(){6.1K.97(6.4)},2X:7(2h){2h.V((7(2j){6.4.1X.55(2j,6.4)}).1d(6))}});1g.5m=1b.17();1g.5m.v=q.u(z 1e.1g(\\'99\\'),{2V:7(){6.1K.56(6.4);6.1K.74(11)},2X:7(2h){2h.4m(Y).V((7(2j){6.4.55(2j,6.4.9a)}).1d(6))}});1g.7h=1b.17();1g.7h.v=q.u(z 1e.1g(\\'9d\\'),{2V:7(){6.1K.56(6.4);6.1K.74(6.4)},2X:7(2h){2h.V((7(2j){6.4.75(2j)}).1d(6))}});1g.76=1b.17();1g.76.v=q.u(z 1e.1g(\\'9i\\'),{2V:7(){6.1K.9m(6.4)},2X:7(2h){2h.V((7(2j){6.4.1X.55(2j,6.4.9t)}).1d(6))}});k.3S=1b.17();k.3S.v={1I:7(4){6.4=$(4)},2m:7(o){6.4.1f.3j(/\\\\s+/).1k(7(B){c B.t>0}).2m(o)},5c:7(1f){6.4.1f=1f},7k:7(5a){f(6.1M(5a))c;6.5c(6.1Z().3s(5a).1N(\\' \\'))},42:7(4c){f(!6.1M(4c))c;6.5c(6.1k(7(1f){c 1f!=4c}).1N(\\' \\'))},2C:7(){c 6.1Z().1N(\\' \\')}};q.u(k.3S.v,1p);d 5I={5i:7(){G(d i=0;i<N.t;i++)$(N[i]).h=\\'\\'},4f:7(4){$(4).4f()},7v:7(){G(d i=0;i<N.t;i++)f($(N[i]).h==\\'\\')c Y;c 11},1k:7(4){$(4).1k()},5y:7(4){4=$(4);4.4f();f(4.1k)4.1k()}};d D={3a:7(Q){d 12=D.2L($(Q));d 4I=z 1E();G(d i=0;i<12.t;i++){d 4g=D.k.3a(12[i]);f(4g)4I.W(4g)}c 4I.1N(\\'&\\')},2L:7(Q){Q=$(Q);d 12=z 1E();G(d 1h 2M D.k.2E){d 4H=Q.4D(1h);G(d j=0;j<4H.t;j++)12.W(4H[j])}c 12},7x:7(Q,3N,B){Q=$(Q);d 3H=Q.4D(\\'2u\\');f(!3N&&!B)c 3H;d 4y=z 1E();G(d i=0;i<3H.t;i++){d 2u=3H[i];f((3N&&2u.2g!=3N)||(B&&2u.B!=B))49;4y.W(2u)}c 4y},7B:7(Q){d 12=D.2L(Q);G(d i=0;i<12.t;i++){d 4=12[i];4.7D();4.4o=\\'11\\'}},7F:7(Q){d 12=D.2L(Q);G(d i=0;i<12.t;i++){d 4=12[i];4.4o=\\'\\'}},5z:7(Q){c D.2L(Q).5v(7(4){c 4.2g!=\\'31\\'&&!4.4o&&[\\'2u\\',\\'1k\\',\\'3J\\'].1M(4.1h.2w())})},7M:7(Q){5I.5y(D.5z(Q))},5w:7(Q){$(Q).5w()}};D.k={3a:7(4){4=$(4);d 1F=4.1h.2w();d 1S=D.k.2E[1F](4);f(1S){d 1O=4n(1S[0]);f(1O.t==0)c;f(1S[1].5D!=1E)1S[1]=[1S[1]];c 1S[1].1C(7(h){c 1O+\\'=\\'+4n(h)}).1N(\\'&\\')}},1x:7(4){4=$(4);d 1F=4.1h.2w();d 1S=D.k.2E[1F](4);f(1S)c 1S[1]}};D.k.2E={2u:7(4){6c(4.2g.2w()){1r\\'7Z\\':1r\\'31\\':1r\\'6l\\':1r\\'1Y\\':c D.k.2E.3J(4);1r\\'6g\\':1r\\'6i\\':c D.k.2E.5O(4)}c Y},5O:7(4){f(4.83)c[4.B,4.h]},3J:7(4){c[4.B,4.h]},1k:7(4){c D.k.2E[4.2g==\\'1k-6n\\'?\\'5S\\':\\'5X\\'](4)},5S:7(4){d h=\\'\\',2b,w=4.85;f(w>=0){2b=4.m[w];h=2b.h||2b.1Y}c[4.B,h]},5X:7(4){d h=[];G(d i=0;i<4.t;i++){d 2b=4.m[i];f(2b.87)h.W(2b.h||2b.1Y)}c[4.B,h]}};d $F=D.k.1x;1e.3D=7(){};1e.3D.v={1I:7(4,1J,1a){6.1J=1J;6.4=$(4);6.1a=1a;6.2K=6.1x();6.2A()},2A:7(){5Z(6.2D.1d(6),6.1J*4z)},2D:7(){d h=6.1x();f(6.2K!=h){6.1a(6.4,h);6.2K=h}}};D.k.3C=1b.17();D.k.3C.v=q.u(z 1e.3D(),{1x:7(){c D.k.1x(6.4)}});D.3C=1b.17();D.3C.v=q.u(z 1e.3D(),{1x:7(){c D.3a(6.4)}});1e.2c=7(){};1e.2c.v={1I:7(4,1a){6.4=$(4);6.1a=1a;6.2K=6.1x();f(6.4.1h.2w()==\\'Q\\')6.67();1D 6.2A(6.4)},4K:7(){d h=6.1x();f(6.2K!=h){6.1a(6.4,h);6.2K=h}},67:7(){d 12=D.2L(6.4);G(d i=0;i<12.t;i++)6.2A(12[i])},2A:7(4){f(4.2g){6c(4.2g.2w()){1r\\'6g\\':1r\\'6i\\':1o.3B(4,\\'8j\\',6.4K.1d(6));1y;1r\\'6l\\':1r\\'1Y\\':1r\\'3J\\':1r\\'1k-6n\\':1r\\'1k-8t\\':1o.3B(4,\\'8u\\',6.4K.1d(6));1y}}}};D.k.2c=1b.17();D.k.2c.v=q.u(z 1e.2c(),{1x:7(){c D.k.1x(6.4)}});D.2c=1b.17();D.2c.v=q.u(z 1e.2c(),{1x:7(){c D.3a(6.4)}});f(!1W.1o){d 1o=z q()}q.u(1o,{8C:8,8F:9,8H:13,8I:27,8J:37,8L:38,8O:39,8T:40,8X:46,4:7(C){c C.Z||C.91},95:7(C){c(((C.6X)&&(C.6X==1))||((C.6Z)&&(C.6Z==1)))},9b:7(C){c C.9e||(C.9f+(J.3R.2G||J.1c.2G))},9g:7(C){c C.9j||(C.9k+(J.3R.2O||J.1c.2O))},7b:7(C){f(C.7d){C.7d();C.9r()}1D{C.48=Y;C.9w=11}},9A:7(C,1h){d 4=1o.4(C);1H(4.1X&&(!4.1h||(4.1h.3Y()!=1h.3Y())))4=4.1X;c 4},1T:Y,5u:7(4,B,1V,1u){f(!6.1T)6.1T=[];f(4.5f){6.1T.W([4,B,1V,1u]);4.5f(B,1V,1u)}1D f(4.4i){6.1T.W([4,B,1V,1u]);4.4i(\\'2I\\'+B,1V)}},66:7(){f(!1o.1T)c;G(d i=0;i<1o.1T.t;i++){1o.5N.2n(6,1o.1T[i]);1o.1T[i][0]=1L}1o.1T=Y},3B:7(4,B,1V,1u){d 4=$(4);1u=1u||Y;f(B==\\'5U\\'&&(33.4u.I(/3x|3w|3u/)||4.4i))B=\\'5K\\';6.5u(4,B,1V,1u)},5N:7(4,B,1V,1u){d 4=$(4);1u=1u||Y;f(B==\\'5U\\'&&(33.4u.I(/3x|3w|3u/)||4.4k))B=\\'5K\\';f(4.5x){4.5x(B,1V,1u)}1D f(4.4k){1j{4.4k(\\'2I\\'+B,1V)}1s(e){}}}});f(33.4u.I(/\\\\88\\\\b/))1o.3B(1W,\\'8a\\',1o.66,Y);d 2d={6o:Y,4P:7(){6.6z=1W.8e||J.3R.2G||J.1c.2G||0;6.6F=1W.8g||J.3R.2O||J.1c.2O||0},6u:7(4){d 19=0,15=0;2q{19+=4.2O||0;15+=4.2G||0;4=4.1X}1H(4);c[15,19]},35:7(4){d 19=0,15=0;2q{19+=4.29||0;15+=4.2f||0;4=4.1Q}1H(4);c[15,19]},68:7(4){d 19=0,15=0;2q{19+=4.29||0;15+=4.2f||0;4=4.1Q;f(4){p=k.1R(4,\\'14\\');f(p==\\'3T\\'||p==\\'2o\\')1y}}1H(4);c[15,19]},1Q:7(4){f(4.1Q)c 4.1Q;f(4==J.1c)c 4;1H((4=4.1X)&&4!=J.1c)f(k.1R(4,\\'14\\')!=\\'4G\\')c 4;c J.1c},8o:7(4,x,y){f(6.6o)c 6.6r(4,x,y);6.3g=x;6.34=y;6.1t=6.35(4);c(y>=6.1t[1]&&y<6.1t[1]+4.2k&&x>=6.1t[0]&&x<6.1t[0]+4.2p)},6r:7(4,x,y){d 4S=6.6u(4);6.3g=x+4S[0]-6.6z;6.34=y+4S[1]-6.6F;6.1t=6.35(4);c(6.34>=6.1t[1]&&6.34<6.1t[1]+4.2k&&6.3g>=6.1t[0]&&6.3g<6.1t[0]+4.2p)},8E:7(3Z,4){f(!3Z)c 0;f(3Z==\\'8G\\')c((6.1t[1]+4.2k)-6.34)/4.2k;f(3Z==\\'8K\\')c((6.1t[0]+4.2p)-6.3g)/4.2p},77:7(O,Z){O=$(O);Z=$(Z);Z.l.14=\\'2o\\';d 2P=6.35(O);Z.l.1n=2P[1]+\\'1m\\';Z.l.18=2P[0]+\\'1m\\';Z.l.21=O.2p+\\'1m\\';Z.l.24=O.2k+\\'1m\\'},4e:7(4M){d 19=0,15=0;d 4=4M;2q{19+=4.29||0;15+=4.2f||0;f(4.1Q==J.1c)f(k.1R(4,\\'14\\')==\\'2o\\')1y}1H(4=4.1Q);4=4M;2q{19-=4.2O||0;15-=4.2G||0}1H(4=4.1X);c[15,19]},77:7(O,Z){d m=q.u({5l:11,5r:11,5B:11,5q:11,29:0,2f:0},N[2]||{});O=$(O);d p=2d.4e(O);Z=$(Z);d 2J=[0,0];d 3v=1L;f(k.1R(Z,\\'14\\')==\\'2o\\'){3v=2d.1Q(Z);2J=2d.4e(3v)}f(3v==J.1c){2J[0]-=J.1c.2f;2J[1]-=J.1c.29}f(m.5l)Z.l.18=(p[0]-2J[0]+m.2f)+\\'1m\\';f(m.5r)Z.l.1n=(p[1]-2J[1]+m.29)+\\'1m\\';f(m.5B)Z.l.21=O.2p+\\'1m\\';f(m.5q)Z.l.24=O.2k+\\'1m\\'},8b:7(4){4=$(4);f(4.l.14==\\'2o\\')c;2d.4P();d 2P=2d.68(4);d 1n=2P[1];d 18=2P[0];d 21=4.6m;d 24=4.6p;4.6P=18-3X(4.l.18||0);4.6I=1n-3X(4.l.1n||0);4.5k=4.l.21;4.7f=4.l.24;4.l.14=\\'2o\\';4.l.1n=1n+\\'1m\\';4.l.18=18+\\'1m\\';4.l.21=21+\\'1m\\';4.l.24=24+\\'1m\\'},8w:7(4){4=$(4);f(4.l.14==\\'3T\\')c;2d.4P();4.l.14=\\'3T\\';d 1n=3X(4.l.1n||0)-(4.6I||0);d 18=3X(4.l.18||0)-(4.6P||0);4.l.1n=1n+\\'1m\\';4.l.18=18+\\'1m\\';4.l.24=4.7f;4.l.21=4.5k}};f(/3x|3w|3u/.4v(33.62)){2d.35=7(4){d 19=0,15=0;2q{19+=4.29||0;15+=4.2f||0;f(4.1Q==J.1c)f(k.1R(4,\\'14\\')==\\'2o\\')1y;4=4.1Q}1H(4);c[15,19]}};',62,600,'||||element||this|function|||||return|var||if||value|||Element|style|options||iterator||Object|||length|extend|prototype|index|||new||name|event|Form|transport||for||match|document||result|Ajax|arguments|source|results|form|||Prototype|object|each|push||false|target||true|elements||position|valueL||create|left|valueT|callback|Class|body|bind|Abstract|className|Insertion|tagName|pair|try|select|url|px|top|Event|Enumerable|div|case|catch|offset|useCapture|undefined|container|getValue|break|replacement|pattern|onComplete|map|else|Array|method|property|while|initialize|frequency|range|null|include|join|key|requestHeaders|offsetParent|getStyle|parameter|observers|inspect|observer|window|parentNode|text|toArray|els|width|start|args|height|throw|request||parameters|offsetTop|methods|opt|EventObserver|Position|html|offsetLeft|type|fragments|typeof|fragment|offsetHeight|oStringList|_each|apply|absolute|offsetWidth|do|cache|decay|content|input|emptyFunction|toLowerCase|end|replace|childNodes|registerCallback|display|toString|onTimerEvent|Serializers|readyState|scrollLeft|exclusive|on|delta|lastValue|getElements|in|hash|scrollTop|offsets|stripScripts|iterable|truncation|gsub|template|initializeRange|Responders|insertContent|setTimeout|json||hidden|status|navigator|ycomp|cumulativeOffset|inject||||serialize|responders|_overflow|Methods|collect|adjacency|xcomp|innerHTML|count|split|response|responseIsSuccess|success|Template|responder|dispatchException|evalScripts|pluck|concat|Request|KHTML|parent|Safari|Konqueror|dispatch|failure|receiver|observe|Observer|TimedObserver|ScriptFragment|responseText|script|inputs|ancestor|textarea|classNames|ObjectRange|node|typeName|RegExp|camelize|none|documentElement|ClassNames|relative|right|overflow|HTMLElement|parseFloat|toUpperCase|mode||currentlyExecuting|remove|__method|Base|memo||slice|returnValue|continue|setOptions|String|classNameToRemove|_reverse|page|focus|queryComponent|Hash|attachEvent|post|detachEvent|Version|reverse|encodeURIComponent|disabled|asynchronous|eval|respondToReadyState|activeRequestCount|Complete|appVersion|test|getTransport|containers|matchingInputs|1000|header|updater|Updater|getElementsByTagName|child|responderToAdd|static|tagElements|queryComponents|defaultView|onElementEvent|css|forElement|values|visibility|prepare|mergedHash|pos|offsetcache|_madePositioned|visible|tbody|findOrStore|_nativeExtensions|createElement|digits|trues|found|prepareReplacement|before|camelizedString|insertBefore|selectNodeContents|exception|falses|criteria|classNameToAdd|params|set|destination|last|addEventListener|indexOf|inline|clear|succ|_originalWidth|setLeft|Top|ActiveXObject|scriptTag|matchOne|setHeight|setTop|without|responderToRemove|_observeAndCache|find|reset|removeEventListener|activate|findFirstElement|setRequestHeaders|setWidth|XMLHttpRequest|constructor|application|xml|onCreate|contentType|Field|onStateChange|keydown|Events|evalJSON|stopObserving|inputSelector|img|Content|evalResponse|selectOne|onreadystatechange|keypress|postBody|onException|selectMany|updateContent|setInterval|insertion|PeriodicalUpdater|userAgent|updateComplete|lastText|timer|unloadCache|registerFormCallbacks|positionedOffset|register|parentElement|children|switch|XMLHTTP|_extended|hide|checkbox|update|radio|these|outerHTML|password|clientWidth|one|includeScrollOffsets|clientHeight|nodeValue|withinIncludingScrolloffsets|Try|scrollTo|realOffset|getComputedStyle|show|currentStyle|auto|deltaX|originalPosition|originalVisibility|originalWidth|originalHeight|opera|deltaY|bottom|array|_originalTop|flatten|addMethods|lambda|Toggle|toggle|insertAdjacentHTML|_originalLeft|PeriodicalExecuter|ownerDocument|createRange|createContextualFragment|contentFromAnonymousTable|table|Before|which|matchAll|button|extractScripts|stripTags|pairString|len|collapse|appendChild|After|clone|toQueryParams|Pattern|evaluate|stop|stringValue|preventDefault|charAt|_originalHeight|substring|Bottom|pairs|Function|add|collections|javascript|detect|findAll|entries|from|first|compact|keys|merge|present|toQueryString|getInputs|Msxml2|Microsoft|unregister|disable|urlencoded|blur|300|enable|responseIsFailure|Uninitialized|Loaded|Interactive|_|get|focusFirstElement|open|send|Requested|With|Accept|overrideMimeType|Connection|close|setRequestHeader|getResponseHeader|JSON|gi|submit|Loading|Success|Failure|checked|200|selectedIndex|www|selected|bMSIE|clearTimeout|unload|absolutize|string|getElementById|pageXOffset|getElementsByClassName|pageYOffset|removeChild|replaceChild|click|getHeight|hasClassName|addClassName|removeClassName|within|cleanWhitespace|nodeType|empty|childOf|multiple|change|getPropertyValue|relativize|setStyle|getDimensions|makePositioned|undoPositioned|makeClipping|KEY_BACKSPACE|undoClipping|overlap|KEY_TAB|vertical|KEY_RETURN|KEY_ESC|KEY_LEFT|horizontal|KEY_UP|member|tr|KEY_RIGHT|0_RC_0|Number|instanceof|shift|KEY_DOWN|bindAsEventListener|call|toColorPart|KEY_DELETE|times|finally|callee|srcElement|sub|scan|truncate|isLeftClick|beforeBegin|setStartBefore|im|afterBegin|firstChild|pointerX|unescapeHTML|beforeEnd|pageX|clientX|pointerY|parseQuery|afterEnd|pageY|clientY|RangeError|setStartAfter|all|any|grep|invoke|stopPropagation|max|nextSibling|min|partition|cancelBubble|reject|sortBy|sort|findElement|zip|pop|createTextNode|escapeHTML|strip'.split('|'),0,{})\n\
+\n\
+}\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+", "<!DOCTYPE html>\n\
+<head>\n\
+\n\
+<meta charset=utf8>\n\
+\n\
+<!--\n\
+ Copyright (C) 2007 Apple Inc.  All rights reserved.\n\
+\n\
+ Redistribution and use in source and binary forms, with or without\n\
+ modification, are permitted provided that the following conditions\n\
+ are met:\n\
+ 1. Redistributions of source code must retain the above copyright\n\
+    notice, this list of conditions and the following disclaimer.\n\
+ 2. Redistributions in binary form must reproduce the above copyright\n\
+    notice, this list of conditions and the following disclaimer in the\n\
+    documentation and/or other materials provided with the distribution.\n\
+\n\
+ THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY\n\
+ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\
+ PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR\n\
+ CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
+ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
+ PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
+ PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\
+ OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\
+ (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\
+ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\
+-->\n\
+\n\
+<title>SunSpider string-validate-input</title>\n\
+<link rel=\"stylesheet\" href=\"../sunspider.css\">\n\
+</head>\n\
+\n\
+<body>\n\
+<h3>string-validate-input</h3>\n\
+<div id=\"console\">\n\
+</div>\n\
+<script>\n\
+function record(time) {\n\
+    document.getElementById(\"console\").innerHTML = time + \"ms\";\n\
+    if (window.parent) {\n\
+        parent.recordResult(time);\n\
+    }\n\
+}\n\
+\n\
+var _sunSpiderStartDate = new Date();\n\
+\n\
+letters = new Array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\
+numbers = new Array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26);\n\
+colors  = new Array(\"FF\",\"CC\",\"99\",\"66\",\"33\",\"00\");\n\
+\n\
+var endResult;\n\
+\n\
+function doTest()\n\
+{\n\
+   endResult = \"\";\n\
+\n\
+   // make up email address\n\
+   for (var k=0;k<4000;k++)\n\
+   {\n\
+      name = makeName(6);\n\
+      (k%2)?email=name+\"@mac.com\":email=name+\"(at)mac.com\";\n\
+\n\
+      // validate the email address\n\
+      var pattern = /^[a-zA-Z0-9\\-\\._]+@[a-zA-Z0-9\\-_]+(\\.?[a-zA-Z0-9\\-_]*)\\.[a-zA-Z]{2,3}$/;\n\
+\n\
+      if(pattern.test(email))\n\
+      {\n\
+         var r = email + \" appears to be a valid email address.\";\n\
+         addResult(r);\n\
+      }\n\
+      else\n\
+      {\n\
+         r = email + \" does NOT appear to be a valid email address.\";\n\
+         addResult(r);\n\
+      }\n\
+   }\n\
+\n\
+   // make up ZIP codes\n\
+   for (var s=0;s<4000;s++)\n\
+   {\n\
+      var zipGood = true;\n\
+      var zip = makeNumber(4);\n\
+      (s%2)?zip=zip+\"xyz\":zip=zip.concat(\"7\");\n\
+\n\
+      // validate the zip code\n\
+      for (var i = 0; i < zip.length; i++) {\n\
+          var ch = zip.charAt(i);\n\
+          if (ch < \"0\" || ch > \"9\") {\n\
+              zipGood = false;\n\
+              r = zip + \" contains letters.\";\n\
+              addResult(r);\n\
+          }\n\
+      }\n\
+      if (zipGood && zip.length>5)\n\
+      {\n\
+         zipGood = false;\n\
+         r = zip + \" is longer than five characters.\";\n\
+         addResult(r);\n\
+      }\n\
+      if (zipGood)\n\
+      {\n\
+         r = zip + \" appears to be a valid ZIP code.\";\n\
+         addResult(r);\n\
+      }\n\
+   }\n\
+}\n\
+\n\
+function makeName(n)\n\
+{\n\
+   var tmp = \"\";\n\
+   for (var i=0;i<n;i++)\n\
+   {\n\
+      var l = Math.floor(26*Math.random());\n\
+      tmp += letters[l];\n\
+   }\n\
+   return tmp;\n\
+}\n\
+\n\
+function makeNumber(n)\n\
+{\n\
+   var tmp = \"\";\n\
+   for (var i=0;i<n;i++)\n\
+   {\n\
+      var l = Math.floor(9*Math.random());\n\
+      tmp = tmp.concat(l);\n\
+   }\n\
+   return tmp;\n\
+}\n\
+\n\
+function addResult(r)\n\
+{\n\
+   endResult += \"\\n\" + r;\n\
+}\n\
+\n\
+doTest();\n\
+\n\
+\n\
+var _sunSpiderInterval = new Date() - _sunSpiderStartDate;\n\
+\n\
+record(_sunSpiderInterval);\n\
+</script>\n\
+\n\
+\n\
+</body>\n\
+</html>\n\
+" ];
Index: vendor/sprd/platform/packages/apps/RunIn/assets/sunspider-test-prefix.js
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/assets/sunspider-test-prefix.js	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/assets/sunspider-test-prefix.js	(revision 167997)
@@ -0,0 +1,2 @@
+var tests = [ "3d-cube", "3d-morph", "3d-raytrace", "access-binary-trees", "access-fannkuch", "access-nbody", "access-nsieve", "bitops-3bit-bits-in-byte", "bitops-bits-in-byte", "bitops-bitwise-and", "bitops-nsieve-bits", "controlflow-recursive", "crypto-aes", "crypto-md5", "crypto-sha1", "date-format-tofte", "date-format-xparb", "math-cordic", "math-partial-sums", "math-spectral-norm", "regexp-dna", "string-base64", "string-fasta", "string-tagcloud", "string-unpack-code", "string-validate-input", "3d-cube", "3d-morph", "3d-raytrace", "access-binary-trees", "access-fannkuch", "access-nbody", "access-nsieve", "bitops-3bit-bits-in-byte", "bitops-bits-in-byte", "bitops-bitwise-and", "bitops-nsieve-bits", "controlflow-recursive", "crypto-aes", "crypto-md5", "crypto-sha1", "date-format-tofte", "date-format-xparb", "math-cordic", "math-partial-sums", "math-spectral-norm", "regexp-dna", "string-base64", "string-fasta", "string-tagcloud", "string-unpack-code", "string-validate-input" ];
+var categories = [ "3d", "access", "bitops", "controlflow", "crypto", "date", "math", "regexp", "string" ];
Index: vendor/sprd/platform/packages/apps/RunIn/assets/sunspider.css
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/assets/sunspider.css	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/assets/sunspider.css	(revision 167997)
@@ -0,0 +1,31 @@
+
+body { font-family: sans-serif;
+       margin: 20px; 
+       background-color: #D9D5A1; 
+       color: #1B0636 }
+
+h2 { background-color: #4E8AB9; 
+     margin: -20px -20px 0px -20px; 
+     padding: 30px 20px 30px 20px; 
+     color: yellow;
+     border-bottom: 2px solid #360D6B;
+     zoom: 1.0 /* I CAN HAS LAYOUT? (ie hack) */ }
+
+dt { font-weight: bold }
+
+dd { margin-bottom: 1em; margin-top: 0.5em }
+
+:link { color: #1363A1 }
+:visited { color: #5113A1 }
+
+#testframe { margin-top: 20px;
+	     width: 80%;
+	     height: 500px;
+ 	     border: 2px solid #360D6B }
+
+#logo { float: left;
+        position: relative; 
+        bottom: 0.33em;
+        padding-right: 20px;
+	margin-bottom: -40px; 
+        font-size: 3em }
Index: vendor/sprd/platform/packages/apps/RunIn/assets/sunspider-analyze-results.js
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/assets/sunspider-analyze-results.js	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/assets/sunspider-analyze-results.js	(revision 167997)
@@ -0,0 +1,261 @@
+/*
+ * Copyright (C) 2007 Apple Inc.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+ * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
+ */
+
+var count = output.length;
+
+var itemTotals = {};
+itemTotals.length = count;
+
+var total = 0;
+var categoryTotals = {};
+var testTotalsByCategory = {};
+
+var mean = 0;
+var categoryMeans = {};
+var testMeansByCategory = {};
+
+var stdDev = 0;
+var categoryStdDevs = {};
+var testStdDevsByCategory = {};
+
+var stdErr = 0;
+var categoryStdErrs = {};
+var testStdErrsByCategory = {};
+
+function initialize()
+{
+    itemTotals = {total: []};
+
+    for (var i = 0; i < categories.length; i++) {
+        var category = categories[i];
+        itemTotals[category] = [];
+        categoryTotals[category] = 0;
+        testTotalsByCategory[category] = {};
+        categoryMeans[category] = 0;
+        testMeansByCategory[category] = {};
+        categoryStdDevs[category] = 0;
+        testStdDevsByCategory[category] = {};
+        categoryStdErrs[category] = 0;
+        testStdErrsByCategory[category] = {};
+    }
+
+    for (var i = 0; i < tests.length; i++) {
+        var test = tests[i];
+        itemTotals[test] = [];
+        var category = test.replace(/-.*/, "");
+        testTotalsByCategory[category][test] = 0;
+        testMeansByCategory[category][test] = 0;
+        testStdDevsByCategory[category][test] = 0;
+        testStdErrsByCategory[category][test] = 0;
+    }
+
+    for (var i = 0; i < count; i++) {
+        itemTotals["total"][i] = 0;
+        for (var category in categoryTotals) {
+            itemTotals[category][i] = 0;
+            for (var test in testTotalsByCategory[category]) {
+                itemTotals[test][i] = 0;
+            }
+        }
+    }
+}
+
+function computeItemTotals()
+{
+    for (var i = 0; i < output.length; i++) {
+        var result = output[i];
+        for (var test in result) {
+            var time = result[test];
+            var category = test.replace(/-.*/, "");
+            itemTotals["total"][i] += time;
+            itemTotals[category][i] += time;
+            itemTotals[test][i] += time;
+        }
+    }
+}
+
+function computeTotals()
+{
+    for (var i = 0; i < output.length; i++) {
+        var result = output[i];
+        for (var test in result) {
+            var time = result[test];
+            var category = test.replace(/-.*/, "");
+            total += time;
+            categoryTotals[category] += time;
+            testTotalsByCategory[category][test] += time;
+        }
+    }
+}
+
+function computeMeans()
+{
+    mean = total / count;
+    for (var category in categoryTotals) {
+        categoryMeans[category] = categoryTotals[category] / count;
+        for (var test in testTotalsByCategory[category]) {
+            testMeansByCategory[category][test] = testTotalsByCategory[category][test] / count;
+        }
+    }
+}
+
+function standardDeviation(mean, items)
+{
+    var deltaSquaredSum = 0;
+    for (var i = 0; i < items.length; i++) {
+        var delta = items[i] - mean;
+        deltaSquaredSum += delta * delta;
+    }
+    variance = deltaSquaredSum / (items.length - 1);
+    return Math.sqrt(variance);
+}
+
+function computeStdDevs()
+{
+    stdDev = standardDeviation(mean, itemTotals["total"]);
+    for (var category in categoryStdDevs) {
+        categoryStdDevs[category] = standardDeviation(categoryMeans[category], itemTotals[category]);
+    }
+    for (var category in categoryStdDevs) {
+        for (var test in testStdDevsByCategory[category]) {
+            testStdDevsByCategory[category][test] = standardDeviation(testMeansByCategory[category][test], itemTotals[test]);
+        }
+    }
+}
+
+function computeStdErrors()
+{
+    var sqrtCount = Math.sqrt(count);
+
+    stdErr = stdDev / sqrtCount;
+    for (var category in categoryStdErrs) {
+        categoryStdErrs[category] = categoryStdDevs[category] / sqrtCount;
+    }
+    for (var category in categoryStdDevs) {
+        for (var test in testStdErrsByCategory[category]) {
+            testStdErrsByCategory[category][test] = testStdDevsByCategory[category][test] / sqrtCount;
+        }
+    }
+
+}
+
+var tDistribution = [NaN, NaN, 12.71, 4.30, 3.18, 2.78, 2.57, 2.45, 2.36, 2.31, 2.26, 2.23, 2.20, 2.18, 2.16, 2.14, 2.13, 2.12, 2.11, 2.10, 2.09, 2.09, 2.08, 2.07, 2.07, 2.06, 2.06, 2.06, 2.05, 2.05, 2.05, 2.04, 2.04, 2.04, 2.03, 2.03, 2.03, 2.03, 2.03, 2.02, 2.02, 2.02, 2.02, 2.02, 2.02, 2.02, 2.01, 2.01, 2.01, 2.01, 2.01, 2.01, 2.01, 2.01, 2.01, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 2.00, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.97, 1.96];
+var tMax = tDistribution.length;
+var tLimit = 1.96;
+
+function tDist(n)
+{
+    if (n > tMax)
+        return tLimit;
+    return tDistribution[n];
+}
+
+
+function formatResult(meanWidth, mean, stdErr, n)
+{
+    var meanString = mean.toFixed(1).toString();
+    while (meanString.length < meanWidth) {
+        meanString = " " + meanString;
+    }
+
+    if (n == 1)
+        return meanString + "ms";
+
+    return meanString + "ms +/- " + ((tDist(n) * stdErr / mean) * 100).toFixed(1) + "%";
+}
+
+function computeLabelWidth()
+{
+    var width = "Total".length;
+    for (var category in categoryMeans) {
+        if (category.length + 2 > width)
+            width = category.length + 2;
+    }
+    for (var i = 0; i < tests.length; i++) {
+        var shortName = tests[i].replace(/^[^-]*-/, "");
+        if (shortName.length + 4 > width)
+            width = shortName.length + 4;
+    }
+
+    return width;
+}
+
+function computeMeanWidth()
+{
+    var width = mean.toFixed(1).toString().length;
+    for (var category in categoryMeans) {
+        var candidate = categoryMeans[category].toFixed(2).toString().length;
+        if (candidate > width)
+            width = candidate;
+        for (var test in testMeansByCategory[category]) {
+            var candidate = testMeansByCategory[category][test].toFixed(2).toString().length;
+            if (candidate > width)
+                width = candidate;
+        }
+    }
+
+    return width;
+}
+
+function resultLine(labelWidth, indent, label, meanWidth, mean, stdErr)
+{
+    var result = "";
+    for (i = 0; i < indent; i++) {
+        result += " ";
+    }
+    
+    result += label + ": ";
+
+    for (i = 0; i < (labelWidth - (label.length + indent)); i++) {
+        result += " ";
+    }
+    
+    return result + formatResult(meanWidth, mean, stdErr, count);
+}
+
+function printOutput()
+{
+    var labelWidth = computeLabelWidth();
+    var meanWidth = computeMeanWidth();
+
+    print("\n");
+    print("============================================");
+    if (count == 1)
+        print("RESULTS");
+    else
+        print("RESULTS (means and 95% confidence intervals)");
+    print("--------------------------------------------");
+    print(resultLine(labelWidth, 0, "Total", meanWidth, mean, stdErr));
+    print("--------------------------------------------");
+    for (var category in categoryMeans) {
+        print("");
+        print(resultLine(labelWidth, 2, category, meanWidth, categoryMeans[category], categoryStdErrs[category]));
+        for (var test in testMeansByCategory[category]) {
+            var shortName = test.replace(/^[^-]*-/, "");
+            print(resultLine(labelWidth, 4, shortName, meanWidth, testMeansByCategory[category][test], testStdErrsByCategory[category][test]));
+        }
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/Android.mk
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/Android.mk	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/Android.mk	(revision 167997)
@@ -0,0 +1,18 @@
+LOCAL_PATH:= $(call my-dir)
+include $(CLEAR_VARS)
+
+LOCAL_MODULE_TAGS := optional
+LOCAL_MODULE_PATH := $(TARGET_OUT_DATA)/app/
+LOCAL_STATIC_JAVA_LIBRARIES := dom4jlib
+
+LOCAL_SRC_FILES := $(call all-java-files-under, src)
+LOCAL_PACKAGE_NAME := RunIn
+LOCAL_CERTIFICATE := platform
+#LOCAL_PRIVILEGED_MODULE := true
+include $(BUILD_PACKAGE)
+
+include $(CLEAR_VARS)
+LOCAL_PREBUILT_STATIC_JAVA_LIBRARIES := dom4jlib:lib/dom4j.jar
+include $(BUILD_MULTI_PREBUILT)
+
+include $(call all-makefiles-under,$(LOCAL_PATH))
Index: vendor/sprd/platform/packages/apps/RunIn/AndroidManifest.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/AndroidManifest.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/AndroidManifest.xml	(revision 167997)
@@ -0,0 +1,339 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.techain.runtime"
+    android:sharedUserId="android.uid.system"
+    android:versionCode="@integer/version_code"
+    android:versionName="@string/version_code_name">
+
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.WAKE_LOCK" />
+    <uses-permission android:name="android.permission.CALL_PHONE" />
+    <uses-permission android:name="android.permission.CAMERA" />
+    <uses-permission android:name="android.permission.READ_SMS" />
+    <uses-permission android:name="android.permission.RECEIVE_MMS" />
+    <uses-permission android:name="android.permission.RECEIVE_SMS" />
+    <uses-permission android:name="android.permission.RECEIVE_WAP_PUSH" />
+    <uses-permission android:name="android.permission.SEND_SMS" />
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.WRITE_MEDIA_STORAGE" />
+    <uses-permission android:name="android.permission.WRITE_SMS" />
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
+    <uses-permission android:name="android.permission.BLUETOOTH" />
+    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
+    <uses-permission android:name="android.permission.REORDER_TASKS" />
+    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
+    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
+    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
+    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
+    <uses-permission android:name="android.permission.WRITE_SECURE_SETTINGS" />
+    <uses-permission android:name="android.permission.RECORD_AUDIO" />
+    <uses-permission android:name="android.permission.VIBRATE" />
+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
+    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
+    <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS" />
+    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
+    <uses-permission android:name="android.permission.REBOOT" />
+    <uses-permission android:name="android.permission.MASTER_CLEAR" />
+    <uses-permission android:name="android.permission.SHUTDOWN" />
+
+    <uses-feature android:name="android.hardware.camera" />
+    <uses-feature android:name="android.hardware.camera.autofocus" />
+    <uses-sdk android:minSdkVersion="10" />
+
+    <application
+        android:debuggable="false"
+        android:icon="@drawable/icon"
+        android:label="RunIn"
+        android:theme="@android:style/Theme.Material">
+        <activity
+            android:name="com.mtbf.runner.SingleActivity"
+            android:configChanges="keyboardHidden|orientation"
+            android:label="@string/app_name"
+            android:screenOrientation="portrait" />
+        <activity
+            android:name="com.mtbf.runner.SurfaceActivity"
+            android:screenOrientation="landscape"
+            android:theme="@android:style/Theme.Material.NoActionBar.Fullscreen" />
+        <activity
+            android:name="com.mtbf.runner.ChooseActivity"
+            android:configChanges="keyboardHidden|orientation">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.mtbf.runner.PicActivity"
+            android:screenOrientation="portrait" />
+        <activity
+            android:name="com.mtbf.runner.ComplexActivity"
+            android:label="@string/app_name"
+            android:screenOrientation="portrait"
+            android:windowSoftInputMode="stateHidden|adjustPan">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.mtbf.runner.RunInActivity"
+            android:label="@string/app_name"
+            android:screenOrientation="portrait"
+            android:windowSoftInputMode="stateHidden|adjustPan">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.mtbf.runner.CameraTest"
+            android:screenOrientation="portrait"
+            android:theme="@android:style/Theme.Material.NoActionBar.Fullscreen" />
+        <activity
+            android:name="com.mtbf.runner.ColorActivity"
+            android:screenOrientation="portrait" />
+        <activity
+            android:name="com.mtbf.runner.ScreenTest$Controller"
+            android:label="@string/app_name">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+
+        <receiver
+            android:name="com.mtbf.runner.ScreenTest"
+            android:permission="android.permission.BIND_DEVICE_ADMIN">
+            <meta-data
+                android:name="android.app.device_admin"
+                android:resource="@xml/device_admin_sample" />
+            <intent-filter>
+                <action android:name="android.app.action.DEVICE_ADMIN_ENABLED" />
+            </intent-filter>
+        </receiver>
+        <receiver
+            android:name="com.mtbf.runner.AlarmReceiver"
+            android:process=":remote" />
+
+        <activity
+            android:name="ActivitySettings"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="TesterCanvas"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="org.zeroxlab.kubench.Kubench"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="org.zeroxlab.graphics.DrawCircle"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.techain.runtime.TesterGC"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.techain.runtime.TesterArithmetic"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.techain.runtime.TesterJavascript"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.techain.runtime.TesterScimark2"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.techain.runtime.Report"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.techain.runtime.Upload"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.techain.runtime.TesterMusic"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.techain.runtime.TesterVideo"
+            android:screenOrientation="nosensor"
+            android:theme="@android:style/Theme.Material.NoActionBar.Fullscreen">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.techain.runtime.TesterComplex"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.techain.runtime.TesterLcd"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.techain.runtime.TesterCam"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.techain.runtime.CamTest"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.nea.nehe.lesson08.Run"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.nea.nehe.lesson16.Run"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="org.itri.teapot.TeapotES"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="org.opensolaris.hub.libmicro.NativeTesterMicro"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="org.zeroxlab.byteunix.NativeTesterUbench"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="org.zeroxlab.graphics.DrawRect"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="org.zeroxlab.graphics.DrawArc"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="org.zeroxlab.graphics.DrawText"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="org.zeroxlab.graphics.DrawCircle2"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="org.zeroxlab.graphics.DrawImage"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".SleepTest$TesterSleep"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <category android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.techain.rebootStress.RebootStressActivity"
+            android:screenOrientation="nosensor">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+            </intent-filter>
+        </activity>
+
+        <receiver android:name="com.techain.rebootStress.RebootReceiver">
+            <intent-filter>
+                <action android:name="android.intent.action.BOOT_COMPLETED" />
+                <category android:name="android.intent.category.HOME" />
+            </intent-filter>
+        </receiver>
+        <!--
+        <receiver
+            android:name=".SleepTest"
+            android:permission="android.permission.BIND_DEVICE_ADMIN">
+            <meta-data
+                android:name="android.app.device_admin"
+                android:resource="@xml/device_admin_sample" />
+            <intent-filter>
+                <action android:name="android.app.action.DEVICE_ADMIN_ENABLED" />
+            </intent-filter>
+        </receiver>
+        <!-->
+    </application>
+
+    <uses-permission android:name="android.permission.USES_POLICY_FORCE_LOCK" />
+    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
+
+    <uses-feature android:name="android.hardware.camera" />
+</manifest>
Index: vendor/sprd/platform/packages/apps/RunIn/lib/dom4j.jar
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/lib/dom4j.jar
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/lib/dom4j.jar	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/lib/dom4j.jar	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/lib/dom4j.jar
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/byteunix/NativeTesterUbench.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/byteunix/NativeTesterUbench.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/byteunix/NativeTesterUbench.java	(revision 167997)
@@ -0,0 +1,183 @@
+/*
+ * Copyright (C) 2011 Linaro Limited
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ * Authored by Joseph Chang (bizkit) <bizkit@0xlab.org>
+ */
+
+package org.zeroxlab.byteunix;
+
+import com.techain.runtime.*;
+
+import android.os.Bundle;
+import android.content.Intent;
+import android.util.Log;
+
+import java.util.Arrays;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.HashMap;
+
+import java.util.Collections;
+
+public class NativeTesterUbench extends NativeTester {
+
+    public final String TAG = "TesterUnixBench";
+    public static final String REPORT = "REPORT";
+    public static final String RESULT = "RESULT";
+    public static final List<String> COMMANDS  = Arrays.asList(
+        "dhry2reg 10","dhry2reg 10","dhry2reg 10","dhry2reg 10","dhry2reg 10","dhry2reg 10","dhry2reg 10","dhry2reg 10","dhry2reg 10","dhry2reg 10",
+        "whetstone-double","whetstone-double","whetstone-double","whetstone-double","whetstone-double","whetstone-double","whetstone-double","whetstone-double","whetstone-double","whetstone-double",
+        "execl 30","execl 30","execl 30",
+        "pipe 10","pipe 10","pipe 10","pipe 10","pipe 10","pipe 10","pipe 10","pipe 10","pipe 10","pipe 10",
+        "context1 10","context1 10","context1 10",
+        "spawn 30","spawn 30","spawn 30",
+        "syscall 10","syscall 10","syscall 10","syscall 10","syscall 10","syscall 10","syscall 10","syscall 10","syscall 10","syscall 10",
+
+        "arithoh 10","arithoh 10","arithoh 10","arithoh 10","arithoh 10","arithoh 10","arithoh 10","arithoh 10","arithoh 10","arithoh 10",
+        "double 10","double 10","double 10","double 10","double 10","double 10","double 10","double 10","double 10","double 10",
+        "float 10","float 10","float 10","float 10","float 10","float 10","float 10","float 10","float 10","float 10",
+        "int 10","int 10","int 10","int 10","int 10","int 10","int 10","int 10","int 10","int 10",
+        "long 10","long 10","long 10","long 10","long 10","long 10","long 10","long 10","long 10","long 10",
+        "short 10","short 10","short 10","short 10","short 10","short 10","short 10","short 10","short 10","short 10",
+
+        "fstime -c -t 30 -d ./ -b 1024 -m 2000","fstime -c -t 30 -d ./ -b 1024 -m 2000","fstime -c -t 30 -d ./ -b 1024 -m 2000",
+        "fstime -c -t 30 -d ./ -b 256 -m 500","fstime -c -t 30 -d ./ -b 256 -m 500","fstime -c -t 30 -d ./ -b 256 -m 500",
+        "fstime -c -t 30 -d ./ -b 4096 -m 8000","fstime -c -t 30 -d ./ -b 4096 -m 8000","fstime -c -t 30 -d ./ -b 4096 -m 8000",
+        "fstime -r -t 30 -d ./ -b 1024 -m 2000","fstime -r -t 30 -d ./ -b 1024 -m 2000","fstime -r -t 30 -d ./ -b 1024 -m 2000",
+        "fstime -r -t 30 -d ./ -b 256 -m 500","fstime -r -t 30 -d ./ -b 256 -m 500","fstime -r -t 30 -d ./ -b 256 -m 500",
+        "fstime -r -t 30 -d ./ -b 4096 -m 8000","fstime -r -t 30 -d ./ -b 4096 -m 8000","fstime -r -t 30 -d ./ -b 4096 -m 8000",
+        "fstime -w -t 30 -d ./ -b 1024 -m 2000","fstime -w -t 30 -d ./ -b 1024 -m 2000","fstime -w -t 30 -d ./ -b 1024 -m 2000",
+        "fstime -w -t 30 -d ./ -b 256 -m 500","fstime -w -t 30 -d ./ -b 256 -m 500","fstime -w -t 30 -d ./ -b 256 -m 500",
+        "fstime -w -t 30 -d ./ -b 4096 -m 8000","fstime -w -t 30 -d ./ -b 4096 -m 8000","fstime -w -t 30 -d ./ -b 4096 -m 8000"
+    );
+    public static final HashMap<String, String> commandToName = new HashMap<String, String>() {
+        {
+            put("dhry2reg 10", "dhry2reg");
+            put("whetstone-double", "whetstone-double");
+            put("execl 30", "execl");
+            put("pipe 10", "pipe");
+            put("context1 10", "context1");
+            put("spawn 30", "spawn");
+            put("syscall 10", "syscall");
+
+            put("arithoh 10", "Arithoh");
+            put("double 10", "Arithmetic:double");
+            put("float 10", "Arithmetic:float");
+            put("int 10", "Arithmetic:int");
+            put("long 10", "Arithmetic:long");
+            put("short 10", "Arithmetic:short");
+
+            put("fstime -c -t 30 -d ./ -b 1024 -m 2000", "fstime");
+            put("fstime -c -t 30 -d ./ -b 256 -m 500", "fsbuffer");
+            put("fstime -c -t 30 -d ./ -b 4096 -m 8000", "fsdisk");
+            put("fstime -r -t 30 -d ./ -b 1024 -m 2000", "fstime-r");
+            put("fstime -r -t 30 -d ./ -b 256 -m 500", "fsbuffer-r");
+            put("fstime -r -t 30 -d ./ -b 4096 -m 8000", "fsdisk-r");
+            put("fstime -w -t 30 -d ./ -b 1024 -m 2000", "fstime-w");
+            put("fstime -w -t 30 -d ./ -b 256 -m 500", "fsbuffer-w");
+            put("fstime -w -t 30 -d ./ -b 4096 -m 8000", "fsdisk-w");
+        }
+    };
+
+    
+    @Override
+    protected String getTag() {
+        return "Native Ubench";
+    };
+    @Override
+    protected String getPath() {
+        return "/system/bin/bench_ubench_";
+    }
+    protected final List<String> getCommands() {
+        return COMMANDS;
+    }
+
+    @Override
+    protected boolean saveResult(Intent intent) {
+        /* The strategy of this function is ported directly from the Run perl script of byte unix */
+        Bundle bundle = new Bundle();
+        StringBuilder report = new StringBuilder();
+        for (String command: getCommands()) {
+            if(!mSockets.containsKey(command))
+                continue;
+            report.append(commandToName.get(command));
+            if(mSockets.get(command).trim().length() == 0)
+                continue;
+            String [] lines = mSockets.get(command).trim().split("\n");
+
+            mSockets.remove(command);
+            Log.i(TAG, "line0: " + lines[0]);
+            String [] initFields = lines[0].split("[|]");
+            // COUNT|2734838|1|lps|10.000082
+            StringBuilder list = new StringBuilder();;
+            Integer base = (int)Float.parseFloat(initFields[2]);
+            String unit = initFields[3];
+            ArrayList<Measure> measures = new ArrayList<Measure>();
+            for(String line: lines) {
+                String [] fields = line.trim().split("[|]");
+                if (fields.length != 5) {
+                    Log.w(TAG, "error line: " + line.trim());
+                    continue;
+                }
+                Float count = Float.parseFloat(fields[1]);
+                Float time = Float.parseFloat(fields[4]);
+                if((!fields[3].equals(unit)) || ((int)Float.parseFloat(fields[2]) != base)){
+                    Log.w(TAG, "error line: " + line.trim());
+                    continue;
+                }
+                measures.add(new Measure(count, time));
+            }
+            Collections.sort(measures);
+            List<Measure> topMeasures = measures.subList(0, ( (measures.size()/3)==0? 1: measures.size()/3));
+            for(Measure measure: topMeasures) {
+                if(base == 0) {
+                    list.append(measure.count + " ");
+                } else {
+                    list.append( (measure.count/(measure.time/base)) + " ");
+                }
+            }
+            bundle.putString(command+"S", commandToName.get(command) + "&#040;" + unit + "&#041;");
+            bundle.putString(command+"FA", list.toString().trim());
+            Log.i(TAG, "command: " + command);
+            Log.i(TAG, "save `" + command+"S" + "` -> " + commandToName.get(command) + "(" + unit + ")");
+            Log.i(TAG, "save `" + command+"FA" + "` -> " + list.toString().trim());
+            report.append(" " + list.toString().trim() + "\n");
+        }
+        bundle.putString(REPORT, report.toString());
+        intent.putExtra(RESULT, bundle);
+        return true;
+    }
+}
+
+class Measure implements Comparable {
+    public Float count;
+    public Float time;
+
+    public Measure (Float count, Float time) {
+        super();
+        this.count = count;
+        this.time = time;
+    }
+
+    public int compareTo (Object o) {
+        if (((Measure)o).count > this.count)
+            return 1;
+        if (((Measure)o).count < this.count)
+            return -1;
+        return 0;
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/byteunix/NativeCaseUbench.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/byteunix/NativeCaseUbench.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/byteunix/NativeCaseUbench.java	(revision 167997)
@@ -0,0 +1,139 @@
+/*
+ * Copyright (C) 2011 Linaro Limited
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ * Authored by Joseph Chang (bizkit) <bizkit@0xlab.org>
+ */
+
+package org.zeroxlab.byteunix;
+
+import com.techain.runtime.*;
+
+import android.util.Log;
+
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+
+import java.util.ArrayList;
+
+import org.zeroxlab.byteunix.NativeTesterUbench;
+
+public class NativeCaseUbench  extends Case {
+
+    public static String LIN_RESULT = "LIN_RESULT";
+    protected Bundle mInfo[];
+
+    public static int Repeat = 1;
+    public static int Round  = 1;
+
+    public NativeCaseUbench() {
+        super("NativeCaseUbench", "org.zeroxlab.byteunix.NativeTesterUbench", Repeat, Round);
+
+        mType = "ByteUnix";
+        String [] _tmp = {
+            "system", 
+        };
+        mTags = _tmp;
+
+        generateInfo();
+    }
+
+    public String getTitle() {
+        return "UnixBench";
+    }
+
+    public String getDescription() {
+        return "(Requires root and pre-deployed binaries) UnixBench is the original BYTE UNIX benchmark suite, updated and revised by many people over the years. Takes about 30 minutes to run.";
+    }
+
+    private void generateInfo() {
+        mInfo = new Bundle[Repeat];
+        for (int i = 0; i < mInfo.length; i++) {
+            mInfo[i] = new Bundle();
+        }
+    }
+
+    @Override
+    public void clear() {
+        super.clear();
+        generateInfo();
+    }
+
+    @Override
+    public void reset() {
+        super.reset();
+        generateInfo();
+    }
+
+    @Override
+    public String getResultOutput() {
+        if (!couldFetchReport()) {
+            return "No benchmark report";
+        }
+
+        return mInfo[0].getString(NativeTesterUbench.REPORT);
+    }
+
+    @Override
+    public ArrayList<Scenario> getScenarios () {
+        ArrayList<Scenario> scenarios = new ArrayList<Scenario>();
+
+        Bundle bundle = mInfo[0]; // only 1 run
+        for(String command: NativeTesterUbench.COMMANDS) {
+            if(!bundle.containsKey(command+"S") || !bundle.containsKey(command+"FA"))
+                continue;
+            String name = bundle.getString(command+"S");
+            String results = bundle.getString(command+"FA");
+            bundle.remove(command+"S");
+            bundle.remove(command+"FA");
+            if(name == null || results == null)
+                continue;
+            ArrayList<String> _mTags = new ArrayList<String>();
+            int space = command.indexOf(" ");
+            if(space > 0)
+                _mTags.add((String)("exe:" + command.substring(0, command.indexOf(" "))));
+            else
+                _mTags.add((String)("exe:" + command));
+            //TODO add unit as tag
+            Log.i(TAG, "name: " + name);
+            _mTags.add("unit:" + name.substring(name.indexOf("&#040;")+6, name.indexOf("&#041;")));
+
+            String [] __mTags =  (String[])(_mTags.toArray(new String[_mTags.size()]));
+            Scenario s = new Scenario(name, mType, __mTags, true);
+            s.mStringResults = results;
+            scenarios.add(s);
+        }
+
+        return scenarios;
+    }
+
+    @Override
+    protected boolean saveResult(Intent intent, int index) {
+        Bundle info = intent.getBundleExtra(NativeTesterUbench.RESULT);
+        if (info == null) {
+            Log.i(TAG, "Cannot find LibUbenchInfo");
+            return false;
+        } else {
+            mInfo[index] = info;
+        }
+
+        return true;
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/arithmetic/LinpackLoop.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/arithmetic/LinpackLoop.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/arithmetic/LinpackLoop.java	(revision 167997)
@@ -0,0 +1,577 @@
+package org.zeroxlab.arithmetic;
+
+import com.techain.runtime.TesterArithmetic;
+import android.os.Bundle;
+import android.util.Log;
+
+/*
+
+Reformatted by Jonathan Hardwick (jch@cs.cmu.edu), 3/28/96
+Run benchmark 10 times to decrease effects of timer granularity, 10/20/96
+Compare to LinpackLoopOpt.java.
+See http://www.cs.cmu.edu/~jch/java/linpack.html for details
+
+
+Ported to Java by Reed Wade    (wade@cs.utk.edu) 2/96
+built using JDK 1.0 on solaris
+using "javac -O Linpack.java"
+
+
+Translated to C by Bonnie Toy 5/88
+    (modified on 2/25/94    to fix a problem with daxpy    for
+     unequal increments or equal increments not equal to 1.
+         Jack Dongarra)
+
+*/
+
+import android.util.*;
+
+public class LinpackLoop {
+
+    static Bundle mInfo;
+
+    public static String main(Bundle info) {
+        LinpackLoop l = new LinpackLoop();
+        mInfo = info;
+        return l.run_benchmark();
+    }
+
+    double second_orig = -1;
+    double second() {
+        if (second_orig==-1) {
+            second_orig = System.currentTimeMillis();
+        }
+        return (System.currentTimeMillis() - second_orig)/1000;
+    }
+
+    public String run_benchmark () {
+        double a[][] = new double[200][201];
+        double b[] = new double[200];
+        double x[] = new double[200];
+        double cray,ops,total,norma,normx;
+        double resid,time;
+        double kf;
+        int n,i,ntimes,info,lda,ldaa,kflops;
+        int ipvt[] = new int[200];
+
+        double mflops_result;
+        double residn_result;
+        double time_result;
+        double eps_result;
+
+        lda = 201;
+        ldaa = 200;
+        cray = .056;
+        n = 100;
+
+        ops = (2.0e0*(n*n*n))/3.0 + 2.0*(n*n);
+
+        norma = matgen(a,lda,n,b);
+        time = second();
+        for (i = 0; i < 10; i++) {
+            info = dgefa(a,lda,n,ipvt);
+            dgesl(a,lda,n,ipvt,b,0);
+        }
+        total = (second() - time) / 10.0D;
+
+        for (i = 0; i < n; i++) {
+            x[i] = b[i];
+        }
+        norma = matgen(a,lda,n,b);
+        for (i = 0; i < n; i++) {
+            b[i] = -b[i];
+        }
+        dmxpy(n,b,n,lda,x,a);
+        resid = 0.0;
+        normx = 0.0;
+        for (i = 0; i < n; i++) {
+            resid = (resid > Math.abs((double)b[i]))
+                ? resid : Math.abs((double)b[i]);
+            normx = (normx > Math.abs((double)x[i]))
+                ? normx : Math.abs((double)x[i]);
+        }
+
+        eps_result = epslon((double)1.0);
+        residn_result = resid/( n*norma*normx*eps_result );
+        time_result = total;
+        mflops_result = ops/(1.0e6*total);
+
+        mInfo.putDouble(TesterArithmetic.MFLOPS, mflops_result);
+        mInfo.putDouble(TesterArithmetic.RESIDN, residn_result);
+        mInfo.putDouble(TesterArithmetic.TIME, time_result);
+        mInfo.putDouble(TesterArithmetic.EPS, eps_result);
+
+        Log.e("Benchmark", "Mflops/s: " + mflops_result +
+            "    Time: " + time_result + " secs" +
+            "    Norm Res: " + residn_result +
+            "    Precision: " + eps_result);
+
+        return ("Mflops/s: " + mflops_result +
+            "    Time: " + time_result + " secs" +
+            "    Norm Res: " + residn_result +
+            "    Precision: " + eps_result);
+    }
+
+    double matgen (double a[][], int lda, int n, double b[]) {
+        double norma;
+        int init, i, j;
+
+        init = 1325;
+        norma = 0.0;
+        /*    Next two for() statements switched.    Solver wants
+        matrix in column order. --dmd 3/3/97 --added to this source jch 3/7/97
+        */
+        for (i = 0; i < n; i++) {
+            for (j = 0; j < n; j++) {
+                init = 3125*init % 65536;
+                a[j][i] = (init - 32768.0)/16384.0;
+                norma = (a[j][i] > norma) ? a[j][i] : norma;
+            }
+        }
+        for (i = 0; i < n; i++) {
+            b[i] = 0.0;
+        }
+        for (j = 0; j < n; j++) {
+            for (i = 0; i < n; i++) {
+                b[i] = b[i] + a[j][i];
+            }
+        }
+
+        return norma;
+    }
+
+    /*
+        dgefa factors a double precision matrix by gaussian elimination.
+
+        dgefa is usually called by dgeco, but it can be called
+        directly with a saving in time if    rcond    is not needed.
+        (time for dgeco) = (1 + 9/n)*(time for dgefa) .
+
+        on entry
+
+        a             double precision[n][lda]
+        the matrix to be factored.
+
+        lda         integer
+        the leading dimension of the array    a .
+
+        n             integer
+        the order of the matrix    a .
+
+        on return
+
+        a             an upper triangular matrix and the multipliers
+        which were used to obtain it.
+        the factorization can be written    a = l*u    where
+        l    is a product of permutation and unit lower
+        triangular matrices and    u    is upper triangular.
+
+        ipvt        integer[n]
+        an integer vector of pivot indices.
+
+        info        integer
+        = 0    normal value.
+        = k    if    u[k][k] .eq. 0.0 .    this is not an error
+        condition for this subroutine, but it does
+        indicate that dgesl or dgedi will divide by zero
+        if called.    use    rcond    in dgeco for a reliable
+        indication of singularity.
+
+        linpack. this version dated 08/14/78.
+        cleve moler, university of new mexico, argonne national lab.
+
+        functions
+
+        blas daxpy,dscal,idamax
+    */
+
+    int dgefa( double a[][], int lda, int n, int ipvt[]) {
+        double t;
+        int j,k,kp1,l,nm1;
+        int info;
+
+        // gaussian elimination with partial pivoting
+
+        info = 0;
+        nm1 = n - 1;
+        if (nm1 >=    0) {
+            for (k = 0; k < nm1; k++) {
+                kp1 = k + 1;
+
+                // find l = pivot index
+
+                l = idamax(n-k,a[k],k,1) + k;
+                ipvt[k] = l;
+
+                // zero pivot implies this column already triangularized
+
+                if (a[k][l] != 0) {
+
+                    // interchange if necessary
+
+                    if (l != k) {
+                        t = a[k][l];
+                        a[k][l] = a[k][k];
+                        a[k][k] = t;
+                    }
+
+                    // compute multipliers
+
+                    t = -1.0/a[k][k];
+                    dscal(n-(k+1),t,a[k],k+1,1);
+
+                    // row elimination with column indexing
+
+                    for (j = kp1; j < n; j++) {
+                        t = a[j][l];
+                        if (l != k) {
+                            a[j][l] = a[j][k];
+                            a[j][k] = t;
+                        }
+                        daxpy(n-(k+1),t,a[k],k+1,1,
+                        a[j],k+1,1);
+                    }
+                }
+                else {
+                    info = k;
+                }
+            }
+        }
+        ipvt[n-1] = n-1;
+        if (a[(n-1)][(n-1)] == 0) info = n-1;
+
+        return info;
+    }
+
+    /*
+        dgesl solves the double precision system
+        a * x = b    or    trans(a) * x = b
+        using the factors computed by dgeco or dgefa.
+
+        on entry
+
+        a             double precision[n][lda]
+        the output from dgeco or dgefa.
+
+        lda         integer
+        the leading dimension of the array    a .
+
+        n             integer
+        the order of the matrix    a .
+
+        ipvt        integer[n]
+        the pivot vector from dgeco or dgefa.
+
+        b             double precision[n]
+        the right hand side vector.
+
+        job         integer
+        = 0                 to solve    a*x = b ,
+        = nonzero     to solve    trans(a)*x = b    where
+        trans(a)    is the transpose.
+
+        on return
+
+        b             the solution vector    x .
+
+        error condition
+
+        a division by zero will occur if the input factor contains a
+        zero on the diagonal.    technically this indicates singularity
+        but it is often caused by improper arguments or improper
+        setting of lda .    it will not occur if the subroutines are
+        called correctly and if dgeco has set rcond .gt. 0.0
+        or dgefa has set info .eq. 0 .
+
+        to compute    inverse(a) * c    where    c    is a matrix
+        with    p    columns
+        dgeco(a,lda,n,ipvt,rcond,z)
+        if (!rcond is too small){
+        for (j=0,j<p,j++)
+        dgesl(a,lda,n,ipvt,c[j][0],0);
+        }
+
+        linpack. this version dated 08/14/78 .
+        cleve moler, university of new mexico, argonne national lab.
+
+        functions
+
+        blas daxpy,ddot
+    */
+
+    void dgesl( double a[][], int lda, int n, int ipvt[], double b[], int job) {
+        double t;
+        int k,kb,l,nm1;
+
+        nm1 = n - 1;
+        if (job == 0) {
+
+            // job = 0 , solve    a * x = b.    first solve    l*y = b
+
+            if (nm1 >= 1) {
+                for (k = 0; k < nm1; k++) {
+                    l = ipvt[k];
+                    t = b[l];
+                    if (l != k){
+                        b[l] = b[k];
+                        b[k] = t;
+                    }
+                    daxpy(n-(k+1),t,a[k],k+1,1,b,k+1,1);
+                }
+            }
+
+            // now solve    u*x = y
+
+            for (kb = 0; kb < n; kb++) {
+                k = n - (kb + 1);
+                b[k] = b[k]/a[k][k];
+                t = -b[k];
+                daxpy(k,t,a[k],0,1,b,0,1);
+            }
+        }
+        else {
+
+            // job = nonzero, solve    trans(a) * x = b.    first solve    trans(u)*y = b
+
+            for (k = 0; k < n; k++) {
+                t = ddot(k,a[k],0,1,b,0,1);
+                b[k] = (b[k] - t)/a[k][k];
+            }
+
+            // now solve trans(l)*x = y
+
+            if (nm1 >= 1) {
+                for (kb = 1; kb < nm1; kb++) {
+                    k = n - (kb+1);
+                    b[k] = b[k] + ddot(n-(k+1),a[k],k+1,1,b,k+1,1);
+                    l = ipvt[k];
+                    if (l != k) {
+                        t = b[l];
+                        b[l] = b[k];
+                        b[k] = t;
+                    }
+                }
+            }
+        }
+    }
+
+    /*
+        constant times a vector plus a vector.
+        jack dongarra, linpack, 3/11/78.
+    */
+    void daxpy( int n, double da, double dx[], int dx_off, int incx,
+                double dy[], int dy_off, int incy) {
+        int i,ix,iy,m,mp1;
+
+        if ((n > 0) && (da != 0)) {
+            if (incx != 1 || incy != 1) {
+
+                // code for unequal increments or equal increments not equal to 1
+
+                ix = 0;
+                iy = 0;
+                if (incx < 0) ix = (-n+1)*incx;
+                if (incy < 0) iy = (-n+1)*incy;
+                for (i = 0;i < n; i++) {
+                    dy[iy +dy_off] = dy[iy +dy_off] + da*dx[ix +dx_off];
+                    ix = ix + incx;
+                    iy = iy + incy;
+                }
+                return;
+            } else {
+
+                // code for both increments equal to 1
+
+                int _r = n % 4;
+                int _n = n - _r;
+
+                for (i = 0;i < _n; i+=4) {
+                    dy[i +dy_off] = dy[i +dy_off] + da*dx[i +dx_off];
+                    dy[i+1 +dy_off] = dy[i+1 +dy_off] + da*dx[i+1 +dx_off];
+                    dy[i+2 +dy_off] = dy[i+2 +dy_off] + da*dx[i+2 +dx_off];
+                    dy[i+3 +dy_off] = dy[i+3 +dy_off] + da*dx[i+3 +dx_off];
+                }
+                for (i=_n ;i < n; i++)
+                    dy[i +dy_off] = dy[i +dy_off] + da*dx[i +dx_off];
+            }
+        }
+    }
+
+    /*
+        forms the dot product of two vectors.
+        jack dongarra, linpack, 3/11/78.
+    */
+    double ddot( int n, double dx[], int dx_off, int incx, double dy[],
+                 int dy_off, int incy) {
+        double dtemp;
+        int i,ix,iy,m,mp1;
+
+        dtemp = 0;
+
+        if (n > 0) {
+
+            if (incx != 1 || incy != 1) {
+
+                // code for unequal increments or equal increments not equal to 1
+
+                ix = 0;
+                iy = 0;
+                if (incx < 0) ix = (-n+1)*incx;
+                if (incy < 0) iy = (-n+1)*incy;
+                for (i = 0;i < n; i++) {
+                    dtemp = dtemp + dx[ix +dx_off]*dy[iy +dy_off];
+                    ix = ix + incx;
+                    iy = iy + incy;
+                }
+            } else {
+
+                // code for both increments equal to 1
+
+                for (i=0;i < n; i++)
+                    dtemp = dtemp + dx[i +dx_off]*dy[i +dy_off];
+            }
+        }
+        return(dtemp);
+    }
+
+    /*
+        scales a vector by a constant.
+        jack dongarra, linpack, 3/11/78.
+    */
+    void dscal( int n, double da, double dx[], int dx_off, int incx) {
+        int i,m,mp1,nincx;
+
+        if (n > 0) {
+            if (incx != 1) {
+
+    // code for increment not equal to 1
+
+                nincx = n*incx;
+                for (i = 0; i < nincx; i = i + incx)
+                    dx[i +dx_off] = da*dx[i +dx_off];
+            } else {
+
+                // code for increment equal to 1
+
+                for (i = 0; i < n; i++)
+                    dx[i +dx_off] = da*dx[i +dx_off];
+            }
+        }
+    }
+
+    /*
+        finds the index of element having max. absolute value.
+        jack dongarra, linpack, 3/11/78.
+    */
+    int idamax( int n, double dx[], int dx_off, int incx) {
+        double dmax;
+        int i, ix, itemp=0;
+
+        if (n < 1) {
+            itemp = -1;
+        } else if (n ==1) {
+            itemp = 0;
+        } else if (incx != 1) {
+
+            // code for increment not equal to 1
+
+            ix = 1;
+            dmax = Math.abs((double)dx[0 +dx_off]);
+            ix = ix + incx;
+            for (i = 1; i < n; i++) {
+                if (Math.abs((double)dx[ix +dx_off]) > dmax)    {
+                    itemp = i;
+                    dmax = Math.abs((double)dx[ix +dx_off]);
+                }
+                ix = ix + incx;
+            }
+        } else {
+
+            // code for increment equal to 1
+
+            itemp = 0;
+            dmax = Math.abs((double)dx[0 +dx_off]);
+            for (i = 1; i < n; i++) {
+                if (Math.abs((double)dx[i +dx_off]) > dmax) {
+                    itemp = i;
+                    dmax = Math.abs((double)dx[i +dx_off]);
+                }
+            }
+        }
+        return (itemp);
+    }
+
+    /*
+        estimate unit roundoff in quantities of size x.
+
+        this program should function properly on all systems
+        satisfying the following two assumptions,
+        1.    the base used in representing dfloating point
+        numbers is not a power of three.
+        2.    the quantity    a    in statement 10 is represented to
+        the accuracy used in dfloating point variables
+        that are stored in memory.
+        the statement number 10 and the go to 10 are intended to
+        force optimizing compilers to generate code satisfying
+        assumption 2.
+        under these assumptions, it should be true that,
+        a    is not exactly equal to four-thirds,
+        b    has a zero for its last bit or digit,
+        c    is not exactly equal to one,
+        eps    measures the separation of 1.0 from
+        the next larger dfloating point number.
+        the developers of eispack would appreciate being informed
+        about any systems where these assumptions do not hold.
+
+        *****************************************************************
+        this routine is one of the auxiliary routines used by eispack iii
+        to avoid machine dependencies.
+        *****************************************************************
+
+        this version dated 4/6/83.
+    */
+    double epslon (double x) {
+        double a,b,c,eps;
+
+        a = 4.0e0/3.0e0;
+        eps = 0;
+        while (eps == 0) {
+            b = a - 1.0;
+            c = b + b + b;
+            eps = Math.abs((double)(c-1.0));
+        }
+        return(eps*Math.abs((double)x));
+    }
+
+    /*
+        purpose:
+        multiply matrix m times vector x and add the result to vector y.
+
+        parameters:
+
+        n1 integer, number of elements in vector y, and number of rows in
+        matrix m
+
+        y double [n1], vector of length n1 to which is added
+        the product m*x
+
+        n2 integer, number of elements in vector x, and number of columns
+        in matrix m
+
+        ldm integer, leading dimension of array m
+
+        x double [n2], vector of length n2
+
+        m double [ldm][n2], matrix of n1 rows and n2 columns
+    */
+    void dmxpy ( int n1, double y[], int n2, int ldm, double x[], double m[][]) {
+        int j,i,jmin;
+
+        // cleanup odd vector
+        for (j = 0; j < n2; j++) {
+            for (i = 0; i < n1; i++) {
+                y[i] = (y[i]) + x[j]*m[j][i];
+            }
+        }
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/gc/GCBenchmark.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/gc/GCBenchmark.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/gc/GCBenchmark.java	(revision 167997)
@@ -0,0 +1,201 @@
+/*
+ * This is adapted from a benchmark written by John Ellis and Pete Kovac
+ * of Post Communications.
+ * It was modified by Hans Boehm of Silicon Graphics.
+ *
+ * This is no substitute for real applications.  No actual application
+ * is likely to behave in exactly this way.  However, this benchmark was
+ * designed to be more representative of real applications than other
+ * Java GC benchmarks of which we are aware.
+ * It attempts to model those properties of allocation requests that
+ * are important to current GC techniques.
+ * It is designed to be used either to obtain a single overall performance
+ * number, or to give a more detailed estimate of how collector
+ * performance varies with object lifetimes.  It prints the time
+ * required to allocate and collect balanced binary trees of various
+ * sizes.  Smaller trees result in shorter object lifetimes.  Each cycle
+ * allocates roughly the same amount of memory.
+ * Two data structures are kept around during the entire process, so
+ * that the measured performance is representative of applications
+ * that maintain some live in-memory data.  One of these is a tree
+ * containing many pointers.  The other is a large array containing
+ * double precision floating point numbers.  Both should be of comparable
+ * size.
+ *
+ * The results are only really meaningful together with a specification
+ * of how much memory was used.  It is possible to trade memory for
+ * better time performance.  This benchmark should be run in a 32 MB
+ * heap, though we don't currently know how to enforce that uniformly.
+ * Unlike the original Ellis and Kovac benchmark, we do not attempt
+ * measure pause times.  This facility should eventually be added back
+ * in.  There are several reasons for omitting it for now.  The original
+ * implementation depended on assumptions about the thread scheduler
+ * that don't hold uniformly.  The results really measure both the
+ * scheduler and GC.  Pause time measurements tend to not fit well with
+ * current benchmark suites.  As far as we know, none of the current
+ * commercial Java implementations seriously attempt to minimize GC pause
+ * times.
+ *
+ *	Known deficiencies:
+ *		- No way to check on memory use
+ *		- No cyclic data structures
+ *		- No attempt to measure variation with object size
+ *		- Results are sensitive to locking cost, but we dont
+ *		  check for proper locking
+ */
+
+package org.zeroxlab.gc;
+
+import com.techain.runtime.TesterGC;
+
+import android.os.Message;
+
+class Node {
+    Node left, right;
+    int i, j;
+    Node(Node l, Node r) { left = l; right = r; }
+    Node() { }
+}
+
+public class GCBenchmark  {
+    public static final int kStretchTreeDepth    = 16;    // about 8Mb
+    public static final int kLongLivedTreeDepth  = 14;  // about 2Mb
+    public static final int kArraySize  = 125000;  // about 2Mb
+    public static final int kMinTreeDepth = 2;
+    public static final int kMaxTreeDepth = 8;
+
+    public static StringBuffer out = new StringBuffer();
+
+    static void update(String s){
+        out.append(s+"\n");
+        Message m = new Message();
+        m.what = TesterGC.GUINOTIFIER;
+        TesterGC.mHandler.sendMessage(m);
+    }
+
+    // Nodes used by a tree of a given size
+    static int TreeSize(int i) {
+        return ((1 << (i + 1)) - 1);
+    }
+
+    // Number of iterations to use for a given tree depth
+    static int NumIters(int i) {
+        return 2 * TreeSize(kStretchTreeDepth) / TreeSize(i);
+    }
+
+    // Build tree top down, assigning to older objects.
+    static void Populate(int iDepth, Node thisNode) {
+        if (iDepth<=0) {
+            return;
+        } else {
+            iDepth--;
+            thisNode.left  = new Node();
+            thisNode.right = new Node();
+            Populate (iDepth, thisNode.left);
+            Populate (iDepth, thisNode.right);
+        }
+    }
+
+    // Build tree bottom-up
+    static Node MakeTree(int iDepth) {
+        if (iDepth<=0) {
+            return new Node();
+        } else {
+            return new Node(MakeTree(iDepth-1),
+                    MakeTree(iDepth-1));
+        }
+    }
+
+    static void PrintDiagnostics() {
+        long lFreeMemory = Runtime.getRuntime().freeMemory();
+        long lTotalMemory = Runtime.getRuntime().totalMemory();
+
+        update("*Total memory:"
+                + lTotalMemory + " bytes");
+        update("*Free  memory:" + lFreeMemory + " bytes\n");
+    }
+
+    static void TimeConstruction(int depth) {
+        Node    root;
+        long    tStart, tFinish;
+        int     iNumIters = NumIters(depth);
+        Node    tempTree;
+
+        update("Create " + iNumIters +
+                " trees of depth " + depth);
+        tStart = System.currentTimeMillis();
+        for (int i = 0; i < iNumIters; ++i) {
+            tempTree = new Node();
+            Populate(depth, tempTree);
+            tempTree = null;
+        }
+        tFinish = System.currentTimeMillis();
+        update("- Top down: "
+                + (tFinish - tStart) + "msecs");
+        tStart = System.currentTimeMillis();
+        for (int i = 0; i < iNumIters; ++i) {
+            tempTree = MakeTree(depth);
+            tempTree = null;
+        }
+        tFinish = System.currentTimeMillis();
+        update("- Bottom up: "
+                + (tFinish - tStart) + "msecs");
+
+    }
+
+    public static void benchmark() {
+        out = new StringBuffer();
+        Node    root;
+        Node    longLivedTree;
+        Node    tempTree;
+        long    tStart, tFinish;
+        long    tElapsed;
+
+        //    Debug.startMethodTracing("gcbench");
+        // update("Garbage Collector Test");
+        update(
+                "Stretching memory:\n    binary tree of depth "
+                + kStretchTreeDepth);
+        PrintDiagnostics();
+        tStart = System.currentTimeMillis();
+
+        // Stretch the memory space quickly
+        tempTree = MakeTree(kStretchTreeDepth);
+        tempTree = null;
+
+        // Create a long lived object
+        update(
+                "Creating:\n    long-lived binary tree of depth " +
+                kLongLivedTreeDepth);
+        longLivedTree = new Node();
+        Populate(kLongLivedTreeDepth, longLivedTree);
+
+        // Create long-lived array, filling half of it
+        update(
+                "    long-lived array of "
+                + kArraySize + " doubles");
+        double array[] = new double[kArraySize];
+        for (int i = 0; i < kArraySize/2; ++i) {
+            array[i] = 1.0/i;
+        }
+        PrintDiagnostics();
+
+        for (int d = kMinTreeDepth; d <= kMaxTreeDepth; d += 2) {
+            TimeConstruction(d);
+        }
+
+        if (longLivedTree == null || array[1000] != 1.0/1000)
+            update("Failed");
+        // fake reference to LongLivedTree
+        // and array
+        // to keep them from being optimized away
+
+        tFinish = System.currentTimeMillis();
+        tElapsed = tFinish-tStart;
+        PrintDiagnostics();
+        update("Completed in " + tElapsed + "ms.");
+        TesterGC.time = tElapsed;
+        //Debug.stopMethodTracing();
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/GLShape.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/GLShape.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/GLShape.java	(revision 167997)
@@ -0,0 +1,102 @@
+/* 
+ * Copyright (C) 2008 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.kubench;
+
+import java.nio.ShortBuffer;
+import java.util.ArrayList;
+import java.util.Iterator;
+
+public class GLShape {
+
+    public GLShape(GLWorld world) {
+        mWorld = world;
+    }
+    
+    public void addFace(GLFace face) {
+        mFaceList.add(face);
+    }
+    
+    public void setFaceColor(int face, GLColor color) {
+        mFaceList.get(face).setColor(color);
+    }
+            
+    public void putIndices(ShortBuffer buffer) {
+        Iterator<GLFace> iter = mFaceList.iterator();
+        while (iter.hasNext()) {
+            GLFace face = iter.next();
+            face.putIndices(buffer);
+        }        
+    }
+    
+    public int getIndexCount() {
+        int count = 0;
+        Iterator<GLFace> iter = mFaceList.iterator();
+        while (iter.hasNext()) {
+            GLFace face = iter.next();
+            count += face.getIndexCount();
+        }        
+        return count;
+    }
+
+    public GLVertex addVertex(float x, float y, float z) {
+        
+        // look for an existing GLVertex first
+        Iterator<GLVertex> iter = mVertexList.iterator();
+        while (iter.hasNext()) {
+            GLVertex vertex = iter.next();
+            if (vertex.x == x && vertex.y == y && vertex.z == z) {
+                return vertex;
+            }
+        }
+        
+        // doesn't exist, so create new vertex
+        GLVertex vertex = mWorld.addVertex(x, y, z);
+        mVertexList.add(vertex);
+        return vertex;
+    }
+
+    public void animateTransform(M4 transform) {
+        mAnimateTransform = transform;
+        
+        if (mTransform != null)
+            transform = mTransform.multiply(transform);
+
+        Iterator<GLVertex> iter = mVertexList.iterator();
+        while (iter.hasNext()) {
+            GLVertex vertex = iter.next();
+            mWorld.transformVertex(vertex, transform);
+        }
+    }
+    
+    public void startAnimation() {
+    }
+
+    public void endAnimation() {
+        if (mTransform == null) {
+            mTransform = new M4(mAnimateTransform);
+        } else {
+            mTransform = mTransform.multiply(mAnimateTransform);
+        }
+    }
+
+    public M4                        mTransform;
+    public M4                        mAnimateTransform;
+    protected ArrayList<GLFace>        mFaceList = new ArrayList<GLFace>();
+    protected ArrayList<GLVertex>    mVertexList = new ArrayList<GLVertex>();
+    protected ArrayList<Integer>    mIndexList = new ArrayList<Integer>();    // make more efficient?
+    protected GLWorld mWorld;
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/GLSurfaceView.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/GLSurfaceView.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/GLSurfaceView.java	(revision 167997)
@@ -0,0 +1,322 @@
+/* 
+ * Copyright (C) 2008 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.kubench;
+
+import com.techain.runtime.Tester;
+
+import android.app.Activity;
+import android.content.Context;
+import android.util.Log;
+import android.view.SurfaceHolder;
+import android.view.SurfaceView;
+
+import javax.microedition.khronos.egl.*;
+import javax.microedition.khronos.opengles.*;
+
+
+/**
+ * Example of how to use OpenGL|ES in a custom view
+ *
+ */
+public class GLSurfaceView extends SurfaceView implements SurfaceHolder.Callback {
+    SurfaceHolder mHolder;
+    private GLThread mGLThread;
+    private GLWorld mWorld;
+    private float mAngle;
+    private GLSurfaceViewClient mClient;
+    private Tester mTester;
+    
+    /**
+     * The View constructor is a good place to allocate our OpenGL context
+     */
+    public GLSurfaceView(Context context, GLWorld world, Tester tester) {
+        super(context);
+    mTester = tester;
+        mWorld = world;
+        mHolder = getHolder();
+        mHolder.addCallback(this);
+        mHolder.setType(SurfaceHolder.SURFACE_TYPE_GPU);
+    }
+
+    public void surfaceCreated(SurfaceHolder holder) {
+        // The Surface has been created, start our main acquisition mWorkThread.
+        Log.d("GLSurfaceView", "surfaceCreated");
+        mGLThread = new GLThread();
+        mGLThread.start();
+    }
+
+    public void surfaceDestroyed(SurfaceHolder holder) {
+        // Surface will be destroyed when we return
+        Log.d("GLSurfaceView", "surfaceDestroyed");
+        mGLThread.requestExitAndWait();
+        mGLThread = null;
+    }
+
+    public void surfaceChanged(SurfaceHolder holder, int format, int w, int h) {
+        // Surface size or format has changed. This should not happen in this
+        // example.
+        Log.d("GLSurfaceView", "surfaceChanged");
+        mGLThread.onWindowResize(w, h);
+    }
+    
+    public float getAngle() {
+        return mAngle;
+    }
+    
+    public void setAngle(float angle) {
+        mAngle = angle;
+    }
+    
+    public void setClient(GLSurfaceViewClient client) {
+        mClient = client;
+    }
+ 
+    // ----------------------------------------------------------------------
+    
+    public interface GLSurfaceViewClient {
+        public void animate();
+    }
+    
+    public float getFramerate() {
+        return mGLThread.getFramerate();
+    }
+    
+    // ----------------------------------------------------------------------
+
+    class GLThread extends Thread {
+        private boolean mDone;
+        private int mWidth;
+        private int mHeight;
+        private float mFramerate;
+
+        GLThread() {
+            super();
+            mDone = false;
+            mWidth = 0;
+            mHeight = 0;
+            mFramerate = 0.0f;
+        }
+    
+        public float getFramerate() {
+            return mFramerate;
+        }
+        
+        @Override
+        public void run() {
+            /*
+             * Get an EGL instance
+             */
+            EGL10 egl = (EGL10)EGLContext.getEGL();
+            
+            /*
+             * Get to the default display.
+             */
+            EGLDisplay dpy = egl.eglGetDisplay(EGL10.EGL_DEFAULT_DISPLAY);
+
+            /*
+             * We can now initialize EGL for that display
+             */
+            int[] version = new int[2];
+            egl.eglInitialize(dpy, version);
+            
+            /*
+             * Specify a configuration for our opengl session
+             * and grab the first configuration that matches is
+             */
+            int[] configSpec = {
+                    EGL10.EGL_DEPTH_SIZE,   16,
+                    EGL10.EGL_NONE
+            };
+            EGLConfig[] configs = new EGLConfig[1];
+            int[] num_config = new int[1];
+            egl.eglChooseConfig(dpy, configSpec, configs, 1, num_config);
+            EGLConfig config = configs[0];
+
+            /* 
+             * Create an OpenGL ES context. This must be done only once, an
+             * OpenGL context is a somewhat heavy object.
+             */
+            EGLContext context = egl.eglCreateContext(dpy, config,
+                    EGL10.EGL_NO_CONTEXT, null);
+
+            /* 
+             * Create an EGL surface we can render into.
+             */
+            EGLSurface surface = egl.eglCreateWindowSurface(dpy, config, mHolder, null);
+
+            /*
+             * Before we can issue GL commands, we need to make sure 
+             * the context is current and bound to a surface.
+             */
+            egl.eglMakeCurrent(dpy, surface, surface, context);
+            
+            /*
+             * Get to the appropriate GL interface.
+             * This is simply done by casting the GL context to either
+             * GL10 or GL11.
+             */
+            GL10 gl = (GL10)context.getGL();
+
+           
+            /*
+             * Some one-time OpenGL initialization can be made here
+             * probably based on features of this particular context
+             */
+             gl.glHint(GL10.GL_PERSPECTIVE_CORRECTION_HINT, GL10.GL_FASTEST);
+
+
+            // This is our main acquisition mWorkThread's loop, we go until
+            // asked to quit.
+             long starttime=0, stoptime=0, drawcount=0;
+         long startTester = System.currentTimeMillis();
+            while (!mDone) {
+                // Update the asynchronous state (window size, key events)
+                int w, h;
+                synchronized(this) {
+                    w = mWidth;
+                    h = mHeight;
+                }
+                if (starttime == 0) {
+                    starttime = System.currentTimeMillis();
+                }
+
+                /* draw a frame here */
+                drawFrame(gl, w, h);
+
+                /*
+                 * Once we're done with GL, we need to call post()
+                 */
+                egl.eglSwapBuffers(dpy, surface);
+        gl.glFinish();
+        mTester.decreaseCounter();
+        mDone = mTester.isTesterFinished();
+                drawcount++;
+                stoptime = System.currentTimeMillis();
+                if (stoptime - starttime >= 1) {
+                    mFramerate = (float)(1000 * drawcount)/(float)(stoptime - starttime);
+                    drawcount = 0;
+                }
+
+                /*
+                 * Always check for EGL_CONTEXT_LOST, which means the context
+                 * and all associated data were lost (For instance because
+                 * the device went to sleep). We need to quit immediately.
+                 */
+                if (egl.eglGetError() == EGL11.EGL_CONTEXT_LOST) {
+                    // we lost the gpu, quit immediately
+                    Context c = getContext();
+                    if (c instanceof Activity) {
+                        ((Activity)c).finish();
+                    }
+                }
+            }
+            
+         long stopTester = System.currentTimeMillis();
+            /*
+             * clean-up everything...
+             */
+            egl.eglMakeCurrent(dpy,
+                    EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_CONTEXT);
+            egl.eglDestroyContext(dpy, context);
+            egl.eglDestroySurface(dpy, surface);
+            egl.eglTerminate(dpy);
+        mTester.finishTester(startTester, stopTester);
+        }
+        
+        private void drawFrame(GL10 gl, int w, int h) {
+            gl.glViewport(0, 0, w, h);
+        
+            /*
+             * Set our projection matrix. This doesn't have to be done
+             * each time we draw, but usually a new projection needs to be set
+             * when the viewport is resized.
+             */
+
+            float ratio = (float)w / h;
+            gl.glMatrixMode(GL10.GL_PROJECTION);
+            gl.glLoadIdentity();
+            gl.glFrustumf(-ratio, ratio, -1, 1, 2, 12);
+
+            /*
+             * By default, OpenGL enables features that improve quality
+             * but reduce performance. One might want to tweak that
+             * especially on software renderer.
+             */
+            gl.glDisable(GL10.GL_DITHER);
+            gl.glActiveTexture(GL10.GL_TEXTURE0);
+            gl.glBindTexture(GL10.GL_TEXTURE_2D, 0);
+            gl.glTexParameterx(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_WRAP_S, GL10.GL_CLAMP_TO_EDGE);
+            gl.glTexParameterx(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_WRAP_T, GL10.GL_CLAMP_TO_EDGE);
+            gl.glTexParameterx(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_NEAREST);
+            gl.glTexParameterx(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
+            gl.glTexEnvx(GL10.GL_TEXTURE_ENV, GL10.GL_TEXTURE_ENV_MODE, GL10.GL_REPLACE);
+
+            /*
+             * Usually, the first thing one might want to do is to clear
+             * the screen. The most efficient way of doing this is to use
+             * glClear(). However we must make sure to set the scissor
+             * correctly first. The scissor is always specified in window
+             * coordinates:
+             */
+
+            gl.glClearColor(0.5f,0.5f,0.5f,1);
+            gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
+
+            /*
+             * Now we're ready to draw some 3D object
+             */
+
+            gl.glMatrixMode(GL10.GL_MODELVIEW);
+            gl.glLoadIdentity();
+            gl.glTranslatef(0, 0, -3.0f);
+            gl.glScalef(0.5f, 0.5f, 0.5f);
+            gl.glRotatef(mAngle,        0, 1, 0);
+            gl.glRotatef(mAngle*0.25f,  1, 0, 0);
+
+            gl.glColor4f(0.7f, 0.7f, 0.7f, 1.0f);
+            gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);
+            gl.glEnableClientState(GL10.GL_COLOR_ARRAY);
+            gl.glEnable(GL10.GL_CULL_FACE); 
+            gl.glShadeModel(GL10.GL_SMOOTH);
+            gl.glEnable(GL10.GL_DEPTH_TEST);   
+
+            mWorld.draw(gl);
+
+            if (mClient != null) {
+                mClient.animate();
+            }
+        }
+
+        public void onWindowResize(int w, int h) {
+            synchronized(this) {
+                mWidth = w;
+                mHeight = h;
+            }
+        }
+        
+        public void requestExitAndWait() {
+            // don't call this from GLThread mWorkThread or it a guaranteed
+            // deadlock!
+            mDone = true;
+            try {
+                join();
+            } catch (InterruptedException ex) { }
+        }
+    }
+}
+
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/GLWorld.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/GLWorld.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/GLWorld.java	(revision 167997)
@@ -0,0 +1,98 @@
+/* 
+ * Copyright (C) 2008 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.kubench;
+
+import java.nio.ByteBuffer;
+import java.nio.ByteOrder;
+import java.nio.IntBuffer;
+import java.nio.ShortBuffer;
+import java.util.Iterator;
+import java.util.ArrayList;
+
+import javax.microedition.khronos.opengles.GL10;
+
+public class GLWorld {
+
+    public void addShape(GLShape shape) {
+        mShapeList.add(shape);
+        mIndexCount += shape.getIndexCount();
+    }
+    
+    public void generate() {        
+        ByteBuffer bb = ByteBuffer.allocateDirect(mVertexList.size()*4*4);
+        bb.order(ByteOrder.nativeOrder());
+        mColorBuffer = bb.asIntBuffer();
+
+        bb = ByteBuffer.allocateDirect(mVertexList.size()*4*3);
+        bb.order(ByteOrder.nativeOrder());
+        mVertexBuffer = bb.asIntBuffer();
+
+        bb = ByteBuffer.allocateDirect(mIndexCount*2);
+        bb.order(ByteOrder.nativeOrder());
+        mIndexBuffer = bb.asShortBuffer();
+
+        Iterator<GLVertex> iter2 = mVertexList.iterator();
+        while (iter2.hasNext()) {
+            GLVertex vertex = iter2.next();
+            vertex.put(mVertexBuffer, mColorBuffer);
+        }
+
+        Iterator<GLShape> iter3 = mShapeList.iterator();
+        while (iter3.hasNext()) {
+            GLShape shape = iter3.next();
+            shape.putIndices(mIndexBuffer);
+        }
+    }
+    
+    public GLVertex addVertex(float x, float y, float z) {
+        GLVertex vertex = new GLVertex(x, y, z, mVertexList.size());
+        mVertexList.add(vertex);
+        return vertex;
+    }
+    
+    public void transformVertex(GLVertex vertex, M4 transform) {
+        vertex.update(mVertexBuffer, transform);
+    }
+
+    int count = 0;
+    public void draw(GL10 gl)
+    {
+        mColorBuffer.position(0);
+        mVertexBuffer.position(0);
+        mIndexBuffer.position(0);
+
+        gl.glFrontFace(GL10.GL_CW);
+        gl.glShadeModel(GL10.GL_FLAT);
+        gl.glVertexPointer(3, GL10.GL_FIXED, 0, mVertexBuffer);
+        gl.glColorPointer(4, GL10.GL_FIXED, 0, mColorBuffer);
+        gl.glDrawElements(GL10.GL_TRIANGLES, mIndexCount, GL10.GL_UNSIGNED_SHORT, mIndexBuffer);
+        count++;
+    }
+   
+    static public float toFloat(int x) {
+        return x/65536.0f;
+    }
+
+    private ArrayList<GLShape>    mShapeList = new ArrayList<GLShape>();    
+    private ArrayList<GLVertex>    mVertexList = new ArrayList<GLVertex>();
+    
+    private int mIndexCount = 0;
+
+    private IntBuffer   mVertexBuffer;
+    private IntBuffer   mColorBuffer;
+    private ShortBuffer mIndexBuffer;
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/Layer.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/Layer.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/Layer.java	(revision 167997)
@@ -0,0 +1,101 @@
+/* 
+ * Copyright (C) 2008 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.kubench;
+
+public class Layer {
+    
+    public Layer(int axis) {
+        // start with identity matrix for transformation
+        mAxis = axis;
+        mTransform.setIdentity();
+    }
+    
+    public void startAnimation() {
+        for (int i = 0; i < mShapes.length; i++) {
+            GLShape shape = mShapes[i];
+            if (shape != null) {
+                shape.startAnimation();
+            }    
+        }
+    }
+
+    public void endAnimation() {
+        for (int i = 0; i < mShapes.length; i++) {
+            GLShape shape = mShapes[i];
+            if (shape != null) {
+                shape.endAnimation();
+            }    
+        }
+    }
+    
+    public void setAngle(float angle) {
+        // normalize the angle
+        float twopi = (float)Math.PI *2f;
+        while (angle >= twopi) angle -= twopi;
+        while (angle < 0f) angle += twopi;
+//        mAngle = angle;
+        
+        float sin = (float)Math.sin(angle);
+        float cos = (float)Math.cos(angle);
+        
+        float[][] m = mTransform.m;
+        switch (mAxis) {
+            case kAxisX:
+                m[1][1] = cos;
+                m[1][2] = sin;
+                m[2][1] = -sin;
+                m[2][2] = cos;
+                m[0][0] = 1f;
+                m[0][1] = m[0][2] = m[1][0] = m[2][0] = 0f;
+                break;
+            case kAxisY:
+                m[0][0] = cos;
+                m[0][2] = sin;
+                m[2][0] = -sin;
+                m[2][2] = cos;
+                m[1][1] = 1f;
+                m[0][1] = m[1][0] = m[1][2] = m[2][1] = 0f;
+                break;
+            case kAxisZ:
+                m[0][0] = cos;
+                m[0][1] = sin;
+                m[1][0] = -sin;
+                m[1][1] = cos;
+                m[2][2] = 1f;
+                m[2][0] = m[2][1] = m[0][2] = m[1][2] = 0f;
+                break;
+        }
+        
+        for (int i = 0; i < mShapes.length; i++) {
+            GLShape shape = mShapes[i];
+            if (shape != null) {
+                shape.animateTransform(mTransform);
+            }
+        }
+    }
+    
+    public GLShape[] mShapes = new GLShape[9];
+    M4 mTransform = new M4();
+//    float mAngle;
+
+    // which axis do we rotate around?
+    // 0 for X, 1 for Y, 2 for Z
+    int mAxis;
+    static public final int kAxisX = 0;
+    static public final int kAxisY = 1;
+    static public final int kAxisZ = 2;    
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/Cube.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/Cube.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/Cube.java	(revision 167997)
@@ -0,0 +1,57 @@
+/* 
+ * Copyright (C) 2008 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.kubench;
+
+
+public class Cube extends GLShape {
+
+    public Cube(GLWorld world, float left, float bottom, float back, float right, float top, float front) {
+        super(world);
+        GLVertex leftBottomBack = addVertex(left, bottom, back);
+        GLVertex rightBottomBack = addVertex(right, bottom, back);
+        GLVertex leftTopBack = addVertex(left, top, back);
+        GLVertex rightTopBack = addVertex(right, top, back);
+        GLVertex leftBottomFront = addVertex(left, bottom, front);
+        GLVertex rightBottomFront = addVertex(right, bottom, front);
+        GLVertex leftTopFront = addVertex(left, top, front);
+        GLVertex rightTopFront = addVertex(right, top, front);
+
+        // vertices are added in a clockwise orientation (when viewed from the outside)
+        // bottom
+        addFace(new GLFace(leftBottomBack, leftBottomFront, rightBottomFront, rightBottomBack));
+        // front
+        addFace(new GLFace(leftBottomFront, leftTopFront, rightTopFront, rightBottomFront));
+        // left
+        addFace(new GLFace(leftBottomBack, leftTopBack, leftTopFront, leftBottomFront));
+        // right
+        addFace(new GLFace(rightBottomBack, rightBottomFront, rightTopFront, rightTopBack));
+        // back
+        addFace(new GLFace(leftBottomBack, rightBottomBack, rightTopBack, leftTopBack));
+        // top
+        addFace(new GLFace(leftTopBack, rightTopBack, rightTopFront, leftTopFront));
+        
+    }
+    
+    public static final int kBottom = 0;
+    public static final int kFront = 1;
+    public static final int kLeft = 2;
+    public static final int kRight = 3;
+    public static final int kBack = 4;
+    public static final int kTop = 5;
+
+    
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/Kubench.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/Kubench.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/Kubench.java	(revision 167997)
@@ -0,0 +1,388 @@
+/* 
+ * Copyright (C) 2008 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.kubench;
+
+import com.techain.runtime.Tester;
+
+import android.app.Activity;
+import android.graphics.PixelFormat;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.KeyEvent;
+
+import java.util.Random;
+
+public class Kubench extends Tester implements GLSurfaceView.GLSurfaceViewClient {
+
+    public final String TAG = "Kubench";
+    public final static String PACKAGE = "org.zeroxlab.kubench";
+
+    public String getTag() {
+        return TAG;
+    }
+
+    public static String getFullClassName() {
+        return PACKAGE + ".Kubench";
+    }
+
+    public int sleepBeforeStart() {
+        return 1000; //1 second
+    }
+
+    public int sleepBetweenRound() {
+        return 0;
+    }
+
+    public void oneRound() {
+        // do nothing;
+    }
+
+    private GLWorld makeGLWorld()
+    {
+        GLWorld world = new GLWorld();
+
+        int one = 0x10000;
+        int half = 0x08000;              
+        GLColor red = new GLColor(one, 0, 0);
+        GLColor green = new GLColor(0, one, 0);
+        GLColor blue = new GLColor(0, 0, one);
+        GLColor yellow = new GLColor(one, one, 0);
+        GLColor orange = new GLColor(one, half, 0);
+        GLColor white = new GLColor(one, one, one);
+        GLColor black = new GLColor(0, 0, 0);
+        
+        // coordinates for our cubes
+        float c0 = -1.0f;
+        float c1 = -0.38f;
+        float c2 = -0.32f;
+        float c3 = 0.32f;
+        float c4 = 0.38f;
+        float c5 = 1.0f;
+                     
+        // top back, left to right
+        mCubes[0]  = new Cube(world, c0, c4, c0, c1, c5, c1);
+        mCubes[1]  = new Cube(world, c2, c4, c0, c3, c5, c1);
+        mCubes[2]  = new Cube(world, c4, c4, c0, c5, c5, c1);
+        // top middle, left to right
+        mCubes[3]  = new Cube(world, c0, c4, c2, c1, c5, c3);
+        mCubes[4]  = new Cube(world, c2, c4, c2, c3, c5, c3);
+        mCubes[5]  = new Cube(world, c4, c4, c2, c5, c5, c3);
+        // top front, left to right
+        mCubes[6]  = new Cube(world, c0, c4, c4, c1, c5, c5);
+        mCubes[7]  = new Cube(world, c2, c4, c4, c3, c5, c5);
+        mCubes[8]  = new Cube(world, c4, c4, c4, c5, c5, c5);
+        // middle back, left to right
+        mCubes[9]  = new Cube(world, c0, c2, c0, c1, c3, c1);
+        mCubes[10] = new Cube(world, c2, c2, c0, c3, c3, c1);
+        mCubes[11] = new Cube(world, c4, c2, c0, c5, c3, c1);
+        // middle middle, left to right
+        mCubes[12] = new Cube(world, c0, c2, c2, c1, c3, c3);
+        mCubes[13] = null;
+        mCubes[14] = new Cube(world, c4, c2, c2, c5, c3, c3);
+        // middle front, left to right
+        mCubes[15] = new Cube(world, c0, c2, c4, c1, c3, c5);
+        mCubes[16] = new Cube(world, c2, c2, c4, c3, c3, c5);
+        mCubes[17] = new Cube(world, c4, c2, c4, c5, c3, c5);
+        // bottom back, left to right
+        mCubes[18] = new Cube(world, c0, c0, c0, c1, c1, c1);
+        mCubes[19] = new Cube(world, c2, c0, c0, c3, c1, c1);
+        mCubes[20] = new Cube(world, c4, c0, c0, c5, c1, c1);
+        // bottom middle, left to right
+        mCubes[21] = new Cube(world, c0, c0, c2, c1, c1, c3);
+        mCubes[22] = new Cube(world, c2, c0, c2, c3, c1, c3);
+        mCubes[23] = new Cube(world, c4, c0, c2, c5, c1, c3);
+        // bottom front, left to right
+        mCubes[24] = new Cube(world, c0, c0, c4, c1, c1, c5);
+        mCubes[25] = new Cube(world, c2, c0, c4, c3, c1, c5);
+        mCubes[26] = new Cube(world, c4, c0, c4, c5, c1, c5);
+        
+        // paint the sides
+        int i, j;
+        // set all faces black by default
+        for (i = 0; i < 27; i++) {
+            Cube cube = mCubes[i];
+            if (cube != null) {
+                for (j = 0; j < 6; j++)
+                    cube.setFaceColor(j, black);
+            }
+        }
+        
+        // paint top
+        for (i = 0; i < 9; i++)
+            mCubes[i].setFaceColor(Cube.kTop, orange);
+        // paint bottom
+        for (i = 18; i < 27; i++)
+            mCubes[i].setFaceColor(Cube.kBottom, red);
+        // paint left
+        for (i = 0; i < 27; i += 3)
+            mCubes[i].setFaceColor(Cube.kLeft, yellow);
+        // paint right
+        for (i = 2; i < 27; i += 3)
+            mCubes[i].setFaceColor(Cube.kRight, white);
+        // paint back
+        for (i = 0; i < 27; i += 9)
+            for (j = 0; j < 3; j++)
+                mCubes[i + j].setFaceColor(Cube.kBack, blue);
+        // paint front
+        for (i = 6; i < 27; i += 9)
+            for (j = 0; j < 3; j++)
+                mCubes[i + j].setFaceColor(Cube.kFront, green);
+        
+        for (i = 0; i < 27; i++)
+            if (mCubes[i] != null)
+                world.addShape(mCubes[i]);
+        
+        // initialize our permutation to solved position
+        mPermutation = new int[27];
+        for (i = 0; i < mPermutation.length; i++)
+            mPermutation[i] = i;
+        
+        createLayers();
+        updateLayers();
+
+        world.generate();
+        
+        return world;
+    }
+
+    private void createLayers() {
+        mLayers[kUp] = new Layer(Layer.kAxisY);
+        mLayers[kDown] = new Layer(Layer.kAxisY);
+        mLayers[kLeft] = new Layer(Layer.kAxisX);
+        mLayers[kRight] = new Layer(Layer.kAxisX);
+        mLayers[kFront] = new Layer(Layer.kAxisZ);
+        mLayers[kBack] = new Layer(Layer.kAxisZ);
+        mLayers[kMiddle] = new Layer(Layer.kAxisX);
+        mLayers[kEquator] = new Layer(Layer.kAxisY);
+        mLayers[kSide] = new Layer(Layer.kAxisZ);
+    }
+
+    private void updateLayers() {
+        Layer layer;
+        GLShape[] shapes;
+        int i, j, k;
+        
+        // up layer
+        layer = mLayers[kUp];
+        shapes = layer.mShapes;
+        for (i = 0; i < 9; i++)
+            shapes[i] = mCubes[mPermutation[i]];
+
+        // down layer
+        layer = mLayers[kDown];
+        shapes = layer.mShapes;
+        for (i = 18, k = 0; i < 27; i++)
+            shapes[k++] = mCubes[mPermutation[i]];
+
+        // left layer
+        layer = mLayers[kLeft];
+        shapes = layer.mShapes;
+        for (i = 0, k = 0; i < 27; i += 9)
+            for (j = 0; j < 9; j += 3)
+                shapes[k++] = mCubes[mPermutation[i + j]];
+
+        // right layer
+        layer = mLayers[kRight];
+        shapes = layer.mShapes;
+        for (i = 2, k = 0; i < 27; i += 9)
+            for (j = 0; j < 9; j += 3)
+                shapes[k++] = mCubes[mPermutation[i + j]];
+
+        // front layer
+        layer = mLayers[kFront];
+        shapes = layer.mShapes;
+        for (i = 6, k = 0; i < 27; i += 9)
+            for (j = 0; j < 3; j++)
+                shapes[k++] = mCubes[mPermutation[i + j]];
+
+        // back layer
+        layer = mLayers[kBack];
+        shapes = layer.mShapes;
+        for (i = 0, k = 0; i < 27; i += 9)
+            for (j = 0; j < 3; j++)
+                shapes[k++] = mCubes[mPermutation[i + j]];
+        
+        // middle layer
+        layer = mLayers[kMiddle];
+        shapes = layer.mShapes;
+        for (i = 1, k = 0; i < 27; i += 9)
+            for (j = 0; j < 9; j += 3)
+                shapes[k++] = mCubes[mPermutation[i + j]];
+        
+        // equator layer
+        layer = mLayers[kEquator];
+        shapes = layer.mShapes;
+        for (i = 9, k = 0; i < 18; i++)
+            shapes[k++] = mCubes[mPermutation[i]];
+        
+        // side layer
+        layer = mLayers[kSide];
+        shapes = layer.mShapes;
+        for (i = 3, k = 0; i < 27; i += 9)
+            for (j = 0; j < 3; j++)
+                shapes[k++] = mCubes[mPermutation[i + j]];
+    }
+
+    @Override
+    public void onCreate(Bundle icicle)
+    {
+        super.onCreate(icicle);     
+
+        // Make sure to create a TRANSLUCENT window. This is required
+        // for SurfaceView to work. Eventually this'll be done by
+        // the system automatically.
+        getWindow().setFormat(PixelFormat.TRANSLUCENT);
+    
+        // We don't need a title either.
+        // requestWindowFeature(Window.FEATURE_NO_TITLE);
+
+        setTitle(TAG);
+        
+        mView = new GLSurfaceView(getApplication(), makeGLWorld(), this);
+        setContentView(mView);
+        mView.setClient(this);
+        mPrevFramerate = 0.0f;
+    }
+ 
+    @Override
+    protected void onResume()
+    {
+        super.onResume();
+    }
+    
+    @Override
+    protected void onStop()
+    {
+        super.onStop();
+    }
+    
+    public  boolean onKeyDown(int keyCode, KeyEvent event) {
+        switch(keyCode) {
+        case KeyEvent.KEYCODE_BACK:
+            return super.onKeyDown(keyCode, event);
+        }
+          setTitle("Kubench: " + mView.getFramerate() + " fps");
+        return true;
+    }
+    
+    public void animate() {
+        // change our angle of view
+        mView.setAngle(mView.getAngle() + 1.2f);
+        
+        if (mCurrentLayer == null) {
+            int layerID = mRandom.nextInt(9);
+            mCurrentLayer = mLayers[layerID];
+            mCurrentLayerPermutation = mLayerPermutations[layerID];
+            mCurrentLayer.startAnimation();
+            boolean direction = mRandom.nextBoolean();
+            int count = mRandom.nextInt(3) + 1;
+            
+            count = 1;
+            direction = false;
+            mCurrentAngle = 0;
+             if (direction) {
+                mAngleIncrement = (float)Math.PI / 50;
+                   mEndAngle = mCurrentAngle + ((float)Math.PI * count) / 2f;
+               } else {
+                mAngleIncrement = -(float)Math.PI / 50;                
+                   mEndAngle = mCurrentAngle - ((float)Math.PI * count) / 2f;               
+            }
+        }
+            
+         mCurrentAngle += mAngleIncrement;
+
+         if ((mAngleIncrement > 0f && mCurrentAngle >= mEndAngle) ||
+                 (mAngleIncrement < 0f && mCurrentAngle <= mEndAngle)) {
+             mCurrentLayer.setAngle(mEndAngle);
+             mCurrentLayer.endAnimation();
+             mCurrentLayer = null;
+             
+             // adjust mPermutation based on the completed layer rotation
+             int[] newPermutation = new int[27];
+             for (int i = 0; i < 27; i++) {
+                newPermutation[i] = mPermutation[mCurrentLayerPermutation[i]];
+ //                newPermutation[i] = mCurrentLayerPermutation[mPermutation[i]];
+             }
+             mPermutation = newPermutation;
+             updateLayers();
+             
+         } else {
+             mCurrentLayer.setAngle(mCurrentAngle);
+         }
+         
+         if (mPrevFramerate != mView.getFramerate()) {
+             mPrevFramerate = mView.getFramerate();
+             // setTitle(mPrevFramerate + "fps");
+        //Log.v("Kubench", mPrevFramerate + "fps");
+         }
+    }
+    
+    GLSurfaceView mView;
+    Cube[] mCubes = new Cube[27];
+    // a Layer for each possible move
+    Layer[] mLayers = new Layer[9];
+    // permutations corresponding to a pi/2 rotation of each layer about its axis
+    static int[][] mLayerPermutations = {
+            // permutation for UP layer
+            { 2, 5, 8, 1, 4, 7, 0, 3, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },
+            // permutation for DOWN layer
+            { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 23, 26, 19, 22, 25, 18, 21, 24 },
+            // permutation for LEFT layer
+            { 6, 1, 2, 15, 4, 5, 24, 7, 8, 3, 10, 11, 12, 13, 14, 21, 16, 17, 0, 19, 20, 9, 22, 23, 18, 25, 26 },
+            // permutation for RIGHT layer
+            { 0, 1, 8, 3, 4, 17, 6, 7, 26, 9, 10, 5, 12, 13, 14, 15, 16, 23, 18, 19, 2, 21, 22, 11, 24, 25, 20 },
+            // permutation for FRONT layer
+            { 0, 1, 2, 3, 4, 5, 24, 15, 6, 9, 10, 11, 12, 13, 14, 25, 16, 7, 18, 19, 20, 21, 22, 23, 26, 17, 8 },
+            // permutation for BACK layer
+            { 18, 9, 0, 3, 4, 5, 6, 7, 8, 19, 10, 1, 12, 13, 14, 15, 16, 17, 20, 11, 2, 21, 22, 23, 24, 25, 26 },
+            // permutation for MIDDLE layer
+            { 0, 7, 2, 3, 16, 5, 6, 25, 8, 9, 4, 11, 12, 13, 14, 15, 22, 17, 18, 1, 20, 21, 10, 23, 24, 19, 26 },
+            // permutation for EQUATOR layer
+            { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 14, 17, 10, 13, 16, 9, 12, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26 },
+            // permutation for SIDE layer
+            { 0, 1, 2, 21, 12, 3, 6, 7, 8, 9, 10, 11, 22, 13, 4, 15, 16, 17, 18, 19, 20, 23, 14, 5, 24, 25, 26 }
+    };
+    
+    
+    
+    // current permutation of starting position
+    int[] mPermutation;
+    
+    // for random cube movements
+    Random mRandom = new Random(System.currentTimeMillis());
+    // currently turning layer
+    Layer mCurrentLayer = null;
+    // current and final angle for current Layer animation 
+    float mCurrentAngle, mEndAngle;
+    // amount to increment angle
+    float mAngleIncrement;
+    int[] mCurrentLayerPermutation;
+    
+    float mPrevFramerate;
+    
+    // names for our 9 layers (based on notation from http://www.cubefreak.net/notation.html)
+    static final int kUp = 0;
+    static final int kDown = 1;
+    static final int kLeft = 2;
+    static final int kRight = 3;
+    static final int kFront = 4;
+    static final int kBack = 5;
+    static final int kMiddle = 6;
+    static final int kEquator = 7;
+    static final int kSide = 8;
+    
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/GLVertex.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/GLVertex.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/GLVertex.java	(revision 167997)
@@ -0,0 +1,88 @@
+/* 
+ * Copyright (C) 2008 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.kubench;
+
+import java.nio.IntBuffer;
+
+public class GLVertex {
+    
+    public float x;
+    public float y;
+    public float z;
+    final short index;    // index in vertex single
+    GLColor color;
+    
+    GLVertex() {
+        this.x = 0;
+        this.y = 0;
+        this.z = 0;
+        this.index = -1;
+    }
+
+    GLVertex(float x, float y, float z, int index) {
+        this.x = x;
+        this.y = y;
+        this.z = z;
+        this.index = (short)index;
+    }
+
+    public boolean equals(Object other) {
+        if (other instanceof GLVertex) {
+            GLVertex v = (GLVertex)other;
+            return (x == v.x && y == v.y && z == v.z);
+        }
+        return false;
+    }
+
+    static public int toFixed(float x) {
+        return (int)(x*65536.0f);
+    }
+
+    public void put(IntBuffer vertexBuffer, IntBuffer colorBuffer) {
+        vertexBuffer.put(toFixed(x));
+        vertexBuffer.put(toFixed(y));
+        vertexBuffer.put(toFixed(z));
+        if (color == null) {
+            colorBuffer.put(0);
+            colorBuffer.put(0);
+            colorBuffer.put(0);
+            colorBuffer.put(0);
+        } else {
+            colorBuffer.put(color.red);
+            colorBuffer.put(color.green);
+            colorBuffer.put(color.blue);
+            colorBuffer.put(color.alpha);
+        }
+    }
+    
+    public void update(IntBuffer vertexBuffer, M4 transform) {
+        // skip to location of vertex in mVertex buffer
+        vertexBuffer.position(index * 3);
+    
+        if (transform == null) {
+            vertexBuffer.put(toFixed(x));
+            vertexBuffer.put(toFixed(y));
+            vertexBuffer.put(toFixed(z));            
+        } else {
+            GLVertex temp = new GLVertex();
+            transform.multiply(this, temp);
+            vertexBuffer.put(toFixed(temp.x));
+            vertexBuffer.put(toFixed(temp.y));
+            vertexBuffer.put(toFixed(temp.z));
+        }
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/M4.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/M4.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/M4.java	(revision 167997)
@@ -0,0 +1,80 @@
+/* 
+ * Copyright (C) 2008 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.kubench;
+
+/** 
+ * 
+ * A 4x4 float matrix
+ *
+ */
+public class M4 {
+    public float[][] m = new float[4][4];
+    
+    public M4() {
+    }
+    
+    public M4(M4 other) {
+        for (int i = 0; i < 4; i++) {
+            for (int j = 0; j < 4; j++) {
+                m[i][j] = other.m[i][j];
+            }
+        }        
+    }
+
+    public void multiply(GLVertex src, GLVertex dest) {
+        dest.x = src.x * m[0][0] + src.y * m[1][0] + src.z * m[2][0] + m[3][0];
+        dest.y = src.x * m[0][1] + src.y * m[1][1] + src.z * m[2][1] + m[3][1];
+        dest.z = src.x * m[0][2] + src.y * m[1][2] + src.z * m[2][2] + m[3][2];
+    }
+    
+    public M4 multiply(M4 other) {
+        M4 result = new M4();
+        float[][] m1 = m;
+        float[][] m2 = other.m;
+        
+        for (int i = 0; i < 4; i++) {
+            for (int j = 0; j < 4; j++) {
+                result.m[i][j] = m1[i][0]*m2[0][j] + m1[i][1]*m2[1][j] + m1[i][2]*m2[2][j] + m1[i][3]*m2[3][j];
+            }
+        }
+        
+        return result;
+    }
+    
+    public void setIdentity() {
+        for (int i = 0; i < 4; i++) {
+            for (int j = 0; j < 4; j++) {
+                m[i][j] = (i == j ? 1f : 0f);
+            }
+        }
+    }
+    
+    @Override
+    public String toString() {
+        StringBuilder builder = new StringBuilder("[ ");
+        for (int i = 0; i < 4; i++) {
+            for (int j = 0; j < 4; j++) {
+                builder.append(m[i][j]);
+                builder.append(" ");
+            }
+            if (i < 2)
+                builder.append("\n  ");
+        }
+        builder.append(" ]");
+        return builder.toString();
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/GLColor.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/GLColor.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/GLColor.java	(revision 167997)
@@ -0,0 +1,48 @@
+/* 
+ * Copyright (C) 2008 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.kubench;
+
+public class GLColor {
+
+    public final int red;
+    public final int green;
+    public final int blue;
+    public final int alpha;
+    
+    public GLColor(int red, int green, int blue, int alpha) {
+        this.red = red;
+        this.green = green;
+        this.blue = blue;
+        this.alpha = alpha;
+    }
+
+    public GLColor(int red, int green, int blue) {
+        this.red = red;
+        this.green = green;
+        this.blue = blue;
+        this.alpha = 0x10000;
+    }
+    
+    public boolean equals(Object other) {
+        if (other instanceof GLColor) {
+            GLColor color = (GLColor)other;
+            return (red == color.red && green == color.green &&
+                    blue == color.blue && alpha == color.alpha);
+        }
+        return false;
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/GLFace.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/GLFace.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/kubench/GLFace.java	(revision 167997)
@@ -0,0 +1,94 @@
+/* 
+ * Copyright (C) 2008 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.kubench;
+
+import android.util.Log;
+
+import java.nio.ShortBuffer;
+import java.util.ArrayList;
+
+public class GLFace {
+
+    public GLFace() {
+        
+    }
+    
+    // for triangles
+    public GLFace(GLVertex v1, GLVertex v2, GLVertex v3) {
+        addVertex(v1);
+        addVertex(v2);
+        addVertex(v3);
+    }    
+    // for quadrilaterals
+    public GLFace(GLVertex v1, GLVertex v2, GLVertex v3, GLVertex v4) {
+        addVertex(v1);
+        addVertex(v2);
+        addVertex(v3);
+        addVertex(v4);
+    }
+        
+    public void addVertex(GLVertex v) {
+        mVertexList.add(v);
+    }
+    
+    // must be called after all vertices are added
+    public void setColor(GLColor c) {
+        
+        int last = mVertexList.size() - 1;
+        if (last < 2) {
+            Log.e("GLFace", "not enough vertices in setColor()");
+        } else {
+            GLVertex vertex = mVertexList.get(last);
+            
+            // only need to do this if the color has never been set
+            if (mColor == null) {
+                while (vertex.color != null) {
+                    mVertexList.add(0, vertex);
+                    mVertexList.remove(last + 1);
+                    vertex = mVertexList.get(last);
+                }
+            }
+            
+            vertex.color = c;
+        }
+
+        mColor = c;
+    }
+    
+    public int getIndexCount() {
+        return (mVertexList.size() - 2) * 3;
+    }
+    
+    public void putIndices(ShortBuffer buffer) {
+        int last = mVertexList.size() - 1;
+
+        GLVertex v0 = mVertexList.get(0);
+        GLVertex vn = mVertexList.get(last);
+        
+        // push triangles into the buffer
+        for (int i = 1; i < last; i++) {
+            GLVertex v1 = mVertexList.get(i);
+            buffer.put(v0.index);
+            buffer.put(v1.index);
+            buffer.put(vn.index);
+            v0 = v1;
+        }
+    }
+    
+    private ArrayList<GLVertex> mVertexList = new ArrayList<GLVertex>();
+    private GLColor mColor;
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawText.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawText.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawText.java	(revision 167997)
@@ -0,0 +1,68 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.graphics;
+
+import com.techain.runtime.R;
+
+import com.techain.runtime.Tester;
+
+import android.app.Activity;
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+
+import android.os.Bundle;
+import android.view.View;
+
+import org.zeroxlab.graphics.DrawTextView;
+
+public class DrawText extends Tester {
+    /**
+     * Called when the activity is first created.
+     */
+
+    private DrawTextView mView;
+
+    public String getTag() {
+        return "DrawText";
+    }
+
+    public int sleepBeforeStart() {
+        return 1000;
+    }
+
+    public int sleepBetweenRound() {
+        return 0;
+    }
+
+    public void oneRound() {
+        mView.doDraw();
+        decreaseCounter();
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.text);
+
+        mView = (DrawTextView) findViewById(R.id.text);
+
+        startTester();
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawArc.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawArc.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawArc.java	(revision 167997)
@@ -0,0 +1,66 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.graphics;
+
+import com.techain.runtime.R;
+
+import com.techain.runtime.Tester;
+
+import android.app.Activity;
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+
+import android.os.Bundle;
+import android.view.View;
+
+import org.zeroxlab.graphics.DrawArcView;
+
+public class DrawArc extends Tester {
+    /** Called when the activity is first created. */
+
+    private DrawArcView mView;
+
+    public String getTag() {
+        return "DrawArc";
+    }
+
+    public int sleepBeforeStart() {
+        return 1000;
+    }
+
+    public int sleepBetweenRound() {
+        return 0;
+    }
+
+    public void oneRound() {
+        mView.doDraw();
+        decreaseCounter();
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.arc);
+
+        mView = (DrawArcView) findViewById(R.id.arc);
+
+        startTester();
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawRectView.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawRectView.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawRectView.java	(revision 167997)
@@ -0,0 +1,97 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.graphics;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.graphics.Rect;
+import android.graphics.Color;
+import android.graphics.drawable.Drawable;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+import android.util.AttributeSet;
+import android.view.KeyEvent;
+import android.view.SurfaceHolder;
+import android.view.SurfaceView;
+import android.view.View;
+import android.widget.TextView;
+
+import android.util.Log;
+
+import java.util.ArrayList;
+import java.util.Random;
+
+
+class DrawRectView extends SurfaceView {
+
+    class ColoredRect {
+        public Rect mRect;
+        public int mColor;
+
+        ColoredRect(int color, int left, int top, int right, int bottom) {
+            this.mRect = new Rect(left, top, right, bottom);
+            this.mColor = color;
+        }
+    }
+
+    private SurfaceHolder mSurfaceHolder;
+    private ArrayList<ColoredRect> rectengleList = new ArrayList<ColoredRect>();
+
+    protected void doDraw() {
+        Canvas canvas = mSurfaceHolder.lockCanvas();
+        generateNewRect();
+        drawAll(canvas);
+        mSurfaceHolder.unlockCanvasAndPost(canvas);
+    }
+
+    private void drawAll(Canvas canvas) {
+        for (ColoredRect cr : rectengleList) {
+            Paint p = new Paint();
+            p.setAntiAlias(false);
+            p.setStyle(Paint.Style.FILL);
+            p.setColor(cr.mColor);
+
+            canvas.drawRect(cr.mRect, p);
+        }
+    }
+
+    private void generateNewRect() {
+        Random mRandom = new Random();
+        int height = getHeight();
+        int width = getWidth();
+
+        int cx = (int) ((mRandom.nextInt() % (width * 0.8)) + (width * 0.1));
+        int cy = (int) ((mRandom.nextInt() % (height * 0.8)) + (height * 0.1));
+        int hw = (int) (mRandom.nextInt() % (width * 0.4) + width * 0.2) / 2;
+        int hh = (int) (mRandom.nextInt() % (height * 0.4) + height * 0.2) / 2;
+
+        int color = (0x00252525 | mRandom.nextInt()) & 0x00FFFFFF | 0x77000000;
+
+        rectengleList.add(new ColoredRect(color, cx - hw, cy - hh, cx + hw, cy + hh));
+    }
+
+    public DrawRectView(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        mSurfaceHolder = getHolder();
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawImageView.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawImageView.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawImageView.java	(revision 167997)
@@ -0,0 +1,106 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.graphics;
+
+import com.techain.runtime.R;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.graphics.RectF;
+import android.graphics.Color;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.drawable.Drawable;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+import android.util.AttributeSet;
+import android.view.KeyEvent;
+import android.view.SurfaceHolder;
+import android.view.SurfaceView;
+import android.view.View;
+import android.widget.TextView;
+
+import android.util.Log;
+
+import java.util.ArrayList;
+import java.util.Random;
+
+
+class DrawImageView extends SurfaceView {
+
+    private final int COL = 5;
+    private final int ROW = 9;
+
+    private SurfaceHolder mSurfaceHolder;
+    private float position[] = new float[ROW];
+    private boolean direction[] = new boolean[ROW];
+    private Bitmap mBitmap;
+    private Paint bgPaint;
+
+
+    protected void setImage(Bitmap bmp) {
+        mBitmap = bmp;
+    }
+
+    protected void doDraw() {
+        Canvas canvas = mSurfaceHolder.lockCanvas();
+        drawImage(canvas);
+        mSurfaceHolder.unlockCanvasAndPost(canvas);
+    }
+
+    private void drawImage(Canvas canvas) {
+        int w = getWidth();
+        int h = getHeight();
+        canvas.drawRect(0, 0, w, h, bgPaint);
+
+        for (int x = 0; x < ROW; x++) {
+            int speed = (x + 1) * 2;
+
+            for (int j = 0; j < COL; j++)
+                canvas.drawBitmap(mBitmap, null, new RectF((w / (float) COL) * j, position[x], (w / (float) COL) * (j + 1), position[x] + (w / (float) COL)), null);
+            if (direction[x]) {
+                position[x] += speed;
+                if (position[x] + (w / (float) COL) >= getHeight())
+                    direction[x] = !direction[x];
+            } else {
+                position[x] -= speed;
+                if (position[x] <= 0)
+                    direction[x] = !direction[x];
+            }
+
+        }
+    }
+
+    public DrawImageView(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        mSurfaceHolder = getHolder();
+        bgPaint = new Paint();
+        bgPaint.setColor(Color.BLACK);
+        bgPaint.setStyle(Paint.Style.FILL);
+
+        for (int i = 0; i < ROW; i++) {
+            position[i] = 0;
+            direction[i] = true;
+        }
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawRect.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawRect.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawRect.java	(revision 167997)
@@ -0,0 +1,66 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.graphics;
+
+import com.techain.runtime.R;
+
+import com.techain.runtime.Tester;
+
+import android.app.Activity;
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+
+import android.os.Bundle;
+import android.view.View;
+
+import org.zeroxlab.graphics.DrawRectView;
+
+public class DrawRect extends Tester {
+    /** Called when the activity is first created. */
+
+    private DrawRectView mView;
+
+    public String getTag() {
+        return "DrawRect";
+    }
+
+    public int sleepBeforeStart() {
+        return 1000;
+    }
+
+    public int sleepBetweenRound() {
+        return 0;
+    }
+
+    public void oneRound() {
+        mView.doDraw();
+        decreaseCounter();
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.rect);
+
+        mView = (DrawRectView) findViewById(R.id.rect);
+
+        startTester();
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawCircle2View.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawCircle2View.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawCircle2View.java	(revision 167997)
@@ -0,0 +1,82 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.graphics;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.graphics.RectF;
+import android.graphics.Color;
+import android.graphics.drawable.Drawable;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+import android.util.AttributeSet;
+import android.view.KeyEvent;
+import android.view.SurfaceHolder;
+import android.view.SurfaceView;
+import android.view.View;
+import android.widget.TextView;
+
+import android.util.Log;
+
+import java.util.ArrayList;
+import java.util.Random;
+
+
+class DrawCircle2View extends SurfaceView {
+
+    private SurfaceHolder mSurfaceHolder;
+
+    protected void doDraw() {
+        Canvas canvas = mSurfaceHolder.lockCanvas();
+        drawCircle(canvas);
+        mSurfaceHolder.unlockCanvasAndPost(canvas);
+    }
+
+    private void drawCircle(Canvas canvas) {
+
+        Random mRandom = new Random();
+
+        int height = getHeight();
+        int width = getWidth();
+
+        int cx = (int) ((mRandom.nextInt() % (width * 0.8)) + (width * 0.1));
+        int cy = (int) ((mRandom.nextInt() % (height * 0.8)) + (height * 0.1));
+        int r = (int) ((mRandom.nextInt() % (width * 0.3)) + (width * 0.2));
+
+        int color;
+        Paint p;
+        for (int i = 6; i >= 0; i--) {
+            color = (0x33252525 | mRandom.nextInt());
+            p = new Paint();
+            p.setAntiAlias(true);
+            p.setStyle(Paint.Style.FILL);
+            p.setColor(color);
+            canvas.drawCircle(cx, cy, (int) (r * (1 + i / 10.0)), p);
+        }
+    }
+
+    public DrawCircle2View(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        mSurfaceHolder = getHolder();
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawTextView.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawTextView.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawTextView.java	(revision 167997)
@@ -0,0 +1,118 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.graphics;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.graphics.Rect;
+import android.graphics.Color;
+import android.graphics.drawable.Drawable;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+import android.util.AttributeSet;
+import android.view.KeyEvent;
+import android.view.SurfaceHolder;
+import android.view.SurfaceView;
+import android.view.View;
+import android.widget.TextView;
+
+import android.util.Log;
+
+import java.util.ArrayList;
+import java.util.Random;
+
+
+class DrawTextView extends SurfaceView {
+
+    public final String TEXT1 = "0xbench";
+    public final String TEXT2 = "0xlab";
+    public final int TIMES = 10;
+
+    private Paint bgPaint;
+
+    class PaintText {
+        public int x;
+        public int y;
+        public Paint paint;
+        public boolean text;
+
+        PaintText(Paint paint, int x, int y, boolean text) {
+            this.paint = paint;
+            this.x = x;
+            this.y = y;
+            this.text = text;
+        }
+    }
+
+    private SurfaceHolder mSurfaceHolder;
+    private ArrayList<PaintText> rectengleList = new ArrayList<PaintText>();
+
+    protected void doDraw() {
+        Canvas canvas = mSurfaceHolder.lockCanvas();
+        generateNewText(canvas);
+        mSurfaceHolder.unlockCanvasAndPost(canvas);
+    }
+
+    private void generateNewText(Canvas canvas) {
+        Random mRandom = new Random();
+        int height = getHeight();
+        int width = getWidth();
+        canvas.drawRect(0, 0, width, height, bgPaint);
+
+        int cx;
+        int cy;
+        int color;
+        for (int i = 0; i < TIMES; i++) {
+            cx = (int) ((mRandom.nextInt() % (width * 0.8)) + (width * 0.1));
+            cy = (int) ((mRandom.nextInt() % (height * 0.8)) + (height * 0.1));
+
+            color = (0x00555555 | mRandom.nextInt()) | Color.BLACK;
+            Paint p = new Paint();
+            p.setAntiAlias(true);
+            p.setStyle(Paint.Style.FILL);
+            p.setTextAlign(Paint.Align.CENTER);
+
+            if (mRandom.nextInt() % 2 == 0)
+                p.setFakeBoldText(true);
+
+            if (mRandom.nextInt() % 2 == 0)
+                p.setTextSkewX((float) -0.45);
+
+            p.setColor(color);
+            p.setTextSize(42 + (mRandom.nextInt() % 28));
+
+            if (mRandom.nextInt() % 2 == 0)
+                canvas.drawText(TEXT1, cx, cy, p);
+            else
+                canvas.drawText(TEXT2, cx, cy, p);
+        }
+    }
+
+    public DrawTextView(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        mSurfaceHolder = getHolder();
+        bgPaint = new Paint();
+        bgPaint.setColor(Color.BLACK);
+        bgPaint.setStyle(Paint.Style.FILL);
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawArcView.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawArcView.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawArcView.java	(revision 167997)
@@ -0,0 +1,90 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.graphics;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.graphics.RectF;
+import android.graphics.Color;
+import android.graphics.drawable.Drawable;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+import android.util.AttributeSet;
+import android.view.KeyEvent;
+import android.view.SurfaceHolder;
+import android.view.SurfaceView;
+import android.view.View;
+import android.widget.TextView;
+
+import android.util.Log;
+
+import java.util.ArrayList;
+import java.util.Random;
+
+
+class DrawArcView extends SurfaceView {
+
+    private SurfaceHolder mSurfaceHolder;
+    private int angle = 0;
+    private int step = 5;
+    private boolean center = false;
+
+    protected void doDraw() {
+        Canvas canvas = mSurfaceHolder.lockCanvas();
+        drawArc(canvas);
+        mSurfaceHolder.unlockCanvasAndPost(canvas);
+    }
+
+    private void drawArc(Canvas canvas) {
+        if (angle > 360) angle = 0;
+
+        int color = (0x00252525 | new Random().nextInt()) | Color.BLACK;
+        Paint p = new Paint();
+        p.setAntiAlias(false);
+        p.setStyle(Paint.Style.FILL);
+        p.setColor(color);
+
+        canvas.drawArc(new RectF(0, 0, getWidth(), getHeight()), 0, angle, true, p);
+
+        for (int j = 0; j < 3; j++)
+            for (int x = 0; x < 4; x++)
+                for (int y = 0; y < 4; y++) {
+                    color = (0x88252525 | new Random().nextInt());
+                    p = new Paint();
+                    p.setAntiAlias(false);
+                    p.setStyle(Paint.Style.FILL);
+                    p.setColor(color);
+
+                    if (x % 2 == 0)
+                        canvas.drawArc(new RectF(x * getWidth() / 4, y * getHeight() / 4, (1 + x) * getWidth() / 4, (1 + y) * getHeight() / 4), 0, angle, (x + y) % 2 == 0, p);
+                    else
+                        canvas.drawArc(new RectF(x * getWidth() / 4, y * getHeight() / 4, (1 + x) * getWidth() / 4, (1 + y) * getHeight() / 4), 0, -angle, (x + y) % 2 == 0, p);
+                }
+        angle += step;
+    }
+
+    public DrawArcView(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        mSurfaceHolder = getHolder();
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawCircle.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawCircle.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawCircle.java	(revision 167997)
@@ -0,0 +1,148 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.graphics;
+
+import com.techain.runtime.Tester;
+
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+
+import android.os.Bundle;
+import android.view.View;
+
+public class DrawCircle extends Tester {
+    /**
+     * Called when the activity is first created.
+     */
+
+    SampleView mView;
+
+    public String getTag() {
+        return "DrawCircle";
+    }
+
+    public int sleepBeforeStart() {
+        return 1000;
+    }
+
+    public int sleepBetweenRound() {
+        return 0;
+    }
+
+    public void oneRound() {
+        mView.postInvalidate();
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        mView = new SampleView(this);
+        setContentView(mView);
+    }
+
+    private class SampleView extends View {
+        private Paint[] mPaints;
+        private Paint mFramePaint;
+
+        private float mSweep;
+        private int mBigIndex;
+
+        private final float SWEEP_INC = 2;
+        private int counter = 0;
+        int i, row;
+        long current;
+        long last;
+
+        private int mWidth;
+        private int mHeight;
+
+        public SampleView(Context context) {
+            super(context);
+
+            mPaints = new Paint[4];
+
+            mPaints[0] = new Paint();
+            mPaints[0].setAntiAlias(true);
+            mPaints[0].setStyle(Paint.Style.FILL);
+            mPaints[0].setColor(0x88FF0000);
+
+            mPaints[1] = new Paint(mPaints[0]);
+            mPaints[1].setColor(0x8800FF00);
+
+            mPaints[2] = new Paint(mPaints[0]);
+            mPaints[2].setStyle(Paint.Style.STROKE);
+            mPaints[2].setStrokeWidth(4);
+            mPaints[2].setColor(0x880000FF);
+
+            mPaints[3] = new Paint(mPaints[2]);
+            mPaints[3].setColor(0x88888888);
+
+            mFramePaint = new Paint();
+            mFramePaint.setAntiAlias(true);
+            mFramePaint.setTextSize(40);
+            mFramePaint.setStyle(Paint.Style.STROKE);
+            mFramePaint.setStrokeWidth(0);
+        }
+
+        @Override
+        protected void onWindowVisibilityChanged(int visibility) {
+            super.onWindowVisibilityChanged(visibility);
+            if (visibility != View.VISIBLE) {
+                return;
+            }
+            startTester();
+        }
+
+        @Override
+        protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
+            super.onLayout(changed, left, top, right, bottom);
+            mWidth = getMeasuredWidth();
+            mHeight = getMeasuredHeight();
+        }
+
+        @Override
+        protected void onDraw(Canvas canvas) {
+            canvas.drawColor(Color.WHITE);
+
+            canvas.drawCircle(160f, 150f, 120f, mPaints[mBigIndex]);
+            canvas.drawText(counter + "th time", 30, 160, mFramePaint);
+            canvas.drawText((current - last) + "ms", 30, 200, mFramePaint);
+
+            for (row = 0; row < 8; row++) {
+                for (i = 0; i < 4; i++) {
+                    canvas.drawCircle(40.0f + i * mWidth / 4.0f, 40.0f + row * mHeight / 8.0f, mSweep,
+                            mPaints[i]);
+                }
+            }
+
+            mSweep += SWEEP_INC;
+            if (mSweep > 80) {
+                mSweep -= 80;
+                mBigIndex = (mBigIndex + 1) % 4;
+                counter++;
+                last = current;
+                current = System.currentTimeMillis();
+
+            }
+
+            invalidate();
+            decreaseCounter();
+        }
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawImage.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawImage.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawImage.java	(revision 167997)
@@ -0,0 +1,72 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.graphics;
+
+import com.techain.runtime.R;
+
+import com.techain.runtime.Tester;
+
+import android.app.Activity;
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+
+import android.os.Bundle;
+import android.view.View;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+
+import org.zeroxlab.graphics.DrawImageView;
+
+public class DrawImage extends Tester {
+    /**
+     * Called when the activity is first created.
+     */
+
+    private DrawImageView mView;
+
+    public String getTag() {
+        return "DrawImage";
+    }
+
+    public int sleepBeforeStart() {
+        return 1000;
+    }
+
+    public int sleepBetweenRound() {
+        return 0;
+    }
+
+    public void oneRound() {
+        mView.doDraw();
+        decreaseCounter();
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.image);
+
+        mView = (DrawImageView) findViewById(R.id.image);
+        Bitmap bmp = BitmapFactory.decodeResource(getResources(), R.drawable.icon);
+        mView.setImage(bmp);
+
+        startTester();
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawCircle2.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawCircle2.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/graphics/DrawCircle2.java	(revision 167997)
@@ -0,0 +1,68 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.zeroxlab.graphics;
+
+import com.techain.runtime.R;
+
+import com.techain.runtime.Tester;
+
+import android.app.Activity;
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+
+import android.os.Bundle;
+import android.view.View;
+
+import org.zeroxlab.graphics.DrawCircle2View;
+
+public class DrawCircle2 extends Tester {
+    /**
+     * Called when the activity is first created.
+     */
+
+    private DrawCircle2View mView;
+
+    public String getTag() {
+        return "DrawCircle2";
+    }
+
+    public int sleepBeforeStart() {
+        return 1000;
+    }
+
+    public int sleepBetweenRound() {
+        return 0;
+    }
+
+    public void oneRound() {
+        mView.doDraw();
+        decreaseCounter();
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.circle2);
+
+        mView = (DrawCircle2View) findViewById(R.id.circle2);
+
+        startTester();
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/utils/BenchUtil.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/utils/BenchUtil.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/utils/BenchUtil.java	(revision 167997)
@@ -0,0 +1,72 @@
+/*
+ * Copyright (C) 2011 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ * Authored by Julian Chu <walkingice@0xlab.org>
+ */
+
+package org.zeroxlab.utils;
+
+import android.util.Log;
+
+import android.app.Activity;
+import android.content.Context;
+import android.os.Environment;
+
+public class BenchUtil extends Util {
+
+    public final static String ACTIVITY_SETTINGS = "com.techain.runtime.ActivitySettings";
+    public final static String PREF_FILENAME = "ZeroxBench_Preference";
+    public final static String KEY_RESULT_CUSTOM_DIR = "KEY_RESULT_CUSTOM_DIR";
+    public final static String KEY_RESULT_SELECTION = "KEY_RESULT_SELECTION";
+
+    private final static String EXTERNAL_DIR = Environment.getExternalStorageDirectory().getPath();
+    public final static String DEFAULT_RESULT_DIR = EXTERNAL_DIR;
+
+    public final static int RESULT_SELECTION_SDCARD = 0;
+    public final static int RESULT_SELECTION_CUSTOM = 1;
+
+    public static void launchSettings(Activity parent) {
+        launchActivity(parent, ACTIVITY_SETTINGS);
+    }
+
+    public static int getResultSelection(Context context) {
+        return Util.restorePrefInt(context, PREF_FILENAME, KEY_RESULT_SELECTION, RESULT_SELECTION_SDCARD);
+    }
+
+    public static void setResultSelection(Context context, int selection) {
+        Util.storePrefInt(context, PREF_FILENAME, KEY_RESULT_SELECTION, selection);
+    }
+
+    public static String getCustomDir(Context context) {
+        String dir = Util.restorePrefString(context, PREF_FILENAME, KEY_RESULT_CUSTOM_DIR, DEFAULT_RESULT_DIR);
+        return dir;
+    }
+
+    public static void setCustomDir(Context context, String dir) {
+        Util.storePrefString(context, PREF_FILENAME, KEY_RESULT_CUSTOM_DIR, dir);
+    }
+
+    public static String getResultDir(Context context) {
+        int selection = getResultSelection(context);
+        if (selection == RESULT_SELECTION_SDCARD) {
+            return EXTERNAL_DIR;
+        } else if (selection == RESULT_SELECTION_CUSTOM) {
+            return getCustomDir(context);
+        }
+
+        Log.e("Benchmark", "BenchUtils - unknown selection");
+        return DEFAULT_RESULT_DIR;
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/utils/Util.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/utils/Util.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/zeroxlab/utils/Util.java	(revision 167997)
@@ -0,0 +1,95 @@
+/*
+ * Copyright (C) 2011 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ * Authored by Julian Chu <walkingice@0xlab.org>
+ */
+
+package org.zeroxlab.utils;
+
+import android.util.Log;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.os.Bundle;
+import android.os.Environment;
+import android.os.Handler;
+import android.os.Message;
+
+public class Util {
+    public final static int PREF_MODE = Context.MODE_PRIVATE;
+    public final static boolean DEFAULT_PREF_BOOLEAN = false;
+    public final static int     DEFAULT_PREF_INT     = -1;
+    public final static String  DEFAULT_PREF_STRING  = "";
+
+    public static void launchActivity(Activity parent, String targetFullName) {
+        final Intent intent = new Intent();
+        intent.setClassName(parent, targetFullName);
+        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
+        parent.startActivity(intent);
+    }
+
+    public static void storePrefBool(Context context, String name, String key, boolean value) {
+        SharedPreferences pref = context.getSharedPreferences(name, PREF_MODE);
+        pref.edit().putBoolean(key, value).commit();
+    }
+
+    public static void storePrefInt(Context context, String name, String key, int value) {
+        SharedPreferences pref = context.getSharedPreferences(name, PREF_MODE);
+        pref.edit().putInt(key, value).commit();
+    }
+
+    public static void storePrefString(Context context, String name, String key, String value) {
+        SharedPreferences pref = context.getSharedPreferences(name, PREF_MODE);
+        pref.edit().putString(key, value).commit();
+    }
+
+    public static boolean restorePrefBool(Context context, String name, String key, boolean defaultValue) {
+        SharedPreferences pref = context.getSharedPreferences(name, PREF_MODE);
+        boolean value = pref.getBoolean(key, defaultValue);
+        return value;
+    }
+
+    public static int restorePrefInt(Context context, String name, String key, int defaultValue) {
+        SharedPreferences pref = context.getSharedPreferences(name, PREF_MODE);
+        int value = pref.getInt(key, defaultValue);
+        return value;
+    }
+
+    public static String restorePrefString(Context context, String name, String key, String defaultValue) {
+        SharedPreferences pref = context.getSharedPreferences(name, PREF_MODE);
+        String value = pref.getString(key, defaultValue);
+        return value;
+    }
+
+    public static boolean restorePrefBool(Context context, String name, String key) {
+        SharedPreferences pref = context.getSharedPreferences(name, PREF_MODE);
+        boolean value = pref.getBoolean(key, DEFAULT_PREF_BOOLEAN);
+        return value;
+    }
+
+    public static int restorePrefInt(Context context, String name, String key) {
+        SharedPreferences pref = context.getSharedPreferences(name, PREF_MODE);
+        int value = pref.getInt(key, DEFAULT_PREF_INT);
+        return value;
+    }
+
+    public static String restorePrefString(Context context, String name, String key) {
+        SharedPreferences pref = context.getSharedPreferences(name, PREF_MODE);
+        String value = pref.getString(key, DEFAULT_PREF_STRING);
+        return value;
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/itri/teapot/MyGLSurfaceView.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/itri/teapot/MyGLSurfaceView.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/itri/teapot/MyGLSurfaceView.java	(revision 167997)
@@ -0,0 +1,43 @@
+/*
+ * Copyright (C) 2008-2009 Koansin Tan
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ * Origin: http://code.google.com/p/android-utah-teapot/
+ */
+
+package org.itri.teapot;
+
+import com.techain.runtime.Tester;
+
+import android.content.Context;
+import android.opengl.GLSurfaceView;
+import android.util.Log;
+
+class MyGLSurfaceView extends GLSurfaceView {
+    private TeapotRenderer mMyRenderer;
+    private Tester mTester;
+    private float xspeed;
+    private float yspeed;
+    private float zspeed;
+
+    public MyGLSurfaceView(Context context) {
+        super(context);
+    }
+
+    @Override 
+    public void setRenderer(GLSurfaceView.Renderer renderer) {
+        mMyRenderer = (TeapotRenderer) renderer;
+        super.setRenderer(renderer);
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/itri/teapot/TeapotRenderer.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/itri/teapot/TeapotRenderer.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/itri/teapot/TeapotRenderer.java	(revision 167997)
@@ -0,0 +1,1921 @@
+/*
+ * Copyright (C) 2008-2009 Koansin Tan
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ * Origin: http://code.google.com/p/android-utah-teapot/
+ */
+
+package org.itri.teapot;
+
+import com.techain.runtime.Tester;
+
+import java.nio.ByteBuffer;
+import java.nio.ByteOrder;
+import java.nio.FloatBuffer;
+import java.nio.ShortBuffer;
+
+import javax.microedition.khronos.egl.EGL10;
+import javax.microedition.khronos.egl.EGLConfig;
+import javax.microedition.khronos.opengles.GL10;
+
+import android.util.Log;
+import android.opengl.GLSurfaceView;
+
+
+public class TeapotRenderer implements GLSurfaceView.Renderer {
+    static float teapot_vertices[] = { 0.0663056f, 0.117825f, 2.10688e-008f,
+        0.0672f, 0.1152f, 2.05994e-008f, 0.0639726f, 0.117825f, 0.0178043f,
+        0.0648356f, 0.1152f, 0.0180445f, 0.0573666f, 0.117825f, 0.0336931f,
+        0.0581404f, 0.1152f, 0.0341476f, 0.0470769f, 0.117825f, 0.0470769f,
+        0.047712f, 0.1152f, 0.047712f, 0.033693f, 0.117825f, 0.0573666f,
+        0.0341476f, 0.1152f, 0.0581404f, 0.0178043f, 0.117825f, 0.0639726f,
+        0.0180444f, 0.1152f, 0.0648356f, 0f, 0.117825f, 0.0663056f, 0f,
+        0.1152f, 0.0672f, 0.0664444f, 0.1194f, 2.13504e-008f, 0.0641066f,
+        0.1194f, 0.0178416f, 0.0574868f, 0.1194f, 0.0337636f, 0.0471755f,
+        0.1194f, 0.0471756f, 0.0337636f, 0.1194f, 0.0574868f, 0.0178416f,
+        0.1194f, 0.0641066f, 0f, 0.1194f, 0.0664444f, 0.06735f, 0.119925f,
+        2.14443e-008f, 0.0649803f, 0.119925f, 0.0180847f, 0.0582702f,
+        0.119925f, 0.0342238f, 0.0478185f, 0.119925f, 0.0478185f,
+        0.0342238f, 0.119925f, 0.0582702f, 0.0180847f, 0.119925f,
+        0.0649803f, 0f, 0.119925f, 0.06735f, 0.0687556f, 0.1194f,
+        2.13504e-008f, 0.0663364f, 0.1194f, 0.0184622f, 0.0594863f,
+        0.1194f, 0.034938f, 0.0488164f, 0.1194f, 0.0488164f, 0.034938f,
+        0.1194f, 0.0594863f, 0.0184621f, 0.1194f, 0.0663364f, 0f, 0.1194f,
+        0.0687556f, 0.0703944f, 0.117825f, 2.10688e-008f, 0.0679176f,
+        0.117825f, 0.0189022f, 0.0609042f, 0.117825f, 0.0357708f,
+        0.0499801f, 0.117825f, 0.0499801f, 0.0357708f, 0.117825f,
+        0.0609042f, 0.0189022f, 0.117825f, 0.0679176f, 0f, 0.117825f,
+        0.0703944f, 0.072f, 0.1152f, 2.05994e-008f, 0.0694667f, 0.1152f,
+        0.0193333f, 0.0622933f, 0.1152f, 0.0365867f, 0.05112f, 0.1152f,
+        0.05112f, 0.0365867f, 0.1152f, 0.0622933f, 0.0193333f, 0.1152f,
+        0.0694667f, 0f, 0.1152f, 0.072f, -0.0178043f, 0.117825f,
+        0.0639726f, -0.0180444f, 0.1152f, 0.0648356f, -0.033693f,
+        0.117825f, 0.0573666f, -0.0341476f, 0.1152f, 0.0581404f,
+        -0.0470769f, 0.117825f, 0.0470769f, -0.047712f, 0.1152f, 0.047712f,
+        -0.0573666f, 0.117825f, 0.033693f, -0.0581404f, 0.1152f,
+        0.0341476f, -0.0639726f, 0.117825f, 0.0178043f, -0.0648356f,
+        0.1152f, 0.0180445f, -0.0663056f, 0.117825f, 2.10688e-008f,
+        -0.0672f, 0.1152f, 2.05994e-008f, -0.0178416f, 0.1194f, 0.0641066f,
+        -0.0337636f, 0.1194f, 0.0574867f, -0.0471756f, 0.1194f, 0.0471756f,
+        -0.0574867f, 0.1194f, 0.0337636f, -0.0641066f, 0.1194f, 0.0178416f,
+        -0.0664444f, 0.1194f, 2.13504e-008f, -0.0180847f, 0.119925f,
+        0.0649803f, -0.0342238f, 0.119925f, 0.0582702f, -0.0478185f,
+        0.119925f, 0.0478185f, -0.0582702f, 0.119925f, 0.0342238f,
+        -0.0649803f, 0.119925f, 0.0180847f, -0.06735f, 0.119925f,
+        2.14443e-008f, 0f, 0.1194f, 0.0687556f, -0.0184621f, 0.1194f,
+        0.0663364f, -0.034938f, 0.1194f, 0.0594863f, -0.0488164f, 0.1194f,
+        0.0488164f, -0.0594863f, 0.1194f, 0.034938f, -0.0663364f, 0.1194f,
+        0.0184621f, -0.0687556f, 0.1194f, 2.13504e-008f, 0f, 0.117825f,
+        0.0703944f, -0.0189022f, 0.117825f, 0.0679176f, -0.0357708f,
+        0.117825f, 0.0609042f, -0.0499801f, 0.117825f, 0.0499801f,
+        -0.0609042f, 0.117825f, 0.0357708f, -0.0679176f, 0.117825f,
+        0.0189022f, -0.0703944f, 0.117825f, 2.10688e-008f, -0.0193333f,
+        0.1152f, 0.0694667f, -0.0365867f, 0.1152f, 0.0622933f, -0.05112f,
+        0.1152f, 0.05112f, -0.0622933f, 0.1152f, 0.0365867f, -0.0694667f,
+        0.1152f, 0.0193333f, -0.072f, 0.1152f, 2.05994e-008f, -0.0663055f,
+        0.117825f, 2.10688e-008f, -0.0639726f, 0.117825f, -0.0178043f,
+        -0.0648356f, 0.1152f, -0.0180444f, -0.0573666f, 0.117825f,
+        -0.033693f, -0.0581404f, 0.1152f, -0.0341475f, -0.0470769f,
+        0.117825f, -0.0470769f, -0.047712f, 0.1152f, -0.047712f,
+        -0.033693f, 0.117825f, -0.0573666f, -0.0341476f, 0.1152f,
+        -0.0581404f, -0.0178043f, 0.117825f, -0.0639726f, -0.0180444f,
+        0.1152f, -0.0648356f, 0f, 0.117825f, -0.0663055f, 0f, 0.1152f,
+        -0.0672f, -0.0664444f, 0.1194f, 2.13504e-008f, -0.0641066f,
+        0.1194f, -0.0178416f, -0.0574867f, 0.1194f, -0.0337636f,
+        -0.0471756f, 0.1194f, -0.0471756f, -0.0337636f, 0.1194f,
+        -0.0574868f, -0.0178416f, 0.1194f, -0.0641066f, 0f, 0.1194f,
+        -0.0664444f, -0.0649803f, 0.119925f, -0.0180847f, -0.0582702f,
+        0.119925f, -0.0342238f, -0.0478185f, 0.119925f, -0.0478185f,
+        -0.0342238f, 0.119925f, -0.0582702f, -0.0180847f, 0.119925f,
+        -0.0649803f, 0f, 0.119925f, -0.06735f, -0.0663364f, 0.1194f,
+        -0.0184621f, -0.0594863f, 0.1194f, -0.034938f, -0.0488164f,
+        0.1194f, -0.0488164f, -0.034938f, 0.1194f, -0.0594863f,
+        -0.0184621f, 0.1194f, -0.0663364f, 0f, 0.1194f, -0.0687556f,
+        -0.0703944f, 0.117825f, 2.10688e-008f, -0.0679176f, 0.117825f,
+        -0.0189022f, -0.0609042f, 0.117825f, -0.0357708f, -0.0499801f,
+        0.117825f, -0.0499801f, -0.0357708f, 0.117825f, -0.0609042f,
+        -0.0189022f, 0.117825f, -0.0679176f, 0f, 0.117825f, -0.0703944f,
+        -0.0694667f, 0.1152f, -0.0193333f, -0.0622933f, 0.1152f,
+        -0.0365867f, -0.05112f, 0.1152f, -0.05112f, -0.0365867f, 0.1152f,
+        -0.0622933f, -0.0193333f, 0.1152f, -0.0694667f, 0f, 0.1152f,
+        -0.072f, 0.0178043f, 0.117825f, -0.0639726f, 0.0180444f, 0.1152f,
+        -0.0648356f, 0.033693f, 0.117825f, -0.0573666f, 0.0341476f,
+        0.1152f, -0.0581404f, 0.0470769f, 0.117825f, -0.0470769f,
+        0.047712f, 0.1152f, -0.047712f, 0.0573666f, 0.117825f, -0.033693f,
+        0.0581404f, 0.1152f, -0.0341475f, 0.0639726f, 0.117825f,
+        -0.0178043f, 0.0648356f, 0.1152f, -0.0180444f, 0.0663055f,
+        0.117825f, 2.10688e-008f, 0.0178416f, 0.1194f, -0.0641066f,
+        0.0337636f, 0.1194f, -0.0574867f, 0.0471756f, 0.1194f, -0.0471756f,
+        0.0574868f, 0.1194f, -0.0337636f, 0.0641066f, 0.1194f, -0.0178415f,
+        0.0664444f, 0.1194f, 2.13504e-008f, 0.0180847f, 0.119925f,
+        -0.0649803f, 0.0342238f, 0.119925f, -0.0582702f, 0.0478185f,
+        0.119925f, -0.0478185f, 0.0582702f, 0.119925f, -0.0342238f,
+        0.0649803f, 0.119925f, -0.0180847f, 0.0184621f, 0.1194f,
+        -0.0663364f, 0.034938f, 0.1194f, -0.0594863f, 0.0488164f, 0.1194f,
+        -0.0488164f, 0.0594863f, 0.1194f, -0.034938f, 0.0663364f, 0.1194f,
+        -0.0184621f, 0.0687556f, 0.1194f, 2.13504e-008f, 0.0189022f,
+        0.117825f, -0.0679176f, 0.0357708f, 0.117825f, -0.0609042f,
+        0.0499801f, 0.117825f, -0.0499801f, 0.0609042f, 0.117825f,
+        -0.0357708f, 0.0679176f, 0.117825f, -0.0189022f, 0.0703944f,
+        0.117825f, 2.10688e-008f, 0.0193333f, 0.1152f, -0.0694667f,
+        0.0365867f, 0.1152f, -0.0622933f, 0.05112f, 0.1152f, -0.05112f,
+        0.0622933f, 0.1152f, -0.0365867f, 0.0694667f, 0.1152f, -0.0193333f,
+        0.0779444f, 0.102617f, 1.83493e-008f, 0.075202f, 0.102617f,
+        0.0209295f, 0.0694667f, 0.1152f, 0.0193333f, 0.0674364f, 0.102617f,
+        0.0396073f, 0.0622933f, 0.1152f, 0.0365867f, 0.0553406f, 0.102617f,
+        0.0553406f, 0.0396073f, 0.102617f, 0.0674364f, 0.0365867f, 0.1152f,
+        0.0622933f, 0.0209296f, 0.102617f, 0.0752019f, 0.0193334f, 0.1152f,
+        0.0694667f, 0f, 0.102617f, 0.0779444f, 0.0835556f, 0.0901333f,
+        1.61171e-008f, 0.0806156f, 0.0901333f, 0.0224362f, 0.072291f,
+        0.0901333f, 0.0424586f, 0.0593244f, 0.0901334f, 0.0593245f,
+        0.0424586f, 0.0901333f, 0.072291f, 0.0224362f, 0.0901333f,
+        0.0806156f, 0f, 0.0901333f, 0.0835556f, 0.0885f, 0.07785f,
+        1.39207e-008f, 0.0853861f, 0.07785f, 0.0237639f, 0.0765689f,
+        0.07785f, 0.0449711f, 0.062835f, 0.07785f, 0.062835f, 0.0449711f,
+        0.07785f, 0.0765689f, 0.0237639f, 0.07785f, 0.0853861f, 0f,
+        0.07785f, 0.0885f, 0.0924444f, 0.0658667f, 1.17779e-008f,
+        0.0891918f, 0.0658667f, 0.024823f, 0.0799816f, 0.0658667f,
+        0.0469755f, 0.0656356f, 0.0658667f, 0.0656356f, 0.0469755f,
+        0.0658667f, 0.0799816f, 0.0248231f, 0.0658667f, 0.0891918f, 0f,
+        0.0658667f, 0.0924444f, 0.0950556f, 0.0542833f, 9.7066e-009f,
+        0.091711f, 0.0542833f, 0.0255242f, 0.0822407f, 0.0542833f,
+        0.0483023f, 0.0674895f, 0.0542833f, 0.0674895f, 0.0483023f,
+        0.0542833f, 0.0822406f, 0.0255242f, 0.0542833f, 0.091711f, 0f,
+        0.0542833f, 0.0950556f, 0.096f, 0.0432f, 7.72476e-009f, 0.0926222f,
+        0.0432f, 0.0257778f, 0.0830578f, 0.0432f, 0.0487822f, 0.06816f,
+        0.0432f, 0.06816f, 0.0487822f, 0.0432f, 0.0830578f, 0.0257778f,
+        0.0432f, 0.0926222f, 0f, 0.0432f, 0.096f, 0f, 0.102617f,
+        0.0779444f, -0.0209295f, 0.102617f, 0.075202f, -0.0193333f,
+        0.1152f, 0.0694667f, -0.0396073f, 0.102617f, 0.0674364f,
+        -0.0365867f, 0.1152f, 0.0622933f, -0.0553405f, 0.102617f,
+        0.0553405f, -0.0674364f, 0.102617f, 0.0396073f, -0.0622933f,
+        0.1152f, 0.0365867f, -0.075202f, 0.102617f, 0.0209296f,
+        -0.0694667f, 0.1152f, 0.0193334f, -0.0779444f, 0.102617f,
+        1.83493e-008f, 0f, 0.0901333f, 0.0835555f, -0.0224362f, 0.0901333f,
+        0.0806156f, -0.0424586f, 0.0901333f, 0.072291f, -0.0593244f,
+        0.0901334f, 0.0593244f, -0.072291f, 0.0901334f, 0.0424586f,
+        -0.0806156f, 0.0901333f, 0.0224362f, -0.0835555f, 0.0901333f,
+        1.61171e-008f, -0.0237639f, 0.07785f, 0.0853861f, -0.0449711f,
+        0.07785f, 0.0765689f, -0.062835f, 0.07785f, 0.062835f, -0.0765689f,
+        0.07785f, 0.0449711f, -0.0853861f, 0.07785f, 0.0237639f, -0.0885f,
+        0.07785f, 1.39207e-008f, 0f, 0.0658667f, 0.0924444f, -0.024823f,
+        0.0658667f, 0.0891918f, -0.0469755f, 0.0658667f, 0.0799816f,
+        -0.0656356f, 0.0658667f, 0.0656356f, -0.0799816f, 0.0658667f,
+        0.0469755f, -0.0891918f, 0.0658667f, 0.0248231f, -0.0924444f,
+        0.0658667f, 1.17779e-008f, 0f, 0.0542833f, 0.0950556f, -0.0255242f,
+        0.0542833f, 0.091711f, -0.0483023f, 0.0542833f, 0.0822407f,
+        -0.0674894f, 0.0542834f, 0.0674894f, -0.0822406f, 0.0542834f,
+        0.0483023f, -0.091711f, 0.0542833f, 0.0255242f, -0.0950556f,
+        0.0542833f, 9.70661e-009f, -0.0257778f, 0.0432f, 0.0926222f,
+        -0.0487822f, 0.0432f, 0.0830578f, -0.06816f, 0.0432f, 0.06816f,
+        -0.0830578f, 0.0432f, 0.0487822f, -0.0926222f, 0.0432f, 0.0257778f,
+        -0.096f, 0.0432f, 7.72476e-009f, -0.0779444f, 0.102617f,
+        1.83493e-008f, -0.075202f, 0.102617f, -0.0209295f, -0.0694667f,
+        0.1152f, -0.0193333f, -0.0674364f, 0.102617f, -0.0396073f,
+        -0.0622933f, 0.1152f, -0.0365866f, -0.0553406f, 0.102617f,
+        -0.0553406f, -0.0396073f, 0.102617f, -0.0674364f, -0.0365867f,
+        0.1152f, -0.0622933f, -0.0209296f, 0.102617f, -0.0752019f,
+        -0.0193334f, 0.1152f, -0.0694667f, 0f, 0.102617f, -0.0779444f,
+        -0.0835556f, 0.0901333f, 1.61171e-008f, -0.0806156f, 0.0901333f,
+        -0.0224362f, -0.072291f, 0.0901333f, -0.0424586f, -0.0593244f,
+        0.0901333f, -0.0593244f, -0.0424586f, 0.0901333f, -0.072291f,
+        -0.0224362f, 0.0901333f, -0.0806156f, 0f, 0.0901333f, -0.0835556f,
+        -0.0853861f, 0.07785f, -0.0237639f, -0.0765689f, 0.07785f,
+        -0.0449711f, -0.062835f, 0.07785f, -0.062835f, -0.0449711f,
+        0.07785f, -0.0765689f, -0.0237639f, 0.07785f, -0.0853861f, 0f,
+        0.07785f, -0.0885f, -0.0924444f, 0.0658666f, 1.17779e-008f,
+        -0.0891918f, 0.0658666f, -0.024823f, -0.0799816f, 0.0658666f,
+        -0.0469755f, -0.0656356f, 0.0658666f, -0.0656356f, -0.0469755f,
+        0.0658666f, -0.0799816f, -0.0248231f, 0.0658666f, -0.0891918f, 0f,
+        0.0658666f, -0.0924444f, -0.0950556f, 0.0542833f, 9.7066e-009f,
+        -0.091711f, 0.0542833f, -0.0255242f, -0.0822407f, 0.0542833f,
+        -0.0483023f, -0.0674894f, 0.0542833f, -0.0674894f, -0.0483023f,
+        0.0542833f, -0.0822407f, -0.0255242f, 0.0542833f, -0.091711f, 0f,
+        0.0542833f, -0.0950556f, -0.0926222f, 0.0432f, -0.0257778f,
+        -0.0830578f, 0.0432f, -0.0487822f, -0.06816f, 0.0432f, -0.06816f,
+        -0.0487822f, 0.0432f, -0.0830578f, -0.0257778f, 0.0432f,
+        -0.0926222f, 0f, 0.0432f, -0.096f, 0.0209295f, 0.102617f,
+        -0.075202f, 0.0193333f, 0.1152f, -0.0694667f, 0.0396073f,
+        0.102617f, -0.0674364f, 0.0365867f, 0.1152f, -0.0622933f,
+        0.0553406f, 0.102617f, -0.0553406f, 0.0674364f, 0.102617f,
+        -0.0396073f, 0.0622933f, 0.1152f, -0.0365867f, 0.0752019f,
+        0.102617f, -0.0209295f, 0.0694667f, 0.1152f, -0.0193333f,
+        0.0779444f, 0.102617f, 1.83493e-008f, 0.0224362f, 0.0901333f,
+        -0.0806156f, 0.0424586f, 0.0901333f, -0.072291f, 0.0593244f,
+        0.0901333f, -0.0593244f, 0.072291f, 0.0901333f, -0.0424586f,
+        0.0806156f, 0.0901333f, -0.0224362f, 0.0835556f, 0.0901333f,
+        1.61171e-008f, 0.0237639f, 0.07785f, -0.0853861f, 0.0449711f,
+        0.07785f, -0.0765689f, 0.062835f, 0.07785f, -0.062835f, 0.0765689f,
+        0.07785f, -0.0449711f, 0.0853861f, 0.07785f, -0.0237639f,
+        0.024823f, 0.0658666f, -0.0891918f, 0.0469755f, 0.0658666f,
+        -0.0799816f, 0.0656356f, 0.0658666f, -0.0656356f, 0.0799816f,
+        0.0658666f, -0.0469755f, 0.0891918f, 0.0658666f, -0.0248231f,
+        0.0924444f, 0.0658666f, 1.17779e-008f, 0.0255242f, 0.0542833f,
+        -0.091711f, 0.0483023f, 0.0542833f, -0.0822407f, 0.0674894f,
+        0.0542833f, -0.0674894f, 0.0822407f, 0.0542833f, -0.0483023f,
+        0.091711f, 0.0542833f, -0.0255242f, 0.0950556f, 0.0542833f,
+        9.7066e-009f, 0.0257778f, 0.0432f, -0.0926222f, 0.0487822f,
+        0.0432f, -0.0830578f, 0.06816f, 0.0432f, -0.06816f, 0.0830578f,
+        0.0432f, -0.0487822f, 0.0926222f, 0.0432f, -0.0257778f, 0.0942222f,
+        0.0332833f, 5.95152e-009f, 0.090907f, 0.0332833f, 0.0253004f,
+        0.0815197f, 0.0332833f, 0.0478788f, 0.0668978f, 0.0332833f,
+        0.0668978f, 0.0478789f, 0.0332833f, 0.0815197f, 0.0253004f,
+        0.0332833f, 0.090907f, 0f, 0.0332833f, 0.0942222f, 0.0897778f,
+        0.0250667f, 4.48227e-009f, 0.0866189f, 0.0250667f, 0.024107f,
+        0.0776744f, 0.0250667f, 0.0456204f, 0.0637422f, 0.0250667f,
+        0.0637422f, 0.0456204f, 0.0250667f, 0.0776744f, 0.024107f,
+        0.0250667f, 0.0866189f, 0f, 0.0250667f, 0.0897778f, 0.084f,
+        0.01845f, 3.29912e-009f, 0.0810445f, 0.01845f, 0.0225556f,
+        0.0726756f, 0.01845f, 0.0426844f, 0.05964f, 0.01845f, 0.05964f,
+        0.0426845f, 0.01845f, 0.0726755f, 0.0225556f, 0.01845f, 0.0810444f,
+        0f, 0.01845f, 0.084f, 0.0782222f, 0.0133334f, 2.38419e-009f,
+        0.07547f, 0.0133333f, 0.0210041f, 0.0676767f, 0.0133333f,
+        0.0397485f, 0.0555378f, 0.0133333f, 0.0555378f, 0.0397485f,
+        0.0133333f, 0.0676767f, 0.0210041f, 0.0133333f, 0.07547f, 0f,
+        0.0133333f, 0.0782222f, 0.0737778f, 0.00961668f, 1.7196e-009f,
+        0.0711819f, 0.00961668f, 0.0198107f, 0.0638315f, 0.00961668f,
+        0.03749f, 0.0523822f, 0.00961668f, 0.0523822f, 0.0374901f,
+        0.00961668f, 0.0638314f, 0.0198107f, 0.00961668f, 0.0711819f, 0f,
+        0.00961668f, 0.0737778f, 0.072f, 0.0072f, 1.28746e-009f,
+        0.0694667f, 0.0072f, 0.0193333f, 0.0622933f, 0.00719999f,
+        0.0365867f, 0.05112f, 0.00719999f, 0.05112f, 0.0365867f,
+        0.00719999f, 0.0622933f, 0.0193334f, 0.00719999f, 0.0694667f, 0f,
+        0.00719999f, 0.072f, -0.0253004f, 0.0332833f, 0.090907f,
+        -0.0478788f, 0.0332833f, 0.0815197f, -0.0668978f, 0.0332833f,
+        0.0668978f, -0.0815197f, 0.0332833f, 0.0478789f, -0.090907f,
+        0.0332833f, 0.0253004f, -0.0942222f, 0.0332833f, 5.95152e-009f,
+        -0.024107f, 0.0250667f, 0.0866189f, -0.0456204f, 0.0250667f,
+        0.0776744f, -0.0637422f, 0.0250667f, 0.0637422f, -0.0776744f,
+        0.0250667f, 0.0456204f, -0.0866189f, 0.0250667f, 0.024107f,
+        -0.0897778f, 0.0250667f, 4.48227e-009f, -0.0225556f, 0.01845f,
+        0.0810445f, -0.0426844f, 0.01845f, 0.0726756f, -0.05964f, 0.01845f,
+        0.05964f, -0.0726755f, 0.01845f, 0.0426845f, -0.0810444f, 0.01845f,
+        0.0225556f, -0.084f, 0.01845f, 3.29912e-009f, -0.0210041f,
+        0.0133333f, 0.07547f, -0.0397485f, 0.0133333f, 0.0676767f,
+        -0.0555378f, 0.0133333f, 0.0555378f, -0.0676767f, 0.0133333f,
+        0.0397485f, -0.07547f, 0.0133333f, 0.0210041f, -0.0782222f,
+        0.0133334f, 2.38419e-009f, -0.0198107f, 0.00961668f, 0.0711819f,
+        -0.03749f, 0.00961667f, 0.0638315f, -0.0523822f, 0.00961668f,
+        0.0523822f, -0.0638314f, 0.00961668f, 0.0374901f, -0.0711819f,
+        0.00961668f, 0.0198107f, -0.0737778f, 0.00961668f, 1.7196e-009f,
+        -0.0193333f, 0.00719999f, 0.0694667f, -0.0365867f, 0.00719999f,
+        0.0622933f, -0.05112f, 0.00719999f, 0.05112f, -0.0622933f,
+        0.00719999f, 0.0365867f, -0.0694667f, 0.0072f, 0.0193334f, -0.072f,
+        0.0072f, 1.28746e-009f, -0.090907f, 0.0332833f, -0.0253004f,
+        -0.0815197f, 0.0332833f, -0.0478788f, -0.0668978f, 0.0332833f,
+        -0.0668978f, -0.0478789f, 0.0332833f, -0.0815197f, -0.0253004f,
+        0.0332833f, -0.090907f, 0f, 0.0332833f, -0.0942222f, -0.0866189f,
+        0.0250667f, -0.024107f, -0.0776744f, 0.0250667f, -0.0456204f,
+        -0.0637422f, 0.0250667f, -0.0637422f, -0.0456204f, 0.0250667f,
+        -0.0776744f, -0.024107f, 0.0250667f, -0.0866189f, 0f, 0.0250667f,
+        -0.0897778f, -0.0810445f, 0.01845f, -0.0225556f, -0.0726756f,
+        0.01845f, -0.0426844f, -0.05964f, 0.01845f, -0.05964f, -0.0426845f,
+        0.01845f, -0.0726755f, -0.0225556f, 0.01845f, -0.0810444f, 0f,
+        0.01845f, -0.084f, -0.07547f, 0.0133334f, -0.0210041f, -0.0676767f,
+        0.0133334f, -0.0397485f, -0.0555378f, 0.0133334f, -0.0555378f,
+        -0.0397485f, 0.0133334f, -0.0676767f, -0.0210041f, 0.0133334f,
+        -0.07547f, 0f, 0.0133334f, -0.0782222f, -0.0711819f, 0.00961669f,
+        -0.0198107f, -0.0638315f, 0.00961669f, -0.03749f, -0.0523822f,
+        0.00961669f, -0.0523822f, -0.0374901f, 0.00961669f, -0.0638314f,
+        -0.0198107f, 0.00961669f, -0.0711819f, 0f, 0.00961669f,
+        -0.0737778f, -0.0694667f, 0.0072f, -0.0193333f, -0.0622933f,
+        0.00720001f, -0.0365867f, -0.05112f, 0.00720001f, -0.05112f,
+        -0.0365867f, 0.00720001f, -0.0622933f, -0.0193334f, 0.00720001f,
+        -0.0694667f, 0f, 0.00720001f, -0.072f, 0.0253004f, 0.0332833f,
+        -0.090907f, 0.0478788f, 0.0332833f, -0.0815197f, 0.0668978f,
+        0.0332833f, -0.0668978f, 0.0815197f, 0.0332833f, -0.0478789f,
+        0.090907f, 0.0332833f, -0.0253004f, 0.024107f, 0.0250667f,
+        -0.0866189f, 0.0456204f, 0.0250667f, -0.0776744f, 0.0637422f,
+        0.0250667f, -0.0637422f, 0.0776744f, 0.0250667f, -0.0456204f,
+        0.0866189f, 0.0250667f, -0.024107f, 0.0225556f, 0.01845f,
+        -0.0810445f, 0.0426844f, 0.01845f, -0.0726756f, 0.05964f, 0.01845f,
+        -0.05964f, 0.0726755f, 0.01845f, -0.0426845f, 0.0810444f, 0.01845f,
+        -0.0225556f, 0.0210041f, 0.0133334f, -0.07547f, 0.0397485f,
+        0.0133334f, -0.0676767f, 0.0555378f, 0.0133334f, -0.0555378f,
+        0.0676767f, 0.0133334f, -0.0397485f, 0.07547f, 0.0133334f,
+        -0.0210041f, 0.0198107f, 0.00961669f, -0.0711819f, 0.03749f,
+        0.00961669f, -0.0638315f, 0.0523822f, 0.00961669f, -0.0523822f,
+        0.0638314f, 0.00961669f, -0.0374901f, 0.0711819f, 0.00961668f,
+        -0.0198107f, 0.0193333f, 0.00720001f, -0.0694667f, 0.0365867f,
+        0.00720001f, -0.0622933f, 0.05112f, 0.00720001f, -0.05112f,
+        0.0622933f, 0.00720001f, -0.0365867f, 0.0694667f, 0.0072f,
+        -0.0193334f, -0.0923778f, 0.09715f, 1.73718e-008f, -0.0768f,
+        0.0972f, 1.73807e-008f, -0.0924979f, 0.0979463f, 0.00600001f,
+        -0.0764444f, 0.098f, 0.00600001f, -0.0927984f, 0.099937f,
+        0.00960001f, -0.0755556f, 0.1f, 0.00960001f, -0.0931889f,
+        0.102525f, 0.0108f, -0.0744f, 0.1026f, 0.0108f, -0.0935794f,
+        0.105113f, 0.0096f, -0.0732444f, 0.1052f, 0.0096f, -0.0938798f,
+        0.107104f, 0.006f, -0.0723556f, 0.1072f, 0.006f, -0.094f, 0.1079f,
+        1.9294e-008f, -0.072f, 0.108f, 1.93119e-008f, -0.105422f, 0.0968f,
+        1.73092e-008f, -0.105909f, 0.0975704f, 0.00600001f, -0.107128f,
+        0.0994963f, 0.00960001f, -0.108711f, 0.102f, 0.0108f, -0.110295f,
+        0.104504f, 0.0096f, -0.111513f, 0.10643f, 0.006f, -0.112f, 0.1072f,
+        1.91688e-008f, -0.1158f, 0.09585f, 1.71393e-008f, -0.116556f,
+        0.09655f, 0.00600001f, -0.118444f, 0.0983f, 0.00960001f, -0.1209f,
+        0.100575f, 0.0108f, -0.123356f, 0.10285f, 0.0096f, -0.125244f,
+        0.1046f, 0.006f, -0.126f, 0.1053f, 1.88291e-008f, -0.123378f,
+        0.094f, 1.68085e-008f, -0.124313f, 0.094563f, 0.00600001f,
+        -0.12665f, 0.0959704f, 0.00960001f, -0.129689f, 0.0978f, 0.0108f,
+        -0.132728f, 0.0996296f, 0.0096f, -0.135065f, 0.101037f, 0.006f,
+        -0.136f, 0.1016f, 1.81675e-008f, -0.128022f, 0.09095f,
+        1.62631e-008f, -0.129058f, 0.091287f, 0.00600001f, -0.131646f,
+        0.0921296f, 0.00960001f, -0.135011f, 0.093225f, 0.0108f,
+        -0.138376f, 0.0943204f, 0.0096f, -0.140965f, 0.095163f, 0.006f,
+        -0.142f, 0.0955f, 1.70767e-008f, -0.1296f, 0.0864f, 1.54495e-008f,
+        -0.130667f, 0.0864f, 0.00600001f, -0.133333f, 0.0864f, 0.00960001f,
+        -0.1368f, 0.0864f, 0.0108f, -0.140267f, 0.0864f, 0.0096f,
+        -0.142933f, 0.0864f, 0.006f, -0.144f, 0.0864f, 1.54495e-008f,
+        -0.0938798f, 0.107104f, -0.00599999f, -0.0723556f, 0.1072f,
+        -0.00599999f, -0.0935794f, 0.105113f, -0.0096f, -0.0732444f,
+        0.1052f, -0.0096f, -0.0931889f, 0.102525f, -0.0108f, -0.0744f,
+        0.1026f, -0.0108f, -0.0927983f, 0.099937f, -0.00959999f,
+        -0.0755556f, 0.1f, -0.00959999f, -0.0924979f, 0.0979463f,
+        -0.00599998f, -0.0764444f, 0.098f, -0.00599998f, -0.0923778f,
+        0.09715f, 1.73718e-008f, -0.112f, 0.1072f, 1.91688e-008f,
+        -0.111513f, 0.10643f, -0.00599999f, -0.110295f, 0.104504f,
+        -0.00959999f, -0.108711f, 0.102f, -0.0108f, -0.107128f, 0.0994963f,
+        -0.00959999f, -0.105909f, 0.0975704f, -0.00599998f, -0.105422f,
+        0.0968f, 1.73092e-008f, -0.125244f, 0.1046f, -0.00599999f,
+        -0.123356f, 0.10285f, -0.0096f, -0.1209f, 0.100575f, -0.0108f,
+        -0.118444f, 0.0983f, -0.00959999f, -0.116556f, 0.09655f,
+        -0.00599998f, -0.136f, 0.1016f, 1.81675e-008f, -0.135065f,
+        0.101037f, -0.00599999f, -0.132728f, 0.0996296f, -0.0096f,
+        -0.129689f, 0.0978f, -0.0108f, -0.12665f, 0.0959704f, -0.00959999f,
+        -0.124313f, 0.094563f, -0.00599998f, -0.123378f, 0.094f,
+        1.68085e-008f, -0.142f, 0.0955f, 1.70767e-008f, -0.140965f,
+        0.095163f, -0.00599999f, -0.138376f, 0.0943204f, -0.0096f,
+        -0.135011f, 0.093225f, -0.0108f, -0.131646f, 0.0921296f,
+        -0.00959999f, -0.129058f, 0.091287f, -0.00599998f, -0.128022f,
+        0.09095f, 1.62631e-008f, -0.142933f, 0.0864f, -0.00599999f,
+        -0.140267f, 0.0864f, -0.0096f, -0.1368f, 0.0864f, -0.0108f,
+        -0.133333f, 0.0864f, -0.00959999f, -0.130667f, 0.0864f,
+        -0.00599998f, -0.128778f, 0.0802f, 1.43409e-008f, -0.129801f,
+        0.079871f, 0.00600001f, -0.132358f, 0.0790484f, 0.00960001f,
+        -0.135683f, 0.0779792f, 0.0108f, -0.139008f, 0.0769099f, 0.0096f,
+        -0.141566f, 0.0760873f, 0.006f, -0.142589f, 0.0757583f,
+        1.35466e-008f, -0.126222f, 0.0728f, 1.30176e-008f, -0.127118f,
+        0.0722568f, 0.00600001f, -0.129356f, 0.0708988f, 0.00960001f,
+        -0.132267f, 0.0691333f, 0.0108f, -0.135177f, 0.0673679f, 0.0096f,
+        -0.137416f, 0.0660099f, 0.00599999f, -0.138311f, 0.0654667f,
+        1.17063e-008f, -0.1218f, 0.0648f, 1.15871e-008f, -0.122489f,
+        0.0641167f, 0.00600001f, -0.124211f, 0.0624083f, 0.00960001f,
+        -0.12645f, 0.0601875f, 0.0108f, -0.128689f, 0.0579667f, 0.0096f,
+        -0.130411f, 0.0562583f, 0.00599999f, -0.1311f, 0.055575f,
+        9.93757e-009f, -0.115378f, 0.0568f, 1.01566e-008f, -0.115786f,
+        0.0560099f, 0.00600001f, -0.116807f, 0.0540345f, 0.0096f,
+        -0.118133f, 0.0514667f, 0.0108f, -0.11946f, 0.0488987f, 0.0096f,
+        -0.120481f, 0.0469234f, 0.00599999f, -0.120889f, 0.0461333f,
+        8.24927e-009f, -0.106822f, 0.0494f, 8.8334e-009f, -0.106881f,
+        0.0484957f, 0.00600001f, -0.107027f, 0.0462349f, 0.00960001f,
+        -0.107217f, 0.0432958f, 0.0108f, -0.107407f, 0.0403568f, 0.0096f,
+        -0.107553f, 0.038096f, 0.00599999f, -0.107611f, 0.0371916f,
+        6.65038e-009f, -0.0956444f, 0.0421333f, 0.00600001f, -0.0947556f,
+        0.0394667f, 0.0096f, -0.0936f, 0.036f, 0.0108f, -0.0924444f,
+        0.0325333f, 0.0096f, -0.0915556f, 0.0298667f, 0.00599999f,
+        -0.0912f, 0.0288f, 5.14984e-009f, -0.141566f, 0.0760873f,
+        -0.00599999f, -0.139008f, 0.0769099f, -0.0096f, -0.135683f,
+        0.0779792f, -0.0108f, -0.132358f, 0.0790484f, -0.00959999f,
+        -0.129801f, 0.079871f, -0.00599998f, -0.137416f, 0.0660099f,
+        -0.006f, -0.135177f, 0.0673679f, -0.0096f, -0.132267f, 0.0691333f,
+        -0.0108f, -0.129356f, 0.0708988f, -0.00959999f, -0.127118f,
+        0.0722568f, -0.00599998f, -0.130411f, 0.0562583f, -0.006f,
+        -0.128689f, 0.0579667f, -0.0096f, -0.12645f, 0.0601875f, -0.0108f,
+        -0.124211f, 0.0624083f, -0.00959999f, -0.122489f, 0.0641167f,
+        -0.00599998f, -0.120481f, 0.0469234f, -0.006f, -0.11946f,
+        0.0488988f, -0.0096f, -0.118133f, 0.0514667f, -0.0108f, -0.116807f,
+        0.0540346f, -0.00959999f, -0.115786f, 0.0560099f, -0.00599998f,
+        -0.107553f, 0.038096f, -0.006f, -0.107407f, 0.0403568f, -0.0096f,
+        -0.107217f, 0.0432958f, -0.0108f, -0.107027f, 0.0462349f,
+        -0.00959999f, -0.106881f, 0.0484957f, -0.00599998f, -0.0915556f,
+        0.0298667f, -0.006f, -0.0924444f, 0.0325333f, -0.0096f, -0.0936f,
+        0.036f, -0.0108f, -0.0947556f, 0.0394667f, -0.00959999f,
+        -0.0956445f, 0.0421333f, -0.00599998f, 0.0988222f, 0.0708667f,
+        1.2672e-008f, 0.0816f, 0.0684f, 1.22309e-008f, 0.0994741f,
+        0.0684099f, 0.0125926f, 0.0816f, 0.0654667f, 0.0132f, 0.101104f,
+        0.0622679f, 0.0201482f, 0.0816f, 0.0581333f, 0.02112f, 0.103222f,
+        0.0542833f, 0.0226667f, 0.0816f, 0.0486f, 0.02376f, 0.105341f,
+        0.0462987f, 0.0201481f, 0.0816f, 0.0390666f, 0.02112f, 0.10697f,
+        0.0401568f, 0.0125926f, 0.0816f, 0.0317333f, 0.0132f, 0.107622f,
+        0.0377f, 6.74128e-009f, 0.0816f, 0.0288f, 5.14984e-009f, 0.108978f,
+        0.0773333f, 1.38283e-008f, 0.109926f, 0.0754568f, 0.0110741f,
+        0.112296f, 0.0707654f, 0.0177185f, 0.115378f, 0.0646667f,
+        0.0199333f, 0.118459f, 0.0585679f, 0.0177185f, 0.12083f,
+        0.0538765f, 0.0110741f, 0.121778f, 0.052f, 9.29832e-009f, 0.1146f,
+        0.0864f, 1.54495e-008f, 0.115667f, 0.0851333f, 0.00910001f,
+        0.118333f, 0.0819667f, 0.01456f, 0.1218f, 0.07785f, 0.01638f,
+        0.125267f, 0.0737333f, 0.01456f, 0.127933f, 0.0705667f,
+        0.00909999f, 0.129f, 0.0693f, 1.23918e-008f, 0.118222f, 0.0966667f,
+        1.72853e-008f, 0.119407f, 0.0959654f, 0.00712594f, 0.12237f,
+        0.0942123f, 0.0114015f, 0.126222f, 0.0919333f, 0.0128267f,
+        0.130074f, 0.0896543f, 0.0114015f, 0.133037f, 0.0879012f,
+        0.00712592f, 0.134222f, 0.0872f, 1.55926e-008f, 0.122378f,
+        0.106733f, 1.90854e-008f, 0.123859f, 0.106479f, 0.00560742f,
+        0.127563f, 0.105843f, 0.00897186f, 0.132378f, 0.105017f,
+        0.0100933f, 0.137193f, 0.10419f, 0.00897185f, 0.140896f, 0.103554f,
+        0.00560741f, 0.142378f, 0.1033f, 1.84715e-008f, 0.1296f, 0.1152f,
+        2.05994e-008f, 0.131733f, 0.1152f, 0.00500001f, 0.137067f, 0.1152f,
+        0.00800001f, 0.144f, 0.1152f, 0.00900001f, 0.150933f, 0.1152f,
+        0.008f, 0.156267f, 0.1152f, 0.005f, 0.1584f, 0.1152f,
+        2.05994e-008f, 0.107622f, 0.0377f, 6.74128e-009f, 0.10697f,
+        0.0401568f, -0.0125926f, 0.0816f, 0.0317333f, -0.0132f, 0.105341f,
+        0.0462988f, -0.0201482f, 0.0816f, 0.0390667f, -0.02112f, 0.103222f,
+        0.0542833f, -0.0226667f, 0.0816f, 0.0486f, -0.02376f, 0.101104f,
+        0.0622679f, -0.0201481f, 0.0816f, 0.0581334f, -0.02112f,
+        0.0994741f, 0.0684099f, -0.0125926f, 0.0816f, 0.0654667f, -0.0132f,
+        0.0988222f, 0.0708667f, 1.2672e-008f, 0.121778f, 0.052f,
+        9.29832e-009f, 0.12083f, 0.0538765f, -0.0110741f, 0.118459f,
+        0.0585679f, -0.0177185f, 0.115378f, 0.0646667f, -0.0199333f,
+        0.112296f, 0.0707654f, -0.0177185f, 0.109926f, 0.0754568f,
+        -0.011074f, 0.127933f, 0.0705667f, -0.0091f, 0.125267f, 0.0737333f,
+        -0.01456f, 0.1218f, 0.07785f, -0.01638f, 0.118333f, 0.0819667f,
+        -0.01456f, 0.115667f, 0.0851333f, -0.00909997f, 0.134222f, 0.0872f,
+        1.55926e-008f, 0.133037f, 0.0879012f, -0.00712592f, 0.130074f,
+        0.0896543f, -0.0114015f, 0.126222f, 0.0919333f, -0.0128267f,
+        0.12237f, 0.0942123f, -0.0114015f, 0.119407f, 0.0959654f,
+        -0.0071259f, 0.118222f, 0.0966667f, 1.72853e-008f, 0.142378f,
+        0.1033f, 1.84715e-008f, 0.140896f, 0.103554f, -0.0056074f,
+        0.137193f, 0.10419f, -0.00897185f, 0.132378f, 0.105017f,
+        -0.0100933f, 0.127563f, 0.105843f, -0.00897184f, 0.123859f,
+        0.106479f, -0.00560739f, 0.122378f, 0.106733f, 1.90854e-008f,
+        0.156267f, 0.1152f, -0.00499999f, 0.150933f, 0.1152f, -0.00799999f,
+        0.144f, 0.1152f, -0.00899999f, 0.137067f, 0.1152f, -0.00799999f,
+        0.131733f, 0.1152f, -0.00499998f, 0.131956f, 0.1167f,
+        2.08676e-008f, 0.134228f, 0.116732f, 0.00485187f, 0.139908f,
+        0.116813f, 0.00776297f, 0.147292f, 0.116919f, 0.00873334f,
+        0.154676f, 0.117024f, 0.00776297f, 0.160356f, 0.117105f,
+        0.00485185f, 0.162628f, 0.117137f, 2.09458e-008f, 0.134044f,
+        0.1176f, 2.10285e-008f, 0.136309f, 0.117659f, 0.0044815f,
+        0.141972f, 0.117807f, 0.00717038f, 0.149333f, 0.118f, 0.00806668f,
+        0.156695f, 0.118193f, 0.00717038f, 0.162357f, 0.118341f,
+        0.00448149f, 0.164622f, 0.1184f, 2.11716e-008f, 0.1356f, 0.1179f,
+        2.10822e-008f, 0.137744f, 0.117975f, 0.00400002f, 0.143106f,
+        0.118162f, 0.00640002f, 0.150075f, 0.118406f, 0.00720001f,
+        0.157044f, 0.11865f, 0.00640001f, 0.162406f, 0.118838f,
+        0.00400001f, 0.16455f, 0.118912f, 2.12632e-008f, 0.136356f,
+        0.1176f, 2.10285e-008f, 0.138298f, 0.117674f, 0.00351854f,
+        0.143154f, 0.117859f, 0.00562965f, 0.149467f, 0.1181f, 0.00633335f,
+        0.155779f, 0.118341f, 0.00562964f, 0.160635f, 0.118526f,
+        0.00351853f, 0.162578f, 0.1186f, 2.12074e-008f, 0.136044f, 0.1167f,
+        2.08676e-008f, 0.137735f, 0.116751f, 0.00314817f, 0.141963f,
+        0.116878f, 0.00503706f, 0.147458f, 0.117044f, 0.00566668f,
+        0.152954f, 0.117209f, 0.00503705f, 0.157181f, 0.117337f,
+        0.00314816f, 0.158872f, 0.117387f, 2.09906e-008f, 0.1344f, 0.1152f,
+        2.05994e-008f, 0.135822f, 0.1152f, 0.00300002f, 0.139378f, 0.1152f,
+        0.00480002f, 0.144f, 0.1152f, 0.00540002f, 0.148622f, 0.1152f,
+        0.00480002f, 0.152178f, 0.1152f, 0.00300001f, 0.1536f, 0.1152f,
+        2.05994e-008f, 0.160356f, 0.117105f, -0.00485184f, 0.154676f,
+        0.117024f, -0.00776296f, 0.147292f, 0.116919f, -0.00873333f,
+        0.139908f, 0.116813f, -0.00776295f, 0.134228f, 0.116732f,
+        -0.00485183f, 0.162357f, 0.118341f, -0.00448147f, 0.156695f,
+        0.118193f, -0.00717036f, 0.149333f, 0.118f, -0.00806666f,
+        0.141972f, 0.117807f, -0.00717036f, 0.136309f, 0.117659f,
+        -0.00448146f, 0.162406f, 0.118837f, -0.00399998f, 0.157044f,
+        0.11865f, -0.00639999f, 0.150075f, 0.118406f, -0.00719999f,
+        0.143106f, 0.118162f, -0.00639998f, 0.137744f, 0.117975f,
+        -0.00399998f, 0.160635f, 0.118526f, -0.0035185f, 0.155779f,
+        0.118341f, -0.00562961f, 0.149467f, 0.1181f, -0.00633332f,
+        0.143154f, 0.117859f, -0.00562961f, 0.138298f, 0.117674f,
+        -0.00351849f, 0.157181f, 0.117337f, -0.00314813f, 0.152954f,
+        0.117209f, -0.00503702f, 0.147458f, 0.117044f, -0.00566665f,
+        0.141963f, 0.116878f, -0.00503701f, 0.137735f, 0.116751f,
+        -0.00314812f, 0.152178f, 0.1152f, -0.00299998f, 0.148622f, 0.1152f,
+        -0.00479998f, 0.144f, 0.1152f, -0.00539998f, 0.139378f, 0.1152f,
+        -0.00479998f, 0.135822f, 0.1152f, -0.00299997f, 0.0133778f,
+        0.1501f, 2.684e-008f, 0f, 0.1512f, 2.70367e-008f, 0.0129094f,
+        0.1501f, 0.00360378f, 0f, 0.1512f, 2.70367e-008f, 0.0115817f,
+        0.1501f, 0.00681272f, 0f, 0.1512f, 2.70367e-008f, 0.00951072f,
+        0.1501f, 0.00951074f, 0.00681272f, 0.1501f, 0.0115817f,
+        0.00360377f, 0.1501f, 0.0129094f, 0f, 0.1501f, 0.0133778f,
+        0.0174222f, 0.1472f, 2.63214e-008f, 0.0168122f, 0.1472f,
+        0.00469302f, 0.0150829f, 0.1472f, 0.00887204f, 0.0123858f, 0.1472f,
+        0.0123858f, 0.00887205f, 0.1472f, 0.0150829f, 0.00469303f, 0.1472f,
+        0.0168122f, 0f, 0.1472f, 0.0174222f, 0.0156f, 0.1431f,
+        2.55883e-008f, 0.0150536f, 0.1431f, 0.00420141f, 0.0135049f,
+        0.1431f, 0.00794312f, 0.0110895f, 0.1431f, 0.0110895f, 0.00794312f,
+        0.1431f, 0.0135049f, 0.00420141f, 0.1431f, 0.0150536f, 0f, 0.1431f,
+        0.0156f, 0.0113778f, 0.1384f, 2.47478e-008f, 0.0109789f, 0.1384f,
+        0.00306257f, 0.00984863f, 0.1384f, 0.00579109f, 0.00808622f,
+        0.1384f, 0.00808624f, 0.00579109f, 0.1384f, 0.00984864f,
+        0.00306257f, 0.1384f, 0.0109789f, 0f, 0.1384f, 0.0113778f,
+        0.00822222f, 0.1337f, 2.39074e-008f, 0.00793338f, 0.1337f,
+        0.00221015f, 0.00711523f, 0.1337f, 0.00418109f, 0.00584028f,
+        0.1337f, 0.0058403f, 0.00418108f, 0.1337f, 0.00711524f,
+        0.00221014f, 0.1337f, 0.0079334f, 0f, 0.1337f, 0.00822224f,
+        0.0096f, 0.1296f, 2.31743e-008f, 0.00926222f, 0.1296f, 0.0025778f,
+        0.00830578f, 0.1296f, 0.00487824f, 0.006816f, 0.1296f, 0.00681602f,
+        0.00487823f, 0.1296f, 0.00830579f, 0.00257779f, 0.1296f,
+        0.00926224f, 0f, 0.1296f, 0.00960002f, 0f, 0.1501f, 0.0133778f,
+        -0.00360375f, 0.1501f, 0.0129094f, -0.0068127f, 0.1501f,
+        0.0115817f, -0.00951072f, 0.1501f, 0.00951074f, -0.0115817f,
+        0.1501f, 0.00681274f, -0.0129094f, 0.1501f, 0.00360379f,
+        -0.0133778f, 0.1501f, 2.684e-008f, 0f, 0.1472f, 0.0174222f,
+        -0.004693f, 0.1472f, 0.0168122f, -0.00887203f, 0.1472f, 0.0150829f,
+        -0.0123858f, 0.1472f, 0.0123858f, -0.0150829f, 0.1472f,
+        0.00887207f, -0.0168122f, 0.1472f, 0.00469305f, -0.0174222f,
+        0.1472f, 2.63214e-008f, -0.00420139f, 0.1431f, 0.0150536f,
+        -0.0079431f, 0.1431f, 0.0135049f, -0.0110895f, 0.1431f, 0.0110895f,
+        -0.0135049f, 0.1431f, 0.00794314f, -0.0150536f, 0.1431f,
+        0.00420143f, -0.0156f, 0.1431f, 2.55883e-008f, 0f, 0.1384f,
+        0.0113778f, -0.00306255f, 0.1384f, 0.010979f, -0.00579108f,
+        0.1384f, 0.00984865f, -0.00808623f, 0.1384f, 0.00808624f,
+        -0.00984862f, 0.1384f, 0.00579111f, -0.0109789f, 0.1384f,
+        0.00306259f, -0.0113778f, 0.1384f, 2.47478e-008f, 0f, 0.1337f,
+        0.00822224f, -0.00221013f, 0.1337f, 0.00793341f, -0.00418107f,
+        0.1337f, 0.00711525f, -0.00584028f, 0.1337f, 0.0058403f,
+        -0.00711522f, 0.1337f, 0.0041811f, -0.00793338f, 0.1337f,
+        0.00221017f, -0.00822222f, 0.1337f, 2.39074e-008f, -0.00257778f,
+        0.1296f, 0.00926224f, -0.00487822f, 0.1296f, 0.0083058f,
+        -0.006816f, 0.1296f, 0.00681602f, -0.00830577f, 0.1296f,
+        0.00487825f, -0.00926222f, 0.1296f, 0.00257781f, -0.0096f, 0.1296f,
+        2.31743e-008f, -0.0133778f, 0.1501f, 2.684e-008f, -0.0129094f,
+        0.1501f, -0.00360373f, -0.0115817f, 0.1501f, -0.00681268f,
+        -0.00951073f, 0.1501f, -0.00951071f, -0.00681272f, 0.1501f,
+        -0.0115816f, -0.00360377f, 0.1501f, -0.0129094f, 0f, 0.1501f,
+        -0.0133778f, -0.0174222f, 0.1472f, 2.63214e-008f, -0.0168122f,
+        0.1472f, -0.00469298f, -0.0150829f, 0.1472f, -0.00887201f,
+        -0.0123858f, 0.1472f, -0.0123858f, -0.00887205f, 0.1472f,
+        -0.0150829f, -0.00469303f, 0.1472f, -0.0168122f, 0f, 0.1472f,
+        -0.0174222f, -0.0150536f, 0.1431f, -0.00420136f, -0.0135049f,
+        0.1431f, -0.00794309f, -0.0110895f, 0.1431f, -0.0110895f,
+        -0.00794312f, 0.1431f, -0.0135049f, -0.00420141f, 0.1431f,
+        -0.0150536f, 0f, 0.1431f, -0.0156f, -0.0113778f, 0.1384f,
+        2.47478e-008f, -0.0109789f, 0.1384f, -0.00306252f, -0.00984862f,
+        0.1384f, -0.00579105f, -0.00808622f, 0.1384f, -0.0080862f,
+        -0.00579108f, 0.1384f, -0.0098486f, -0.00306256f, 0.1384f,
+        -0.0109789f, 0f, 0.1384f, -0.0113778f, -0.00822222f, 0.1337f,
+        2.39074e-008f, -0.00793338f, 0.1337f, -0.00221011f, -0.00711523f,
+        0.1337f, -0.00418104f, -0.00584028f, 0.1337f, -0.00584025f,
+        -0.00418108f, 0.1337f, -0.0071152f, -0.00221014f, 0.1337f,
+        -0.00793336f, 0f, 0.1337f, -0.0082222f, -0.00926222f, 0.1296f,
+        -0.00257775f, -0.00830578f, 0.1296f, -0.0048782f, -0.006816f,
+        0.1296f, -0.00681598f, -0.00487823f, 0.1296f, -0.00830575f,
+        -0.00257779f, 0.1296f, -0.0092622f, 0f, 0.1296f, -0.00959998f,
+        0.00360375f, 0.1501f, -0.0129094f, 0.0068127f, 0.1501f,
+        -0.0115817f, 0.00951073f, 0.1501f, -0.00951071f, 0.0115817f,
+        0.1501f, -0.0068127f, 0.0129094f, 0.1501f, -0.00360375f,
+        0.0133778f, 0.1501f, 2.684e-008f, 0.004693f, 0.1472f, -0.0168122f,
+        0.00887203f, 0.1472f, -0.0150829f, 0.0123858f, 0.1472f,
+        -0.0123858f, 0.0150829f, 0.1472f, -0.00887203f, 0.0168122f,
+        0.1472f, -0.004693f, 0.0174222f, 0.1472f, 2.63214e-008f,
+        0.00420139f, 0.1431f, -0.0150536f, 0.0079431f, 0.1431f,
+        -0.0135049f, 0.0110895f, 0.1431f, -0.0110895f, 0.0135049f, 0.1431f,
+        -0.00794311f, 0.0150536f, 0.1431f, -0.00420139f, 0.00306255f,
+        0.1384f, -0.0109789f, 0.00579107f, 0.1384f, -0.0098486f,
+        0.00808622f, 0.1384f, -0.0080862f, 0.00984861f, 0.1384f,
+        -0.00579106f, 0.0109789f, 0.1384f, -0.00306254f, 0.0113778f,
+        0.1384f, 2.47478e-008f, 0.00221013f, 0.1337f, -0.00793336f,
+        0.00418106f, 0.1337f, -0.00711521f, 0.00584028f, 0.1337f,
+        -0.00584025f, 0.00711522f, 0.1337f, -0.00418105f, 0.00793338f,
+        0.1337f, -0.00221012f, 0.00822222f, 0.1337f, 2.39074e-008f,
+        0.00257778f, 0.1296f, -0.0092622f, 0.00487822f, 0.1296f,
+        -0.00830576f, 0.006816f, 0.1296f, -0.00681598f, 0.00830577f,
+        0.1296f, -0.00487821f, 0.00926222f, 0.1296f, -0.00257777f,
+        0.0168444f, 0.126533f, 2.26259e-008f, 0.0162518f, 0.126533f,
+        0.00452306f, 0.0145736f, 0.126533f, 0.00855948f, 0.0119595f,
+        0.126533f, 0.0119596f, 0.00855948f, 0.126533f, 0.0145736f,
+        0.00452306f, 0.126533f, 0.0162518f, 0f, 0.126533f, 0.0168444f,
+        0.0275555f, 0.124267f, 2.22206e-008f, 0.026586f, 0.124267f,
+        0.00739918f, 0.0238406f, 0.124267f, 0.0140023f, 0.0195644f,
+        0.124267f, 0.0195644f, 0.0140023f, 0.124267f, 0.0238406f,
+        0.0073992f, 0.124267f, 0.026586f, 0f, 0.124267f, 0.0275555f,
+        0.0396f, 0.1224f, 2.18868e-008f, 0.0382067f, 0.1224f, 0.0106333f,
+        0.0342613f, 0.1224f, 0.0201227f, 0.028116f, 0.1224f, 0.028116f,
+        0.0201227f, 0.1224f, 0.0342613f, 0.0106334f, 0.1224f, 0.0382067f,
+        0f, 0.1224f, 0.0396f, 0.0508444f, 0.120533f, 2.1553e-008f,
+        0.0490554f, 0.120533f, 0.0136527f, 0.0439898f, 0.120533f,
+        0.0258365f, 0.0360995f, 0.120533f, 0.0360995f, 0.0258365f,
+        0.120533f, 0.0439898f, 0.0136527f, 0.120533f, 0.0490554f, 0f,
+        0.120533f, 0.0508444f, 0.0591555f, 0.118267f, 2.11477e-008f,
+        0.0570741f, 0.118267f, 0.0158844f, 0.0511805f, 0.118267f,
+        0.0300598f, 0.0420004f, 0.118267f, 0.0420004f, 0.0300598f,
+        0.118267f, 0.0511805f, 0.0158844f, 0.118267f, 0.0570741f, 0f,
+        0.118267f, 0.0591555f, 0.0624f, 0.1152f, 2.05994e-008f, 0.0602044f,
+        0.1152f, 0.0167556f, 0.0539876f, 0.1152f, 0.0317084f, 0.044304f,
+        0.1152f, 0.044304f, 0.0317085f, 0.1152f, 0.0539875f, 0.0167556f,
+        0.1152f, 0.0602044f, 0f, 0.1152f, 0.0624f, -0.00452304f, 0.126533f,
+        0.0162518f, -0.00855946f, 0.126533f, 0.0145736f, -0.0119595f,
+        0.126533f, 0.0119596f, -0.0145735f, 0.126533f, 0.0085595f,
+        -0.0162518f, 0.126533f, 0.00452308f, -0.0168444f, 0.126533f,
+        2.26259e-008f, -0.00739916f, 0.124267f, 0.026586f, -0.0140023f,
+        0.124267f, 0.0238407f, -0.0195644f, 0.124267f, 0.0195644f,
+        -0.0238406f, 0.124267f, 0.0140023f, -0.026586f, 0.124267f,
+        0.00739922f, -0.0275555f, 0.124267f, 2.22206e-008f, -0.0106333f,
+        0.1224f, 0.0382067f, -0.0201227f, 0.1224f, 0.0342613f, -0.028116f,
+        0.1224f, 0.028116f, -0.0342613f, 0.1224f, 0.0201227f, -0.0382067f,
+        0.1224f, 0.0106334f, -0.0396f, 0.1224f, 2.18868e-008f, -0.0136527f,
+        0.120533f, 0.0490554f, -0.0258365f, 0.120533f, 0.0439898f,
+        -0.0360995f, 0.120533f, 0.0360995f, -0.0439898f, 0.120533f,
+        0.0258365f, -0.0490554f, 0.120533f, 0.0136527f, -0.0508444f,
+        0.120533f, 2.1553e-008f, -0.0158843f, 0.118267f, 0.0570741f,
+        -0.0300597f, 0.118267f, 0.0511805f, -0.0420004f, 0.118267f,
+        0.0420004f, -0.0511805f, 0.118267f, 0.0300598f, -0.0570741f,
+        0.118267f, 0.0158844f, -0.0591555f, 0.118267f, 2.11477e-008f,
+        -0.0167555f, 0.1152f, 0.0602044f, -0.0317084f, 0.1152f, 0.0539876f,
+        -0.044304f, 0.1152f, 0.044304f, -0.0539875f, 0.1152f, 0.0317085f,
+        -0.0602044f, 0.1152f, 0.0167556f, -0.0624f, 0.1152f, 2.05994e-008f,
+        -0.0162518f, 0.126533f, -0.00452302f, -0.0145736f, 0.126533f,
+        -0.00855945f, -0.0119595f, 0.126533f, -0.0119595f, -0.00855948f,
+        0.126533f, -0.0145735f, -0.00452306f, 0.126533f, -0.0162517f, 0f,
+        0.126533f, -0.0168444f, -0.026586f, 0.124267f, -0.00739915f,
+        -0.0238406f, 0.124267f, -0.0140023f, -0.0195644f, 0.124267f,
+        -0.0195644f, -0.0140023f, 0.124267f, -0.0238406f, -0.0073992f,
+        0.124267f, -0.026586f, 0f, 0.124267f, -0.0275555f, -0.0382067f,
+        0.1224f, -0.0106333f, -0.0342613f, 0.1224f, -0.0201226f,
+        -0.028116f, 0.1224f, -0.028116f, -0.0201227f, 0.1224f, -0.0342613f,
+        -0.0106334f, 0.1224f, -0.0382066f, 0f, 0.1224f, -0.0396f,
+        -0.0490554f, 0.120533f, -0.0136526f, -0.0439898f, 0.120533f,
+        -0.0258365f, -0.0360995f, 0.120533f, -0.0360995f, -0.0258365f,
+        0.120533f, -0.0439898f, -0.0136527f, 0.120533f, -0.0490554f, 0f,
+        0.120533f, -0.0508444f, -0.0570741f, 0.118267f, -0.0158843f,
+        -0.0511805f, 0.118267f, -0.0300597f, -0.0420004f, 0.118267f,
+        -0.0420004f, -0.0300598f, 0.118267f, -0.0511805f, -0.0158844f,
+        0.118267f, -0.0570741f, 0f, 0.118267f, -0.0591555f, -0.0602044f,
+        0.1152f, -0.0167555f, -0.0539876f, 0.1152f, -0.0317084f,
+        -0.044304f, 0.1152f, -0.044304f, -0.0317085f, 0.1152f, -0.0539875f,
+        -0.0167556f, 0.1152f, -0.0602044f, 0f, 0.1152f, -0.0624f,
+        0.00452304f, 0.126533f, -0.0162517f, 0.00855946f, 0.126533f,
+        -0.0145735f, 0.0119595f, 0.126533f, -0.0119595f, 0.0145735f,
+        0.126533f, -0.00855947f, 0.0162518f, 0.126533f, -0.00452304f,
+        0.00739916f, 0.124267f, -0.026586f, 0.0140023f, 0.124267f,
+        -0.0238406f, 0.0195644f, 0.124267f, -0.0195644f, 0.0238406f,
+        0.124267f, -0.0140023f, 0.026586f, 0.124267f, -0.00739919f,
+        0.0106333f, 0.1224f, -0.0382067f, 0.0201227f, 0.1224f, -0.0342613f,
+        0.028116f, 0.1224f, -0.028116f, 0.0342613f, 0.1224f, -0.0201227f,
+        0.0382067f, 0.1224f, -0.0106334f, 0.0136527f, 0.120533f,
+        -0.0490554f, 0.0258365f, 0.120533f, -0.0439898f, 0.0360995f,
+        0.120533f, -0.0360995f, 0.0439898f, 0.120533f, -0.0258365f,
+        0.0490554f, 0.120533f, -0.0136527f, 0.0158843f, 0.118267f,
+        -0.0570741f, 0.0300597f, 0.118267f, -0.0511805f, 0.0420004f,
+        0.118267f, -0.0420004f, 0.0511805f, 0.118267f, -0.0300598f,
+        0.0570741f, 0.118267f, -0.0158844f, 0.0167555f, 0.1152f,
+        -0.0602044f, 0.0317084f, 0.1152f, -0.0539876f, 0.044304f, 0.1152f,
+        -0.044304f, 0.0539875f, 0.1152f, -0.0317085f, 0.0602044f, 0.1152f,
+        -0.0167556f, 0.0290833f, 0.000283333f, 5.06639e-011f, 0f, 0f, 0f,
+        0.02806f, 0.000283335f, -0.00780941f, 0.0251625f, 0.000283336f,
+        -0.0147786f, 0.0206492f, 0.000283337f, -0.0206492f, 0.0147787f,
+        0.000283338f, -0.0251625f, 0.00780945f, 0.000283338f, -0.02806f,
+        0f, 0.000283338f, -0.0290833f, 0.0490667f, 0.00106667f,
+        1.90735e-010f, 0.0473403f, 0.00106667f, -0.0131753f, 0.0424518f,
+        0.00106667f, -0.0249331f, 0.0348373f, 0.00106667f, -0.0348373f,
+        0.0249332f, 0.00106667f, -0.0424517f, 0.0131754f, 0.00106667f,
+        -0.0473402f, 0f, 0.00106667f, -0.0490667f, 0.06165f, 0.00225f,
+        4.02331e-010f, 0.0594808f, 0.00225f, -0.0165542f, 0.0533387f,
+        0.00225001f, -0.0313273f, 0.0437715f, 0.00225001f, -0.0437715f,
+        0.0313274f, 0.00225001f, -0.0533386f, 0.0165542f, 0.00225001f,
+        -0.0594808f, 0f, 0.00225001f, -0.06165f, 0.0685333f, 0.00373333f,
+        6.67572e-010f, 0.066122f, 0.00373334f, -0.0184025f, 0.059294f,
+        0.00373334f, -0.0348251f, 0.0486587f, 0.00373334f, -0.0486587f,
+        0.0348251f, 0.00373334f, -0.059294f, 0.0184026f, 0.00373334f,
+        -0.066122f, 0f, 0.00373334f, -0.0685333f, 0.0714167f, 0.00541667f,
+        9.68575e-010f, 0.0689039f, 0.00541667f, -0.0191767f, 0.0617887f,
+        0.00541667f, -0.0362902f, 0.0507058f, 0.00541668f, -0.0507058f,
+        0.0362903f, 0.00541668f, -0.0617886f, 0.0191768f, 0.00541668f,
+        -0.0689038f, 0f, 0.00541668f, -0.0714167f, 0.0694667f, 0.0072f,
+        -0.0193333f, 0.0622933f, 0.00720001f, -0.0365866f, 0.0365867f,
+        0.00720001f, -0.0622933f, 0.0193334f, 0.00720001f, -0.0694666f, 0f,
+        0.000283338f, -0.0290833f, -0.0078094f, 0.000283338f, -0.02806f,
+        -0.0147786f, 0.000283338f, -0.0251625f, -0.0206492f, 0.000283337f,
+        -0.0206492f, -0.0251624f, 0.000283336f, -0.0147787f, -0.02806f,
+        0.000283335f, -0.00780945f, -0.0290833f, 0.000283333f,
+        5.06639e-011f, 0f, 0.00106667f, -0.0490667f, -0.0131753f,
+        0.00106667f, -0.0473402f, -0.0249331f, 0.00106667f, -0.0424518f,
+        -0.0348373f, 0.00106667f, -0.0348373f, -0.0424517f, 0.00106667f,
+        -0.0249332f, -0.0473402f, 0.00106667f, -0.0131754f, -0.0490667f,
+        0.00106667f, 1.90735e-010f, -0.0165542f, 0.00225001f, -0.0594808f,
+        -0.0313273f, 0.00225001f, -0.0533387f, -0.0437715f, 0.00225001f,
+        -0.0437715f, -0.0533386f, 0.00225001f, -0.0313274f, -0.0594808f,
+        0.00225f, -0.0165542f, -0.06165f, 0.00225f, 4.02331e-010f, 0f,
+        0.00373334f, -0.0685333f, -0.0184024f, 0.00373334f, -0.066122f,
+        -0.0348251f, 0.00373334f, -0.059294f, -0.0486587f, 0.00373334f,
+        -0.0486587f, -0.059294f, 0.00373334f, -0.0348251f, -0.0661219f,
+        0.00373334f, -0.0184026f, -0.0685333f, 0.00373333f, 6.67572e-010f,
+        0f, 0.00541667f, -0.0714167f, -0.0191767f, 0.00541668f,
+        -0.0689039f, -0.0362902f, 0.00541667f, -0.0617887f, -0.0507058f,
+        0.00541667f, -0.0507058f, -0.0617886f, 0.00541667f, -0.0362903f,
+        -0.0689038f, 0.00541667f, -0.0191768f, -0.0714167f, 0.00541666f,
+        9.68575e-010f, -0.0193333f, 0.00720001f, -0.0694667f, -0.0365866f,
+        0.00720001f, -0.0622933f, -0.0622933f, 0.00720001f, -0.0365867f,
+        -0.0694666f, 0.0072f, -0.0193334f, -0.0290833f, 0.000283334f,
+        5.0664e-011f, -0.02806f, 0.000283332f, 0.00780941f, -0.0251625f,
+        0.000283331f, 0.0147786f, -0.0206492f, 0.00028333f, 0.0206492f,
+        -0.0147787f, 0.000283329f, 0.0251625f, -0.00780945f, 0.000283329f,
+        0.02806f, 0f, 0.000283329f, 0.0290833f, -0.0490667f, 0.00106667f,
+        1.90735e-010f, -0.0473403f, 0.00106667f, 0.0131753f, -0.0424518f,
+        0.00106666f, 0.0249331f, -0.0348374f, 0.00106666f, 0.0348374f,
+        -0.0249332f, 0.00106666f, 0.0424517f, -0.0131754f, 0.00106666f,
+        0.0473402f, 0f, 0.00106666f, 0.0490667f, -0.0594808f, 0.00225f,
+        0.0165542f, -0.0533387f, 0.00224999f, 0.0313273f, -0.0437715f,
+        0.00224999f, 0.0437715f, -0.0313274f, 0.00224999f, 0.0533386f,
+        -0.0165542f, 0.00224999f, 0.0594808f, 0f, 0.00224999f, 0.06165f,
+        -0.0685333f, 0.00373334f, 6.67572e-010f, -0.066122f, 0.00373333f,
+        0.0184025f, -0.059294f, 0.00373333f, 0.0348251f, -0.0486587f,
+        0.00373333f, 0.0486587f, -0.0348251f, 0.00373333f, 0.059294f,
+        -0.0184026f, 0.00373333f, 0.066122f, 0f, 0.00373333f, 0.0685333f,
+        -0.0714167f, 0.00541667f, 9.68576e-010f, -0.0689039f, 0.00541667f,
+        0.0191767f, -0.0617887f, 0.00541666f, 0.0362902f, -0.0507058f,
+        0.00541666f, 0.0507058f, -0.0362903f, 0.00541666f, 0.0617886f,
+        -0.0191768f, 0.00541666f, 0.0689038f, 0f, 0.00541666f, 0.0714167f,
+        -0.0694667f, 0.0072f, 0.0193333f, -0.0622933f, 0.00719999f,
+        0.0365866f, -0.05112f, 0.00719999f, 0.05112f, -0.0365867f,
+        0.00719999f, 0.0622933f, -0.0193334f, 0.00719999f, 0.0694666f,
+        0.00780941f, 0.000283329f, 0.02806f, 0.0147786f, 0.000283329f,
+        0.0251625f, 0.0206492f, 0.00028333f, 0.0206492f, 0.0251625f,
+        0.000283331f, 0.0147787f, 0.02806f, 0.000283332f, 0.00780945f,
+        0.0290833f, 0.000283334f, 5.0664e-011f, 0.0131753f, 0.00106666f,
+        0.0473403f, 0.0249331f, 0.00106666f, 0.0424518f, 0.0348374f,
+        0.00106666f, 0.0348374f, 0.0424517f, 0.00106666f, 0.0249332f,
+        0.0473402f, 0.00106666f, 0.0131754f, 0.0490667f, 0.00106667f,
+        1.90735e-010f, 0.0165542f, 0.00224999f, 0.0594808f, 0.0313273f,
+        0.00224999f, 0.0533387f, 0.0437715f, 0.00224999f, 0.0437715f,
+        0.0533386f, 0.00224999f, 0.0313274f, 0.0594808f, 0.00225f,
+        0.0165542f, 0.0184025f, 0.00373333f, 0.066122f, 0.0348251f,
+        0.00373333f, 0.059294f, 0.0486587f, 0.00373333f, 0.0486587f,
+        0.059294f, 0.00373333f, 0.0348251f, 0.066122f, 0.00373333f,
+        0.0184026f, 0.0685333f, 0.00373334f, 6.67572e-010f, 0.0191767f,
+        0.00541666f, 0.0689039f, 0.0362902f, 0.00541666f, 0.0617887f,
+        0.0507058f, 0.00541666f, 0.0507058f, 0.0617886f, 0.00541666f,
+        0.0362903f, 0.0689038f, 0.00541667f, 0.0191768f, 0.0714167f,
+        0.00541667f, 9.68576e-010f, 0.0193333f, 0.00719999f, 0.0694667f,
+        0.0365866f, 0.00719999f, 0.0622933f, 0.05112f, 0.00719999f,
+        0.05112f, 0.0622933f, 0.00719999f, 0.0365867f, 0.0694666f, 0.0072f,
+        0.0193334f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f,
+        0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f,
+        0f, 0f, 0f, 0f, 0f, -0.06165f, 0.00225f, 4.02331e-010f, 0f, 0f, 0f,
+        0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f,
+        0f, 0.06165f, 0.00225f, 4.02331e-010f, 0f, 0f, 0f, 0f, 0f, 0f, 0f,
+        0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0.006816f, 0.1296f,
+        0.00681602f, 0.00487823f, 0.1296f, 0.00830579f, 0.00257779f,
+        0.1296f, 0.00926224f, 0f, 0.1296f, 0.00960002f, 0f, 0.1512f,
+        2.70367e-008f, 0f, 0.1512f, 2.70367e-008f, 0f, 0.1512f,
+        2.70367e-008f, 0f, 0.1512f, 2.70367e-008f, 0f, 0.1512f,
+        2.70367e-008f, 0f, 0.1512f, 2.70367e-008f, 0f, 0.1512f,
+        2.70367e-008f, 0f, 0.1512f, 2.70367e-008f, 0f, 0.1512f,
+        2.70367e-008f, 0f, 0.1512f, 2.70367e-008f, 0f, 0.1512f,
+        2.70367e-008f, 0f, 0.1512f, 2.70367e-008f, 0f, 0.1512f,
+        2.70367e-008f, 0f, 0.1512f, 2.70367e-008f, 0f, 0.1512f,
+        2.70367e-008f, 0f, 0.1512f, 2.70367e-008f, 0f, 0.1512f,
+        2.70367e-008f, 0.00830577f, 0.1296f, -0.00487821f, 0.00487822f,
+        0.1296f, -0.00830576f, 0.00257778f, 0.1296f, -0.0092622f, 0f,
+        0.1296f, -0.00959998f, -0.00257779f, 0.1296f, -0.0092622f,
+        -0.00487823f, 0.1296f, -0.00830575f, -0.00830578f, 0.1296f,
+        -0.0048782f, -0.00257778f, 0.1296f, 0.00926224f, -0.00487822f,
+        0.1296f, 0.0083058f, -0.006816f, 0.1296f, 0.00681602f, 0f, 0.1512f,
+        2.70367e-008f, 0f, 0.1512f, 2.70367e-008f, 0f, 0.1512f,
+        2.70367e-008f, 0f, 0.1512f, 2.70367e-008f, 0f, 0.1512f,
+        2.70367e-008f, 0f, 0.1512f, 2.70367e-008f, 0f, 0.1512f,
+        2.70367e-008f, 0.156267f, 0.1152f, -0.00499999f, 0.131733f,
+        0.1152f, -0.00499998f, 0.1296f, 0.1152f, 2.05994e-008f, 0.137067f,
+        0.1152f, 0.00800001f, -0.094f, 0.1079f, 1.9294e-008f, -0.096f,
+        0.0432f, 7.72476e-009f, -0.0897778f, 0.0250667f, 4.48227e-009f,
+        0.0897778f, 0.0250667f, 4.48227e-009f, -0.084f, 0.01845f,
+        3.29912e-009f, 0.084f, 0.01845f, 3.29912e-009f, -0.0782222f,
+        0.0133334f, 2.38419e-009f, 0.0782222f, 0.0133334f, 2.38419e-009f,
+        -0.0737778f, 0.00961668f, 1.7196e-009f, 0.0737778f, 0.00961668f,
+        1.7196e-009f, 0.0926222f, 0.0432f, 0.0257778f, 0.072f, 0.1152f,
+        2.05994e-008f, 0.05112f, 0.1152f, -0.05112f, 0f, 0.1152f, -0.072f,
+        -0.05112f, 0.1152f, -0.05112f, -0.072f, 0.1152f, 2.05994e-008f, 0f,
+        0.1152f, 0.072f, -0.05112f, 0.1152f, 0.05112f, -0.0687556f,
+        0.1194f, 2.13504e-008f, 0.05112f, 0.1152f, 0.05112f, 0f, 0.117825f,
+        0.0663056f, -0.0396f, 0.1224f, 2.18868e-008f, 0.0396f, 0.1224f,
+        2.18868e-008f };
+    static float teapot_normals[] = { -0.987635f, -0.156768f, 0f, -0.902861f,
+        -0.429933f, 0f, -0.953562f, -0.156989f, -0.257047f, -0.871509f,
+        -0.430441f, -0.234929f, -0.854265f, -0.157281f, -0.495474f,
+        -0.780517f, -0.431109f, -0.4527f, -0.698293f, -0.157393f,
+        -0.698294f, -0.637936f, -0.431366f, -0.637936f, -0.495474f,
+        -0.157281f, -0.854265f, -0.4527f, -0.431109f, -0.780517f,
+        -0.257047f, -0.156989f, -0.953562f, -0.234929f, -0.430441f,
+        -0.871509f, 0f, -0.156767f, -0.987636f, 0f, -0.429933f, -0.902861f,
+        -0.880022f, 0.474932f, 0f, -0.849414f, 0.475466f, -0.228973f,
+        -0.76067f, 0.476166f, -0.441189f, -0.621695f, 0.476435f,
+        -0.621695f, -0.441189f, 0.476166f, -0.76067f, -0.228972f,
+        0.475466f, -0.849414f, 0f, 0.474932f, -0.880022f, 0f, 1f, 0f,
+        -3.12489e-007f, 1f, -4.53013e-008f, -4.74898e-007f, 1f,
+        -2.15741e-007f, 0f, 1f, 0f, -1.19502e-007f, 1f, -2.57504e-007f,
+        -5.01339e-008f, 1f, -1.37835e-007f, 0f, 1f, 0f, 0.556738f,
+        0.830688f, 0f, 0.537013f, 0.831061f, 0.14476f, 0.480481f, 0.83155f,
+        0.278679f, 0.392564f, 0.831738f, 0.392564f, 0.278679f, 0.83155f,
+        0.480481f, 0.14476f, 0.831061f, 0.537012f, 0f, 0.830688f,
+        0.556738f, 0.783289f, 0.621658f, 0f, 0.755869f, 0.622211f,
+        0.203756f, 0.67669f, 0.622937f, 0.39248f, 0.552994f, 0.623214f,
+        0.552994f, 0.39248f, 0.622936f, 0.676691f, 0.203756f, 0.62221f,
+        0.755869f, 0f, 0.621658f, 0.783289f, 0.90286f, 0.429934f, 0f,
+        0.871509f, 0.430442f, 0.234929f, 0.780517f, 0.431109f, 0.4527f,
+        0.637935f, 0.431366f, 0.637936f, 0.4527f, 0.431109f, 0.780517f,
+        0.234929f, 0.430441f, 0.87151f, 0f, 0.429934f, 0.90286f, 0.257047f,
+        -0.156989f, -0.953562f, 0.234929f, -0.430441f, -0.871509f,
+        0.495474f, -0.157281f, -0.854265f, 0.4527f, -0.431109f, -0.780517f,
+        0.698293f, -0.157393f, -0.698294f, 0.637936f, -0.431366f,
+        -0.637936f, 0.854265f, -0.157281f, -0.495474f, 0.780517f,
+        -0.431109f, -0.4527f, 0.953562f, -0.156989f, -0.257047f, 0.871509f,
+        -0.430441f, -0.234929f, 0.987636f, -0.156767f, 0f, 0.902861f,
+        -0.429933f, 0f, 0.228973f, 0.475465f, -0.849414f, 0.441188f,
+        0.476167f, -0.760669f, 0.621695f, 0.476434f, -0.621696f, 0.76067f,
+        0.476167f, -0.441188f, 0.849414f, 0.475466f, -0.228972f, 0.880022f,
+        0.474932f, 0f, 4.53013e-008f, 1f, -3.12489e-007f, 2.15741e-007f,
+        1f, -4.74898e-007f, 0f, 1f, 0f, 2.57504e-007f, 1f, -1.19502e-007f,
+        1.37835e-007f, 1f, -5.01339e-008f, 0f, 1f, 0f, 0f, 0.830689f,
+        0.556737f, -0.14476f, 0.831061f, 0.537012f, -0.278679f, 0.83155f,
+        0.480481f, -0.392563f, 0.831738f, 0.392563f, -0.480482f, 0.83155f,
+        0.27868f, -0.537012f, 0.831061f, 0.14476f, -0.556738f, 0.830688f,
+        0f, 0f, 0.621658f, 0.783289f, -0.203756f, 0.62221f, 0.755869f,
+        -0.39248f, 0.622937f, 0.67669f, -0.552993f, 0.623215f, 0.552993f,
+        -0.67669f, 0.622937f, 0.39248f, -0.755869f, 0.62221f, 0.203756f,
+        -0.783289f, 0.621658f, 0f, -0.234929f, 0.430442f, 0.871509f,
+        -0.4527f, 0.431109f, 0.780517f, -0.637935f, 0.431366f, 0.637936f,
+        -0.780517f, 0.431109f, 0.4527f, -0.87151f, 0.430441f, 0.234929f,
+        -0.90286f, 0.429934f, 0f, 0.987636f, -0.156767f, 0f, 0.953562f,
+        -0.156989f, 0.257047f, 0.871509f, -0.430441f, 0.234929f, 0.854265f,
+        -0.15728f, 0.495474f, 0.780517f, -0.431109f, 0.4527f, 0.698294f,
+        -0.157393f, 0.698293f, 0.637936f, -0.431366f, 0.637936f, 0.495474f,
+        -0.157281f, 0.854265f, 0.4527f, -0.431109f, 0.780517f, 0.257047f,
+        -0.156989f, 0.953562f, 0.234929f, -0.430441f, 0.871509f, 0f,
+        -0.156767f, 0.987636f, 0f, -0.429933f, 0.902861f, 0.880022f,
+        0.474934f, 0f, 0.849413f, 0.475467f, 0.228972f, 0.760669f,
+        0.476167f, 0.441188f, 0.621695f, 0.476436f, 0.621695f, 0.441188f,
+        0.476167f, 0.760669f, 0.228972f, 0.475466f, 0.849414f, 0f,
+        0.474934f, 0.880022f, 3.12489e-007f, 1f, 4.53013e-008f,
+        4.74898e-007f, 1f, 2.15741e-007f, 0f, 1f, 0f, 1.19502e-007f, 1f,
+        2.57504e-007f, 5.01339e-008f, 1f, 1.37835e-007f, 0f, 1f, 0f,
+        -0.537013f, 0.831061f, -0.14476f, -0.480482f, 0.83155f, -0.27868f,
+        -0.392566f, 0.831735f, -0.392566f, -0.27868f, 0.83155f, -0.480482f,
+        -0.14476f, 0.831061f, -0.537012f, 0f, 0.830688f, -0.556738f,
+        -0.783289f, 0.621657f, 0f, -0.755869f, 0.62221f, -0.203756f,
+        -0.676691f, 0.622936f, -0.39248f, -0.552994f, 0.623215f,
+        -0.552993f, -0.392481f, 0.622936f, -0.676691f, -0.203756f,
+        0.622209f, -0.75587f, 0f, 0.621657f, -0.783289f, -0.871509f,
+        0.430442f, -0.234929f, -0.780517f, 0.431109f, -0.4527f, -0.637936f,
+        0.431366f, -0.637935f, -0.4527f, 0.431109f, -0.780517f, -0.234929f,
+        0.430441f, -0.87151f, 0f, 0.429934f, -0.90286f, -0.257047f,
+        -0.156989f, 0.953562f, -0.234929f, -0.430441f, 0.871509f,
+        -0.495474f, -0.15728f, 0.854265f, -0.4527f, -0.431109f, 0.780517f,
+        -0.698294f, -0.157393f, 0.698293f, -0.637936f, -0.431366f,
+        0.637936f, -0.854265f, -0.157281f, 0.495474f, -0.780517f,
+        -0.431109f, 0.4527f, -0.953562f, -0.156989f, 0.257047f, -0.871509f,
+        -0.430442f, 0.234928f, -0.987636f, -0.156767f, 0f, -0.228972f,
+        0.475467f, 0.849413f, -0.441188f, 0.476167f, 0.760669f, -0.621695f,
+        0.476436f, 0.621695f, -0.76067f, 0.476167f, 0.441188f, -0.849414f,
+        0.475466f, 0.228972f, -0.880022f, 0.474934f, 0f, -4.53013e-008f,
+        1f, 3.12489e-007f, -2.15741e-007f, 1f, 4.74898e-007f, 0f, 1f, 0f,
+        -2.57504e-007f, 1f, 1.19502e-007f, -1.37835e-007f, 1f,
+        5.01339e-008f, 0.14476f, 0.831061f, -0.537013f, 0.27868f, 0.83155f,
+        -0.480482f, 0.392566f, 0.831735f, -0.392566f, 0.480482f, 0.83155f,
+        -0.27868f, 0.537012f, 0.831061f, -0.14476f, 0.556738f, 0.830688f,
+        0f, 0.203756f, 0.62221f, -0.755869f, 0.392481f, 0.622936f,
+        -0.67669f, 0.552994f, 0.623215f, -0.552993f, 0.676691f, 0.622936f,
+        -0.39248f, 0.75587f, 0.622209f, -0.203756f, 0.783289f, 0.621657f,
+        0f, 0.234929f, 0.430442f, -0.871509f, 0.4527f, 0.431109f,
+        -0.780517f, 0.637936f, 0.431366f, -0.637935f, 0.780517f, 0.431109f,
+        -0.4527f, 0.87151f, 0.430441f, -0.234928f, 0.906828f, 0.421501f,
+        0f, 0.875348f, 0.422003f, 0.235963f, 0.871509f, 0.430442f,
+        0.234929f, 0.783966f, 0.422664f, 0.4547f, 0.780517f, 0.43111f,
+        0.4527f, 0.640758f, 0.422917f, 0.640758f, 0.4547f, 0.422664f,
+        0.783966f, 0.4527f, 0.43111f, 0.780517f, 0.235964f, 0.422003f,
+        0.875348f, 0.234929f, 0.430442f, 0.871509f, 0f, 0.421501f,
+        0.906828f, 0.918633f, 0.395111f, 0f, 0.886771f, 0.395595f,
+        0.239043f, 0.794229f, 0.39623f, 0.460653f, 0.649156f, 0.396474f,
+        0.649157f, 0.460653f, 0.39623f, 0.794229f, 0.239043f, 0.395595f,
+        0.886771f, 0f, 0.395111f, 0.918633f, 0.937749f, 0.347314f, 0f,
+        0.905271f, 0.347757f, 0.244029f, 0.810853f, 0.34834f, 0.470295f,
+        0.662761f, 0.348563f, 0.662761f, 0.470295f, 0.34834f, 0.810853f,
+        0.24403f, 0.347757f, 0.90527f, 0f, 0.347314f, 0.937749f, 0.96234f,
+        0.271848f, 0f, 0.929073f, 0.272213f, 0.250446f, 0.832247f,
+        0.272693f, 0.482704f, 0.680271f, 0.272877f, 0.680271f, 0.482704f,
+        0.272693f, 0.832247f, 0.250446f, 0.272213f, 0.929073f, 0f,
+        0.271848f, 0.96234f, 0.987204f, 0.15946f, 0f, 0.953145f, 0.159686f,
+        0.256935f, 0.85389f, 0.159982f, 0.495256f, 0.697986f, 0.160096f,
+        0.697986f, 0.495256f, 0.159982f, 0.853889f, 0.256935f, 0.159686f,
+        0.953145f, 0f, 0.15946f, 0.987204f, 1f, 0f, 0f, 0.965535f,
+        -2.69333e-008f, 0.260275f, 0.865031f, -2.6582e-008f, 0.501718f,
+        0.707107f, -1.58051e-008f, 0.707107f, 0.501718f, -5.72888e-009f,
+        0.865031f, 0.260275f, -7.99313e-010f, 0.965535f, 0f, 0f, 1f, 0f,
+        0.421501f, 0.906828f, -0.235963f, 0.422003f, 0.875348f, -0.234928f,
+        0.430442f, 0.871509f, -0.4547f, 0.422664f, 0.783966f, -0.4527f,
+        0.43111f, 0.780517f, -0.640758f, 0.422917f, 0.640758f, -0.783966f,
+        0.422664f, 0.454701f, -0.780517f, 0.43111f, 0.4527f, -0.875348f,
+        0.422003f, 0.235964f, -0.871509f, 0.430442f, 0.234929f, -0.906828f,
+        0.421501f, 0f, 0f, 0.395111f, 0.918633f, -0.239043f, 0.395595f,
+        0.886771f, -0.460653f, 0.39623f, 0.794229f, -0.649157f, 0.396474f,
+        0.649157f, -0.794229f, 0.39623f, 0.460653f, -0.886771f, 0.395595f,
+        0.239043f, -0.918633f, 0.395111f, 0f, -0.244029f, 0.347757f,
+        0.905271f, -0.470295f, 0.34834f, 0.810853f, -0.662761f, 0.348563f,
+        0.662761f, -0.810853f, 0.34834f, 0.470295f, -0.90527f, 0.347757f,
+        0.24403f, -0.937749f, 0.347314f, 0f, 0f, 0.271848f, 0.96234f,
+        -0.250446f, 0.272213f, 0.929073f, -0.482703f, 0.272693f, 0.832248f,
+        -0.680271f, 0.272877f, 0.680271f, -0.832247f, 0.272693f, 0.482704f,
+        -0.929073f, 0.272213f, 0.250446f, -0.96234f, 0.271848f, 0f, 0f,
+        0.159461f, 0.987204f, -0.256935f, 0.159686f, 0.953145f, -0.495256f,
+        0.159983f, 0.853889f, -0.697986f, 0.160096f, 0.697986f, -0.853889f,
+        0.159982f, 0.495256f, -0.953145f, 0.159686f, 0.256935f, -0.987204f,
+        0.159461f, 0f, -0.260274f, -7.9931e-010f, 0.965535f, -0.501718f,
+        -5.72887e-009f, 0.865031f, -0.707107f, -1.58051e-008f, 0.707107f,
+        -0.865031f, -2.6582e-008f, 0.501718f, -0.965535f, -2.69333e-008f,
+        0.260275f, 0.410365f, 0.911921f, 0f, -0.906828f, 0.421501f, 0f,
+        -0.875348f, 0.422003f, -0.235963f, -0.871509f, 0.430442f,
+        -0.234928f, -0.783966f, 0.422664f, -0.4547f, -0.780517f, 0.43111f,
+        -0.4527f, -0.640758f, 0.422917f, -0.640758f, -0.454701f, 0.422664f,
+        -0.783966f, -0.4527f, 0.43111f, -0.780517f, -0.235964f, 0.422003f,
+        -0.875348f, -0.234929f, 0.430442f, -0.871509f, 0f, 0.421501f,
+        -0.906828f, -0.918633f, 0.395111f, 0f, -0.886771f, 0.395595f,
+        -0.239043f, -0.794229f, 0.39623f, -0.460653f, -0.649157f,
+        0.396474f, -0.649156f, -0.460653f, 0.39623f, -0.794229f,
+        -0.239043f, 0.395595f, -0.886771f, 0f, 0.395111f, -0.918633f,
+        -0.905271f, 0.347757f, -0.244029f, -0.810853f, 0.34834f,
+        -0.470295f, -0.662761f, 0.348563f, -0.662761f, -0.470295f,
+        0.34834f, -0.810853f, -0.24403f, 0.347757f, -0.90527f, 0f,
+        0.347314f, -0.937749f, -0.96234f, 0.271847f, 0f, -0.929073f,
+        0.272213f, -0.250446f, -0.832248f, 0.272693f, -0.482703f,
+        -0.680271f, 0.272877f, -0.680271f, -0.482704f, 0.272693f,
+        -0.832247f, -0.250446f, 0.272213f, -0.929073f, 0f, 0.271847f,
+        -0.96234f, -0.987204f, 0.15946f, 0f, -0.953145f, 0.159685f,
+        -0.256935f, -0.85389f, 0.159982f, -0.495256f, -0.697986f,
+        0.160096f, -0.697986f, -0.495256f, 0.159982f, -0.853889f,
+        -0.256935f, 0.159685f, -0.953145f, 0f, 0.15946f, -0.987204f,
+        -0.965535f, 2.69333e-008f, -0.260274f, -0.865031f, 2.6582e-008f,
+        -0.501718f, -0.707107f, 1.58051e-008f, -0.707107f, -0.501718f,
+        5.72888e-009f, -0.865031f, -0.260275f, 7.99313e-010f, -0.965535f,
+        0f, 0f, -1f, 0.235963f, 0.422003f, -0.875348f, 0.234928f,
+        0.430442f, -0.871509f, 0.4547f, 0.422664f, -0.783966f, 0.4527f,
+        0.43111f, -0.780517f, 0.640758f, 0.422917f, -0.640758f, 0.783966f,
+        0.422664f, -0.4547f, 0.780517f, 0.43111f, -0.4527f, 0.875348f,
+        0.422003f, -0.235964f, 0.871509f, 0.430442f, -0.234929f, 0.906828f,
+        0.421501f, 0f, 0.239043f, 0.395595f, -0.886771f, 0.460653f,
+        0.39623f, -0.794229f, 0.649157f, 0.396474f, -0.649156f, 0.794229f,
+        0.39623f, -0.460653f, 0.886771f, 0.395595f, -0.239043f, 0.918633f,
+        0.395111f, 0f, 0.244029f, 0.347757f, -0.905271f, 0.470295f,
+        0.34834f, -0.810853f, 0.662761f, 0.348563f, -0.662761f, 0.810853f,
+        0.34834f, -0.470295f, 0.90527f, 0.347757f, -0.24403f, 0.250446f,
+        0.272213f, -0.929073f, 0.482704f, 0.272693f, -0.832247f, 0.680271f,
+        0.272877f, -0.680271f, 0.832247f, 0.272693f, -0.482704f, 0.929073f,
+        0.272213f, -0.250446f, 0.96234f, 0.271847f, 0f, 0.256935f,
+        0.159685f, -0.953145f, 0.495256f, 0.159982f, -0.85389f, 0.697986f,
+        0.160096f, -0.697986f, 0.853889f, 0.159982f, -0.495256f, 0.953145f,
+        0.159685f, -0.256935f, 0.987204f, 0.15946f, 0f, 0.260274f,
+        7.9931e-010f, -0.965535f, 0.501718f, 5.72887e-009f, -0.865031f,
+        0.707107f, 1.58051e-008f, -0.707107f, 0.865031f, 2.6582e-008f,
+        -0.501718f, 0.965535f, 2.69333e-008f, -0.260275f, 0.938373f,
+        -0.345625f, -3.10672e-010f, 0.905874f, -0.346066f, 0.244192f,
+        0.811396f, -0.346647f, 0.470609f, 0.663205f, -0.346869f, 0.663205f,
+        0.47061f, -0.346647f, 0.811395f, 0.244192f, -0.346066f, 0.905874f,
+        0f, -0.345625f, 0.938373f, 0.811257f, -0.584689f, -4.41262e-009f,
+        0.782908f, -0.585247f, 0.211045f, 0.700957f, -0.58598f, 0.406555f,
+        0.572843f, -0.586261f, 0.572843f, 0.406555f, -0.58598f, 0.700957f,
+        0.211045f, -0.585247f, 0.782908f, 0f, -0.584689f, 0.811257f,
+        0.6981f, -0.716f, -1.94916e-008f, 0.673539f, -0.716506f, 0.181563f,
+        0.602839f, -0.717169f, 0.349647f, 0.492597f, -0.717423f, 0.492597f,
+        0.349647f, -0.717169f, 0.602839f, 0.181563f, -0.716506f, 0.673539f,
+        0f, -0.716f, 0.6981f, 0.636383f, -0.771373f, -5.3452e-008f,
+        0.61392f, -0.771826f, 0.165491f, 0.549392f, -0.772419f, 0.318648f,
+        0.448897f, -0.772647f, 0.448897f, 0.318648f, -0.772419f, 0.549392f,
+        0.165492f, -0.771826f, 0.61392f, 0f, -0.771373f, 0.636383f,
+        0.675056f, -0.737767f, -1.05865e-007f, 0.651275f, -0.738254f,
+        0.175561f, 0.582878f, -0.738893f, 0.338069f, 0.476275f, -0.739138f,
+        0.476275f, 0.338069f, -0.738893f, 0.582878f, 0.175561f, -0.738254f,
+        0.651275f, 0f, -0.737767f, 0.675056f, 1f, 0f, 0f, 0.965535f,
+        -2.69332e-008f, 0.260274f, 0.865031f, -2.65819e-008f, 0.501718f,
+        0.707107f, -1.5805e-008f, 0.707107f, 0.501718f, -5.72887e-009f,
+        0.865031f, 0.260275f, -7.99311e-010f, 0.965535f, 0f, 0f, 1f,
+        -0.244192f, -0.346066f, 0.905874f, -0.470609f, -0.346647f,
+        0.811396f, -0.663205f, -0.346869f, 0.663205f, -0.811395f,
+        -0.346647f, 0.47061f, -0.905874f, -0.346066f, 0.244193f,
+        -0.938373f, -0.345625f, -3.10672e-010f, -0.211045f, -0.585247f,
+        0.782908f, -0.406555f, -0.58598f, 0.700957f, -0.572843f,
+        -0.586261f, 0.572843f, -0.700957f, -0.58598f, 0.406555f,
+        -0.782908f, -0.585247f, 0.211045f, -0.811257f, -0.584689f,
+        -4.41262e-009f, -0.181563f, -0.716506f, 0.673539f, -0.349647f,
+        -0.717169f, 0.602839f, -0.492597f, -0.717423f, 0.492597f,
+        -0.602839f, -0.717169f, 0.349647f, -0.673539f, -0.716506f,
+        0.181563f, -0.6981f, -0.716f, -1.94916e-008f, -0.165491f,
+        -0.771826f, 0.61392f, -0.318648f, -0.772419f, 0.549393f,
+        -0.448897f, -0.772647f, 0.448897f, -0.549392f, -0.772419f,
+        0.318648f, -0.61392f, -0.771826f, 0.165492f, -0.636383f,
+        -0.771373f, -5.3452e-008f, -0.175561f, -0.738254f, 0.651275f,
+        -0.338069f, -0.738893f, 0.582878f, -0.476275f, -0.739138f,
+        0.476275f, -0.582878f, -0.738893f, 0.338069f, -0.651275f,
+        -0.738254f, 0.175561f, -0.675056f, -0.737767f, -1.05865e-007f,
+        -0.260274f, -7.99309e-010f, 0.965535f, -0.501718f, -5.72886e-009f,
+        0.865031f, -0.707107f, -1.5805e-008f, 0.707107f, -0.865031f,
+        -2.65819e-008f, 0.501718f, -0.965535f, -2.69333e-008f, 0.260275f,
+        -1f, 0f, 0f, -0.905874f, -0.346066f, -0.244192f, -0.811396f,
+        -0.346647f, -0.470609f, -0.663205f, -0.346869f, -0.663205f,
+        -0.47061f, -0.346647f, -0.811395f, -0.244192f, -0.346066f,
+        -0.905874f, 0f, -0.345625f, -0.938373f, -0.782908f, -0.585247f,
+        -0.211045f, -0.700957f, -0.58598f, -0.406555f, -0.572843f,
+        -0.586261f, -0.572843f, -0.406555f, -0.58598f, -0.700957f,
+        -0.211045f, -0.585247f, -0.782908f, 0f, -0.584689f, -0.811257f,
+        -0.673539f, -0.716506f, -0.181563f, -0.602839f, -0.717169f,
+        -0.349647f, -0.492597f, -0.717423f, -0.492597f, -0.349647f,
+        -0.717169f, -0.602839f, -0.181563f, -0.716506f, -0.673539f, 0f,
+        -0.716f, -0.6981f, -0.61392f, -0.771826f, -0.165491f, -0.549392f,
+        -0.77242f, -0.318647f, -0.448897f, -0.772647f, -0.448897f,
+        -0.318648f, -0.77242f, -0.549392f, -0.165492f, -0.771826f,
+        -0.61392f, 0f, -0.771373f, -0.636383f, -0.651275f, -0.738254f,
+        -0.175561f, -0.582877f, -0.738894f, -0.338069f, -0.476274f,
+        -0.739138f, -0.476274f, -0.338069f, -0.738894f, -0.582877f,
+        -0.175561f, -0.738255f, -0.651275f, 0f, -0.737767f, -0.675055f,
+        -0.965535f, 2.69333e-008f, -0.260274f, -0.865031f, 2.6582e-008f,
+        -0.501718f, -0.707107f, 1.58051e-008f, -0.707107f, -0.501718f,
+        5.7289e-009f, -0.865031f, -0.260275f, 7.99315e-010f, -0.965535f,
+        0f, 0f, -1f, 0.244192f, -0.346066f, -0.905874f, 0.470609f,
+        -0.346647f, -0.811396f, 0.663205f, -0.346869f, -0.663205f,
+        0.811395f, -0.346647f, -0.47061f, 0.905874f, -0.346066f,
+        -0.244192f, 0.211045f, -0.585247f, -0.782908f, 0.406555f,
+        -0.58598f, -0.700957f, 0.572843f, -0.586261f, -0.572843f,
+        0.700957f, -0.58598f, -0.406555f, 0.782908f, -0.585247f,
+        -0.211045f, 0.181563f, -0.716506f, -0.673539f, 0.349647f,
+        -0.717169f, -0.602839f, 0.492597f, -0.717423f, -0.492597f,
+        0.602839f, -0.717169f, -0.349647f, 0.673539f, -0.716506f,
+        -0.181563f, 0.165491f, -0.771826f, -0.61392f, 0.318647f, -0.77242f,
+        -0.549392f, 0.448897f, -0.772647f, -0.448897f, 0.549392f,
+        -0.77242f, -0.318648f, 0.61392f, -0.771826f, -0.165492f, 0.175561f,
+        -0.738255f, -0.651275f, 0.338069f, -0.738894f, -0.582877f,
+        0.476274f, -0.739138f, -0.476274f, 0.582877f, -0.738894f,
+        -0.338069f, 0.651275f, -0.738254f, -0.175561f, 0.260274f,
+        7.99314e-010f, -0.965535f, 0.501718f, 5.72889e-009f, -0.865031f,
+        0.707107f, 1.58051e-008f, -0.707107f, 0.865031f, 2.6582e-008f,
+        -0.501718f, 0.965535f, 2.69333e-008f, -0.260275f, 0.0104645f,
+        -0.999945f, 0f, 0f, -1f, 0f, 0.0104255f, -0.954681f, 0.297447f,
+        2.56825e-008f, -0.95448f, 0.298276f, 0.00846391f, -0.708083f,
+        0.706078f, 1.14879e-007f, -0.707106f, 0.707108f, -2.9238e-009f,
+        -8.98486e-008f, 1f, 8.16344e-015f, -8.94074e-008f, 1f,
+        -0.00997561f, 0.707961f, 0.706181f, 5.80084e-008f, 0.707107f,
+        0.707107f, -0.0140841f, 0.95459f, 0.297589f, 1.94189e-007f,
+        0.95448f, 0.298275f, -0.0149982f, 0.999888f, 0f, 0f, 1f, 0f,
+        0.0510697f, -0.998695f, 0f, 0.0510028f, -0.953615f, 0.296676f,
+        0.0415993f, -0.706917f, 0.706072f, -2.78701e-009f, -9.11701e-008f,
+        1f, -0.0493858f, 0.704244f, 0.708239f, -0.0701018f, 0.951466f,
+        0.299663f, -0.07479f, 0.997199f, 0f, 0.14834f, -0.988936f, 0f,
+        0.148104f, -0.941964f, 0.30128f, 0.119688f, -0.688399f, 0.715389f,
+        7.13598e-009f, -8.17051e-008f, 1f, -0.141352f, 0.675015f,
+        0.724137f, -0.204668f, 0.927128f, 0.313917f, -0.219512f, 0.97561f,
+        0f, 0.364399f, -0.931243f, 0f, 0.359682f, -0.875088f, 0.323804f,
+        0.275915f, -0.604128f, 0.747597f, 1.54202e-008f, -6.37972e-008f,
+        1f, -0.313659f, 0.564289f, 0.763672f, -0.474611f, 0.807244f,
+        0.350859f, -0.514496f, 0.857493f, 0f, 0.767382f, -0.64119f, 0f,
+        0.727532f, -0.577566f, 0.37029f, 0.497151f, -0.35353f, 0.792374f,
+        1.10972e-008f, -5.53164e-008f, 1f, -0.519904f, 0.300684f,
+        0.799556f, -0.810111f, 0.441475f, 0.385771f, -0.882353f, 0.470588f,
+        0f, 1f, 0f, 0f, 0.923077f, -3.76483e-008f, 0.384616f, 0.599999f,
+        -4.20741e-008f, 0.8f, 0f, -4.47037e-008f, 1f, -0.600001f,
+        -5.17421e-008f, 0.799999f, -0.923077f, -4.14964e-008f, 0.384614f,
+        -1f, 0f, 0f, -0.014084f, 0.95459f, -0.297589f, 5.67983e-008f,
+        0.95448f, -0.298275f, -0.00997558f, 0.707961f, -0.706182f,
+        -4.84905e-008f, 0.707107f, -0.707107f, 5.84773e-010f,
+        8.94956e-008f, -1f, -8.16344e-015f, 8.94074e-008f, -1f, 0.0084637f,
+        -0.708085f, -0.706076f, 3.66172e-008f, -0.707108f, -0.707106f,
+        0.0104256f, -0.954682f, -0.297445f, 7.36826e-009f, -0.95448f,
+        -0.298274f, 0.0104646f, -0.999945f, 0f, -0.07479f, 0.997199f, 0f,
+        -0.0701018f, 0.951466f, -0.299663f, -0.0493858f, 0.704243f,
+        -0.708239f, -8.36107e-009f, 8.41192e-008f, -1f, 0.0415994f,
+        -0.706919f, -0.70607f, 0.0510028f, -0.953616f, -0.296674f,
+        0.0510696f, -0.998695f, 0f, -0.204668f, 0.927128f, -0.313917f,
+        -0.141352f, 0.675015f, -0.724137f, -7.13598e-009f, 8.17051e-008f,
+        -1f, 0.119688f, -0.688401f, -0.715387f, 0.148104f, -0.941964f,
+        -0.301278f, -0.514495f, 0.857493f, 0f, -0.47461f, 0.807244f,
+        -0.350859f, -0.313658f, 0.564289f, -0.763673f, -9.25216e-009f,
+        7.40412e-008f, -1f, 0.275916f, -0.60413f, -0.747595f, 0.359681f,
+        -0.875089f, -0.323802f, 0.364399f, -0.931243f, 0f, -0.882353f,
+        0.470589f, 0f, -0.810111f, 0.441477f, -0.385771f, -0.519903f,
+        0.300684f, -0.799556f, -1.01322e-008f, 5.82809e-008f, -1f,
+        0.497153f, -0.353532f, -0.792373f, 0.727532f, -0.577567f,
+        -0.370288f, 0.767381f, -0.641191f, 0f, -0.923077f, 4.14963e-008f,
+        -0.384615f, -0.6f, 5.17421e-008f, -0.8f, 0f, 4.47037e-008f, -1f,
+        0.600002f, 4.2074e-008f, -0.799999f, 0.923078f, 3.76482e-008f,
+        -0.384614f, 0.972045f, 0.234794f, 0f, 0.895972f, 0.219226f,
+        0.38623f, 0.57987f, 0.145888f, 0.801541f, -1.56774e-008f,
+        -4.06593e-008f, 1f, -0.577708f, -0.153129f, 0.801751f, -0.890548f,
+        -0.23959f, 0.386678f, -0.965311f, -0.261102f, 0f, 0.913811f,
+        0.406139f, 0f, 0.842942f, 0.38439f, 0.376421f, 0.548194f,
+        0.264706f, 0.793356f, -1.8594e-008f, -5.87553e-008f, 1f,
+        -0.534196f, -0.289235f, 0.794341f, -0.807437f, -0.452559f,
+        0.378465f, -0.869653f, -0.493664f, 0f, 0.83205f, 0.5547f, 0f,
+        0.772293f, 0.530527f, 0.349435f, 0.515845f, 0.379263f, 0.768156f,
+        -2.48164e-008f, -6.43889e-008f, 1f, -0.486434f, -0.411777f,
+        0.770598f, -0.700515f, -0.619694f, 0.353919f, -0.743581f,
+        -0.668646f, 0f, 0.722373f, 0.691503f, 0f, 0.676612f, 0.666255f,
+        0.31353f, 0.471519f, 0.495195f, 0.729693f, -2.71577e-008f,
+        -7.53755e-008f, 1f, -0.433172f, -0.52092f, 0.73553f, -0.589822f,
+        -0.740319f, 0.322549f, -0.617031f, -0.786939f, 0f, 0.580972f,
+        0.813923f, 0f, 0.548733f, 0.784249f, 0.289562f, 0.396971f,
+        0.593617f, 0.700024f, -2.572e-008f, -8.77449e-008f, 1f, -0.367048f,
+        -0.602921f, 0.708352f, -0.485318f, -0.820874f, 0.301051f,
+        -0.504835f, -0.863216f, 0f, 0.390503f, 0.867784f, 0.307341f,
+        0.285351f, 0.634113f, 0.718663f, -2.36665e-008f, -9.72958e-008f,
+        1f, -0.285351f, -0.634114f, 0.718661f, -0.390503f, -0.867784f,
+        0.30734f, -0.410365f, -0.911921f, 0f, -0.890548f, -0.23959f,
+        -0.386679f, -0.577707f, -0.153129f, -0.801752f, 1.08654e-008f,
+        5.5622e-008f, -1f, 0.579872f, 0.145888f, -0.801539f, 0.895973f,
+        0.219227f, -0.386228f, -0.807437f, -0.452558f, -0.378466f,
+        -0.534196f, -0.289235f, -0.794341f, 2.27516e-008f, 5.19016e-008f,
+        -1f, 0.548196f, 0.264707f, -0.793355f, 0.842943f, 0.384391f,
+        -0.376419f, -0.700515f, -0.619694f, -0.353919f, -0.486433f,
+        -0.411777f, -0.770599f, 2.48164e-008f, 6.43889e-008f, -1f,
+        0.515847f, 0.379264f, -0.768154f, 0.772293f, 0.530528f, -0.349433f,
+        -0.589822f, -0.740319f, -0.322549f, -0.433171f, -0.520919f,
+        -0.735531f, 2.71577e-008f, 7.53755e-008f, -1f, 0.47152f, 0.495196f,
+        -0.729691f, 0.676612f, 0.666255f, -0.313529f, -0.485318f,
+        -0.820874f, -0.301052f, -0.367047f, -0.60292f, -0.708353f,
+        2.88747e-008f, 8.75411e-008f, -1f, 0.396972f, 0.593619f,
+        -0.700022f, 0.548733f, 0.784249f, -0.289561f, -0.390503f,
+        -0.867784f, -0.30734f, -0.285351f, -0.634113f, -0.718662f,
+        2.36665e-008f, 9.72958e-008f, -1f, 0.285351f, 0.634114f,
+        -0.718661f, 0.390503f, 0.867785f, -0.307339f, -0.333935f,
+        0.942596f, 0f, 0f, 1f, 0f, -0.291732f, 0.855995f, 0.426808f,
+        -0.0157731f, 0.886804f, 0.461877f, -0.135103f, 0.53438f, 0.834377f,
+        -0.0291362f, 0.514277f, 0.857129f, 0.110195f, 0.0292375f, 0.99348f,
+        4.3732e-009f, -8.94073e-008f, 1f, 0.348602f, -0.464039f, 0.814337f,
+        0.0673463f, -0.513328f, 0.855546f, 0.492146f, -0.767551f,
+        0.410679f, 0.134339f, -0.878875f, 0.457746f, 0.528678f, -0.848822f,
+        0f, 0.158678f, -0.98733f, 0f, -0.731055f, 0.682318f, 0f, -0.64585f,
+        0.656206f, 0.390219f, -0.31251f, 0.484842f, 0.816864f, 0.215359f,
+        0.108813f, 0.970454f, 0.627608f, -0.260237f, 0.733747f, 0.813963f,
+        -0.465103f, 0.348055f, 0.854063f, -0.52017f, 0f, -0.920582f,
+        0.39055f, 0f, -0.835236f, 0.412221f, 0.363943f, -0.451322f,
+        0.38916f, 0.803034f, 0.214084f, 0.180281f, 0.960035f, 0.705425f,
+        -0.0805069f, 0.704198f, 0.913262f, -0.239978f, 0.329185f,
+        0.957826f, -0.287348f, 0f, -0.948683f, 0.316228f, 0f, -0.842821f,
+        0.34961f, 0.409177f, -0.452672f, 0.347535f, 0.821162f, 0.113546f,
+        0.191909f, 0.974822f, 0.60461f, -0.0547987f, 0.794634f, 0.880145f,
+        -0.253261f, 0.401503f, 0.947589f, -0.319493f, 0f, -0.874591f,
+        0.484861f, 0f, -0.723794f, 0.476715f, 0.498864f, -0.365377f,
+        0.375544f, 0.851743f, 0.0260102f, 0.151516f, 0.988113f, 0.417243f,
+        -0.185123f, 0.88974f, 0.70819f, -0.506054f, 0.492318f, 0.787582f,
+        -0.61621f, 0f, -0.600001f, 0.799999f, 0f, -0.497164f, 0.711095f,
+        0.497165f, -0.267367f, 0.443286f, 0.855577f, 0f, -4.47006e-008f,
+        1f, 0.250514f, -0.54278f, 0.801644f, 0.366221f, -0.855433f,
+        0.36622f, 0.384615f, -0.923077f, 0f, 0.528678f, -0.848822f, 0f,
+        0.492146f, -0.767551f, -0.41068f, 0.134339f, -0.878875f,
+        -0.457747f, 0.348602f, -0.464038f, -0.814337f, 0.0673462f,
+        -0.513327f, -0.855546f, 0.110195f, 0.0292377f, -0.99348f,
+        -4.3732e-009f, 8.94073e-008f, -1f, -0.135104f, 0.534382f,
+        -0.834376f, -0.0291362f, 0.514278f, -0.857128f, -0.291732f,
+        0.855996f, -0.426806f, -0.0157731f, 0.886804f, -0.461876f,
+        -0.333935f, 0.942596f, 0f, 0.854063f, -0.52017f, 0f, 0.813963f,
+        -0.465103f, -0.348056f, 0.627607f, -0.260237f, -0.733748f,
+        0.215359f, 0.108813f, -0.970454f, -0.312512f, 0.484843f,
+        -0.816862f, -0.645851f, 0.656206f, -0.390218f, 0.913262f,
+        -0.239977f, -0.329185f, 0.705424f, -0.0805064f, -0.704199f,
+        0.214084f, 0.180281f, -0.960035f, -0.451324f, 0.38916f, -0.803032f,
+        -0.835237f, 0.412221f, -0.363941f, 0.947589f, -0.319493f, 0f,
+        0.880144f, -0.253261f, -0.401503f, 0.60461f, -0.0547981f,
+        -0.794635f, 0.113546f, 0.191909f, -0.974822f, -0.452675f,
+        0.347535f, -0.821161f, -0.842822f, 0.34961f, -0.409175f,
+        -0.948683f, 0.316228f, 0f, 0.787582f, -0.61621f, 0f, 0.70819f,
+        -0.506053f, -0.492318f, 0.417243f, -0.185122f, -0.88974f,
+        0.0260103f, 0.151516f, -0.988113f, -0.365379f, 0.375545f,
+        -0.851742f, -0.723796f, 0.476715f, -0.498861f, -0.874591f,
+        0.484861f, 0f, 0.36622f, -0.855433f, -0.36622f, 0.250514f,
+        -0.54278f, -0.801644f, 0f, 4.47006e-008f, -1f, -0.267368f,
+        0.443289f, -0.855575f, -0.497165f, 0.711096f, -0.497162f,
+        -0.467888f, 0.883788f, 0f, -0.387053f, 0.824948f, 0.411887f,
+        -0.215548f, 0.655025f, 0.72421f, -0.00489616f, 0.343259f,
+        0.939228f, 0.269127f, -0.23781f, 0.933283f, 0.442187f, -0.761825f,
+        0.473385f, 0.463425f, -0.886136f, 0f, -0.306008f, 0.952029f, 0f,
+        -0.253998f, 0.928137f, 0.272115f, -0.14959f, 0.863647f, 0.481391f,
+        -0.0195232f, 0.746219f, 0.665414f, 0.218115f, 0.441118f, 0.870541f,
+        0.612385f, -0.337374f, 0.714957f, 0.694135f, -0.719844f, 0f, 0f,
+        1f, 0f, -0.0182315f, 0.999613f, -0.0210205f, -0.0369304f,
+        0.999286f, 0.00796664f, -0.0348909f, 0.997622f, 0.059444f,
+        -0.00787177f, 0.994104f, 0.108145f, 0.0539575f, 0.992309f,
+        0.111405f, 0.106533f, 0.994309f, 0f, 0.913813f, 0.406135f, 0f,
+        0.507716f, 0.52532f, -0.682835f, 0.148478f, 0.676273f, -0.721533f,
+        -0.0300304f, 0.787464f, -0.615629f, -0.144372f, 0.876436f,
+        -0.459366f, -0.223743f, 0.943891f, -0.242919f, -0.253109f,
+        0.967438f, 0f, 0.789351f, -0.613942f, 0f, 0.577415f, -0.400033f,
+        -0.711734f, 0.241288f, -0.0136421f, -0.970358f, -0.0103803f,
+        0.344669f, -0.938667f, -0.199105f, 0.663018f, -0.72164f,
+        -0.316295f, 0.875642f, -0.364979f, -0.349987f, 0.936755f, 0f, 0.6f,
+        -0.8f, 0f, 0.483629f, -0.690899f, -0.537366f, 0.247465f, -0.40568f,
+        -0.879878f, 0f, 4.47028e-008f, -1f, -0.236617f, 0.486025f,
+        -0.841304f, -0.378646f, 0.824393f, -0.420717f, -0.410365f,
+        0.911921f, 0f, 0.442188f, -0.761824f, -0.473386f, 0.269127f,
+        -0.237807f, -0.933284f, -0.0048962f, 0.343262f, -0.939227f,
+        -0.215548f, 0.655028f, -0.724208f, -0.387053f, 0.82495f,
+        -0.411884f, 0.612385f, -0.337369f, -0.714959f, 0.218114f,
+        0.441124f, -0.870538f, -0.0195232f, 0.746221f, -0.665412f,
+        -0.14959f, 0.863648f, -0.481389f, -0.253997f, 0.928138f,
+        -0.272112f, 0.0539562f, 0.992309f, -0.111404f, -0.00787199f,
+        0.994104f, -0.108144f, -0.0348909f, 0.997622f, -0.0594425f,
+        -0.0369306f, 0.999286f, -0.00796709f, -0.0182318f, 0.999613f,
+        0.0210199f, -0.223743f, 0.943891f, 0.242919f, -0.144372f,
+        0.876437f, 0.459364f, -0.0300305f, 0.787466f, 0.615626f, 0.148478f,
+        0.676276f, 0.721529f, 0.507717f, 0.525323f, 0.682832f, -0.316294f,
+        0.875642f, 0.364979f, -0.199104f, 0.663019f, 0.72164f, -0.0103804f,
+        0.344672f, 0.938666f, 0.241289f, -0.0136406f, 0.970357f, 0.577417f,
+        -0.400034f, 0.711732f, -0.378646f, 0.824393f, 0.420718f,
+        -0.236617f, 0.486023f, 0.841305f, 0f, -4.47028e-008f, 1f,
+        0.247466f, -0.405682f, 0.879877f, 0.48363f, -0.690899f, 0.537365f,
+        0.249998f, 0.968246f, 0f, 0.001257f, 0.999999f, 0f, 0.241077f,
+        0.968356f, 0.0645611f, 0.00120899f, 0.999999f, 0.000335259f,
+        0.215548f, 0.968509f, 0.124615f, 0.00108352f, 0.999999f,
+        0.000626407f, 0.175886f, 0.96857f, 0.175886f, 0.124616f, 0.968509f,
+        0.215548f, 0.0645611f, 0.968356f, 0.241077f, 0f, 0.968246f,
+        0.249998f, 0.989204f, 0.146548f, 0f, 0.955495f, 0.146755f,
+        0.255913f, 0.856312f, 0.147029f, 0.495088f, 0.699411f, 0.147135f,
+        0.699411f, 0.495089f, 0.147029f, 0.856312f, 0.255914f, 0.146754f,
+        0.955495f, 0f, 0.146548f, 0.989204f, 0.780869f, -0.624695f, 0f,
+        0.753687f, -0.625441f, 0.201937f, 0.674735f, -0.626493f, 0.390178f,
+        0.550895f, -0.62692f, 0.550896f, 0.390179f, -0.626493f, 0.674734f,
+        0.201938f, -0.625441f, 0.753688f, 0f, -0.624695f, 0.780869f,
+        0.747409f, -0.664364f, 0f, 0.721243f, -0.665116f, 0.193465f,
+        0.645526f, -0.66618f, 0.373497f, 0.527081f, -0.666611f, 0.527081f,
+        0.373498f, -0.66618f, 0.645526f, 0.193466f, -0.665116f, 0.721243f,
+        0f, -0.664364f, 0.747409f, 0.950775f, -0.309882f, 0f, 0.917897f,
+        -0.310647f, 0.246906f, 0.822132f, -0.311772f, 0.476337f, 0.671753f,
+        -0.312241f, 0.671754f, 0.476338f, -0.311771f, 0.822132f, 0.246907f,
+        -0.310647f, 0.917897f, 0f, -0.309882f, 0.950775f, 0.6f, 0.8f, 0f,
+        0.578783f, 0.800417f, 0.15602f, 0.517905f, 0.800964f, 0.300385f,
+        0.423156f, 0.801173f, 0.423156f, 0.300386f, 0.800964f, 0.517904f,
+        0.156021f, 0.800416f, 0.578784f, 0f, 0.799999f, 0.600001f, 0f,
+        0.968246f, 0.249998f, -0.064561f, 0.968356f, 0.241077f, -0.124615f,
+        0.968509f, 0.215548f, -0.175885f, 0.968571f, 0.175885f, -0.215548f,
+        0.968509f, 0.124616f, -0.241076f, 0.968356f, 0.064561f, -0.249998f,
+        0.968246f, 0f, 0f, 0.146549f, 0.989203f, -0.255913f, 0.146755f,
+        0.955495f, -0.495088f, 0.14703f, 0.856312f, -0.699411f, 0.147136f,
+        0.699411f, -0.856311f, 0.14703f, 0.495089f, -0.955495f, 0.146755f,
+        0.255914f, -0.989203f, 0.146549f, 0f, -0.201937f, -0.625441f,
+        0.753688f, -0.390178f, -0.626493f, 0.674735f, -0.550895f,
+        -0.62692f, 0.550896f, -0.674734f, -0.626493f, 0.390179f,
+        -0.753687f, -0.625441f, 0.201939f, -0.780869f, -0.624695f, 0f, 0f,
+        -0.664364f, 0.747409f, -0.193465f, -0.665116f, 0.721244f,
+        -0.373497f, -0.66618f, 0.645527f, -0.527081f, -0.666611f,
+        0.527081f, -0.645526f, -0.66618f, 0.373498f, -0.721243f,
+        -0.665116f, 0.193466f, -0.747409f, -0.664364f, 0f, 0f, -0.309883f,
+        0.950775f, -0.246906f, -0.310648f, 0.917897f, -0.476336f,
+        -0.311773f, 0.822132f, -0.671753f, -0.312242f, 0.671753f,
+        -0.822131f, -0.311773f, 0.476338f, -0.917897f, -0.310648f,
+        0.246907f, -0.950775f, -0.309883f, 0f, -0.15602f, 0.800417f,
+        0.578784f, -0.300385f, 0.800964f, 0.517905f, -0.423156f, 0.801173f,
+        0.423156f, -0.517904f, 0.800964f, 0.300386f, -0.578783f, 0.800417f,
+        0.15602f, -0.6f, 0.8f, 0f, -0.249998f, 0.968246f, 0f, -0.241077f,
+        0.968356f, -0.064561f, -0.215548f, 0.968509f, -0.124615f,
+        -0.175885f, 0.968571f, -0.175885f, -0.124616f, 0.968509f,
+        -0.215548f, -0.064561f, 0.968356f, -0.241077f, 0f, 0.968246f,
+        -0.249998f, -0.989204f, 0.146547f, 0f, -0.955496f, 0.146753f,
+        -0.255912f, -0.856312f, 0.147028f, -0.495088f, -0.699411f,
+        0.147134f, -0.699411f, -0.495089f, 0.147028f, -0.856312f,
+        -0.255914f, 0.146753f, -0.955495f, 0f, 0.146547f, -0.989204f,
+        -0.753688f, -0.625441f, -0.201937f, -0.674735f, -0.626494f,
+        -0.390178f, -0.550896f, -0.62692f, -0.550895f, -0.390179f,
+        -0.626494f, -0.674734f, -0.201938f, -0.625441f, -0.753687f, 0f,
+        -0.624695f, -0.780869f, -0.747409f, -0.664364f, 0f, -0.721244f,
+        -0.665116f, -0.193465f, -0.645526f, -0.66618f, -0.373497f,
+        -0.527081f, -0.666612f, -0.527081f, -0.373498f, -0.66618f,
+        -0.645526f, -0.193466f, -0.665116f, -0.721243f, 0f, -0.664364f,
+        -0.747409f, -0.950776f, -0.30988f, 0f, -0.917898f, -0.310645f,
+        -0.246906f, -0.822133f, -0.31177f, -0.476337f, -0.671754f,
+        -0.312239f, -0.671754f, -0.476338f, -0.31177f, -0.822132f,
+        -0.246907f, -0.310646f, -0.917898f, 0f, -0.309881f, -0.950775f,
+        -0.578783f, 0.800417f, -0.15602f, -0.517905f, 0.800964f,
+        -0.300384f, -0.423155f, 0.801174f, -0.423155f, -0.300386f,
+        0.800964f, -0.517904f, -0.15602f, 0.800417f, -0.578783f, 0f, 0.8f,
+        -0.6f, 0.064561f, 0.968356f, -0.241077f, 0.124615f, 0.968509f,
+        -0.215548f, 0.175885f, 0.968571f, -0.175885f, 0.215549f, 0.968509f,
+        -0.124616f, 0.241077f, 0.968356f, -0.064561f, 0.249998f, 0.968246f,
+        0f, 0.255913f, 0.146754f, -0.955496f, 0.495088f, 0.147028f,
+        -0.856312f, 0.699411f, 0.147134f, -0.699411f, 0.856312f, 0.147028f,
+        -0.495089f, 0.955495f, 0.146753f, -0.255914f, 0.989204f, 0.146547f,
+        0f, 0.201937f, -0.625441f, -0.753687f, 0.390178f, -0.626494f,
+        -0.674735f, 0.550896f, -0.62692f, -0.550895f, 0.674734f,
+        -0.626494f, -0.390179f, 0.753687f, -0.625441f, -0.201938f,
+        0.193465f, -0.665116f, -0.721243f, 0.373497f, -0.66618f,
+        -0.645526f, 0.527081f, -0.666612f, -0.527081f, 0.645526f,
+        -0.66618f, -0.373498f, 0.721244f, -0.665116f, -0.193466f,
+        0.747409f, -0.664364f, 0f, 0.246906f, -0.310646f, -0.917898f,
+        0.476337f, -0.31177f, -0.822133f, 0.671754f, -0.312239f,
+        -0.671754f, 0.822133f, -0.31177f, -0.476338f, 0.917898f,
+        -0.310646f, -0.246907f, 0.950776f, -0.30988f, 0f, 0.15602f,
+        0.800417f, -0.578783f, 0.300384f, 0.800964f, -0.517905f, 0.423155f,
+        0.801174f, -0.423155f, 0.517904f, 0.800964f, -0.300386f, 0.578783f,
+        0.800417f, -0.15602f, 0.268354f, 0.96332f, 0f, 0.258757f,
+        0.963421f, 0.0697519f, 0.231413f, 0.963552f, 0.134219f, 0.189037f,
+        0.963603f, 0.189037f, 0.13422f, 0.963552f, 0.231413f, 0.0697519f,
+        0.963421f, 0.258756f, 0f, 0.96332f, 0.268354f, 0.168031f,
+        0.985782f, 0f, 0.162012f, 0.985822f, 0.0436728f, 0.144879f,
+        0.985875f, 0.0840299f, 0.118345f, 0.985895f, 0.118345f, 0.0840302f,
+        0.985875f, 0.144879f, 0.0436728f, 0.985822f, 0.162011f, 0f,
+        0.985782f, 0.168031f, 0.14834f, 0.988936f, 0f, 0.143025f,
+        0.988968f, 0.0385546f, 0.127899f, 0.989009f, 0.0741814f, 0.104474f,
+        0.989025f, 0.104474f, 0.0741816f, 0.989009f, 0.127899f, 0.0385547f,
+        0.988968f, 0.143025f, 0f, 0.988936f, 0.148341f, 0.193633f,
+        0.981074f, 0f, 0.186698f, 0.981127f, 0.0503274f, 0.166959f,
+        0.981197f, 0.0968359f, 0.136382f, 0.981224f, 0.136382f, 0.0968361f,
+        0.981197f, 0.166958f, 0.0503276f, 0.981127f, 0.186699f, 0f,
+        0.981074f, 0.193633f, 0.390291f, 0.920691f, 0f, 0.376377f,
+        0.920895f, 0.101458f, 0.336655f, 0.921161f, 0.19526f, 0.275023f,
+        0.921262f, 0.275023f, 0.19526f, 0.921161f, 0.336655f, 0.101459f,
+        0.920894f, 0.376377f, 0f, 0.920691f, 0.390291f, 1f, 0f, 0f,
+        0.965535f, -2.6932e-008f, 0.260274f, 0.865031f, -2.65808e-008f,
+        0.501718f, 0.707107f, -1.58043e-008f, 0.707107f, 0.501719f,
+        -5.72865e-009f, 0.865031f, 0.260276f, -7.99283e-010f, 0.965534f,
+        0f, 0f, 1f, -0.0697519f, 0.963421f, 0.258757f, -0.134219f,
+        0.963552f, 0.231413f, -0.189037f, 0.963603f, 0.189037f, -0.231413f,
+        0.963552f, 0.13422f, -0.258756f, 0.963421f, 0.0697519f, -0.268354f,
+        0.96332f, 0f, -0.0436727f, 0.985822f, 0.162012f, -0.0840298f,
+        0.985875f, 0.144879f, -0.118345f, 0.985895f, 0.118345f, -0.144879f,
+        0.985875f, 0.0840302f, -0.162011f, 0.985822f, 0.0436728f,
+        -0.168031f, 0.985782f, 0f, -0.0385546f, 0.988968f, 0.143025f,
+        -0.0741813f, 0.989009f, 0.127899f, -0.104474f, 0.989025f,
+        0.104474f, -0.127899f, 0.989009f, 0.0741816f, -0.143025f,
+        0.988968f, 0.0385547f, -0.14834f, 0.988936f, 0f, -0.0503274f,
+        0.981127f, 0.186698f, -0.0968359f, 0.981197f, 0.166959f,
+        -0.136382f, 0.981224f, 0.136382f, -0.166958f, 0.981197f,
+        0.0968361f, -0.186699f, 0.981127f, 0.0503276f, -0.193633f,
+        0.981074f, 0f, -0.101458f, 0.920895f, 0.376377f, -0.19526f,
+        0.921161f, 0.336655f, -0.275023f, 0.921262f, 0.275023f, -0.336655f,
+        0.921161f, 0.19526f, -0.376377f, 0.920894f, 0.101459f, -0.390291f,
+        0.920691f, 0f, -0.260274f, -7.99271e-010f, 0.965535f, -0.501718f,
+        -5.72859e-009f, 0.865031f, -0.707107f, -1.58043e-008f, 0.707107f,
+        -0.865031f, -2.65808e-008f, 0.501719f, -0.965534f, -2.69321e-008f,
+        0.260276f, -1f, 0f, 0f, -0.258757f, 0.963421f, -0.0697518f,
+        -0.231413f, 0.963552f, -0.134219f, -0.189037f, 0.963603f,
+        -0.189037f, -0.13422f, 0.963552f, -0.231413f, -0.0697518f,
+        0.963421f, -0.258756f, 0f, 0.96332f, -0.268354f, -0.162012f,
+        0.985822f, -0.0436727f, -0.144879f, 0.985875f, -0.0840298f,
+        -0.118345f, 0.985895f, -0.118345f, -0.0840302f, 0.985875f,
+        -0.144879f, -0.0436727f, 0.985822f, -0.162011f, 0f, 0.985782f,
+        -0.168031f, -0.143025f, 0.988968f, -0.0385546f, -0.127899f,
+        0.989009f, -0.0741813f, -0.104474f, 0.989025f, -0.104474f,
+        -0.0741816f, 0.989009f, -0.127899f, -0.0385547f, 0.988968f,
+        -0.143025f, 0f, 0.988936f, -0.14834f, -0.186698f, 0.981127f,
+        -0.0503273f, -0.166959f, 0.981197f, -0.0968358f, -0.136382f,
+        0.981224f, -0.136382f, -0.0968361f, 0.981197f, -0.166958f,
+        -0.0503276f, 0.981127f, -0.186699f, 0f, 0.981074f, -0.193633f,
+        -0.376377f, 0.920895f, -0.101458f, -0.336655f, 0.921161f,
+        -0.19526f, -0.275023f, 0.921262f, -0.275023f, -0.19526f, 0.921161f,
+        -0.336655f, -0.101459f, 0.920894f, -0.376377f, 0f, 0.920691f,
+        -0.390291f, -0.965535f, 2.6932e-008f, -0.260274f, -0.865031f,
+        2.65807e-008f, -0.501718f, -0.707107f, 1.58043e-008f, -0.707107f,
+        -0.501719f, 5.72864e-009f, -0.865031f, -0.260276f, 7.99283e-010f,
+        -0.965534f, 0f, 0f, -1f, 0.0697518f, 0.963421f, -0.258757f,
+        0.134219f, 0.963552f, -0.231413f, 0.189037f, 0.963603f, -0.189037f,
+        0.231413f, 0.963552f, -0.13422f, 0.258756f, 0.963421f, -0.0697518f,
+        0.0436727f, 0.985822f, -0.162012f, 0.0840298f, 0.985875f,
+        -0.144879f, 0.118345f, 0.985895f, -0.118345f, 0.144879f, 0.985875f,
+        -0.0840302f, 0.162011f, 0.985822f, -0.0436727f, 0.0385546f,
+        0.988968f, -0.143025f, 0.0741813f, 0.989009f, -0.127899f,
+        0.104474f, 0.989025f, -0.104474f, 0.127899f, 0.989009f,
+        -0.0741816f, 0.143025f, 0.988968f, -0.0385547f, 0.0503274f,
+        0.981127f, -0.186698f, 0.0968359f, 0.981197f, -0.166959f,
+        0.136382f, 0.981224f, -0.136382f, 0.166958f, 0.981197f,
+        -0.0968361f, 0.186699f, 0.981127f, -0.0503276f, 0.101458f,
+        0.920895f, -0.376377f, 0.19526f, 0.921161f, -0.336655f, 0.275023f,
+        0.921262f, -0.275023f, 0.336655f, 0.921161f, -0.19526f, 0.376377f,
+        0.920894f, -0.101459f, 0.260274f, 7.99271e-010f, -0.965535f,
+        0.501718f, 5.72859e-009f, -0.865031f, 0.707107f, 1.58043e-008f,
+        -0.707107f, 0.865031f, 2.65807e-008f, -0.501719f, 0.965534f,
+        2.6932e-008f, -0.260276f, 0.0226746f, -0.999743f, -1.91575e-007f,
+        0.00017586f, -1f, -1.78936e-007f, 0.0218614f, -0.999744f,
+        -0.00589325f, 0.0195486f, -0.999745f, -0.0113383f, 0.0159681f,
+        -0.999745f, -0.0159682f, 0.0113382f, -0.999745f, -0.0195487f,
+        0.0058931f, -0.999744f, -0.0218616f, 0f, -0.999743f, -0.0226747f,
+        0.0623783f, -0.998053f, -2.05165e-007f, 0.0601415f, -0.998058f,
+        -0.0162122f, 0.0537792f, -0.998066f, -0.0311921f, 0.0439291f,
+        -0.998068f, -0.0439292f, 0.031192f, -0.998066f, -0.0537793f,
+        0.0162121f, -0.998058f, -0.0601416f, 0f, -0.998053f, -0.0623784f,
+        0.141421f, -0.98995f, -2.16354e-007f, 0.136353f, -0.989978f,
+        -0.0367563f, 0.121933f, -0.990016f, -0.0707209f, 0.0996006f,
+        -0.99003f, -0.0996008f, 0.070721f, -0.990016f, -0.121933f,
+        0.0367563f, -0.989978f, -0.136353f, 0f, -0.98995f, -0.141421f,
+        0.328521f, -0.944497f, -2.21665e-007f, 0.316788f, -0.944644f,
+        -0.0853952f, 0.283332f, -0.944838f, -0.164332f, 0.231454f,
+        -0.944912f, -0.231454f, 0.164333f, -0.944838f, -0.283331f,
+        0.0853954f, -0.944644f, -0.316788f, 0f, -0.944497f, -0.328521f,
+        0.770022f, -0.638017f, -1.57624e-007f, 0.743044f, -0.638566f,
+        -0.200299f, 0.665183f, -0.639286f, -0.385806f, 0.543581f,
+        -0.639561f, -0.543581f, 0.385806f, -0.639286f, -0.665182f, 0.2003f,
+        -0.638566f, -0.743044f, 0f, -0.638017f, -0.770022f, 0.965535f,
+        2.69333e-008f, -0.260274f, 0.865031f, 2.6582e-008f, -0.501718f,
+        0.501719f, 5.7289e-009f, -0.865031f, 0.260276f, 7.9932e-010f,
+        -0.965534f, 0f, -0.999743f, -0.0226747f, -0.00589307f, -0.999744f,
+        -0.0218616f, -0.0113382f, -0.999745f, -0.0195487f, -0.015968f,
+        -0.999745f, -0.0159682f, -0.0195486f, -0.999745f, -0.0113384f,
+        -0.0218614f, -0.999744f, -0.00589328f, -0.0226746f, -0.999743f,
+        -1.91575e-007f, 0f, -0.998053f, -0.0623784f, -0.016212f,
+        -0.998058f, -0.0601416f, -0.0311919f, -0.998066f, -0.0537794f,
+        -0.0439291f, -0.998068f, -0.0439292f, -0.0537792f, -0.998066f,
+        -0.0311922f, -0.0601415f, -0.998058f, -0.0162123f, -0.0623783f,
+        -0.998053f, -2.05165e-007f, -0.0367561f, -0.989978f, -0.136353f,
+        -0.0707208f, -0.990016f, -0.121933f, -0.0996006f, -0.99003f,
+        -0.0996008f, -0.121932f, -0.990016f, -0.0707211f, -0.136353f,
+        -0.989978f, -0.0367565f, -0.141421f, -0.98995f, -2.16354e-007f, 0f,
+        -0.944497f, -0.32852f, -0.0853949f, -0.944644f, -0.316788f,
+        -0.164332f, -0.944838f, -0.283331f, -0.231454f, -0.944912f,
+        -0.231454f, -0.283331f, -0.944838f, -0.164333f, -0.316788f,
+        -0.944644f, -0.0853956f, -0.32852f, -0.944497f, -2.21665e-007f, 0f,
+        -0.638018f, -0.770021f, -0.200298f, -0.638567f, -0.743043f,
+        -0.385805f, -0.639287f, -0.665182f, -0.543581f, -0.639562f,
+        -0.543581f, -0.665181f, -0.639287f, -0.385806f, -0.743043f,
+        -0.638567f, -0.2003f, -0.770021f, -0.638018f, -1.57625e-007f,
+        -0.260274f, 7.99307e-010f, -0.965535f, -0.501718f, 5.72886e-009f,
+        -0.865031f, -0.865031f, 2.65819e-008f, -0.501719f, -0.965534f,
+        2.69333e-008f, -0.260276f, -0.0226746f, -0.999743f, -1.91442e-007f,
+        -0.0218614f, -0.999744f, 0.00589289f, -0.0195486f, -0.999745f,
+        0.011338f, -0.0159681f, -0.999745f, 0.0159679f, -0.0113382f,
+        -0.999745f, 0.0195484f, -0.0058931f, -0.999744f, 0.0218612f, 0f,
+        -0.999743f, 0.0226744f, -0.0623783f, -0.998053f, -2.04538e-007f,
+        -0.0601415f, -0.998058f, 0.0162119f, -0.0537793f, -0.998066f,
+        0.0311918f, -0.0439291f, -0.998068f, 0.0439289f, -0.031192f,
+        -0.998066f, 0.0537791f, -0.0162121f, -0.998058f, 0.0601414f, 0f,
+        -0.998053f, 0.0623782f, -0.136353f, -0.989978f, 0.0367559f,
+        -0.121932f, -0.990016f, 0.0707206f, -0.0996006f, -0.99003f,
+        0.0996005f, -0.0707209f, -0.990016f, 0.121932f, -0.0367563f,
+        -0.989978f, 0.136353f, 0f, -0.98995f, 0.141421f, -0.328521f,
+        -0.944497f, -2.1827e-007f, -0.316789f, -0.944644f, 0.0853949f,
+        -0.283332f, -0.944838f, 0.164332f, -0.231455f, -0.944911f,
+        0.231454f, -0.164333f, -0.944837f, 0.283332f, -0.0853956f,
+        -0.944644f, 0.316789f, 0f, -0.944497f, 0.328521f, -0.770023f,
+        -0.638016f, -1.53325e-007f, -0.743045f, -0.638564f, 0.200299f,
+        -0.665184f, -0.639284f, 0.385806f, -0.543582f, -0.63956f,
+        0.543582f, -0.385807f, -0.639284f, 0.665183f, -0.2003f, -0.638564f,
+        0.743045f, 0f, -0.638016f, 0.770023f, -0.965535f, -2.69333e-008f,
+        0.260274f, -0.865031f, -2.6582e-008f, 0.501718f, -0.707107f,
+        -1.58051e-008f, 0.707107f, -0.501719f, -5.7289e-009f, 0.865031f,
+        -0.260276f, -7.9932e-010f, 0.965534f, 0.00589307f, -0.999744f,
+        0.0218612f, 0.0113382f, -0.999745f, 0.0195484f, 0.0159681f,
+        -0.999745f, 0.0159679f, 0.0195486f, -0.999745f, 0.011338f,
+        0.0218614f, -0.999744f, 0.00589292f, 0.0226746f, -0.999743f,
+        -1.91442e-007f, 0.016212f, -0.998058f, 0.0601414f, 0.0311919f,
+        -0.998066f, 0.0537791f, 0.0439291f, -0.998068f, 0.0439289f,
+        0.0537792f, -0.998066f, 0.0311918f, 0.0601415f, -0.998058f,
+        0.016212f, 0.0623783f, -0.998053f, -2.04538e-007f, 0.0367561f,
+        -0.989978f, 0.136353f, 0.0707208f, -0.990016f, 0.121932f,
+        0.0996006f, -0.99003f, 0.0996005f, 0.121932f, -0.990016f,
+        0.0707208f, 0.136353f, -0.989978f, 0.0367561f, 0.0853951f,
+        -0.944644f, 0.316789f, 0.164332f, -0.944838f, 0.283332f, 0.231455f,
+        -0.944911f, 0.231454f, 0.283332f, -0.944837f, 0.164333f, 0.316789f,
+        -0.944644f, 0.0853954f, 0.328521f, -0.944497f, -2.1827e-007f,
+        0.200299f, -0.638564f, 0.743045f, 0.385806f, -0.639284f, 0.665184f,
+        0.543582f, -0.63956f, 0.543582f, 0.665183f, -0.639284f, 0.385807f,
+        0.743045f, -0.638565f, 0.2003f, 0.770023f, -0.638016f,
+        -1.53325e-007f, 0.260274f, -7.99307e-010f, 0.965535f, 0.501718f,
+        -5.72886e-009f, 0.865031f, 0.707107f, -1.58051e-008f, 0.707107f,
+        0.865031f, -2.65819e-008f, 0.501719f, 0.965534f, -2.69333e-008f,
+        0.260276f, 0.000169553f, -1f, 4.55269e-005f, 0.000151615f, -1f,
+        8.7758e-005f, 0.000123845f, -1f, 0.000123666f, 8.79365e-005f, -1f,
+        0.000151436f, 4.57054e-005f, -1f, 0.000169374f, 0f, -1f,
+        0.000175681f, -4.57057e-005f, -1f, 0.000169374f, -8.79367e-005f,
+        -1f, 0.000151436f, -0.000123845f, -1f, 0.000123666f, -0.000151615f,
+        -1f, 8.77577e-005f, -0.000169553f, -1f, 4.55266e-005f,
+        -0.00017586f, -1f, -1.78936e-007f, -0.141421f, -0.98995f,
+        -2.18023e-007f, 0f, -1f, -0.000176026f, -4.57022e-005f, -1f,
+        -0.000169719f, -8.79303e-005f, -1f, -0.000151783f, -0.000123836f,
+        -1f, -0.000124015f, -0.000151604f, -1f, -8.81092e-005f,
+        -0.00016954f, -1f, -4.58813e-005f, -0.000175847f, -1f,
+        -1.78936e-007f, 0.141421f, -0.98995f, -2.18023e-007f, 0.000175847f,
+        -1f, -1.78936e-007f, 0.000169541f, -1f, -4.58811e-005f,
+        0.000151604f, -1f, -8.81091e-005f, 0.000123836f, -1f,
+        -0.000124015f, 8.79306e-005f, -1f, -0.000151783f, 4.57025e-005f,
+        -1f, -0.000169719f, 0.423155f, 0.801174f, 0.423155f, 0.300386f,
+        0.800964f, 0.517905f, 0.15602f, 0.800417f, 0.578784f, 0f, 0.8f,
+        0.6f, 0.000884181f, 0.999999f, 0.000884182f, 0.0006461f, 0.999999f,
+        0.00107175f, 0.000305924f, 0.999999f, 0.00121748f, 0f, 0.999999f,
+        0.001257f, 0.00125688f, 0.999999f, 0f, 0.00121716f, 0.999999f,
+        -0.000305839f, 0.00107193f, 0.999999f, -0.000646202f, 0.00088386f,
+        0.999999f, -0.00088386f, 0.000626479f, 0.999999f, -0.00108364f,
+        0.000335298f, 0.999999f, -0.00120914f, 0f, 0.999999f, -0.00125688f,
+        -0.000305839f, 0.999999f, -0.00121716f, -0.000646202f, 0.999999f,
+        -0.00107193f, -0.00088386f, 0.999999f, -0.00088386f, -0.00108364f,
+        0.999999f, -0.000626479f, -0.00120914f, 0.999999f, -0.000335298f,
+        -0.00125688f, 0.999999f, 0f, 0.517904f, 0.800965f, -0.300385f,
+        0.300384f, 0.800965f, -0.517904f, 0.15602f, 0.800418f, -0.578782f,
+        0f, 0.800001f, -0.599999f, -0.15602f, 0.800418f, -0.578783f,
+        -0.300385f, 0.800965f, -0.517903f, -0.517904f, 0.800965f,
+        -0.300384f, -0.15602f, 0.800417f, 0.578783f, -0.300384f, 0.800964f,
+        0.517905f, -0.423155f, 0.801174f, 0.423155f, 0f, 0.999999f,
+        0.00125701f, -0.000335262f, 0.999999f, 0.00120901f, -0.000626413f,
+        0.999999f, 0.00108353f, -0.00088419f, 0.999999f, 0.00088419f,
+        -0.00107176f, 0.999999f, 0.000646106f, -0.00121749f, 0.999999f,
+        0.000305927f, -0.00125701f, 0.999999f, 0f, 0.366221f, -0.855433f,
+        -0.36622f, -0.497164f, 0.711096f, -0.497162f, -0.6f, 0.8f, 0f,
+        -0.267367f, 0.443287f, 0.855577f, -0.0149983f, 0.999888f, 0f, -1f,
+        0f, 0f, -0.811257f, -0.584689f, -4.21204e-009f, 0.811257f,
+        -0.584689f, -4.21204e-009f, -0.6981f, -0.716f, -1.86057e-008f,
+        0.6981f, -0.716f, -1.86057e-008f, -0.636383f, -0.771373f,
+        -5.10224e-008f, 0.636383f, -0.771373f, -5.10224e-008f, -0.675056f,
+        -0.737767f, -1.01053e-007f, 0.675056f, -0.737767f, -1.01053e-007f,
+        0.965535f, -2.6933e-008f, 0.260274f, 0.902861f, 0.429933f, 0f,
+        0.637936f, 0.431366f, -0.637936f, 0f, 0.429933f, -0.902861f,
+        -0.637936f, 0.431366f, -0.637936f, -0.902861f, 0.429933f, 0f, 0f,
+        0.429933f, 0.902861f, -0.637936f, 0.431366f, 0.637936f, -0.556737f,
+        0.830689f, 0f, 0.637936f, 0.431366f, 0.637936f, 0f, -0.156768f,
+        -0.987635f, -0.148341f, 0.988936f, 0f, 0.148341f, 0.988936f, 0 };
+
+    float lightAmbient[] = { 0.2f, 0.2f, 0.2f, 1 };
+    float lightDiffuse[] = { 1.0f, 0.6f, 0.0f, 1 };
+    float matAmbient[] = { 0.6f, 0.6f, 0.6f, 1.0f };
+    float matDiffuse[] = { 1.0f, 1.0f, 1.0f, 1.0f };
+    float matSpecular[] = { 1.0f, 1.0f, 1.0f, 1.0f };
+    float lightPosition[] = { 0, 0, 1.0f, 0 };
+    float lightShininess = 100.0f;
+    float zNear = 0.1f, zFar = 1000.0f, fieldOfView = 60.0f;
+    float kTeapotScale = 3.0f;
+
+    float size;
+    float kFilteringFactor = 0.1f;
+
+    private Tester mTester;
+    private float xspeed;
+    private float yspeed;
+    private float zspeed;
+
+    public TeapotRenderer(float _xspeed, float _yspeed, float _zspeed, Tester tester) {
+        // mContext = context;
+        xspeed = _xspeed;
+        yspeed = _yspeed;
+        zspeed = _zspeed;
+        mTester = tester;
+        teapot = new Teapot();
+        teapot.setSpeedAndTester(xspeed, yspeed, zspeed, mTester);
+        Log.d("glesteapot", "TeapotRender");
+    }
+
+    public int[] getConfigSpec() {
+        // We don't need a depth buffer, and don't care about our
+        // color depth.
+        int[] configSpec = { EGL10.EGL_DEPTH_SIZE, 0, EGL10.EGL_NONE };
+        Log.d("glesteapot", "TeapotRender getConfigSpec");
+        return configSpec;
+    }
+
+    public void onSurfaceCreated(GL10 gl, EGLConfig config) {
+        int w = 0, h =0;
+        
+        gl.glHint(GL10.GL_PERSPECTIVE_CORRECTION_HINT, GL10.GL_FASTEST);
+        gl.glViewport(0, 0, w, h);
+
+        gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);
+        gl.glEnableClientState(GL10.GL_NORMAL_ARRAY);
+        gl.glEnable(GL10.GL_DEPTH_TEST);
+        gl.glEnable(GL10.GL_CULL_FACE);
+        gl.glShadeModel(GL10.GL_SMOOTH);
+
+        gl.glEnable(GL10.GL_LIGHTING);
+        gl.glEnable(GL10.GL_LIGHT0);
+        gl.glMaterialfv(GL10.GL_FRONT_AND_BACK, GL10.GL_AMBIENT, matAmbient, 0);
+        gl.glMaterialfv(GL10.GL_FRONT_AND_BACK, GL10.GL_DIFFUSE, matDiffuse, 0);
+        gl.glMaterialfv(GL10.GL_FRONT_AND_BACK, GL10.GL_SPECULAR, matSpecular,0);
+        gl.glMaterialf(GL10.GL_FRONT_AND_BACK, GL10.GL_SHININESS, lightShininess);
+        gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_AMBIENT, lightAmbient, 0);
+        gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_DIFFUSE, lightDiffuse, 0);
+        gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_POSITION, lightPosition, 0);
+        gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);
+        gl.glEnableClientState(GL10.GL_NORMAL_ARRAY);
+        gl.glVertexPointer(3, GL10.GL_FLOAT, 0, fillFloatBuffer(teapot_vertices));
+        gl.glNormalPointer(GL10.GL_FLOAT, 0, fillFloatBuffer(teapot_normals));
+        gl.glEnable(GL10.GL_NORMALIZE);
+
+        Log.d("glesteapot", "TeapotRender surfaceCreated()");
+    }
+
+    private FloatBuffer fillFloatBuffer(float[] mat) {
+        ByteBuffer vbb = ByteBuffer.allocateDirect(mat.length * 4);
+        vbb.order(ByteOrder.nativeOrder());
+        FloatBuffer tmpBuffer = vbb.asFloatBuffer();
+        tmpBuffer.put(mat);
+        tmpBuffer.position(0);
+        return tmpBuffer;
+    }
+
+    public void onDrawFrame(GL10 gl) {
+        teapot.draw(gl);
+    }
+
+    public void onSurfaceChanged(GL10 gl, int w, int h) {
+        gl.glViewport(0, 0, w, h);
+
+        float ratio = (float) w / h;
+
+        gl.glMatrixMode(GL10.GL_PROJECTION);
+        gl.glLoadIdentity();
+        size = (float) (zNear * Math.tan((fieldOfView / 180 * 3.14) / 2.0));
+        gl.glFrustumf(-size, size, -size / ratio, size / ratio, zNear, zFar);
+        gl.glMatrixMode(GL10.GL_MODELVIEW);
+
+        gl.glClearColor(0, 0, 0, 0);
+        gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
+        gl.glLoadIdentity();
+        gl.glTranslatef(0.0f, -0.1f, -1.0f);
+        gl.glScalef(kTeapotScale, kTeapotScale, kTeapotScale);
+        Log.d("glesteapot", "sizeChanged: " + w + ", " + h);
+    }
+
+    public void onSensorChanged(float[] values) {
+        teapot.onSensorValueChanged(values);
+    }
+
+    public void setSensor(int sensorId) {
+        teapot.setSensor(sensorId);
+    }
+
+    private Teapot teapot;
+}
+
+class Teapot {
+    float kFilteringFactor = 0.1f;
+    float[] m2;
+    float sensorValues[] = new float[3];
+    float _accelerometer[] = new float[3];
+    private int sensorMode;
+
+    private float xrot = 0;
+    private float yrot = 0;
+    private float zrot = 0;
+    static short teapot_indices[] = { 1122, 1243, 1272, 1242, 1273, 1241, 1274,
+        1240, 1275, 1239, 1276, 1238, 1277, 1205, 1278, 1204, 1279, 1203,
+        1280, 1202, 1281, 1201, 1282, 1200, 1283, 1199, -1, 1243, 1249,
+        1242, 1248, 1241, 1247, 1240, 1246, 1239, 1245, 1238, 1244, 1205,
+        1212, 1204, 1211, 1203, 1210, 1202, 1209, 1201, 1208, 1200, 1207,
+        1199, 1206, -1, 1249, 1136, 1248, 1254, 1247, 1253, 1246, 1252,
+        1245, 1251, 1244, 1250, 1212, 1218, 1211, 1217, 1210, 1216, 1209,
+        1215, 1208, 1214, 1207, 1213, 1206, 1180, -1, 1136, 1260, 1254,
+        1259, 1253, 1258, 1252, 1257, 1251, 1256, 1250, 1255, 1218, 1225,
+        1217, 1224, 1216, 1223, 1215, 1222, 1214, 1221, 1213, 1220, 1180,
+        1219, -1, 1260, 1266, 1259, 1265, 1258, 1264, 1257, 1263, 1256,
+        1262, 1255, 1261, 1225, 1232, 1224, 1231, 1223, 1230, 1222, 1229,
+        1221, 1228, 1220, 1227, 1219, 1226, -1, 1266, 384, 1265, 1271,
+        1264, 1270, 1263, 1269, 1262, 1268, 1261, 1267, 1232, 390, 1231,
+        1237, 1230, 1236, 1229, 1235, 1228, 1234, 1227, 1233, 1226, 426,
+        -1, 462, 1188, 1195, 1189, 1196, 1190, 459, 1191, 1197, 1192, 1198,
+        1193, 426, 1194, -1, 1188, 1181, 1189, 1182, 1190, 1183, 1191,
+        1184, 1192, 1185, 1193, 1186, 1194, 1187, -1, 1181, 1142, 1182,
+        1175, 1183, 1176, 1184, 1177, 1185, 1178, 1186, 1179, 1187, 1284,
+        -1, 1142, 1168, 1175, 1169, 1176, 1170, 1177, 1171, 1178, 1172,
+        1179, 1173, 1284, 1174, -1, 1168, 1161, 1169, 1162, 1170, 1163,
+        1171, 1164, 1172, 1165, 1173, 1166, 1174, 1167, -1, 1161, 1285,
+        1162, 1286, 1163, 1287, 1164, 1288, 1165, 1289, 1166, 1290, 1167,
+        1291, -1, 384, 1150, 1157, 1151, 1158, 1152, 490, 1153, 1159, 1154,
+        1160, 1155, 462, 1156, -1, 1150, 1143, 1151, 1144, 1152, 1145,
+        1153, 1146, 1154, 1147, 1155, 1148, 1156, 1149, -1, 1143, 1292,
+        1144, 1137, 1145, 1138, 1146, 1139, 1147, 1140, 1148, 1141, 1149,
+        1142, -1, 1292, 1129, 1137, 1130, 1138, 1131, 1139, 1132, 1140,
+        1133, 1141, 1134, 1142, 1135, -1, 1129, 1121, 1130, 1123, 1131,
+        1124, 1132, 1125, 1133, 1126, 1134, 1127, 1135, 1128, -1, 1121,
+        1293, 1123, 1294, 1124, 1295, 1125, 1296, 1126, 1297, 1127, 1298,
+        1128, 1285, -1, 902, 1024, 901, 1023, 900, 1022, 899, 1021, 898,
+        1020, 897, 1019, 862, 983, 861, 982, 860, 981, 859, 980, 858, 979,
+        857, 978, 856, 977, -1, 856, 849, 857, 850, 858, 851, 1299, 852,
+        1300, 853, 1301, 854, 1302, 855, -1, 849, 842, 850, 843, 851, 844,
+        852, 845, 853, 846, 854, 847, 855, 848, -1, 842, 835, 843, 836,
+        844, 837, 845, 838, 846, 839, 847, 840, 848, 841, -1, 835, 828,
+        836, 829, 837, 830, 838, 831, 839, 832, 840, 833, 841, 834, -1,
+        828, 818, 829, 820, 830, 822, 831, 824, 832, 825, 833, 826, 834,
+        827, -1, 818, 819, 820, 821, 822, 823, 824, 1303, 825, 1304, 826,
+        1305, 827, 1306, -1, 1307, 948, 1308, 947, 1309, 946, 1310, 945,
+        1311, 944, 1312, 943, 1313, 909, 1314, 908, 1315, 907, 1316, 906,
+        1317, 905, 1318, 904, 1319, 903, -1, 948, 954, 947, 953, 946, 952,
+        945, 951, 944, 950, 943, 949, 909, 916, 908, 915, 907, 914, 906,
+        913, 905, 912, 904, 911, 903, 910, -1, 954, 835, 953, 959, 952,
+        958, 951, 957, 950, 956, 949, 955, 916, 922, 915, 921, 914, 920,
+        913, 919, 912, 918, 911, 917, 910, 882, -1, 835, 965, 959, 964,
+        958, 963, 957, 962, 956, 961, 955, 960, 922, 929, 921, 928, 920,
+        927, 919, 926, 918, 925, 917, 924, 882, 923, -1, 965, 971, 964,
+        970, 963, 969, 962, 968, 961, 967, 960, 966, 929, 936, 928, 935,
+        927, 934, 926, 933, 925, 932, 924, 931, 923, 930, -1, 971, 856,
+        970, 976, 969, 975, 968, 974, 967, 973, 966, 972, 936, 942, 935,
+        941, 934, 940, 933, 939, 932, 938, 931, 937, 930, 902, -1, 856,
+        977, 976, 1095, 1320, 1094, 974, 1093, 1321, 1092, 1322, 1091,
+        1323, 1060, 1324, 1059, 1325, 1058, 939, 1057, 1326, 1056, 937,
+        1055, 902, 1024, -1, 1302, 890, 1327, 891, 1328, 892, 1329, 893,
+        900, 894, 901, 895, 902, 896, -1, 890, 883, 891, 884, 892, 885,
+        893, 886, 894, 887, 895, 888, 896, 889, -1, 883, 841, 884, 877,
+        885, 878, 886, 879, 887, 880, 888, 881, 889, 882, -1, 841, 870,
+        877, 871, 878, 872, 879, 873, 880, 874, 881, 875, 882, 876, -1,
+        870, 863, 871, 864, 872, 865, 873, 866, 874, 867, 875, 868, 876,
+        869, -1, 863, 1330, 864, 1331, 865, 1332, 866, 1333, 867, 1334,
+        868, 1335, 869, 1336, -1, 787, 780, 813, 808, 814, 809, 815, 810,
+        816, 811, 817, 812, 781, 774, 782, 775, 783, 776, 784, 777, 785,
+        778, 786, 779, 787, 780, -1, 774, 767, 775, 768, 776, 769, 777,
+        770, 778, 771, 779, 772, 780, 773, -1, 767, 760, 768, 761, 769,
+        762, 770, 763, 771, 764, 772, 765, 773, 766, 803, 798, 804, 799,
+        805, 800, 806, 801, 807, 802, 767, 760, -1, 767, 774, 807, 812,
+        806, 811, 805, 810, 804, 809, 803, 808, 773, 780, -1, 760, 753,
+        761, 754, 762, 755, 763, 756, 764, 757, 765, 758, 766, 759, 798,
+        793, 799, 794, 800, 795, 801, 796, 802, 797, 760, 753, -1, 759,
+        752, 793, 788, 794, 789, 795, 790, 796, 791, 797, 792, 753, 746,
+        -1, 752, 703, 788, 741, 789, 742, 790, 743, 791, 744, 792, 745,
+        746, 697, 747, 698, 748, 699, 749, 700, 750, 701, 751, 702, 752,
+        703, -1, 752, 759, 751, 758, 750, 757, 749, 756, 748, 755, 747,
+        754, 746, 753, -1, 703, 734, 1337, 735, 742, 736, 743, 737, 744,
+        738, 1338, 739, 1339, 740, -1, 734, 727, 735, 728, 736, 729, 737,
+        730, 738, 731, 739, 732, 740, 733, -1, 727, 682, 728, 722, 729,
+        723, 730, 724, 731, 725, 732, 726, 733, 676, -1, 682, 716, 722,
+        717, 723, 718, 724, 719, 725, 720, 726, 721, 676, 669, -1, 716,
+        704, 717, 705, 718, 707, 719, 709, 720, 711, 721, 713, 669, 715,
+        -1, 704, 668, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
+        715, 656, -1, 1339, 690, 698, 691, 1340, 692, 700, 693, 701, 694,
+        702, 695, 703, 696, -1, 690, 683, 691, 684, 692, 685, 693, 686,
+        694, 687, 695, 688, 696, 689, -1, 683, 676, 684, 677, 685, 678,
+        686, 679, 687, 680, 688, 681, 689, 682, -1, 676, 669, 677, 670,
+        678, 671, 679, 672, 680, 673, 681, 674, 682, 675, -1, 669, 655,
+        670, 657, 671, 659, 672, 661, 673, 663, 674, 665, 675, 667, -1,
+        655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
+        668, -1, 624, 618, 650, 645, 651, 646, 652, 647, 653, 648, 654,
+        649, 266, 612, -1, 266, 612, 619, 613, 620, 614, 621, 615, 622,
+        616, 623, 617, 624, 618, -1, 612, 605, 613, 606, 614, 607, 615,
+        608, 616, 609, 617, 610, 618, 611, 645, 640, 646, 641, 647, 642,
+        648, 643, 649, 644, 612, 605, -1, 605, 598, 606, 599, 607, 600,
+        608, 601, 609, 602, 610, 603, 611, 604, 640, 635, 641, 636, 642,
+        637, 643, 638, 644, 639, 605, 598, -1, 604, 597, 635, 630, 636,
+        631, 637, 632, 638, 633, 639, 634, 598, 591, -1, 597, 590, 630,
+        625, 631, 626, 632, 627, 633, 628, 634, 629, 591, 584, -1, 590,
+        541, 625, 579, 626, 580, 627, 581, 628, 582, 629, 583, 584, 535,
+        585, 536, 586, 537, 587, 538, 588, 539, 589, 540, 590, 541, -1,
+        590, 597, 589, 596, 588, 595, 587, 594, 586, 593, 585, 592, 584,
+        591, -1, 597, 604, 596, 603, 595, 602, 594, 601, 593, 600, 592,
+        599, 591, 598, -1, 541, 572, 579, 573, 580, 574, 581, 575, 582,
+        576, 583, 577, 535, 578, -1, 572, 565, 573, 566, 574, 567, 575,
+        568, 576, 569, 577, 570, 578, 571, -1, 565, 520, 566, 560, 567,
+        561, 568, 562, 569, 563, 570, 564, 571, 514, -1, 520, 553, 560,
+        554, 561, 555, 562, 556, 563, 557, 564, 558, 514, 559, -1, 553,
+        505, 554, 542, 555, 544, 556, 546, 557, 548, 558, 550, 559, 552,
+        -1, 505, 506, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
+        552, 494, -1, 535, 528, 536, 529, 537, 530, 538, 531, 539, 532,
+        540, 533, 541, 534, -1, 528, 521, 529, 522, 530, 523, 531, 524,
+        532, 525, 533, 526, 534, 527, -1, 521, 514, 522, 515, 523, 516,
+        524, 517, 525, 518, 526, 519, 527, 520, -1, 514, 507, 515, 508,
+        516, 509, 517, 510, 518, 511, 519, 512, 520, 513, -1, 507, 493,
+        508, 495, 509, 497, 510, 499, 511, 501, 512, 503, 513, 1341, -1,
+        493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 1341,
+        506, -1, 216, 349, 348, 467, 347, 466, 346, 465, 345, 464, 344,
+        463, 310, 432, 309, 431, 308, 430, 307, 429, 306, 428, 305, 427,
+        1342, 396, -1, 349, 356, 467, 472, 466, 471, 465, 470, 464, 469,
+        463, 468, 432, 438, 431, 437, 430, 436, 429, 435, 428, 434, 427,
+        433, 396, 402, -1, 356, 363, 472, 477, 471, 476, 470, 475, 469,
+        474, 468, 473, 438, 444, 437, 443, 436, 442, 435, 441, 434, 440,
+        433, 439, 402, 408, -1, 363, 370, 477, 482, 476, 481, 475, 480,
+        474, 479, 473, 478, 444, 450, 443, 449, 442, 448, 441, 447, 440,
+        446, 439, 445, 408, 414, -1, 370, 377, 482, 487, 481, 486, 480,
+        485, 479, 484, 478, 483, 450, 456, 449, 455, 448, 454, 447, 453,
+        446, 452, 445, 451, 414, 420, -1, 377, 384, 487, 492, 486, 491,
+        485, 490, 484, 489, 483, 488, 456, 462, 455, 461, 454, 460, 453,
+        459, 452, 458, 451, 457, 420, 426, -1, 1342, 396, 265, 395, 264,
+        394, 263, 393, 262, 392, 261, 391, 222, 355, 221, 354, 220, 353,
+        219, 352, 218, 351, 217, 350, 216, 349, -1, 396, 1343, 395, 401,
+        394, 400, 393, 399, 392, 398, 391, 397, 355, 362, 354, 361, 353,
+        360, 352, 359, 351, 358, 350, 357, 349, 1344, -1, 1343, 1345, 401,
+        407, 400, 406, 399, 405, 398, 404, 397, 403, 362, 369, 361, 368,
+        360, 367, 359, 366, 358, 365, 357, 364, 1344, 1346, -1, 1345, 1347,
+        407, 413, 406, 412, 405, 411, 404, 410, 403, 409, 369, 376, 368,
+        375, 367, 374, 366, 373, 365, 372, 364, 371, 1346, 1348, -1, 1347,
+        1349, 413, 419, 412, 418, 411, 417, 410, 416, 409, 415, 376, 383,
+        375, 382, 374, 381, 373, 380, 372, 379, 371, 378, 1348, 1350, -1,
+        1349, 426, 419, 425, 418, 424, 417, 423, 416, 422, 415, 421, 383,
+        390, 382, 389, 381, 388, 380, 387, 379, 386, 378, 385, 1350, 384,
+        -1, 42, 320, 319, 318, 317, 316, 174, 315, 314, 313, 312, 311, 137,
+        277, 276, 275, 274, 273, 134, 272, 271, 270, 269, 268, 92, 267, -1,
+        320, 326, 318, 325, 316, 324, 315, 323, 313, 322, 311, 321, 277,
+        284, 275, 283, 273, 282, 272, 281, 270, 280, 268, 279, 267, 278,
+        -1, 326, 195, 325, 331, 324, 330, 323, 329, 322, 328, 321, 327,
+        284, 290, 283, 289, 282, 288, 281, 287, 280, 286, 279, 285, 278,
+        246, -1, 195, 337, 331, 336, 330, 335, 329, 334, 328, 333, 327,
+        332, 290, 297, 289, 296, 288, 295, 287, 294, 286, 293, 285, 292,
+        246, 291, -1, 337, 343, 336, 342, 335, 341, 334, 340, 333, 339,
+        332, 338, 297, 304, 296, 303, 295, 302, 294, 301, 293, 300, 292,
+        299, 291, 298, -1, 343, 216, 342, 348, 341, 347, 340, 346, 339,
+        345, 338, 344, 304, 310, 303, 309, 302, 308, 301, 307, 300, 306,
+        299, 305, 298, 1342, -1, 222, 254, 261, 255, 262, 256, 263, 257,
+        264, 258, 265, 259, 1342, 260, -1, 254, 247, 255, 248, 256, 249,
+        257, 250, 258, 251, 259, 252, 260, 253, -1, 247, 201, 248, 241,
+        249, 242, 250, 243, 251, 244, 252, 245, 253, 246, -1, 201, 234,
+        241, 235, 242, 236, 243, 237, 244, 238, 245, 239, 246, 240, -1,
+        234, 223, 235, 224, 236, 226, 237, 228, 238, 229, 239, 231, 240,
+        233, -1, 223, 48, 224, 225, 226, 227, 228, 89, 229, 230, 231, 232,
+        233, 92, -1, 216, 209, 1351, 210, 218, 211, 219, 212, 220, 213,
+        221, 214, 222, 215, -1, 209, 202, 210, 203, 211, 204, 212, 205,
+        213, 206, 214, 207, 215, 208, -1, 202, 195, 203, 196, 204, 197,
+        205, 198, 206, 199, 207, 200, 208, 201, -1, 195, 188, 196, 189,
+        197, 190, 198, 191, 199, 192, 200, 193, 201, 194, -1, 188, 177,
+        189, 178, 190, 180, 191, 182, 192, 183, 193, 185, 194, 187, -1,
+        177, 42, 178, 179, 180, 181, 182, 45, 183, 184, 185, 186, 187, 48,
+        -1, 1, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 105,
+        104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 60, 93, -1, 148,
+        154, 146, 153, 144, 152, 142, 151, 140, 150, 138, 149, 104, 112,
+        102, 111, 100, 110, 98, 109, 96, 108, 94, 107, 93, 106, -1, 154,
+        21, 153, 159, 152, 158, 151, 157, 150, 156, 149, 155, 112, 118,
+        111, 117, 110, 116, 109, 115, 108, 114, 107, 113, 106, 72, -1, 21,
+        165, 159, 164, 158, 163, 157, 162, 156, 161, 155, 160, 118, 124,
+        117, 123, 116, 122, 115, 121, 114, 120, 113, 119, 72, 79, -1, 165,
+        171, 164, 170, 163, 169, 162, 168, 161, 167, 160, 166, 124, 131,
+        123, 130, 122, 129, 121, 128, 120, 127, 119, 126, 79, 125, -1, 171,
+        1352, 170, 176, 169, 175, 168, 1353, 167, 173, 166, 172, 131, 1354,
+        130, 136, 129, 135, 128, 1355, 127, 133, 126, 132, 125, 1356, -1,
+        1357, 80, 87, 81, 88, 82, 1358, 83, 90, 84, 91, 85, 1356, 86, -1,
+        80, 73, 81, 74, 82, 75, 83, 76, 84, 77, 85, 78, 86, 1359, -1, 73,
+        27, 74, 67, 75, 68, 76, 69, 77, 70, 78, 71, 1359, 72, -1, 27, 20,
+        67, 61, 68, 62, 69, 63, 70, 64, 71, 65, 72, 66, -1, 20, 12, 61, 49,
+        62, 51, 63, 53, 64, 55, 65, 57, 66, 59, -1, 12, 13, 49, 50, 51, 52,
+        53, 54, 55, 56, 57, 58, 59, 60, -1, 1352, 35, 43, 36, 44, 37, 1360,
+        38, 46, 39, 47, 40, 1357, 41, -1, 35, 28, 36, 29, 37, 30, 38, 31,
+        39, 32, 40, 33, 41, 34, -1, 28, 21, 29, 22, 30, 23, 31, 24, 32, 25,
+        33, 26, 34, 27, -1, 21, 14, 22, 15, 23, 16, 24, 17, 25, 18, 26, 19,
+        27, 20, -1, 14, 0, 15, 2, 16, 4, 17, 6, 18, 8, 19, 10, 20, 1361,
+        -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1361, 13, -1, 1024, 1055,
+        1061, 1062, 1068, 1069, 1075, 1076, 1082, 1083, 1089, 1090, -1,
+        1089, 1088, 1082, 1081, 1075, 1074, 1068, 1067, 1061, 1030, 1024,
+        1023, -1, 1030, 1067, 1036, 1073, 1042, 1079, 1048, 1085, 1054, -1,
+        1085, 1079, 1086, 1080, 1087, 1081, 1088, -1, 1081, 1080, 1074,
+        1073, 1067, -1, 1080, 1079, 1073, -1, 1055, 1056, 1062, 1063, 1069,
+        1070, 1076, 1077, 1083, 1084, 1090, 1116, -1, 1056, 1057, 1063,
+        1064, 1070, 1071, 1077, 1078, 1084, 1111, 1116, 1117, -1, 1057,
+        1058, 1064, 1065, 1071, 1072, 1078, 1106, 1111, 1112, 1117, 1118,
+        -1, 1058, 1059, 1065, 1066, 1072, 1101, 1106, 1107, 1112, 1113,
+        1118, 1119, -1, 1059, 1060, 1066, 1096, 1101, 1102, 1107, 1108,
+        1113, 1114, 1119, 1120, -1, 1060, 1091, 1096, 1097, 1102, 1103,
+        1108, 1109, 1114, 1115, 1120, 1012, -1, 1091, 1092, 1097, 1098,
+        1103, 1104, 1109, 1110, 1115, 1005, 1012, 1013, -1, 1092, 1093,
+        1098, 1099, 1104, 1105, 1110, 998, 1005, 1006, 1013, 1014, -1, 998,
+        1105, 991, 1100, 984, 1095, 977, -1, 1095, 1100, 1094, 1099, 1093,
+        -1, 1100, 1105, 1099, -1, 984, 977, 985, 978, 986, 979, 987, 980,
+        988, 981, 989, 982, 990, 983, 1025, 1019, 1026, 1020, 1027, 1021,
+        1028, 1022, 1029, 1023, 1030, -1, 1030, 1362, 1029, 1035, 1028,
+        1034, 1027, 1033, 1026, 1032, 1025, 1031, 990, 997, 989, 996, 988,
+        995, 987, 994, 986, 993, 985, 992, 984, 1363, -1, 1362, 1042, 1035,
+        1041, 1034, 1040, 1033, 1039, 1032, 1038, 1031, 1037, 997, 1004,
+        996, 1003, 995, 1002, 994, 1001, 993, 1000, 992, 999, 1363, 998,
+        -1, 998, 999, 1006, 1007, 1014, 1015, -1, 999, 1000, 1007, 1008,
+        1015, 1016, -1, 1000, 1001, 1008, 1009, 1016, 1017, -1, 1001, 1002,
+        1009, 1010, 1017, 1018, -1, 1002, 1003, 1010, 1011, 1018, 1049, -1,
+        1003, 1004, 1011, 1043, 1049, 1050, -1, 1004, 1037, 1043, 1044,
+        1050, 1051, -1, 1037, 1038, 1044, 1045, 1051, 1052, -1, 1038, 1039,
+        1045, 1046, 1052, 1053, -1, 1039, 1040, 1046, 1047, 1053, 1054, -1,
+        1054, 1047, 1048, 1041, 1042, -1, 1041, 1047, 1040, -1, };
+
+    private Tester mTester;
+    private float xspeed;
+    private float yspeed;
+    private float zspeed;
+
+    public void setSpeedAndTester(float _xspeed, float _yspeed, float _zspeed, Tester tester) {
+        xspeed = _xspeed;
+        yspeed = _yspeed;
+        zspeed = _zspeed;
+        mTester = tester;
+    }
+
+    public Teapot() {
+        ByteBuffer vbb = ByteBuffer.allocateDirect(teapot_indices.length * 4);
+        vbb.order(ByteOrder.nativeOrder());
+        mVertexBuffer = vbb.asShortBuffer();
+        mVertexBuffer.put(teapot_indices);
+        mVertexBuffer.position(0);
+        sensorMode = TeapotES.ACCEL_ID;
+        Log.d("glesteapot", "Teapot()");
+    }
+
+    public void setSensor(int sensor) {
+        sensorMode = sensor;
+    }
+
+    public void onSensorValueChanged(float[] values) {
+        sensorValues = values;
+    }
+
+    public void draw(GL10 gl) {
+        int num_teapot_indices = 2781;
+        int i = 0, start = 0;
+        float kTeapotScale = 3.0f;
+
+        gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
+        gl.glRotatef(xrot, 1, 0, 0);
+        gl.glRotatef(yrot, 0, 1, 0);
+        gl.glRotatef(zrot, 0, 0, 1);
+        gl.glRotatef(90.0f, 0, 0, -1);
+
+
+        while (i < num_teapot_indices) {
+            if (teapot_indices[i] == -1) {
+                gl.glDrawElements(GL10.GL_TRIANGLE_STRIP, i - start,
+                        GL10.GL_UNSIGNED_SHORT, mVertexBuffer.position(start));
+                start = i + 1;
+            }
+            i++;
+        }
+        if (start < num_teapot_indices)
+            gl.glDrawElements(GL10.GL_TRIANGLE_STRIP, i - start - 1,
+                    GL10.GL_UNSIGNED_SHORT, mVertexBuffer.position(start));
+        // Log.d("glesteapot", "draw");
+        gl.glLoadIdentity();
+        gl.glTranslatef(0.0f, -0.1f, -1.0f);
+        gl.glScalef(kTeapotScale, kTeapotScale, kTeapotScale);
+
+        xrot += xspeed;
+        yrot += yspeed;
+        zrot += zspeed;
+        gl.glFinish();
+        mTester.decreaseCounter();
+    }
+
+    private ShortBuffer mVertexBuffer;
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/itri/teapot/TeapotES.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/itri/teapot/TeapotES.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/itri/teapot/TeapotES.java	(revision 167997)
@@ -0,0 +1,80 @@
+/*
+ * Copyright (C) 2008-2009 Koansin Tan
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ * Origin: http://code.google.com/p/android-utah-teapot/
+ */
+
+package org.itri.teapot;
+
+import com.techain.runtime.Tester;
+
+import android.app.Activity;
+import android.os.Bundle;
+import android.view.Menu;
+import android.view.MenuItem;
+
+//public class TeapotES extends Tester implements SensorEventListener {
+public class TeapotES extends Tester {
+
+    public final static String FullName = "org.itri.teapot.TeapotES";
+
+    /** Our own OpenGL View overridden */
+    private MyGLSurfaceView mGLSurfaceView;
+
+    @Override
+    public String getTag() {
+        return "Teapot";
+    }
+
+    @Override
+    public int sleepBeforeStart() {
+        return 1200; // 1.2 second
+    }
+
+    @Override
+    public int sleepBetweenRound() {
+        return 1500; // 15 ms
+    }
+
+    @Override
+    protected void oneRound() {
+//        mGLSurfaceView.requestRender();
+    }
+    
+    public static final int ACCEL_ID = Menu.FIRST;
+    public static final int COMPASS_ID = Menu.FIRST + 1;
+    
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        mGLSurfaceView = new MyGLSurfaceView(this);
+        mGLSurfaceView.setRenderer(new TeapotRenderer(5,1,1,this));
+        setContentView(mGLSurfaceView);
+        startTester();
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+        mGLSurfaceView.onResume();
+    }
+
+    @Override
+    protected void onPause() {
+        super.onPause();
+        mGLSurfaceView.onPause();
+    }
+    
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/opensolaris/hub/libmicro/NativeTesterMicro.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/opensolaris/hub/libmicro/NativeTesterMicro.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/opensolaris/hub/libmicro/NativeTesterMicro.java	(revision 167997)
@@ -0,0 +1,486 @@
+/*
+ * Copyright (C) 2011 Linaro Limited
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ * Authored by Joseph Chang (bizkit) <bizkit@0xlab.org>
+ */
+
+package org.opensolaris.hub.libmicro;
+
+import com.techain.runtime.*;
+
+import android.os.Bundle;
+import android.content.Intent;
+import android.util.Log;
+
+import java.util.Arrays;
+import java.util.ArrayList;
+import java.util.List;
+
+public class NativeTesterMicro extends NativeTester {
+
+    public final String TAG = "TesterLibMicro";
+    private final double ERROR_VALUE = -1.0;
+    public static final String REPORT = "REPORT";
+    public static final String RESULT = "RESULT";
+    private static final String Opts = "-E -C 70 -L -S -W";
+    public static final List<String> COMMANDS  = Arrays.asList(
+
+        "getpid " + Opts + " -N getpid -I 5",
+
+        "getenv " + Opts + " -N getenv   -s 100 -I 100",
+        "getenv " + Opts + " -N getenvT2   -s 100 -I 100 -T 2",
+
+        "gettimeofday " + Opts + " -N gettimeofday",
+
+        "log " + Opts + " -N log  -I 20",
+
+        "exp " + Opts + " -N exp  -I 20",
+
+        "lrand48 " + Opts + " -N lrand48",
+
+        "memset " + Opts + " -N memset_10	-s 10	-I 10 ",
+        "memset " + Opts + " -N memset_256	-s 256	-I 20",
+        "memset " + Opts + " -N memset_256_u	-s 256	 -a 1 -I 20 ",
+        "memset " + Opts + " -N memset_1k	-s 1k	 -I 100",
+        "memset " + Opts + " -N memset_4k    -s 4k    -I 250",
+        "memset " + Opts + " -N memset_4k_uc -s 4k    -u -I 400",
+        "memset " + Opts + " -N memset_10k	-s 10k	-I 600	 ",
+        "memset " + Opts + " -N memset_1m	-s 1m	-I 200000",
+//        "memset " + Opts + " -N memset_10m	-s 10m -I 2000000 ",
+//        "memset " + Opts + " -N memsetP2_10m	-s 10m -P 2 -I 2000000 ",
+
+//        "memrand " + Opts + " -N memrand	-s 128m -B 10000",
+
+        "isatty " + Opts + " -N isatty_yes   ",
+//        "isatty " + Opts + " -N isatty_no  -f $IFILE",
+
+        "malloc " + Opts + " -N malloc_10    -s 10    -g 10 -I 50",
+        "malloc " + Opts + " -N malloc_100   -s 100   -g 10 -I 50",
+        "malloc " + Opts + " -N malloc_1k    -s 1k    -g 10 -I 50",
+        "malloc " + Opts + " -N malloc_10k   -s 10k   -g 10 -I 50",
+        "malloc " + Opts + " -N malloc_100k  -s 100k  -g 10 -I 2000",
+
+        "malloc " + Opts + " -N mallocT2_10    -s 10   -g 10 -T 2 -I 200",
+        "malloc " + Opts + " -N mallocT2_100   -s 100  -g 10 -T 2 -I 200",
+        "malloc " + Opts + " -N mallocT2_1k    -s 1k   -g 10 -T 2 -I 200",
+        "malloc " + Opts + " -N mallocT2_10k   -s 10k  -g 10 -T 2 -I 200",
+        "malloc " + Opts + " -N mallocT2_100k  -s 100k -g 10 -T 2 -I 10000",
+
+        "close " + Opts + " -N close_bad		-B 32		-b",
+//        "close " + Opts + " -N close_tmp		-B 32		-f $TFILE",
+//        "close " + Opts + " -N close_usr		-B 32		-f $VFILE",
+        "close " + Opts + " -N close_zero		-B 32		-f /dev/zero",
+
+        "memcpy " + Opts + " -N memcpy_10	-s 10	-I 10 ",
+        "memcpy " + Opts + " -N memcpy_1k	-s 1k	-I 50",
+        "memcpy " + Opts + " -N memcpy_10k	-s 10k	-I 800",
+//        "memcpy " + Opts + " -N memcpy_1m	-s 1m   -I 500000",
+//        "memcpy " + Opts + " -N memcpy_10m	-s 10m  -I 5000000",
+
+        "strcpy " + Opts + " -N strcpy_10	-s 10   -I 5 ",
+        "strcpy " + Opts + " -N strcpy_1k	-s 1k   -I 100",
+
+        "strlen " + Opts + " -N strlen_10	-s 10   -I 5",
+        "strlen " + Opts + " -N strlen_1k	-s 1k   -I 100",
+
+        "strchr " + Opts + " -N strchr_10	-s 10   -I 5",
+        "strchr " + Opts + " -N strchr_1k	-s 1k   -I 200",
+        "strcmp " + Opts + " -N strcmp_10	-s 10   -I 10",
+        "strcmp " + Opts + " -N strcmp_1k	-s 1k   -I 200",
+
+        "strcasecmp " + Opts + " -N scasecmp_10	-s 10 -I 50",
+        "strcasecmp " + Opts + " -N scasecmp_1k	-s 1k -I 20000",
+
+        "strtol " + Opts + " -N strtol      -I 20      ",
+
+        "mutex " + Opts + " -N mutex_st	-I 10",
+        "mutex " + Opts + " -N mutex_mt	-t -I 10	",
+        "mutex " + Opts + " -N mutex_T2     -T 2  -I 100",
+
+//        "longjmp " + Opts + " -N longjmp	-I 10",
+//        "siglongjmp " + Opts + " -N siglongjmp	-I 20",
+
+        "getrusage " + Opts + " -N getrusage	-I 200",
+
+        "times " + Opts + " -N times	-I 200",
+        "time " + Opts + " -N time		-I 50",
+        "localtime_r " + Opts + " -N localtime_r	-I 200  ",
+        "strftime " + Opts + " -N strftime -I 10000  ",
+
+        "mktime " + Opts + " -N mktime       -I 500   ",
+        "mktime " + Opts + " -N mktimeT2 -T 2 -I 1000 ",
+
+//        "cascade_mutex " + Opts + " -N c_mutex_1	-I 50",
+//        "cascade_mutex " + Opts + " -N c_mutex_10	-T 10 -I 5000",
+//        "cascade_mutex " + Opts + " -N c_mutex_200	-T 200	-I 2000000",
+
+//        "cascade_cond " + Opts + " -N c_cond_1	-I 100",
+//        "cascade_cond " + Opts + " -N c_cond_10	-T 10	-I 3000",
+//        "cascade_cond " + Opts + " -N c_cond_200	-T 200	-I 2000000",
+
+        "cascade_flock " + Opts + " -N c_flock	-I 1000	",
+        "cascade_flock " + Opts + " -N c_flock_10	-T 10   -I 50000",
+        "cascade_flock " + Opts + " -N c_flock_200	-T 200	-I 5000000",
+
+        "cascade_fcntl " + Opts + " -N c_fcntl_1	-I 2000 	",
+        "cascade_fcntl " + Opts + " -N c_fcntl_10	-T 10 -I 20000",
+        "cascade_fcntl " + Opts + " -N c_fcntl_200	-T 200	-I 5000000",
+
+        "file_lock " + Opts + " -N file_lock   -I 1000         ",
+
+        "getsockname " + Opts + " -N getsockname	-I 100",
+        "getpeername " + Opts + " -N getpeername	-I 100",
+
+//        "chdir " + Opts + " -N chdir_tmp	-I 2000		$TDIR1 $TDIR2",
+//        "chdir " + Opts + " -N chdir_usr	-I 2000		$VDIR1 $VDIR2",
+//
+//        "chdir " + Opts + " -N chgetwd_tmp	-I 3000	-g $TDIR1 $TDIR2",
+//        "chdir " + Opts + " -N chgetwd_usr	-I 3000	-g $VDIR1 $VDIR2",
+//
+//        "realpath " + Opts + " -N realpath_tmp -I 3000		-f $TDIR1",
+//        "realpath " + Opts + " -N realpath_usr	-I 3000	-f $VDIR1",
+//
+//        "stat " + Opts + " -N stat_tmp -I 1000		-f $TFILE",
+//        "stat " + Opts + " -N stat_usr -I 1000		-f $VFILE",
+
+//        "fcntl " + Opts + " -N fcntl_tmp	-I 100	-f $TFILE",
+//        "fcntl " + Opts + " -N fcntl_usr	-I 100	-f $VFILE",
+        "fcntl_ndelay " + Opts + " -N fcntl_ndelay	-I 100	",
+
+//        "lseek " + Opts + " -N lseek_t8k	-s 8k	-I 50	-f $TFILE",
+//        "lseek " + Opts + " -N lseek_u8k	-s 8k	-I 50	-f $VFILE",
+
+//        "open " + Opts + " -N open_tmp		-B 256		-f $TFILE",
+//        "open " + Opts + " -N open_usr		-B 256		-f $VFILE",
+        "open " + Opts + " -N open_zero		-B 256		-f /dev/zero",
+
+        "dup " + Opts + " -N dup			-B 512   ",
+
+        "socket " + Opts + " -N socket_u		-B 256",
+        "socket " + Opts + " -N socket_i		-B 256		-f PF_INET",
+
+        "socketpair " + Opts + " -N socketpair		-B 256",
+
+        "setsockopt " + Opts + " -N setsockopt		-I 200",
+
+        "bind " + Opts + " -N bind			-B 100",
+
+        "listen " + Opts + " -N listen		-B 100",
+
+//        "connection " + Opts + " -N connection		-B 256 ",
+
+        "poll " + Opts + " -N poll_10	-n 10	-I 500",
+        "poll " + Opts + " -N poll_100	-n 100	-I 1000",
+        "poll " + Opts + " -N poll_1000	-n 1000	-I 5000",
+
+        "poll " + Opts + " -N poll_w10	-n 10	-I 500		-w 1",
+        "poll " + Opts + " -N poll_w100	-n 100	-I 2000		-w 10",
+        "poll " + Opts + " -N poll_w1000	-n 1000	-I 40000	-w 100",
+
+        "select " + Opts + " -N select_10	-n 10	-I 500",
+        "select " + Opts + " -N select_100	-n 100	-I 1000",
+        "select " + Opts + " -N select_1000	-n 1000	-I 5000",
+
+        "select " + Opts + " -N select_w10	-n 10	-I 500		-w 1",
+        "select " + Opts + " -N select_w100	-n 100	-I 2000		-w 10",
+        "select " + Opts + " -N select_w1000	-n 1000	-I 40000        -w 100",
+
+        "sigaction " + Opts + " -N sigaction -I 100",
+        "signal " + Opts + " -N signal -I 1000",
+        "sigprocmask " + Opts + " -N sigprocmask -I 200",
+
+        "pthread_create   " + Opts + " -N pthread_8		-B 8",
+        "pthread_create   " + Opts + " -N pthread_32		-B 32",
+        "pthread_create   " + Opts + " -N pthread_128		-B 128",
+//        "pthread_create   " + Opts + " -N pthread_512		-B 512",
+
+//        "fork " + Opts + " -N fork_10		-B 10",
+//        "fork " + Opts + " -N fork_100		-B 100  -C 100",
+//        "fork " + Opts + " -N fork_1000		-B 1000 -C 50",
+
+//        "exit " + Opts + " -N exit_10		-B 10",
+//        "exit " + Opts + " -N exit_100		-B 100",
+//        "exit " + Opts + " -N exit_1000		-B 1000 -C 50",
+
+//        "exit " + Opts + " -N exit_10_nolibc	-e -B 10",
+
+//        "exec " + Opts + " -N exec -B 10",
+
+        "system " + Opts + " -N system -I 1000000",
+
+        "recurse " + Opts + " -N recurse		-B 512",
+
+//        "read " + Opts + " -N read_t1k	-s 1k			-f $TFILE",
+//        "read " + Opts + " -N read_t10k	-s 10k			-f $TFILE",
+//        "read " + Opts + " -N read_t100k	-s 100k			-f $TFILE",
+
+//        "read " + Opts + " -N read_u1k	-s 1k			-f $VFILE",
+//        "read " + Opts + " -N read_u10k	-s 10k			-f $VFILE",
+//        "read " + Opts + " -N read_u100k	-s 100k			-f $VFILE",
+
+        "read " + Opts + " -N read_z1k	-s 1k			-f /dev/zero ",
+        "read " + Opts + " -N read_z10k	-s 10k			-f /dev/zero ",
+        "read " + Opts + " -N read_z100k	-s 100k			-f /dev/zero ",
+        "read " + Opts + " -N read_zw100k	-s 100k	         -w	-f /dev/zero ",
+
+//        "write " + Opts + " -N write_t1k	-s 1k			-f $TFILE",
+//        "write " + Opts + " -N write_t10k	-s 10k			-f $TFILE",
+//        "write " + Opts + " -N write_t100k	-s 100k			-f $TFILE",
+
+//        "write " + Opts + " -N write_u1k	-s 1k			-f $VFILE",
+//        "write " + Opts + " -N write_u10k	-s 10k			-f $VFILE",
+//        "write " + Opts + " -N write_u100k	-s 100k			-f $VFILE",
+
+        "write " + Opts + " -N write_n1k	-s 1k	-I 100 -B 0	-f /dev/null ",
+        "write " + Opts + " -N write_n10k	-s 10k	-I 100 -B 0	-f /dev/null ",
+        "write " + Opts + " -N write_n100k	-s 100k	-I 100 -B 0	-f /dev/null ",
+
+//        "writev " + Opts + " -N writev_t1k	-s 1k			-f $TFILE",
+//        "writev " + Opts + " -N writev_t10k	-s 10k		        -f $TFILE",
+//        "writev " + Opts + " -N writev_t100k	-s 100k			-f $TFILE",
+
+//        "writev " + Opts + " -N writev_u1k	-s 1k			-f $VFILE",
+//        "writev " + Opts + " -N writev_u10k	-s 10k			-f $VFILE",
+//        "writev " + Opts + " -N writev_u100k	-s 100k			-f $VFILE",
+
+        "writev " + Opts + " -N writev_n1k	-s 1k	-I 100 -B 0	-f /dev/null ",
+        "writev " + Opts + " -N writev_n10k	-s 10k	-I 100 -B 0	-f /dev/null ",
+        "writev " + Opts + " -N writev_n100k	-s 100k	-I 100 -B 0	-f /dev/null ",
+
+//        "pread " + Opts + " -N pread_t1k	-s 1k	-I 300		-f $TFILE",
+//        "pread " + Opts + " -N pread_t10k	-s 10k	-I 1000		-f $TFILE",
+//        "pread " + Opts + " -N pread_t100k	-s 100k	-I 10000	-f $TFILE",
+
+//        "pread " + Opts + " -N pread_u1k	-s 1k	-I 300		-f $VFILE",
+//        "pread " + Opts + " -N pread_u10k	-s 10k	-I 1000		-f $VFILE",
+//        "pread " + Opts + " -N pread_u100k	-s 100k	-I 10000	-f $VFILE",
+
+        "pread " + Opts + " -N pread_z1k	-s 1k	-I 300		-f /dev/zero ",
+        "pread " + Opts + " -N pread_z10k	-s 10k	-I 1000		-f /dev/zero ",
+        "pread " + Opts + " -N pread_z100k	-s 100k	-I 2000	-f /dev/zero ",
+        "pread " + Opts + " -N pread_zw100k	-s 100k	-w -I 10000	-f /dev/zero ",
+
+//        "pwrite " + Opts + " -N pwrite_t1k	-s 1k	-I 500		-f $TFILE",
+//        "pwrite " + Opts + " -N pwrite_t10k	-s 10k	-I 1000		-f $TFILE",
+//        "pwrite " + Opts + " -N pwrite_t100k	-s 100k	-I 10000	-f $TFILE",
+
+//        "pwrite " + Opts + " -N pwrite_u1k	-s 1k	-I 500		-f $VFILE",
+//        "pwrite " + Opts + " -N pwrite_u10k	-s 10k	-I 1000		-f $VFILE",
+//        "pwrite " + Opts + " -N pwrite_u100k	-s 100k	-I 20000	-f $VFILE",
+
+        "pwrite " + Opts + " -N pwrite_n1k	-s 1k	-I 100		-f /dev/null ",
+        "pwrite " + Opts + " -N pwrite_n10k	-s 10k	-I 100		-f /dev/null ",
+        "pwrite " + Opts + " -N pwrite_n100k	-s 100k	-I 100		-f /dev/null ",
+
+        "mmap " + Opts + " -N mmap_z8k	-l 8k   -I 1000		-f /dev/zero",
+        "mmap " + Opts + " -N mmap_z128k	-l 128k	-I 2000		-f /dev/zero",
+//        "mmap " + Opts + " -N mmap_t8k	-l 8k	-I 1000		-f $TFILE",
+//        "mmap " + Opts + " -N mmap_t128k	-l 128k	-I 1000		-f $TFILE",
+//        "mmap " + Opts + " -N mmap_u8k	-l 8k	-I 1000		-f $VFILE",
+//        "mmap " + Opts + " -N mmap_u128k	-l 128k	-I 1000		-f $VFILE",
+        "mmap " + Opts + " -N mmap_a8k	-l 8k	-I 200		-f MAP_ANON",
+        "mmap " + Opts + " -N mmap_a128k	-l 128k	-I 200		-f MAP_ANON",
+
+
+        "mmap " + Opts + " -N mmap_rz8k	-l 8k	-I 2000 -r	-f /dev/zero",
+        "mmap " + Opts + " -N mmap_rz128k	-l 128k	-I 2000 -r	-f /dev/zero",
+//        "mmap " + Opts + " -N mmap_rt8k	-l 8k	-I 2000 -r	-f $TFILE",
+//        "mmap " + Opts + " -N mmap_rt128k	-l 128k	-I 20000 -r	-f $TFILE",
+//        "mmap " + Opts + " -N mmap_ru8k	-l 8k	-I 2000 -r	-f $VFILE",
+        "mmap " + Opts + " -N mmap_ru128k	-l 128k	-I 20000 -r	-f $VFILE",
+        "mmap " + Opts + " -N mmap_ra8k	-l 8k	-I 2000 -r	-f MAP_ANON",
+        "mmap " + Opts + " -N mmap_ra128k	-l 128k	-I 20000 -r	-f MAP_ANON",
+        "mmap " + Opts + " -N mmap_wz8k	-l 8k	-I 5000 -w	-f /dev/zero",
+        "mmap " + Opts + " -N mmap_wz128k	-l 128k	-I 50000 -w	-f /dev/zero",
+//        "mmap " + Opts + " -N mmap_wt8k	-l 8k	-I 5000 -w	-f $TFILE",
+//        "mmap " + Opts + " -N mmap_wt128k	-l 128k	-I 50000 -w	-f $TFILE",
+//        "mmap " + Opts + " -N mmap_wu8k	-l 8k	-I 5000 -w	-f $VFILE",
+//        "mmap " + Opts + " -N mmap_wu128k	-l 128k	-I 500000 -w	-f $VFILE",
+        "mmap " + Opts + " -N mmap_wa8k	-l 8k	-I 3000 -w	-f MAP_ANON",
+        "mmap " + Opts + " -N mmap_wa128k	-l 128k	-I 50000 -w	-f MAP_ANON",
+
+        "munmap " + Opts + " -N unmap_z8k	-l 8k   -I 500		-f /dev/zero",
+        "munmap " + Opts + " -N unmap_z128k	-l 128k	-I 500		-f /dev/zero",
+//        "munmap " + Opts + " -N unmap_t8k	-l 8k	-I 500		-f $TFILE",
+//        "munmap " + Opts + " -N unmap_t128k	-l 128k	-I 500		-f $TFILE",
+//        "munmap " + Opts + " -N unmap_u8k	-l 8k	-I 500		-f $VFILE",
+//        "munmap " + Opts + " -N unmap_u128k	-l 128k	-I 500		-f $VFILE",
+        "munmap " + Opts + " -N unmap_a8k	-l 8k	-I 500		-f MAP_ANON",
+        "munmap " + Opts + " -N unmap_a128k	-l 128k	-I 500		-f MAP_ANON",
+
+        "munmap " + Opts + " -N unmap_rz8k	-l 8k	-I 1000	-r	-f /dev/zero",
+        "munmap " + Opts + " -N unmap_rz128k	-l 128k	-I 2000 -r	-f /dev/zero",
+//        "munmap " + Opts + " -N unmap_rt8k	-l 8k	-I 1000	-r	-f $TFILE",
+//        "munmap " + Opts + " -N unmap_rt128k	-l 128k	-I 3000	-r	-f $TFILE",
+//        "munmap " + Opts + " -N unmap_ru8k	-l 8k	-I 1000	-r	-f $VFILE",
+//        "munmap " + Opts + " -N unmap_ru128k	-l 128k	-I 3000	-r	-f $VFILE",
+        "munmap " + Opts + " -N unmap_ra8k	-l 8k	-I 1000	-r	-f MAP_ANON",
+        "munmap " + Opts + " -N unmap_ra128k	-l 128k	-I 2000	-r	-f MAP_ANON",
+
+//        "connection " + Opts + " -N conn_connect		-B 256 	-c",
+
+        "munmap " + Opts + " -N unmap_wz8k	-l 8k	-I 1000	-w	-f /dev/zero",
+        "munmap " + Opts + " -N unmap_wz128k	-l 128k	-I 8000	-w	-f /dev/zero",
+//        "munmap " + Opts + " -N unmap_wt8k	-l 8k	-I 1000	-w	-f $TFILE",
+//        "munmap " + Opts + " -N unmap_wt128k	-l 128k	-I 10000	-w	-f $TFILE",
+//        "munmap " + Opts + " -N unmap_wu8k	-l 8k	-I 1000	-w	-f $VFILE",
+//        "munmap " + Opts + " -N unmap_wu128k	-l 128k	-I 50000	-w	-f $VFILE",
+        "munmap " + Opts + " -N unmap_wa8k	-l 8k	-I 1000	-w	-f MAP_ANON",
+        "munmap " + Opts + " -N unmap_wa128k	-l 128k	-I 10000	-w	-f MAP_ANON",
+
+
+        "mprotect " + Opts + " -N mprot_z8k	-l 8k  -I 300			-f /dev/zero",
+        "mprotect " + Opts + " -N mprot_z128k	-l 128k	-I 500		-f /dev/zero",
+        "mprotect " + Opts + " -N mprot_wz8k	-l 8k	-I 500	-w	-f /dev/zero",
+        "mprotect " + Opts + " -N mprot_wz128k	-l 128k	-I 1000	-w	-f /dev/zero",
+        "mprotect " + Opts + " -N mprot_twz8k  -l 8k   -I 1000 -w -t   -f /dev/zero",
+        "mprotect " + Opts + " -N mprot_tw128k -l 128k -I 2000 -w -t   -f /dev/zero",
+        "mprotect " + Opts + " -N mprot_tw4m   -l 4m   -w -t -B 1  -f /dev/zero",
+
+        "pipe " + Opts + " -N pipe_pst1	-s 1	-I 1000	-x pipe -m st",
+        "pipe " + Opts + " -N pipe_pmt1	-s 1	-I 8000	-x pipe -m mt",
+        "pipe " + Opts + " -N pipe_pmp1	-s 1	-I 8000	-x pipe -m mp",
+        "pipe " + Opts + " -N pipe_pst4k	-s 4k	-I 1000	-x pipe -m st",
+        "pipe " + Opts + " -N pipe_pmt4k	-s 4k	-I 8000	-x pipe -m mt",
+        "pipe " + Opts + " -N pipe_pmp4k	-s 4k	-I 8000	-x pipe -m mp",
+
+        "pipe " + Opts + " -N pipe_sst1	-s 1	-I 1000	-x sock -m st",
+        "pipe " + Opts + " -N pipe_smt1	-s 1	-I 8000	-x sock -m mt",
+        "pipe " + Opts + " -N pipe_smp1	-s 1	-I 8000	-x sock -m mp",
+        "pipe " + Opts + " -N pipe_sst4k	-s 4k	-I 1000	-x sock -m st",
+        "pipe " + Opts + " -N pipe_smt4k	-s 4k	-I 8000	-x sock -m mt",
+        "pipe " + Opts + " -N pipe_smp4k	-s 4k	-I 8000	-x sock -m mp",
+
+        "pipe " + Opts + " -N pipe_tst1	-s 1	-I 1000	-x tcp  -m st",
+        "pipe " + Opts + " -N pipe_tmt1	-s 1	-I 8000	-x tcp  -m mt",
+        "pipe " + Opts + " -N pipe_tmp1	-s 1	-I 8000	-x tcp  -m mp",
+        "pipe " + Opts + " -N pipe_tst4k	-s 4k	-I 1000	-x tcp  -m st",
+        "pipe " + Opts + " -N pipe_tmt4k	-s 4k	-I 8000	-x tcp  -m mt",
+        "pipe " + Opts + " -N pipe_tmp4k	-s 4k	-I 8000	-x tcp  -m mp",
+
+//        "connection " + Opts + " -N conn_accept		-B 256      -a",
+
+        "close_tcp " + Opts + " -N close_tcp		-B 32  "
+
+    );
+
+    
+    @Override
+    protected String getTag() {
+        return "Native Micro";
+    };
+    @Override
+    protected String getPath() {
+        return "/system/bin/bench_";
+    }
+    protected final List<String> getCommands() {
+        return COMMANDS;
+    }
+
+    /*
+     * The unit is usecs/call
+     */
+    private double getBenchResult(String command) {
+        String stdOut = mStdOuts.get(command);
+        int index = stdOut.lastIndexOf("mean of 95%");
+        double value = 0.0;
+        try {
+            String summary = stdOut.substring(index, stdOut.length());
+            String[] substrings = summary.toString().split("\\s+");
+            value = Double.valueOf(substrings[3]);
+            return value;
+        }
+        catch (StringIndexOutOfBoundsException sioobe) {
+            Log.d(TAG, "StringIndexOutOfBoundsException");
+        }
+        catch (ArrayIndexOutOfBoundsException aioobe) {
+            Log.d(TAG, "ArrayIndexOutOfBoundsException");
+        }
+        catch (NumberFormatException nfe) {
+            Log.d(TAG, "NumberFormatException");
+        }
+        return ERROR_VALUE;
+    }
+
+    private String getCommandName(String command) {
+        if (command == null || command.equals(""))
+            return command;
+        String stdErr = mStdErrs.get(command);
+
+        try {
+            String[] substrings = stdErr.split("\\s+");
+            String commandName = substrings[1];
+            return commandName;
+        }
+        catch (Exception ex) {
+            String[] substrings = command.toString().split("\\s+");
+            return substrings[0];
+        }
+    }
+
+    @Override
+    protected boolean saveResult(Intent intent) {
+        Bundle bundle = new Bundle();
+        StringBuilder report = new StringBuilder();
+        for (String command: getCommands()) {
+            if(!mSockets.containsKey(command))
+                continue;
+            String [] lines = mSockets.get(command).trim().split("\n");
+            String name = lines[0].trim().split("\t")[0];
+            if (name.equals("")) {
+                report.append(getCommandName(command));
+            }
+            else {
+                report.append(name);
+            }
+            StringBuilder list = new StringBuilder();;
+            for(String line: lines) {
+                String [] sp = line.trim().split("\t");
+                if (sp.length != 2) {
+                    Log.w(TAG, "error line: " + line.trim());
+                    continue;
+                }
+                if(!name.equals(sp[0]))
+                    Log.i(TAG, "Incompatible bench name in socket out: " + name + " v.s. " + sp[0]);
+                try {
+                    int toInt = (int)Float.parseFloat(sp[1]);
+                    list.append(toInt + " ");
+                } catch (Exception e) { // error format
+                    Log.e(TAG, "cannot parse '" + sp[1] + "' in line: " +  line);
+                    continue;
+                }
+            }
+
+            if(!mStdOuts.containsKey(command)) {
+                report.append("\n");
+                continue;
+            }
+
+            double value = getBenchResult(command);
+            if (value == ERROR_VALUE) {
+                report.append(" FAIL\n");
+            }
+            else {
+                report.append(" " + value + " usecs/call\n");
+                bundle.putString(command+"S", name);
+                bundle.putString(command+"FA", list.toString().trim());
+            }
+        }
+        bundle.putString(REPORT, report.toString());
+        intent.putExtra(RESULT, bundle);
+        return true;
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/org/opensolaris/hub/libmicro/NativeCaseMicro.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/org/opensolaris/hub/libmicro/NativeCaseMicro.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/org/opensolaris/hub/libmicro/NativeCaseMicro.java	(revision 167997)
@@ -0,0 +1,134 @@
+/*
+ * Copyright (C) 2011 Linaro Limited
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ * Authored by Joseph Chang (bizkit) <bizkit@0xlab.org>
+ */
+
+package org.opensolaris.hub.libmicro;
+
+import com.techain.runtime.*;
+
+import android.util.Log;
+
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+
+import java.util.ArrayList;
+
+import org.opensolaris.hub.libmicro.NativeTesterMicro;
+
+public class NativeCaseMicro  extends Case {
+
+    public static String LIN_RESULT = "LIN_RESULT";
+    protected Bundle mInfo[];
+
+    public static int Repeat = 1;
+    public static int Round  = 1;
+
+    public NativeCaseMicro() {
+        super("NativeCaseMicro", "org.opensolaris.hub.libmicro.NativeTesterMicro", Repeat, Round);
+
+        mType = "syscall-nsec";
+        String [] _tmp = {
+            "syscall", 
+        };
+        mTags = _tmp;
+
+        generateInfo();
+    }
+
+    public String getTitle() {
+        return "LibMicro";
+    }
+
+    public String getDescription() {
+        return "(Requires root and pre-deployed binaries) LibMicro is a portable set of microbenchmarks that many Solaris engineers used during Solaris 10 development to measure the performance of various system and library calls.";
+    }
+
+    private void generateInfo() {
+        mInfo = new Bundle[Repeat];
+        for (int i = 0; i < mInfo.length; i++) {
+            mInfo[i] = new Bundle();
+        }
+    }
+
+    @Override
+    public void clear() {
+        super.clear();
+        generateInfo();
+    }
+
+    @Override
+    public void reset() {
+        super.reset();
+        generateInfo();
+    }
+
+    @Override
+    public String getResultOutput() {
+        if (!couldFetchReport()) {
+            return "No benchmark report";
+        }
+        return mInfo[0].getString(NativeTesterMicro.REPORT);
+    }
+
+    @Override
+    public ArrayList<Scenario> getScenarios () {
+        ArrayList<Scenario> scenarios = new ArrayList<Scenario>();
+
+        Bundle bundle = mInfo[0]; // only 1 run
+        for(String command: NativeTesterMicro.COMMANDS) {
+            String name = bundle.getString(command+"S");
+            String results = bundle.getString(command+"FA");
+            if(name == null || results == null)
+                continue;
+            ArrayList<String> _mTags = new ArrayList<String>();
+            _mTags.add((String)("exe:" + command.substring(0, command.indexOf(" "))));
+//            String [] _tmp = command.split(" +-");
+//            for(int i=1; i<_tmp.length; i++){
+//                if(_tmp[i].matches("[NECLSW].*"))
+//                    continue;
+//                _mTags.add((String)(_tmp[i].trim().replace(' ', ':')));
+//                Log.i(TAG, _tmp[i].trim().replace(' ', ':'));
+//            }
+            String [] __mTags =  (String[])(_mTags.toArray(new String[_mTags.size()]));
+            Scenario s = new Scenario(name, mType, __mTags, true);
+            s.mStringResults = results;
+            scenarios.add(s);
+
+        }
+
+        return scenarios;
+    }
+
+    @Override
+    protected boolean saveResult(Intent intent, int index) {
+        Bundle info = intent.getBundleExtra(NativeTesterMicro.RESULT);
+        if (info == null) {
+            Log.i(TAG, "Cannot find LibMicroInfo");
+            return false;
+        } else {
+            mInfo[index] = info;
+        }
+
+        return true;
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/commandline.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/commandline.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/commandline.java	(revision 167997)
@@ -0,0 +1,92 @@
+package jnt.scimark2;
+
+import java.util.Properties;
+
+import com.techain.runtime.TesterScimark2;
+import android.os.Bundle;
+
+/**
+    SciMark2: A Java numerical benchmark measuring performance
+    of computational kernels for FFTs, Monte Carlo simulation,
+    sparse matrix computations, Jacobi SOR, and dense LU matrix
+    factorizations.  
+*/
+
+
+public class commandline
+{
+
+  /* Benchmark 5 kernels with individual Mflops.
+     "results[0]" has the average Mflop rate.
+
+  */
+
+
+    public static String main(Bundle info) {
+        // default to the (small) cache-contained version
+
+        double min_time = Constants.RESOLUTION_DEFAULT;
+
+        int FFT_size = Constants.FFT_SIZE;
+        int SOR_size =  Constants.SOR_SIZE;
+        int Sparse_size_M = Constants.SPARSE_SIZE_M;
+        int Sparse_size_nz = Constants.SPARSE_SIZE_nz;
+        int LU_size = Constants.LU_SIZE;
+
+        // run the benchmark
+
+        double res[] = new double[6];
+        Random R = new Random(Constants.RANDOM_SEED);
+
+        res[1] = kernel.measureFFT( FFT_size, min_time, R);
+        res[2] = kernel.measureSOR( SOR_size, min_time, R);
+        res[3] = kernel.measureMonteCarlo(min_time, R);
+        res[4] = kernel.measureSparseMatmult( Sparse_size_M, 
+                    Sparse_size_nz, min_time, R);
+        res[5] = kernel.measureLU( LU_size, min_time, R);
+
+
+        res[0] = (res[1] + res[2] + res[3] + res[4] + res[5]) / 5;
+
+
+        // print out results
+
+
+
+        System.out.println();
+        System.out.println("SciMark 2.0a");
+        System.out.println();
+
+        System.out.println("Composite Score: " + res[0]);
+        info.putDouble(TesterScimark2.COMPOSITE, res[0]);
+
+        System.out.print("FFT ("+FFT_size+"): ");
+        if (res[1]==0.0)
+            System.out.println(" ERROR, INVALID NUMERICAL RESULT!");
+        else
+            System.out.println(res[1]);
+        info.putDouble(TesterScimark2.FFT, res[1]);
+
+        System.out.println("SOR ("+SOR_size+"x"+ SOR_size+"): "
+                + "  " + res[2]);
+        info.putDouble(TesterScimark2.SOR, res[2]);
+
+        System.out.println("Monte Carlo : " + res[3]);
+        info.putDouble(TesterScimark2.MONTECARLO, res[3]);
+
+        System.out.println("Sparse matmult (N="+ Sparse_size_M+ 
+                ", nz=" + Sparse_size_nz + "): " + res[4]);
+        info.putDouble(TesterScimark2.SPARSEMATMULT, res[4]);
+
+        System.out.print("LU (" + LU_size + "x" + LU_size + "): ");
+        if (res[5]==0.0)
+            System.out.println(" ERROR, INVALID NUMERICAL RESULT!");
+        else
+            System.out.println(res[5]);
+        info.putDouble(TesterScimark2.LU, res[5]);
+
+        return "";
+
+    }
+  
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/Jacobi.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/Jacobi.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/Jacobi.java	(revision 167997)
@@ -0,0 +1,40 @@
+package jnt.scimark2;
+
+public class Jacobi
+{
+    public static final double num_flops(int M, int N, int num_iterations)
+    {
+        double Md = (double) M;
+        double Nd = (double) N;
+        double num_iterD = (double) num_iterations;
+
+        return (Md-1)*(Nd-1)*num_iterD*6.0;
+    }
+
+    public static final void SOR(double omega, double G[][], int num_iterations)
+    {
+        int M = G.length;
+        int N = G[0].length;
+
+        double omega_over_four = omega * 0.25;
+        double one_minus_omega = 1.0 - omega;
+
+        // update interior points
+        //
+        int Mm1 = M-1;
+        int Nm1 = N-1; 
+        for (int p=0; p<num_iterations; p++)
+        {
+            for (int i=1; i<Mm1; i++)
+            {
+                double[] Gi = G[i];
+                double[] Gim1 = G[i-1];
+                double[] Gip1 = G[i+1];
+                for (int j=1; j<Nm1; j++)
+                    Gi[j] = omega_over_four * (Gim1[j] + Gip1[j] + Gi[j-1] 
+                                + Gi[j+1]) + one_minus_omega * Gi[j];
+            }
+        }
+    }
+}
+            
Index: vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/Constants.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/Constants.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/Constants.java	(revision 167997)
@@ -0,0 +1,37 @@
+package jnt.scimark2;
+
+public class Constants
+{
+
+    public static final double RESOLUTION_DEFAULT = 2.0;  /*secs*/
+    public static final int RANDOM_SEED = 101010;
+
+    // default: small (cache-contained) problem sizes
+    //
+    public static final int FFT_SIZE = 1024;  // must be a power of two
+    public static final int SOR_SIZE =100; // NxN grid
+    public static final int SPARSE_SIZE_M = 1000;
+    public static final int SPARSE_SIZE_nz = 5000;
+    public static final int LU_SIZE = 100;
+
+    // large (out-of-cache) problem sizes
+    //
+    public static final int LG_FFT_SIZE = 1048576;  // must be a power of two
+    public static final int LG_SOR_SIZE =1000; // NxN grid
+    public static final int LG_SPARSE_SIZE_M = 100000;
+    public static final int LG_SPARSE_SIZE_nz =1000000;
+    public static final int LG_LU_SIZE = 1000;
+
+    // tiny problem sizes (used to mainly to preload network classes 
+    //                     for applet, so that network download times
+    //                     are factored out of benchmark.)
+    //
+    public static final int TINY_FFT_SIZE = 16;  // must be a power of two
+    public static final int TINY_SOR_SIZE =10; // NxN grid
+    public static final int TINY_SPARSE_SIZE_M = 10;
+    public static final int TINY_SPARSE_SIZE_N = 10;
+    public static final int TINY_SPARSE_SIZE_nz = 50;
+    public static final int TINY_LU_SIZE = 10;
+
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/Stopwatch.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/Stopwatch.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/Stopwatch.java	(revision 167997)
@@ -0,0 +1,121 @@
+package jnt.scimark2;
+
+/**
+
+    Provides a stopwatch to measure elapsed time.
+
+<P>
+<DL>
+<DT><B>Example of use:</B></DT>
+<DD>
+<p>
+<pre>
+    Stopwatch Q = new Stopwatch;
+<p>
+    Q.start();
+    //
+    // code to be timed here ...
+    //
+    Q.stop();
+    System.out.println("elapsed time was: " + Q.read() + " seconds.");
+</pre>    
+
+@author Roldan Pozo
+@version 14 October 1997, revised 1999-04-24
+*/
+public class Stopwatch 
+{
+    private boolean running;
+    private double last_time;
+    private double total;
+
+
+/** 
+    Return system time (in seconds)
+
+*/
+    public final static double seconds()
+    {
+        return (System.currentTimeMillis() * 0.001);
+    }
+        
+/** 
+    Return system time (in seconds)
+
+*/
+    public void reset() 
+    { 
+        running = false; 
+        last_time = 0.0; 
+        total=0.0; 
+    }
+    
+    public Stopwatch()
+    {
+        reset();
+    }
+    
+
+/** 
+    Start (and reset) timer
+
+*/
+    public  void start() 
+    { 
+        if (!running)
+        {
+            running = true;
+            total = 0.0;
+            last_time = seconds(); 
+        }
+    }
+   
+/** 
+    Resume timing, after stopping.  (Does not wipe out
+        accumulated times.)
+
+*/
+    public  void resume() 
+    { 
+        if (!running)
+        {
+            last_time = seconds(); 
+            running = true;
+        }
+    }
+   
+   
+/** 
+    Stop timer
+
+*/
+    public  double stop()  
+    { 
+        if (running) 
+        {
+            total += seconds() - last_time; 
+            running = false;
+        }
+        return total; 
+    }
+  
+ 
+/** 
+    Display the elapsed time (in seconds)
+
+*/
+    public  double read()   
+    {  
+        if (running) 
+        {
+            total += seconds() - last_time;
+            last_time = seconds();
+        }
+        return total;
+    }
+        
+}
+
+    
+
+            
Index: vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/FFT.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/FFT.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/FFT.java	(revision 167997)
@@ -0,0 +1,192 @@
+package jnt.scimark2;
+
+/** Computes FFT's of complex, double precision data where n is an integer power of 2.
+  * This appears to be slower than the Radix2 method,
+  * but the code is smaller and simpler, and it requires no extra storage.
+  * <P>
+  *
+  * @author Bruce R. Miller bruce.miller@nist.gov,
+  * @author Derived from GSL (Gnu Scientific Library), 
+  * @author GSL's FFT Code by Brian Gough bjg@vvv.lanl.gov
+  */
+
+  /* See {@link ComplexDoubleFFT ComplexDoubleFFT} for details of data layout.
+   */
+
+public class FFT {
+
+    public static final double num_flops(int N)
+    {
+        double Nd = (double) N;
+        double logN = (double) log2(N);
+
+        return (5.0*Nd-2)*logN + 2*(Nd+1);
+    }
+
+
+    /** Compute Fast Fourier Transform of (complex) data, in place.*/
+    public static void transform (double data[]) {
+        transform_internal(data, -1); 
+    }
+
+    /** Compute Inverse Fast Fourier Transform of (complex) data, in place.*/
+    public static void inverse (double data[]) {
+        transform_internal(data, +1);  
+        // Normalize
+        int nd=data.length;
+        int n =nd/2;
+        double norm=1/((double) n);
+        for(int i=0; i<nd; i++)
+            data[i] *= norm;
+    }
+
+    /** Accuracy check on FFT of data. Make a copy of data, Compute the FFT, then
+    * the inverse and compare to the original.  Returns the rms difference.*/
+    public static double test(double data[]) {
+        int nd = data.length;
+        // Make duplicate for comparison
+        double copy[] = new double[nd];
+        System.arraycopy(data,0,copy,0,nd);
+        // Transform & invert
+        transform(data);
+        inverse(data);
+        // Compute RMS difference.
+        double diff = 0.0;
+        for(int i=0; i<nd; i++) {
+            double d = data[i]-copy[i];
+            diff += d*d; 
+        }
+        return Math.sqrt(diff/nd);
+    }
+
+    /** Make a random array of n (complex) elements. */
+    public static double[] makeRandom(int n) {
+        int nd = 2*n;
+        double data[] = new double[nd];
+        for(int i=0; i<nd; i++)
+            data[i]= Math.random();
+        return data;
+    }
+
+    /** Simple Test routine. */
+    public static void main(String args[]) {
+        if (args.length == 0) {
+            int n = 1024;
+            System.out.println("n="+n+" => RMS Error="+test(makeRandom(n)));
+        }
+        for(int i=0; i<args.length; i++) {
+            int n = Integer.parseInt(args[i]);
+            System.out.println("n="+n+" => RMS Error="+test(makeRandom(n)));
+        }
+    }
+    /* ______________________________________________________________________ */
+
+    protected static int log2 (int n) {
+        int log = 0;
+        for(int k=1; k < n; k *= 2, log++);
+        if (n != (1 << log))
+            throw new Error("FFT: Data length is not a power of 2!: "+n);
+        return log;
+    }
+
+    protected static void transform_internal (double data[], int direction) {
+        if (data.length == 0) return;    
+        int n = data.length/2;
+        if (n == 1) return;         // Identity operation!
+        int logn = log2(n);
+
+        /* bit reverse the input data for decimation in time algorithm */
+        bitreverse(data) ;
+
+        /* apply fft recursion */
+        /* this loop executed log2(N) times */
+        for (int bit = 0, dual = 1; bit < logn; bit++, dual *= 2) {
+            double w_real = 1.0;
+            double w_imag = 0.0;
+
+            double theta = 2.0 * direction * Math.PI / (2.0 * (double) dual);
+            double s = Math.sin(theta);
+            double t = Math.sin(theta / 2.0);
+            double s2 = 2.0 * t * t;
+
+            /* a = 0 */
+            for (int b = 0; b < n; b += 2 * dual) {
+                int i = 2*b ;
+                int j = 2*(b + dual);
+
+                double wd_real = data[j] ;
+                double wd_imag = data[j+1] ;
+
+                data[j]   = data[i]   - wd_real;
+                data[j+1] = data[i+1] - wd_imag;
+                data[i]  += wd_real;
+                data[i+1]+= wd_imag;
+            }
+
+            /* a = 1 .. (dual-1) */
+            for (int a = 1; a < dual; a++) {
+                /* trignometric recurrence for w-> exp(i theta) w */
+                {
+                    double tmp_real = w_real - s * w_imag - s2 * w_real;
+                    double tmp_imag = w_imag + s * w_real - s2 * w_imag;
+                    w_real = tmp_real;
+                    w_imag = tmp_imag;
+                }
+                for (int b = 0; b < n; b += 2 * dual) {
+                    int i = 2*(b + a);
+                    int j = 2*(b + a + dual);
+
+                    double z1_real = data[j];
+                    double z1_imag = data[j+1];
+
+                    double wd_real = w_real * z1_real - w_imag * z1_imag;
+                    double wd_imag = w_real * z1_imag + w_imag * z1_real;
+
+                    data[j]   = data[i]   - wd_real;
+                    data[j+1] = data[i+1] - wd_imag;
+                    data[i]  += wd_real;
+                    data[i+1]+= wd_imag;
+                }
+            }
+        }
+    }
+
+
+    protected static void bitreverse(double data[]) {
+        /* This is the Goldrader bit-reversal algorithm */
+        int n=data.length/2;
+        int nm1 = n-1;
+        int i=0; 
+        int j=0;
+        for (; i < nm1; i++) {
+
+            //int ii = 2*i;
+            int ii = i << 1;
+
+            //int jj = 2*j;
+            int jj = j << 1;
+
+            //int k = n / 2 ;
+            int k = n >> 1;
+
+            if (i < j) {
+                double tmp_real    = data[ii];
+                double tmp_imag    = data[ii+1];
+                data[ii]   = data[jj];
+                data[ii+1] = data[jj+1];
+                data[jj]   = tmp_real;
+                data[jj+1] = tmp_imag;
+            }
+
+            while (k <= j) {
+                //j = j - k ;
+                j -= k;
+
+                //k = k / 2 ; 
+                k >>= 1 ; 
+            }
+            j += k ;
+        }
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/LU.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/LU.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/LU.java	(revision 167997)
@@ -0,0 +1,268 @@
+package jnt.scimark2;
+
+/**
+    LU matrix factorization. (Based on TNT implementation.)
+    Decomposes a matrix A  into a triangular lower triangular
+    factor (L) and an upper triangular factor (U) such that
+    A = L*U.  By convnetion, the main diagonal of L consists
+    of 1's so that L and U can be stored compactly in
+    a NxN matrix.
+
+
+*/
+public class LU 
+{
+    /**
+        Returns a <em>copy</em> of the compact LU factorization.
+        (useful mainly for debugging.)
+
+        @return the compact LU factorization.  The U factor
+        is stored in the upper triangular portion, and the L
+        factor is stored in the lower triangular portion.
+        The main diagonal of L consists (by convention) of
+        ones, and is not explicitly stored.
+    */
+
+
+    public static final double num_flops(int N) {
+        // rougly 2/3*N^3
+
+        double Nd = (double) N;
+
+        return (2.0 * Nd *Nd *Nd/ 3.0);
+    }
+
+    protected static double[] new_copy(double x[]) {
+        int N = x.length;
+        double T[] = new double[N];
+        for (int i=0; i<N; i++)
+            T[i] = x[i];
+        return T;
+    }
+
+
+    protected static double[][] new_copy(double A[][]) {
+        int M = A.length;
+        int N = A[0].length;
+
+        double T[][] = new double[M][N];
+
+        for (int i=0; i<M; i++) {
+            double Ti[] = T[i];
+            double Ai[] = A[i];
+            for (int j=0; j<N; j++)
+                Ti[j] = Ai[j];
+        }
+
+        return T;
+    }
+
+
+
+    public static int[] new_copy(int x[]) {
+        int N = x.length;
+        int T[] = new int[N];
+        for (int i=0; i<N; i++)
+            T[i] = x[i];
+        return T;
+    }
+
+    protected static final void insert_copy(double B[][], double A[][]) {
+        int M = A.length;
+        int N = A[0].length;
+
+        int remainder = N & 3;         // N mod 4;
+
+        for (int i=0; i<M; i++) {
+            double Bi[] = B[i];
+            double Ai[] = A[i];
+            for (int j=0; j<remainder; j++)
+                Bi[j] = Ai[j];
+            for (int j=remainder; j<N; j+=4) {
+                Bi[j] = Ai[j];
+                Bi[j+1] = Ai[j+1];
+                Bi[j+2] = Ai[j+2];
+                Bi[j+3] = Ai[j+3];
+            }
+        }
+        
+    }
+    public double[][] getLU() {
+        return new_copy(LU_);
+    }
+
+    /**
+        Returns a <em>copy</em> of the pivot vector.
+
+        @return the pivot vector used in obtaining the
+        LU factorzation.  Subsequent solutions must
+        permute the right-hand side by this vector.
+
+    */
+    public int[] getPivot() {
+        return new_copy(pivot_);
+    }
+    
+    /**
+        Initalize LU factorization from matrix.
+
+        @param A (in) the matrix to associate with this
+                factorization.
+    */
+    public LU( double A[][] ) {
+        int M = A.length;
+        int N = A[0].length;
+
+        //if ( LU_ == null || LU_.length != M || LU_[0].length != N)
+            LU_ = new double[M][N];
+
+        insert_copy(LU_, A);
+
+        //if (pivot_.length != M)
+            pivot_ = new int[M];
+
+        factor(LU_, pivot_);
+    }
+
+    /**
+        Solve a linear system, with pre-computed factorization.
+
+        @param b (in) the right-hand side.
+        @return solution vector.
+    */
+    public double[] solve(double b[]) {
+        double x[] = new_copy(b);
+
+        solve(LU_, pivot_, x);
+        return x;
+    }
+    
+
+/**
+    LU factorization (in place).
+
+    @param A (in/out) On input, the matrix to be factored.
+        On output, the compact LU factorization.
+
+    @param pivit (out) The pivot vector records the
+        reordering of the rows of A during factorization.
+        
+    @return 0, if OK, nozero value, othewise.
+*/
+public static int factor(double A[][],  int pivot[]) {
+ 
+
+
+    int N = A.length;
+    int M = A[0].length;
+
+    int minMN = Math.min(M,N);
+
+    for (int j=0; j<minMN; j++) {
+        // find pivot in column j and  test for singularity.
+
+        int jp=j;
+        
+        double t = Math.abs(A[j][j]);
+        for (int i=j+1; i<M; i++) {
+            double ab = Math.abs(A[i][j]);
+            if ( ab > t) {
+                jp = i;
+                t = ab;
+            }
+        }
+        
+        pivot[j] = jp;
+
+        // jp now has the index of maximum element 
+        // of column j, below the diagonal
+
+        if ( A[jp][j] == 0 )                 
+            return 1;       // factorization failed because of zero pivot
+
+
+        if (jp != j) {
+            // swap rows j and jp
+            double tA[] = A[j];
+            A[j] = A[jp];
+            A[jp] = tA;
+        }
+
+        if (j<M-1)                // compute elements j+1:M of jth column
+        {
+            // note A(j,j), was A(jp,p) previously which was
+            // guarranteed not to be zero (Label #1)
+            //
+            double recp =  1.0 / A[j][j];
+
+            for (int k=j+1; k<M; k++)
+                A[k][j] *= recp;
+        }
+
+
+        if (j < minMN-1) {
+            // rank-1 update to trailing submatrix:   E = E - x*y;
+            //
+            // E is the region A(j+1:M, j+1:N)
+            // x is the column vector A(j+1:M,j)
+            // y is row vector A(j,j+1:N)
+
+
+            for (int ii=j+1; ii<M; ii++) {
+                double Aii[] = A[ii];
+                double Aj[] = A[j];
+                double AiiJ = Aii[j];
+                for (int jj=j+1; jj<N; jj++)
+                  Aii[jj] -= AiiJ * Aj[jj];
+
+            }
+        }
+    }
+
+    return 0;
+}
+
+
+    /**
+        Solve a linear system, using a prefactored matrix
+            in LU form.
+
+
+        @param LU (in) the factored matrix in LU form. 
+        @param pivot (in) the pivot vector which lists
+            the reordering used during the factorization
+            stage.
+        @param b    (in/out) On input, the right-hand side.
+                    On output, the solution vector.
+    */
+    public static void solve(double LU[][], int pvt[], double b[]) {
+        int M = LU.length;
+        int N = LU[0].length;
+        int ii=0;
+
+        for (int i=0; i<M; i++) {
+            int ip = pvt[i];
+            double sum = b[ip];
+
+            b[ip] = b[i];
+            if (ii==0)
+                for (int j=ii; j<i; j++)
+                    sum -= LU[i][j] * b[j];
+            else 
+                if (sum == 0.0)
+                    ii = i;
+            b[i] = sum;
+        }
+
+        for (int i=N-1; i>=0; i--) {
+            double sum = b[i];
+            for (int j=i+1; j<N; j++)
+                sum -= LU[i][j] * b[j];
+            b[i] = sum / LU[i][i];
+        }
+    }               
+
+
+    private double LU_[][];
+    private int pivot_[];
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/Random.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/Random.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/Random.java	(revision 167997)
@@ -0,0 +1,257 @@
+package jnt.scimark2;
+
+/* Random.java based on Java Numerical Toolkit (JNT) Random.UniformSequence
+      class.  We do not use Java's own java.util.Random so that we can compare
+      results with equivalent C and Fortran coces.
+*/
+
+public class Random {
+
+
+/* ------------------------------------------------------------------------------
+                                 CLASS VARIABLES
+     ------------------------------------------------------------------------------ */
+
+    int seed = 0;
+
+    private int m[];
+    private int i = 4;
+    private int j = 16;
+
+    private final int mdig = 32;
+    private final int one = 1;
+    private final int m1 = (one << mdig-2) + ((one << mdig-2)-one);
+    private final int m2 = one << mdig/2;
+
+    /* For mdig = 32 : m1 =          2147483647, m2 =      65536
+       For mdig = 64 : m1 = 9223372036854775807, m2 = 4294967296 
+    */
+
+    private double dm1 = 1.0 / (double) m1;
+
+    private boolean haveRange = false;
+    private double left  = 0.0;
+    private double right = 1.0;
+    private double width = 1.0;
+
+
+/* ------------------------------------------------------------------------------
+                                  CONSTRUCTORS
+     ------------------------------------------------------------------------------ */
+
+/**
+     Initializes a sequence of uniformly distributed quasi random numbers with a
+     seed based on the system clock.
+*/
+    public Random () {
+        initialize( (int) System.currentTimeMillis());
+    }
+
+/**
+     Initializes a sequence of uniformly distributed quasi random numbers on a
+     given half-open interval [left,right) with a seed based on the system
+     clock.
+
+@param <B>left</B> (double)<BR>
+
+         The left endpoint of the half-open interval [left,right).
+
+@param <B>right</B> (double)<BR>
+
+         The right endpoint of the half-open interval [left,right).
+*/
+    public Random ( double left, double right) {
+        initialize( (int) System.currentTimeMillis() );
+        this.left = left;
+        this.right = right;
+        width = right - left;
+        haveRange = true;
+    }
+
+/**
+     Initializes a sequence of uniformly distributed quasi random numbers with a
+     given seed.
+
+@param <B>seed</B> (int)<BR>
+
+         The seed of the random number generator.  Two sequences with the same
+         seed will be identical.
+*/
+    public Random (int seed) {
+        initialize( seed);
+    }
+
+/**
+     Initializes a sequence of uniformly distributed quasi random numbers
+     with a given seed on a given half-open interval [left,right).
+
+@param <B>seed</B> (int)<BR>
+
+         The seed of the random number generator.  Two sequences with the same
+         seed will be identical.
+
+@param <B>left</B> (double)<BR>
+
+         The left endpoint of the half-open interval [left,right).
+
+@param <B>right</B> (double)<BR>
+
+         The right endpoint of the half-open interval [left,right).
+*/
+    public Random (int seed, double left, double right) {
+        initialize( seed);
+        this.left = left;
+        this.right = right;
+        width = right - left;
+        haveRange = true;
+    }
+
+/* ------------------------------------------------------------------------------
+                               PUBLIC METHODS
+     ------------------------------------------------------------------------------ */
+
+/**
+     Returns the next random number in the sequence.
+*/
+    public final synchronized double nextDouble () {
+
+        int k;
+        double nextValue;
+
+        k = m[i] - m[j];
+        if (k < 0) k += m1;
+            m[j] = k;
+
+        if (i == 0) 
+            i = 16;
+        else i--;
+
+        if (j == 0) 
+            j = 16 ;
+        else j--;
+
+        if (haveRange) 
+            return  left +  dm1 * (double) k * width;
+        else
+            return dm1 * (double) k;
+
+    } 
+
+/**
+     Returns the next N random numbers in the sequence, as
+     a vector.
+*/
+    public final synchronized void nextDoubles (double x[]) {
+
+        int N = x.length;
+        int remainder = N & 3;        // N mod 4
+
+        if (haveRange) {
+            for (int count=0; count<N; count++) {
+                int k = m[i] - m[j];
+
+                if (i == 0) i = 16;
+                else i--;
+
+                if (k < 0) k += m1;
+                m[j] = k;
+
+                if (j == 0) j = 16;
+                else j--;
+
+                x[count] = left + dm1 * (double) k * width;
+            }
+        }
+        else
+        {
+
+            for (int count=0; count<remainder; count++) {
+                int k = m[i] - m[j];
+
+                if (i == 0) i = 16;
+                else i--;
+
+                if (k < 0) k += m1;
+                m[j] = k;
+
+                if (j == 0) j = 16;
+                else j--;
+
+
+                x[count] = dm1 * (double) k;
+            }
+
+            for (int count=remainder; count<N; count+=4) {
+                int k = m[i] - m[j];
+                if (i == 0) i = 16;
+                else i--;
+                if (k < 0) k += m1;
+                m[j] = k;
+                if (j == 0) j = 16;
+                else j--;
+                x[count] = dm1 * (double) k;
+
+
+                k = m[i] - m[j];
+                if (i == 0) i = 16;
+                else i--;
+                if (k < 0) k += m1;
+                m[j] = k;
+                if (j == 0) j = 16;
+                else j--;
+                x[count+1] = dm1 * (double) k;
+
+
+                k = m[i] - m[j];
+                if (i == 0) i = 16;
+                else i--;
+                if (k < 0) k += m1;
+                m[j] = k;
+                if (j == 0) j = 16;
+                else j--;
+                x[count+2] = dm1 * (double) k;
+
+
+                k = m[i] - m[j];
+                if (i == 0) i = 16;
+                else i--;
+                if (k < 0) k += m1;
+                m[j] = k;
+                if (j == 0) j = 16;
+                else j--;
+                x[count+3] = dm1 * (double) k;
+            }
+        }
+    }
+
+
+/*----------------------------------------------------------------------------
+                             PRIVATE METHODS
+    ------------------------------------------------------------------------ */
+
+    private void initialize (int seed) {
+
+        int jseed, k0, k1, j0, j1, iloop;
+
+        this.seed = seed;
+
+        m = new int[17];
+
+        jseed = Math.min(Math.abs(seed),m1);
+        if (jseed % 2 == 0) --jseed;
+        k0 = 9069 % m2;
+        k1 = 9069 / m2;
+        j0 = jseed % m2;
+        j1 = jseed / m2;
+        for (iloop = 0; iloop < 17; ++iloop) {
+            jseed = j0 * k0;
+            j1 = (jseed / m2 + j0 * k1 + j1 * k0) % (m2 / 2);
+            j0 = jseed % m2;
+            m[iloop] = j0 + m2 * j1;
+        }
+        i = 4;
+        j = 16;
+
+    }
+
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/kernel.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/kernel.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/kernel.java	(revision 167997)
@@ -0,0 +1,268 @@
+package jnt.scimark2;
+
+public class kernel
+{
+    // each measurement returns approx Mflops
+
+
+    public static double measureFFT(int N, double mintime, Random R) {
+        // initialize FFT data as complex (N real/img pairs)
+
+        double x[] = RandomVector(2*N, R);
+        double oldx[] = NewVectorCopy(x);
+        long cycles = 1;
+        Stopwatch Q = new Stopwatch();
+
+        while(true) {
+            Q.start();
+            for (int i=0; i<cycles; i++) {
+                FFT.transform(x);    // forward transform
+                FFT.inverse(x);        // backward transform
+            }
+            Q.stop();
+            if (Q.read() >= mintime)
+                break;
+
+            cycles *= 2;
+        }
+        // approx Mflops
+
+        final double EPS = 1.0e-10;
+        if ( FFT.test(x) / N > EPS )
+            return 0.0;
+        
+        return FFT.num_flops(N)*cycles/ Q.read() * 1.0e-6;
+    }
+
+
+    public static double measureSOR(int N, double min_time, Random R) {
+        double G[][] = RandomMatrix(N, N, R);
+
+        Stopwatch Q = new Stopwatch();
+        int cycles=1;
+        while(true) {
+            Q.start();
+            SOR.execute(1.25, G, cycles);
+            Q.stop();
+            if (Q.read() >= min_time) break;
+
+            cycles *= 2;
+        }
+        // approx Mflops
+        return SOR.num_flops(N, N, cycles) / Q.read() * 1.0e-6;
+    }
+
+    public static double measureMonteCarlo(double min_time, Random R) {
+        Stopwatch Q = new Stopwatch();
+
+        int cycles=1;
+        while(true) {
+            Q.start();
+            MonteCarlo.integrate(cycles);
+            Q.stop();
+            if (Q.read() >= min_time) break;
+
+            cycles *= 2;
+        }
+        // approx Mflops
+        return MonteCarlo.num_flops(cycles) / Q.read() * 1.0e-6;
+    }
+
+
+    public static double measureSparseMatmult(int N, int nz, 
+            double min_time, Random R) {
+        // initialize vector multipliers and storage for result
+        // y = A*y;
+
+        double x[] = RandomVector(N, R);
+        double y[] = new double[N];
+
+        // initialize square sparse matrix
+        //
+        // for this test, we create a sparse matrix wit M/nz nonzeros
+        // per row, with spaced-out evenly between the begining of the
+        // row to the main diagonal.  Thus, the resulting pattern looks
+        // like
+        //             +-----------------+
+        //             +*                +
+        //             +***              +
+        //             +* * *            +
+        //             +** *  *          +
+        //             +**  *   *        +
+        //             +* *   *   *      +
+        //             +*  *   *    *    +
+        //             +*   *    *    *  + 
+        //             +-----------------+
+        //
+        // (as best reproducible with integer artihmetic)
+        // Note that the first nr rows will have elements past
+        // the diagonal.
+
+        int nr = nz/N;         // average number of nonzeros per row
+        int anz = nr *N;   // _actual_ number of nonzeros
+
+            
+        double val[] = RandomVector(anz, R);
+        int col[] = new int[anz];
+        int row[] = new int[N+1];
+
+        row[0] = 0;    
+        for (int r=0; r<N; r++) {
+            // initialize elements for row r
+
+            int rowr = row[r];
+            row[r+1] = rowr + nr;
+            int step = r/ nr;
+            if (step < 1) step = 1;   // take at least unit steps
+
+
+            for (int i=0; i<nr; i++)
+                col[rowr+i] = i*step;
+                
+        }
+
+        Stopwatch Q = new Stopwatch();
+
+        int cycles=1;
+        while(true) {
+            Q.start();
+            SparseCompRow.matmult(y, val, row, col, x, cycles);
+            Q.stop();
+            if (Q.read() >= min_time) break;
+
+            cycles *= 2;
+        }
+        // approx Mflops
+        return SparseCompRow.num_flops(N, nz, cycles) / Q.read() * 1.0e-6;
+    }
+
+
+    public static double measureLU(int N, double min_time, Random R) {
+        // compute approx Mlfops, or O if LU yields large errors
+
+        double A[][] = RandomMatrix(N, N,  R);
+        double lu[][] = new double[N][N];
+        int pivot[] = new int[N];
+
+        Stopwatch Q = new Stopwatch();
+
+        int cycles=1;
+        while(true) {
+            Q.start();
+            for (int i=0; i<cycles; i++) {
+                CopyMatrix(lu, A);
+                LU.factor(lu, pivot);
+            }
+            Q.stop();
+            if (Q.read() >= min_time) break;
+
+            cycles *= 2;
+        }
+
+
+        // verify that LU is correct
+        double b[] = RandomVector(N, R);
+        double x[] = NewVectorCopy(b);
+
+        LU.solve(lu, pivot, x);
+
+        final double EPS = 1.0e-12;
+        if ( normabs(b, matvec(A,x)) / N > EPS )
+            return 0.0;
+
+
+        // else return approx Mflops
+        //
+        return LU.num_flops(N) * cycles / Q.read() * 1.0e-6;
+    }
+
+
+  private static double[] NewVectorCopy(double x[]) {
+        int N = x.length;
+
+        double y[] = new double[N];
+        for (int i=0; i<N; i++)
+            y[i] = x[i];
+
+        return y;
+  }
+    
+  private static void CopyVector(double B[], double A[]) {
+        int N = A.length;
+
+        for (int i=0; i<N; i++)
+            B[i] = A[i];
+  }
+
+
+  private static double normabs(double x[], double y[]) {
+        int N = x.length;
+        double sum = 0.0;
+
+        for (int i=0; i<N; i++)
+            sum += Math.abs(x[i]-y[i]);
+
+        return sum;
+  }
+
+  private static void CopyMatrix(double B[][], double A[][]) {
+        int M = A.length;
+        int N = A[0].length;
+
+        int remainder = N & 3;         // N mod 4;
+
+        for (int i=0; i<M; i++) {
+            double Bi[] = B[i];
+            double Ai[] = A[i];
+            for (int j=0; j<remainder; j++)
+                Bi[j] = Ai[j];
+            for (int j=remainder; j<N; j+=4) {
+                Bi[j] = Ai[j];
+                Bi[j+1] = Ai[j+1];
+                Bi[j+2] = Ai[j+2];
+                Bi[j+3] = Ai[j+3];
+            }
+        }
+  }
+
+  private static double[][] RandomMatrix(int M, int N, Random R) {
+          double A[][] = new double[M][N];
+
+        for (int i=0; i<N; i++)
+            for (int j=0; j<N; j++)
+                A[i][j] = R.nextDouble();
+        return A;
+    }
+
+    private static double[] RandomVector(int N, Random R) {
+        double A[] = new double[N];
+
+        for (int i=0; i<N; i++)
+            A[i] = R.nextDouble();
+        return A;
+    }
+
+    private static double[] matvec(double A[][], double x[]) {
+        int N = x.length;
+        double y[] = new double[N];
+
+        matvec(A, x, y);
+
+        return y;
+    }
+
+    private static void matvec(double A[][], double x[], double y[]) {
+        int M = A.length;
+        int N = A[0].length;
+
+        for (int i=0; i<M; i++) {
+            double sum = 0.0;
+            double Ai[] = A[i];
+            for (int j=0; j<N; j++)
+                sum += Ai[j] * x[j];
+
+            y[i] = sum;
+        }
+    }
+
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/MonteCarlo.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/MonteCarlo.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/MonteCarlo.java	(revision 167997)
@@ -0,0 +1,64 @@
+package jnt.scimark2;
+
+/**
+ Estimate Pi by approximating the area of a circle.
+
+ How: generate N random numbers in the unit square, (0,0) to (1,1)
+ and see how are within a radius of 1 or less, i.e.
+ <pre>  
+
+ sqrt(x^2 + y^2) < r
+
+ </pre>
+  since the radius is 1.0, we can square both sides
+  and avoid a sqrt() computation:
+  <pre>
+
+    x^2 + y^2 <= 1.0
+
+  </pre>
+  this area under the curve is (Pi * r^2)/ 4.0,
+  and the area of the unit of square is 1.0,
+  so Pi can be approximated by 
+  <pre>
+                # points with x^2+y^2 < 1
+     Pi =~         --------------------------  * 4.0
+                     total # points
+
+  </pre>
+
+*/
+
+public class MonteCarlo
+{
+    final static int SEED = 113;
+
+    public static final double num_flops(int Num_samples) {
+        // 3 flops in x^2+y^2 and 1 flop in random routine
+
+        return ((double) Num_samples)* 4.0;
+
+    }
+
+    
+
+    public static final double integrate(int Num_samples) {
+
+        Random R = new Random(SEED);
+
+
+        int under_curve = 0;
+        for (int count=0; count<Num_samples; count++) {
+            double x= R.nextDouble();
+            double y= R.nextDouble();
+
+            if ( x*x + y*y <= 1.0)
+                 under_curve ++;
+            
+        }
+
+        return ((double) under_curve / Num_samples) * 4.0;
+    }
+
+
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/SOR.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/SOR.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/SOR.java	(revision 167997)
@@ -0,0 +1,41 @@
+package jnt.scimark2;
+
+public class SOR
+{
+    public static final double num_flops(int M, int N, int num_iterations)
+    {
+        double Md = (double) M;
+        double Nd = (double) N;
+        double num_iterD = (double) num_iterations;
+
+        return (Md-1)*(Nd-1)*num_iterD*6.0;
+    }
+
+    public static final void execute(double omega, double G[][], int 
+            num_iterations)
+    {
+        int M = G.length;
+        int N = G[0].length;
+
+        double omega_over_four = omega * 0.25;
+        double one_minus_omega = 1.0 - omega;
+
+        // update interior points
+        //
+        int Mm1 = M-1;
+        int Nm1 = N-1; 
+        for (int p=0; p<num_iterations; p++)
+        {
+            for (int i=1; i<Mm1; i++)
+            {
+                double[] Gi = G[i];
+                double[] Gim1 = G[i-1];
+                double[] Gip1 = G[i+1];
+                for (int j=1; j<Nm1; j++)
+                    Gi[j] = omega_over_four * (Gim1[j] + Gip1[j] + Gi[j-1] 
+                                + Gi[j+1]) + one_minus_omega * Gi[j];
+            }
+        }
+    }
+}
+            
Index: vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/SparseCompRow.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/SparseCompRow.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/jnt/scimark2/SparseCompRow.java	(revision 167997)
@@ -0,0 +1,42 @@
+package jnt.scimark2;
+
+public class SparseCompRow
+{
+    /* multiple iterations used to make kernel have roughly
+        same granulairty as other Scimark kernels. */
+
+    public static double num_flops(int N, int nz, int num_iterations) {
+        /* Note that if nz does not divide N evenly, then the
+           actual number of nonzeros used is adjusted slightly.
+        */
+        int actual_nz = (nz/N) * N;
+        return ((double)actual_nz) * 2.0 * ((double) num_iterations);
+    }
+
+
+    /* computes  a matrix-vector multiply with a sparse matrix
+        held in compress-row format.  If the size of the matrix
+        in MxN with nz nonzeros, then the val[] is the nz nonzeros,
+        with its ith entry in column col[i].  The integer vector row[]
+        is of size M+1 and row[i] points to the begining of the
+        ith row in col[].  
+    */
+
+    public static void matmult( double y[], double val[], int row[],
+        int col[], double x[], int NUM_ITERATIONS) {
+        int M = row.length - 1;
+
+        for (int reps=0; reps<NUM_ITERATIONS; reps++) {
+        
+            for (int r=0; r<M; r++) {
+                double sum = 0.0; 
+                int rowR = row[r];
+                int rowRp1 = row[r+1];
+                for (int i=rowR; i<rowRp1; i++)
+                    sum += x[ col[i] ] * val[i];
+                y[r] = sum;
+            }
+        }
+    }
+
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/rebootStress/RebootStressActivity.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/rebootStress/RebootStressActivity.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/rebootStress/RebootStressActivity.java	(revision 167997)
@@ -0,0 +1,161 @@
+package com.techain.rebootStress;
+
+import android.app.Activity;
+import android.content.Context;
+import android.os.Bundle;
+import android.os.PowerManager;
+import android.util.Log;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.io.PrintWriter;
+
+import com.mtbf.runner.ChooseActivity;
+import com.techain.runtime.R;
+import com.mtbf.runner.Functions;
+import com.mtbf.runner.Parameters;
+
+public class RebootStressActivity extends Activity {
+    public int curLoop = 0;
+    private TextView curLoopInfo;
+    private EditText loop;
+    private Button reboot_start;
+    private String flagFile = Functions.sRootDir + "/runin/Rebootstress.txt";//;
+    private int sumLoop = Parameters.REBOOT_LOOP;
+
+
+    public void createFile() {
+        File localFile = new File(flagFile);
+        if (!localFile.exists())
+            try {
+                localFile.createNewFile();
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+    }
+
+    public void doReboot() {
+        File localFile = null;
+        try {
+            Log.d("mtbfdebug", "RebootStressActivity flagFile== " + flagFile);
+            localFile = new File(flagFile);
+            if (localFile.exists()) {
+                BufferedReader localBufferedReader = new BufferedReader(new InputStreamReader(new FileInputStream(localFile)));
+                while (true) {
+                    String str = localBufferedReader.readLine();
+                    if (str == null)
+                        break;
+                    if (str.contains("curLoop")) {
+                        String[] arrayOfString2 = str.split(" ");
+                        this.curLoop = Integer.parseInt(arrayOfString2[1]);
+                        System.out.println("curLoop" + arrayOfString2[1]);
+                    }
+                    if (str.contains("sumLoop")) {
+                        String[] arrayOfString1 = str.split(" ");
+                        this.sumLoop = Integer.parseInt(arrayOfString1[1]);
+                        System.out.println("sumLoop" + arrayOfString1[1]);
+                    }
+                }
+            } else
+                localFile.createNewFile();
+        } catch (Exception localException) {
+            localException.printStackTrace();
+        }
+        try {
+            Thread.sleep(2000L);
+        } catch (InterruptedException e) {
+            e.printStackTrace();
+        }
+        Log.d("mtbfdebug", "RebootStressActivity curLoop== " + curLoop);
+        Log.d("mtbfdebug", "RebootStressActivity sumLoop== " + sumLoop);
+        if (this.curLoop < this.sumLoop) {
+            this.curLoopInfo.setText("当前运行次数： " + (1 + this.curLoop) + " / " + this.sumLoop);
+            Functions.log("当前运行次数： " + (1 + this.curLoop) + " / " + this.sumLoop);
+            this.curLoop = (1 + this.curLoop);
+            PrintWriter localPrintWriter = null;
+            try {
+                localPrintWriter = new PrintWriter(new FileOutputStream(localFile));
+            } catch (FileNotFoundException e) {
+                e.printStackTrace();
+            }
+            localPrintWriter.write("sumLoop " + this.sumLoop + "\r\n");
+            localPrintWriter.write("curLoop " + this.curLoop + "\r\n");
+            if (ChooseActivity.IsComplexModel()) {
+                localPrintWriter.write("mode " + "complex");
+            } else if (ChooseActivity.IsRuninModel()) {
+                localPrintWriter.write("mode " + "runin");
+            } else {
+                localPrintWriter.write("mode " + "single");
+            }
+            localPrintWriter.flush();
+            localPrintWriter.close();
+            ((PowerManager) getSystemService(Context.POWER_SERVICE)).reboot("normal");
+            return;
+        }
+        // // localFile.delete();
+        //   Functions.log("\u6d4b\u8bd5\u5b8c\u6210");
+        // this.curLoopInfo.setText("\u6d4b\u8bd5\u5b8c\u6210");
+    }
+
+    public void initUI() {
+        this.reboot_start = ((Button) findViewById(R.id.reboot_start));
+        this.curLoopInfo = ((TextView) findViewById(R.id.reboot_curloop));
+        this.loop = ((EditText) findViewById(R.id.reboot_loop));
+    }
+
+    public void onCreate(Bundle paramBundle) {
+        super.onCreate(paramBundle);
+        setContentView(R.layout.main_reboot);
+        initUI();
+        this.reboot_start.setOnClickListener(new StartListener());
+        doReboot();
+    }
+
+    class StartListener implements View.OnClickListener {
+        StartListener() {
+        }
+
+        public void onClick(View paramView) {
+            Log.d("mtbfdebug", "RebootStressActivity loop.getText()== " + loop.getText().toString());
+            if (RebootStressActivity.this.loop.getText().toString().equals("")) {
+                Toast.makeText(RebootStressActivity.this, "\u5faa\u73af\u6570\u4e0d\u80fd\u4e3a\u7a7a", 0).show();
+                return;
+            }
+            int i = Integer.parseInt(RebootStressActivity.this.loop.getText().toString());
+            if (i > 0)
+                try {
+                    File localFile = new File(flagFile);
+                    if (!localFile.exists())
+                        localFile.createNewFile();
+                    PrintWriter localPrintWriter = new PrintWriter(new FileOutputStream(localFile));
+                    localPrintWriter.write("sumLoop " + i + "\r\n");
+                    localPrintWriter.write("curLoop 1");
+                    localPrintWriter.flush();
+                    localPrintWriter.close();
+                    Util.log("\u6d4b\u8bd5\u5f00\u59cb  \u5faa\u73af\u6b21\u6570\uff1a" + i + "\r\n");
+                    Util.log("\u5f53\u524d\u8fd0\u884c\u6b21\u6570\uff1a 1 / " + i);
+                    ((PowerManager) RebootStressActivity.this.getSystemService(Context.POWER_SERVICE)).reboot("normal");
+                    return;
+                } catch (Exception localException) {
+                    localException.printStackTrace();
+                    return;
+                }
+            Toast.makeText(RebootStressActivity.this, "\u5faa\u73af\u6570\u9519\u8bef", 0).show();
+        }
+    }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.lephone.rebootStress.RebootStressActivity
+ * JD-Core Version:    0.6.2
+ */
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/rebootStress/Util.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/rebootStress/Util.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/rebootStress/Util.java	(revision 167997)
@@ -0,0 +1,37 @@
+package com.techain.rebootStress;
+
+import java.io.BufferedWriter;
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.OutputStreamWriter;
+import java.io.Writer;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+
+public class Util {
+    private static SimpleDateFormat format = new SimpleDateFormat("MM/dd HH:mm:ss");
+    public static final String logpath = "/mnt/sdcard/RebootStress/log.txt";
+
+    public static void log(String paramString) {
+        File localFile = new File("/mnt/sdcard/RebootStress/log.txt");
+        try {
+            if (!localFile.exists())
+                localFile.createNewFile();
+            Date localDate = new Date();
+            String str1 = format.format(localDate);
+            String str2 = str1 + "  ------------   " + paramString + "\r\n";
+            BufferedWriter localBufferedWriter = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(localFile, true)));
+            localBufferedWriter.write(str2);
+            localBufferedWriter.close();
+            return;
+        } catch (IOException localIOException) {
+            localIOException.printStackTrace();
+        }
+    }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.lephone.rebootStress.Util
+ * JD-Core Version:    0.6.2
+ */
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/rebootStress/RebootReceiver.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/rebootStress/RebootReceiver.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/rebootStress/RebootReceiver.java	(revision 167997)
@@ -0,0 +1,94 @@
+package com.techain.rebootStress;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.os.Bundle;
+import android.util.Log;
+
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.FileInputStream;
+
+import com.mtbf.runner.ChooseActivity;
+import com.mtbf.runner.Functions;
+
+import java.io.InputStreamReader;
+
+
+public class RebootReceiver extends BroadcastReceiver {
+
+    private String flagFile = Functions.sRootDir + "/runin/Rebootstress.txt";
+    public int curLoop = 0;
+    private int sumLoop = 0;
+    private String mode;
+
+    public void onReceive(Context paramContext, Intent paramIntent) {
+        File localFile = null;
+        if ("android.intent.action.BOOT_COMPLETED".equals(paramIntent.getAction())) {
+            try {
+                Log.d("mtbfdebug", "RebootStressActivity flagFile== " + flagFile);
+                localFile = new File(flagFile);
+                if (localFile.exists()) {
+                    BufferedReader localBufferedReader = new BufferedReader(new InputStreamReader(new FileInputStream(localFile)));
+                    while (true) {
+                        String str = localBufferedReader.readLine();
+                        if (str == null)
+                            break;
+                        if (str.contains("curLoop")) {
+                            String[] arrayOfString2 = str.split(" ");
+                            this.curLoop = Integer.parseInt(arrayOfString2[1]);
+                            System.out.println("curLoop" + arrayOfString2[1]);
+                        }
+                        if (str.contains("sumLoop")) {
+                            String[] arrayOfString1 = str.split(" ");
+                            this.sumLoop = Integer.parseInt(arrayOfString1[1]);
+                            System.out.println("sumLoop" + arrayOfString1[1]);
+                        }
+                        if (str.contains("mode")) {
+                            mode = str.split(" ")[1];
+                            System.out.println("mode" + mode);
+                        }
+                    }
+                }
+            } catch (Exception localException) {
+                localException.printStackTrace();
+            }
+            try {
+                Thread.sleep(2000L);
+            } catch (InterruptedException e) {
+                e.printStackTrace();
+            }
+            Log.d("mtbfdebug", "RebootReceiver curLoop== " + curLoop);
+            Log.d("mtbfdebug", "RebootReceiver sumLoop== " + sumLoop);
+            Log.d("mtbfdebug", "RebootReceiver mode== " + mode);
+
+            Bundle bundle = new Bundle();
+            if (this.curLoop < this.sumLoop) {
+                Intent localIntent = new Intent();
+                localIntent.setClass(paramContext, RebootStressActivity.class);
+                localIntent.addFlags(268435456);//new task hcz
+                bundle.putString("mode", mode);
+                bundle.putBoolean("rebootfinish", false);
+                localIntent.putExtras(bundle);
+                paramContext.startActivity(localIntent);
+                System.out.println("boot receiver");
+            } else {
+                if (localFile != null) {
+                    localFile.delete();
+                }
+                if (curLoop == 0 && sumLoop == 0 && mode == null) {
+                    return;
+                }
+                Intent localIntent = new Intent();
+                localIntent.setClass(paramContext, ChooseActivity.class);
+                localIntent.addFlags(268435456);//new task hcz
+                bundle.putString("mode", mode);
+                bundle.putBoolean("rebootfinish", true);
+                localIntent.putExtras(bundle);
+                paramContext.startActivity(localIntent);
+                System.out.println("boot receiver");
+            }
+        }
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/RunTime.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/RunTime.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/RunTime.java	(revision 167997)
@@ -0,0 +1,1002 @@
+package com.techain.runtime;
+
+import android.app.AlertDialog;
+import android.app.AlertDialog.Builder;
+import android.app.ProgressDialog;
+import android.app.TabActivity;
+import android.content.DialogInterface;
+//import android.content.DialogInterface.OnClickListener;
+import android.content.Intent;
+import android.content.res.Configuration;
+import android.content.res.Resources;
+import android.os.Build;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+import android.os.PowerManager;
+import android.os.PowerManager.WakeLock;
+import android.os.SystemClock;
+import android.util.Log;
+import android.view.KeyEvent;
+import android.view.Menu;
+import android.view.MenuItem;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.view.ViewGroup;//hcz
+import android.view.ViewGroup.LayoutParams;
+import android.webkit.WebView;
+import android.webkit.WebViewClient;
+import android.widget.Button;
+import android.widget.CheckBox;
+import android.widget.EditText;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+//import android.widget.LinearLayout.LayoutParams;
+import android.widget.ScrollView;
+import android.widget.TabHost;
+import android.widget.TabHost.TabContentFactory;
+import android.widget.TabHost.TabSpec;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.FileReader;
+import java.io.IOException;
+import java.text.SimpleDateFormat;
+import java.util.Arrays;
+import java.util.Date;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.LinkedList;
+import java.util.UUID;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+import org.zeroxlab.utils.BenchUtil;
+import org.zeroxlab.utils.Util;
+
+public class RunTime extends TabActivity
+        implements View.OnClickListener {
+    private static final int GROUP_DEFAULT = 0;
+    public static final String PACKAGE = "com.techain.runtime";
+    private static final int SETTINGS_ID = 1;
+    public static final String TAG = "Benchmark";
+    private static String mJSONResult;
+    private static final String mOutputFile = "0xBenchmark";
+    private static final String mOutputJSONFile = "0xBenchmark.bundle";
+    private static final String mOutputXMLFile = "0xBenchmark.xml";
+    private static String mXMLResult;
+    private final String CAM = "camera";
+    private final String COMPLEX = "COMPLEX";
+    private final String D2 = "2D";
+    private final String D3 = "3D";
+    private final String LCD = "LCD";
+    private final String MAIN = "Main";
+    private final String MATH = "CPU";
+    private final String MUSIC = "MUSIC";
+    private final String SLEEP = "SLEEP";
+    private final int TIMEFACTOR = 1;
+    private final String VIDEO = "VIDEO";
+    private final String VM = "VM";
+    private CheckBox camCheckBox;
+    private EditText camEditText;
+    private CheckBox complexCheckBox;
+    private EditText complexEditText;
+    private CheckBox d2CheckBox;
+    private EditText d2EditText;
+    private CheckBox d3CheckBox;
+    private EditText d3EditText;
+    private CheckBox lcdCheckBox;
+    private EditText lcdEditText;
+    boolean mAutoRun = false;
+    private TextView mBannerInfo;
+    LinkedList<Case> mCases;
+    private HashMap<String, HashSet<Case>> mCategory = new HashMap();
+    boolean mCheck2D = false;
+    boolean mCheck3D = false;
+    boolean mCheckCam = false;
+    boolean mCheckComplex = false;
+    boolean mCheckLcd = false;
+    private CheckBox[] mCheckList;
+    boolean mCheckMath = false;
+    boolean mCheckMusic = false;
+    boolean mCheckNative = false;
+    boolean mCheckSleep = false;
+    boolean mCheckVM = false;
+    boolean mCheckVideo = false;
+    private TextView[] mDesc;
+    private int[] mItemList = new int[32];
+    private LinearLayout mLinearLayout;
+    private LinearLayout mMainView;
+    private int mNumber2d;
+    private int mNumber3d;
+    private int mNumberCam;
+    private int mNumberComplex;
+    private int mNumberLcd;
+    private int mNumberMath;
+    private int mNumberMusic;
+    private int mNumberSleep;
+    private int mNumberVideo;
+    private int mNumberVm;
+    private Button mRun;
+    private ScrollView mScrollView;
+    private Button mShow;
+    private TabHost mTabHost;
+    boolean mTouchable = true;
+    private PowerManager.WakeLock mWakeLock;
+    private CheckBox mathCheckBox;
+    private EditText mathEditText;
+    private CheckBox musicCheckBox;
+    private EditText musicEditText;
+    private int orientation = 0;
+    private CheckBox sleepCheckBox;
+    private EditText sleepEditText;
+    private final String trackerUrl = "http://0xbenchmark.appspot.com/static/MobileTracker.html";
+    private CheckBox videoCheckBox;
+    private EditText videoEditText;
+    private CheckBox vmCheckBox;
+    private EditText vmEditText;
+
+    private void _checkAllCase(boolean paramBoolean) {
+        for (int i = 0; i < this.mCheckList.length; i++)
+            this.mCheckList[i].setChecked(paramBoolean);
+    }
+
+    private void _checkCatCase(String[] paramArrayOfString) {
+        Arrays.sort(paramArrayOfString);
+        for (int i = 0; i < this.mCheckList.length; i++)
+            if (Arrays.binarySearch(paramArrayOfString, ((Case) this.mCases.get(i)).mType) >= 0)
+                this.mCheckList[i].setChecked(true);
+    }
+
+    private void _checkTagCase(String[] paramArrayOfString) {
+        Arrays.sort(paramArrayOfString);
+        for (int i = 0; i < this.mCheckList.length; i++) {
+            String[] arrayOfString = ((Case) this.mCases.get(i)).mTags;
+            int j = arrayOfString.length;
+            for (int k = 0; k < j; k++)
+                if (Arrays.binarySearch(paramArrayOfString, arrayOfString[k]) >= 0)
+                    this.mCheckList[i].setChecked(true);
+        }
+    }
+
+    private boolean checkCharger() {
+        File localFile = new File("/sys/class/power_supply/battery/status");
+        try {
+            FileReader localFileReader = new FileReader(localFile);
+            char[] arrayOfChar = new char[''];
+            try {
+                String[] arrayOfString = new String(arrayOfChar, 0, localFileReader.read(arrayOfChar)).trim().split("\n");
+                Log.i("Benchmark", "result = " + arrayOfString[0]);
+                boolean bool = false;
+                if (!"Charging".equals(arrayOfString[0]))
+                    bool = "Full".equals(arrayOfString[0]);
+                return bool;
+            } catch (IOException localIOException) {
+                Log.e("Benchmark", "read battery status file err!");
+                return false;
+            }
+        } catch (FileNotFoundException localFileNotFoundException) {
+            Log.e("Benchmark", "get battery status file err!");
+        }
+        return false;
+    }
+
+    private void initAuto() {
+        Intent localIntent = getIntent();
+        String str1 = localIntent.getStringExtra("TAG");
+        String str2 = localIntent.getStringExtra("CAT");
+        _checkAllCase(false);
+        if (str1 != null)
+            _checkTagCase(str1.split(","));
+        if (str2 != null)
+            _checkCatCase(str2.split(","));
+        if ((str1 == null) && (str2 == null))
+            _checkAllCase(true);
+        final Handler local1 = new Handler() {
+            public void handleMessage(Message paramAnonymousMessage) {
+                if (paramAnonymousMessage.what == 4660)
+                    RunTime.this.onClick(RunTime.this.mRun);
+            }
+        };
+        new ProgressDialog(this);
+        new Thread() {
+            public void run() {
+                SystemClock.sleep(1000L);
+                // this.val$dialog.dismiss();
+                Message localMessage = new Message();
+                localMessage.what = 4660;
+                local1.sendMessage(localMessage);
+            }
+        }
+                .start();
+        this.mTouchable = true;
+    }
+
+    private void initViews() {
+        this.mTabHost = getTabHost();
+        int i = this.mCases.size();
+
+        Log.d("huangchengzhong", "initViews i = " + i);
+        this.mCheckList = new CheckBox[i];
+        this.mDesc = new TextView[i];
+        for (int j = 0; j < i; j++) {
+            this.mCheckList[j] = new CheckBox(this);
+            this.mCheckList[j].setText(((Case) this.mCases.get(j)).getTitle());
+            this.mDesc[j] = new TextView(this);
+            this.mDesc[j].setText(((Case) this.mCases.get(j)).getDescription());
+            this.mDesc[j].setTextSize(this.mDesc[j].getTextSize() - 2.0F);
+            this.mDesc[j].setPadding(42, 0, 10, 10);
+        }
+        TabHost.TabContentFactory local3 = new TabHost.TabContentFactory() {
+            public View createTabContent(String paramAnonymousString) {
+                ViewGroup.LayoutParams localLayoutParams1 = new ViewGroup.LayoutParams(-1, -1);
+                ViewGroup.LayoutParams localLayoutParams2 = new ViewGroup.LayoutParams(-1, -2);
+                LinearLayout.LayoutParams localLayoutParams = new LinearLayout.LayoutParams(-1, -2);
+                localLayoutParams.weight = 1.0F;
+                if (paramAnonymousString.equals("Main")) {
+                    LinearLayout localLinearLayout1 = new LinearLayout(RunTime.this);
+                    localLinearLayout1.setOrientation(1);
+                    ScrollView localScrollView1 = new ScrollView(RunTime.this);
+                    LinearLayout localLinearLayout2 = new LinearLayout(RunTime.this);
+                    localLinearLayout2.setOrientation(1);
+                    new ImageView(RunTime.this);
+                    LinearLayout localLinearLayout3 = new LinearLayout(RunTime.this);
+                    localLinearLayout3.setOrientation(0);
+                    LinearLayout localLinearLayout4 = new LinearLayout(RunTime.this);
+                    localLinearLayout4.setOrientation(0);
+                    LinearLayout localLinearLayout5 = new LinearLayout(RunTime.this);
+                    localLinearLayout5.setOrientation(0);
+                    LinearLayout localLinearLayout6 = new LinearLayout(RunTime.this);
+                    localLinearLayout6.setOrientation(0);
+                    LinearLayout localLinearLayout7 = new LinearLayout(RunTime.this);
+                    localLinearLayout7.setOrientation(0);
+                    LinearLayout localLinearLayout8 = new LinearLayout(RunTime.this);
+                    localLinearLayout8.setOrientation(0);
+                    LinearLayout localLinearLayout9 = new LinearLayout(RunTime.this);
+                    localLinearLayout9.setOrientation(0);
+                    LinearLayout localLinearLayout10 = new LinearLayout(RunTime.this);
+                    localLinearLayout10.setOrientation(0);
+                    LinearLayout localLinearLayout11 = new LinearLayout(RunTime.this);
+                    localLinearLayout11.setOrientation(0);
+                    LinearLayout localLinearLayout12 = new LinearLayout(RunTime.this);
+                    localLinearLayout12.setOrientation(0);
+                    //RunTime.access$102(RunTime.this, new CheckBox(RunTime.this));
+                    d2CheckBox = new CheckBox(RunTime.this);
+                    RunTime.this.d2CheckBox.setText("2D");
+                    RunTime.this.d2CheckBox.setOnClickListener(RunTime.this);
+                    //RunTime.access$202(RunTime.this, new EditText(RunTime.this));
+                    d2EditText = new EditText(RunTime.this);
+                    RunTime.this.d2EditText.setTextSize(20.0F);
+                    RunTime.this.d2EditText.setInputType(2);
+                    RunTime.this.d2EditText.setHint(RunTime.this.getString(2131099668));
+                    //RunTime.access$302(RunTime.this, new CheckBox(RunTime.this));
+                    d3CheckBox = new CheckBox(RunTime.this);
+                    RunTime.this.d3CheckBox.setText("3D");
+                    RunTime.this.d3CheckBox.setOnClickListener(RunTime.this);
+                    //RunTime.access$402(RunTime.this, new EditText(RunTime.this));
+                    d3EditText = new EditText(RunTime.this);
+                    RunTime.this.d3EditText.setTextSize(20.0F);
+                    RunTime.this.d3EditText.setInputType(2);
+                    RunTime.this.d3EditText.setHint(RunTime.this.getString(2131099668));
+                    //RunTime.access$502(RunTime.this, new CheckBox(RunTime.this));
+                    mathCheckBox = new CheckBox(RunTime.this);
+                    RunTime.this.mathCheckBox.setText("CPU");
+                    RunTime.this.mathCheckBox.setOnClickListener(RunTime.this);
+                    // RunTime.access$602(RunTime.this, new EditText(RunTime.this));
+                    mathEditText = new EditText(RunTime.this);
+                    RunTime.this.mathEditText.setTextSize(20.0F);
+                    RunTime.this.mathEditText.setInputType(2);
+                    RunTime.this.mathEditText.setHint(RunTime.this.getString(2131099668));
+                    // RunTime.access$702(RunTime.this, new CheckBox(RunTime.this));
+                    vmCheckBox = new CheckBox(RunTime.this);
+                    RunTime.this.vmCheckBox.setText("VM");
+                    RunTime.this.vmCheckBox.setOnClickListener(RunTime.this);
+                    // RunTime.access$802(RunTime.this, new EditText(RunTime.this));
+                    vmEditText = new EditText(RunTime.this);
+                    RunTime.this.vmEditText.setTextSize(20.0F);
+                    RunTime.this.vmEditText.setInputType(2);
+                    RunTime.this.vmEditText.setHint(RunTime.this.getString(2131099668));
+                    // RunTime.access$902(RunTime.this, new CheckBox(RunTime.this));
+                    musicCheckBox = new CheckBox(RunTime.this);
+                    RunTime.this.musicCheckBox.setText("MUSIC");
+                    RunTime.this.musicCheckBox.setOnClickListener(RunTime.this);
+                    // RunTime.access$1002(RunTime.this, new EditText(RunTime.this));
+                    musicEditText = new EditText(RunTime.this);
+                    RunTime.this.musicEditText.setTextSize(20.0F);
+                    RunTime.this.musicEditText.setInputType(2);
+                    RunTime.this.musicEditText.setHint(RunTime.this.getString(2131099668));
+                    // RunTime.access$1102(RunTime.this, new CheckBox(RunTime.this));
+                    videoCheckBox = new CheckBox(RunTime.this);
+                    RunTime.this.videoCheckBox.setText("VIDEO");
+                    RunTime.this.videoCheckBox.setOnClickListener(RunTime.this);
+                    // RunTime.access$1202(RunTime.this, new EditText(RunTime.this));
+                    videoEditText = new EditText(RunTime.this);
+                    RunTime.this.videoEditText.setTextSize(20.0F);
+                    RunTime.this.videoEditText.setInputType(2);
+                    RunTime.this.videoEditText.setHint(RunTime.this.getString(2131099668));
+                    // RunTime.access$1302(RunTime.this, new CheckBox(RunTime.this));
+                    complexCheckBox = new CheckBox(RunTime.this);
+                    RunTime.this.complexCheckBox.setText("COMPLEX");
+                    RunTime.this.complexCheckBox.setOnClickListener(RunTime.this);
+                    // RunTime.access$1402(RunTime.this, new EditText(RunTime.this));
+                    complexEditText = new EditText(RunTime.this);
+                    RunTime.this.complexEditText.setTextSize(20.0F);
+                    RunTime.this.complexEditText.setInputType(2);
+                    RunTime.this.complexEditText.setHint(RunTime.this.getString(2131099668));
+                    // RunTime.access$1502(RunTime.this, new CheckBox(RunTime.this));
+                    sleepCheckBox = new CheckBox(RunTime.this);
+                    RunTime.this.sleepCheckBox.setText("SLEEP");
+                    RunTime.this.sleepCheckBox.setOnClickListener(RunTime.this);
+                    // RunTime.access$1602(RunTime.this, new EditText(RunTime.this));
+                    sleepEditText = new EditText(RunTime.this);
+                    RunTime.this.sleepEditText.setTextSize(20.0F);
+                    RunTime.this.sleepEditText.setInputType(2);
+                    RunTime.this.sleepEditText.setHint(RunTime.this.getString(2131099711));
+                    // RunTime.access$1702(RunTime.this, new CheckBox(RunTime.this));
+                    lcdCheckBox = new CheckBox(RunTime.this);
+                    RunTime.this.lcdCheckBox.setText("LCD");
+                    RunTime.this.lcdCheckBox.setOnClickListener(RunTime.this);
+                    // RunTime.access$1802(RunTime.this, new EditText(RunTime.this));
+                    lcdEditText = new EditText(RunTime.this);
+                    RunTime.this.lcdEditText.setTextSize(20.0F);
+                    RunTime.this.lcdEditText.setInputType(2);
+                    RunTime.this.lcdEditText.setHint(RunTime.this.getString(2131099711));
+                    // RunTime.access$1902(RunTime.this, new CheckBox(RunTime.this));
+                    camCheckBox = new CheckBox(RunTime.this);
+                    RunTime.this.camCheckBox.setText("camera");
+                    RunTime.this.camCheckBox.setOnClickListener(RunTime.this);
+                    //  RunTime.access$2002(RunTime.this, new EditText(RunTime.this));
+                    camEditText = new EditText(RunTime.this);
+                    RunTime.this.camEditText.setTextSize(20.0F);
+                    RunTime.this.camEditText.setInputType(2);
+                    RunTime.this.camEditText.setHint(RunTime.this.getString(2131099711));
+                    LinearLayout localLinearLayout13 = new LinearLayout(RunTime.this);
+                    // RunTime.access$002(RunTime.this, new Button(RunTime.this));
+                    // RunTime.access$2102(RunTime.this, new Button(RunTime.this));
+                    mRun = new Button(RunTime.this);
+                    mShow = new Button(RunTime.this);
+
+                    RunTime.this.mRun.setText("Run");
+                    RunTime.this.mShow.setText("Show");
+                    RunTime.this.mRun.setOnClickListener(RunTime.this);
+                    RunTime.this.mShow.setOnClickListener(RunTime.this);
+                    localLinearLayout13.addView(RunTime.this.mRun, localLayoutParams);
+                    localLinearLayout13.addView(RunTime.this.mShow, localLayoutParams);
+                    WebView localWebView = new WebView(RunTime.this);
+                    localWebView.clearCache(true);
+                    WebViewClient local1 = new WebViewClient() {
+                        public void onPageFinished(WebView paramAnonymous2WebView, String paramAnonymous2String) {
+                            Log.i("Benchmark", "Tracker: " + paramAnonymous2WebView.getTitle() + " -> " + paramAnonymous2String);
+                        }
+
+                        public void onReceivedError(WebView paramAnonymous2WebView, int paramAnonymous2Int, String paramAnonymous2String1, String paramAnonymous2String2) {
+                            Log.e("Benchmark", "Track err: " + paramAnonymous2String1);
+                        }
+                    };
+                    localWebView.setWebViewClient(local1);
+                    localWebView.loadUrl("http://0xbenchmark.appspot.com/static/MobileTracker.html");
+                    localLinearLayout2.addView(localLinearLayout5);
+                    localLinearLayout5.addView(RunTime.this.mathCheckBox);
+                    localLinearLayout5.addView(RunTime.this.mathEditText);
+                    localLinearLayout2.addView(localLinearLayout3);
+                    localLinearLayout3.addView(RunTime.this.d2CheckBox);
+                    localLinearLayout3.addView(RunTime.this.d2EditText);
+                    localLinearLayout2.addView(localLinearLayout4);
+                    localLinearLayout4.addView(RunTime.this.d3CheckBox);
+                    localLinearLayout4.addView(RunTime.this.d3EditText);
+                    localLinearLayout2.addView(localLinearLayout6);
+                    localLinearLayout6.addView(RunTime.this.vmCheckBox);
+                    localLinearLayout6.addView(RunTime.this.vmEditText);
+                    localLinearLayout2.addView(localLinearLayout7);
+                    localLinearLayout7.addView(RunTime.this.musicCheckBox);
+                    localLinearLayout7.addView(RunTime.this.musicEditText);
+                    localLinearLayout2.addView(localLinearLayout8);
+                    localLinearLayout8.addView(RunTime.this.videoCheckBox);
+                    localLinearLayout8.addView(RunTime.this.videoEditText);
+                    localLinearLayout2.addView(localLinearLayout9);
+                    localLinearLayout9.addView(RunTime.this.complexCheckBox);
+                    localLinearLayout9.addView(RunTime.this.complexEditText);
+                    localLinearLayout2.addView(localLinearLayout11);
+                    localLinearLayout11.addView(RunTime.this.lcdCheckBox);
+                    localLinearLayout11.addView(RunTime.this.lcdEditText);
+                    localLinearLayout2.addView(localLinearLayout12);
+                    localLinearLayout12.addView(RunTime.this.camCheckBox);
+                    localLinearLayout12.addView(RunTime.this.camEditText);
+                    localLinearLayout2.addView(localLinearLayout13, localLayoutParams2);
+                    localLinearLayout2.addView(localWebView, 0, 0);
+                    localScrollView1.addView(localLinearLayout2, localLayoutParams1);
+                    localLinearLayout1.addView(localScrollView1, localLayoutParams2);
+                    return localLinearLayout1;
+                }
+                LinearLayout localLinearLayout14 = new LinearLayout(RunTime.this);
+                localLinearLayout14.setOrientation(1);
+                ScrollView localScrollView2 = new ScrollView(RunTime.this);
+                LinearLayout localLinearLayout15 = new LinearLayout(RunTime.this);
+                localLinearLayout15.setOrientation(1);
+                localScrollView2.addView(localLinearLayout15, localLayoutParams1);
+                localLinearLayout14.addView(localScrollView2, localLayoutParams2);
+                int i = 1;
+                int j = RunTime.this.mCases.size();
+                Log.i("Benchmark", "L: " + j);
+                Log.i("Benchmark", "TCF: " + paramAnonymousString);
+                int k = 0;
+                while (k < j)
+                    if (!((HashSet) RunTime.this.mCategory.get(paramAnonymousString)).contains(RunTime.this.mCases.get(k))) {
+                        k++;
+                    } else {
+                        Log.i("Benchmark", "Add: " + k);
+                        localLinearLayout15.addView(RunTime.this.mCheckList[k], localLayoutParams2);
+                        localLinearLayout15.addView(RunTime.this.mDesc[k], localLayoutParams2);
+                        if (i != 0) {
+                            RunTime.this.mCheckList[k].setBackgroundColor(-13421773);
+                            RunTime.this.mDesc[k].setBackgroundColor(-13421773);
+                        }
+                        if (i == 0) ;
+                        for (i = 1; ; i = 0)
+                            break;
+                    }
+                return localLinearLayout14;
+            }
+        };
+        this.mTabHost.addTab(this.mTabHost.newTabSpec("Main").setIndicator("Main", getResources().getDrawable(2130837530)).setContent(local3));
+    }
+
+    private boolean writeResult(String paramString1, String paramString2) {
+        File localFile1 = new File(BenchUtil.getResultDir(this));
+        if (!localFile1.exists())
+            localFile1.mkdirs();
+        File localFile2 = new File(localFile1, paramString1);
+        if (localFile2.exists()) {
+            Log.w("Benchmark", "File exists, delete " + localFile1.getPath() + paramString1);
+            localFile2.delete();
+        }
+        try {
+            localFile2.createNewFile();
+            FileOutputStream localFileOutputStream = new FileOutputStream(localFile2);
+            localFileOutputStream.write(paramString2.getBytes());
+            localFileOutputStream.flush();
+            return true;
+        } catch (Exception localException) {
+            Log.i("Benchmark", "Write Failed.");
+            localException.printStackTrace();
+        }
+        return false;
+    }
+
+    public boolean dispatchKeyEvent(KeyEvent paramKeyEvent) {
+        if (this.mTouchable)
+            return super.dispatchKeyEvent(paramKeyEvent);
+        return true;
+    }
+
+    public boolean dispatchTouchEvent(MotionEvent paramMotionEvent) {
+        if (this.mTouchable)
+            return super.dispatchTouchEvent(paramMotionEvent);
+        return true;
+    }
+
+    public boolean dispatchTrackballEvent(MotionEvent paramMotionEvent) {
+        if (this.mTouchable)
+            return super.dispatchTrackballEvent(paramMotionEvent);
+        return true;
+    }
+
+    public String getJSONResult() {
+
+        int i = 0;
+        Date localDate = new Date();
+        SimpleDateFormat localSimpleDateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'");
+        JSONObject localJSONObject1 = new JSONObject();
+        try {
+            JSONArray localJSONArray1 = new JSONArray();
+            JSONObject localJSONObject2 = new JSONObject();
+            localJSONObject2.put("analyzer_assigned_date", localSimpleDateFormat.format(localDate));
+            localJSONObject2.put("time_check_performed", false);
+            localJSONObject2.put("analyzer_assigned_uuid", UUID.randomUUID().toString());
+            localJSONObject2.put("test_id", "0xbench");
+            JSONArray localJSONArray2 = new JSONArray();
+            i = 0;
+            if (i < this.mCases.size()) {
+                JSONArray localJSONArray3 = ((Case) this.mCases.get(i)).getJSONBenchmark();
+                for (int j = 0; j < localJSONArray3.length(); j++)
+                    localJSONArray2.put(localJSONArray3.get(j));
+            }
+            localJSONObject2.put("test_results", localJSONArray2);
+            localJSONArray1.put(localJSONObject2);
+            localJSONObject1.put("test_runs", localJSONArray1);
+            localJSONObject1.put("format", "Dashboard Bundle Format 1.2");
+            return localJSONObject1.toString();
+        } catch (JSONException localJSONException) {
+            // while (true)
+            {
+                //int i;
+                localJSONException.printStackTrace();
+                //continue;
+                // i++;
+            }
+        }
+        return CAM;
+    }
+
+    public String getResult() {
+        String str1 = "";
+        int i = 0;
+        if (i < this.mCases.size()) {
+            Case localCase = (Case) this.mCases.get(i);
+            if (!localCase.couldFetchReport()) {
+                //do nothing
+            } else//while (true)
+            {
+                i++;
+                // break;
+                String str2 = str1 + "============================================================\n";
+                String str3 = str2 + localCase.getTitle() + "\n";
+                String str4 = str3 + "------------------------------------------------------------\n";
+                str1 = str4 + localCase.getResultOutput().trim() + "\n";
+            }
+        }
+        return str1 + "============================================================\n";
+    }
+
+    public String getXMLResult() {
+
+        BufferedReader localBufferedReader1;
+        StringBuffer localStringBuffer1;
+
+        if (this.mCases.size() == 0)
+            return "";
+        Date localDate = new Date();
+        SimpleDateFormat localSimpleDateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssz");
+        String str1 = "" + "<?xml version=\"1.0\" encoding=\"UTF-8\"?>";
+        String str2 = str1 + "<result";
+        String str3 = str2 + " executedTimestamp=\"" + localSimpleDateFormat.format(localDate) + "\"";
+        String str4 = str3 + " manufacturer=\"" + Build.MANUFACTURER.replace(' ', '_') + "\"";
+        String str5 = str4 + " model=\"" + Build.MODEL.replace(' ', '_') + ":" + Build.DISPLAY + "\"";
+        String str6 = str5 + " buildTimestamp=\"" + localSimpleDateFormat.format(new Date(Build.TIME)) + "\"";
+
+        String str7 = null;
+        Object localObject = str6 + " orientation=\"" + Integer.toString(this.orientation) + "\"";
+        try {
+            localBufferedReader1 = new BufferedReader(new FileReader("/proc/version"));
+            localStringBuffer1 = new StringBuffer();
+            //while (true)
+            {
+                String str11 = localBufferedReader1.readLine();
+                // if (str11 == null)
+                //  break;
+                localStringBuffer1.append(str11);
+            }
+            localBufferedReader1.close();
+            String str12 = localStringBuffer1.toString().replace("[\n\r]+", " ").replace(" +", ".");
+            String str13 = (String) localObject + " version=\"" + str12 + "\"";
+            localObject = str13;
+            //break;
+        } catch (IOException localIOException1) {
+            // BufferedReader localBufferedReader1;
+            //StringBuffer localStringBuffer1;
+            Log.e("Benchmark", "opening /proc/version failed: " + localIOException1.toString());
+            BufferedReader localBufferedReader2;
+            StringBuffer localStringBuffer2;
+            try {
+                localBufferedReader2 = new BufferedReader(new FileReader("/proc/cpuinfo"));
+                localStringBuffer2 = new StringBuffer();
+                //while (true)
+                {
+                    String str8 = localBufferedReader2.readLine();
+                    ////if (str8 == null)
+                    // break;
+                    localStringBuffer2.append(str8 + "\n");
+                }
+                //  while (true)
+                {
+                    str7 = (String) localObject + ">";
+                    for (int i = 0; i < this.mCases.size(); i++) {
+                        Case localCase = (Case) this.mCases.get(i);
+                        str7 = str7 + localCase.getXMLBenchmark();
+                    }
+
+                    localBufferedReader2.close();
+                    String str9 = localStringBuffer2.toString();
+                    StringBuffer localStringBuffer3 = new StringBuffer();
+                    Matcher localMatcher1 = Pattern.compile("(Processor\\s*:\\s*(.*)\\s*[\n\r]+)").matcher(str9);
+                    if (localMatcher1.find())
+                        localStringBuffer3.append(localMatcher1.group(2));
+                    Matcher localMatcher2 = Pattern.compile("(Hardware\\s*:\\s*(.*)\\s*[\n\r]+)").matcher(str9);
+                    if (localMatcher2.find())
+                        localStringBuffer3.append(":" + localMatcher2.group(2));
+                    Matcher localMatcher3 = Pattern.compile("(Revision\\s*:\\s*(.*)\\s*[\n\r]+)").matcher(str9);
+                    if (localMatcher3.find())
+                        localStringBuffer3.append(":" + localMatcher3.group(2));
+                    Log.e("Benchmark", localStringBuffer3.toString());
+                    String str10 = (String) localObject + " cpu=\"" + localStringBuffer3.toString() + "\"";
+                    localObject = str10;
+                }
+            } catch (IOException localIOException2) {
+                Log.e("Benchmark", "opening /proc/version failed: " + localIOException2.toString());
+            }
+        }
+
+        return str7 + "</result>";
+    }
+
+    protected void onActivityResult(int paramInt1, int paramInt2, Intent paramIntent) {
+        if (paramIntent == null) {
+            Log.i("Benchmark", "oooops....Intent is null");
+            return;
+        }
+        for (int i = 0; ; i++)
+            if (i < this.mCases.size()) {
+                Case localCase = (Case) this.mCases.get(i);
+                if (localCase.realize(paramIntent))
+                    localCase.parseIntent(paramIntent);
+            } else {
+                runCase(this.mCases);
+                return;
+            }
+    }
+
+    public void onClick(View paramView) {
+        int k = 0;
+        int m = 0;
+        int i2 = 0;
+
+        int n = 0;
+        int i = this.mCases.size();
+        String str1 = ((CheckBox) paramView).getText().toString();
+        int j = 0;
+        if (paramView == this.mRun) {
+
+            Log.d("huangchengzhong", "(paramView == this.mRun)");
+            k = 0;
+            m = 0;
+            this.mNumber2d = 0;
+            this.mNumber3d = 0;
+            this.mNumberMath = 0;
+            this.mNumberVm = 0;
+            this.mNumberMusic = 0;
+            this.mNumberVideo = 0;
+            this.mNumberComplex = 0;
+            this.mNumberSleep = 0;
+            if (!checkCharger()) {
+                i2 = 2;
+                // toast("Please connect charger to test!");
+                new AlertDialog.Builder(this).setTitle("warning").setMessage(getString(R.string.tips_alert_charger)).setPositiveButton("ok", new DialogInterface.OnClickListener() {
+                    public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt) {
+                    }
+                }).show();
+                return;
+                // if ((k <= 0) || (i2 != 0))
+                //  break label1082;
+                //runCase(this.mCases);
+            }
+            {
+                // return;
+
+                Log.d("huangchengzhong", "this.mCheckList.length = " + this.mCheckList.length);
+
+                for (int i1 = 0; i1 < mItemList.length; i1++) {
+                    i2 = 0;
+                    if (i1 >= m)
+                        break;
+                    if ((this.mItemList[i1] >= 0) && (this.mItemList[i1] <= 2)) {
+                        if (this.mathEditText.getText().toString().equals("")) {
+                            i2 = 1;
+                            break;
+                        }
+                        ((Case) this.mCases.get(this.mItemList[i1])).setExpireTime(1000 * Integer.valueOf(this.mathEditText.getText().toString()).intValue() / this.mNumberMath);
+                    }
+                    if ((3 <= this.mItemList[i1]) && (this.mItemList[i1] <= 9)) {
+                        if (this.d2EditText.getText().toString().equals("")) {
+                            i2 = 1;
+                            break;
+                        }
+                        ((Case) this.mCases.get(this.mItemList[i1])).setExpireTime(1000 * Integer.valueOf(this.d2EditText.getText().toString()).intValue() / this.mNumber2d);
+                    }
+                    if ((10 <= this.mItemList[i1]) && (this.mItemList[i1] <= 13)) {
+                        if (this.d3EditText.getText().toString().equals("")) {
+                            i2 = 1;
+                            break;
+                        }
+                        ((Case) this.mCases.get(this.mItemList[i1])).setExpireTime(1000 * Integer.valueOf(this.d3EditText.getText().toString()).intValue() / this.mNumber3d);
+                    }
+                    if (this.mItemList[i1] == 14) {
+                        if (this.vmEditText.getText().toString().equals("")) {
+                            i2 = 1;
+                            break;
+                        }
+                        ((Case) this.mCases.get(this.mItemList[i1])).setExpireTime(1000 * Integer.valueOf(this.vmEditText.getText().toString()).intValue() / this.mNumberVm);
+                    }
+                    if (this.mItemList[i1] == 15) {
+                        if (this.musicEditText.getText().toString().equals("")) {
+                            i2 = 1;
+                            break;
+                        }
+                        ((Case) this.mCases.get(this.mItemList[i1])).setExpireTime(1000 * Integer.valueOf(this.musicEditText.getText().toString()).intValue() / this.mNumberMusic);
+                    }
+                    if (this.mItemList[i1] == 16) {
+                        if (this.videoEditText.getText().toString().equals("")) {
+                            i2 = 1;
+                            break;
+                        }
+                        ((Case) this.mCases.get(this.mItemList[i1])).setExpireTime(1000 * Integer.valueOf(this.videoEditText.getText().toString()).intValue() / this.mNumberVideo);
+                    }
+                    if (this.mItemList[i1] == 17) {
+                        if (this.complexEditText.getText().toString().equals("")) {
+                            i2 = 1;
+                            break;
+                        }
+                        ((Case) this.mCases.get(this.mItemList[i1])).setExpireTime(1000 * Integer.valueOf(this.complexEditText.getText().toString()).intValue() / this.mNumberComplex);
+                    }
+                    if (this.mItemList[i1] == 18) {
+                        if (this.sleepEditText.getText().toString().equals("")) {
+                            i2 = 1;
+                            break;
+                        }
+                        ((Case) this.mCases.get(this.mItemList[i1])).setExpireTime(1000 + 1000 * Integer.valueOf(this.complexEditText.getText().toString()).intValue() / this.mNumberComplex);
+                    }
+                }
+                Log.d("Benchmark", "[ww_debug] run Exception errFlag = " + i2);
+                if (i2 == 1) {
+                    new AlertDialog.Builder(this).setTitle("warning").setMessage(getString(R.string.tips_alert_time)).setPositiveButton("ok", new DialogInterface.OnClickListener() {
+                        public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt) {
+                        }
+                    }).show();
+                    return;
+                }
+            }
+            // else
+            runCase(this.mCases);
+        } else if ((paramView == this.d2CheckBox) || (paramView == this.d3CheckBox) || (paramView == this.mathCheckBox) || (paramView == this.vmCheckBox) || (paramView == this.musicCheckBox) || (paramView == this.videoCheckBox) || (paramView == this.complexCheckBox) || (paramView == this.sleepCheckBox)) {
+            if (n < this.mCheckList.length) {
+                if (this.mCheckList[n].isChecked()) {
+                    ((Case) this.mCases.get(n)).reset();
+                    k++;
+                    Log.d("Benchmark", "[ww_debug] i = " + n);
+                    this.mItemList[m] = n;
+                    m++;
+                    if ((n >= 0) && (n <= 2))
+                        this.mNumberMath = (1 + this.mNumberMath);
+                } else//while (true)
+                {
+                    n++;
+                    // break;
+                    if ((3 <= n) && (n <= 9)) {
+                        this.mNumber2d = (1 + this.mNumber2d);
+                    } else if ((10 <= n) && (n <= 13)) {
+                        this.mNumber3d = (1 + this.mNumber3d);
+                    } else if (n == 14) {
+                        this.mNumberVm = (1 + this.mNumberVm);
+                    } else if (n == 15) {
+                        this.mNumberMusic = (1 + this.mNumberMusic);
+                    } else if (n == 16) {
+                        this.mNumberVideo = (1 + this.mNumberVideo);
+                    } else if (n == 17) {
+                        this.mNumberComplex = (1 + this.mNumberComplex);
+                    } else if (n == 18) {
+                        this.mNumberSleep = (1 + this.mNumberSleep);
+                        // continue;
+                        ((Case) this.mCases.get(n)).clear();
+                    }
+                }
+            }
+
+        } else if (paramView == this.mShow) {
+            String str2 = getResult();
+            Log.i("Benchmark", "\n\n" + str2 + "\n\n");
+            writeResult("0xBenchmark", str2);
+            Intent localIntent = new Intent();
+            localIntent.putExtra("REPORT", str2);
+            localIntent.putExtra("XML", mXMLResult);
+            localIntent.setClassName(Report.packageName(), Report.fullClassName());
+            startActivity(localIntent);
+            return;
+        }
+        // label1082:
+        // do
+        // {
+        //do
+
+        // while (i2 != 2);
+
+        // return;
+        //}
+        //while ((paramView != this.d2CheckBox) && (paramView != this.d3CheckBox) && (paramView != this.mathCheckBox) && (paramView != this.vmCheckBox) && (paramView != this.musicCheckBox) && (paramView != this.videoCheckBox) && (paramView != this.complexCheckBox) && (paramView != this.sleepCheckBox));
+        // label1400: if (j < i)
+        //  if (((HashSet)this.mCategory.get(str1)).contains(this.mCases.get(j)))
+        //    break label1438;
+        //  while (true)
+        //  {
+        // j++;
+        // break label1400;
+        // break;
+        // label1438: this.mCheckList[j].setChecked(((CheckBox)paramView).isChecked());
+        // }
+    }
+
+    protected void onCreate(Bundle paramBundle) {
+        super.onCreate(paramBundle);
+        this.orientation = getResources().getConfiguration().orientation;
+        this.mWakeLock = ((PowerManager) getSystemService("power")).newWakeLock(6, "Benchmark");
+        this.mWakeLock.acquire();
+        setContentView(R.layout.main);
+        this.mCases = new LinkedList();
+        CaseArithmetic localCaseArithmetic = new CaseArithmetic();
+        CaseJavascript localCaseJavascript = new CaseJavascript();
+        CaseScimark2 localCaseScimark2 = new CaseScimark2();
+        CaseCanvas localCaseCanvas = new CaseCanvas();
+        CaseGLCube localCaseGLCube = new CaseGLCube();
+        CaseDrawCircle localCaseDrawCircle = new CaseDrawCircle();
+        CaseNeheLesson08 localCaseNeheLesson08 = new CaseNeheLesson08();
+        CaseNeheLesson16 localCaseNeheLesson16 = new CaseNeheLesson16();
+        CaseTeapot localCaseTeapot = new CaseTeapot();
+        CaseGC localCaseGC = new CaseGC();
+        CaseDrawCircle2 localCaseDrawCircle2 = new CaseDrawCircle2();
+        CaseDrawRect localCaseDrawRect = new CaseDrawRect();
+        CaseDrawArc localCaseDrawArc = new CaseDrawArc();
+        CaseDrawImage localCaseDrawImage = new CaseDrawImage();
+        CaseDrawText localCaseDrawText = new CaseDrawText();
+        CaseMusic localCaseMusic = new CaseMusic();
+        CaseVideo localCaseVideo = new CaseVideo();
+        CaseComplex localCaseComplex = new CaseComplex();
+        CaseSleep localCaseSleep = new CaseSleep();
+        this.mCategory.put("2D", new HashSet());
+        this.mCategory.put("3D", new HashSet());
+        this.mCategory.put("CPU", new HashSet());
+        this.mCategory.put("VM", new HashSet());
+        this.mCategory.put("MUSIC", new HashSet());
+        this.mCategory.put("VIDEO", new HashSet());
+        this.mCategory.put("COMPLEX", new HashSet());
+        this.mCategory.put("SLEEP", new HashSet());
+        this.mCases.add(localCaseArithmetic);
+        this.mCases.add(localCaseScimark2);
+        this.mCases.add(localCaseJavascript);
+        ((HashSet) this.mCategory.get("CPU")).add(localCaseArithmetic);
+        ((HashSet) this.mCategory.get("CPU")).add(localCaseScimark2);
+        this.mCases.add(localCaseCanvas);
+        this.mCases.add(localCaseDrawCircle);
+        this.mCases.add(localCaseDrawCircle2);
+        this.mCases.add(localCaseDrawRect);
+        this.mCases.add(localCaseDrawArc);
+        this.mCases.add(localCaseDrawImage);
+        this.mCases.add(localCaseDrawText);
+        ((HashSet) this.mCategory.get("2D")).add(localCaseCanvas);
+        ((HashSet) this.mCategory.get("2D")).add(localCaseDrawCircle);
+        ((HashSet) this.mCategory.get("2D")).add(localCaseDrawCircle2);
+        ((HashSet) this.mCategory.get("2D")).add(localCaseDrawRect);
+        ((HashSet) this.mCategory.get("2D")).add(localCaseDrawArc);
+        ((HashSet) this.mCategory.get("2D")).add(localCaseDrawImage);
+        ((HashSet) this.mCategory.get("2D")).add(localCaseDrawText);
+        this.mCases.add(localCaseGLCube);
+        this.mCases.add(localCaseNeheLesson08);
+        this.mCases.add(localCaseNeheLesson16);
+        this.mCases.add(localCaseTeapot);
+        ((HashSet) this.mCategory.get("3D")).add(localCaseGLCube);
+        ((HashSet) this.mCategory.get("3D")).add(localCaseNeheLesson08);
+        ((HashSet) this.mCategory.get("3D")).add(localCaseNeheLesson16);
+        ((HashSet) this.mCategory.get("3D")).add(localCaseTeapot);
+        this.mCases.add(localCaseGC);
+        ((HashSet) this.mCategory.get("VM")).add(localCaseGC);
+        this.mCases.add(localCaseMusic);
+        ((HashSet) this.mCategory.get("MUSIC")).add(localCaseMusic);
+        this.mCases.add(localCaseVideo);
+        ((HashSet) this.mCategory.get("VIDEO")).add(localCaseVideo);
+        this.mCases.add(localCaseComplex);
+        ((HashSet) this.mCategory.get("COMPLEX")).add(localCaseComplex);
+        this.mCases.add(localCaseSleep);
+        ((HashSet) this.mCategory.get("SLEEP")).add(localCaseSleep);
+        initViews();
+        this.mNumber2d = 0;
+        this.mNumber3d = 0;
+        this.mNumberMath = 0;
+        this.mNumberVm = 0;
+        this.mNumberMusic = 0;
+        this.mNumberVideo = 0;
+        this.mNumberComplex = 0;
+        this.mNumberSleep = 0;
+        Bundle localBundle = getIntent().getExtras();
+        if (localBundle != null) {
+            this.mAutoRun = localBundle.getBoolean("autorun");
+            this.mCheckMath = localBundle.getBoolean("math");
+            this.mCheck2D = localBundle.getBoolean("2d");
+            this.mCheck3D = localBundle.getBoolean("3d");
+            this.mCheckVM = localBundle.getBoolean("vm");
+            this.mCheckMusic = localBundle.getBoolean("music");
+            this.mCheckVideo = localBundle.getBoolean("video");
+            this.mCheckComplex = localBundle.getBoolean("complex");
+            this.mCheckSleep = localBundle.getBoolean("sleep");
+        }
+        if ((this.mCheckMath) && (!this.mathCheckBox.isChecked()))
+            this.mathCheckBox.performClick();
+        if ((this.mCheck2D) && (!this.d2CheckBox.isChecked()))
+            this.d2CheckBox.performClick();
+        if ((this.mCheck3D) && (!this.d3CheckBox.isChecked()))
+            this.d3CheckBox.performClick();
+        if ((this.mCheckVM) && (!this.vmCheckBox.isChecked()))
+            this.vmCheckBox.performClick();
+        if ((this.mCheckMusic) && (!this.musicCheckBox.isChecked()))
+            this.musicCheckBox.performClick();
+        if ((this.mCheckVideo) && (!this.videoCheckBox.isChecked()))
+            this.videoCheckBox.performClick();
+        if ((this.mCheckComplex) && (!this.complexCheckBox.isChecked()))
+            this.complexCheckBox.performClick();
+        if ((this.mCheckSleep) && (!this.sleepCheckBox.isChecked()))
+            this.sleepCheckBox.performClick();
+        if (this.mAutoRun)
+            onClick(this.mRun);
+    }
+
+    public boolean onCreateOptionsMenu(Menu paramMenu) {
+        super.onCreateOptionsMenu(paramMenu);
+        paramMenu.add(0, 1, 0, 2131099666);
+        return true;
+    }
+
+    protected void onDestroy() {
+        super.onPause();
+        this.mWakeLock.release();
+    }
+
+    public boolean onOptionsItemSelected(MenuItem paramMenuItem) {
+        if ((paramMenuItem.getGroupId() == 0) && (paramMenuItem.getItemId() == 1))
+            Util.launchActivity(this, "com.techain.runtime.ActivitySettings");
+        return true;
+    }
+
+    public void runCase(LinkedList<Case> paramLinkedList) {
+        Case localCase = null;
+        int i = 1;
+        int j = 0;
+        Intent localIntent;
+
+        Log.d("huangchengzhong", "runCase paramLinkedList==" + paramLinkedList);
+        if (j < paramLinkedList.size()) {
+            localCase = paramLinkedList.get(j);
+            if (!localCase.isFinish())
+                i = 0;
+        } else {
+            if (i == 0)
+                //  break label89;
+                writeResult("0xBenchmark", getResult());
+            new ProgressDialog(this);
+            new Thread() {
+                public void run() {
+                    // RunTime.access$2102(RunTime.this.getJSONResult());
+                    //RunTime.access$2202(RunTime.this.getXMLResult());
+                    Log.d("Benchmark", "XML: " + RunTime.mXMLResult);
+                    writeResult("0xBenchmark.xml", RunTime.mXMLResult);
+                    Log.d("Benchmark", "JSON: " + RunTime.mJSONResult);
+                    writeResult("0xBenchmark.bundle", RunTime.mJSONResult);
+                    mShow.setClickable(true);
+                    onClick(RunTime.this.mShow);
+                    mTouchable = true;
+                    //dialogGetXml.dismiss();
+                }
+            }.start();
+        }
+        // label89: Intent localIntent;
+        do {
+            j++;
+            localIntent = localCase.generateIntent();
+        } while (localIntent == null);
+        startActivityForResult(localIntent, 0);
+    }
+
+    public void toast(Object paramObject) {
+        if (paramObject == null)
+            return;
+        Toast.makeText(this, paramObject + "", 0).show();
+    }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.techain.runtime.RunTime
+ * JD-Core Version:    0.6.2
+ */
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/MicroBenchmark.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/MicroBenchmark.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/MicroBenchmark.java	(revision 167997)
@@ -0,0 +1,103 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import java.io.InputStreamReader;
+import java.io.OutputStream;
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.net.HttpURLConnection;
+import java.net.URL;
+
+import android.util.Log;
+import android.os.Handler;
+import android.os.Bundle;
+import android.os.SystemClock;
+import android.os.Message;
+
+/* code adapted from Caliper Project */
+
+class MicroBenchmark extends Thread {
+    final static int FAILED = -1;
+    final static int DONE = 0;
+    final static int RUNNING = 1;
+
+    final static String STATE = "STATE";
+    final static String MSG = "MSG";
+    final static String TAG = "MicroBenchmarkThread";
+
+    Handler mHandler;
+
+    String xml;
+    String postUrl;
+    String apiKey;
+    String benchmarkName;
+
+    MicroBenchmark(String _xml, String _postUrl, String _apiKey, String _benchmarkName, Handler h) {
+        xml = _xml;
+        postUrl = _postUrl;
+        apiKey = _apiKey;
+        benchmarkName = _benchmarkName;
+        mHandler = h;
+    }
+
+    private void updateState(int state, String info) {
+        Bundle b = new Bundle();
+        b.putInt(STATE, state);
+        b.putString(MSG, info);
+        Message msg = mHandler.obtainMessage();
+        msg.setData(b);
+        mHandler.sendMessage(msg);
+
+        Log.e(TAG, "set state: " + state);
+    }
+
+    private void updateState(int state) {
+        updateState(state, "");
+    }
+
+    public void upload() {
+        updateState(RUNNING);
+        try {
+            URL url = new URL(postUrl + apiKey + "/" + benchmarkName);
+            HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();
+            urlConnection.setDoOutput(true);
+
+            OutputStream post = urlConnection.getOutputStream();
+            Log.e(TAG, xml);
+            post.write(xml.getBytes());
+
+            int responseCode = urlConnection.getResponseCode();
+            Log.e(TAG, ""+responseCode);
+
+            if (responseCode != 200) {
+                updateState(FAILED, "Connection failed with response code " + responseCode);
+                return;
+            }
+        } catch (IOException e) {
+            updateState(FAILED, e.toString());
+            return;
+        }
+        updateState(DONE);
+
+    }
+
+    public void run() {
+        upload();
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseGC.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseGC.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseGC.java	(revision 167997)
@@ -0,0 +1,110 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+import android.widget.*;
+import android.view.*;
+import java.nio.*;
+import java.util.ArrayList;
+
+public class CaseGC extends Case {
+
+    String mStringBuf = "";
+    public static String GCRESULT = "GC_RESULT";
+    public static String TIME = "GC_RUNTIME";
+    public static double time = 0.0;
+
+    CaseGC() {
+        super("CaseGC", "com.techain.runtime.TesterGC", 1, 1); // GC benchmark only run once
+
+        mType = "msec";
+        String [] _tmp = {
+            "dalvik",
+            "garbagecollection",
+        };
+        mTags = _tmp;
+    }
+
+    public String getTitle() {
+        return "Garbage Collection";
+    }
+
+    public String getDescription() {
+        return "It create long-live binary tree of depth and array of doubles to test GC";
+    }
+
+    @Override
+    public void clear() {
+        super.clear();
+        mStringBuf = "";
+    }
+
+    @Override
+    public void reset() {
+        super.reset();
+        mStringBuf = "";
+    }
+
+    @Override
+    public String getResultOutput() {
+
+        if (!couldFetchReport()) {
+            return "No benchmark report";
+        }
+
+        return mStringBuf;
+    }
+
+    public double getBenchmark(Scenario s) {
+        return time;
+    }
+
+    @Override
+    public ArrayList<Scenario> getScenarios () {
+        ArrayList<Scenario> scenarios = new ArrayList<Scenario>();
+
+        Scenario s = new Scenario(getTitle(), mType, mTags);
+        s.mLog = getResultOutput();
+        s.mResults.add(time);
+        scenarios.add(s);
+
+        return scenarios;
+    }
+
+    @Override
+    protected boolean saveResult(Intent intent, int index) {
+        String result = intent.getStringExtra(GCRESULT);
+        time = intent.getDoubleExtra(TIME, 0.0);
+
+        if (result == null || result.equals("")) {
+            mStringBuf += "\nReport not found\n";
+        } else {
+            mStringBuf += "\n"+result+"\n";
+        }
+
+        return true;
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterCam.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterCam.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterCam.java	(revision 167997)
@@ -0,0 +1,134 @@
+package com.techain.runtime;
+
+import android.hardware.Camera;
+import android.os.Bundle;
+import android.os.Handler;
+import android.util.Log;
+import android.view.SurfaceHolder;
+import android.view.SurfaceHolder.Callback;
+import android.view.SurfaceView;
+import android.view.Window;
+
+import java.io.IOException;
+
+public class TesterCam extends Tester
+        implements SurfaceHolder.Callback {
+    public static final String PACKAGE = "com.techain.runtime";
+    public final String TAG = "TesterCam";
+    private int camType = 0;
+    private boolean hasStartPreview = false;
+    private Camera mCam;
+    private final int mCamExpireTime = 5000;
+    private Handler mCamHandler = new Handler();
+    private Runnable mCamRunnable = new Runnable() {
+        public void run() {
+            Log.d("TesterCam", "hasStartPreview=" + TesterCam.this.hasStartPreview);
+            if (!TesterCam.this.hasStartPreview) {
+                TesterCam.this.mCam.startPreview();
+                // TesterCam.access$002(TesterCam.this, true);
+            } else//while (true)
+            {
+                TesterCam.this.mCamHandler.postDelayed(TesterCam.this.mCamRunnable, 5000L);
+                // return;
+                TesterCam.this.mCam.stopPreview();
+                // TesterCam.access$002(TesterCam.this, false);
+            }
+        }
+    };
+    private SurfaceHolder surfaceHolder;
+    private SurfaceView surfaceView;
+
+    public static String getFullClassName() {
+        return getPackage() + ".TesterCam";
+    }
+
+    public static String getPackage() {
+        return "com.techain.runtime";
+    }
+
+    public String getTag() {
+        return "TesterCam";
+    }
+
+    public void onCreate(Bundle paramBundle) {
+        super.onCreate(paramBundle);
+        requestWindowFeature(1);
+        getWindow().setFlags(1024, 1024);
+        setContentView(2130903041);
+        this.surfaceView = ((SurfaceView) findViewById(2131165185));
+        this.surfaceHolder = this.surfaceView.getHolder();
+        this.surfaceHolder.addCallback(this);
+        this.surfaceHolder.setType(3);
+        this.camType = 0;
+        Log.d("TesterCam", "[ww_debug] oncreate");
+    }
+
+    public void oneRound() {
+    }
+
+    public int sleepBeforeStart() {
+        return 1000;
+    }
+
+    public int sleepBetweenRound() {
+        return 0;
+    }
+
+    public void surfaceChanged(SurfaceHolder paramSurfaceHolder, int paramInt1, int paramInt2, int paramInt3) {
+        Log.d("TesterCam", "surfaceChanged");
+        if ((this.mCam != null) && (!this.hasStartPreview)) {
+            Log.d("TesterCam", "startPreview");
+            this.mCam.startPreview();
+            this.hasStartPreview = true;
+            this.mCamHandler.removeCallbacks(this.mCamRunnable);
+            this.mCamHandler.postDelayed(this.mCamRunnable, 5000L);
+            startTester();
+            return;
+        }
+        Log.e("TesterCam", "surfaceChanged error mCam=" + this.mCam + " hasStartPreview=" + this.hasStartPreview);
+    }
+
+    public void surfaceCreated(SurfaceHolder paramSurfaceHolder) {
+        Log.d("TesterCam", "surfaceCreated");
+        this.hasStartPreview = false;
+        try {
+            if (this.mCam == null)
+                this.mCam = Camera.open();
+        } catch (Exception localException) {
+            try {
+                // while (true)
+                {
+                    this.mCam.setPreviewDisplay(this.surfaceHolder);
+                    //return;
+                    localException = localException;
+                    localException.printStackTrace();
+                    finish();
+                }
+            } catch (IOException localIOException) {
+                Log.d("TesterCam", "error");
+                this.mCam.release();
+                this.mCam = null;
+                finish();
+            }
+        }
+    }
+
+    public void surfaceDestroyed(SurfaceHolder paramSurfaceHolder) {
+        Log.d("TesterCam", "surfaceDestroyed");
+        this.mCamHandler.removeCallbacks(this.mCamRunnable);
+        if (this.mCam != null) {
+            if (this.hasStartPreview) {
+                this.mCam.stopPreview();
+                this.hasStartPreview = false;
+            }
+            this.surfaceHolder = null;
+            this.mCam.release();
+            this.mCam = null;
+        }
+    }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.techain.runtime.TesterCam
+ * JD-Core Version:    0.6.2
+ */
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterLcd.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterLcd.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterLcd.java	(revision 167997)
@@ -0,0 +1,99 @@
+package com.techain.runtime;
+
+import android.content.Context;
+import android.graphics.Canvas;
+import android.os.Bundle;
+import android.view.View;
+import java.util.Random;
+
+public class TesterLcd extends Tester
+{
+  public static final String PACKAGE = "com.techain.runtime";
+  public final String TAG = "TesterLcd";
+  MyView mView;
+
+  public static String getFullClassName()
+  {
+    return getPackage() + ".TesterLcd";
+  }
+
+  public static String getPackage()
+  {
+    return "com.techain.runtime";
+  }
+
+  public String getTag()
+  {
+    return "TesterLcd";
+  }
+
+  public void onCreate(Bundle paramBundle)
+  {
+    super.onCreate(paramBundle);
+    this.mView = new MyView(this);
+    setContentView(this.mView);
+  }
+
+  public void oneRound()
+  {
+    this.mView.postInvalidate();
+  }
+
+  public int sleepBeforeStart()
+  {
+    return 1000;
+  }
+
+  public int sleepBetweenRound()
+  {
+    return 1000;
+  }
+
+  class MyView extends View
+  {
+    boolean flag = false;
+    int i = 0;
+    Random mRandom = new Random();
+
+    MyView(Context arg2)
+    {
+      super(arg2);
+    }
+
+    public void onDraw(Canvas paramCanvas)
+    {
+      super.onDraw(paramCanvas);
+      int j;
+	  boolean bool = false;
+      if (this.flag)
+      {
+        j = -1;
+      //  if (!this.flag)
+	//for (boolean bool = false; ; bool = true)
+      {
+        this.flag = bool;
+        paramCanvas.drawRGB(j, j, j);
+        TesterLcd.this.decreaseCounter();
+        //return;
+        j = -16777216;
+        //break;
+      }
+         // break label49;
+      }
+     // label49: 
+    }
+
+    protected void onWindowVisibilityChanged(int paramInt)
+    {
+      super.onWindowVisibilityChanged(paramInt);
+      if (paramInt != 0)
+        return;
+      TesterLcd.this.startTester();
+    }
+  }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.techain.runtime.TesterLcd
+ * JD-Core Version:    0.6.2
+ */
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/Benchmark.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/Benchmark.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/Benchmark.java	(revision 167997)
@@ -0,0 +1,791 @@
+/*
+ * Copyright (C) 2010-2011 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ * Authored by Julian Chu <walkingice@0xlab.org> and
+ *             Joseph Chang (bizkit) <bizkit@0xlab.org>
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+
+import android.app.Activity;
+import android.app.ActivityManager;
+import android.app.ProgressDialog;
+import android.app.TabActivity;
+import android.content.Context;
+import android.content.Intent;
+import android.content.res.Configuration;
+import android.os.Build;
+import android.os.Bundle;
+import android.os.Environment;
+import android.os.Handler;
+import android.os.Message;
+import android.os.PowerManager;
+import android.os.PowerManager.WakeLock;
+import android.os.SystemClock;
+import android.view.Gravity;
+import android.view.KeyEvent;
+import android.view.Menu;
+import android.view.MenuItem;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.ViewGroup;
+import android.webkit.WebView;
+import android.webkit.WebViewClient;
+import android.widget.Button;
+import android.widget.CheckBox;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+import android.widget.ScrollView;
+import android.widget.TabHost;
+import android.widget.TabHost.TabContentFactory;
+import android.widget.TextView;
+
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.FileReader;
+import java.io.IOException;
+import java.lang.StringBuffer;
+import java.text.SimpleDateFormat;
+import java.util.Arrays;
+import java.util.Date;
+import java.util.HashSet;
+import java.util.HashMap;
+import java.util.LinkedList;
+import java.util.regex.Pattern;
+import java.util.regex.Matcher;
+import java.util.UUID;
+
+import org.json.JSONObject;
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.opensolaris.hub.libmicro.NativeCaseMicro;
+import org.zeroxlab.byteunix.NativeCaseUbench;
+import org.zeroxlab.utils.BenchUtil;
+
+/* Construct a basic UI */
+public class Benchmark extends TabActivity implements View.OnClickListener {
+
+    public final static String TAG = "Benchmark";
+    public final static String PACKAGE = "com.techain.runtime";
+
+    private final static String mOutputFile = "0xBenchmark";
+
+    private final static int GROUP_DEFAULT = 0;
+    private final static int SETTINGS_ID = Menu.FIRST;
+
+    private static String mXMLResult;
+    private static String mJSONResult;
+    private final static String mOutputXMLFile = "0xBenchmark.xml";
+    private final static String mOutputJSONFile = "0xBenchmark.bundle";
+
+    private Button mRun;
+    private Button mShow;
+    private CheckBox mCheckList[];
+    private TextView mDesc[];
+    private TextView mBannerInfo;
+
+    private ScrollView mScrollView;
+    private LinearLayout mLinearLayout;
+    private LinearLayout mMainView;
+    private TabHost mTabHost;
+
+    LinkedList<Case> mCases;
+    boolean mTouchable = true;
+    private int orientation = Configuration.ORIENTATION_UNDEFINED;
+
+    private WakeLock mWakeLock;
+
+    private final String MAIN = "Main";
+    private final String D2 = "2D";
+    private final String D3 = "3D";
+    private final String MATH = "Math";
+    private final String VM = "VM";
+    private final String NATIVE = "Native";
+    private final String MISC = "Misc";
+
+    private CheckBox d2CheckBox;
+    private CheckBox d3CheckBox;
+    private CheckBox mathCheckBox;
+    private CheckBox vmCheckBox;
+    private CheckBox nativeCheckBox;
+    private CheckBox miscCheckBox;
+
+    private HashMap<String, HashSet<Case>> mCategory = new HashMap<String, HashSet<Case>>();
+
+    private final String trackerUrl = "http://0xbenchmark.appspot.com/static/MobileTracker.html";
+
+    boolean mAutoRun = false;
+    boolean mCheckMath = false;
+    boolean mCheck2D = false;
+    boolean mCheck3D = false;
+    boolean mCheckVM = false;
+    boolean mCheckNative = false;
+    boolean mCheckMisc = false;
+    boolean mAutoUpload = false;
+
+    @Override
+    protected void onDestroy() {
+        super.onPause();
+        mWakeLock.release();
+    }
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        orientation = getResources().getConfiguration().orientation;
+        PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);
+        mWakeLock = pm.newWakeLock(PowerManager.SCREEN_DIM_WAKE_LOCK, TAG);
+        mWakeLock.acquire();
+
+        setContentView(R.layout.main);
+        mCases = new LinkedList<Case>();
+        Case arith = new CaseArithmetic();
+        Case javascript = new CaseJavascript();
+        Case scimark2 = new CaseScimark2();
+        Case canvas = new CaseCanvas();
+        Case glcube = new CaseGLCube();
+        Case circle = new CaseDrawCircle();
+        Case nehe08 = new CaseNeheLesson08();
+        Case nehe16 = new CaseNeheLesson16();
+        Case teapot = new CaseTeapot();
+        Case gc = new CaseGC();
+        // Case libMicro = new NativeCaseMicro();
+        // Case libUbench = new NativeCaseUbench();
+
+        Case dc2 = new CaseDrawCircle2();
+        Case dr = new CaseDrawRect();
+        Case da = new CaseDrawArc();
+        Case di = new CaseDrawImage();
+        Case dt = new CaseDrawText();
+
+        mCategory.put(D2, new HashSet<Case>());
+        mCategory.put(D3, new HashSet<Case>());
+        mCategory.put(MATH, new HashSet<Case>());
+        mCategory.put(VM, new HashSet<Case>());
+        mCategory.put(NATIVE, new HashSet<Case>());
+        mCategory.put(MISC, new HashSet<Case>());
+
+        // mflops
+        mCases.add(arith);
+        mCases.add(scimark2);
+        mCases.add(javascript);
+        mCategory.get(MATH).add(arith);
+        mCategory.get(MATH).add(scimark2);
+        mCategory.get(MISC).add(javascript);
+
+        // 2d
+        mCases.add(canvas);
+        mCases.add(circle);
+        mCases.add(dc2);
+        mCases.add(dr);
+        mCases.add(da);
+        mCases.add(di);
+        mCases.add(dt);
+
+        mCategory.get(D2).add(canvas);
+        mCategory.get(D2).add(circle);
+        mCategory.get(D2).add(dc2);
+        mCategory.get(D2).add(dr);
+        mCategory.get(D2).add(da);
+        mCategory.get(D2).add(di);
+        mCategory.get(D2).add(dt);
+
+        // 3d
+        mCases.add(glcube);
+        mCases.add(nehe08);
+        mCases.add(nehe16);
+        mCases.add(teapot);
+
+        mCategory.get(D3).add(glcube);
+        mCategory.get(D3).add(nehe08);
+        mCategory.get(D3).add(nehe16);
+        mCategory.get(D3).add(teapot);
+
+        // vm
+        mCases.add(gc);
+        mCategory.get(VM).add(gc);
+
+        // native
+        //mCases.add(libMicro);
+        // mCases.add(libUbench);
+
+        //mCategory.get(NATIVE).add(libMicro);
+        //  mCategory.get(NATIVE).add(libUbench);
+
+        initViews();
+
+        Intent intent = getIntent();
+        Bundle bundle = intent.getExtras();
+        if (bundle != null) {
+            mAutoRun = bundle.getBoolean("autorun");
+            mCheckMath = bundle.getBoolean("math");
+            mCheck2D = bundle.getBoolean("2d");
+            mCheck3D = bundle.getBoolean("3d");
+            mCheckVM = bundle.getBoolean("vm");
+            mCheckNative = bundle.getBoolean("native");
+            mCheckMisc = bundle.getBoolean("misc");
+            mAutoUpload = bundle.getBoolean("autoupload");
+        }
+
+        if (mCheckMath && !mathCheckBox.isChecked()) {
+            mathCheckBox.performClick();
+        }
+
+        if (mCheck2D && !d2CheckBox.isChecked()) {
+            d2CheckBox.performClick();
+        }
+
+        if (mCheck3D && !d3CheckBox.isChecked()) {
+            d3CheckBox.performClick();
+        }
+
+        if (mCheckVM && !vmCheckBox.isChecked()) {
+            vmCheckBox.performClick();
+        }
+
+        if (mCheckNative && !nativeCheckBox.isChecked()) {
+            nativeCheckBox.performClick();
+        }
+
+        if (mCheckMisc && !miscCheckBox.isChecked()) {
+            miscCheckBox.performClick();
+        }
+        /*
+        if (intent.getBooleanExtra("AUTO", false)) {
+            ImageView head = (ImageView)findViewById(R.id.banner_img);
+            head.setImageResource(R.drawable.icon_auto);
+            mTouchable = false;
+            initAuto();
+        }
+        */
+        if (mAutoRun) {
+            onClick(mRun);
+        }
+    }
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
+        MenuItem item1 = menu.add(GROUP_DEFAULT, SETTINGS_ID, Menu.NONE, R.string.menu_settings);
+        return true;
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem menu) {
+        if (menu.getGroupId() == GROUP_DEFAULT && menu.getItemId() == SETTINGS_ID) {
+            org.zeroxlab.utils.Util.launchActivity(this, "com.techain.runtime.ActivitySettings");
+        }
+        return true;
+    }
+
+    @Override
+    public boolean dispatchTouchEvent(MotionEvent event) {
+        if (mTouchable) {
+            return super.dispatchTouchEvent(event);
+        } else {
+            return true;
+        }
+    }
+
+    @Override
+    public boolean dispatchKeyEvent(KeyEvent event) {
+        if (mTouchable) {
+            return super.dispatchKeyEvent(event);
+        } else {
+            return true;
+        }
+    }
+
+    @Override
+    public boolean dispatchTrackballEvent(MotionEvent event) {
+        if (mTouchable) {
+            return super.dispatchTrackballEvent(event);
+        } else {
+            return true;
+        }
+    }
+
+    private void _checkTagCase(String[] Tags) {
+        Arrays.sort(Tags);
+        for (int i = 0; i < mCheckList.length; i++) {
+            String[] caseTags = mCases.get(i).mTags;
+            for (String t : caseTags) {
+                int search = Arrays.binarySearch(Tags, t);
+                if (search >= 0)
+                    mCheckList[i].setChecked(true);
+            }
+        }
+    }
+
+    private void _checkCatCase(String[] Cats) {
+        Arrays.sort(Cats);
+        for (int i = 0; i < mCheckList.length; i++) {
+            int search = Arrays.binarySearch(Cats, mCases.get(i).mType);
+            if (search >= 0)
+                mCheckList[i].setChecked(true);
+        }
+    }
+
+    private void _checkAllCase(boolean check) {
+        for (int i = 0; i < mCheckList.length; i++)
+            mCheckList[i].setChecked(check);
+    }
+
+    private void initAuto() {
+        Intent intent = getIntent();
+        String TAG = intent.getStringExtra("TAG");
+        String CAT = intent.getStringExtra("CAT");
+
+
+        _checkAllCase(false);
+        if (TAG != null)
+            _checkTagCase(TAG.split(","));
+        if (CAT != null)
+            _checkCatCase(CAT.split(","));
+        if (TAG == null && CAT == null)
+            _checkAllCase(true);
+        final Handler h = new Handler() {
+            public void handleMessage(Message msg) {
+                if (msg.what == 0x1234)
+                    onClick(mRun);
+            }
+        };
+
+        final ProgressDialog dialog = new ProgressDialog(this).show(this, "Starting Benchmark", "Please wait...", true, false);
+        new Thread() {
+            public void run() {
+                SystemClock.sleep(1000);
+                dialog.dismiss();
+                Message m = new Message();
+                m.what = 0x1234;
+                h.sendMessage(m);
+            }
+        }.start();
+        mTouchable = true;
+    }
+
+    private void initViews() {
+        /*
+        mRun = (Button)findViewById(R.id.btn_run);
+        mRun.setOnClickListener(this);
+
+        mShow = (Button)findViewById(R.id.btn_show);
+        mShow.setOnClickListener(this);
+        mShow.setClickable(false);
+
+        mLinearLayout = (LinearLayout)findViewById(R.id.list_container);
+        mMainView = (LinearLayout)findViewById(R.id.main_view);
+
+        mBannerInfo = (TextView)findViewById(R.id.banner_info);
+        mBannerInfo.setText("Hello!\nSelect cases to Run.\nUploaded results:\nhttp://0xbenchmark.appspot.com");
+        */
+
+        mTabHost = getTabHost();
+
+        int length = mCases.size();
+        mCheckList = new CheckBox[length];
+        mDesc = new TextView[length];
+        for (int i = 0; i < length; i++) {
+            mCheckList[i] = new CheckBox(this);
+            mCheckList[i].setText(mCases.get(i).getTitle());
+            mDesc[i] = new TextView(this);
+            mDesc[i].setText(mCases.get(i).getDescription());
+            mDesc[i].setTextSize(mDesc[i].getTextSize() - 2);
+            mDesc[i].setPadding(42, 0, 10, 10);
+        }
+
+        TabContentFactory mTCF = new TabContentFactory() {
+            public View createTabContent(String tag) {
+                ViewGroup.LayoutParams fillParent = new ViewGroup.LayoutParams(ViewGroup.LayoutParams.FILL_PARENT, ViewGroup.LayoutParams.FILL_PARENT);
+                ViewGroup.LayoutParams fillWrap = new ViewGroup.LayoutParams(ViewGroup.LayoutParams.FILL_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
+                LinearLayout.LayoutParams wrapContent = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
+                wrapContent.gravity = Gravity.CENTER;
+                LinearLayout.LayoutParams weightedFillWrap = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.FILL_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
+                weightedFillWrap.weight = 1;
+
+                if (tag.equals(MAIN)) {
+                    LinearLayout mMainView = new LinearLayout(Benchmark.this);
+                    mMainView.setOrientation(1);
+                    ScrollView mListScroll = new ScrollView(Benchmark.this);
+
+                    LinearLayout mMainViewContainer = new LinearLayout(Benchmark.this);
+                    mMainViewContainer.setOrientation(1);
+                    ImageView mIconView = new ImageView(Benchmark.this);
+                    mIconView.setImageResource(R.drawable.icon);
+
+                    TextView mBannerInfo = new TextView(Benchmark.this);
+                    mBannerInfo.setText("0xbench\nSelect benchmarks in the tabs,\nor batch select:");
+
+                    d2CheckBox = new CheckBox(Benchmark.this);
+                    d2CheckBox.setText(D2);
+                    d2CheckBox.setOnClickListener(Benchmark.this);
+
+                    d3CheckBox = new CheckBox(Benchmark.this);
+                    d3CheckBox.setText(D3);
+                    d3CheckBox.setOnClickListener(Benchmark.this);
+
+                    mathCheckBox = new CheckBox(Benchmark.this);
+                    mathCheckBox.setText(MATH);
+                    mathCheckBox.setOnClickListener(Benchmark.this);
+
+                    vmCheckBox = new CheckBox(Benchmark.this);
+                    vmCheckBox.setText(VM);
+                    vmCheckBox.setOnClickListener(Benchmark.this);
+
+                    nativeCheckBox = new CheckBox(Benchmark.this);
+                    nativeCheckBox.setText(NATIVE);
+                    nativeCheckBox.setOnClickListener(Benchmark.this);
+
+                    miscCheckBox = new CheckBox(Benchmark.this);
+                    miscCheckBox.setText(MISC);
+                    miscCheckBox.setOnClickListener(Benchmark.this);
+
+                    TextView mWebInfo = new TextView(Benchmark.this);
+                    mWebInfo.setText("Uploaded results:\nhttp://0xbenchmark.appspot.com");
+
+                    LinearLayout mButtonContainer = new LinearLayout(Benchmark.this);
+                    mRun = new Button(Benchmark.this);
+                    mShow = new Button(Benchmark.this);
+                    mRun.setText("Run");
+                    mShow.setText("Show");
+                    mRun.setOnClickListener(Benchmark.this);
+                    mShow.setOnClickListener(Benchmark.this);
+                    mButtonContainer.addView(mRun, weightedFillWrap);
+                    mButtonContainer.addView(mShow, weightedFillWrap);
+                    WebView mTracker = new WebView(Benchmark.this);
+                    mTracker.clearCache(true);
+                    mTracker.setWebViewClient(new WebViewClient() {
+                        public void onPageFinished(WebView view, String url) {
+                            Log.i(TAG, "Tracker: " + view.getTitle() + " -> " + url);
+                        }
+
+                        public void onReceivedError(WebView view, int errorCode,
+                                                    String description, String failingUrl) {
+                            Log.e(TAG, "Track err: " + description);
+                        }
+                    });
+                    mTracker.loadUrl(trackerUrl);
+                    mMainViewContainer.addView(mIconView, wrapContent);
+                    mMainViewContainer.addView(mBannerInfo);
+                    mMainViewContainer.addView(mathCheckBox);
+                    mMainViewContainer.addView(d2CheckBox);
+                    mMainViewContainer.addView(d3CheckBox);
+                    mMainViewContainer.addView(vmCheckBox);
+                    mMainViewContainer.addView(nativeCheckBox);
+                    mMainViewContainer.addView(miscCheckBox);
+                    mMainViewContainer.addView(mWebInfo);
+                    mMainViewContainer.addView(mButtonContainer, fillWrap);
+                    mMainViewContainer.addView(mTracker, 0, 0);
+                    mListScroll.addView(mMainViewContainer, fillParent);
+                    mMainView.addView(mListScroll, fillWrap);
+
+                    return mMainView;
+
+                }
+
+                LinearLayout mMainView = new LinearLayout(Benchmark.this);
+                mMainView.setOrientation(1);
+                ScrollView mListScroll = new ScrollView(Benchmark.this);
+                LinearLayout mListContainer = new LinearLayout(Benchmark.this);
+                mListContainer.setOrientation(1);
+                mListScroll.addView(mListContainer, fillParent);
+                mMainView.addView(mListScroll, fillWrap);
+
+                boolean gray = true;
+                int length = mCases.size();
+                Log.i(TAG, "L: " + length);
+                Log.i(TAG, "TCF: " + tag);
+                for (int i = 0; i < length; i++) {
+                    if (!mCategory.get(tag).contains(mCases.get(i)))
+                        continue;
+                    Log.i(TAG, "Add: " + i);
+                    mListContainer.addView(mCheckList[i], fillWrap);
+                    mListContainer.addView(mDesc[i], fillWrap);
+                    if (gray) {
+                        int color = 0xFF333333; //ARGB
+                        mCheckList[i].setBackgroundColor(color);
+                        mDesc[i].setBackgroundColor(color);
+                    }
+                    gray = !gray;
+                }
+                return mMainView;
+            }
+        };
+
+        mTabHost.addTab(mTabHost.newTabSpec(MAIN).setIndicator(MAIN, getResources().getDrawable(R.drawable.ic_eye)).setContent(mTCF));
+        mTabHost.addTab(mTabHost.newTabSpec(D2).setIndicator(D2, getResources().getDrawable(R.drawable.ic_2d)).setContent(mTCF));
+        mTabHost.addTab(mTabHost.newTabSpec(D3).setIndicator(D3, getResources().getDrawable(R.drawable.ic_3d)).setContent(mTCF));
+        mTabHost.addTab(mTabHost.newTabSpec(MATH).setIndicator(MATH, getResources().getDrawable(R.drawable.ic_pi)).setContent(mTCF));
+        mTabHost.addTab(mTabHost.newTabSpec(VM).setIndicator(VM, getResources().getDrawable(R.drawable.ic_vm)).setContent(mTCF));
+        mTabHost.addTab(mTabHost.newTabSpec(NATIVE).setIndicator(NATIVE, getResources().getDrawable(R.drawable.ic_c)).setContent(mTCF));
+        mTabHost.addTab(mTabHost.newTabSpec(MISC).setIndicator(MISC, getResources().getDrawable(R.drawable.ic_misc)).setContent(mTCF));
+    }
+
+    public void onClick(View v) {
+        if (v == mRun) {
+            int numberOfCaseChecked = 0;
+            for (int i = 0; i < mCheckList.length; i++) {
+                if (mCheckList[i].isChecked()) {
+                    mCases.get(i).reset();
+                    numberOfCaseChecked++;
+                } else {
+                    mCases.get(i).clear();
+                }
+            }
+            if (numberOfCaseChecked > 0)
+                runCase(mCases);
+        } else if (v == mShow) {
+            String result = getResult();
+            Log.i(TAG, "\n\n" + result + "\n\n");
+            writeResult(mOutputFile, result);
+            Intent intent = new Intent();
+            intent.putExtra(Report.REPORT, result);
+            intent.putExtra(Report.XML, mXMLResult);
+            if (mAutoUpload) {
+                intent.putExtra(Report.AUTOUPLOAD, true);
+                mAutoUpload = false;
+            }
+            intent.setClassName(Report.packageName(), Report.fullClassName());
+            startActivity(intent);
+        } else if (v == d2CheckBox || v == d3CheckBox || v == mathCheckBox ||
+                v == vmCheckBox || v == nativeCheckBox || v == miscCheckBox) {
+            int length = mCases.size();
+            String tag = ((CheckBox) v).getText().toString();
+            for (int i = 0; i < length; i++) {
+                if (!mCategory.get(tag).contains(mCases.get(i)))
+                    continue;
+                mCheckList[i].setChecked(((CheckBox) v).isChecked());
+            }
+        }
+    }
+
+    public void runCase(LinkedList<Case> list) {
+        Case pointer = null;
+        boolean finish = true;
+        for (int i = 0; i < list.size(); i++) {
+            pointer = list.get(i);
+            if (!pointer.isFinish()) {
+                finish = false;
+                break;
+            }
+        }
+
+        if (finish) {
+            //mBannerInfo.setText("Benchmarking complete.\nClick Show to upload.\nUploaded results:\nhttp://0xbenchmark.appspot.com");
+            String result = getResult();
+            writeResult(mOutputFile, result);
+
+            final ProgressDialog dialogGetXml = new ProgressDialog(this).show(this, "Generating XML Report", "Please wait...", true, false);
+            new Thread() {
+                public void run() {
+                    mJSONResult = getJSONResult();
+                    mXMLResult = getXMLResult();
+                    Log.d(TAG, "XML: " + mXMLResult);
+                    writeResult(mOutputXMLFile, mXMLResult);
+                    Log.d(TAG, "JSON: " + mJSONResult);
+                    writeResult(mOutputJSONFile, mJSONResult);
+                    mShow.setClickable(true);
+                    onClick(mShow);
+                    mTouchable = true;
+                    dialogGetXml.dismiss();
+                }
+            }.start();
+        } else {
+            Intent intent = pointer.generateIntent();
+            if (intent != null) {
+                startActivityForResult(intent, 0);
+            }
+        }
+    }
+
+    public String getXMLResult() {
+        if (mCases.size() == 0)
+            return "";
+
+        Date date = new Date();
+        //2010-05-28T17:40:25CST
+        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssz");
+
+        String xml = "";
+        xml += "<?xml version=\"1.0\" encoding=\"UTF-8\"?>";
+        xml += "<result";
+        xml += " executedTimestamp=\"" + sdf.format(date) + "\"";
+        xml += " manufacturer=\"" + Build.MANUFACTURER.replace(' ', '_') + "\"";
+        xml += " model=\"" + Build.MODEL.replace(' ', '_') + ":" + Build.DISPLAY + "\"";
+        xml += " buildTimestamp=\"" + sdf.format(new Date(Build.TIME)) + "\"";
+        xml += " orientation=\"" + Integer.toString(orientation) + "\"";
+
+        try { // read kernel version
+            BufferedReader procVersion = new BufferedReader(new FileReader("/proc/version"));
+            StringBuffer sbuff = new StringBuffer();
+            String tmp;
+            while ((tmp = procVersion.readLine()) != null)
+                sbuff.append(tmp);
+            procVersion.close();
+            tmp = sbuff.toString().replace("[\n\r]+", " ").replace(" +", ".");
+            xml += " version=\"" + tmp + "\"";
+        } catch (IOException e) {
+            Log.e(TAG, "opening /proc/version failed: " + e.toString());
+        }
+
+        try { // read and parse cpu info
+            BufferedReader procVersion = new BufferedReader(new FileReader("/proc/cpuinfo"));
+            StringBuffer sbuff = new StringBuffer();
+            String tmp;
+            while ((tmp = procVersion.readLine()) != null)
+                sbuff.append(tmp + "\n");
+            procVersion.close();
+
+            tmp = sbuff.toString();
+
+            sbuff = new StringBuffer();
+
+            Pattern p1 = Pattern.compile("(Processor\\s*:\\s*(.*)\\s*[\n\r]+)");
+            Matcher m1 = p1.matcher(tmp);
+            if (m1.find()) sbuff.append(m1.group(2));
+
+            Pattern p2 = Pattern.compile("(Hardware\\s*:\\s*(.*)\\s*[\n\r]+)");
+            Matcher m2 = p2.matcher(tmp);
+            if (m2.find()) sbuff.append(":" + m2.group(2));
+
+            Pattern p3 = Pattern.compile("(Revision\\s*:\\s*(.*)\\s*[\n\r]+)");
+            Matcher m3 = p3.matcher(tmp);
+            if (m3.find()) sbuff.append(":" + m3.group(2));
+
+            Log.e(TAG, sbuff.toString());
+            xml += " cpu=\"" + sbuff.toString() + "\"";
+        } catch (IOException e) {
+            Log.e(TAG, "opening /proc/version failed: " + e.toString());
+        }
+
+        xml += ">";
+
+        Case mycase;
+        for (int i = 0; i < mCases.size(); i++) {
+            mycase = mCases.get(i);
+            xml += mycase.getXMLBenchmark();
+        }
+
+        xml += "</result>";
+        return xml;
+    }
+
+    /*
+     * Add Linaro Dashboard Bundle's JSON format support
+     * https://launchpad.net/linaro-python-dashboard-bundle/trunk
+     */
+    public String getJSONResult() {
+        Date date = new Date();
+        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'");
+
+        JSONObject result = new JSONObject();
+        try {
+            JSONArray testRunsArray = new JSONArray();
+            JSONObject testRunsObject = new JSONObject();
+            testRunsObject.put("analyzer_assigned_date", sdf.format(date));
+            testRunsObject.put("time_check_performed", false);
+            // TODO: should be UUID version 1
+            testRunsObject.put("analyzer_assigned_uuid", UUID.randomUUID().toString());
+            testRunsObject.put("test_id", "0xbench");
+
+            JSONArray testResultsList = new JSONArray();
+            Case myCase;
+            for (int i = 0; i < mCases.size(); i++) {
+                myCase = mCases.get(i);
+                JSONArray caseResultList = myCase.getJSONBenchmark();
+                for (int j = 0; j < caseResultList.length(); j++) {
+                    testResultsList.put(caseResultList.get(j));
+                }
+            }
+            testRunsObject.put("test_results", testResultsList);
+
+            testRunsArray.put(testRunsObject);
+            result.put("test_runs", testRunsArray);
+            result.put("format", "Dashboard Bundle Format 1.2");
+        } catch (JSONException jsonE) {
+            jsonE.printStackTrace();
+        }
+        return result.toString();
+    }
+
+    public String getResult() {
+        String result = "";
+        Case mycase;
+        for (int i = 0; i < mCases.size(); i++) {
+            mycase = mCases.get(i);
+            if (!mycase.couldFetchReport()) continue;
+            result += "============================================================\n";
+            if (mycase.getTitle() != null) {
+                result += mycase.getTitle() + "\n";
+            } else {
+                result += "\n";
+            }
+            result += "------------------------------------------------------------\n";
+            if (mycase.getResultOutput() != null) {
+                result += mycase.getResultOutput().trim() + "\n";
+            } else {
+                result += "\n";
+            }
+        }
+        result += "============================================================\n";
+
+        return result;
+    }
+
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        if (data == null) {
+            Log.i(TAG, "oooops....Intent is null");
+            return;
+        }
+
+        Case mycase;
+        for (int i = 0; i < mCases.size(); i++) {
+            mycase = mCases.get(i);
+            if (mycase.realize(data)) {
+                mycase.parseIntent(data);
+                break;
+            }
+        }
+        runCase(mCases);
+    }
+
+    private boolean writeResult(String filename, String output) {
+        File writeDir = new File(BenchUtil.getResultDir(this));
+        if (!writeDir.exists()) {
+            writeDir.mkdirs();
+        }
+
+        File file = new File(writeDir, filename);
+        if (file.exists()) {
+            Log.w(TAG, "File exists, delete " + writeDir.getPath() + filename);
+            file.delete();
+        }
+
+        try {
+            file.createNewFile();
+            FileOutputStream fos = new FileOutputStream(file);
+            fos.write(output.getBytes());
+            fos.flush();
+        } catch (Exception e) {
+            Log.i(TAG, "Write Failed.");
+            e.printStackTrace();
+            return false;
+        }
+        return true;
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseCam.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseCam.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseCam.java	(revision 167997)
@@ -0,0 +1,60 @@
+package com.techain.runtime;
+
+import java.util.ArrayList;
+
+public class CaseCam extends Case
+{
+  public static int CamRound = 300;
+
+  CaseCam()
+  {
+    super("CaseLcd", TesterCam.getFullClassName(), 3, CamRound);
+  }
+
+  public String getDescription()
+  {
+    return "call camtest.drawRGB to fill the canvas repeatedly. It redraw for " + CamRound + " times";
+  }
+
+  public String getResultOutput()
+  {
+    if (!couldFetchReport())
+      return "Cavas has no report";
+    String str = "";
+    float f1 = 0.0F;
+    int i = this.mResult.length;
+    for (int j = 0; j < i; j++)
+    {
+      float f2 = (float)this.mResult[j] / 1000.0F;
+      float f3 = this.mCaseRound / f2;
+      str = str + "Round " + j + " fps = " + f3 + "\n";
+      f1 += f3;
+    }
+    return str + "Average: fps = " + f1 / i + "\n";
+  }
+
+  public ArrayList<Scenario> getScenarios()
+  {
+    ArrayList localArrayList = new ArrayList();
+    Scenario localScenario = new Scenario(getTitle(), this.mType, this.mTags);
+    localScenario.mLog = getResultOutput();
+    for (int i = 0; i < this.mResult.length; i++)
+    {
+      float f1 = (float)this.mResult[i] / 1000.0F;
+      float f2 = this.mCaseRound / f1;
+      localScenario.mResults.add(Double.valueOf(Float.valueOf(f2).doubleValue()));
+    }
+    localArrayList.add(localScenario);
+    return localArrayList;
+  }
+
+  public String getTitle()
+  {
+    return "Cam Test";
+  }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.techain.runtime.CaseCam
+ * JD-Core Version:    0.6.2
+ */
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterVideo.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterVideo.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterVideo.java	(revision 167997)
@@ -0,0 +1,100 @@
+package com.techain.runtime;
+
+import android.media.MediaPlayer;
+import android.media.MediaPlayer.OnCompletionListener;
+import android.net.Uri;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.Window;
+import android.widget.MediaController;
+import android.widget.VideoView;
+
+public class TesterVideo extends Tester
+{
+  public static final String PACKAGE = "com.techain.runtime";
+  public final String TAG = "TesterVideo";
+  private MediaController mMediaController;
+  private VideoView mVideoView;
+  private final String videoPath = "/data/test_video.3gp";
+
+  public static String getFullClassName()
+  {
+    return getPackage() + ".TesterVideo";
+  }
+
+  public static String getPackage()
+  {
+    return "com.techain.runtime";
+  }
+
+  private void playVideo(String paramString)
+  {
+    try
+    {
+      if (this.mVideoView != null)
+      {
+        this.mVideoView.setVideoURI(Uri.parse("android.resource://" + getPackageName() + "/" + 2131034113));
+        this.mVideoView.start();
+      }
+      return;
+    }
+    catch (Exception localException)
+    {
+      localException.printStackTrace();
+      Log.v("TesterVideo", "Video play start Exception!");
+    }
+  }
+
+  public void finish()
+  {
+    if (this.mVideoView != null)
+      this.mVideoView.stopPlayback();
+    super.finish();
+  }
+
+  public String getTag()
+  {
+    return "TesterVideo";
+  }
+
+  public void onCreate(Bundle paramBundle)
+  {
+    super.onCreate(paramBundle);
+    setContentView(2130903053);
+    getWindow().setFormat(0);
+    this.mVideoView = ((VideoView)findViewById(2131165186));
+    this.mMediaController = new MediaController(this);
+    this.mVideoView.setMediaController(this.mMediaController);
+    this.mVideoView.setOnCompletionListener(new MediaPlayer.OnCompletionListener()
+    {
+      public void onCompletion(MediaPlayer paramAnonymousMediaPlayer)
+      {
+        Log.d("TesterVideo", "[ww_debug] replay!");
+        TesterVideo.this.playVideo("/data/test_video.3gp");
+      }
+    });
+    playVideo("/data/test_video.3gp");
+    this.mStartFlag = false;
+    start();
+    startTester();
+  }
+
+  public void oneRound()
+  {
+  }
+
+  public int sleepBeforeStart()
+  {
+    return 1000;
+  }
+
+  public int sleepBetweenRound()
+  {
+    return 0;
+  }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.techain.runtime.TesterVideo
+ * JD-Core Version:    0.6.2
+ */
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterJavascript.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterJavascript.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterJavascript.java	(revision 167997)
@@ -0,0 +1,90 @@
+/*
+ * Copyright (C) 2011 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ * Authored by Julian Chu <walkingice@0xlab.org>
+ */
+
+package com.techain.runtime;
+
+import android.app.Activity;
+import android.os.Bundle;
+import android.os.Message;
+import android.content.Intent;
+import android.webkit.WebView;
+import android.webkit.WebSettings;
+
+public class TesterJavascript extends Tester {
+
+    protected WebView mWebView;
+    protected WebSettings mSettings;
+
+    private double mTotalTime = 0.0;
+    private String mResult = "";
+    private String mFormattedResult = "";
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.javascript);
+        mWebView = (WebView) findViewById(R.id.web);
+
+        mSettings = mWebView.getSettings();
+        mSettings.setJavaScriptEnabled(true);
+        mWebView.addJavascriptInterface(new MsgCallback(), "ANDROID_OBJ");
+
+        startTester();
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+    }
+
+    @Override
+    protected String getTag() {
+        return "JavaScript";
+    }
+
+    @Override
+    protected int sleepBeforeStart() {
+        return 1000;
+    }
+
+    @Override
+    protected int sleepBetweenRound() {
+        return 1000;
+    }
+
+    @Override
+    protected void oneRound() {
+        mWebView.loadUrl("file:///android_asset/driver.html");
+    }
+
+    @Override
+    protected boolean saveResult(Intent intent) {
+        intent.putExtra(CaseJavascript.SUNSPIDER_RESULT, mResult);
+        intent.putExtra(CaseJavascript.SUNSPIDER_FORMATTED_RESULT, mFormattedResult);
+        intent.putExtra(CaseJavascript.SUNSPIDER_TOTAL, mTotalTime);
+        return true;
+    }
+
+    class MsgCallback {
+        public void finish(String result, String formatted_result) {
+            mResult = result;
+            mFormattedResult = formatted_result;
+            decreaseCounter();
+        }
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseDrawCircle2.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseDrawCircle2.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseDrawCircle2.java	(revision 167997)
@@ -0,0 +1,108 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+import android.widget.*;
+import android.view.*;
+import java.nio.*;
+import java.util.ArrayList;
+
+public class CaseDrawCircle2 extends Case {
+
+    public static int Circle2Round = 300;
+
+    CaseDrawCircle2() {
+        super("CaseDrawCircle2", "org.zeroxlab.graphics.DrawCircle2", 2, Circle2Round);
+        mType = "2d-fps";
+        String [] _tmp = {
+            "2d",
+            "render",
+            "skia",
+            "view",
+        };
+        mTags = _tmp;
+    }
+
+    public String getTitle() {
+        return "Draw Circle2";
+    }
+
+    public String getDescription() {
+        return "call canvas.drawCircle2 to draw circle for " + Circle2Round + " times";
+    }
+
+    @Override
+    public String getResultOutput() {
+        if (!couldFetchReport()) {
+            return "DrawCircle2 has no report";
+        }
+
+        String result = "";
+        float total = 0;
+        int length = mResult.length;
+
+        for (int i = 0; i < length; i++) {
+            float second = (mResult[i] / 1000f);
+            float fps = (float) mCaseRound / second; // milliseconds to seconds
+            result += "Round " + i +": fps = " + fps + "\n";
+            total  += fps;
+        }
+
+        result += "Average: fps = " + ((float) total / length) + "\n";
+        return result;
+    }
+
+    /*
+     *  Get Average Benchmark
+     */
+    public double getBenchmark(Scenario s) {
+        double total = 0;
+        int length = mResult.length;
+        for (int i = 0; i < length; i++) {
+            double second = (mResult[i] / 1000f);
+            double fps = (double)mCaseRound / second;
+            total  += fps;
+        }
+        return total / length;
+    }
+
+    @Override
+    public ArrayList<Scenario> getScenarios () {
+        ArrayList<Scenario> scenarios = new ArrayList<Scenario>();
+
+        Scenario s = new Scenario(getTitle(), mType, mTags);
+        s.mLog = getResultOutput();
+        for (int i = 0; i < mResult.length; i++) {
+            float second = (mResult[i] / 1000f);
+            float fps = (float)mCaseRound / second;
+            s.mResults.add(((Float)fps).doubleValue());
+        }
+
+        scenarios.add(s);
+        return scenarios;
+    }
+
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterComplex.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterComplex.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterComplex.java	(revision 167997)
@@ -0,0 +1,98 @@
+package com.techain.runtime;
+
+import android.media.MediaPlayer;
+import android.media.MediaPlayer.OnCompletionListener;
+import android.net.Uri;
+import android.os.Bundle;
+import android.util.Log;
+import android.widget.MediaController;
+import android.widget.VideoView;
+
+public class TesterComplex extends Tester {
+    public static final String PACKAGE = "com.techain.runtime";
+    public final String TAG = "TesterComplex";
+    private MediaController mMediaController;
+    private MediaPlayer mPlayer;
+    private VideoView mVideoView;
+    private final String videoPath = "/data/test_video.3gp";
+
+    public static String getFullClassName() {
+        return getPackage() + ".TesterComplex";
+    }
+
+    public static String getPackage() {
+        return "com.techain.runtime";
+    }
+
+    private void playVideo(String paramString) {
+        try {
+            if (this.mVideoView != null) {
+                this.mVideoView.setVideoURI(Uri.parse("android.resource://" + getPackageName() + "/" + 2131034113));
+                this.mVideoView.start();
+            }
+            return;
+        } catch (Exception localException) {
+            localException.printStackTrace();
+            Log.v("TesterComplex", "Video play start Exception!");
+        }
+    }
+
+    public void finish() {
+        if (this.mVideoView != null)
+            this.mVideoView.stopPlayback();
+        if (this.mPlayer != null)
+            this.mPlayer.stop();
+        super.finish();
+    }
+
+    public String getTag() {
+        return "TesterComplex";
+    }
+
+    public void onCreate(Bundle paramBundle) {
+        super.onCreate(paramBundle);
+        setContentView(2130903042);
+        try {
+            this.mPlayer = MediaPlayer.create(this, 2131034112);
+            if (this.mPlayer != null)
+                this.mPlayer.stop();
+            this.mPlayer.prepare();
+            this.mPlayer.start();
+            this.mVideoView = ((VideoView) findViewById(2131165186));
+            this.mMediaController = new MediaController(this);
+            this.mVideoView.setMediaController(this.mMediaController);
+            this.mVideoView.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {
+                public void onCompletion(MediaPlayer paramAnonymousMediaPlayer) {
+                    TesterComplex.this.playVideo("/data/test_video.3gp");
+                }
+            });
+            playVideo("/data/test_video.3gp");
+            this.mStartFlag = false;
+            start();
+            startTester();
+            return;
+        } catch (Exception localException) {
+            //while (true)
+            {
+                localException.printStackTrace();
+                Log.v("TesterComplex", "MediaPlayer play start Exception!");
+            }
+        }
+    }
+
+    public void oneRound() {
+    }
+
+    public int sleepBeforeStart() {
+        return 1000;
+    }
+
+    public int sleepBetweenRound() {
+        return 0;
+    }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.techain.runtime.TesterComplex
+ * JD-Core Version:    0.6.2
+ */
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseDrawText.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseDrawText.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseDrawText.java	(revision 167997)
@@ -0,0 +1,108 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+import android.widget.*;
+import android.view.*;
+import java.nio.*;
+import java.util.ArrayList;
+
+public class CaseDrawText extends Case {
+
+    public static int TextRound = 300;
+
+    CaseDrawText() {
+        super("CaseDrawText", "org.zeroxlab.graphics.DrawText", 3, TextRound);
+        mType = "2d-fps";
+        String [] _tmp = {
+            "2d",
+            "render",
+            "skia",
+            "view",
+        };
+        mTags = _tmp;
+    }
+
+    public String getTitle() {
+        return "Draw Text";
+    }
+
+    public String getDescription() {
+        return "call canvas.drawText to draw text for " + TextRound + " times";
+    }
+
+    @Override
+    public String getResultOutput() {
+        if (!couldFetchReport()) {
+            return "DrawText has no report";
+        }
+
+        String result = "";
+        float total = 0;
+        int length = mResult.length;
+
+        for (int i = 0; i < length; i++) {
+            float second = (mResult[i] / 1000f);
+            float fps = (float)mCaseRound / second; // milliseconds to seconds
+            result += "Round " + i +": fps = " + fps + "\n";
+            total  += fps;
+        }
+
+        result += "Average: fps = " + ((float)total/length) + "\n";
+        return result;
+    }
+
+    /*
+     *  Get Average Benchmark
+     */
+    public double getBenchmark(Scenario s) {
+        double total = 0;
+        int length = mResult.length;
+        for (int i = 0; i < length; i++) {
+            double second = (mResult[i] / 1000f);
+            double fps = (double)mCaseRound / second;
+            total  += fps;
+        }
+        return total/length;
+    }
+
+    @Override
+    public ArrayList<Scenario> getScenarios () {
+        ArrayList<Scenario> scenarios = new ArrayList<Scenario>();
+
+        Scenario s = new Scenario(getTitle(), mType, mTags);
+        s.mLog = getResultOutput();
+        for (int i = 0; i < mResult.length; i++) {
+            float second = (mResult[i] / 1000f);
+            float fps = (float)mCaseRound / second;
+            s.mResults.add(((Float)fps).doubleValue());
+        }
+
+        scenarios.add(s);
+        return scenarios;
+    }
+
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseLcd.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseLcd.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseLcd.java	(revision 167997)
@@ -0,0 +1,62 @@
+package com.techain.runtime;
+
+import java.util.ArrayList;
+
+public class CaseLcd extends Case {
+    public static int LcdRound = 300;
+
+    CaseLcd() {
+        super("CaseLcd", TesterLcd.getFullClassName(), 3, LcdRound);
+    }
+
+    public double getBenchmark(Scenario paramScenario) {
+        double d1 = 0.0D;
+        int i = this.mResult.length;
+        for (int j = 0; j < i; j++) {
+            double d2 = (float) this.mResult[j] / 1000.0F;
+            d1 += this.mCaseRound / d2;
+        }
+        return d1 / i;
+    }
+
+    public String getDescription() {
+        return "call lcdtest.drawRGB to fill the canvas repeatedly. It redraw for " + LcdRound + " times";
+    }
+
+    public String getResultOutput() {
+        if (!couldFetchReport())
+            return "Cavas has no report";
+        String str = "";
+        float f1 = 0.0F;
+        int i = this.mResult.length;
+        for (int j = 0; j < i; j++) {
+            float f2 = (float) this.mResult[j] / 1000.0F;
+            float f3 = this.mCaseRound / f2;
+            str = str + "Round " + j + " fps = " + f3 + "\n";
+            f1 += f3;
+        }
+        return str + "Average: fps = " + f1 / i + "\n";
+    }
+
+    public ArrayList<Scenario> getScenarios() {
+        ArrayList localArrayList = new ArrayList();
+        Scenario localScenario = new Scenario(getTitle(), this.mType, this.mTags);
+        localScenario.mLog = getResultOutput();
+        for (int i = 0; i < this.mResult.length; i++) {
+            float f1 = (float) this.mResult[i] / 1000.0F;
+            float f2 = this.mCaseRound / f1;
+            localScenario.mResults.add(Double.valueOf(Float.valueOf(f2).doubleValue()));
+        }
+        localArrayList.add(localScenario);
+        return localArrayList;
+    }
+
+    public String getTitle() {
+        return "Lcd Test";
+    }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.techain.runtime.CaseLcd
+ * JD-Core Version:    0.6.2
+ */
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseVideo.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseVideo.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseVideo.java	(revision 167997)
@@ -0,0 +1,62 @@
+package com.techain.runtime;
+
+import java.util.ArrayList;
+
+public class CaseVideo extends Case
+{
+  public static int VideoRound = 300;
+
+  CaseVideo()
+  {
+    super("CaseVideo", TesterVideo.getFullClassName(), 3, VideoRound);
+    this.mType = "video";
+    this.mTags = new String[] { "video" };
+  }
+
+  public String getDescription()
+  {
+    return "call mediaplayer.play to play video. It play for " + VideoRound + " times";
+  }
+
+  public String getResultOutput()
+  {
+    if (!couldFetchReport())
+      return "Video has no report";
+    String str = "";
+    float f1 = 0.0F;
+    int i = this.mResult.length;
+    for (int j = 0; j < i; j++)
+    {
+      float f2 = (float)this.mResult[j] / 1000.0F;
+      float f3 = this.mCaseRound / f2;
+      str = str + "Round " + j + " fps = " + f3 + "\n";
+      f1 += f3;
+    }
+    return str + "Average: fps = " + f1 / i + "\n";
+  }
+
+  public ArrayList<Scenario> getScenarios()
+  {
+    ArrayList localArrayList = new ArrayList();
+    Scenario localScenario = new Scenario(getTitle(), this.mType, this.mTags);
+    localScenario.mLog = getResultOutput();
+    for (int i = 0; i < this.mResult.length; i++)
+    {
+      float f1 = (float)this.mResult[i] / 1000.0F;
+      float f2 = this.mCaseRound / f1;
+      localScenario.mResults.add(Double.valueOf(Float.valueOf(f2).doubleValue()));
+    }
+    localArrayList.add(localScenario);
+    return localArrayList;
+  }
+
+  public String getTitle()
+  {
+    return "Play Video";
+  }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.techain.runtime.CaseVideo
+ * JD-Core Version:    0.6.2
+ */
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterCanvas.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterCanvas.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterCanvas.java	(revision 167997)
@@ -0,0 +1,99 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+import android.widget.*;
+import android.view.*;
+import android.graphics.Canvas;
+import android.os.*;
+
+import java.util.Random;
+
+import android.graphics.Color;
+
+public class TesterCanvas extends Tester {
+    public final String TAG = "TesterCanvas";
+    public final static String PACKAGE = "com.techain.runtime";
+    MyView mView;
+
+    public String getTag() {
+        return TAG;
+    }
+
+    public static String getPackage() {
+        return PACKAGE;
+    }
+
+    public static String getFullClassName() {
+        return getPackage() + ".TesterCanvas";
+    }
+
+    public int sleepBetweenRound() {
+        return 0;
+    }
+
+    public int sleepBeforeStart() {
+        return 1000;
+    }
+
+    public void oneRound() {
+        mView.postInvalidate();
+    }
+
+    public void onCreate(Bundle bundle) {
+        super.onCreate(bundle);
+        mView = new MyView(this);
+        setContentView(mView);
+    }
+
+    class MyView extends View {
+        int i = 0;
+        Random mRandom;
+
+        MyView(Context context) {
+            super(context);
+            mRandom = new Random();
+        }
+
+        @Override
+        protected void onWindowVisibilityChanged(int visibility) {
+            super.onWindowVisibilityChanged(visibility);
+            if (visibility != View.VISIBLE) {
+                return;
+            }
+
+            startTester();
+        }
+
+        @Override
+        public void onDraw(Canvas canvas) {
+            super.onDraw(canvas);
+            int r = (0x00151515 | mRandom.nextInt()) | Color.BLACK;
+            canvas.drawRGB(r, r, r);
+            decreaseCounter();
+        }
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/Scenario.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/Scenario.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/Scenario.java	(revision 167997)
@@ -0,0 +1,59 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import java.util.Date;
+import java.util.ArrayList;
+
+public class Scenario {
+    String mName;
+    String mType;
+    String [] mTags;
+    Date mTime;
+
+    public ArrayList<Double> mResults;
+    public String mStringResults;
+    public boolean useStringResults;
+    String mLog;
+
+    public Scenario(String name, String type, String [] tags) {
+        useStringResults = false;
+
+        mName = name;
+        mType = type;
+        mTags = tags;
+
+        mTime = new Date();
+        mResults = new ArrayList<Double>();
+    }
+
+    public Scenario(String name, String type, String [] tags, boolean useString) {
+        if (!useString) {
+            useStringResults = false;
+            mResults = new ArrayList<Double>();
+        } else {
+            useStringResults = true;
+        }
+
+        mName = name;
+        mType = type;
+        mTags = tags;
+
+        mTime = new Date();
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseComplex.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseComplex.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseComplex.java	(revision 167997)
@@ -0,0 +1,62 @@
+package com.techain.runtime;
+
+import java.util.ArrayList;
+
+public class CaseComplex extends Case
+{
+  public static int ComplexRound = 1;
+
+  CaseComplex()
+  {
+    super("CaseComplex", TesterComplex.getFullClassName(), 3, ComplexRound);
+    this.mType = "complex";
+    this.mTags = new String[] { "complex" };
+  }
+
+  public String getDescription()
+  {
+    return "call mediaplayer.play to play video. It play for " + ComplexRound + " times";
+  }
+
+  public String getResultOutput()
+  {
+    if (!couldFetchReport())
+      return "Video has no report";
+    String str = "";
+    float f1 = 0.0F;
+    int i = this.mResult.length;
+    for (int j = 0; j < i; j++)
+    {
+      float f2 = (float)this.mResult[j] / 1000.0F;
+      float f3 = this.mCaseRound / f2;
+      str = str + "Round " + j + " fps = " + f3 + "\n";
+      f1 += f3;
+    }
+    return str + "Average: fps = " + f1 / i + "\n";
+  }
+
+  public ArrayList<Scenario> getScenarios()
+  {
+    ArrayList localArrayList = new ArrayList();
+    Scenario localScenario = new Scenario(getTitle(), this.mType, this.mTags);
+    localScenario.mLog = getResultOutput();
+    for (int i = 0; i < this.mResult.length; i++)
+    {
+      float f1 = (float)this.mResult[i] / 1000.0F;
+      float f2 = this.mCaseRound / f1;
+      localScenario.mResults.add(Double.valueOf(Float.valueOf(f2).doubleValue()));
+    }
+    localArrayList.add(localScenario);
+    return localArrayList;
+  }
+
+  public String getTitle()
+  {
+    return "complex test!";
+  }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.techain.runtime.CaseComplex
+ * JD-Core Version:    0.6.2
+ */
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseScimark2.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseScimark2.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseScimark2.java	(revision 167997)
@@ -0,0 +1,148 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+
+import java.util.ArrayList;
+
+public class CaseScimark2 extends Case {
+
+    public static String LIN_RESULT = "LIN_RESULT";
+    protected Bundle mInfo[];
+
+    public static int Repeat = 1;
+    public static int Round  = 1;
+
+    CaseScimark2() {
+        super("CaseScimark2", "com.techain.runtime.TesterScimark2", Repeat, Round);
+
+        mType = "mflops";
+        String [] _tmp = {
+            "mflops",
+            "numeric",
+            "scientific",
+        };
+        mTags = _tmp;
+
+        generateInfo();
+    }
+
+    public String getTitle() {
+        return "Scimark2";
+    }
+
+    public String getDescription() {
+        return "SciMark 2.0 is a Java benchmark for scientific and numerical computing. It measures several computational kernels and reports a composite score in approximate Mflops.";
+    }
+
+    private void generateInfo() {
+        mInfo = new Bundle[Repeat];
+        for (int i = 0; i < mInfo.length; i++) {
+            mInfo[i] = new Bundle();
+        }
+    }
+
+    @Override
+    public void clear() {
+        super.clear();
+        generateInfo();
+    }
+
+    @Override
+    public void reset() {
+        super.reset();
+        generateInfo();
+    }
+
+    @Override
+    public String getResultOutput() {
+        if (!couldFetchReport()) {
+            return "No benchmark report";
+        }
+
+        String result = "\n";
+        for (int i = 0; i < mInfo.length; i++) {
+            result += TesterScimark2.bundleToString(mInfo[i]);
+            result += "\n";
+        }
+        return result;
+    }
+
+    /*
+     *  Get Average Benchmark
+     */
+    public double getBenchmark(Scenario s) {
+        double total = 0;
+        int length = mInfo.length;
+        String name = s.mName.replaceFirst("Scimark2:", "");
+        for (int i = 0; i < length; i++) {
+            total += mInfo[i].getDouble(name, 0.0);
+        }
+        return total/length;
+    }
+
+    @Override
+    public ArrayList<Scenario> getScenarios () {
+        ArrayList<Scenario> scenarios = new ArrayList<>();
+
+        ArrayList<String> subBenchmarks = new ArrayList<>();
+        subBenchmarks.add(TesterScimark2.COMPOSITE    );
+        subBenchmarks.add(TesterScimark2.FFT          );
+        subBenchmarks.add(TesterScimark2.SOR          );
+        subBenchmarks.add(TesterScimark2.MONTECARLO   );
+        subBenchmarks.add(TesterScimark2.SPARSEMATMULT);
+        subBenchmarks.add(TesterScimark2.LU           );
+
+        for (int i = 0; i < subBenchmarks.size(); i++) {
+            String benchName = subBenchmarks.get(i);
+            Scenario s = new Scenario(getTitle()+":"+benchName, mType, mTags);
+
+            for (int j = 0; j < mInfo.length; j++) {
+                double[] _tmp = mInfo[j].getDoubleArray(benchName + "array");
+                if (_tmp == null) {
+                    return scenarios;
+                }
+                for (int k = 0; k < _tmp.length; k++)
+                    s.mResults.add(_tmp[k]);
+            }
+            scenarios.add(s);
+        }
+        return scenarios;
+    }
+
+    @Override
+    protected boolean saveResult(Intent intent, int index) {
+        Bundle info = intent.getBundleExtra(LIN_RESULT);
+        if (info == null) {
+            Log.i(TAG, "Weird! cannot find Scimark2Info");
+            return false;
+        } else {
+            mInfo[index] = info;
+        }
+
+        return true;
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterMusic.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterMusic.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterMusic.java	(revision 167997)
@@ -0,0 +1,121 @@
+package com.techain.runtime;
+
+import android.media.AudioManager;
+import android.media.MediaPlayer;
+import android.os.Bundle;
+import android.util.Log;
+
+public class TesterMusic extends Tester
+{
+  public static final String PACKAGE = "com.techain.runtime";
+  public final String TAG = "TesterMusic";
+  private int alarm_volume = 0;
+  private int dtmf_volume = 0;
+  AudioManager mAudioManager = null;
+  private MediaPlayer mPlayer;
+  private int music_volume = 0;
+  private int notification_volume = 0;
+  int preMode = -2;
+  private int ring_volume = 0;
+  private int system_volume = 0;
+  private int voice_call_volume = 0;
+
+  public static String getFullClassName()
+  {
+    return getPackage() + ".TesterMusic";
+  }
+
+  public static String getPackage()
+  {
+    return "com.techain.runtime";
+  }
+
+  public void finish()
+  {
+    if (this.mPlayer != null)
+      this.mPlayer.stop();
+    if (this.mAudioManager != null)
+    {
+      Log.d("TesterMusic", "finish setMode() " + this.preMode);
+      if (this.preMode != -2)
+      {
+        this.mAudioManager.setMode(this.preMode);
+        this.mAudioManager.setStreamVolume(4, this.mAudioManager.getStreamMaxVolume(4), 0);
+        this.mAudioManager.setStreamVolume(3, this.mAudioManager.getStreamMaxVolume(3), 0);
+        this.mAudioManager.setStreamVolume(0, this.mAudioManager.getStreamMaxVolume(0), 0);
+        this.mAudioManager.setStreamVolume(8, this.mAudioManager.getStreamMaxVolume(8), 0);
+        this.mAudioManager.setStreamVolume(5, this.mAudioManager.getStreamMaxVolume(5), 0);
+        this.mAudioManager.setStreamVolume(2, this.mAudioManager.getStreamMaxVolume(2), 0);
+        this.mAudioManager.setStreamVolume(1, this.mAudioManager.getStreamMaxVolume(1), 0);
+      }
+    }
+    super.finish();
+  }
+
+  public String getTag()
+  {
+    return "TesterMusic";
+  }
+
+  public void onCreate(Bundle paramBundle)
+  {
+    super.onCreate(paramBundle);
+    this.mAudioManager = ((AudioManager)getSystemService("audio"));
+    this.preMode = this.mAudioManager.getMode();
+    this.mAudioManager.setMode(2);
+    Log.d("TesterMusic", "oncreate set mode 2");
+    this.alarm_volume = this.mAudioManager.getStreamVolume(4);
+    this.music_volume = this.mAudioManager.getStreamVolume(3);
+    this.voice_call_volume = this.mAudioManager.getStreamVolume(0);
+    this.dtmf_volume = this.mAudioManager.getStreamVolume(8);
+    this.notification_volume = this.mAudioManager.getStreamVolume(5);
+    this.ring_volume = this.mAudioManager.getStreamVolume(2);
+    this.system_volume = this.mAudioManager.getStreamVolume(1);
+    this.mAudioManager.setStreamVolume(4, this.mAudioManager.getStreamMaxVolume(4), 0);
+    this.mAudioManager.setStreamVolume(3, this.mAudioManager.getStreamMaxVolume(3), 0);
+    this.mAudioManager.setStreamVolume(0, this.mAudioManager.getStreamMaxVolume(0), 0);
+    this.mAudioManager.setStreamVolume(8, this.mAudioManager.getStreamMaxVolume(8), 0);
+    this.mAudioManager.setStreamVolume(5, this.mAudioManager.getStreamMaxVolume(5), 0);
+    this.mAudioManager.setStreamVolume(2, this.mAudioManager.getStreamMaxVolume(2), 0);
+    this.mAudioManager.setStreamVolume(1, this.mAudioManager.getStreamMaxVolume(1), 0);
+    try
+    {
+      this.mPlayer = MediaPlayer.create(this, 2131034112);
+      if (this.mPlayer != null)
+        this.mPlayer.stop();
+      this.mPlayer.prepare();
+      this.mPlayer.start();
+      this.mStartFlag = false;
+      start();
+      startTester();
+      return;
+    }
+    catch (Exception localException)
+    {
+     // while (true)
+      {
+        localException.printStackTrace();
+        Log.v("TesterMusic", "MediaPlayer play start Exception!");
+      }
+    }
+  }
+
+  public void oneRound()
+  {
+  }
+
+  public int sleepBeforeStart()
+  {
+    return 1000;
+  }
+
+  public int sleepBetweenRound()
+  {
+    return 0;
+  }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.techain.runtime.TesterMusic
+ * JD-Core Version:    0.6.2
+ */
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/Report.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/Report.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/Report.java	(revision 167997)
@@ -0,0 +1,101 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+
+import android.app.Activity;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.TextView;
+import android.widget.Button;
+import android.content.*;
+import java.nio.*;
+
+import java.util.LinkedList;
+
+/* Construct a basic UI */
+public class Report extends Activity implements View.OnClickListener {
+
+    public final static String TAG = "Repord";
+    public final static String REPORT = "REPORT";
+    public final static String XML = "XML";
+    public final static String AUTOUPLOAD = "AUTOUPLOAD";
+    private TextView mTextView;
+
+    private Button mUpload;
+    private Button mBack;
+    private String mXMLResult;
+    boolean mAutoUpload = false;
+
+    @Override
+    protected void onCreate(Bundle bundle) {
+        super.onCreate(bundle);
+        setContentView(R.layout.report);
+
+        mTextView = (TextView)findViewById(R.id.report_text);
+
+        mUpload = (Button)findViewById(R.id.btn_upload);
+        mUpload.setOnClickListener(this);
+
+        mBack = (Button)findViewById(R.id.btn_back);
+        mBack.setOnClickListener(this);
+
+        Intent intent = getIntent();
+        String report = intent.getStringExtra(REPORT);
+        mXMLResult = intent.getStringExtra(XML);
+        mAutoUpload = intent.getBooleanExtra(AUTOUPLOAD, false);
+
+        if (report == null || report.equals("")) {
+            mTextView.setText("oooops...report not found");
+        } else {
+            mTextView.setText(report);
+        }
+
+        if (mXMLResult == null) {
+            mUpload.setEnabled(false);
+        }
+
+        if (mAutoUpload) {
+            onClick(mUpload);
+        }
+    }+
+
+    public void onClick(View v) {
+        if (v == mBack) {
+            finish();
+        } else if (v == mUpload) {
+            Intent intent = new Intent();
+            intent.putExtra(Upload.XML, mXMLResult);
+            if (mAutoUpload) {
+                intent.putExtra(Upload.AUTOUPLOAD, true);
+            }
+            intent.setClassName(Upload.packageName(), Upload.fullClassName());
+            
+            startActivity(intent);
+        }
+    }
+
+    public static String fullClassName() {
+        return "com.techain.runtime.Report";
+    }
+
+    public static String packageName() {
+        return "com.techain.runtime";
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/Case.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/Case.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/Case.java	(revision 167997)
@@ -0,0 +1,362 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+import android.widget.*;
+import android.view.*;
+
+import java.nio.*;
+
+import java.util.ArrayList;
+
+import org.json.JSONObject;
+import org.json.JSONArray;
+import org.json.JSONException;
+
+public abstract class Case {
+    protected String TAG = "Case";
+
+    protected String PACKAGE = Benchmark.PACKAGE;
+    protected String TESTER;
+
+    /* If mRepeatMax = 3, mRepeatNow will count from 0 to 2*/
+    private int mRepeatMax = 1;
+    private int mRepeatNow;
+    protected boolean mInvolved;
+    protected long[] mResult;
+
+    private final static String SOURCE = "SOURCE";
+    private final static String INDEX = "INDEX";
+    private final static String RESULT = "RESULT";
+    private final static String ROUND = "ROUND";
+    protected int mCaseRound = 30;
+
+    public String mType = "";
+    public String[] mTags = {};
+    protected int mExpireTime = 0;
+
+    /**
+     * Constructor to generate instance.
+     * <p/>
+     * It defines the Case as "Please run Tester for N round, repeat N times"
+     *
+     * @param tag    The tag name of the subclass Case. It is generally the Subclass Name
+     * @param tester The taget tester be used by subclass Case. It should be full class name.
+     * @param repeat The tester will run *repeat* times.
+     * @param round  To tell tester to run itself as *round* round.
+     */
+    protected Case(String tag, String tester, int repeat, int round) {
+        TAG = tag;
+        TESTER = tester;
+        mRepeatMax = repeat;
+        mCaseRound = round;
+        reset();
+    }
+
+    abstract public String getDescription();
+
+    abstract public String getTitle();
+
+    abstract public ArrayList<Scenario> getScenarios();
+
+    public static final void putExpireTime(Intent paramIntent, int paramInt) {
+        paramIntent.putExtra("TIME", paramInt);
+    }
+
+    public static final int getExpireTime(Intent paramIntent) {
+        return paramIntent.getIntExtra("TIME", 3000);
+    }
+
+    public final static void putRound(Intent intent, int round) {
+        intent.putExtra(ROUND, round);
+    }
+
+    public final static void putIndex(Intent intent, int index) {
+        intent.putExtra(INDEX, index);
+    }
+
+    public final static void putSource(Intent intent, String source) {
+        intent.putExtra(SOURCE, source);
+    }
+
+    public final static void putResult(Intent intent, long result) {
+        intent.putExtra(RESULT, result);
+    }
+
+    public final static int getRound(Intent intent) {
+        return intent.getIntExtra(ROUND, 100);
+    }
+
+    public final static int getIndex(Intent intent) {
+        return intent.getIntExtra(INDEX, -1);
+    }
+
+    public final static String getSource(Intent intent) {
+        String source = intent.getStringExtra(SOURCE);
+        if (source == null) {
+            return "unknown";
+        }
+
+        if (source.equals("")) {
+            return "unknown";
+        }
+
+        return source;
+    }
+
+    public int getRepeatMax() {
+        return mRepeatMax;
+    }
+
+    public final static long getResult(Intent intent) {
+        long defaultResult = -1;
+        return intent.getLongExtra(RESULT, defaultResult);
+    }
+
+    public String getTag() {
+        return TAG;
+    }
+
+    public Intent generateIntent() {
+        /* if run out of the repeat times, go back directly */
+        if (mRepeatNow >= mRepeatMax) {
+            return null;
+        }
+
+        Intent intent = new Intent();
+        intent.setClassName(PACKAGE, TESTER);
+        Case.putRound(intent, mCaseRound);
+        Case.putSource(intent, TAG);
+        Case.putIndex(intent, mRepeatNow);
+        Case.putExpireTime(intent, mExpireTime);
+
+        mRepeatNow = mRepeatNow + 1;
+
+        return intent;
+    }
+
+    public void clear() {
+        mResult = new long[mRepeatMax];
+        mRepeatNow = mRepeatMax; // no more repeating times
+        mInvolved = false;
+    }
+
+    /* Reset the repeat time to default value. clear result */
+    public void reset() {
+        mResult = new long[mRepeatMax];
+        mRepeatNow = 0;
+        mInvolved = true;
+    }
+
+    public boolean isFinish() {
+        /* If mRepeatMax = 3, mRepeatNow will count from 0 to 2*/
+        return (mRepeatNow >= mRepeatMax);
+    }
+
+    /**
+     * To read the SOURCE of this intent to see if this intent belong to this case
+     *
+     * @return return True if this intent belong to this case, otherwise return false
+     */
+    public boolean realize(Intent intent) {
+        if (intent == null) {
+            Log.i(TAG, "Intent is null");
+            return false;
+        }
+
+        String source = Case.getSource(intent);
+        if (source == null || source.equals("")) {
+            return false;
+        }
+
+        if (source.equals(TAG)) {
+            return true;
+        } else {
+            return false;
+        }
+    }
+
+    public boolean parseIntent(Intent intent) {
+        if (intent == null) {
+            Log.i(TAG, "Intent is null");
+            return false;
+        }
+
+        String tag = Case.getSource(intent);
+
+        if (tag == null || !tag.equals(TAG)) {
+            Log.i(TAG, "Unknown intent, cannot parse it");
+            return false;
+        }
+
+        int index = Case.getIndex(intent);
+        if (index >= mRepeatMax) {
+            Log.i(TAG, "Ooooops index >= mRepeatMax(" + mRepeatMax + "), how come?");
+            return false;
+        }
+
+        return saveResult(intent, index);
+    }
+
+    /**
+     * To Save the result from Tester into this Case
+     * If subclass has its own way to analysis result, override this method
+     *
+     * @param intent The intent will be analysis
+     * @param index  The repeating time of this intent. (Tester might repeat N times)
+     * @return return True if analysis sucessfully
+     */
+    protected boolean saveResult(Intent intent, int index) {
+        long result = Case.getResult(intent);
+
+        if (result == -1) {
+            Log.i(TAG, "Oooops! result is " + result);
+            return false;
+        }
+
+        mResult[index] = result;
+        return true;
+    }
+
+    public boolean couldFetchReport() {
+        if (!isFinish()) {
+            return false;
+        }
+
+        if (mInvolved == false) {
+            return false;
+        }
+
+        return true;
+    }
+
+    public String getResultOutput() {
+        if (!couldFetchReport()) {
+            return "No benchmark report";
+        }
+
+        String result = "";
+        long total = 0;
+        int length = mResult.length;
+        for (int i = 0; i < length; i++) {
+            total += mResult[i];
+            result += "round " + i + ":" + mResult[i] + "\n";
+        }
+
+        result += "Average:" + (total / length) + "\n";
+        return result;
+    }
+
+    /*
+     *  Get Average Benchmark
+     */
+    public double getBenchmark(Scenario s) {
+        double total = 0;
+        int length = mResult.length;
+        for (int i = 0; i < length; i++) {
+            total += mResult[i];
+        }
+        return (double) total / length;
+    }
+
+    public String getXMLBenchmark() {
+        if (!couldFetchReport()) {
+            Log.e(TAG, "cannot fetch report: " + getTitle() + " : " + isFinish() + " : " + mInvolved);
+            return "";
+        }
+
+        String result = "";
+
+        ArrayList<Scenario> scenarios = getScenarios();
+        Log.e(TAG, "length of scenarios: " + scenarios.size());
+
+        for (Scenario s : scenarios) {
+            if (s == null) {
+                Log.e(TAG, "Scenario is null");
+                continue;
+            }
+            String _result = "";
+            _result += "<scenario";
+            _result += " benchmark=\"" + s.mName.replace(" ", "") + "\"";
+            _result += " unit=\"" + s.mType + "\"";
+            _result += " tags=\"";
+            for (String tag : s.mTags)
+                _result += tag + ",";
+            _result += "\"";
+            _result += ">";
+            if (!s.useStringResults) {
+                Double total = 0.0;
+                for (Double value : s.mResults) {
+                    _result += value + " ";
+                    total += value;
+                }
+                _result += "</scenario>";
+                if (total == 0) {
+                    Log.e(TAG, "_result total is 0: ");
+                    Log.e(TAG, _result);
+                    continue;
+                }
+            } else {
+                if (s.mStringResults == null || s.mStringResults.length() == 0) {
+                    Log.e(TAG, "string results is empty: " + s.mStringResults);
+                    continue;
+                }
+                _result += s.mStringResults;
+                _result += "</scenario>";
+            }
+            result += _result;
+        }
+        return result;
+    }
+
+    public JSONArray getJSONBenchmark() {
+        JSONArray scenarioResult = new JSONArray();
+        if (!couldFetchReport()) {
+            Log.e(TAG, "cannot fetch report: " + getTitle() + " : " + isFinish() + " : " + mInvolved);
+            return scenarioResult;
+        }
+        ArrayList<Scenario> scenarios = getScenarios();
+
+        try {
+            for (Scenario s : scenarios) {
+                JSONObject jsonObj = new JSONObject();
+                jsonObj.put("test_case_id", s.mName.replace(" ", ""));
+                jsonObj.put("measurement", getBenchmark(s));
+                jsonObj.put("units", s.mType);
+                jsonObj.put("result", "pass");
+                scenarioResult.put(jsonObj);
+            }
+        } catch (JSONException jsonE) {
+            jsonE.printStackTrace();
+        }
+        return scenarioResult;
+    }
+
+    public void setExpireTime(int paramInt) {
+        this.mExpireTime = paramInt;
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseMusic.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseMusic.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseMusic.java	(revision 167997)
@@ -0,0 +1,62 @@
+package com.techain.runtime;
+
+import java.util.ArrayList;
+
+public class CaseMusic extends Case
+{
+  public static int MusicRound = 300;
+
+  CaseMusic()
+  {
+    super("CaseMusic", TesterMusic.getFullClassName(), 3, MusicRound);
+    this.mType = "music";
+    this.mTags = new String[] { "music" };
+  }
+
+  public String getDescription()
+  {
+    return "call mediaplayer.play to play music. It play for " + MusicRound + " times";
+  }
+
+  public String getResultOutput()
+  {
+    if (!couldFetchReport())
+      return "Music has no report";
+    String str = "";
+    float f1 = 0.0F;
+    int i = this.mResult.length;
+    for (int j = 0; j < i; j++)
+    {
+      float f2 = (float)this.mResult[j] / 1000.0F;
+      float f3 = this.mCaseRound / f2;
+      str = str + "Round " + j + " fps = " + f3 + "\n";
+      f1 += f3;
+    }
+    return str + "Average: fps = " + f1 / i + "\n";
+  }
+
+  public ArrayList<Scenario> getScenarios()
+  {
+    ArrayList localArrayList = new ArrayList();
+    Scenario localScenario = new Scenario(getTitle(), this.mType, this.mTags);
+    localScenario.mLog = getResultOutput();
+    for (int i = 0; i < this.mResult.length; i++)
+    {
+      float f1 = (float)this.mResult[i] / 1000.0F;
+      float f2 = this.mCaseRound / f1;
+      localScenario.mResults.add(Double.valueOf(Float.valueOf(f2).doubleValue()));
+    }
+    localArrayList.add(localScenario);
+    return localArrayList;
+  }
+
+  public String getTitle()
+  {
+    return "Play Music";
+  }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.techain.runtime.CaseMusic
+ * JD-Core Version:    0.6.2
+ */
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterGC.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterGC.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterGC.java	(revision 167997)
@@ -0,0 +1,87 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import org.zeroxlab.gc.GCBenchmark;
+
+import android.app.Activity;
+
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+import android.content.Intent;
+import android.widget.TextView;
+
+public class TesterGC extends Tester {
+
+    private TextView mTextView1;
+
+    public static double time = 0.0;
+    public static Handler mHandler;
+    public static final int GUINOTIFIER = 0x1234;
+
+
+    protected String getTag() {
+        return "GC";
+    }
+
+    protected int sleepBeforeStart() {
+        return 1000;
+    }
+
+    protected int sleepBetweenRound() {
+        return 0;
+    }
+
+    protected void oneRound() {
+        GCBenchmark.benchmark();
+        decreaseCounter();
+    }
+
+    @Override
+    protected boolean saveResult(Intent intent) {
+        intent.putExtra(CaseGC.GCRESULT, GCBenchmark.out.toString());
+        intent.putExtra(CaseGC.TIME, time);
+        return true;
+    }
+
+    /** Called when the activity is first created. */
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.gc);
+
+        mTextView1 = (TextView) findViewById(R.id.myTextView1);
+
+        mHandler = new Handler() {
+            public void handleMessage(Message msg) {
+                switch (msg.what) {
+                    case GUINOTIFIER:
+                        mTextView1.setText(GCBenchmark.out);
+                        break;
+                }
+                super.handleMessage(msg);
+            }
+        };
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        startTester();
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/InitCases.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/InitCases.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/InitCases.java	(revision 167997)
@@ -0,0 +1,104 @@
+package com.techain.runtime;
+
+import java.util.LinkedList;
+
+public class InitCases {
+    public static final int TWO_D_ITEM = 0;
+    public static final int THREE_D_ITEM = 1;
+    public static final int CPU_ITEM = 2;
+    public static final int MEMORY_ITEM = 3;
+    public static final int SLEEP_ITEM = 4;
+    public static final int Complex_ITEM = 5;
+
+    private static LinkedList<Case> complexCase;
+    private static LinkedList<Case> cpuCase;
+    private static LinkedList<Case> memoryCase;
+    private static LinkedList<Case> sleepCase;
+    private static LinkedList<Case> threeDCases;
+    private static LinkedList<Case> twoDCases;
+
+    public InitCases() {
+        CaseArithmetic localCaseArithmetic = new CaseArithmetic();
+        CaseJavascript localCaseJavascript = new CaseJavascript();
+        CaseScimark2 localCaseScimark2 = new CaseScimark2();
+        CaseSleep localCaseSleep = new CaseSleep();
+        CaseCanvas localCaseCanvas = new CaseCanvas();
+        CaseGLCube localCaseGLCube = new CaseGLCube();
+        CaseDrawCircle localCaseDrawCircle = new CaseDrawCircle();
+        CaseNeheLesson08 localCaseNeheLesson08 = new CaseNeheLesson08();
+        CaseNeheLesson16 localCaseNeheLesson16 = new CaseNeheLesson16();
+        CaseTeapot localCaseTeapot = new CaseTeapot();
+        CaseGC localCaseGC = new CaseGC();
+        CaseDrawCircle2 localCaseDrawCircle2 = new CaseDrawCircle2();
+        CaseDrawRect localCaseDrawRect = new CaseDrawRect();
+        CaseDrawArc localCaseDrawArc = new CaseDrawArc();
+        CaseDrawImage localCaseDrawImage = new CaseDrawImage();
+        CaseDrawText localCaseDrawText = new CaseDrawText();
+        twoDCases = new LinkedList();
+        threeDCases = new LinkedList();
+        memoryCase = new LinkedList();
+        cpuCase = new LinkedList();
+        sleepCase = new LinkedList();
+        complexCase = new LinkedList();
+        twoDCases.add(localCaseCanvas);
+        twoDCases.add(localCaseDrawCircle);
+        twoDCases.add(localCaseDrawCircle2);
+        twoDCases.add(localCaseDrawRect);
+        twoDCases.add(localCaseDrawArc);
+        twoDCases.add(localCaseDrawImage);
+        twoDCases.add(localCaseDrawText);
+        threeDCases.add(localCaseGLCube);
+        threeDCases.add(localCaseNeheLesson08);
+        threeDCases.add(localCaseNeheLesson16);
+        threeDCases.add(localCaseTeapot);
+        complexCase.add(localCaseCanvas);
+        complexCase.add(localCaseDrawCircle);
+        complexCase.add(localCaseDrawCircle2);
+        complexCase.add(localCaseDrawRect);
+        complexCase.add(localCaseDrawArc);
+        complexCase.add(localCaseDrawImage);
+        complexCase.add(localCaseDrawText);
+        complexCase.add(localCaseGLCube);
+        complexCase.add(localCaseNeheLesson08);
+        complexCase.add(localCaseNeheLesson16);
+        complexCase.add(localCaseTeapot);
+        memoryCase.add(localCaseGC);
+        cpuCase.add(localCaseArithmetic);
+        cpuCase.add(localCaseScimark2);
+        sleepCase.add(localCaseSleep);
+    }
+
+    public static LinkedList<Case> changeList(LinkedList<Case> paramLinkedList1, LinkedList<Case> paramLinkedList2) {
+        for (int i = 0; i < paramLinkedList2.size(); i++)
+            paramLinkedList1.add(paramLinkedList2.get(i));
+        return paramLinkedList1;
+    }
+
+    public static LinkedList<Case> getCases(int paramInt) {
+        switch (paramInt) {
+            default:
+                return null;
+            case TWO_D_ITEM:
+                return twoDCases;
+            case THREE_D_ITEM:
+                return threeDCases;
+            case CPU_ITEM:
+                return cpuCase;
+            case MEMORY_ITEM:
+                return memoryCase;
+            case SLEEP_ITEM:
+                return sleepCase;
+            case Complex_ITEM:
+                return complexCase;
+        }
+    }
+
+    public static void setTime(LinkedList<Case> cases, int min) {
+        int caseSize = cases.size();
+        for (int i = 0; i < caseSize; i++) {
+            Case myCase = cases.get(i);
+            myCase.setExpireTime(60 * (min * 1000) / (caseSize * myCase.getRepeatMax()));
+            System.out.println("time " + 60 * (min * 1000) / caseSize);
+        }
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/Upload.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/Upload.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/Upload.java	(revision 167997)
@@ -0,0 +1,373 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+import android.content.SharedPreferences;
+import android.app.Activity;
+import android.os.Bundle;
+import android.content.Intent;
+
+import android.widget.EditText;
+import android.widget.TextView;
+import android.widget.Button;
+import android.widget.CheckBox;
+import android.widget.Toast;
+import android.view.View;
+
+import android.text.TextWatcher;
+import android.text.Editable;
+
+import android.app.Dialog;
+import android.app.AlertDialog;
+import android.app.ProgressDialog;
+import android.content.DialogInterface;
+
+import android.os.SystemClock;
+import android.os.Handler;
+import android.os.Bundle;
+import android.os.Message;
+
+import java.util.HashSet;
+
+import android.webkit.WebSettings;
+import android.webkit.WebView;
+import android.webkit.WebViewClient;
+import android.webkit.WebChromeClient;
+import android.webkit.JsResult;
+import android.graphics.Bitmap;
+import android.content.pm.PackageManager;
+import android.content.pm.PackageInfo;
+
+
+public class Upload extends Activity implements View.OnClickListener {
+
+    public final static String TAG = "Upload";
+    public final static String XML = "XML";
+    public final static String AUTOUPLOAD = "AUTOUPLOAD";
+
+    public final static String mMobileLoginUrl = "http://0xbenchmark.appspot.com/mobileLogin";
+
+    EditText mBenchName;
+    EditText mEmail;
+    EditText mAPIKey;
+    Button mLoginGoogle;
+    Button mSend;
+    CheckBox mLogin;
+
+    String mURL;
+    String mXML;
+    String mFailMsg;
+
+    String mHash;
+    HashSet<String> mHashSet = new HashSet<String>();
+
+    MicroBenchmark mb;
+
+    Handler mUploadHandler;
+    Handler mLoginHandler;
+
+    boolean mLogedin = false;
+    boolean mAutoUpload = false;
+
+    @Override
+    protected void onCreate(Bundle bundle) {
+        super.onCreate(bundle);
+        setContentView(R.layout.upload);
+
+        mLogin = (CheckBox)findViewById(R.id.login);
+        mLogin.setChecked(false);
+        mLogin.setOnClickListener(this);
+
+        // prevent scrollview from scrolling to middle initially
+        // (caused by default focus to EditText)
+        mLogin.setFocusableInTouchMode(true);
+        mLogin.requestFocus();
+
+
+        mBenchName = (EditText)findViewById(R.id.benchName);
+        mEmail     = (EditText)findViewById(R.id.email);
+        mAPIKey    = (EditText)findViewById(R.id.api);
+        mLoginGoogle    = (Button)findViewById(R.id.login_google);
+        mLoginGoogle.setOnClickListener(this);
+        mBenchName.setEnabled(false);
+        mEmail.setEnabled(false);
+        mAPIKey.setEnabled(false);
+        mLoginGoogle.setEnabled(false);
+
+        mSend      = (Button)findViewById(R.id.send);
+        mSend.setOnClickListener(this);
+
+        Intent intent = getIntent();
+        mXML = intent.getStringExtra(XML);
+        mAutoUpload = intent.getBooleanExtra(AUTOUPLOAD, false);
+
+        mUploadHandler = new Handler() {
+            public void handleMessage(Message msg) {
+                int state = msg.getData().getInt(MicroBenchmark.STATE);
+                if (state != MicroBenchmark.RUNNING) {
+                    try {
+                        dismissDialog(0);
+                        removeDialog(0);
+                    } catch (Exception e) {
+                    }
+                    if (state == MicroBenchmark.DONE) {
+                        showDialog(3);
+                        showDialog(1);
+                        mHashSet.add(mHash);
+                    }
+                    else {
+                        showDialog(2);
+                    }
+                    Log.e(TAG, msg.getData().getString(MicroBenchmark.MSG));
+                }
+            }
+        };
+
+
+        mLoginHandler = new Handler() {
+            public void handleMessage(Message msg) {
+                dismissDialog(5);
+            }
+        };
+
+        if (mAutoUpload) {
+            onClick(mSend);
+        }
+    }
+
+    private String trimTail(String text) {
+        int index;
+        if (text == null) {
+            return text;
+        }
+        index = text.length() -1;
+        while (text.charAt(index) == ' ') {
+            if (--index < 0) {
+                return "";
+            }
+        }
+        return text.substring(0, index + 1);
+    }
+
+    public void onClick(View v) {
+        Log.i(TAG, "onclick listener");
+        if (v == mSend) {
+            StringBuffer _mXML;
+            int _index;
+            String attr;
+
+            String benchName = getString(R.string.default_benchname);
+            String apiKey = getString(R.string.default_api);
+            String eMail = getString(R.string.default_email);
+            if (mLogin.isChecked()) {
+                benchName = mBenchName.getText().toString();
+                benchName = trimTail(benchName);
+                apiKey = mAPIKey.getText().toString();
+                eMail = mEmail.getText().toString();
+            }
+
+            String versionName = "";
+            int versionCode = 0;
+            int flag = 0;
+            try {
+                PackageInfo pinfo = getPackageManager().getPackageInfo("com.techain.runtime", flag);
+                versionCode = pinfo.versionCode;
+                versionName = pinfo.versionName;
+            }
+            catch (PackageManager.NameNotFoundException e) {
+                Log.e(TAG, "PackageManager.NameNotFoundException");
+            }
+
+            attr = "";
+            attr += " BenchVersionCode=\"" + String.valueOf(versionCode) + "\"";
+            attr += " BenchVersionName=\"" + versionName + "\"";
+            attr += " apiKey=\"" + apiKey + "\"";
+            attr += " benchmark=\"" + benchName + "\"";
+            _mXML = new StringBuffer(mXML);
+            _index = _mXML.indexOf("result") + 6;
+            _mXML.insert(_index, attr);
+            Log.e(TAG, _mXML.toString());
+
+            mURL = "http://" + getString(R.string.default_appspot) + ".appspot.com:80/run/";
+            mb = new MicroBenchmark(_mXML.toString(), mURL, apiKey, benchName, mUploadHandler) ;
+            // this is not really a hash
+            mHash = apiKey + benchName;
+            if (!mHashSet.contains(mHash)){
+                showDialog(0);
+                mb.start();
+            } else {
+                showDialog(4);
+            }
+        } else if (v == mLogin) {
+            if (mLogin.isChecked()) {
+                mBenchName.setEnabled(true);
+                mEmail.setEnabled(true);
+                mAPIKey.setEnabled(true);
+                mLoginGoogle.setEnabled(true);
+            } else {
+                mBenchName.setEnabled(false);
+                mEmail.setEnabled(false);
+                mAPIKey.setEnabled(false);
+                mLoginGoogle.setEnabled(false);
+            }
+        } else if (v == mLoginGoogle) {
+            showDialog(5);
+        }
+
+    }
+
+    protected Dialog onCreateDialog(int id) {
+        switch (id) {
+            case (0):
+                ProgressDialog dialog = new ProgressDialog(this);
+                dialog.setMessage("Uploading, please wait...");
+                return dialog;
+            case (1):
+                AlertDialog.Builder builder = new AlertDialog.Builder(this);
+                builder.setMessage("Upload complete.")
+                       .setCancelable(false)
+                       .setPositiveButton("OK", new DialogInterface.OnClickListener() {
+                           public void onClick(DialogInterface dialog, int id) {
+                                dialog.cancel();
+                           }
+                       });
+                return builder.create();
+            case (2):
+                AlertDialog.Builder builder2 = new AlertDialog.Builder(this);
+                builder2.setMessage("Upload failed.")
+                       .setPositiveButton("OK", new DialogInterface.OnClickListener() {
+                           public void onClick(DialogInterface dialog, int id) {
+                                dialog.cancel();
+                           }
+                       });
+                return builder2.create();
+            case (3):
+                String url = "http://" + getString(R.string.default_appspot) + ".appspot.com/";
+
+                AlertDialog.Builder builder3 = new AlertDialog.Builder(this);
+                builder3.setMessage( "Please goto " + url + " for results" )
+                        .setTitle("Result URL")
+                        .setPositiveButton("OK", null)
+                ;
+                return builder3.create();
+            case (4):
+                AlertDialog.Builder builder4 = new AlertDialog.Builder(this);
+                builder4.setMessage( "You have already uploaded results to this location." )
+                        .setTitle("Error")
+                        .setPositiveButton("OK", null)
+                ;
+                return builder4.create();
+            case (5): // webview
+                Dialog mWebDialog = new Dialog(this);
+                mWebDialog.setContentView(R.layout.login_dialog);
+                mWebDialog.setTitle("Login to Google");
+
+                WebView mWebView = (WebView) mWebDialog.findViewById(R.id.web_view);
+                mWebView.setWebViewClient(new MyWebViewClient());
+                mWebView.setWebChromeClient(new MyWebChromeClient());
+
+                WebSettings webSettings = mWebView.getSettings();
+                webSettings.setJavaScriptEnabled(true);
+                webSettings.setSupportZoom(false);
+
+                mWebView.loadUrl(mMobileLoginUrl);
+                return mWebDialog;
+
+            case (6):
+                ProgressDialog dialog2 = new ProgressDialog(this);
+                dialog2.setMessage("Connecting, please wait...");
+                return dialog2;
+
+            default:
+                return null;
+        }
+    }
+
+    final class MyWebChromeClient extends WebChromeClient {
+        @Override
+        public boolean onJsAlert(WebView view, String url, String message, JsResult result) {
+            Log.e(TAG, message);
+            String [] values = message.split("\t");
+            if (values.length == 3 && values[0].equals("returnValue")) {
+                mEmail.setText(values[1]);
+                mAPIKey.setText(values[2]);
+                mLoginHandler.sendMessage(new Message());
+            }
+            result.confirm();
+            return true;
+        }
+    }
+
+    final class MyWebViewClient extends WebViewClient {
+        @Override
+        public void onPageStarted (WebView view, String url, Bitmap favicon) {
+            super.onPageStarted(view, url, favicon);
+            showDialog(6);
+        }
+        @Override
+        public void onPageFinished (WebView view, String url) {
+            super.onPageFinished(view, url);
+            dismissDialog(6);
+            removeDialog(6);
+            dismissDialog(5);
+            showDialog(5);
+        }
+        @Override
+        public boolean shouldOverrideUrlLoading(WebView view, String url) {
+            view.loadUrl(url);
+            return true;
+        }
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+
+        SharedPreferences prefs = getPreferences(0); 
+        String restoredText;
+        restoredText = prefs.getString("mBenchName", null);
+        if (restoredText != null) 
+            mBenchName.setText(restoredText, TextView.BufferType.EDITABLE);
+        restoredText = prefs.getString("mEmail", null);
+        if (restoredText != null) 
+            mEmail.setText(restoredText, TextView.BufferType.EDITABLE);
+        restoredText = prefs.getString("mAPIKey", null);
+        if (restoredText != null) 
+            mAPIKey.setText(restoredText, TextView.BufferType.EDITABLE);
+    }
+
+    @Override
+    protected void onPause() {
+        super.onPause();
+
+        SharedPreferences.Editor editor = getPreferences(0).edit();
+        editor.putString("mBenchName",mBenchName.getText().toString());
+        editor.putString("mEmail",mEmail.getText().toString());
+        editor.putString("mAPIKey",mAPIKey.getText().toString());
+        editor.commit();
+    }
+
+    public static String fullClassName() {
+        return "com.techain.runtime.Upload";
+    }
+
+    public static String packageName() {
+        return "com.techain.runtime";
+    }
+
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseArithmetic.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseArithmetic.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseArithmetic.java	(revision 167997)
@@ -0,0 +1,128 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import java.util.ArrayList;
+
+import android.util.Log;
+
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+
+public class CaseArithmetic extends Case {
+
+    public static String LIN_RESULT = "LIN_RESULT";
+    protected Bundle mInfo[];
+
+    public static int Repeat = 1;
+    public static int Round  = 3;
+
+    CaseArithmetic() {
+        super("CaseArithmetic", "com.techain.runtime.TesterArithmetic", Repeat, Round);
+
+        mType = "mflops";
+        String [] _tmp = {
+            "numeric",
+            "mflops",
+            "scientific",
+        };
+        mTags = _tmp;
+
+        generateInfo();
+    }
+
+    public String getTitle() {
+        return "Linpack";
+    }
+
+    public String getDescription() {
+        return "The Linpack Benchmark is a numerically intensive test that has been used for years to measure the floating point performance of computers.";
+    }
+
+    private void generateInfo() {
+        mInfo = new Bundle[Repeat];
+        for (int i = 0; i < mInfo.length; i++) {
+            mInfo[i] = new Bundle();
+        }
+    }
+
+    @Override
+    public void clear() {
+        super.clear();
+        generateInfo();
+    }
+
+    @Override
+    public void reset() {
+        super.reset();
+        generateInfo();
+    }
+
+    @Override
+    public String getResultOutput() {
+        String result = "\n";
+        for (int i = 0; i < mInfo.length; i++) {
+            result += TesterArithmetic.bundleToString(mInfo[i]);
+            result += "\n";
+        }
+        return result;
+    }
+
+    /*
+     *  Get Average Benchmark
+     */
+    public double getBenchmark(Scenario s) {
+        double total = 0;
+        int length = mInfo.length;
+        for (int i = 0; i < length; i++) {
+            total  += mInfo[i].getDouble(TesterArithmetic.MFLOPS);
+        }
+        return total / length;
+    }
+
+    @Override
+    public ArrayList<Scenario> getScenarios () {
+        ArrayList<Scenario> scenarios = new ArrayList<Scenario>();
+
+        Scenario s = new Scenario(getTitle(), mType, mTags);
+        s.mLog = getResultOutput();
+        for (int i=0; i<mInfo.length; i++)
+            s.mResults.add(mInfo[i].getDouble(TesterArithmetic.MFLOPS));
+
+        scenarios.add(s);
+
+        return scenarios;
+    }
+
+    @Override
+    protected boolean saveResult(Intent intent, int index) {
+        Bundle info = intent.getBundleExtra(LIN_RESULT);
+        if (info == null) {
+            Log.i(TAG, "Weird! cannot find LinpackInfo");
+            return false;
+        } else {
+            mInfo[index] = info;
+        }
+
+        return true;
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseTeapot.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseTeapot.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseTeapot.java	(revision 167997)
@@ -0,0 +1,104 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+
+import org.itri.teapot.TeapotES;
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+import java.util.ArrayList;
+
+public class CaseTeapot extends Case {
+
+    public static int mTeapotRepeat = 2;
+    public static int mTeapotRound  = 1000;
+
+    CaseTeapot() {
+        super("Teapot", TeapotES.FullName, mTeapotRepeat, mTeapotRound);
+        mType = "3d-fps";
+        String [] _tmp = {
+            "3d",
+            "opengl",
+            "render",
+        };
+        mTags = _tmp;
+    }
+
+    public String getTitle() {
+        return "Flying Teapot";
+    }
+
+    public String getDescription() {
+        return "A flying standard Utah Teapot";
+    }
+
+    @Override
+    public String getResultOutput() {
+        if (!couldFetchReport()) {
+            return "Teapot has no report";
+        }
+
+        String result = "";
+        float total = 0;
+        int length = mResult.length;
+
+        for (int i = 0; i < length; i++) {
+            float fps = mCaseRound / (mResult[i] / 1000f); // milliseconds to seconds
+            result += "Round " + i + ": fps = " + fps + "\n";
+            total  += fps;
+        }
+
+        result += "Average: fps = " + (total / length) + "\n";
+        return result;
+    }
+
+    /*
+     *  Get Average Benchmark
+     */
+    public double getBenchmark(Scenario s) {
+        double total = 0;
+        int length = mResult.length;
+        for (int i = 0; i < length; i++) {
+            double second = (mResult[i] / 1000f);
+            double fps = (double) mCaseRound / second;
+            total  += fps;
+        }
+        return total / length;
+    }
+
+    @Override
+    public ArrayList<Scenario> getScenarios () {
+        ArrayList<Scenario> scenarios = new ArrayList<Scenario>();
+
+        Scenario s = new Scenario(getTitle(), mType, mTags);
+        s.mLog = getResultOutput();
+        for (int i = 0; i < mResult.length; i++) {
+            float fps = (float)mCaseRound /  (mResult[i] / 1000f);
+            s.mResults.add(((Float)fps).doubleValue());
+        }
+
+        scenarios.add(s);
+        return scenarios;
+    }
+
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseDrawImage.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseDrawImage.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseDrawImage.java	(revision 167997)
@@ -0,0 +1,108 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+import android.widget.*;
+import android.view.*;
+import java.nio.*;
+import java.util.ArrayList;
+
+public class CaseDrawImage extends Case {
+
+    public static int ImageRound = 500;
+
+    CaseDrawImage() {
+        super("CaseDrawImage", "org.zeroxlab.graphics.DrawImage", 2, ImageRound);
+        mType = "2d-fps";
+        String [] _tmp = {
+            "2d",
+            "render",
+            "skia",
+            "view",
+        };
+        mTags = _tmp;
+    }
+
+    public String getTitle() {
+        return "Draw Image";
+    }
+
+    public String getDescription() {
+        return "call canvas.drawImage to draw icon for " + ImageRound + " times";
+    }
+
+    @Override
+    public String getResultOutput() {
+        if (!couldFetchReport()) {
+            return "DrawImage has no report";
+        }
+
+        String result = "";
+        float total = 0;
+        int length = mResult.length;
+
+        for (int i = 0; i < length; i++) {
+            float second = (mResult[i] / 1000f);
+            float fps = (float) mCaseRound / second; // milliseconds to seconds
+            result += "Round " + i +": fps = " + fps + "\n";
+            total  += fps;
+        }
+
+        result += "Average: fps = " + ((float)total/length) + "\n";
+        return result;
+    }
+
+    /*
+     *  Get Average Benchmark
+     */
+    public double getBenchmark(Scenario s) {
+        double total = 0;
+        int length = mResult.length;
+        for (int i = 0; i < length; i++) {
+            double second = (mResult[i] / 1000f);
+            double fps = (double) mCaseRound / second;
+            total  += fps;
+        }
+        return total / length;
+    }
+
+    @Override
+    public ArrayList<Scenario> getScenarios () {
+        ArrayList<Scenario> scenarios = new ArrayList<Scenario>();
+
+        Scenario s = new Scenario(getTitle(), mType, mTags);
+        s.mLog = getResultOutput();
+        for (int i = 0; i < mResult.length; i++) {
+            float second = (mResult[i] / 1000f);
+            float fps = (float)mCaseRound / second;
+            s.mResults.add(((Float)fps).doubleValue());
+        }
+
+        scenarios.add(s);
+        return scenarios;
+    }
+
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseGLCube.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseGLCube.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseGLCube.java	(revision 167997)
@@ -0,0 +1,109 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+
+import org.zeroxlab.kubench.Kubench;
+
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+import android.widget.*;
+import android.view.*;
+import java.nio.*;
+import java.util.ArrayList;
+
+public class CaseGLCube extends Case {
+
+    public static int CubeRound = 1000;
+
+    CaseGLCube() {
+        super("CaseGLCube", Kubench.getFullClassName(), 3, CubeRound);
+
+        mType = "3d-fps";
+        String [] _tmp = {
+            "3d",
+            "opengl",
+            "render",
+            "apidemo",
+        };
+        mTags = _tmp;
+    }
+
+    public String getTitle() {
+        return "OpenGL Cube";
+    }
+
+    public String getDescription() {
+        return "use OpenGL to draw a magic cube.";
+    }
+
+    @Override
+    public String getResultOutput() {
+        if (!couldFetchReport()) {
+            return "GLCube has no report";
+        }
+
+        String result = "";
+        float total = 0;
+        int length = mResult.length;
+
+        for (int i = 0; i < length; i++) {
+            float fps = mCaseRound / (mResult[i] / 1000f); // milliseconds to seconds
+            result += "Round " + i + ": fps = " + fps + "\n";
+            total  += fps;
+        }
+
+        result += "Average: fps = " + ((float)total/length) + "\n";
+        return result;
+    }
+
+    /*
+     *  Get Average Benchmark
+     */
+    public double getBenchmark(Scenario s) {
+        double total = 0;
+        int length = mResult.length;
+        for (int i = 0; i < length; i++) {
+            double second = (mResult[i] / 1000f);
+            double fps = (double)mCaseRound / second;
+            total  += fps;
+        }
+        return total / length;
+    }
+
+    @Override
+    public ArrayList<Scenario> getScenarios () {
+        ArrayList<Scenario> scenarios = new ArrayList<Scenario>();
+
+        Scenario s = new Scenario(getTitle(), mType, mTags);
+        s.mLog = getResultOutput();
+        for (int i = 0; i < mResult.length; i++) {
+            float fps = (float)mCaseRound /  (mResult[i] / 1000f);
+            s.mResults.add(((Float)fps).doubleValue());
+        }
+
+        scenarios.add(s);
+        return scenarios;
+    }
+
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseJavascript.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseJavascript.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseJavascript.java	(revision 167997)
@@ -0,0 +1,123 @@
+/*
+ * Copyright (C) 2011 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ * Authored by Julian Chu <walkingice@0xlab.org>
+ */
+
+package com.techain.runtime;
+
+import java.util.ArrayList;
+
+import android.util.Log;
+
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+
+import java.lang.Float;
+
+public class CaseJavascript extends Case {
+
+    public static String SUNSPIDER_RESULT = "SUNSPIDER_RESULT";
+    public static String SUNSPIDER_FORMATTED_RESULT = "SUNSPIDER_FORMATTED_RESULT";
+    public static String SUNSPIDER_TOTAL  = "SUNSPIDER_TOTAL";
+
+    public static int sRepeat = 1;
+    public static int sRound  = 1;
+
+    private double mTotal = 0.0;
+
+    protected String[] mJSResults;
+	protected String mFormattedResult;
+    CaseJavascript() {
+        super("CaseJavascript", "com.techain.runtime.TesterJavascript", sRepeat, sRound);
+        mType = "msec-js";
+        mTags = new String[]{new String("javascript")};
+    }
+
+    public String getTitle() {
+        return "SunSpider";
+    }
+
+    public String getDescription() {
+        return "This benchmark tests the core JavaScript language only, not the DOM or other browser APIs. It is designed to compare different versions of the same browser, and different browsers to each other.";
+    }
+
+    @Override
+    public void clear() {
+        super.clear();
+        mJSResults = new String[sRepeat];
+    }
+
+    @Override
+    public void reset() {
+        super.reset();
+        mJSResults = new String[sRepeat];
+    }
+
+    @Override
+    public String getResultOutput() {
+        String result = "\n";
+        for (int i = 0; i < mJSResults.length; i++) {
+            result += mJSResults[i];
+            result += "\n";
+        }
+        return result;
+    }
+
+    @Override
+    public ArrayList<Scenario> getScenarios () {
+
+        ArrayList<Scenario> scenarios = new ArrayList<Scenario>();
+		String results[] = mFormattedResult.split("\n");
+		for (String result: results) {
+			String name_time[] = result.split("\t");
+			String title = getTitle() + ":" + name_time[0];
+
+            Scenario s = new Scenario(title, mType, mTags);
+			s.mResults.add( Double.parseDouble(name_time[1]) );
+            scenarios.add(s);
+		}
+
+        return scenarios;
+    }
+
+    @Override
+    protected boolean saveResult(Intent intent, int index) {
+        String result = intent.getStringExtra(SUNSPIDER_RESULT);
+        mTotal = intent.getDoubleExtra(SUNSPIDER_TOTAL, 0.0);
+
+        if (result == null) {
+            Log.e(TAG, "Weird! cannot find SunSpiderInfo");
+            return false;
+        } else {
+            mJSResults[index] = result;
+        }
+
+        String formatted_result = intent.getStringExtra(SUNSPIDER_FORMATTED_RESULT);
+        if (result == null) {
+            Log.e(TAG, "Weird! cannot find SunSpiderInfo for formatted");
+            return false;
+        } else {
+			mFormattedResult = formatted_result;
+		}
+
+        return true;
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterScimark2.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterScimark2.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterScimark2.java	(revision 167997)
@@ -0,0 +1,252 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import jnt.scimark2.commandline;
+
+import android.util.Log;
+import android.app.Activity;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+import android.content.Intent;
+import android.widget.TextView;
+import java.util.HashMap;
+import java.util.ArrayList;
+
+public class TesterScimark2 extends Tester {
+
+    TextView mTextView;
+    Bundle mInfo[];
+    public final static String COMPOSITE    = "COMPOSITE";
+    public final static String FFT          = "FTT";
+    public final static String SOR          = "SOR";
+    public final static String MONTECARLO   = "MONTECARLO";
+    public final static String SPARSEMATMULT= "SPARSEMATMULT";
+    public final static String LU           = "LU";
+
+    protected String getTag() {
+        return "Scimark2";
+    }
+
+    protected int sleepBeforeStart() {
+        return 1000;
+    }
+
+    protected int sleepBetweenRound() {
+        return 200;
+    }
+
+    protected void oneRound() {
+        commandline.main(mInfo[mNow - 1]);
+        decreaseCounter();
+    }
+
+    @Override
+    protected boolean saveResult(Intent intent) {
+        Bundle result = new Bundle();
+        TesterScimark2.average(result, mInfo);
+    
+        intent.putExtra(CaseScimark2.LIN_RESULT, result);
+        return true;
+    }
+    
+    /** Called when the activity is first created. */
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        int length = mRound;
+        mInfo = new Bundle[length];
+        for (int i = 0; i < length; i++) {
+            mInfo[i] = new Bundle();
+        }
+
+        mTextView = new TextView(this);
+        mTextView.setText("Running Scimark2....");
+        mTextView.setTextSize(mTextView.getTextSize() + 5);
+        setContentView(mTextView);
+        startTester();
+    }
+
+    public static void average(Bundle result, Bundle[] list) {
+        if (result == null) {
+            result = new Bundle();
+        }
+
+        if (list == null) {
+            Log.i("Scimark2", "Array is null");
+            return;
+        }
+
+        int length = list.length;
+        double composite_total     = 0.0;
+        double fft_total           = 0.0;
+        double sor_total           = 0.0;
+        double montecarlo_total    = 0.0;
+        double sparsematmult_total = 0.0;
+        double lu_total            = 0.0;
+
+        HashMap<String, double[]> store = new HashMap<String, double[]>();
+        store.put(COMPOSITE    , new double[length] );
+        store.put(FFT          , new double[length] );
+        store.put(SOR          , new double[length] );
+        store.put(MONTECARLO   , new double[length] );
+        store.put(SPARSEMATMULT, new double[length] );
+        store.put(LU           , new double[length] );
+
+
+        for (int i = 0; i < length; i ++) {
+            Bundle info = list[i];
+
+            if (info == null) {
+                Log.i("Scimark2", "one item of array is null!");
+                return;
+            }
+
+            composite_total     += info.getDouble(COMPOSITE    );
+            fft_total           += info.getDouble(FFT          );
+            sor_total           += info.getDouble(SOR          );
+            montecarlo_total    += info.getDouble(MONTECARLO   );
+            sparsematmult_total += info.getDouble(SPARSEMATMULT);
+            lu_total            += info.getDouble(LU           );
+
+            store.get(COMPOSITE    )[i] = info.getDouble(COMPOSITE    );
+            store.get(FFT          )[i] = info.getDouble(FFT          );
+            store.get(SOR          )[i] = info.getDouble(SOR          );
+            store.get(MONTECARLO   )[i] = info.getDouble(MONTECARLO   );
+            store.get(SPARSEMATMULT)[i] = info.getDouble(SPARSEMATMULT);
+            store.get(LU           )[i] = info.getDouble(LU           );
+        }
+
+        result.putDouble(COMPOSITE    , composite_total    / length);
+        result.putDouble(FFT          , fft_total          / length);
+        result.putDouble(SOR          , sor_total          / length);
+        result.putDouble(MONTECARLO   , montecarlo_total   / length);
+        result.putDouble(SPARSEMATMULT, sparsematmult_total/ length);
+        result.putDouble(LU           , lu_total           / length);
+
+        result.putDoubleArray(COMPOSITE +"array"    , store.get(COMPOSITE    ) );
+        result.putDoubleArray(FFT +"array"          , store.get(FFT          ) );  
+        result.putDoubleArray(SOR +"array"          , store.get(SOR          ) ); 
+        result.putDoubleArray(MONTECARLO +"array"   , store.get(MONTECARLO   ) );
+        result.putDoubleArray(SPARSEMATMULT +"array", store.get(SPARSEMATMULT) );
+        result.putDoubleArray(LU +"array"           , store.get(LU           ) );
+    }
+
+    public static String bundleToString(Bundle bundle) {
+        String result = "";
+        result += "\nComposite:\n  " + bundle.getDouble(COMPOSITE, 0.0);
+        result += "\nFast Fourier Transform:\n  " + bundle.getDouble(FFT, 0.0);
+        result += "\nJacobi Successive Over-relaxation:\n  " + bundle.getDouble(SOR, 0.0);
+        result += "\nMonte Carlo integration:\n  " + bundle.getDouble(MONTECARLO, 0.0);
+        result += "\nSparse matrix multiply:\n  " + bundle.getDouble(SPARSEMATMULT, 0.0);
+        result += "\ndense LU matrix factorization:\n  " + bundle.getDouble(LU, 0.0);
+
+        return result;
+    }
+
+    public static String bundleListToXML(Bundle[] mInfo) {
+
+        int length = mInfo.length;
+        double composite_total     = 0.0;
+        double fft_total           = 0.0;
+        double sor_total           = 0.0;
+        double montecarlo_total    = 0.0;
+        double sparsematmult_total = 0.0;
+        double lu_total            = 0.0;
+
+        for (int i = 0; i < length; i++) {
+            Bundle info = mInfo[i];
+
+            composite_total     += info.getDouble(COMPOSITE    );
+            fft_total           += info.getDouble(FFT          );
+            sor_total           += info.getDouble(SOR          );
+            montecarlo_total    += info.getDouble(MONTECARLO   );
+            sparsematmult_total += info.getDouble(SPARSEMATMULT);
+            lu_total            += info.getDouble(LU           );
+        }
+
+
+        String benchName = "Scimark2";
+
+        String result = "";
+        
+        if (composite_total != 0.0) {
+            result += "<scenario";
+            result += " benchmark=\"" + benchName + "-COMPOSITE\" unit=\"mflops\"";
+            result += ">";
+            for (int i = 0; i < length; i++) {
+                result += "" + mInfo[i].getDouble(COMPOSITE) + " ";
+            }
+            result += "</scenario>";
+        }
+
+        if (fft_total != 0.0) {
+            result += "<scenario";
+            result += " benchmark=\"" + benchName + "-FFT\" unit=\"mflops\"";
+            result += ">";
+            for (int i = 0; i < length; i++) {
+                result += "" + mInfo[i].getDouble(FFT) + " ";
+            }
+            result += "</scenario>";
+        }
+
+        if (sor_total != 0.0) {
+            result += "<scenario";
+            result += " benchmark=\"" + benchName + "-SOR\" unit=\"mflops\"";
+            result += ">";
+            for (int i = 0; i < length; i++) {
+                result += "" + mInfo[i].getDouble(SOR) + " ";
+            }
+            result += "</scenario>";
+        }
+
+        if (montecarlo_total != 0.0) {
+            result += "<scenario";
+            result += " benchmark=\"" + benchName + "-MonteCarlo\" unit=\"mflops\"";
+            result += ">";
+            for (int i = 0; i < length; i++) {
+                result += "" + mInfo[i].getDouble(MONTECARLO) + " ";
+            }
+            result += "</scenario>";
+        }
+
+        if (sparsematmult_total != 0.0) {
+            result += "<scenario";
+            result += " benchmark=\"" + benchName + "-SparseMatrixMult\" unit=\"mflops\"";
+            result += ">";
+            for (int i = 0; i < length; i++) {
+                result += "" + mInfo[i].getDouble(SPARSEMATMULT) + " ";
+            }
+            result += "</scenario>";
+        }
+
+        if (lu_total != 0.0) {
+            result += "<scenario";
+            result += " benchmark=\"" + benchName + "-LU\" unit=\"mflops\"";
+            result += ">";
+            for (int i = 0; i < length; i++) {
+                result += "" + mInfo[i].getDouble(LU) + " ";
+            }
+            result += "</scenario>";
+        }
+
+        return result;
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseSleep.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseSleep.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseSleep.java	(revision 167997)
@@ -0,0 +1,62 @@
+package com.techain.runtime;
+
+import java.util.ArrayList;
+
+public class CaseSleep extends Case
+{
+  public static int SleepRound = 300;
+
+  CaseSleep()
+  {
+    super("CaseSleep", SleepTest.TesterSleep.getFullClassName(), 3, SleepRound);
+    this.mType = "Sleep";
+    this.mTags = new String[] { "Sleep" };
+  }
+
+  public String getDescription()
+  {
+    return "call sleepTester to test sleep. It play for " + SleepRound + " times";
+  }
+
+  public String getResultOutput()
+  {
+    if (!couldFetchReport())
+      return "Has no report";
+    String str = "";
+    float f1 = 0.0F;
+    int i = this.mResult.length;
+    for (int j = 0; j < i; j++)
+    {
+      float f2 = (float)this.mResult[j] / 1000.0F;
+      float f3 = this.mCaseRound / f2;
+      str = str + "Round " + j + " fps = " + f3 + "\n";
+      f1 += f3;
+    }
+    return str + "Average: fps = " + f1 / i + "\n";
+  }
+
+  public ArrayList<Scenario> getScenarios()
+  {
+    ArrayList localArrayList = new ArrayList();
+    Scenario localScenario = new Scenario(getTitle(), this.mType, this.mTags);
+    localScenario.mLog = getResultOutput();
+    for (int i = 0; i < this.mResult.length; i++)
+    {
+      float f1 = (float)this.mResult[i] / 1000.0F;
+      float f2 = this.mCaseRound / f1;
+      localScenario.mResults.add(Double.valueOf(Float.valueOf(f2).doubleValue()));
+    }
+    localArrayList.add(localScenario);
+    return localArrayList;
+  }
+
+  public String getTitle()
+  {
+    return "Sleep test";
+  }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.techain.runtime.CaseSleep
+ * JD-Core Version:    0.6.2
+ */
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseNeheLesson16.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseNeheLesson16.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseNeheLesson16.java	(revision 167997)
@@ -0,0 +1,107 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+
+import com.nea.nehe.lesson16.Run;
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+import java.util.ArrayList;
+
+public class CaseNeheLesson16 extends Case {
+
+    public static int mNeheRepeat = 2;
+    public static int mNeheRound  = 1000;
+
+    CaseNeheLesson16() {
+        super("NeheLesson16", Run.FullName, mNeheRepeat, mNeheRound);
+
+        mType = "3d-fps";
+        String [] _tmp = {
+            "3d",
+            "opengl",
+            "nehe",
+            "glfog",
+            "gltexture",
+            "render",
+        };
+        mTags = _tmp;
+    }
+
+    public String getTitle() {
+        return "OpenGL Fog";
+    }
+
+    public String getDescription() {
+        return "A very famous OpenGL tutorial to demo OpenGL fog";
+    }
+
+    @Override
+    public String getResultOutput() {
+        if (!couldFetchReport()) {
+            return "Nehe Lesson 16 has no report";
+        }
+
+        String result = "";
+        float total = 0;
+        int length = mResult.length;
+
+        for (int i = 0; i < length; i++) {
+            float fps = mCaseRound / (mResult[i] / 1000f); // milliseconds to seconds
+            result += "Round " + i + ": fps = " + fps + "\n";
+            total  += fps;
+        }
+
+        result += "Average: fps = " + (total/length) + "\n";
+        return result;
+    }
+
+    /*
+     *  Get Average Benchmark
+     */
+    public double getBenchmark(Scenario s) {
+        double total = 0;
+        int length = mResult.length;
+        for (int i = 0; i < length; i++) {
+            double second = (mResult[i] / 1000f);
+            double fps = (double) mCaseRound / second;
+            total += fps;
+        }
+        return total / length;
+    }
+
+    @Override
+    public ArrayList<Scenario> getScenarios () {
+        ArrayList<Scenario> scenarios = new ArrayList<Scenario>();
+
+        Scenario s = new Scenario(getTitle(), mType, mTags);
+        s.mLog = getResultOutput();
+        for (int i = 0; i < mResult.length; i++) {
+            float fps = (float)mCaseRound /  (mResult[i] / 1000f);
+            s.mResults.add(((Float)fps).doubleValue());
+        }
+
+        scenarios.add(s);
+        return scenarios;
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/Tester.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/Tester.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/Tester.java	(revision 167997)
@@ -0,0 +1,366 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import java.io.BufferedReader;
+import java.io.FileReader;
+import java.io.InputStreamReader;
+
+import android.util.Log;
+import android.os.SystemClock;
+import android.app.Activity;
+import android.app.ActivityManager;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+import android.widget.*;
+import android.view.*;
+import android.graphics.Canvas;
+import android.os.*;
+
+public abstract class Tester extends Activity {
+    private String TAG;
+    public final static String PACKAGE = "com.techain.runtime";
+    int mRound;
+    int mNow;
+    int mIndex;
+
+    protected long mTesterStart = 0;
+    protected long mTesterEnd = 0;
+
+    protected abstract String getTag();
+
+    protected abstract int sleepBeforeStart();
+
+    protected abstract int sleepBetweenRound();
+
+    protected abstract void oneRound();
+
+    protected String mSourceTag = "unknown";
+    private boolean mNextRound = true;
+
+    protected boolean mDropTouchEvent = true;
+    protected boolean mDropTrackballEvent = true;
+    private int mExpireTime = 2000;
+    protected boolean mStartFlag = false;
+
+    protected void onCreate(Bundle bundle) {
+        super.onCreate(bundle);
+        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
+        TAG = getTag();
+
+        Intent intent = getIntent();
+        if (intent != null) {
+            mRound = Case.getRound(intent);
+            mSourceTag = Case.getSource(intent);
+            mIndex = Case.getIndex(intent);
+            mExpireTime = Case.getExpireTime(intent);
+
+
+        } else {
+            mRound = 80;
+            mIndex = -1;
+        }
+        mNow = mRound;
+        this.mStartFlag = false;
+        start();
+        Log.d("mtbfdebug", "[Tester onCreate mRound = " + mRound);
+        Log.d("mtbfdebug", "[Tester onCreate mSourceTag = " + mSourceTag);
+        Log.d("mtbfdebug", "[Tester onCreate mIndex = " + mIndex);
+        Log.d("mtbfdebug", "[Tester onCreate mExpireTime = " + mExpireTime);
+    }
+
+    @Override
+    protected void onPause() {
+        super.onPause();
+        interruptTester();
+    }
+
+    /* drop the annoying event */
+    @Override
+    public boolean dispatchTouchEvent(MotionEvent ev) {
+        if (mDropTouchEvent) {
+            return false;
+        } else {
+            return super.dispatchTouchEvent(ev);
+        }
+    }
+
+    @Override
+    public boolean dispatchTrackballEvent(MotionEvent ev) {
+        if (mDropTrackballEvent) {
+            return false;
+        } else {
+            return super.dispatchTouchEvent(ev);
+        }
+    }
+
+    protected void startTester() {
+        TesterThread thread = new TesterThread(sleepBeforeStart(), sleepBetweenRound());
+        thread.start();
+    }
+
+    public void interruptTester() {
+        mNow = 0;
+        finish();
+    }
+
+    /**
+     * Call this method if you finish your testing.
+     *
+     * @param start The starting time of testing round
+     * @param end   The ending time of testing round
+     */
+    public void finishTester(long start, long end) {
+        mTesterStart = start;
+        mTesterEnd = end;
+        Intent intent = new Intent();
+        if (mSourceTag == null || mSourceTag.equals("")) {
+            Case.putSource(intent, "unknown");
+        } else {
+            Case.putSource(intent, mSourceTag);
+        }
+
+        Case.putIndex(intent, mIndex);
+        saveResult(intent);
+
+        setResult(0, intent);
+        finish();
+    }
+
+    /**
+     * Save the benchmarking result into intent
+     * If this Case and Tester has their own way to pass benchmarking result
+     * just override this method
+     *
+     * @param intent The intent will return to Case
+     */
+    protected boolean saveResult(Intent intent) {
+        long elapse = mTesterEnd - mTesterStart;
+        Case.putResult(intent, elapse);
+        return true;
+    }
+
+    public void resetCounter() {
+        mNow = mRound;
+    }
+
+    public void decreaseCounter() {
+        /*
+        if (mNow == mRound) {
+            mTesterStart = SystemClock.uptimeMillis();
+        } else if (mNow == 1) {
+            mTesterEnd = SystemClock.uptimeMillis();
+        }
+        */
+        // mNow = mNow - 1;
+        mNextRound = true;
+    }
+
+    public boolean isTesterFinished() {
+        return (mNow <= 0);
+    }
+
+    class TesterThread extends Thread {
+        int mSleepingStart;
+        int mSleepingTime;
+
+        TesterThread(int sleepStart, int sleepPeriod) {
+            mSleepingStart = sleepStart;
+            mSleepingTime = sleepPeriod;
+        }
+
+        private void lazyLoop() throws Exception {
+            while (!isTesterFinished()) {//testing
+                if (mNextRound) {
+                    mNextRound = false;
+                    oneRound();
+                } else {
+                    sleep(mSleepingTime);
+                    // TODO: 
+                    // Benchmarks that calculates frequencies (e.g. fps) should be time,
+                    // for example, GL cases should run for a fixed time, and calculate 
+                    // # of frames rendered, instead of periodically checking if fixed 
+                    // # of frames had been rendered (which can hurt performance).
+                }
+            }
+        }
+
+        private void nervousLoop() throws Exception {
+            while (!isTesterFinished()) {
+                oneRound();
+            }
+        }
+
+        private void sleepLoop() throws Exception {
+            while (!isTesterFinished()) {
+                oneRound();
+                sleep(mSleepingTime);
+            }
+        }
+
+        public void run() {
+            try {
+
+                Log.d("mtbfdebug", "mSleepingStart = " + mSleepingStart);
+                sleep(mSleepingStart);
+
+
+                long start = SystemClock.uptimeMillis();
+                Log.d("mtbfdebug", "TesterThread  start= " + start);
+                lazyLoop();
+
+
+                long end = SystemClock.uptimeMillis();
+                Log.d("mtbfdebug", "TesterThread  end= " + end);
+                finishTester(start, end);
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+        }
+    }
+
+
+    private Handler mHandler = new Handler();
+
+    int mCpuPercent = 0;
+    int mMemPercent = 0;
+
+    private Runnable mRunnable = new Runnable() {
+        public void run() {
+            Log.d("mtbfdebug", "[ww_debug] mStartFlag = " + Tester.this.mStartFlag);
+            if (!Tester.this.mStartFlag) {
+                Tester.this.mStartFlag = true;
+                Tester.this.mHandler.postDelayed(Tester.this.mRunnable, Tester.this.mExpireTime);
+                return;
+            }
+            Log.d("qzq","remove runnable");
+            Tester.this.mHandler.removeCallbacks(Tester.this.mRunnable);
+            Tester.this.mNow = 0;
+        }
+    };
+
+    protected void start() {
+        new GetStateThread().start();
+        this.mHandler.removeCallbacks(this.mRunnable);
+        this.mHandler.postDelayed(this.mRunnable, 0L);
+    }
+
+
+    public static class CpuInfo {
+        int iowtime;
+        int irqtime;
+        int itime;
+        int ntime;
+        int sirqtime;
+        int stime;
+        int utime;
+
+        public String toString() {
+            return "utime = " + this.utime + " stime = " + this.stime + " ntime = " + this.ntime + " itime = " + this.itime + " iowtime = " + this.iowtime + " irqtime = " + this.irqtime + " sirqtime = " + this.sirqtime;
+        }
+    }
+
+    class GetStateThread extends Thread {
+        GetStateThread() {
+        }
+
+        public void run() {
+            if (!Tester.this.isTesterFinished()) {
+                try {
+                    Tester.this.mCpuPercent = Tester.this.GetCpuPercent();
+                    Tester.this.mMemPercent = Tester.this.GetMemPercent();
+                    Log.d("mtbfdebug", "GetStateThread run percentage = " + Tester.this.mCpuPercent + " mempercent = " + Tester.this.mMemPercent);
+                    sleep(1000L);
+                } catch (Exception localException) {
+                    localException.printStackTrace();
+                }
+            }
+        }
+    }
+
+    private int GetCpuPercent() {
+        int i = -1;
+        try {
+            BufferedReader localBufferedReader = new BufferedReader(new InputStreamReader(Runtime.getRuntime().exec("top -n 1").getInputStream()));
+            String str;
+            do {
+                str = localBufferedReader.readLine();
+                if (str == null)
+                    break;
+            }
+            while (str.trim().length() < 1);
+            String[] arrayOfString1 = str.split("%");
+            String[] arrayOfString2 = arrayOfString1[0].split("User ");
+            String[] arrayOfString3 = arrayOfString1[1].split("System ");
+            int j = Integer.valueOf(arrayOfString2[1]).intValue();
+            int k = Integer.valueOf(arrayOfString3[1]).intValue();
+            i = j + k;
+            return i;
+        } catch (Exception localException) {
+            localException.printStackTrace();
+        }
+        return -1;
+    }
+
+    private int GetMemPercent() {
+        ActivityManager localActivityManager = (ActivityManager) getSystemService("activity");
+        ActivityManager.MemoryInfo localMemoryInfo = new ActivityManager.MemoryInfo();
+        localActivityManager.getMemoryInfo(localMemoryInfo);
+        return (int) (100L * (localMemoryInfo.availMem / 1024L / 1024L) / GetTotalMemory());
+    }
+
+    private double GetTotalMemory() {
+        try {
+            FileReader localFileReader = new FileReader("/proc/meminfo");
+            BufferedReader localBufferedReader = new BufferedReader(localFileReader, 8192);
+            String str = localBufferedReader.readLine();
+            localBufferedReader.close();
+            localFileReader.close();
+            double d = Double.parseDouble(str.substring(-9 + str.length(), -3 + str.length()));
+            return d / 1000.0D;
+        } catch (Exception localException) {
+            localException.printStackTrace();
+        }
+        return -1.0D;
+    }
+
+
+    private CpuInfo readCpuStat() {
+        CpuInfo localCpuInfo = new CpuInfo();
+        try {
+            FileReader localFileReader = new FileReader("proc/stat");
+            BufferedReader localBufferedReader = new BufferedReader(localFileReader);
+            String str = localBufferedReader.readLine();
+            localBufferedReader.close();
+            localFileReader.close();
+            String[] arrayOfString = str.substring("cpu  ".length()).split(" ", 8);
+            localCpuInfo.utime = Integer.valueOf(arrayOfString[0]).intValue();
+            localCpuInfo.ntime = Integer.valueOf(arrayOfString[1]).intValue();
+            localCpuInfo.stime = Integer.valueOf(arrayOfString[2]).intValue();
+            localCpuInfo.itime = Integer.valueOf(arrayOfString[3]).intValue();
+            localCpuInfo.iowtime = Integer.valueOf(arrayOfString[4]).intValue();
+            localCpuInfo.irqtime = Integer.valueOf(arrayOfString[5]).intValue();
+            localCpuInfo.sirqtime = Integer.valueOf(arrayOfString[6]).intValue();
+            return localCpuInfo;
+        } catch (Exception localException) {
+            localException.printStackTrace();
+        }
+        return localCpuInfo;
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseNeheLesson08.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseNeheLesson08.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseNeheLesson08.java	(revision 167997)
@@ -0,0 +1,110 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+
+import com.nea.nehe.lesson08.Run;
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+
+import java.util.ArrayList;
+
+public class CaseNeheLesson08 extends Case {
+
+    public static int mNeheRepeat = 2;
+    public static int mNeheRound  = 1000;
+
+    CaseNeheLesson08() {
+        super("NeheLesson08", Run.FullName, mNeheRepeat, mNeheRound);
+
+        mType = "3d-fps";
+
+        String [] _tmp = {
+            "render",
+            "opengl",
+            "nehe",
+            "gltexture",
+            "glblending",
+            "3d",
+        };
+        mTags = _tmp;
+    }
+
+    public String getTitle() {
+        return "OpenGL Blending";
+    }
+
+    public String getDescription() {
+        return "A very famous OpenGL tutorial to demo OpenGL blending";
+    }
+
+    @Override
+    public String getResultOutput() {
+        if (!couldFetchReport()) {
+            return "Nehe Lesson 8 has no report";
+        }
+
+        String result = "";
+        float total = 0;
+        int length = mResult.length;
+
+        for (int i = 0; i < length; i++) {
+            float fps = mCaseRound / (mResult[i] / 1000f); // milliseconds to seconds
+            result += "Round " + i + ": fps = " + fps + "\n";
+            total  += fps;
+        }
+
+        result += "Average: fps = " + (total/length) + "\n";
+        return result;
+    }
+
+    /*
+     *  Get Average Benchmark
+     */
+    public double getBenchmark(Scenario s) {
+        double total = 0;
+        int length = mResult.length;
+        for (int i = 0; i < length; i++) {
+            double second = (mResult[i] / 1000f);
+            double fps = (double) mCaseRound / second;
+            total  += fps;
+        }
+        return total / length;
+    }
+
+    @Override
+    public ArrayList<Scenario> getScenarios () {
+        ArrayList<Scenario> scenarios = new ArrayList<Scenario>();
+
+        Scenario s = new Scenario(getTitle(), mType, mTags);
+        s.mLog = getResultOutput();
+        for (int i = 0; i < mResult.length; i++) {
+            float fps = (float)mCaseRound /  (mResult[i] / 1000f);
+            s.mResults.add(((Float)fps).doubleValue());
+        }
+
+        scenarios.add(s);
+        return scenarios;
+    }
+
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseCanvas.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseCanvas.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseCanvas.java	(revision 167997)
@@ -0,0 +1,111 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+import android.widget.*;
+import android.view.*;
+
+import java.nio.*;
+import java.util.ArrayList;
+
+public class CaseCanvas extends Case {
+
+    public static int CanvasRound = 300;
+
+    CaseCanvas() {
+        super("CaseCanvas", TesterCanvas.getFullClassName(), 3, CanvasRound);
+
+        mType = "2d-fps";
+        String[] _tmp = {
+                "2d",
+                "render",
+                "view",
+        };
+        mTags = _tmp;
+
+    }
+
+    public String getTitle() {
+        return "Draw Canvas";
+    }
+
+    public String getDescription() {
+        return "call canvas.drawRGB to fill the canvas repeatedly. " +
+                "It redraw for " + CanvasRound + " times";
+    }
+
+    @Override
+    public String getResultOutput() {
+        if (!couldFetchReport()) {
+            return "Cavas has no report";
+        }
+
+        String result = "";
+        float total = 0;
+        int length = mResult.length;
+
+        for (int i = 0; i < length; i++) {
+            float second = (mResult[i] / 1000f);
+            float fps = (float) mCaseRound / second; // milliseconds to seconds
+            result += "Round " + i + " fps = " + fps + "\n";
+            total += fps;
+        }
+
+        result += "Average: fps = " + ((float) total / length) + "\n";
+        return result;
+    }
+
+    /*
+     *  Get Average Benchmark
+     */
+    public double getBenchmark(Scenario s) {
+        double total = 0;
+        int length = mResult.length;
+        for (int i = 0; i < length; i++) {
+            double second = (mResult[i] / 1000f);
+            double fps = (double) mCaseRound / second;
+            total += fps;
+        }
+        return total / length;
+    }
+
+    @Override
+    public ArrayList<Scenario> getScenarios() {
+        ArrayList<Scenario> scenarios = new ArrayList<Scenario>();
+
+        Scenario s = new Scenario(getTitle(), mType, mTags);
+        s.mLog = getResultOutput();
+        for (int i = 0; i < mResult.length; i++) {
+            float second = (mResult[i] / 1000f);
+            float fps = (float) mCaseRound / second;
+            s.mResults.add(((Float) fps).doubleValue());
+        }
+
+        scenarios.add(s);
+        return scenarios;
+    }
+
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseDrawRect.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseDrawRect.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseDrawRect.java	(revision 167997)
@@ -0,0 +1,108 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+import android.widget.*;
+import android.view.*;
+import java.nio.*;
+import java.util.ArrayList;
+
+public class CaseDrawRect extends Case {
+
+    public static int RectRound = 300;
+
+    CaseDrawRect() {
+        super("CaseDrawRect", "org.zeroxlab.graphics.DrawRect", 3, RectRound);
+        mType = "2d-fps";
+        String [] _tmp = {
+            "2d",
+            "render",
+            "skia",
+            "view",
+        };
+        mTags = _tmp;
+    }
+
+    public String getTitle() {
+        return "Draw Rect";
+    }
+
+    public String getDescription() {
+        return "call canvas.drawRect to draw rectengle for " + RectRound + " times";
+    }
+
+    @Override
+    public String getResultOutput() {
+        if (!couldFetchReport()) {
+            return "DrawRect has no report";
+        }
+
+        String result = "";
+        float total = 0;
+        int length = mResult.length;
+
+        for (int i = 0; i < length; i++) {
+            float second = (mResult[i] / 1000f);
+            float fps = (float)mCaseRound / second; // milliseconds to seconds
+            result += "Round " + i +": fps = " + fps + "\n";
+            total  += fps;
+        }
+
+        result += "Average: fps = " + ((float)total/length) + "\n";
+        return result;
+    }
+
+    /*
+     *  Get Average Benchmark
+     */
+    public double getBenchmark(Scenario s) {
+        double total = 0;
+        int length = mResult.length;
+        for (int i = 0; i < length; i++) {
+            double second = (mResult[i] / 1000f);
+            double fps = (double)mCaseRound / second;
+            total  += fps;
+        }
+        return total / length;
+    }
+
+    @Override
+    public ArrayList<Scenario> getScenarios () {
+        ArrayList<Scenario> scenarios = new ArrayList<Scenario>();
+
+        Scenario s = new Scenario(getTitle(), mType, mTags);
+        s.mLog = getResultOutput();
+        for (int i = 0; i < mResult.length; i++) {
+            float second = (mResult[i] / 1000f);
+            float fps = (float)mCaseRound / second;
+            s.mResults.add(((Float)fps).doubleValue());
+        }
+
+        scenarios.add(s);
+        return scenarios;
+    }
+
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/SleepTest.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/SleepTest.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/SleepTest.java	(revision 167997)
@@ -0,0 +1,149 @@
+package com.techain.runtime;
+
+import android.app.AlarmManager;
+import android.app.PendingIntent;
+import android.app.admin.DeviceAdminReceiver;
+import android.app.admin.DevicePolicyManager;
+import android.content.BroadcastReceiver;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.os.Bundle;
+import android.widget.Button;
+
+public class SleepTest extends DeviceAdminReceiver {
+    public static class TesterSleep extends Tester {
+        public static final String PACKAGE = "com.techain.runtime";
+        public static final String TIMER_EXPIRED = "timerExpired";
+        public final String TAG = "TesterSleep";
+        private int TEST_CNT_MAX = 10;
+        private AlarmManager alarmManager = null;
+        private ComponentName componentName = null;
+        private int mLockCnt = 0;
+        private MyReceiver mReceiver;
+        private Button mStartBtn;
+        public int mStartTime = 1000;
+        private boolean mStateLock = false;
+        private DevicePolicyManager policyManager = null;
+        private Intent statusIntent;
+        private Intent unLockIntent = null;
+
+        private void activeManager() {
+            Intent localIntent = new Intent("android.app.action.ADD_DEVICE_ADMIN");
+            localIntent.putExtra("android.app.extra.DEVICE_ADMIN", this.componentName);
+            startActivityForResult(localIntent, 1);
+        }
+
+        public static String getFullClassName() {
+            return getPackage() + ".SleepTest$TesterSleep";
+        }
+
+        public static String getPackage() {
+            return "com.techain.runtime";
+        }
+
+        private void lockScreen() {
+            if (this.policyManager == null)
+                this.policyManager = ((DevicePolicyManager) getSystemService(Context.DEVICE_POLICY_SERVICE));
+            if (this.componentName == null)
+                this.componentName = new ComponentName(this, SleepTest.class);
+            if (!this.policyManager.isAdminActive(this.componentName)) {
+                activeManager();
+                return;
+            }
+            this.mStateLock = true;
+            this.policyManager.lockNow();
+        }
+
+        private void setTimer(long paramLong) {
+            PendingIntent localPendingIntent = PendingIntent.getBroadcast(this, 0, new Intent(this, AlarmReceiver.class), 0);
+            this.alarmManager.set(0, paramLong + System.currentTimeMillis(), localPendingIntent);
+        }
+
+        private void startSleepTest() {
+            this.mStateLock = false;
+            this.mLockCnt = 0;
+            this.mStartBtn.setEnabled(false);
+            setTimer(this.mStartTime);
+        }
+
+        public void finish() {
+            super.finish();
+        }
+
+        public String getTag() {
+            return "TesterSleep";
+        }
+
+        public void onCreate(Bundle paramBundle) {
+            super.onCreate(paramBundle);
+            this.mStateLock = false;
+            this.mLockCnt = 0;
+            if (this.unLockIntent == null)
+                this.unLockIntent = new Intent("android.provider.Telephony.UNLOCK_KEYGUARD");
+            if (this.policyManager == null)
+                this.policyManager = ((DevicePolicyManager) getSystemService(Context.DEVICE_POLICY_SERVICE));
+            if (this.componentName == null)
+                this.componentName = new ComponentName(this, SleepTest.class);
+            if (this.alarmManager == null)
+                this.alarmManager = ((AlarmManager) getSystemService(Context.ALARM_SERVICE));
+            this.policyManager = ((DevicePolicyManager) getSystemService(Context.DEVICE_POLICY_SERVICE));
+            this.componentName = new ComponentName(this, SleepTest.class);
+            activeManager();
+            try {
+                IntentFilter localIntentFilter = new IntentFilter("timerExpired");
+                this.mReceiver = new MyReceiver();
+                registerReceiver(this.mReceiver, localIntentFilter);
+                this.mStartFlag = true;
+                startSleepTest();
+                startTester();
+                return;
+            } catch (Exception localException) {
+                this.mStartFlag = false;
+            }
+        }
+
+        protected void onDestroy() {
+            PendingIntent localPendingIntent = PendingIntent.getBroadcast(this, 0, new Intent(this, AlarmReceiver.class), 0);
+            this.alarmManager.cancel(localPendingIntent);
+            this.mStateLock = false;
+            this.mLockCnt = 0;
+            unregisterReceiver(this.mReceiver);
+            super.onDestroy();
+        }
+
+        public void oneRound() {
+        }
+
+        public int sleepBeforeStart() {
+            return 1000;
+        }
+
+        public int sleepBetweenRound() {
+            return 0;
+        }
+
+        public class MyReceiver extends BroadcastReceiver {
+            public MyReceiver() {
+            }
+
+            public void onReceive(Context paramContext, Intent paramIntent) {
+                if (mLockCnt >= TEST_CNT_MAX) {
+                    mStartBtn.setEnabled(true);
+                    sendBroadcast(unLockIntent);
+                    return;
+                }
+                if (mStateLock) {
+                    sendBroadcast(unLockIntent);
+                    mStateLock = false;
+                    setTimer(5000L);
+                    return;
+                }
+                lockScreen();
+                mStateLock = true;
+                setTimer(15000L);
+            }
+        }
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseDrawCircle.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseDrawCircle.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseDrawCircle.java	(revision 167997)
@@ -0,0 +1,108 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+import android.widget.*;
+import android.view.*;
+import java.nio.*;
+import java.util.ArrayList;
+
+public class CaseDrawCircle extends Case {
+
+    public static int CircleRound = 300;
+
+    CaseDrawCircle() {
+        super("CaseDrawCircle", "org.zeroxlab.graphics.DrawCircle", 3, CircleRound);
+        mType = "2d-fps";
+        String [] _tmp = {
+            "2d",
+            "render",
+            "skia",
+            "view",
+        };
+        mTags = _tmp;
+    }
+
+    public String getTitle() {
+        return "Draw Circle";
+    }
+
+    public String getDescription() {
+        return "call canvas.drawCircle to draw circle for " + CircleRound + " times";
+    }
+
+    @Override
+    public String getResultOutput() {
+        if (!couldFetchReport()) {
+            return "DrawCircle has no report";
+        }
+
+        String result = "";
+        float total = 0;
+        int length = mResult.length;
+
+        for (int i = 0; i < length; i++) {
+            float second = (mResult[i] / 1000f);
+            float fps = (float)mCaseRound / second; // milliseconds to seconds
+            result += "Round " + i +": fps = " + fps + "\n";
+            total  += fps;
+        }
+
+        result += "Average: fps = " + ((float)total/length) + "\n";
+        return result;
+    }
+
+    /*
+     *  Get Average Benchmark
+     */
+    public double getBenchmark(Scenario s) {
+        double total = 0;
+        int length = mResult.length;
+        for (int i = 0; i < length; i++) {
+            double second = (mResult[i] / 1000f);
+            double fps = (double)mCaseRound / second;
+            total  += fps;
+        }
+        return total / length;
+    }
+
+    @Override
+    public ArrayList<Scenario> getScenarios () {
+        ArrayList<Scenario> scenarios = new ArrayList<Scenario>();
+
+        Scenario s = new Scenario(getTitle(), mType, mTags);
+        s.mLog = getResultOutput();
+        for (int i = 0; i < mResult.length; i++) {
+            float second = (mResult[i] / 1000f);
+            float fps = (float)mCaseRound / second;
+            s.mResults.add(((Float)fps).doubleValue());
+        }
+
+        scenarios.add(s);
+        return scenarios;
+    }
+
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/NativeTester.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/NativeTester.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/NativeTester.java	(revision 167997)
@@ -0,0 +1,361 @@
+/*
+ * Copyright (C) 2011 Linaro Limited
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import java.lang.Runtime;
+import java.lang.IllegalThreadStateException;
+
+import java.io.InputStreamReader;
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.lang.Math;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.List;
+
+import java.net.Socket;
+import java.net.ServerSocket;
+
+import android.app.Activity;
+import android.util.Log;
+import android.os.Bundle;
+import android.os.SystemClock;
+import android.os.Handler;
+import android.os.Message;
+import android.content.Intent;
+import android.widget.TextView;
+import android.widget.ScrollView;
+
+import android.content.pm.ActivityInfo;
+
+
+public abstract class NativeTester extends Tester {
+
+    private TextView mTextView;
+    private ScrollView mScrollView;
+    
+    private Runtime mRuntime;
+    private Process mProcess;
+
+    public final String TAG = "NativeTester";
+    public final String PING_MSG = "PING";
+    public final String ENV_VAR = "ZXBENCH_PORT";
+
+    public final int CHECK_FREQ = 1000;
+    public final int IDLE_KILL = 40000; //1000 * 60 * 5 (5mins);
+
+    public String mCommand;
+    public Handler mHandler;
+    public static final int GUINOTIFIER = 0x1234;
+
+    public Map<String, String> mStdOuts = new HashMap<String, String>();
+    public Map<String, String> mStdErrs = new HashMap<String, String>();
+    public Map<String, String> mSockets = new HashMap<String, String>();
+
+    private BufferedReader stdOutReader;
+    private BufferedReader stdErrReader;
+    private BufferedReader sckOutReader;
+
+    private ProcessMonitor mProcessMonitor;
+    private boolean mProcessRunning = false;
+    private double mIdleTime;
+
+    private StringBuilder stdOut = new StringBuilder();
+    private StringBuilder stdErr = new StringBuilder();
+    private StringBuilder sckOut = new StringBuilder();
+
+    private ServerSocket mServerSocket;
+    private Socket mClientSocket = null;
+    private int mBindPort = -1;
+
+    private String mCurrentCommand;
+
+    public NativeTester() {
+        mRuntime = Runtime.getRuntime();
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.gc);
+        mTextView = (TextView) findViewById(R.id.myTextView1);
+        mScrollView = (ScrollView) findViewById(R.id.myScrollView);
+
+        mHandler = new Handler() {
+            public void handleMessage(Message msg) {
+                switch (msg.what) {
+                    case GUINOTIFIER:
+                        StringBuilder display = new StringBuilder();
+                        display.append("Idle time: " + (int)mIdleTime + "ms");
+                        display.append("\nCommand -->\n");
+                        display.append(mCurrentCommand);
+                        display.append("\nStderr -->\n");
+                        display.append(stdErr.toString());
+                        display.append("\nStdout -->\n");
+                        display.append(stdOut.toString());
+                        mTextView.setText(display.toString());
+                        mScrollView.post(new Runnable() { 
+                            public void run() { 
+                                mScrollView.fullScroll(ScrollView.FOCUS_DOWN); 
+                            } 
+                        }); 
+                        break;
+                }
+            }
+        };
+
+        startTester();
+    }
+
+    protected abstract List<String> getCommands();
+    protected abstract String getPath();
+
+    protected abstract boolean saveResult(Intent intent);
+
+    @Override
+    protected int sleepBeforeStart() {
+        return 0;
+    };
+    @Override
+    protected int sleepBetweenRound(){
+        return 0;
+    };
+
+    private void reportOutputs() {
+        Log.i(TAG, stdOut.toString() );
+        Log.i(TAG, stdErr.toString() );
+        String [] sckOutLines = sckOut.toString().split("\n");
+        for (String sckOutLine: sckOutLines)
+            Log.i(TAG, sckOutLine);
+    }
+
+    public void oneRound() {
+        new ProcessRunner().start();
+    }
+
+    public int exitValue() throws IllegalThreadStateException {
+        return mProcess.exitValue();
+    }
+
+    public void killProcess() {
+        mProcess.destroy();
+        try {
+            mClientSocket.close();
+            mServerSocket.close();
+        } catch (IOException e) {
+            Log.i(TAG, "close server socket failed: " + e.toString());
+        }
+        mProcessRunning = false;
+    }
+
+    class ProcessRunner extends Thread {
+        public void run() {
+            for(String command: getCommands()) {
+                mCurrentCommand = command;
+                Log.i(TAG, "------------------------ process " + command + " start ------------------------ ");
+                try {
+                    mServerSocket = new ServerSocket(0);
+                    mServerSocket.setSoTimeout(IDLE_KILL);
+                } catch (IOException e) {
+                    Log.e(TAG, "cannot create ServerSocket. " + e.toString());
+                    interruptTester();
+                } 
+                Log.i(TAG, "server socket created");
+
+                mBindPort = mServerSocket.getLocalPort();
+
+                String[] envp = {
+                    ENV_VAR + "=" + mBindPort,
+                };
+                try {
+                    mProcess = mRuntime.exec(getPath() + command, envp, getFilesDir());
+                    if(mProcess == null)
+                        throw new Exception();
+                    mProcessRunning = true;
+                } catch (Exception e) {
+                    Log.e(TAG, "Cannot execute command: `" + command + "`. " + e.toString());
+                    mNow = 0;
+                    continue;
+                }
+                Log.i(TAG, "command executed");
+                stdOutReader = new BufferedReader(new InputStreamReader(mProcess.getInputStream()));
+                stdErrReader = new BufferedReader(new InputStreamReader(mProcess.getErrorStream()));
+                updateBuffer stdOutThread = new updateBuffer(stdOutReader, stdOut);
+                updateBuffer stdErrThread = new updateBuffer(stdErrReader, stdErr);
+                stdOutThread.start();
+                stdErrThread.start();
+
+                try {
+                    Log.i(TAG, "waiting conncetion with timeout " + mServerSocket.getSoTimeout());
+                    mClientSocket = mServerSocket.accept();
+                } catch (IOException e) {
+                    Log.e(TAG, "cannot acception incoming connection. " + e.toString());
+                    killProcess();
+                    continue;
+                }
+                Log.i(TAG, "connection accepted");
+
+                try {
+                    sckOutReader = new BufferedReader(new InputStreamReader(mClientSocket.getInputStream()));
+                } catch (IOException e) {
+                    Log.e(TAG, "cannot create input stream, lost connection? " + e.toString());
+                    killProcess();
+                    continue;
+                }
+                Log.i(TAG, "stream created");
+
+                updateBuffer socketThread = new updateBuffer(sckOutReader, sckOut);
+                socketThread.start();
+
+                mProcessMonitor = new ProcessMonitor(stdOutThread, stdErrThread, socketThread);
+                mProcessMonitor.start();
+                try {
+                    mProcessMonitor.join();
+                } catch (InterruptedException e) {
+                    Log.e(TAG, "inturrupted before process monitor joins: " + e.toString());
+                    killProcess();
+                    continue;
+                }
+                reportOutputs();
+                if (mStdOuts.containsKey(command)) {
+                    mStdOuts.put(command, mStdOuts.get(command) + stdOut.toString());
+                } else {
+                    mStdOuts.put(command, stdOut.toString());
+                }
+                if (mStdErrs.containsKey(command)) {
+                    mStdErrs.put(command, mStdErrs.get(command) + stdErr.toString());
+                } else {
+                    mStdErrs.put(command, stdErr.toString());
+                }
+                if (!mSockets.containsKey(command)) {
+                    mSockets.put(command, sckOut.toString());
+                } else {
+                    mSockets.put(command, mSockets.get(command) + sckOut.toString());
+                }
+                stdOut = new StringBuilder();
+                stdErr = new StringBuilder();
+                sckOut = new StringBuilder();
+                Log.i(TAG, "------------------------ process " + command + " finish ------------------------ ");
+            }
+            decreaseCounter();
+            Log.i(TAG, "counter decreased by 1 to " + mNow);
+        }
+    }
+
+    class ProcessMonitor extends Thread {
+        updateBuffer stdOutThread;
+        updateBuffer stdErrThread;
+        updateBuffer sckOutThread;
+        float idleTime;
+        ProcessMonitor (updateBuffer stdOutThread, updateBuffer stdErrThread, updateBuffer sckOutThread) {
+            this.stdOutThread = stdOutThread;
+            this.stdErrThread = stdErrThread;
+            this.sckOutThread = sckOutThread;
+        }
+        public void run() {
+            int value;
+            mIdleTime = 0.0;
+            while (true) {
+                try {
+                    value = mProcess.exitValue();
+                } catch (IllegalThreadStateException e) {
+                    mIdleTime = Math.min(Math.min(stdOutThread.idleTime(), stdErrThread.idleTime()), sckOutThread.idleTime()) ;
+                    Message m = new Message();
+                    m.what = GUINOTIFIER;
+                    mHandler.sendMessage(m);
+                    if (mIdleTime > IDLE_KILL) {
+                        Log.e(TAG, "Native process idle for over " + IDLE_KILL/1000 + " Seconds, killing.");
+                        killProcess();
+                        Log.w(TAG, "Monitor: ends with no update threads joined");
+                        // TODO: should find a way to end update threads gracefully
+                        return;
+
+                    }
+                    SystemClock.sleep(CHECK_FREQ);
+                    continue;
+                }
+                break;
+            }
+            Log.i(TAG, "Process exited with value = " + value);
+            try {
+                stdOutThread.join();
+            } catch (InterruptedException e) {
+                Log.w(TAG, "stdout update mWorkThread cannot join");
+            }
+            Log.i(TAG, "stdout update mWorkThread joined");
+            try {
+                stdErrThread.join();
+            } catch (InterruptedException e) {
+                Log.w(TAG, "stderr update mWorkThread cannot join");
+            }
+            Log.i(TAG, "stderr update mWorkThread joined");
+            try {
+                sckOutThread.join();
+            } catch (InterruptedException e) {
+                Log.w(TAG, "socket update mWorkThread cannot join");
+            }
+            Log.i(TAG, "socket update mWorkThread joined");
+            Log.i(TAG, "closing server socket");
+            try {
+                mClientSocket.close();
+                mServerSocket.close();
+            } catch (IOException e) {
+                Log.i(TAG, "close server socket failed: " + e.toString());
+            }
+            Log.w(TAG, "Monitor: All update threads joined");
+        }
+    }
+
+    class updateBuffer extends Thread {
+        long mLastRead;
+        BufferedReader is;
+        StringBuilder mBuffer;
+        final int UNREAD = -1;
+
+        updateBuffer(BufferedReader is, StringBuilder targetBuffer) {
+            this.is = is;
+            mBuffer = targetBuffer;
+            mLastRead = UNREAD;
+        }
+
+        public void run() {
+            char[] c = new char[1024];
+            int count;
+            try {
+                while ( (count = is.read(c, 0, 1024)) != -1) {
+                    mLastRead = SystemClock.uptimeMillis();
+                    mBuffer.append(c, 0, count);
+                    Message m = new Message();
+                    m.what = GUINOTIFIER;
+                    mHandler.sendMessage(m);
+                    if (!mProcessRunning && !is.ready()) {
+                        is.close();
+                        break;
+                    }
+                }
+            } catch (IOException e) {
+                Log.e(TAG, "update buffer failed. " + e.toString());
+            }
+        }
+
+        public long idleTime() {
+            return SystemClock.uptimeMillis() - mLastRead;
+        }
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/ActivitySettings.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/ActivitySettings.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/ActivitySettings.java	(revision 167997)
@@ -0,0 +1,151 @@
+/*
+ * Copyright (C) 2011 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ * Authored by Julian Chu <walkingice@0xlab.org>
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+
+import android.app.Activity;
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.os.Bundle;
+import android.os.Environment;
+import android.os.Handler;
+import android.os.Message;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.CheckBox;
+import android.widget.EditText;
+import android.widget.LinearLayout;
+import android.widget.RadioButton;
+import android.widget.ScrollView;
+import android.widget.TextView;
+
+import org.zeroxlab.utils.BenchUtil;
+
+public class ActivitySettings extends Activity implements View.OnClickListener {
+
+    public final static String TAG = "Benchmark";
+    private Context mContext;
+    private Button mEdit;
+    private TextView mPathView;
+    private String mPath;
+    private RadioListener mRadioListener;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        mContext = this;
+        initViews();
+    }
+
+    @Override
+    protected void onPause() {
+        super.onPause();
+        finish();
+    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+    }
+
+    public void onClick(View v) {
+        if (v == mEdit) {
+            alertInput();
+        }
+    }
+
+    private void initViews() {
+        setContentView(R.layout.settings);
+        mRadioListener = new RadioListener();
+        RadioButton radio_sdcard = (RadioButton) findViewById(R.id.radio_sdcard);
+        RadioButton radio_custom = (RadioButton) findViewById(R.id.radio_custom);
+        mPathView = (TextView) findViewById(R.id.path_selection);
+        mEdit = (Button) findViewById(R.id.edit_dir);
+
+        mEdit.setOnClickListener(this);
+
+        radio_sdcard.setOnClickListener(mRadioListener);
+        radio_custom.setOnClickListener(mRadioListener);
+
+        radio_sdcard.setText(BenchUtil.DEFAULT_RESULT_DIR);
+
+        /* Retrieve preference of path selection */
+        int selection = BenchUtil.getResultSelection(this);
+        if (selection == BenchUtil.RESULT_SELECTION_SDCARD) {
+            radio_sdcard.performClick();
+        } else if (selection == BenchUtil.RESULT_SELECTION_CUSTOM) {
+            radio_custom.performClick();
+        } else {
+            Log.e(TAG, "Choosen an unknown radio button in Settings Activity");
+        }
+
+    }
+
+    private void alertInput() {
+        final AlertDialog.Builder alert = new AlertDialog.Builder(this);
+        final EditText edit = new EditText(this);
+        edit.setText(BenchUtil.getCustomDir(this));
+        alert.setView(edit);
+        alert.setPositiveButton("Ok", new DialogInterface.OnClickListener() {
+            public void onClick(DialogInterface dialog, int whichButton) {
+                BenchUtil.setCustomDir(mContext, edit.getText().toString());
+                updateHint();
+            }
+        });
+        alert.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
+            public void onClick(DialogInterface dialog, int whichButton) {
+                dialog.cancel();
+            }
+        });
+        alert.show();
+    }
+
+    private void updateHint() {
+        final int selection = BenchUtil.getResultSelection(this);
+        if (selection == BenchUtil.RESULT_SELECTION_SDCARD) {
+            mPath = BenchUtil.DEFAULT_RESULT_DIR;
+        } else if (selection == BenchUtil.RESULT_SELECTION_CUSTOM) {
+            mPath = BenchUtil.getCustomDir(mContext);
+        } else {
+            Log.e(TAG, "I don't understand what did you choose!");
+        }
+
+        mPathView.setText(mPath);
+    }
+
+    private class RadioListener implements View.OnClickListener {
+        public void onClick(View v) {
+            if (v.getId() == R.id.radio_sdcard) {
+                BenchUtil.setResultSelection(mContext, BenchUtil.RESULT_SELECTION_SDCARD);
+            } else if (v.getId() == R.id.radio_custom) {
+                BenchUtil.setResultSelection(mContext, BenchUtil.RESULT_SELECTION_CUSTOM);
+            } else {
+                Log.e(TAG, "I don't know what did you click!");
+                return;
+            }
+
+            updateHint();
+        }
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseDrawArc.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseDrawArc.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/CaseDrawArc.java	(revision 167997)
@@ -0,0 +1,108 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import android.util.Log;
+
+import android.os.SystemClock;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+import android.os.Bundle;
+import android.widget.*;
+import android.view.*;
+import java.nio.*;
+import java.util.ArrayList;
+
+public class CaseDrawArc extends Case{
+
+    public static int ArcRound = 500;
+
+    CaseDrawArc() {
+        super("CaseDrawArc", "org.zeroxlab.graphics.DrawArc", 2, ArcRound);
+        mType = "2d-fps";
+        String [] _tmp = {
+            "2d",
+            "render",
+            "skia",
+            "view",
+        };
+        mTags = _tmp;
+    }
+
+    public String getTitle() {
+        return "Draw Arc";
+    }
+
+    public String getDescription() {
+        return "call canvas.drawArc to draw arc for " + ArcRound + " times";
+    }
+
+    @Override
+    public String getResultOutput() {
+        if (!couldFetchReport()) {
+            return "DrawArc has no report";
+        }
+
+        String result = "";
+        float total = 0;
+        int length = mResult.length;
+
+        for (int i = 0; i < length; i++) {
+            float second = (mResult[i] / 1000f);
+            float fps = (float) mCaseRound / second; // milliseconds to seconds
+            result += "Round " + i +": fps = " + fps + "\n";
+            total  += fps;
+        }
+
+        result += "Average: fps = " + ((float)total/length) + "\n";
+        return result;
+    }
+
+    /*
+     *  Get Average Benchmark
+     */
+    public double getBenchmark(Scenario s) {
+        double total = 0;
+        int length = mResult.length;
+        for (int i = 0; i < length; i++) {
+            double second = (mResult[i] / 1000f);
+            double fps = (double) mCaseRound / second;
+            total  += fps;
+        }
+        return total/length;
+    }
+
+    @Override
+    public ArrayList<Scenario> getScenarios () {
+        ArrayList<Scenario> scenarios = new ArrayList<Scenario>();
+
+        Scenario s = new Scenario(getTitle(), mType, mTags);
+        s.mLog = getResultOutput();
+        for (int i = 0; i < mResult.length; i++) {
+            float second = (mResult[i] / 1000f);
+            float fps = (float)mCaseRound / second;
+            s.mResults.add(((Float)fps).doubleValue());
+        }
+
+        scenarios.add(s);
+        return scenarios;
+    }
+
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterArithmetic.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterArithmetic.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/TesterArithmetic.java	(revision 167997)
@@ -0,0 +1,153 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.techain.runtime;
+
+import org.zeroxlab.arithmetic.LinpackLoop;
+
+import android.util.Log;
+import android.app.Activity;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+import android.content.Intent;
+import android.widget.TextView;
+
+public class TesterArithmetic extends Tester {
+
+    TextView mTextView;
+    Bundle mInfo[];
+    public final static String MFLOPS = "MFLOPS";
+    public final static String RESIDN = "RESIDN";
+    public final static String TIME   = "TIME";
+    public final static String EPS    = "EPS";
+
+    protected String getTag() {
+        return "Arithmetic";
+    }
+
+    protected int sleepBeforeStart() {
+        return 1000;
+    }
+
+    protected int sleepBetweenRound() {
+        return 200;
+    }
+
+    protected void oneRound() {
+		
+		Log.d("mtbfdebug", "TesterArithmetic  oneRound ");
+        LinpackLoop.main(mInfo[mNow - 1]);
+        decreaseCounter();
+    }
+
+    @Override
+    protected boolean saveResult(Intent intent) {
+        Bundle result = new Bundle();
+        TesterArithmetic.average(result, mInfo);
+    
+        intent.putExtra(CaseArithmetic.LIN_RESULT, result);
+        return true;
+    }
+    
+    /** Called when the activity is first created. */
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        int length = mRound;
+        mInfo = new Bundle[length];
+        for (int i = 0; i < length; i++) {
+            mInfo[i] = new Bundle();
+        }
+
+        mTextView = new TextView(this);
+        mTextView.setText("Running Arithmetic....");
+        mTextView.setTextSize(mTextView.getTextSize() + 5);
+        setContentView(mTextView);
+        startTester();
+    }
+
+    public static void average(Bundle result, Bundle[] list) {
+
+        if (result == null) {
+            result = new Bundle();
+        }
+
+        if (list == null) {
+            Log.i("Arithmetic", "Array is null");
+            return;
+        }
+
+        int length = list.length;
+        double mflops_total  = 0.0;
+        double residn_total  = 0.0;
+        double time_total    = 0.0;
+        double eps_total     = 0.0;
+
+        for (int i = 0; i < length; i ++) {
+            Bundle info = list[i];
+
+            if (info == null) {
+                Log.i("Arithmetic", "one item of array is null!");
+                return;
+            }
+
+            mflops_total  += info.getDouble(MFLOPS);
+            residn_total  += info.getDouble(RESIDN);
+            time_total    += info.getDouble(TIME);
+            eps_total     += info.getDouble(EPS);
+        }
+
+        result.putDouble(MFLOPS, mflops_total / length);
+        result.putDouble(RESIDN, residn_total / length);
+        result.putDouble(TIME, time_total / length);
+        result.putDouble(EPS, eps_total  / length);
+    }
+
+    public static String bundleToString(Bundle bundle) {
+        String result = "";
+        result += "\nMflops/s :" + bundle.getDouble(MFLOPS, 0.0);
+        /* the time result is too small to calculate average. (0.0 ~ 0.1), drop it*/
+        //result += "\nTime     :" + bundle.getDouble(TIME, 0.0);
+        result += "\nNorm Res :" + bundle.getDouble(RESIDN, 0.0);
+        result += "\nPrecision:" + bundle.getDouble(EPS, 0.0);
+
+        return result;
+    }
+
+    public static String bundleListToXML(Bundle[] mInfo) {
+
+        double total = 0.0;
+        for (int i = 0; i < mInfo.length; i++) {
+            double mflops = mInfo[i].getDouble(MFLOPS, 0.0);
+            total += mflops;
+        }
+        if (total == 0) {
+            return "";
+        }
+        String result = "";
+        result += "<scenario benchmark=\"Linpack\" unit=\"mflops\">";
+        for (int i = 0; i < mInfo.length; i++) {
+            double mflops = mInfo[i].getDouble(MFLOPS, 0.0);
+            result += "" + mflops + " ";
+        }
+        result += "</scenario>";
+
+        return result;
+    }
+
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/AlarmReceiver.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/AlarmReceiver.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/techain/runtime/AlarmReceiver.java	(revision 167997)
@@ -0,0 +1,23 @@
+package com.techain.runtime;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.util.Log;
+
+public class AlarmReceiver extends BroadcastReceiver
+{
+  public static final String TIMER_EXPIRED = "timerExpired";
+
+  public void onReceive(Context paramContext, Intent paramIntent)
+  {
+    Intent localIntent = new Intent("timerExpired");
+    Log.d("ww_debug", "AlarmReceiver!");
+    paramContext.sendBroadcast(localIntent);
+  }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.techain.runtime.AlarmReceiver
+ * JD-Core Version:    0.6.2
+ */
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/nea/nehe/lesson16/Lesson16.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/nea/nehe/lesson16/Lesson16.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/nea/nehe/lesson16/Lesson16.java	(revision 167997)
@@ -0,0 +1,366 @@
+/*
+ * Authors Name: Jeff Molofee (NeHe)
+ *
+ * Disclaimer:
+ * This program may crash your system or run poorly depending on your
+ * hardware.  The program and code contained in this archive was scanned
+ * for virii and has passed all test before it was put online.  If you
+ * use this code in project of your own, send a shout out to the author!
+ *
+ * Ported to Android by INsanityDesign:
+ *  http://insanitydesign.com/wp/projects/nehe-android-ports/
+ *
+ * Adapted by 0xlab developers.
+ */
+
+package com.nea.nehe.lesson16;
+
+import com.techain.runtime.Tester;
+
+import java.nio.ByteBuffer;
+import java.nio.ByteOrder;
+import java.nio.FloatBuffer;
+
+import javax.microedition.khronos.egl.EGLConfig;
+import javax.microedition.khronos.opengles.GL10;
+
+import android.content.Context;
+import android.opengl.GLSurfaceView;
+import android.opengl.GLU;
+import android.opengl.GLSurfaceView.Renderer;
+import android.view.KeyEvent;
+import android.view.MotionEvent;
+
+/**
+ * This is a port of the {@link http://nehe.gamedev.net} OpenGL
+ * tutorials to the Android 1.5 OpenGL ES platform. Thanks to
+ * NeHe and all contributors for their great tutorials and great
+ * documentation. This source should be used together with the
+ * textual explanations made at {@link http://nehe.gamedev.net}.
+ * The code is based on the original Visual C++ code with all
+ * comments made. It has been altered and extended to meet the
+ * Android requirements. The Java code has according comments.
+ *
+ * If you use this code or find it helpful, please visit and send
+ * a shout to the author under {@link http://www.insanitydesign.com/}
+ *
+ * @DISCLAIMER
+ * This source and the whole package comes without warranty. It may or may
+ * not harm your computer or cell phone. Please use with care. Any damage
+ * cannot be related back to the author. The source has been tested on a
+ * virtual environment and scanned for viruses and has passed all tests.
+ *
+ *
+ * This is an interpretation of "Lesson 16: Cool Looking Fog"
+ * for the Google Android platform.
+ *
+ * @author Savas Ziplies (nea/INsanityDesign)
+ */
+public class Lesson16 extends GLSurfaceView implements Renderer {
+
+    private Tester mTester;
+
+    /** Cube instance */
+    private Cube cube;
+
+    /* Rotation values */
+    private float xrot;                    //X Rotation
+    private float yrot;                    //Y Rotation
+
+    /* Rotation speed values */
+    private float xspeed;                //X Rotation Speed
+    private float yspeed;                //Y Rotation Speed
+
+    private float z = -5.0f;            //Depth Into The Screen
+
+    private int filter = 0;                //Which texture filter?
+
+    /** Is light enabled */
+    private boolean light = false;
+
+    private int fogFilter = 0;            //Which Fog To Use ( NEW )
+    /*
+     * Init the three fog filters we will use
+     * and the fog color ( NEW )
+     */
+    private int fogMode[]= {
+                            GL10.GL_EXP,
+                            GL10.GL_EXP2,
+                            GL10.GL_LINEAR
+                                        };
+    private float[] fogColor = {0.5f, 0.5f, 0.5f, 1.0f};
+    private FloatBuffer fogColorBuffer;    //The Fog Color Buffer  ( NEW )
+
+    /*
+     * The initial light values for ambient and diffuse
+     * as well as the light position
+     */
+    private float[] lightAmbient = {0.5f, 0.5f, 0.5f, 1.0f};
+    private float[] lightDiffuse = {1.0f, 1.0f, 1.0f, 1.0f};
+    private float[] lightPosition = {0.0f, 0.0f, 2.0f, 1.0f};
+
+    /* The buffers for our light values */
+    private FloatBuffer lightAmbientBuffer;
+    private FloatBuffer lightDiffuseBuffer;
+    private FloatBuffer lightPositionBuffer;
+
+    /*
+     * These variables store the previous X and Y
+     * values as well as a fix touch scale factor.
+     * These are necessary for the rotation transformation
+     * added to this lesson, based on the screen touches.
+     */
+    private float oldX;
+    private float oldY;
+    private final float TOUCH_SCALE = 0.2f;        //Proved to be good for normal rotation
+
+    /** The Activity Context */
+    private Context context;
+
+    /**
+     * Instance the Cube object and set the Activity Context
+     * handed over. Initiate the light and fog buffers and set
+     * this class as renderer for this now GLSurfaceView.
+     * Request Focus and set if focusable in touch mode to
+     * receive the Input from Screen and Buttons
+     *
+     * @param context - The Activity Context
+     */
+    public Lesson16(Context context) {
+        super(context);
+
+        //Set this as Renderer
+        this.setRenderer(this);
+        //Request focus, otherwise buttons won't react
+        this.requestFocus();
+        this.setFocusableInTouchMode(true);
+
+        //
+        this.context = context;
+
+        //
+        ByteBuffer byteBuf = ByteBuffer.allocateDirect(lightAmbient.length * 4);
+        byteBuf.order(ByteOrder.nativeOrder());
+        lightAmbientBuffer = byteBuf.asFloatBuffer();
+        lightAmbientBuffer.put(lightAmbient);
+        lightAmbientBuffer.position(0);
+
+        byteBuf = ByteBuffer.allocateDirect(lightDiffuse.length * 4);
+        byteBuf.order(ByteOrder.nativeOrder());
+        lightDiffuseBuffer = byteBuf.asFloatBuffer();
+        lightDiffuseBuffer.put(lightDiffuse);
+        lightDiffuseBuffer.position(0);
+
+        byteBuf = ByteBuffer.allocateDirect(lightPosition.length * 4);
+        byteBuf.order(ByteOrder.nativeOrder());
+        lightPositionBuffer = byteBuf.asFloatBuffer();
+        lightPositionBuffer.put(lightPosition);
+        lightPositionBuffer.position(0);
+
+        //Build the new Buffer ( NEW )
+        byteBuf = ByteBuffer.allocateDirect(fogColor.length * 4);
+        byteBuf.order(ByteOrder.nativeOrder());
+        fogColorBuffer = byteBuf.asFloatBuffer();
+        fogColorBuffer.put(fogColor);
+        fogColorBuffer.position(0);
+
+        //
+        cube = new Cube();
+    }
+
+    public void setSpeedAndTester(int speedX, int speedY, Tester tester) {
+        xspeed = speedX;
+        yspeed = speedY;
+        mTester = tester;
+    }
+
+    /**
+     * The Surface is created/init()
+     */
+    public void onSurfaceCreated(GL10 gl, EGLConfig config) {
+        //And there'll be light!
+        gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_AMBIENT, lightAmbientBuffer);        //Setup The Ambient Light
+        gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_DIFFUSE, lightDiffuseBuffer);        //Setup The Diffuse Light
+        gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_POSITION, lightPositionBuffer);    //Position The Light
+        gl.glEnable(GL10.GL_LIGHT0);                                            //Enable Light 0
+
+        //Settings
+        gl.glDisable(GL10.GL_DITHER);                        //Disable dithering
+        gl.glEnable(GL10.GL_TEXTURE_2D);                    //Enable Texture Mapping
+        gl.glShadeModel(GL10.GL_SMOOTH);                     //Enable Smooth Shading
+        gl.glClearColor(0.5f, 0.5f, 0.5f, 1.0f);             //We'll Clear To The Color Of The Fog ( Modified )
+        gl.glClearDepthf(1.0f);                             //Depth Buffer Setup
+        gl.glEnable(GL10.GL_DEPTH_TEST);                     //Enables Depth Testing
+        gl.glDepthFunc(GL10.GL_LEQUAL);                     //The Type Of Depth Testing To Do
+
+        //The Fog/The Mist
+        gl.glFogf(GL10.GL_FOG_MODE, fogMode[fogFilter]);    //Fog Mode ( NEW )
+        gl.glFogfv(GL10.GL_FOG_COLOR, fogColorBuffer);        //Set Fog Color ( NEW )
+        gl.glFogf(GL10.GL_FOG_DENSITY, 0.35f);                //How Dense Will The Fog Be ( NEW )
+        gl.glHint(GL10.GL_FOG_HINT, GL10.GL_DONT_CARE);        //Fog Hint Value ( NEW )
+        gl.glFogf(GL10.GL_FOG_START, 1.0f);                    //Fog Start Depth ( NEW )
+        gl.glFogf(GL10.GL_FOG_END, 5.0f);                    //Fog End Depth ( NEW )
+        gl.glEnable(GL10.GL_FOG);                            //Enables GL_FOG ( NEW )
+
+        //Really Nice Perspective Calculations
+        gl.glHint(GL10.GL_PERSPECTIVE_CORRECTION_HINT, GL10.GL_NICEST);
+
+        //Load the texture for the cube once during Surface creation
+        cube.loadGLTexture(gl, this.context);
+    }
+
+    /**
+     * Here we do our drawing
+     */
+    public void onDrawFrame(GL10 gl) {
+        //Clear Screen And Depth Buffer
+        gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
+        gl.glLoadIdentity();                    //Reset The Current Modelview Matrix
+
+        //Check if the light flag has been set to enable/disable lighting
+        if(light) {
+            gl.glEnable(GL10.GL_LIGHTING);
+        } else {
+            gl.glDisable(GL10.GL_LIGHTING);
+        }
+
+        //Set Fog Mode ( NEW )
+        gl.glFogf(GL10.GL_FOG_MODE, fogMode[fogFilter]);
+
+        //Drawing
+        gl.glTranslatef(0.0f, 0.0f, z);            //Move z units into the screen
+        gl.glScalef(0.8f, 0.8f, 0.8f);             //Scale the Cube to 80 percent, otherwise it would be too large for the screen
+
+        //Rotate around the axis based on the rotation matrix (rotation, x, y, z)
+        gl.glRotatef(xrot, 1.0f, 0.0f, 0.0f);    //X
+        gl.glRotatef(yrot, 0.0f, 1.0f, 0.0f);    //Y
+
+        cube.draw(gl, filter);                    //Draw the Cube
+
+        gl.glFinish(); // ensuer the previous gl commands complete
+        mTester.decreaseCounter();
+
+        //Change rotation factors
+        xrot += xspeed;
+        yrot += yspeed;
+    }
+
+    /**
+     * If the surface changes, reset the view
+     */
+    public void onSurfaceChanged(GL10 gl, int width, int height) {
+        if(height == 0) {                         //Prevent A Divide By Zero By
+            height = 1;                         //Making Height Equal One
+        }
+
+        gl.glViewport(0, 0, width, height);     //Reset The Current Viewport
+        gl.glMatrixMode(GL10.GL_PROJECTION);     //Select The Projection Matrix
+        gl.glLoadIdentity();                     //Reset The Projection Matrix
+
+        //Calculate The Aspect Ratio Of The Window
+        GLU.gluPerspective(gl, 45.0f, (float)width / (float)height, 0.1f, 100.0f);
+
+        gl.glMatrixMode(GL10.GL_MODELVIEW);     //Select The Modelview Matrix
+        gl.glLoadIdentity();                     //Reset The Modelview Matrix
+    }
+
+/* ***** Listener Events ***** */
+    /**
+     * Override the key listener to receive keyUp events.
+     *
+     * Check for the DPad presses left, right, up, down and middle.
+     * Change the rotation speed according to the presses
+     * or change the texture filter used through the middle press.
+     */
+    @Override
+    public boolean onKeyUp(int keyCode, KeyEvent event) {
+        //
+        if(keyCode == KeyEvent.KEYCODE_DPAD_LEFT) {
+            yspeed -= 0.1f;
+
+        } else if(keyCode == KeyEvent.KEYCODE_DPAD_RIGHT) {
+            yspeed += 0.1f;
+
+        } else if(keyCode == KeyEvent.KEYCODE_DPAD_UP) {
+            xspeed -= 0.1f;
+
+        } else if(keyCode == KeyEvent.KEYCODE_DPAD_DOWN) {
+            xspeed += 0.1f;
+
+        } else if(keyCode == KeyEvent.KEYCODE_DPAD_CENTER) {
+            filter += 1;
+            if(filter > 2) {
+                filter = 0;
+            }
+        }
+
+        //We handled the event
+        return true;
+    }
+
+    /**
+     * Override the touch screen listener.
+     *
+     * React to moves and presses on the touchscreen.
+     */
+    @Override
+    public boolean onTouchEvent(MotionEvent event) {
+        //
+        float x = event.getX();
+        float y = event.getY();
+
+    //If a touch is moved on the screen
+    if(event.getAction() == MotionEvent.ACTION_MOVE) {
+        //Calculate the change
+        float dx = x - oldX;
+        float dy = y - oldY;
+        //Define an upper area of 10% on the screen
+        int upperArea = this.getHeight() / 10;
+
+        //Zoom in/out if the touch move has been made in the upper
+        if(y < upperArea) {
+        z -= dx * TOUCH_SCALE / (this.getWidth() /16);
+
+        //Rotate around the axis otherwise
+        } else {
+        xrot += dy * TOUCH_SCALE;
+        yrot += dx * TOUCH_SCALE;
+        }
+
+        //A press on the screen
+        } else if(event.getAction() == MotionEvent.ACTION_UP) {
+        //Define an upper area of 10% to define a lower area
+        int upperArea = this.getHeight() / 10;
+        int lowerArea = this.getHeight() - upperArea;
+
+        //
+        if(y > lowerArea) {
+        //Change the blend setting if the lower area left has been pressed
+        if(x < (this.getWidth() / 2)) {
+            fogFilter += 1;     //Increase fogFilter By One ( NEW )
+
+            //Is fogFilter Greater Than 2? ( NEW )
+            if(fogFilter > 2) {
+            fogFilter = 0;     //If So, Set fogFilter To Zero back again ( NEW )
+            }
+
+            //Change the light setting if the lower area right has been pressed
+        } else {
+            if(light) {
+            light = false;
+            } else {
+            light = true;
+            }
+        }
+        }
+    }
+
+        //Remember the values
+        oldX = x;
+        oldY = y;
+
+        //We handled the event
+        return true;
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/nea/nehe/lesson16/Cube.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/nea/nehe/lesson16/Cube.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/nea/nehe/lesson16/Cube.java	(revision 167997)
@@ -0,0 +1,345 @@
+/*
+ * Authors Name: Jeff Molofee (NeHe)
+ *
+ * Disclaimer:
+ * This program may crash your system or run poorly depending on your
+ * hardware.  The program and code contained in this archive was scanned
+ * for virii and has passed all test before it was put online.  If you
+ * use this code in project of your own, send a shout out to the author!
+ *
+ * Ported to Android by INsanityDesign:
+ *  http://insanitydesign.com/wp/projects/nehe-android-ports/
+ */
+
+package com.nea.nehe.lesson16;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.nio.ByteBuffer;
+import java.nio.ByteOrder;
+import java.nio.FloatBuffer;
+
+import javax.microedition.khronos.opengles.GL10;
+import javax.microedition.khronos.opengles.GL11;
+
+import com.techain.runtime.R;
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.opengl.GLUtils;
+
+/**
+ * This class is an object representation of
+ * a Cube containing the vertex information,
+ * texture coordinates, the vertex indices
+ * and drawing functionality, which is called
+ * by the renderer.
+ *
+ * @author Savas Ziplies (nea/INsanityDesign)
+ */
+public class Cube {
+
+    /** The buffer holding the vertices */
+    private FloatBuffer vertexBuffer;
+    /** The buffer holding the texture coordinates */
+    private FloatBuffer textureBuffer;
+    /** The buffer holding the indices */
+    private ByteBuffer indexBuffer;
+    /** The buffer holding the normals */
+    private FloatBuffer normalBuffer;
+
+    /** Our texture pointer */
+    private int[] textures = new int[3];
+
+    /** The initial vertex definition */
+    private float vertices[] = {
+        //Vertices according to faces
+        -1.0f, -1.0f, 1.0f, //v0
+        1.0f, -1.0f, 1.0f,     //v1
+        -1.0f, 1.0f, 1.0f,     //v2
+        1.0f, 1.0f, 1.0f,     //v3
+
+        1.0f, -1.0f, 1.0f,     // ...
+        1.0f, -1.0f, -1.0f,
+        1.0f, 1.0f, 1.0f,
+        1.0f, 1.0f, -1.0f,
+
+        1.0f, -1.0f, -1.0f,
+        -1.0f, -1.0f, -1.0f,
+        1.0f, 1.0f, -1.0f,
+        -1.0f, 1.0f, -1.0f,
+
+        -1.0f, -1.0f, -1.0f,
+        -1.0f, -1.0f, 1.0f,
+        -1.0f, 1.0f, -1.0f,
+        -1.0f, 1.0f, 1.0f,
+
+        -1.0f, -1.0f, -1.0f,
+        1.0f, -1.0f, -1.0f,
+        -1.0f, -1.0f, 1.0f,
+        1.0f, -1.0f, 1.0f,
+
+        -1.0f, 1.0f, 1.0f,
+        1.0f, 1.0f, 1.0f,
+        -1.0f, 1.0f, -1.0f,
+        1.0f, 1.0f, -1.0f,
+    };
+
+    /**
+     * The initial normals for the lighting calculations
+     *
+     * The normals are not necessarily correct from a
+     * real world perspective, as I am too lazy to write
+     * these all on my own. But you get the idea and see
+     * what I mean if you run the demo.
+     */
+    private float normals[] = {
+        // Normals
+        0.0f, 0.0f, 1.0f,
+        0.0f, 0.0f, -1.0f,
+        0.0f, 1.0f, 0.0f,
+        0.0f, -1.0f, 0.0f,
+
+        0.0f, 0.0f, 1.0f,
+        0.0f, 0.0f, -1.0f,
+        0.0f, 1.0f, 0.0f,
+        0.0f, -1.0f, 0.0f,
+
+        0.0f, 0.0f, 1.0f,
+        0.0f, 0.0f, -1.0f,
+        0.0f, 1.0f, 0.0f,
+        0.0f, -1.0f, 0.0f,
+
+        0.0f, 0.0f, 1.0f,
+        0.0f, 0.0f, -1.0f,
+        0.0f, 1.0f, 0.0f,
+        0.0f, -1.0f, 0.0f,
+
+        0.0f, 0.0f, 1.0f,
+        0.0f, 0.0f, -1.0f,
+        0.0f, 1.0f, 0.0f,
+        0.0f, -1.0f, 0.0f,
+
+        0.0f, 0.0f, 1.0f,
+        0.0f, 0.0f, -1.0f,
+        0.0f, 1.0f, 0.0f,
+        0.0f, -1.0f, 0.0f,
+    };
+
+    /** The initial texture coordinates (u, v) */
+    private float texture[] = {
+        //Mapping coordinates for the vertices
+        0.0f, 0.0f,
+        0.0f, 1.0f,
+        1.0f, 0.0f,
+        1.0f, 1.0f,
+
+        0.0f, 0.0f,
+        0.0f, 1.0f,
+        1.0f, 0.0f,
+        1.0f, 1.0f,
+
+        0.0f, 0.0f,
+        0.0f, 1.0f,
+        1.0f, 0.0f,
+        1.0f, 1.0f,
+
+        0.0f, 0.0f,
+        0.0f, 1.0f,
+        1.0f, 0.0f,
+        1.0f, 1.0f,
+
+        0.0f, 0.0f,
+        0.0f, 1.0f,
+        1.0f, 0.0f,
+        1.0f, 1.0f,
+
+        0.0f, 0.0f,
+        0.0f, 1.0f,
+        1.0f, 0.0f,
+        1.0f, 1.0f,
+    };
+
+    /** The initial indices definition */
+    private byte indices[] = {
+        // Faces definition
+        0, 1, 3, 0, 3, 2,         // Face front
+        4, 5, 7, 4, 7, 6,         // Face right
+        8, 9, 11, 8, 11, 10,     // ...
+        12, 13, 15, 12, 15, 14,
+        16, 17, 19, 16, 19, 18,
+        20, 21, 23, 20, 23, 22,
+    };
+
+    /**
+     * The Cube constructor.
+     *
+     * Initiate the buffers.
+     */
+    public Cube() {
+        //
+        ByteBuffer byteBuf = ByteBuffer.allocateDirect(vertices.length * 4);
+        byteBuf.order(ByteOrder.nativeOrder());
+        vertexBuffer = byteBuf.asFloatBuffer();
+        vertexBuffer.put(vertices);
+        vertexBuffer.position(0);
+
+        //
+        byteBuf = ByteBuffer.allocateDirect(texture.length * 4);
+        byteBuf.order(ByteOrder.nativeOrder());
+        textureBuffer = byteBuf.asFloatBuffer();
+        textureBuffer.put(texture);
+        textureBuffer.position(0);
+
+        //
+        byteBuf = ByteBuffer.allocateDirect(normals.length * 4);
+        byteBuf.order(ByteOrder.nativeOrder());
+        normalBuffer = byteBuf.asFloatBuffer();
+        normalBuffer.put(normals);
+        normalBuffer.position(0);
+
+        //
+        indexBuffer = ByteBuffer.allocateDirect(indices.length);
+        indexBuffer.put(indices);
+        indexBuffer.position(0);
+    }
+
+    /**
+     * The object own drawing function.
+     * Called from the renderer to redraw this instance
+     * with possible changes in values.
+     *
+     * @param gl - The GL Context
+     * @param filter - Which texture filter to be used
+     */
+    public void draw(GL10 gl, int filter) {
+        //Bind the texture according to the set texture filter
+        gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[filter]);
+
+        //Enable the vertex, texture and normal state
+        gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);
+        gl.glEnableClientState(GL10.GL_TEXTURE_COORD_ARRAY);
+        gl.glEnableClientState(GL10.GL_NORMAL_ARRAY);
+
+        //Set the face rotation
+        gl.glFrontFace(GL10.GL_CCW);
+
+        //Point to our buffers
+        gl.glVertexPointer(3, GL10.GL_FLOAT, 0, vertexBuffer);
+        gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, textureBuffer);
+        gl.glNormalPointer(GL10.GL_FLOAT, 0, normalBuffer);
+
+        //Draw the vertices as triangles, based on the Index Buffer information
+        gl.glDrawElements(GL10.GL_TRIANGLES, indices.length, GL10.GL_UNSIGNED_BYTE, indexBuffer);
+
+        //Disable the client state before leaving
+        gl.glDisableClientState(GL10.GL_VERTEX_ARRAY);
+        gl.glDisableClientState(GL10.GL_TEXTURE_COORD_ARRAY);
+        gl.glDisableClientState(GL10.GL_NORMAL_ARRAY);
+    }
+
+    /**
+     * Load the textures
+     *
+     * @param gl - The GL Context
+     * @param context - The Activity context
+     */
+    public void loadGLTexture(GL10 gl, Context context) {
+        //Get the texture from the Android resource directory
+        InputStream is = context.getResources().openRawResource(R.drawable.crate);
+        Bitmap bitmap = null;
+        try {
+            //BitmapFactory is an Android graphics utility for images
+            bitmap = BitmapFactory.decodeStream(is);
+
+        } finally {
+            //Always clear and close
+            try {
+                is.close();
+                is = null;
+            } catch (IOException e) {
+            }
+        }
+
+        //Generate there texture pointer
+        gl.glGenTextures(3, textures, 0);
+
+        //Create Nearest Filtered Texture and bind it to texture 0
+        gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
+        gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_NEAREST);
+        gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
+        GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, bitmap, 0);
+
+        //Create Linear Filtered Texture and bind it to texture 1
+        gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[1]);
+        gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
+        gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_LINEAR);
+        GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, bitmap, 0);
+
+        //Create mipmapped textures and bind it to texture 2
+        gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[2]);
+        gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
+        gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_LINEAR_MIPMAP_NEAREST);
+        /*
+         * This is a change to the original tutorial, as buildMipMap does not exist anymore
+         * in the Android SDK.
+         *
+         * We check if the GL context is version 1.1 and generate MipMaps by flag.
+         * Otherwise we call our own buildMipMap implementation
+         */
+        if(gl instanceof GL11) {
+            gl.glTexParameterf(GL11.GL_TEXTURE_2D, GL11.GL_GENERATE_MIPMAP, GL11.GL_TRUE);
+            GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, bitmap, 0);
+
+        //
+        } else {
+            buildMipmap(gl, bitmap);
+        }
+
+        //Clean up
+        bitmap.recycle();
+    }
+
+    /**
+     * Our own MipMap generation implementation.
+     * Scale the original bitmap down, always by factor two,
+     * and set it as new mipmap level.
+     *
+     * Thanks to Mike Miller (with minor changes)!
+     *
+     * @param gl - The GL Context
+     * @param bitmap - The bitmap to mipmap
+     */
+    private void buildMipmap(GL10 gl, Bitmap bitmap) {
+        //
+        int level = 0;
+        //
+        int height = bitmap.getHeight();
+        int width = bitmap.getWidth();
+
+        //
+        while(height >= 1 || width >= 1) {
+            //First of all, generate the texture from our bitmap and set it to the according level
+            GLUtils.texImage2D(GL10.GL_TEXTURE_2D, level, bitmap, 0);
+
+            //
+            if(height == 1 || width == 1) {
+                break;
+            }
+
+            //Increase the mipmap level
+            level++;
+
+            //
+            height /= 2;
+            width /= 2;
+            Bitmap bitmap2 = Bitmap.createScaledBitmap(bitmap, width, height, true);
+
+            //Clean up
+            bitmap.recycle();
+            bitmap = bitmap2;
+        }
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/nea/nehe/lesson16/Run.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/nea/nehe/lesson16/Run.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/nea/nehe/lesson16/Run.java	(revision 167997)
@@ -0,0 +1,93 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ * Authored by Julian Chu <walkingice@0xlab.org>
+ */
+
+package com.nea.nehe.lesson16;
+
+import com.techain.runtime.Tester;
+
+import android.app.Activity;
+import android.os.Bundle;
+
+/**
+ * The initial Android Activity, setting and initiating
+ * the OpenGL ES Renderer Class @see Lesson16.java
+ *
+ * @author Savas Ziplies (nea/INsanityDesign)
+ */
+public class Run extends Tester {
+
+    public final static String FullName = "com.nea.nehe.lesson16.Run";
+
+    /** Our own OpenGL View overridden */
+    private Lesson16 lesson16;
+
+    @Override
+    public String getTag() {
+        return "Nehe16";
+    }
+
+    @Override
+    public int sleepBeforeStart() {
+        return 1200; //1.2 second
+    }
+
+    @Override
+    public int sleepBetweenRound() {
+        return 0;
+    }
+
+    @Override
+    protected void oneRound() {
+//        lesson16.requestRender();
+    }
+
+    /**
+     * Initiate our @see Lesson16.java,
+     * which is GLSurfaceView and Renderer
+     */
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        //Initiate our Lesson with this Activity Context handed over
+        lesson16 = new Lesson16(this);
+        lesson16.setSpeedAndTester(1, 1, this);
+        //Set the lesson as View to the Activity
+        setContentView(lesson16);
+        startTester();
+    }
+
+    /**
+     * Remember to resume our Lesson
+     */
+    @Override
+    protected void onResume() {
+        super.onResume();
+        lesson16.onResume();
+    }
+
+    /**
+     * Also pause our Lesson
+     */
+    @Override
+    protected void onPause() {
+        super.onPause();
+        lesson16.onPause();
+    }
+
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/nea/nehe/lesson08/Lesson08.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/nea/nehe/lesson08/Lesson08.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/nea/nehe/lesson08/Lesson08.java	(revision 167997)
@@ -0,0 +1,339 @@
+/*
+ * Authors Name: Jeff Molofee (NeHe)
+ *
+ * Disclaimer:
+ * This program may crash your system or run poorly depending on your
+ * hardware.  The program and code contained in this archive was scanned
+ * for virii and has passed all test before it was put online.  If you
+ * use this code in project of your own, send a shout out to the author!
+ *
+ * Ported to Android by INsanityDesign:
+ *  http://insanitydesign.com/wp/projects/nehe-android-ports/
+ *
+ * Adapted by 0xlab developers.
+ */
+
+package com.nea.nehe.lesson08;
+
+import com.techain.runtime.Tester;
+
+import java.nio.ByteBuffer;
+import java.nio.ByteOrder;
+import java.nio.FloatBuffer;
+
+import javax.microedition.khronos.egl.EGLConfig;
+import javax.microedition.khronos.opengles.GL10;
+
+import android.content.Context;
+import android.opengl.GLSurfaceView;
+import android.opengl.GLU;
+import android.opengl.GLSurfaceView.Renderer;
+import android.view.KeyEvent;
+import android.view.MotionEvent;
+
+/**
+ * This is a port of the {@link http://nehe.gamedev.net} OpenGL 
+ * tutorials to the Android 1.5 OpenGL ES platform. Thanks to 
+ * NeHe and all contributors for their great tutorials and great 
+ * documentation. This source should be used together with the
+ * textual explanations made at {@link http://nehe.gamedev.net}.
+ * The code is based on the original Visual C++ code with all
+ * comments made. It has been altered and extended to meet the
+ * Android requirements. The Java code has according comments.
+ * 
+ * If you use this code or find it helpful, please visit and send
+ * a shout to the author under {@link http://www.insanitydesign.com/}
+ * 
+ * @DISCLAIMER
+ * This source and the whole package comes without warranty. It may or may
+ * not harm your computer or cell phone. Please use with care. Any damage
+ * cannot be related back to the author. The source has been tested on a
+ * virtual environment and scanned for viruses and has passed all tests.
+ * 
+ * 
+ * This is an interpretation of "Lesson 08: Blending"
+ * for the Google Android platform.
+ * 
+ * @author Savas Ziplies (nea/INsanityDesign)
+ */
+public class Lesson08 extends GLSurfaceView implements Renderer {
+
+    private Tester mTester;
+
+    /** Cube instance */
+    private Cube cube;    
+
+    /* Rotation values */
+    private float xrot;                    //X Rotation
+    private float yrot;                    //Y Rotation
+
+    /* Rotation speed values */
+    private float xspeed;                //X Rotation Speed
+    private float yspeed;                //Y Rotation Speed
+
+    private float z = -5.0f;            //Depth Into The Screen
+
+    private int filter = 0;                //Which texture filter?
+
+    /** Is light enabled */
+    private boolean light = true;
+    /** Is blending enabled ( NEW ) */
+    private boolean blend = true;
+
+    /* The initial light values */
+    private float[] lightAmbient = {0.5f, 0.5f, 0.5f, 1.0f};
+    private float[] lightDiffuse = {1.0f, 1.0f, 1.0f, 1.0f};
+    private float[] lightPosition = {0.0f, 0.0f, 2.0f, 1.0f};
+        
+    /* The buffers for our light values */
+    private FloatBuffer lightAmbientBuffer;
+    private FloatBuffer lightDiffuseBuffer;
+    private FloatBuffer lightPositionBuffer;
+
+    /* Variables and factor for the input handler */
+    private float oldX;
+    private float oldY;
+    private final float TOUCH_SCALE = 0.2f;            //Proved to be good for normal rotation
+
+    /** The Activity Context */
+    private Context context;
+
+    /**
+     * Instance the Cube object and set the Activity Context 
+     * handed over. Initiate the light buffers and set this 
+     * class as renderer for this now GLSurfaceView.
+     * Request Focus and set if focusable in touch mode to
+     * receive the Input from Screen and Buttons  
+     * 
+     * @param context - The Activity Context
+     */
+    public Lesson08(Context context) {
+        super(context);
+        
+        //Set this as Renderer
+        this.setRenderer(this);
+        //Request focus, otherwise buttons won't react
+        this.requestFocus();
+        this.setFocusableInTouchMode(true);
+        
+        //
+        this.context = context;        
+        
+        //
+        ByteBuffer byteBuf = ByteBuffer.allocateDirect(lightAmbient.length * 4);
+        byteBuf.order(ByteOrder.nativeOrder());
+        lightAmbientBuffer = byteBuf.asFloatBuffer();
+        lightAmbientBuffer.put(lightAmbient);
+        lightAmbientBuffer.position(0);
+        
+        byteBuf = ByteBuffer.allocateDirect(lightDiffuse.length * 4);
+        byteBuf.order(ByteOrder.nativeOrder());
+        lightDiffuseBuffer = byteBuf.asFloatBuffer();
+        lightDiffuseBuffer.put(lightDiffuse);
+        lightDiffuseBuffer.position(0);
+        
+        byteBuf = ByteBuffer.allocateDirect(lightPosition.length * 4);
+        byteBuf.order(ByteOrder.nativeOrder());
+        lightPositionBuffer = byteBuf.asFloatBuffer();
+        lightPositionBuffer.put(lightPosition);
+        lightPositionBuffer.position(0);
+        
+        //
+        cube = new Cube();
+    }
+
+    public void setSpeedAndTester(int speedX, int speedY, Tester tester) {
+        xspeed = speedX;
+        yspeed = speedY;
+        mTester = tester;
+    }
+
+    /**
+     * The Surface is created/init()
+     */
+    public void onSurfaceCreated(GL10 gl, EGLConfig config) {        
+        //And there'll be light!
+        gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_AMBIENT, lightAmbientBuffer);        //Setup The Ambient Light
+        gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_DIFFUSE, lightDiffuseBuffer);        //Setup The Diffuse Light
+        gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_POSITION, lightPositionBuffer);    //Position The Light
+        gl.glEnable(GL10.GL_LIGHT0);                                            //Enable Light 0
+        
+        //Blending
+        gl.glColor4f(1.0f, 1.0f, 1.0f, 0.5f);                //Full Brightness. 50% Alpha ( NEW )
+        gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE);        //Set The Blending Function For Translucency ( NEW )
+
+        //Settings
+        gl.glDisable(GL10.GL_DITHER);                //Disable dithering
+        gl.glEnable(GL10.GL_TEXTURE_2D);            //Enable Texture Mapping
+        gl.glShadeModel(GL10.GL_SMOOTH);             //Enable Smooth Shading
+        gl.glClearColor(0.0f, 0.0f, 0.0f, 0.5f);     //Black Background
+        gl.glClearDepthf(1.0f);                     //Depth Buffer Setup
+        gl.glEnable(GL10.GL_DEPTH_TEST);             //Enables Depth Testing
+        gl.glDepthFunc(GL10.GL_LEQUAL);             //The Type Of Depth Testing To Do
+        
+        //Really Nice Perspective Calculations
+        gl.glHint(GL10.GL_PERSPECTIVE_CORRECTION_HINT, GL10.GL_NICEST); 
+                
+        //Load the texture for the cube once during Surface creation
+        cube.loadGLTexture(gl, this.context);
+    }
+
+    /**
+     * Here we do our drawing
+     */
+    public void onDrawFrame(GL10 gl) {
+        //Clear Screen And Depth Buffer
+        gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);    
+        gl.glLoadIdentity();                    //Reset The Current Modelview Matrix
+        
+        //Check if the light flag has been set to enable/disable lighting
+        if(light) {
+            gl.glEnable(GL10.GL_LIGHTING);
+        } else {
+            gl.glDisable(GL10.GL_LIGHTING);
+        }
+        
+        //Check if the blend flag has been set to enable/disable blending
+        if(blend) {
+            gl.glEnable(GL10.GL_BLEND);            //Turn Blending On ( NEW )
+            gl.glDisable(GL10.GL_DEPTH_TEST);    //Turn Depth Testing Off ( NEW )
+            
+        } else {
+            gl.glDisable(GL10.GL_BLEND);        //Turn Blending On ( NEW )
+            gl.glEnable(GL10.GL_DEPTH_TEST);    //Turn Depth Testing Off ( NEW )
+        }
+        
+        //Drawing
+        gl.glTranslatef(0.0f, 0.0f, z);            //Move z units into the screen
+        gl.glScalef(0.8f, 0.8f, 0.8f);             //Scale the Cube to 80 percent, otherwise it would be too large for the screen
+        
+        //Rotate around the axis based on the rotation matrix (rotation, x, y, z)
+        gl.glRotatef(xrot, 1.0f, 0.0f, 0.0f);    //X
+        gl.glRotatef(yrot, 0.0f, 1.0f, 0.0f);    //Y
+                
+        cube.draw(gl, filter);                    //Draw the Cube    
+        gl.glFinish();
+        mTester.decreaseCounter();
+        //Change rotation factors
+        xrot += xspeed;
+        yrot += yspeed;
+    }
+        
+
+    /**
+     * If the surface changes, reset the view
+     */
+    public void onSurfaceChanged(GL10 gl, int width, int height) {
+        if(height == 0) {                         //Prevent A Divide By Zero By
+            height = 1;                         //Making Height Equal One
+        }
+
+        gl.glViewport(0, 0, width, height);     //Reset The Current Viewport
+        gl.glMatrixMode(GL10.GL_PROJECTION);     //Select The Projection Matrix
+        gl.glLoadIdentity();                     //Reset The Projection Matrix
+
+        //Calculate The Aspect Ratio Of The Window
+        GLU.gluPerspective(gl, 45.0f, (float)width / (float)height, 0.1f, 100.0f);
+
+        gl.glMatrixMode(GL10.GL_MODELVIEW);     //Select The Modelview Matrix
+        gl.glLoadIdentity();                     //Reset The Modelview Matrix
+    }
+    
+/* ***** Listener Events ***** */    
+    /**
+     * Override the key listener to receive keyUp events.
+     * 
+     * Check for the DPad presses left, right, up, down and middle.
+     * Change the rotation speed according to the presses
+     * or change the texture filter used through the middle press.
+     */
+    @Override
+    public boolean onKeyUp(int keyCode, KeyEvent event) {
+        //
+        if(keyCode == KeyEvent.KEYCODE_DPAD_LEFT) {
+            yspeed -= 0.1f;
+            
+        } else if(keyCode == KeyEvent.KEYCODE_DPAD_RIGHT) {
+            yspeed += 0.1f;
+            
+        } else if(keyCode == KeyEvent.KEYCODE_DPAD_UP) {
+            xspeed -= 0.1f;
+            
+        } else if(keyCode == KeyEvent.KEYCODE_DPAD_DOWN) {
+            xspeed += 0.1f;
+            
+        } else if(keyCode == KeyEvent.KEYCODE_DPAD_CENTER) {
+            filter += 1;
+            if(filter > 2) {
+                filter = 0;
+            }
+        }
+
+        //We handled the event
+        return true;
+    }
+        
+    /**
+     * Override the touch screen listener.
+     * 
+     * React to moves and presses on the touchscreen.
+     */
+    @Override
+    public boolean onTouchEvent(MotionEvent event) {
+        //
+        float x = event.getX();
+        float y = event.getY();
+        
+        //If a touch is moved on the screen
+        if(event.getAction() == MotionEvent.ACTION_MOVE) {
+            //Calculate the change
+            float dx = x - oldX;
+            float dy = y - oldY;
+            //Define an upper area of 10% on the screen
+            int upperArea = this.getHeight() / 10;
+            
+            //Zoom in/out if the touch move has been made in the upper
+            if(y < upperArea) {
+                z -= dx * TOUCH_SCALE / 2;
+            
+            //Rotate around the axis otherwise
+            } else {                
+                xrot += dy * TOUCH_SCALE;
+                yrot += dx * TOUCH_SCALE;
+            }        
+        
+        //A press on the screen
+        } else if(event.getAction() == MotionEvent.ACTION_UP) {
+            //Define an upper area of 10% to define a lower area
+            int upperArea = this.getHeight() / 10;
+            int lowerArea = this.getHeight() - upperArea;
+            
+            //
+            if(y > lowerArea) {
+                //Change the blend setting if the lower area left has been pressed ( NEW ) 
+                if(x < (this.getWidth() / 2)) {
+                    if(blend) {
+                        blend = false;
+                    } else {
+                        blend = true;
+                    }
+                    
+                //Change the light setting if the lower area right has been pressed 
+                } else {
+                    if(light) {
+                        light = false;
+                    } else {
+                        light = true;
+                    }    
+                }
+            }
+        }
+        
+        //Remember the values
+        oldX = x;
+        oldY = y;
+        
+        //We handled the event
+        return true;
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/nea/nehe/lesson08/Cube.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/nea/nehe/lesson08/Cube.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/nea/nehe/lesson08/Cube.java	(revision 167997)
@@ -0,0 +1,337 @@
+/*
+ * Authors Name: Jeff Molofee (NeHe)
+ *
+ * Disclaimer:
+ * This program may crash your system or run poorly depending on your
+ * hardware.  The program and code contained in this archive was scanned
+ * for virii and has passed all test before it was put online.  If you
+ * use this code in project of your own, send a shout out to the author!
+ *
+ * Ported to Android by INsanityDesign:
+ *  http://insanitydesign.com/wp/projects/nehe-android-ports/
+ */
+
+package com.nea.nehe.lesson08;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.nio.ByteBuffer;
+import java.nio.ByteOrder;
+import java.nio.FloatBuffer;
+
+import javax.microedition.khronos.opengles.GL10;
+import javax.microedition.khronos.opengles.GL11;
+
+import com.techain.runtime.R;
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.opengl.GLUtils;
+
+/**
+ * This class is an object representation of 
+ * a Cube containing the vertex information,
+ * texture coordinates, the vertex indices
+ * and drawing functionality, which is called 
+ * by the renderer.
+ * 
+ * @author Savas Ziplies (nea/INsanityDesign)
+ */
+public class Cube {
+
+    /** The buffer holding the vertices */
+    private FloatBuffer vertexBuffer;
+    /** The buffer holding the texture coordinates */
+    private FloatBuffer textureBuffer;
+    /** The buffer holding the indices */
+    private ByteBuffer indexBuffer;
+    /** The buffer holding the normals */
+    private FloatBuffer normalBuffer;
+
+    /** Our texture pointer */
+    private int[] textures = new int[3];
+
+    /** The initial vertex definition */
+    private float vertices[] = {
+        // Vertices according to faces
+        -1.0f, -1.0f, 1.0f, //v0
+        1.0f, -1.0f, 1.0f,     //v1
+        -1.0f, 1.0f, 1.0f,     //v2
+        1.0f, 1.0f, 1.0f,     //v3
+
+        1.0f, -1.0f, 1.0f,     //...
+        1.0f, -1.0f, -1.0f, 
+        1.0f, 1.0f, 1.0f, 
+        1.0f, 1.0f, -1.0f,
+
+        1.0f, -1.0f, -1.0f, 
+        -1.0f, -1.0f, -1.0f, 
+        1.0f, 1.0f, -1.0f, 
+        -1.0f, 1.0f, -1.0f,
+
+        -1.0f, -1.0f, -1.0f, 
+        -1.0f, -1.0f, 1.0f, 
+        -1.0f, 1.0f, -1.0f, 
+        -1.0f, 1.0f, 1.0f,
+
+        -1.0f, -1.0f, -1.0f, 
+        1.0f, -1.0f, -1.0f, 
+        -1.0f, -1.0f, 1.0f, 
+        1.0f, -1.0f, 1.0f,
+
+        -1.0f, 1.0f, 1.0f, 
+        1.0f, 1.0f, 1.0f, 
+        -1.0f, 1.0f, -1.0f, 
+        1.0f, 1.0f, -1.0f, 
+    };
+
+    /** The initial normals for the lighting calculations */
+    private float normals[] = {
+        //Normals
+        0.0f, 0.0f, 1.0f,                         
+        0.0f, 0.0f, -1.0f, 
+        0.0f, 1.0f, 0.0f, 
+        0.0f, -1.0f, 0.0f, 
+
+        0.0f, 0.0f, 1.0f, 
+        0.0f, 0.0f, -1.0f, 
+        0.0f, 1.0f, 0.0f, 
+        0.0f, -1.0f, 0.0f,
+
+        0.0f, 0.0f, 1.0f, 
+        0.0f, 0.0f, -1.0f, 
+        0.0f, 1.0f, 0.0f, 
+        0.0f, -1.0f, 0.0f,
+
+        0.0f, 0.0f, 1.0f, 
+        0.0f, 0.0f, -1.0f, 
+        0.0f, 1.0f, 0.0f, 
+        0.0f, -1.0f, 0.0f,
+
+        0.0f, 0.0f, 1.0f, 
+        0.0f, 0.0f, -1.0f, 
+        0.0f, 1.0f, 0.0f, 
+        0.0f, -1.0f, 0.0f,
+
+        0.0f, 0.0f, 1.0f, 
+        0.0f, 0.0f, -1.0f, 
+        0.0f, 1.0f, 0.0f, 
+        0.0f, -1.0f, 0.0f,
+    };
+
+    /** The initial texture coordinates (u, v) */    
+    private float texture[] = {
+        //Mapping coordinates for the vertices
+        0.0f, 0.0f, 
+        0.0f, 1.0f, 
+        1.0f, 0.0f, 
+        1.0f, 1.0f,
+
+        0.0f, 0.0f,
+        0.0f, 1.0f, 
+        1.0f, 0.0f,
+        1.0f, 1.0f,
+
+        0.0f, 0.0f, 
+        0.0f, 1.0f, 
+        1.0f, 0.0f, 
+        1.0f, 1.0f,
+
+        0.0f, 0.0f, 
+        0.0f, 1.0f, 
+        1.0f, 0.0f, 
+        1.0f, 1.0f,
+
+        0.0f, 0.0f, 
+        0.0f, 1.0f, 
+        1.0f, 0.0f, 
+        1.0f, 1.0f,
+
+        0.0f, 0.0f, 
+        0.0f, 1.0f, 
+        1.0f, 0.0f, 
+        1.0f, 1.0f, 
+    };
+
+    /** The initial indices definition */
+    private byte indices[] = {
+        // Faces definition
+        0, 1, 3, 0, 3, 2,         // Face front
+        4, 5, 7, 4, 7, 6,         // Face right
+        8, 9, 11, 8, 11, 10,     // ...
+        12, 13, 15, 12, 15, 14, 
+        16, 17, 19, 16, 19, 18, 
+        20, 21, 23, 20, 23, 22, 
+    };
+
+    /**
+     * The Cube constructor.
+     * 
+     * Initiate the buffers.
+     */
+    public Cube() {
+        //
+        ByteBuffer byteBuf = ByteBuffer.allocateDirect(vertices.length * 4);
+        byteBuf.order(ByteOrder.nativeOrder());
+        vertexBuffer = byteBuf.asFloatBuffer();
+        vertexBuffer.put(vertices);
+        vertexBuffer.position(0);
+
+        //
+        byteBuf = ByteBuffer.allocateDirect(texture.length * 4);
+        byteBuf.order(ByteOrder.nativeOrder());
+        textureBuffer = byteBuf.asFloatBuffer();
+        textureBuffer.put(texture);
+        textureBuffer.position(0);
+
+        //
+        byteBuf = ByteBuffer.allocateDirect(normals.length * 4);
+        byteBuf.order(ByteOrder.nativeOrder());
+        normalBuffer = byteBuf.asFloatBuffer();
+        normalBuffer.put(normals);
+        normalBuffer.position(0);
+
+        //
+        indexBuffer = ByteBuffer.allocateDirect(indices.length);
+        indexBuffer.put(indices);
+        indexBuffer.position(0);
+    }
+
+    /**
+     * The object own drawing function.
+     * Called from the renderer to redraw this instance
+     * with possible changes in values.
+     * 
+     * @param gl - The GL Context
+     * @param filter - Which texture filter to be used
+     */
+    public void draw(GL10 gl, int filter) {
+        //Bind the texture according to the set texture filter
+        gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[filter]);
+
+        //Enable the vertex, texture and normal state
+        gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);
+        gl.glEnableClientState(GL10.GL_TEXTURE_COORD_ARRAY);
+        gl.glEnableClientState(GL10.GL_NORMAL_ARRAY);
+
+        //Set the face rotation
+        gl.glFrontFace(GL10.GL_CCW);
+        
+        //Point to our buffers
+        gl.glVertexPointer(3, GL10.GL_FLOAT, 0, vertexBuffer);
+        gl.glTexCoordPointer(2, GL10.GL_FLOAT, 0, textureBuffer);
+        gl.glNormalPointer(GL10.GL_FLOAT, 0, normalBuffer);
+        
+        //Draw the vertices as triangles, based on the Index Buffer information
+        gl.glDrawElements(GL10.GL_TRIANGLES, indices.length, GL10.GL_UNSIGNED_BYTE, indexBuffer);
+        
+        //Disable the client state before leaving
+        gl.glDisableClientState(GL10.GL_VERTEX_ARRAY);
+        gl.glDisableClientState(GL10.GL_TEXTURE_COORD_ARRAY);
+        gl.glDisableClientState(GL10.GL_NORMAL_ARRAY);
+    }
+
+    /**
+     * Load the textures
+     * 
+     * @param gl - The GL Context
+     * @param context - The Activity context
+     */
+    public void loadGLTexture(GL10 gl, Context context) {
+        //Get the texture from the Android resource directory
+        InputStream is = context.getResources().openRawResource(R.drawable.glass);
+        Bitmap bitmap = null;
+        try {
+            //BitmapFactory is an Android graphics utility for images
+            bitmap = BitmapFactory.decodeStream(is);
+
+        } finally {
+            //Always clear and close
+            try {
+                is.close();
+                is = null;
+            } catch (IOException e) {
+            }
+        }
+
+        //Generate there texture pointer
+        gl.glGenTextures(3, textures, 0);
+
+        //Create Nearest Filtered Texture and bind it to texture 0
+        gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[0]);
+        gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_NEAREST);
+        gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_NEAREST);
+        GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, bitmap, 0);
+
+        //Create Linear Filtered Texture and bind it to texture 1
+        gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[1]);
+        gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
+        gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_LINEAR);
+        GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, bitmap, 0);
+
+        //Create mipmapped textures and bind it to texture 2
+        gl.glBindTexture(GL10.GL_TEXTURE_2D, textures[2]);
+        gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MAG_FILTER, GL10.GL_LINEAR);
+        gl.glTexParameterf(GL10.GL_TEXTURE_2D, GL10.GL_TEXTURE_MIN_FILTER, GL10.GL_LINEAR_MIPMAP_NEAREST);
+        /*
+         * This is a change to the original tutorial, as buildMipMap does not exist anymore
+         * in the Android SDK.
+         * 
+         * We check if the GL context is version 1.1 and generate MipMaps by flag.
+         * Otherwise we call our own buildMipMap implementation
+         */
+        if(gl instanceof GL11) {
+            gl.glTexParameterf(GL11.GL_TEXTURE_2D, GL11.GL_GENERATE_MIPMAP, GL11.GL_TRUE);
+            GLUtils.texImage2D(GL10.GL_TEXTURE_2D, 0, bitmap, 0);
+            
+        //
+        } else {
+            buildMipmap(gl, bitmap);
+        }        
+        
+        //Clean up
+        bitmap.recycle();
+    }
+    
+    /**
+     * Our own MipMap generation implementation.
+     * Scale the original bitmap down, always by factor two,
+     * and set it as new mipmap level.
+     * 
+     * Thanks to Mike Miller (with minor changes)!
+     * 
+     * @param gl - The GL Context
+     * @param bitmap - The bitmap to mipmap
+     */
+    private void buildMipmap(GL10 gl, Bitmap bitmap) {
+        //
+        int level = 0;
+        //
+        int height = bitmap.getHeight();
+        int width = bitmap.getWidth();
+
+        //
+        while(height >= 1 || width >= 1) {
+            //First of all, generate the texture from our bitmap and set it to the according level
+            GLUtils.texImage2D(GL10.GL_TEXTURE_2D, level, bitmap, 0);
+            
+            //
+            if(height == 1 || width == 1) {
+                break;
+            }
+
+            //Increase the mipmap level
+            level++;
+
+            //
+            height /= 2;
+            width /= 2;
+            Bitmap bitmap2 = Bitmap.createScaledBitmap(bitmap, width, height, true);
+            
+            //Clean up
+            bitmap.recycle();
+            bitmap = bitmap2;
+        }
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/nea/nehe/lesson08/Run.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/nea/nehe/lesson08/Run.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/nea/nehe/lesson08/Run.java	(revision 167997)
@@ -0,0 +1,94 @@
+/*
+ * Copyright (C) 2010 0xlab - http://0xlab.org/
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ * Authored by Julian Chu <walkingice@0xlab.org>
+ */
+
+package com.nea.nehe.lesson08;
+
+import com.techain.runtime.Tester;
+
+import android.app.Activity;
+import android.os.Bundle;
+
+/**
+ * The initial Android Activity, setting and initiating
+ * the OpenGL ES Renderer Class @see Lesson08.java
+ * 
+ * @author Savas Ziplies (nea/INsanityDesign)
+ */
+public class Run extends Tester {
+
+    public final static String FullName = "com.nea.nehe.lesson08.Run";
+
+    /** Our own OpenGL View overridden */
+    private Lesson08 lesson08;
+
+    @Override
+    public String getTag() {
+        return "Nehe08";
+    }
+
+    @Override
+    public int sleepBeforeStart() {
+        return 1200; // 1.2 second
+    }
+
+    @Override
+    public int sleepBetweenRound() {
+        return 0; 
+    }
+
+    @Override
+    protected void oneRound() {
+//        lesson08.requestRender();
+    }
+
+    /**
+     * Initiate our @see Lesson08.java,
+     * which is GLSurfaceView and Renderer
+     */
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        
+        //Initiate our Lesson with this Activity Context handed over
+        lesson08 = new Lesson08(this);
+        lesson08.setSpeedAndTester(1, 1, this);
+        //Set the lesson as View to the Activity
+        setContentView(lesson08);
+        startTester();
+    }
+
+    /**
+     * Remember to resume our Lesson
+     */
+    @Override
+    protected void onResume() {
+        super.onResume();
+        lesson08.onResume();
+    }
+
+    /**
+     * Also pause our Lesson
+     */
+    @Override
+    protected void onPause() {
+        super.onPause();
+        lesson08.onPause();
+    }
+
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/ComplexActivity.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/ComplexActivity.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/ComplexActivity.java	(revision 167997)
@@ -0,0 +1,617 @@
+package com.mtbf.runner;
+
+import android.content.Context;
+import android.content.Intent;
+import android.os.Build;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.View;
+import android.widget.Button;
+import android.widget.CheckBox;
+import android.widget.EditText;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.techain.rebootStress.RebootStressActivity;
+import com.techain.runtime.Case;
+import com.techain.runtime.InitCases;
+import com.techain.runtime.R;
+
+import java.util.LinkedList;
+
+public class ComplexActivity extends BaseActivity {
+
+    private static final String ACTION_STOP_SPEAKER_VIBRATE_MIC = "stop_speaker_vibrate_mic";
+
+    private static final int REQUEST_VIDEO_CODE = 0;
+    private static final int REQUEST_PICTURE_CODE = 1;
+    private static final int REQUEST_CAMERA_CODE = 2;
+    private static final int REQUEST_LCD_CODE = 3;
+    private static final int REQUEST_ANIMATION_CODE = 4;
+    private static final int REQUEST_CPU_CODE = 5;
+    private static final int REQUEST_MEMORY_CODE = 6;
+    private static final int REQUEST_SLEEP_CODE = 7;
+    private static final int REQUEST_REBOOT_CODE = 8;
+
+    private CheckBox mSpeCamVibMicCk;
+    private CheckBox mRecPicVibMicCk;
+    private CheckBox mVidVibMicCk;
+    private CheckBox mSdcardCk;
+    private CheckBox mLcdSpeCk;
+    private CheckBox m2d3dRecCk;
+    private CheckBox mSpeVibMicCk;
+    private CheckBox mCpuCk;
+    private CheckBox mEmmcCk;
+    private CheckBox mRebootCk;
+    private CheckBox mMemoryCk;
+    private CheckBox mSleepCk;
+
+    private TextView mCurLoop;
+    private TextView mCpuTv;
+    private TextView mEmmcTv;
+    private TextView mRebootTv;
+    private TextView mSpeCamVibMicTv;
+    private TextView mRecPicVibMicTv;
+    private TextView mVidVibMicTv;
+    private TextView mSdcardTv;
+    private TextView mLcdSpeTv;
+    private TextView mTdSdRecTv;
+    private TextView mSleepTv;
+    private TextView mMemoryTv;
+    private TextView mSpeVibMicTv;
+
+    private InitCases initcases;
+
+    private LinkedList<Case> complexCases;
+    private LinkedList<Case> mMemoryCase;
+    private LinkedList<Case> cpuCase;
+
+    private Button mSelAllBtn;
+    private Button mStartBtn;
+    private EditText mSumLoopEt;
+    private int mTotalLoop;
+
+    private void getComCheckParams() {
+        if (this.mSdcardCk.isChecked())
+            this.mFunctions.log("SDCARD LOOP:" + Parameters.SD_LOOP);
+        if (this.mCpuCk.isChecked())
+            this.mFunctions.log("CPU_DURATION: " + Parameters.CPU_DURATION + " min");
+        if (this.mMemoryCk.isChecked())
+            this.mFunctions.log("MEMORY_DURATION: " + Parameters.MEMORY_DURATION + " min");
+        if (this.mSleepCk.isChecked())
+            this.mFunctions.log("SLEEP_LOOP: " + Parameters.SLEEP_LOOP);
+        if (this.mEmmcCk.isChecked())
+            this.mFunctions.log("EMMC_DURATION: " + Parameters.EMMC_DURATION);
+        if (this.mRebootCk.isChecked())
+            this.mFunctions.log("REBOOT_LOOP: " + Parameters.REBOOT_LOOP);
+    }
+
+    public void initUI() {
+        mSpeCamVibMicCk = (CheckBox) findViewById(R.id.ck_speaker_camera_vibrate_mic);
+        mTestItems.add(this.mSpeCamVibMicCk);
+        mRecPicVibMicCk = (CheckBox) findViewById(R.id.ck_receiver_picture_vibrate_mic);
+        mTestItems.add(this.mRecPicVibMicCk);
+        mVidVibMicCk = (CheckBox) findViewById(R.id.ck_video_vibrate_mic);
+        mTestItems.add(this.mVidVibMicCk);
+        mSdcardCk = (CheckBox) findViewById(R.id.ck_sdcard);
+        mTestItems.add(this.mSdcardCk);
+        mLcdSpeCk = (CheckBox) findViewById(R.id.ck_lcd_speaker);
+        mTestItems.add(this.mLcdSpeCk);
+        m2d3dRecCk = (CheckBox) findViewById(R.id.ck_2d_3d_receiver);
+        mTestItems.add(this.m2d3dRecCk);
+        mSpeVibMicCk = (CheckBox) findViewById(R.id.ck_speaker_vibrate_mic);
+        mTestItems.add(this.mSpeVibMicCk);
+        mCpuCk = (CheckBox) findViewById(R.id.ck_cpu);
+        mTestItems.add(this.mCpuCk);
+        mMemoryCk = (CheckBox) findViewById(R.id.ck_memory);
+        mTestItems.add(this.mMemoryCk);
+        mSleepCk = (CheckBox) findViewById(R.id.ck_sleep);
+        mTestItems.add(this.mSleepCk);
+        mEmmcCk = (CheckBox) findViewById(R.id.ck_emmc);
+        mTestItems.add(this.mEmmcCk);
+        mRebootCk = (CheckBox) findViewById(R.id.ck_reboot);
+        mTestItems.add(this.mRebootCk);
+
+        mSpeCamVibMicTv = (TextView) findViewById(R.id.tv_speaker_camera_vibrate_mic);
+        mRecPicVibMicTv = (TextView) findViewById(R.id.tv_receiver_picture_vibrate_mic);
+        mVidVibMicTv = (TextView) findViewById(R.id.tv_video_vibrate_mic);
+        mSdcardTv = (TextView) findViewById(R.id.tv_sdcard);
+        mLcdSpeTv = (TextView) findViewById(R.id.tv_lcd_speaker);
+        mTdSdRecTv = (TextView) findViewById(R.id.tv_2d_3d_receiver);
+        mSpeVibMicTv = (TextView) findViewById(R.id.tv_speaker_vibrate_mic);
+        mCpuTv = (TextView) findViewById(R.id.tv_cpu);
+        mMemoryTv = (TextView) findViewById(R.id.tv_memory);
+        mSleepTv = (TextView) findViewById(R.id.tv_sleep);
+        mEmmcTv = (TextView) findViewById(R.id.tv_item_emmc);
+        mRebootTv = (TextView) findViewById(R.id.tv_reboot);
+        mSelAllBtn = (Button) findViewById(R.id.Complex_selectAll);
+        mCurLoop = (TextView) findViewById(R.id.curloop);
+        mStartBtn = (Button) findViewById(R.id.btn_start);
+        mSumLoopEt = (EditText) findViewById(R.id.sum_loop);
+
+        this.mStartBtn.setOnClickListener(new complexListener());
+        this.mSelAllBtn.setOnClickListener(new complexListener());
+    }
+
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        Log.i("mtbfdebug", "onActivityResult requestCode== " + requestCode);
+        Log.i("mtbfdebug", "onActivityResult resultCode== " + resultCode);
+        Log.i("mtbfdebug", "onActivityResult data== " + data);
+        Log.i("mtbfdebug", "onActivityResult testCases== " + mTestCases);
+
+        switch (requestCode) {
+            case REQUEST_VIDEO_CODE:
+            case REQUEST_PICTURE_CODE:
+            case REQUEST_CAMERA_CODE:
+            case REQUEST_LCD_CODE:
+                mFunctions.releaseAll();
+            case REQUEST_SLEEP_CODE:
+                synchronized (mWorkThread) {
+                    mWorkThread.notify();
+                }
+                break;
+            case REQUEST_ANIMATION_CODE:
+                mFunctions.releaseAll();
+            case REQUEST_MEMORY_CODE:
+                onCaseActivityResult(requestCode, data, mTestCases);
+                break;
+        }
+    }
+
+    protected void onCreate(Bundle paramBundle) {
+        super.onCreate(paramBundle);
+        setContentView(R.layout.complex);
+
+        mReceiver = new WorkReceiver() {
+            @Override
+            public void onReceive(Context context, Intent intent) {
+                super.onReceive(context, intent);
+                if (ACTION_STOP_SPEAKER_VIBRATE_MIC.equals(action)) {
+                    mFunctions.setRun();
+                    mFunctions.stopMusic();
+                    mFunctions.stopVibrate();
+                    mFunctions.stopRecord();
+                    synchronized (mWorkThread) {
+                        mWorkThread.notify();
+                    }
+                }
+            }
+        };
+        mFilter.addAction(ACTION_STOP_SPEAKER_VIBRATE_MIC);
+        registerReceiver(mReceiver, mFilter);
+
+        mFunctions = new Functions(this, Functions.COMPLEX_MODE);
+        initUI();
+        checkRebootFinished();
+    }
+
+    protected void onDestroy() {
+        unregisterReceiver(mReceiver);
+        super.onDestroy();
+    }
+
+    public void resetText() {
+        this.mSpeCamVibMicTv.setText(R.string.speaker_camera_vibrate_mic);
+        this.mRecPicVibMicTv.setText(R.string.receiver_picture_vibrate_mic);
+        this.mVidVibMicTv.setText(R.string.video_vibrate_mic);
+        this.mSdcardTv.setText(R.string.sdcard);
+        this.mLcdSpeTv.setText(R.string.lcd_speaker);
+        this.mTdSdRecTv.setText(R.string.twod_threed_receiver);
+        this.mSpeVibMicTv.setText(R.string.speaker_vibrate_mic);
+        this.mCpuTv.setText(R.string.cpu);
+        this.mMemoryTv.setText(R.string.memory);
+        this.mSleepTv.setText(R.string.sleep);
+        this.mEmmcTv.setText(R.string.emmc);
+        this.mRebootTv.setText(R.string.reboot);
+    }
+
+    @Override
+    protected void updateLoopText(String text) {
+        resetText();
+        mCurLoop.setText("当前运行" + text + "/" + mTotalLoop);
+    }
+
+    @Override
+    protected void onTestComplete() {
+        mStartBtn.setEnabled(true);
+        mSelAllBtn.setEnabled(true);
+        mSumLoopEt.setEnabled(true);
+        this.enableAllItems(true);
+        mCurLoop.setText("测试完成");
+    }
+
+    class ComplexThread extends WorkThread {
+        ComplexThread() {
+        }
+
+        public void run() {
+            System.out.println("Complex run");
+
+            Functions.log(" ");
+            Functions.log("------------------------------------");
+            Functions.log("PRODUCT: " + Build.PRODUCT);
+            Functions.log("MODEL: " + Build.MODEL);
+            Functions.log("VERSION: " + Build.VERSION.RELEASE);
+            Functions.log("HW: " + Build.HARDWARE);
+            Functions.log("SW: " + Build.DISPLAY);
+            Functions.log("IMEI: " + mFunctions.getImei(ComplexActivity.this));
+            Functions.log("------------------------------------");
+            Functions.log("************************************");
+            Functions.log("已选择的模块和参数");
+            Functions.log("************************************");
+            getComCheckParams();
+            Functions.log("************************************");
+            mTotalLoop = Integer.valueOf(mSumLoopEt.getText().toString());
+
+            for (int i = 0; i < mTotalLoop; i++) {
+                StringBuilder titleinfo = new StringBuilder("external loop: ");
+                titleinfo.append(i + 1);
+                titleinfo.append("/");
+                titleinfo.append(mTotalLoop);
+                titleinfo.append(" begin");
+                Functions.log(titleinfo.toString());
+                sendMessage(MSG_UPDATE_LOOP_TEXT, String.valueOf(i + 1));//hcz
+                initcases = new InitCases();//hcz
+
+                if (mWorkThread.isRun()) {
+                    // Speaker+Camera+Vibrate+Mic
+                    if (mSpeCamVibMicCk.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("Speaker+Camera+Vibrate+Mic 模块开始运行-----------DURATION:");
+                        strb.append(Parameters.SPEAKER_CAMERA_VIBRATE_MIC_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        mFunctions.playMusic(ComplexActivity.this);
+                        mFunctions.ComplexStartVibrate(ComplexActivity.this, Parameters.Vibrate_LOOP);
+                        mFunctions.ComplexStartRecordAudio(Parameters.SPEAKER_CAMERA_VIBRATE_MIC_DURATION * 60 * 1000);
+                        Intent localIntent = new Intent(ComplexActivity.this, CameraTest.class);
+                        startActivityForResult(localIntent, REQUEST_CAMERA_CODE);
+                        new TimeThread(Functions.ACTION_STOP_CAMERA, Parameters.SPEAKER_CAMERA_VIBRATE_MIC_DURATION).start();
+
+                        synchronized (mWorkThread) {
+                            try {
+                                wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+
+                        if (mFunctions.isRecording()) {
+                            mFunctions.stopRecord();
+                        }
+                        Functions.log("Speaker+Camera+Vibrate+Mic 模块完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.tv_speaker_camera_vibrate_mic, "Speaker+Camera+Vibrate+Mic 模块完成");
+                        try {
+                            Thread.sleep(2000);
+                        } catch (InterruptedException e) {
+                            e.printStackTrace();
+                        }
+                    }
+
+                    // Receiver+Picture+Vibrate+Mic
+                    if (mRecPicVibMicCk.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("Receiver+Picture+Vibrate+Mic 模块开始运行-----------DURATION:");
+                        strb.append(Parameters.RECEIVER_PICTURE_VIBRATE_MIC_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        mFunctions.playMusicByReceiver(ComplexActivity.this);
+                        mFunctions.ComplexStartVibrate(ComplexActivity.this, Parameters.Vibrate_LOOP);
+                        mFunctions.ComplexStartRecordAudio(Parameters.RECEIVER_PICTURE_VIBRATE_MIC_DURATION * 60 * 1000);
+                        Intent localIntent = new Intent(ComplexActivity.this, PicActivity.class);
+                        startActivityForResult(localIntent, REQUEST_PICTURE_CODE);
+
+                        new TimeThread(Functions.ACTION_STOP_PICTURE, Parameters.RECEIVER_PICTURE_VIBRATE_MIC_DURATION).start();
+                        synchronized (mWorkThread) {
+                            try {
+                                wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+
+                        if (mFunctions.isRecording()) {
+                            mFunctions.stopRecord();
+                        }
+                        Functions.log("Receiver+Picture+Vibrate+Mic 模块完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.tv_receiver_picture_vibrate_mic, "Receiver+Picture+Vibrate+Mic 模块完成");
+                        try {
+                            Thread.sleep(2000);
+                        } catch (InterruptedException e) {
+                            e.printStackTrace();
+                        }
+                    }
+
+                    //Video+Vibrate+Mic
+                    if (mVidVibMicCk.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("Video+Vibrate+Mic 模块开始运行-----------DURATION:");
+                        strb.append(Parameters.VIDEO_VIBRATE_MIC_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        mFunctions.ComplexStartVibrate(ComplexActivity.this, Parameters.VIDEO_VIBRATE_MIC_DURATION);
+                        mFunctions.ComplexStartRecordAudio(Parameters.VIDEO_VIBRATE_MIC_DURATION * 60 * 1000);
+                        Intent localIntent = new Intent(ComplexActivity.this, SurfaceActivity.class);
+                        startActivityForResult(localIntent, REQUEST_VIDEO_CODE);
+                        new TimeThread(Functions.ACTION_STOP_VIDEO, Parameters.VIDEO_VIBRATE_MIC_DURATION).start();
+                        synchronized (mWorkThread) {
+                            try {
+                                wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        if (mFunctions.isRecording()) {
+                            mFunctions.stopRecord();
+                        }
+                        Functions.log("Video+Vibrate+Mic 模块完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.tv_video_vibrate_mic, "Video+Vibrate+Mic 模块完成");
+                        try {
+                            Thread.sleep(2000);
+                        } catch (InterruptedException e) {
+                            e.printStackTrace();
+                        }
+                    }
+
+                    // SDCARD
+                    if (mSdcardCk.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("SDCARD 模块开始-----------LOOP:");
+                        strb.append(Parameters.SD_LOOP);
+                        Functions.log(strb.toString());
+                        mFunctions.TestSDcard(ComplexActivity.this, Parameters.SD_LOOP);
+
+                        synchronized (mWorkThread) {
+                            try {
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("SD 完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.tv_sdcard, "SD 完成");
+                    }
+
+                    // LCD+SPEAKER
+                    if (mLcdSpeCk.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("LCD+SPEAKER 模块开始运行-----------DURATION:");
+                        strb.append(Parameters.LCD_SPEAKER_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        Intent localIntent = new Intent(ComplexActivity.this, ColorActivity.class);
+                        startActivityForResult(localIntent, REQUEST_LCD_CODE);
+                        new TimeThread(Functions.ACTION_STOP_COLOR, Parameters.LCD_SPEAKER_DURATION).start();
+                        synchronized (mWorkThread) {
+                            try {
+                                wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("LCD+SPEAKER 完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.tv_lcd_speaker, "LCD+SPEAKER 完成");
+                        try {
+                            Thread.sleep(2000);
+                        } catch (InterruptedException e) {
+                            e.printStackTrace();
+                        }
+                    }
+
+                    // 2D+3D+RECEIVER
+                    if (m2d3dRecCk.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("2D+3D+RECEIVER 模块开始运行-----------DURATION:");
+                        strb.append(Parameters.RECEIVER_2D_3D_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        mFunctions.playMusicByReceiver(ComplexActivity.this);
+                        complexCases = initcases.getCases(InitCases.Complex_ITEM);
+                        mTestCases = InitCases.changeList(mTestCases, complexCases);
+                        InitCases.setTime(complexCases, Parameters.RECEIVER_2D_3D_DURATION);
+                        runCase(complexCases, REQUEST_ANIMATION_CODE);
+
+                        synchronized (mWorkThread) {
+                            try {
+                                wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        complexCases.clear();
+                        mTestCases.clear();
+                        Functions.log("2D+3D+RECEIVER 完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.tv_2d_3d_receiver, "2D+3D+RECEIVER 完成");
+                    }
+
+                    // SPEAKER+VIBRATE+MIC
+                    if (mSpeVibMicCk.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("SPEAKER+VIBRATE+MIC 模块开始运行-----------DURATION:");
+                        strb.append(Parameters.SPEAKER_VIBRATE_MIC_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        mFunctions.playMusic(ComplexActivity.this);
+                        mFunctions.ComplexStartVibrate(ComplexActivity.this, 1);
+                        mFunctions.ComplexStartRecordAudio(Parameters.SPEAKER_VIBRATE_MIC_DURATION);
+                        new TimeThread(ACTION_STOP_SPEAKER_VIBRATE_MIC, Parameters.SPEAKER_VIBRATE_MIC_DURATION).start();
+
+                        synchronized (mWorkThread) {
+                            try {
+                                wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        if (mFunctions.isRecording()) {
+                            mFunctions.stopRecord();
+                        }
+                        Functions.log("SPEAKER+VIBRATE+MIC 模块完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.tv_speaker_vibrate_mic, "SPEAKER+VIBRATE+MIC 模块完成");
+                        try {
+                            Thread.sleep(2000);
+                        } catch (InterruptedException e) {
+                            e.printStackTrace();
+                        }
+                    }
+
+                    // CPU
+                    if (mCpuCk.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("CPU模块开始运行-----------DURATION:");
+                        strb.append(Parameters.CPU_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        cpuCase = initcases.getCases(InitCases.CPU_ITEM);
+                        mTestCases = InitCases.changeList(mTestCases, cpuCase);
+                        InitCases.setTime(cpuCase, Parameters.CPU_DURATION);
+                        runCase(cpuCase, REQUEST_CPU_CODE);
+
+                        synchronized (mWorkThread) {
+                            try {
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        cpuCase.clear();
+                        mTestCases.clear();
+                        Functions.log("CPU 完成 ");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.tv_cpu, "CPU 完成 ");
+                    }
+
+                    //Memory
+                    if (mMemoryCk.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("MEMORY 模块开始运行 -----------DURATION:");
+                        strb.append(Parameters.MEMORY_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        mMemoryCase = initcases.getCases(InitCases.MEMORY_ITEM);
+                        mTestCases = InitCases.changeList(mTestCases, mMemoryCase);
+                        InitCases.setTime(mMemoryCase, Parameters.MEMORY_DURATION);
+                        runCase(mMemoryCase, REQUEST_MEMORY_CODE);
+
+                        synchronized (mWorkThread) {
+                            try {
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        mMemoryCase.clear();
+                        mTestCases.clear();
+                        Functions.log("MEMORY 完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.tv_memory, "MEMORY 完成");
+                    }
+
+                    //Sleep
+                    if (mSleepCk.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("SLEEP 模块开始运行-----------LOOP:");
+                        strb.append(Parameters.SLEEP_LOOP);
+                        Functions.log(strb.toString());
+
+                        Intent localIntent = new Intent(ComplexActivity.this, ScreenTest.Controller.class);
+                        startActivityForResult(localIntent, REQUEST_SLEEP_CODE);
+
+                        synchronized (mWorkThread) {
+                            try {
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("SLEEP 完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.tv_sleep, "SLEEP 完成");
+                    }
+
+                    //EMMC
+                    if (mEmmcCk.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("EMMC 模块开始运行-----------DURATION:");
+                        strb.append(Parameters.EMMC_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        mFunctions.TestEmmc(ComplexActivity.this);
+                        new TimeThread(ACTION_STOP_EMMC, Parameters.EMMC_DURATION).start();
+                        synchronized (mWorkThread) {
+                            try {
+                                Functions.log("UI mWorkThread going to wait");
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("EMMC 完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.tv_item_emmc, "EMMC 完成");
+                    }
+
+                    //reboot
+                    if (mRebootCk.isChecked()) {
+
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("reboot 模块开始运行-----------LOOP:");
+                        strb.append(Parameters.REBOOT_LOOP);
+                        Functions.log(strb.toString());
+
+                        Intent localIntent = new Intent(ComplexActivity.this, RebootStressActivity.class);
+                        Bundle bundle = new Bundle();
+                        bundle.putBoolean("rebootstart", true);
+                        localIntent.putExtras(bundle);
+                        startActivityForResult(localIntent, REQUEST_REBOOT_CODE);
+
+                        synchronized (mWorkThread) {
+                            try {
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("reboot 完成");
+                        //sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.tv_reboot, "reboot 完成");
+                    }
+                    mFunctions.WriteCasesLog(mTestCases);
+                    mTestCases.clear();
+                }
+            }
+            mWorkHandler.sendEmptyMessage(MSG_COMPLETE_TEST);
+        }
+    }
+
+    class complexListener
+            implements View.OnClickListener {
+        complexListener() {
+        }
+
+        public void onClick(View paramView) {
+            switch (paramView.getId()) {
+                case R.id.btn_start:
+                    if (mSumLoopEt.getText().toString().equals("")) {
+                        Toast.makeText(ComplexActivity.this, "loop times can not be null", Toast.LENGTH_SHORT).show();
+                        return;
+                    }
+                    mWorkThread = new ComplexThread();//(ComplexActivity.this);
+                    mWorkThread.start();
+                    mStartBtn.setEnabled(false);
+                    mSelAllBtn.setEnabled(false);
+                    mSumLoopEt.setEnabled(false);
+                    enableAllItems(Boolean.valueOf(false));
+                    break;
+                case R.id.Complex_selectAll:
+                    selectAll();
+                    break;
+            }
+        }
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/BaseActivity.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/BaseActivity.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/BaseActivity.java	(revision 167997)
@@ -0,0 +1,338 @@
+package com.mtbf.runner;
+
+import android.app.Activity;
+//import android.app.AlertDialog;
+import android.content.BroadcastReceiver;
+import android.content.Context;
+//import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+//import android.text.InputType;
+import android.util.Log;
+import android.view.KeyEvent;
+//import android.view.LayoutInflater;
+//import android.view.View;
+import android.view.WindowManager;
+import android.widget.CheckBox;
+//import android.widget.EditText;
+//import android.widget.TableLayout;
+//import android.widget.TableRow;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.techain.runtime.Case;
+//import com.techain.runtime.R;
+
+import java.util.ArrayList;
+//import java.util.Iterator;
+//import java.util.LinkedHashMap;
+import java.util.LinkedList;
+import java.util.List;
+//import java.util.Map;
+
+/**
+ * Created by zhouqing.qiu on 2016/7/8.
+ */
+public abstract class BaseActivity extends Activity {
+
+    protected static final String ACTION_STOP_MUSIC = "stop_music";
+    protected static final String ACTION_STOP_EMMC = "stop_emmc";
+
+    public static final int MSG_UPDATE_LOOP_TEXT = 1;
+    public static final int MSG_UPDATE_ITEM_TEXT = 3;
+    public static final int MSG_COMPLETE_TEST = 5;
+
+    protected static final String mOutputFile = Functions.sResultPath + "/0xBenchmark";
+    protected static final String mOutputJSONFile = Functions.sResultPath + "/0xBenchmark.bundle";
+    protected static final String mOutputXMLFile = Functions.sResultPath + "/0xBenchmark.xml";
+
+    protected WorkThread mWorkThread;
+    protected Functions mFunctions;
+    protected WorkHandler mWorkHandler;
+
+    protected WorkReceiver mReceiver;
+    protected IntentFilter mFilter;
+
+    protected List<CheckBox> mTestItems;
+    protected LinkedList<Case> mTestCases;
+
+    protected boolean mIsCompleted;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
+
+        mFilter = new IntentFilter();
+        mFilter.addAction(ACTION_STOP_MUSIC);
+        mFilter.addAction(ACTION_STOP_EMMC);
+
+        mWorkHandler = new WorkHandler();
+        mTestCases = new LinkedList<>();
+        mTestItems = new ArrayList<>();
+    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+        mFunctions.log("退出测试");
+        Log.d("mtbfdebug", "SingleActivity->onDestroy");
+        if (!mTestItems.isEmpty()) {
+            mTestItems.clear();
+        }
+        if (mWorkThread != null) {
+            mWorkThread.stopThread();
+        }
+        if (mFunctions.isRun) {
+            mFunctions.setRun();
+            mFunctions.releaseAll();
+        }
+    }
+
+    protected void sendMessage(int what, String text) {
+        sendMessage(what, -1, text);
+    }
+
+    protected void sendMessage(int what, int id, String text) {
+        Message localMessage = Message.obtain();
+        localMessage.what = what;
+        Bundle localBundle = new Bundle();
+        localBundle.putInt("id", id);
+        localBundle.putString("content", text);
+        localMessage.setData(localBundle);
+        mWorkHandler.sendMessage(localMessage);
+    }
+
+    protected void selectAll() {
+        for (int i = 0; i < mTestItems.size(); i++) {
+            mTestItems.get(i).setChecked(true);
+        }
+    }
+
+    protected void enableAllItems(boolean enable) {
+        for (int i = 0; i < mTestItems.size(); i++) {
+            mTestItems.get(i).setEnabled(enable);
+        }
+    }
+
+    protected void checkRebootFinished() {
+        if (getIntent().getBooleanExtra("rebootfinish", false)) {
+            Functions.log("reboot 完成");
+            Functions.log("测试完成");
+            mIsCompleted = true;
+            mWorkHandler.sendEmptyMessage(MSG_COMPLETE_TEST);
+            Functions.log("工具运行完成");
+        }
+    }
+
+    protected void onCaseActivityResult(int requestCode, Intent data, LinkedList<Case> cases) {
+        if (data == null) {
+            Log.i("mtbfdebug", "oooops....Intent is null");
+            synchronized (mWorkThread) {
+                mWorkThread.notify();
+                return;
+            }
+        }
+        for (int k = 0; k < this.mTestCases.size(); k++) {
+            Case myCase = mTestCases.get(k);
+            if (myCase.realize(data)) {
+                myCase.parseIntent(data);
+                break;
+            }
+        }
+        runCase(cases, requestCode);
+    }
+
+    protected void runCase(final LinkedList<Case> list, int paramInt) {
+        Case pointer = null;
+        boolean finish = true;
+        for (int i = 0; i < list.size(); i++) {
+            pointer = list.get(i);
+            if (!pointer.isFinish()) {
+                finish = false;
+                break;
+            }
+        }
+        if (finish) {
+            //mBannerInfo.setText("Benchmarking complete.\nClick Show to upload.\nUploaded results:\nhttp://0xbenchmark.appspot.com");
+            String result = mFunctions.getResult(list);
+            Log.d("mtbfdebug", "result: " + result);
+            Log.d("mtbfdebug", "mOutputFile: " + mOutputFile);
+
+            mFunctions.writeResult(mOutputFile, result, BaseActivity.this);
+            //final ProgressDialog dialogGetXml = new ProgressDialog(this).show(this, "Generating XML Report", "Please wait...", true, false);
+
+            synchronized (this.mWorkThread) {
+                this.mWorkThread.notify(); // go next
+                new Thread() {
+                    public void run() {
+                        String jsonResult = mFunctions.getJSONResult(list);
+                        String xmlResult = mFunctions.getXMLResult(list);
+                        Log.d("mtbfdebug", "XML: " + xmlResult);
+                        Log.d("mtbfdebug", "mOutputXMLFile: " + mOutputXMLFile);
+                        mFunctions.writeResult(mOutputXMLFile, xmlResult, BaseActivity.this);
+                        Log.d("mtbfdebug", "JSON: " + jsonResult);
+                        Log.d("mtbfdebug", "mOutputJSONFile: " + mOutputJSONFile);
+                        mFunctions.writeResult(mOutputJSONFile, jsonResult, BaseActivity.this);
+                        //dialogGetXml.dismiss();
+                    }
+                }.start();
+            }
+        } else {
+            Intent intent = pointer.generateIntent();
+            if (intent != null) {
+                startActivityForResult(intent, paramInt);
+            }
+        }
+    }
+
+    protected abstract void updateLoopText(String text);
+
+    protected abstract void onTestComplete();
+
+    public boolean onKeyUp(int keyCode, KeyEvent keyEvent) {
+        if ((keyCode == KeyEvent.KEYCODE_BACK) || (keyCode == KeyEvent.KEYCODE_HOME)) {
+            this.mFunctions.log("手动退出测试");
+            if (mWorkThread != null)
+                mWorkThread.stopThread();
+            this.mFunctions.releaseAll();
+        }
+        return super.onKeyUp(keyCode, keyEvent);
+    }
+
+    /*public boolean onCreateOptionsMenu(Menu paramMenu) {
+        paramMenu.add(0, 0, 0, "编辑参数").setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {
+            public boolean onMenuItemClick(MenuItem paramAnonymousMenuItem) {
+                if (selectAll.isEnabled())
+                    newAlertDialog();
+                return false;
+            }
+        });
+        return super.onCreateOptionsMenu(paramMenu);
+    }*/
+
+    /*protected void newAlertDialog() {
+        View localView = LayoutInflater.from(this).inflate(R.layout.paratable, null);
+        final Map localMap = createTable(localView);
+        AlertDialog.Builder localBuilder = new AlertDialog.Builder(this);
+        localBuilder.setTitle("参数编辑");
+        localBuilder.setView(localView);
+        localBuilder.setPositiveButton("确认", new DialogInterface.OnClickListener() {
+            public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt) {
+                String str = mFunctions.IsParametersTypeRight(localMap);
+                if (str != "") {
+                    sendMessage(6, str);
+                    return;
+                }
+                mFunctions.modifyParameters(localMap, 1);
+            }
+        });
+        localBuilder.setNegativeButton("取消", new DialogInterface.OnClickListener() {
+            public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt) {
+            }
+        });
+        localBuilder.show();
+    }*/
+
+    /*protected Map<String, EditText> createTable(View paramView) {
+        LinkedHashMap localLinkedHashMap = new LinkedHashMap();
+        TableLayout localTableLayout = (TableLayout) paramView.findViewById(R.id.table);
+        localTableLayout.setStretchAllColumns(true);
+        Iterator localIterator = this.mFunctions.paramsMap.entrySet().iterator();
+        while (localIterator.hasNext()) {
+            Map.Entry localEntry = (Map.Entry) localIterator.next();
+            TableRow localTableRow = new TableRow(this);
+            localTableRow.setLayoutParams(new TableRow.LayoutParams(-1, -2));
+            TextView localTextView = new TextView(this);
+            localTextView.setText((CharSequence) localEntry.getKey());
+            localTextView.setLayoutParams(new TableRow.LayoutParams(70, 70));
+            localTextView.setTextSize(15.0F);
+            localTextView.setGravity(17);
+            EditText localEditText = new EditText(this);
+            localEditText.setLayoutParams(new TableRow.LayoutParams(100, -2));
+            localEditText.setText((CharSequence) localEntry.getValue());
+            localEditText.setTextSize(15.0F);
+            localEditText.setGravity(17);
+            localEditText.setInputType(InputType.TYPE_CLASS_NUMBER);
+            localTableRow.addView(localTextView);
+            localTableRow.addView(localEditText);
+            localTableLayout.addView(localTableRow, new TableLayout.LayoutParams(-1, -2));
+            localLinkedHashMap.put(localEntry.getKey(), localEditText);
+        }
+        return localLinkedHashMap;
+    }*/
+
+    class WorkHandler extends Handler {
+        public void handleMessage(Message paramMessage) {
+            String text;
+            switch (paramMessage.what) {
+                case MSG_UPDATE_LOOP_TEXT:
+                    text = paramMessage.getData().getString("content");
+                    updateLoopText(text);
+                    break;
+                case MSG_UPDATE_ITEM_TEXT:
+                    Bundle localBundle = paramMessage.getData();
+                    int id = localBundle.getInt("id");
+                    text = localBundle.getString("content");
+                    TextView item = (TextView) findViewById(id);
+                    if (item != null) {
+                        item.setText(text);
+                    }
+                    break;
+                case MSG_COMPLETE_TEST:
+                    onTestComplete();
+                    break;
+                case 6:
+                    text = paramMessage.getData().getString("content");
+                    Toast.makeText(BaseActivity.this, text, Toast.LENGTH_SHORT).show();
+                    break;
+            }
+        }
+    }
+
+    class TimeThread extends Thread {
+        private String action;
+        private int time;
+
+        public TimeThread(String paramInt, int arg3) {
+            this.action = paramInt;
+            this.time = (60 * 1000 * arg3);
+        }
+
+        public void run() {
+            super.run();
+            Log.d("mtbfdebug", "sleep " + String.valueOf(this.time));
+            mFunctions.sleep(this.time);
+            if (this.action != null) {
+                Intent localIntent = new Intent(this.action);
+                sendBroadcast(localIntent);
+                Log.d("mtbfdebug", "send Broadcast " + this.action.toString());
+            }
+        }
+    }
+
+    class WorkReceiver extends BroadcastReceiver {
+        protected String action;
+
+        @Override
+        public void onReceive(Context context, Intent intent) {
+            action = intent.getAction();
+            if (ACTION_STOP_MUSIC.equals(action)) {
+                mFunctions.setRun();
+                mFunctions.stopMusic();
+                synchronized (mWorkThread) {
+                    mWorkThread.notify();
+                }
+            } else if (ACTION_STOP_EMMC.equals(action)) {
+                mFunctions.setRun();
+                mFunctions.stopEmmc();
+                synchronized (mWorkThread) {
+                    mWorkThread.notify();
+                }
+            }
+        }
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/IDev.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/IDev.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/IDev.java	(revision 167997)
@@ -0,0 +1,13 @@
+package com.mtbf.runner;
+
+abstract interface IDev
+{
+  public abstract Dev_MountInfo.DevInfo getExternalInfo();
+
+  public abstract Dev_MountInfo.DevInfo getInternalInfo();
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.mtbf.runner.IDev
+ * JD-Core Version:    0.6.2
+ */
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/CameraTest.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/CameraTest.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/CameraTest.java	(revision 167997)
@@ -0,0 +1,944 @@
+package com.mtbf.runner;
+
+import java.io.BufferedOutputStream;
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.PrintWriter;
+import java.io.StringWriter;
+import java.text.SimpleDateFormat;
+
+import android.app.Activity;
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.hardware.Camera;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.KeyEvent;
+import android.view.SurfaceHolder;
+import android.view.SurfaceView;
+import android.view.WindowManager;
+import android.widget.TextView;
+
+import java.util.Date;
+import java.util.List;
+
+import com.techain.runtime.R;
+
+import android.hardware.Camera.Parameters;
+import android.hardware.Camera.PictureCallback;
+import android.hardware.Camera.Size;
+
+
+public class CameraTest extends Activity {
+    //# static fields
+    private static String RESULT_FOLDER;
+
+    private static String _state;
+    public static CameraTest cameratest;
+
+    public static CameraThread camthread;
+
+    private static String datestring;
+
+    public static SimpleDateFormat formatter1;
+
+    public static String interval;
+
+    private static boolean isRun;
+
+    public static int loop;//:I
+
+    public static SurfaceHolder mSurfaceHolder;
+
+    public static SurfaceView mSurfaceView;
+
+    private static String path;
+
+    private static TextView tStatus;
+    private int effectSize;
+    public String folderpath;
+
+    Functions functions;
+
+    private String imageName;
+
+    int mLoop;
+
+    private boolean mIsReleased;
+
+    CameraTest instance;
+
+    private Camera mCamera;
+
+    private Parameters parameters;
+
+    private boolean pictureTaken;
+
+    private String pstr;
+
+    private String pstr1;
+
+    // BroadcastReceiver receiver;
+    private int supportedSize;
+    private List<Size> resolutions;
+    private List<String> focusMode;
+    private List<String> flashMode;
+    private List<String> effect;
+    private List<String> antiBanding;
+    private List<String> sceneMode;
+    private List<String> whiteBalance;
+
+    private Runnable mshowstatusRunnable = new Runnable() {
+        public void run() {
+            tStatus.setText(_state);
+        }
+    };
+
+    static void CameraTest() {
+    }
+
+    private void beginSnapShot() {
+        Log.d("mtbfdebug", "CameraTest->beginSnapShot begin");
+        parameters.setPictureFormat(0x100);
+        mCamera.setParameters(parameters);
+        try {
+            mCamera.setPreviewDisplay(mSurfaceHolder);
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        mCamera.startPreview();
+        try {
+            Thread.sleep(0x7d0);
+        } catch (InterruptedException e) {
+            e.printStackTrace();
+        }
+        pictureTaken = true;
+        takePicture();
+        Log.d("mtbfdebug", "CameraTest->beginSnapShot end");
+    }
+
+    private static void deleteDir(File dir) {//(Ljava/io/File;)V
+        File[] fileList = null;
+        File[] arr;
+        File file;
+        int len;
+        if (dir.isDirectory()) {
+            fileList = dir.listFiles();
+
+        }
+        len = fileList.length;
+        for (int i = 0; i < len; i++) {
+            file = fileList[i];
+            if (file.isDirectory()) {
+                deleteDir(file);
+
+            } else {
+                file.delete();
+            }
+        }
+    }
+
+    public static String getDateString() {//()Ljava/lang/String;
+        String dateString;
+        Date currentTime = new Date();
+        dateString = formatter1.format(currentTime);
+        return dateString;
+    }
+
+    protected static String getIndexStr(int index, int loop) {//(II)Ljava/lang/String;
+        StringBuilder strb = new StringBuilder();
+        strb.append("Loop: ");
+        index = index + 1;
+        strb.append(index);
+        return strb.toString();
+    }
+
+    private Size getMaxSize(List<Size> sizes) {
+        Size size = sizes.get(0);
+        for (int i = 0; i < sizes.size(); i++) {
+            Size currntsize = sizes.get(i);
+            if (size.height < currntsize.height) {
+                size = currntsize;
+            }
+        }
+        StringBuilder strb = new StringBuilder();
+        strb.append("Resolution Max Width ");
+        strb.append(size.width);
+        strb.append("Max Height ");
+        strb.append(size.height);
+        Log.d("mtbfdebug", strb.toString());
+
+        return size;
+    }
+
+    public static SurfaceView getSurfaceView() {
+        return mSurfaceView;
+    }
+
+    private void handleStop() {
+        Log.d("mtbfdebug", "CameratTest->handleStop begin");
+        releaseCamera();
+        if (ChooseActivity.IsComplexModel()) {
+            functions.stopMusic();
+        } else if (ChooseActivity.IsRuninModel()) {
+            functions.stopVibrate();
+        } else {
+            functions.setRun();
+        }
+        setResult(2);
+        finish();
+    }
+
+    private void persistImage(byte[] data) {//([B)V
+        Log.d("mtbfdebug", "CamaraTest->persistImage begin");
+        Log.d("mtbfdebug", "CamaraTest->persistImage data == " + data);
+        Log.d("mtbfdebug", "CamaraTest->image name ==" + imageName);
+
+        File file = new File(imageName);
+        if (!file.exists()) {
+            try {
+                file.createNewFile();
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+        }
+        BufferedOutputStream os = null;
+        try {
+            os = new BufferedOutputStream(new FileOutputStream(file));
+            os.write(data, 0, data.length);
+            os.flush();
+        } catch (FileNotFoundException e1) {
+            e1.printStackTrace();
+        } catch (IOException e) {
+            e.printStackTrace();
+        } finally {
+            if (os != null) {
+                try {
+                    os.close();
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+            }
+        }
+        Log.d("mtbfdebug", "CamaraTest->persistImage end");
+    }
+
+    private void releaseCamera() {//V
+        Log.d("mtbfdebug", "CameraTest->releaseCamera begin");
+        if (mCamera != null) {
+            Log.d("mtbfdebug", "CameraTest->stopPreview()");
+            if (!mIsReleased) {
+                mCamera.stopPreview();
+            }
+            Log.d("mtbfdebug", "CameraTest->mCamera.release()");
+            mCamera.release();
+            mIsReleased = true;
+            Log.d("mtbfdebug", "CameraTest->releaseCamera end");
+        }
+    }
+
+    public boolean initialCamera() {
+        if (mCamera != null) {
+            releaseCamera();
+        }
+        Log.d("mtbfdebug", "CameraTest->Camera.open()");
+        mCamera = Camera.open(0);
+        mCamera.setDisplayOrientation(90);
+        Log.d("mtbfdebug", "CameraTest->mCamera.getParameters()");
+        parameters = mCamera.getParameters();
+        mSurfaceHolder = getSurfaceView().getHolder();
+        whiteBalance = parameters.getSupportedWhiteBalance();
+        sceneMode = parameters.getSupportedSceneModes();
+        antiBanding = parameters.getSupportedAntibanding();
+        focusMode = parameters.getSupportedFocusModes();
+        flashMode = parameters.getSupportedFlashModes();
+        effect = parameters.getSupportedColorEffects();
+        resolutions = parameters.getSupportedPictureSizes();
+        supportedSize = resolutions.size();
+
+        Log.d("mtbfdebug", "CameraTest->initialCamera() end");
+        return true;
+    }
+
+    public void onCreate(Bundle savedInstanceState) {//(Landroid/os/Bundle;)V
+        super.onCreate(savedInstanceState);
+        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
+
+        setContentView(R.layout.cameratest);
+        tStatus = (TextView) findViewById(R.id.Status);
+        mSurfaceView = (SurfaceView) findViewById(R.id.surface_view);
+        loop = 0;
+        path = Functions.getRootPath();
+        Log.d("mtbfdebug", "CameraTest path== " + path);
+        StringBuilder strb = new StringBuilder();
+        strb.append(path);
+        strb.append("/runin/CameraTest/");
+        RESULT_FOLDER = strb.toString();
+        formatter1 = new SimpleDateFormat("yyyyMMdd_HHmmss");
+        datestring = "";
+        isRun = true;
+
+        if (ChooseActivity.IsComplexModel()) {
+            functions = new Functions(this, Functions.COMPLEX_MODE);
+        } else if (ChooseActivity.IsRuninModel()) {
+            functions = new Functions(this, Functions.RUNIN_MODE);
+        } else {
+            functions = new Functions(this);
+        }
+        isRun = true;
+        IntentFilter filter = new IntentFilter(Functions.ACTION_STOP_CAMERA);
+        registerReceiver(this.receiver, filter);
+        try {
+            Thread.sleep(0x7d0);
+        } catch (InterruptedException e) {
+            e.printStackTrace();
+        }
+        camthread = new CameraThread();
+        camthread.start();
+    }
+
+    protected void onDestroy() {
+        super.onDestroy();
+        Log.d("mtbfdebug", "CameraTest->onDestroy");
+        unregisterReceiver(receiver);
+        if (mCamera != null) {
+            releaseCamera();
+        }
+    }
+
+    public boolean onKeyDown(int keyCode, KeyEvent event) {
+        if ((keyCode == KeyEvent.KEYCODE_BACK) || keyCode == KeyEvent.KEYCODE_HOME) {
+            isRun = false;
+            handleStop();
+            mCamera = null;
+            Log.d("mtbfdebug", "CameratTest->onKeyDown");
+        }
+        return super.onKeyDown(keyCode, event);
+    }
+
+    protected void onStart() {
+        super.onStart();
+    }
+
+    public void setStatus(String s) {
+        _state = s;
+        runOnUiThread(mshowstatusRunnable);
+    }
+
+    public void takePicture() {
+        if (mCamera == null) {
+            return;
+        }
+        Log.d("mtbfdebug", "CamaraTest->takePicture() begin");
+        try {
+            mCamera.takePicture(null, null, new JPGPictureCallback());
+            Log.d("mtbfdebug", "CamaraTest->takePicture() end");
+        } catch (RuntimeException e) {
+            Log.d("mtbfdebug", "CameraTest->takePicture() exception");
+            Functions.log("Camera 拍照异常");
+            e.printStackTrace();
+        }
+    }
+
+    class JPGPictureCallback implements PictureCallback {
+        public void onPictureTaken(byte[] data, Camera camera) {
+            persistImage(data);
+            pictureTaken = false;
+        }
+    }
+
+    public void takelog(Exception e, String s) {
+        StringWriter sw = new StringWriter();
+        e.printStackTrace(new PrintWriter(sw));
+        StringBuilder strb = new StringBuilder();
+        strb.append(" ");
+        strb.append(sw.toString());
+        Log.d("mtbfdebug", strb.toString());
+    }
+
+    public void testAntiBanding() {
+
+        StringBuilder strb = new StringBuilder();
+        String picPath;
+        strb.append(RESULT_FOLDER);
+        strb.append("AntiBanding/");
+
+        picPath = strb.toString();
+
+        File dir = new File(picPath);
+        if (!dir.exists()) {
+            dir.mkdir();
+        }
+        Log.d("mtbfdebug", "testAntiBanding begin");
+
+        StringBuilder strb2;
+        StringBuilder strb3;
+        StringBuilder strb4;
+        if (antiBanding != null) {
+            for (int j = 0; j < antiBanding.size(); j++) {
+                if (!isRun) {
+                    return;
+                }
+                strb2 = new StringBuilder();
+                strb3 = new StringBuilder();
+                strb4 = new StringBuilder();
+
+                strb2.append("[");
+                strb2.append(j + 1);
+                strb2.append("/");
+                strb2.append(antiBanding.size());
+                strb2.append("]");
+                pstr1 = strb2.toString();
+                parameters.setAntibanding(antiBanding.get(j));
+
+                strb3.append(picPath);
+                strb3.append("antiBanding_");
+                strb3.append(antiBanding.get(j));
+                strb3.append("_");
+
+                strb3.append(j + 1);
+
+                strb3.append(".jpg");
+                imageName = strb3.toString();
+                Log.d("mtbfdebug", "setAntibanding " + antiBanding.get(j));
+                Log.d("mtbfdebug", "testAntibanding imageName == " + imageName);
+
+                strb4.append(pstr);
+                strb4.append(" takePicture with antiBanding ");
+                strb4.append(pstr1);
+                strb4.append(": ");
+                strb4.append(imageName);
+                setStatus(strb4.toString());
+                beginSnapShot();
+
+                while (pictureTaken) {
+                    try {
+                        Thread.sleep(0x3e8);
+                    } catch (InterruptedException e) {
+                        e.printStackTrace();
+                    }
+                }
+                imageName = "";
+            }
+        } else {
+            setStatus("antiBanding is NULL");
+        }
+        Log.d("mtbfdebug", "testAntiBanding end ");
+    }
+
+    public void testEffect() {
+        StringBuilder strb = new StringBuilder();
+        String picpath;
+        strb.append(RESULT_FOLDER);
+        strb.append("Effect/");
+        picpath = strb.toString();
+        File dir = new File(picpath);
+        if (!dir.exists()) {
+            dir.mkdir();
+        }
+        Log.d("mtbfdebug", "testEffect begin");
+        StringBuilder strb2;
+        StringBuilder strb3;
+        StringBuilder strb4;
+        if (effect != null) {
+            for (int j = 0; j < effect.size(); j++) {
+                if (!isRun) {
+                    return;
+                }
+                strb2 = new StringBuilder();
+                strb3 = new StringBuilder();
+                strb4 = new StringBuilder();
+
+                strb2.append("[");
+                strb2.append(j + 1);
+                strb2.append("/");
+                strb2.append(effect.size());
+                strb2.append("]");
+                pstr1 = strb2.toString();
+                parameters.setColorEffect((String) effect.get(j));
+
+                strb3.append(picpath);
+                strb3.append("effect_");
+                strb3.append(effect.get(j));
+                strb3.append("_");
+                strb3.append(j + 1);
+                strb3.append(".jpg");
+                imageName = strb3.toString();
+                Log.d("mtbfdebug", "setColorEffect " + effect.get(j));
+                Log.d("mtbfdebug", "testColorEffect imageName == " + imageName);
+
+                strb4.append(pstr);
+                strb4.append(" takePicture with effect ");
+                strb4.append(pstr1);
+                strb4.append(": ");
+                strb4.append(imageName);
+                setStatus(strb4.toString());
+                beginSnapShot();
+
+                while (pictureTaken) {
+                    try {
+                        Thread.sleep(0x7d0);
+                    } catch (InterruptedException e) {
+                        e.printStackTrace();
+                    }
+                }
+                imageName = "";
+            }
+        } else {
+            setStatus("Effect is NULL!");
+        }
+        Log.d("mtbfdebug", "testEffect end ");
+    }
+
+    public void testFlashMode() {//V
+        StringBuilder strb = new StringBuilder();
+        String picpath;
+        strb.append(RESULT_FOLDER);
+        strb.append("FlashMode/");
+        picpath = strb.toString();
+        File dir = new File(picpath);
+        if (!dir.exists()) {
+            dir.mkdir();
+        }
+        Log.d("mtbfdebug", "testFlashMode begin");
+        StringBuilder strb2;//= new StringBuilder();
+        StringBuilder strb3;//= new StringBuilder();
+        StringBuilder strb4;// =new StringBuilder();
+        if (flashMode != null) {
+            for (int j = 0; j < flashMode.size(); j++) {
+                if (!isRun) {
+                    return;
+                }
+                strb2 = new StringBuilder();
+                strb3 = new StringBuilder();
+                strb4 = new StringBuilder();
+
+                strb2.append("[");
+                strb2.append(j + 1);
+                strb2.append("/");
+                strb2.append(flashMode.size());
+                strb2.append("]");
+                pstr1 = strb2.toString();
+                parameters.setFlashMode((String) flashMode.get(j));
+
+                strb3.append(picpath);
+                strb3.append("flashMode_");
+                strb3.append(flashMode.get(j));
+                strb3.append("_");
+                strb3.append(j + 1);
+                strb3.append(".jpg");
+                imageName = strb3.toString();
+                Log.d("mtbfdebug", "setFlashMode " + flashMode.get(j));
+                Log.d("mtbfdebug", "testFlashMode imageName == " + imageName);
+
+                strb4.append(pstr);
+                strb4.append(" takePicture with flashMode ");
+                strb4.append(pstr1);
+                strb4.append(": ");
+                strb4.append(imageName);
+                setStatus(strb4.toString());
+                beginSnapShot();
+
+                while (pictureTaken) {
+                    try {
+                        Thread.sleep(0x7d0);
+                    } catch (InterruptedException e) {
+                        // TODO Auto-generated catch block
+                        e.printStackTrace();
+                    }
+                }
+                imageName = "";
+            }
+        } else {
+            setStatus("flashMode is null");
+        }
+        Log.d("mtbfdebug", "testFlashMode end ");
+    }
+
+    public void testFocusMode() {
+        StringBuilder strb = new StringBuilder();
+        String picpath;
+        strb.append(RESULT_FOLDER);
+        strb.append("FocusMode/");
+        picpath = strb.toString();
+        File dir = new File(picpath);
+        if (!dir.exists()) {
+            dir.mkdir();
+        }
+        Log.d("mtbfdebug", "testFocusMode begin");
+        StringBuilder strb2;//= new StringBuilder();
+        StringBuilder strb3;//= new StringBuilder();
+        StringBuilder strb4;// =new StringBuilder();
+        if (focusMode != null) {
+            for (int j = 0; j < focusMode.size(); j++) {
+                if (!isRun) {
+                    return;
+                }
+                strb2 = new StringBuilder();
+                strb3 = new StringBuilder();
+                strb4 = new StringBuilder();
+
+                strb2.append("[");
+                strb2.append(j + 1);
+                strb2.append("/");
+                strb2.append(focusMode.size());
+                strb2.append("]");
+                pstr1 = strb2.toString();
+                parameters.setFocusMode((String) focusMode.get(j));
+
+
+                strb3.append(picpath);
+                strb3.append("focusMode_");
+                strb3.append(focusMode.get(j));
+                strb3.append("_");
+                strb3.append(j + 1);
+
+                strb3.append(".jpg");
+                imageName = strb3.toString();
+                Log.d("mtbfdebug", "setFocusMode " + focusMode.get(j));
+                Log.d("mtbfdebug", "testFocusMode imageName == " + imageName);
+
+                strb4.append(pstr);
+                strb4.append(" takePicture with focusMode ");
+                strb4.append(pstr1);
+                strb4.append(": ");
+                strb4.append(imageName);
+                setStatus(strb4.toString());
+                beginSnapShot();
+
+                while (pictureTaken) {
+                    try {
+                        Thread.sleep(0x7d0);
+                    } catch (InterruptedException e) {
+                        // TODO Auto-generated catch block
+                        e.printStackTrace();
+                    }
+                }
+                imageName = "";
+            }
+        } else {
+            setStatus("FocusMode is NULL!");
+        }
+        Log.d("mtbfdebug", "testFocusMode end ");
+    }
+
+    public void testResolution() {
+        StringBuilder strb = new StringBuilder();
+        String picpath;
+        strb.append(RESULT_FOLDER);
+        strb.append("Resolution/");
+        picpath = strb.toString();
+        File dir = new File(picpath);
+        if (!dir.exists()) {
+            dir.mkdir();
+        }
+        Log.d("mtbfdebug", "testResolution begin");
+        StringBuilder strb2;//= new StringBuilder();
+        StringBuilder strb3;//= new StringBuilder();
+        StringBuilder strb4;// =new StringBuilder();
+
+        Log.d("mtbfdebug", "testResolution supportedSize == " + supportedSize);
+        Size currsize;
+        if (resolutions != null) {
+            for (int j = 0; j < supportedSize; j++) {
+                if (!isRun) {
+                    return;
+                }
+                strb2 = new StringBuilder();
+                strb3 = new StringBuilder();
+                strb4 = new StringBuilder();
+
+                strb2.append("[");
+                strb2.append(j + 1);
+                strb2.append("/");
+                strb2.append(supportedSize);
+                strb2.append("]");
+                pstr1 = strb2.toString();
+
+                currsize = resolutions.get(j);//getMaxSize(resolutions);
+
+                Log.d("mtbfdebug", "testResolution currsize.width == " + currsize.width);
+                Log.d("mtbfdebug", "testResolution currsize.height == " + currsize.height);
+
+                parameters.setPictureSize(currsize.width, currsize.height);
+
+                strb3.append(picpath);
+                strb3.append("resolution_");
+                strb3.append(currsize.width);
+                strb3.append("_");
+                strb3.append(currsize.height);
+                strb3.append("_");
+                strb3.append(j + 1);
+                strb3.append(".jpg");
+                imageName = strb3.toString();
+                Log.d("mtbfdebug", "testResolution imageName== " + imageName);
+
+                strb4.append(pstr);
+                strb4.append(" takePicture with resolution ");
+                strb4.append(pstr1);
+                strb4.append(": ");
+                strb4.append(imageName);
+                setStatus(strb4.toString());
+                beginSnapShot();
+
+                while (pictureTaken) {
+                    try {
+                        Thread.sleep(0x7d0);
+                    } catch (InterruptedException e) {
+                        // TODO Auto-generated catch block
+                        e.printStackTrace();
+                    }
+                }
+                imageName = "";
+            }
+        } else {
+            setStatus("Resolution is NULL!");
+        }
+        Log.d("mtbfdebug", "testResolution end ");
+    }
+
+    public void testSceneMode() {//V
+        StringBuilder strb = new StringBuilder();
+        String picpath;
+        strb.append(RESULT_FOLDER);
+        strb.append("SceneMode/");
+        picpath = strb.toString();
+        File dir = new File(picpath);
+        if (!dir.exists()) {
+            dir.mkdir();
+        }
+        Log.d("mtbfdebug", "testSceneMode begin");
+        StringBuilder strb2;//= new StringBuilder();
+        StringBuilder strb3;//= new StringBuilder();
+        StringBuilder strb4;// =new StringBuilder();
+
+        if (sceneMode != null) {
+            for (int j = 0; j < sceneMode.size(); j++) {
+                if (!isRun) {
+                    return;
+                }
+                strb2 = new StringBuilder();
+                strb3 = new StringBuilder();
+                strb4 = new StringBuilder();
+
+                strb2.append("[");
+                strb2.append(j + 1);
+                strb2.append("/");
+                strb2.append(sceneMode.size());
+                strb2.append("]");
+                pstr1 = strb2.toString();
+                parameters.setSceneMode((String) sceneMode.get(j));
+
+                strb3.append(picpath);
+                strb3.append("sceneMode_");
+                strb3.append(sceneMode.get(j));
+                strb3.append("_");
+                strb3.append(j + 1);
+                strb3.append(".jpg");
+                imageName = strb3.toString();
+                Log.d("mtbfdebug", "tsetSceneMode " + sceneMode.get(j));
+                Log.d("mtbfdebug", "testSceneMode imageName == " + imageName);
+
+                strb4.append(pstr);
+                strb4.append(" takePicture with SceneMode ");
+                strb4.append(pstr1);
+                strb4.append(": ");
+                strb4.append(imageName);
+                setStatus(strb4.toString());
+                beginSnapShot();
+
+                while (pictureTaken) {
+                    try {
+                        Thread.sleep(0x7d0);
+                    } catch (InterruptedException e) {
+                        // TODO Auto-generated catch block
+                        e.printStackTrace();
+                    }
+                }
+                imageName = "";
+            }
+        } else {
+            setStatus("SceneMode is NULL!");
+        }
+        Log.d("mtbfdebug", "testSceneMode end ");
+    }
+
+    public void testWhiteBalance() {//V
+        StringBuilder strb = new StringBuilder();
+        String picpath;
+        strb.append(RESULT_FOLDER);
+        strb.append("WhiteBalance/");
+        picpath = strb.toString();
+        File dir = new File(picpath);
+        if (!dir.exists()) {
+            dir.mkdir();
+        }
+        Log.d("mtbfdebug", "testWhiteBalance begin");
+        StringBuilder strb2;//= new StringBuilder();
+        StringBuilder strb3;//= new StringBuilder();
+        StringBuilder strb4;// =new StringBuilder();
+
+        if (sceneMode != null) {
+            for (int j = 0; j < whiteBalance.size(); j++) {
+                if (!isRun) {
+                    return;
+                }
+                strb2 = new StringBuilder();
+                strb3 = new StringBuilder();
+                strb4 = new StringBuilder();
+
+                strb2.append("[");
+                strb2.append(j + 1);
+                strb2.append("/");
+                strb2.append(whiteBalance.size());
+                strb2.append("]");
+                pstr1 = strb2.toString();
+                parameters.setWhiteBalance((String) whiteBalance.get(j));
+
+                strb3.append(picpath);
+                strb3.append("whiteBalance_");
+                strb3.append(whiteBalance.get(j));
+                strb3.append("_");
+                strb3.append(j + 1);
+                strb3.append(".jpg");
+                imageName = strb3.toString();
+                Log.d("mtbfdebug", "testWhiteBalance " + whiteBalance.get(j));
+                Log.d("mtbfdebug", "testWhiteBalance imageName == " + imageName);
+
+                strb4.append(pstr);
+                strb4.append(" takePicture with SceneMode ");
+                strb4.append(pstr1);
+                strb4.append(": ");
+                strb4.append(imageName);
+                setStatus(strb4.toString());
+                beginSnapShot();
+
+                while (pictureTaken) {
+                    try {
+                        Thread.sleep(0x7d0);
+                    } catch (InterruptedException e) {
+                        e.printStackTrace();
+                    }
+                }
+                imageName = "";
+            }
+        } else {
+            setStatus("WhiteBalance is NULL!");
+        }
+        Log.d("mtbfdebug", "testWhiteBalance end ");
+    }
+
+
+    class CameraThread extends Thread {
+        public void CameraThread() {
+            datestring = getDateString();
+            StringBuilder strb = new StringBuilder();
+            strb.append(RESULT_FOLDER);
+            strb.append(datestring);
+            strb.append("/");
+            RESULT_FOLDER = strb.toString();
+            File dir = new File(RESULT_FOLDER);
+            if (!dir.exists()) {
+                dir.mkdir();
+            }
+            pictureTaken = false;
+        }
+
+        public void run() {
+            while (initialCamera() && isRun) {
+                StringBuilder strb = new StringBuilder();
+                strb.append("camera loop: ");
+                strb.append(mLoop);
+                strb.append(" begin");
+                Log.d("mtbfdebug", strb.toString());
+                setStatus("initialCamera");
+
+                File file;
+                StringBuilder strb2;
+
+                strb2 = new StringBuilder();
+                strb2.append(path);
+
+                strb2.append("/runin/CameraTest");
+                file = new File(strb2.toString());
+
+                if (file.exists())
+                    deleteDir(file);
+
+                StringBuilder strb3 = new StringBuilder();
+                strb3.append(path);
+                strb3.append("/runin/CameraTest/");
+                RESULT_FOLDER = strb3.toString();
+                File file2;
+
+                StringBuilder strb4;
+                strb4 = new StringBuilder(RESULT_FOLDER);
+                strb4.append("/");
+
+                file2 = new File(strb4.toString());
+                file2.mkdirs();
+                pstr = getIndexStr(mLoop, loop);
+                StringBuilder strb5 = new StringBuilder();
+
+                strb5.append(pstr);
+                strb5.append(" Camera Test");
+                setStatus(strb5.toString());
+
+                if (resolutions != null) {
+                    testResolution();
+                    functions.sleep(0xc8);
+                }
+
+                if (antiBanding != null) {
+                    testAntiBanding();
+                    functions.sleep(0xc8);
+                }
+
+                if (flashMode != null) {
+                    testFlashMode();
+                    functions.sleep(0xc8);
+                }
+
+                if (sceneMode != null) {
+                    testSceneMode();
+                    functions.sleep(0xc8);
+                }
+
+                if (whiteBalance != null) {
+                    testWhiteBalance();
+                    functions.sleep(0xc8);
+                }
+
+                if (focusMode != null) {
+                    testFocusMode();
+                    functions.sleep(0xc8);
+                }
+
+                StringBuilder strb6 = new StringBuilder("camera loop: ");
+                strb6.append(mLoop);
+                strb6.append(" end");
+                Log.d("mtbfdebug", strb6.toString());
+                mLoop = mLoop + 1;
+            }
+            //releaseCamera();
+            if (!isRun) {
+                Log.d("mtbfdebug", "camera finish test");
+                handleStop();
+                return;
+            }
+        }
+    }
+
+    BroadcastReceiver receiver = new BroadcastReceiver() {
+        public void onReceive(Context context, Intent intent) {
+            if (intent.getAction().equalsIgnoreCase(Functions.ACTION_STOP_CAMERA)) {
+                Log.d("mtbfdebug", "CameratTest->onReceive");
+                isRun = false;
+            }
+        }
+    };
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/PicActivity.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/PicActivity.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/PicActivity.java	(revision 167997)
@@ -0,0 +1,144 @@
+package com.mtbf.runner;
+
+import com.techain.runtime.R;
+
+import android.app.Activity;
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+import android.util.Log;
+import android.view.KeyEvent;
+import android.widget.ImageView;
+
+public class PicActivity extends Activity {
+    private static boolean isrun = true;
+    Bitmap bmp;
+    private Boolean complex = Boolean.valueOf(false);
+    Functions functions;
+    Handler handler = new Handler() {
+        public void handleMessage(Message paramAnonymousMessage) {
+            super.handleMessage(paramAnonymousMessage);
+            switch (paramAnonymousMessage.what) {
+                default:
+                    return;
+                case 0:
+                    PicActivity.this.view.setImageBitmap(PicActivity.this.bmp);
+                    return;
+                case 1:
+                    PicActivity.this.view.setImageBitmap(null);
+            }
+        }
+    };
+    private int loop = 0;
+    BroadcastReceiver receiver = new BroadcastReceiver() {
+        public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent) {
+            if (paramAnonymousIntent.getAction().equalsIgnoreCase(Functions.ACTION_STOP_PICTURE)) {
+                Log.d("mtbfdebug", "PicActivity->onReceive: " + Functions.ACTION_STOP_PICTURE);
+                isrun = false;
+            }
+        }
+    };
+    ImageView view;
+
+    private void handleStop() {
+        Log.d("mtbfdebug", "PicActivity->handleStop begin");
+        if (ChooseActivity.IsComplexModel().booleanValue()) {
+            this.functions.stopMusic();
+            this.functions.stopVibrate();
+            this.functions.setRun();
+        }
+        Log.d("mtbfdebug", "PicActivity->handleStop end");
+        setResult(1);
+        finish();
+    }
+
+    protected void onCreate(Bundle paramBundle) {
+        super.onCreate(paramBundle);
+        requestWindowFeature(1);
+        getWindow().setFlags(1024, 1024);
+        setContentView(R.layout.pic);
+        this.view = ((ImageView) findViewById(R.id.pic));
+        BitmapFactory.Options localOptions = new BitmapFactory.Options();
+        localOptions.inSampleSize = 2;
+        isrun = true;
+        IntentFilter localIntentFilter = new IntentFilter(Functions.ACTION_STOP_PICTURE);
+        registerReceiver(this.receiver, localIntentFilter);
+        if (ChooseActivity.IsComplexModel().booleanValue()) {
+            this.functions = new Functions(this, Functions.COMPLEX_MODE);
+            this.complex = Boolean.valueOf(true);
+            //this.bmp = BitmapFactory.decodeFile(Parameters.PIC_PATH, localOptions);
+            bmp = BitmapFactory.decodeStream(getResources().openRawResource(R.raw.test_picture));
+            new PicThread().start();
+        } else {
+            this.functions = new Functions(this);
+            this.complex = Boolean.valueOf(false);
+            //this.bmp = BitmapFactory.decodeFile(Parameters.PIC_PATH, localOptions);
+            bmp = BitmapFactory.decodeStream(getResources().openRawResource(R.raw.test_picture));
+            new PicThread().start();
+        }
+
+    }
+
+    protected void onDestroy() {
+        Log.d("mtbfdebug", "PicActivity->onDestroy");
+        unregisterReceiver(this.receiver);
+        super.onDestroy();
+    }
+
+    public boolean onKeyDown(int paramInt, KeyEvent paramKeyEvent) {
+        if ((paramInt == 4) || (paramInt == 3)) {
+            isrun = false;
+            Log.d("mtbfdebug", "PicActivity->onKeyDown");
+        }
+        return super.onKeyDown(paramInt, paramKeyEvent);
+    }
+
+    class PicThread extends Thread {
+        PicThread() {
+        }
+
+        public void run() {
+            super.run();
+            int i = 0;
+            if (!PicActivity.isrun)
+                return;
+
+            while (isrun) {
+                Log.d("mtbfdebug", "Picture loop " + (i + 1) + " begin");
+                PicActivity.this.functions.log("Picture loop " + (i + 1) + " \u7ed3\u675f");
+                //label113: '
+                PicActivity.this.handler.sendEmptyMessage(0);
+                try {
+                    Thread.sleep(500L);
+                    PicActivity.this.handler.sendEmptyMessage(1);
+
+                    try {
+                        Thread.sleep(500L);
+
+                    } catch (InterruptedException localInterruptedException2) {
+                        localInterruptedException2.printStackTrace();
+                    }
+                } catch (InterruptedException localInterruptedException1) {
+                }
+                Log.d("mtbfdebug", "Picture loop " + (i + 1) + "/" + PicActivity.this.loop + " end");
+                PicActivity.this.functions.log("Picture loop " + (i + 1) + "/" + PicActivity.this.loop + " \u7ed3\u675f");
+            }
+            if (!PicActivity.isrun) {
+                PicActivity.this.handleStop();
+            }
+            setResult(1);
+            finish();
+        }
+    }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.mtbf.runner.PicActivity
+ * JD-Core Version:    0.6.2
+ */
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/ColorActivity.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/ColorActivity.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/ColorActivity.java	(revision 167997)
@@ -0,0 +1,186 @@
+package com.mtbf.runner;
+
+
+import com.techain.runtime.R;
+
+import android.app.Activity;
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.graphics.Color;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+import android.util.Log;
+import android.view.KeyEvent;
+import android.widget.LinearLayout;
+
+public class ColorActivity extends Activity {
+    public static final String CLOSE = "color_close";
+    public static final String COLOR = "color";
+    private static boolean isrun = true;
+    private Boolean complex = Boolean.valueOf(false);
+    private WorkThread mColorThread;
+    Functions mFunctions;
+    Handler handler = new Handler() {
+        public void handleMessage(Message paramAnonymousMessage) {
+            super.handleMessage(paramAnonymousMessage);
+
+            Log.d("mtbfdebug", "ColorActivity->handleMessage:paramAnonymousMessage.what ==" + paramAnonymousMessage.what);
+            switch (paramAnonymousMessage.what) {
+
+                default:
+                    return;
+                case 0:
+                    ColorActivity.this.layout.setBackgroundColor(Color.RED);
+                    return;
+                case 1:
+                    ColorActivity.this.layout.setBackgroundColor(Color.GREEN);
+                    return;
+                case 2:
+                    ColorActivity.this.layout.setBackgroundColor(Color.BLUE);
+                    return;
+                case 3:
+                    ColorActivity.this.layout.setBackgroundColor(Color.BLACK);
+                    return;
+                case 4:
+                    ColorActivity.this.layout.setBackgroundColor(Color.WHITE);
+                    return;
+            }
+        }
+    };
+    LinearLayout layout;
+    private int loop = 0;
+    BroadcastReceiver receiver = new BroadcastReceiver() {
+        public void onReceive(Context context, Intent intent) {
+            if (intent.getAction().equalsIgnoreCase(Functions.ACTION_STOP_COLOR)) {
+                isrun = false;
+                Log.d("mtbfdebug", "ColorActivity->onReceive: " + Functions.ACTION_STOP_COLOR);
+            }
+        }
+    };
+
+    protected void onCreate(Bundle paramBundle) {
+        super.onCreate(paramBundle);
+        requestWindowFeature(1);
+        setContentView(R.layout.color);
+        getWindow().setFlags(1024, 1024);
+        this.layout = ((LinearLayout) findViewById(R.id.colorLayout));
+        isrun = true;
+        IntentFilter localIntentFilter = new IntentFilter(Functions.ACTION_STOP_COLOR);
+        registerReceiver(this.receiver, localIntentFilter);
+        if (ChooseActivity.IsComplexModel().booleanValue()) {
+            mFunctions = new Functions(this, Functions.COMPLEX_MODE);
+            mFunctions.playMusic(ColorActivity.this);
+            this.complex = Boolean.valueOf(true);
+        } else if (ChooseActivity.IsRuninModel().booleanValue()) {
+            mFunctions = new Functions(this, Functions.RUNIN_MODE);
+            this.complex = Boolean.valueOf(true);
+            mFunctions.playMusicByReceiver(ColorActivity.this);
+        } else {
+            mFunctions = new Functions(this, Functions.SINGLE_MODE);
+            this.complex = Boolean.valueOf(false);
+        }
+        mColorThread = new ColorThread();
+        mColorThread.start();
+    }
+
+    protected void onDestroy() {
+        Log.d("mtbfdebug", "ColorActivity->onDestroy()");
+        unregisterReceiver(this.receiver);
+        super.onDestroy();
+        if (mColorThread.isRun()) {
+            mColorThread.stopThread();
+        }
+    }
+
+    public boolean onKeyDown(int paramInt, KeyEvent paramKeyEvent) {
+        if ((paramInt == 4) || (paramInt == 3)) {
+            isrun = false;
+            Log.d("mtbfdebug", "ColorActivity->onKeyDown");
+        }
+        return super.onKeyDown(paramInt, paramKeyEvent);
+    }
+
+    class ColorThread extends WorkThread {
+        ColorThread() {
+        }
+
+        public void run() {
+            super.run();
+            //if (ColorActivity.isrun) {
+            Log.d("mtbfdebug", "ColorActivity->loop== " + loop);
+            //for (int i = 0; i < ColorActivity.this.loop; i++) {
+            while (isrun) {
+                for (int j = 0; j < 5; j++) {
+                    Log.d("mtbfdebug", "ColorActivity->j== " + j);
+                    ColorActivity.this.handler.sendEmptyMessage(j);
+                    try {
+                        Thread.sleep(500L);
+                    } catch (InterruptedException localInterruptedException) {
+                        localInterruptedException.printStackTrace();
+                    }
+                }
+            }
+            //}
+            if (!ColorActivity.isrun && ((ChooseActivity.IsComplexModel().booleanValue()) || (ChooseActivity.IsRuninModel().booleanValue()))) {
+                Log.d("mtbfdebug", "ColorActivity->handleStop begin");
+                ColorActivity.this.mFunctions.stopMusic();
+                ColorActivity.this.mFunctions.setRun();
+            }
+            ColorActivity.this.setResult(8);
+            ColorActivity.this.finish();
+      /*
+      if (((ColorActivity.this.complex.booleanValue()) || (i < ColorActivity.this.loop)) && (ColorActivity.isRun))
+      {
+        Log.d("mtbfdebug", "Color loop: " + (i + 1) + "/" + ColorActivity.this.loop + " begin");
+        if (ColorActivity.this.complex.booleanValue())
+          ColorActivity.this.mFunctions.log("LCD Loop " + (i + 1) + " \u5f00\u59cb");
+        else//while (true)
+        {
+          int j = 0;
+          if (j < 5)
+          {
+            ColorActivity.this.mWorkHandler.sendEmptyMessage(j);
+            try
+            {
+              Thread.sleep(500L);
+              j++;
+              //break label135;
+              ColorActivity.this.mFunctions.log("LCD Loop " + (i + 1) + "/" + ColorActivity.this.loop + " \u5f00\u59cb");
+            }
+            catch (InterruptedException localInterruptedException)
+            {
+              //while (true)
+                localInterruptedException.printStackTrace();
+            }
+          }
+        }
+        Log.d("mtbfdebug", "Color loop: " + (i + 1) + "/" + Parameters.LCD_LOOP + " end");
+        if (ColorActivity.this.complex.booleanValue())
+          ColorActivity.this.mFunctions.log("LCD Loop " + (i + 1) + " 缁撴�");
+        else//while (true)
+        {
+          i++;
+         // break;
+          ColorActivity.this.mFunctions.log("LCD Loop " + (i + 1) + "/" + ColorActivity.this.loop + " 缁撴�");
+        }
+      }
+      if ((!ColorActivity.isRun) && ((ChooseActivity.IsComplexModel().booleanValue()) || (ChooseActivity.IsRuninModel().booleanValue())))
+      {
+        Log.d("mtbfdebug", "ColorActivity->handleStop begin");
+        ColorActivity.this.mFunctions.stopMusic();
+        ColorActivity.this.mFunctions.setRun();
+      }
+      ColorActivity.this.setResult(8);
+      ColorActivity.this.finish();
+      */
+        }
+    }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.mtbf.runner.ColorActivity
+ * JD-Core Version:    0.6.2
+ */
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/KSResponse.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/KSResponse.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/KSResponse.java	(revision 167997)
@@ -0,0 +1,23 @@
+package com.mtbf.runner;
+
+class KSResponse
+{
+  public String msg = "";
+  public boolean ok = false;
+
+  public KSResponse()
+  {
+    reset();
+  }
+
+  public void reset()
+  {
+    this.ok = false;
+    this.msg = "";
+  }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.mtbf.runner.KSResponse
+ * JD-Core Version:    0.6.2
+ */
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/XmlPull.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/XmlPull.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/XmlPull.java	(revision 167997)
@@ -0,0 +1,50 @@
+package com.mtbf.runner;
+
+import android.util.Xml;
+
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.InputStream;
+
+import org.xmlpull.v1.XmlPullParser;
+
+public class XmlPull {
+    public static void ReadXmlByPull(InputStream paramInputStream)
+            throws Exception {
+        XmlPullParser localXmlPullParser = Xml.newPullParser();
+        localXmlPullParser.setInput(paramInputStream, "utf-8");
+        int i = localXmlPullParser.getEventType();
+        if (i != 1) {
+            switch (i) {
+                default:
+                    break;
+                case 2:
+                    i = localXmlPullParser.next();
+            }
+            //while (true)
+            // {
+            // if (("number".equals(localXmlPullParser.getName())) || ("smsnumber".equals(localXmlPullParser.getName())) || ("number".equals(localXmlPullParser.getName())) || ("number".equals(localXmlPullParser.getName())) || ("number".equals(localXmlPullParser.getName())) || ("number".equals(localXmlPullParser.getName())) || ("number".equals(localXmlPullParser.getName())) || (!"number".equals(localXmlPullParser.getName())));
+            // }
+        }
+    }
+
+    public static void getParameters(String paramString) {
+        File localFile = new File(paramString);
+        if (localFile.exists()) ;
+        try {
+            ReadXmlByPull(new FileInputStream(localFile));
+            return;
+        } catch (FileNotFoundException localFileNotFoundException) {
+            localFileNotFoundException.printStackTrace();
+            return;
+        } catch (Exception localException) {
+            localException.printStackTrace();
+        }
+    }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.mtbf.runner.XmlPull
+ * JD-Core Version:    0.6.2
+ */
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/ChooseActivity.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/ChooseActivity.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/ChooseActivity.java	(revision 167997)
@@ -0,0 +1,195 @@
+package com.mtbf.runner;
+
+import android.app.Activity;
+import android.app.admin.DevicePolicyManager;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.content.pm.ApplicationInfo;
+import android.content.pm.PackageManager;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.View;
+import android.widget.Button;
+
+import com.techain.runtime.R;
+
+import java.lang.ref.WeakReference;
+
+public class ChooseActivity extends Activity implements View.OnClickListener {
+
+    private static final String DEVICE_ADMIN_PACKAGE_NAME = "com.techain.runtime";
+    private static final String DEVICE_ADMIN_CLASS_NAME = "com.mtbf.runner.ScreenTest";
+    private static final String QK_CSLOCK_PACKAGE_NAME = "com.qiku.advertisement";
+
+    private static Boolean ComplexModel = Boolean.valueOf(false);
+    public static final int COMPLEX_ITEM = 2;
+    private static Boolean RuninModel = Boolean.valueOf(false);
+    public static final int RUNIN_ITEM = 3;
+    public static final int SIMPLE_ITEM = 1;
+
+    //if 360 OS please become true
+    private static final boolean SYS_ROM_360OS = false;
+
+    //Dev_MountInfo dev;
+    //Dev_MountInfo.DevInfo info;
+    Functions functions;
+    private Button runin;
+    private Button complex;
+    private Button simple;
+    private Bundle myExtras;
+
+    private DevicePolicyManager mDPM;
+    private PackageManager mPm;
+
+    private void ChangeLogPath() {
+//        if (this.info != null) {
+//            if (isFileExist(this.info.getPath() + "/runin").booleanValue()) {
+//                Log.d("mtbfdebug", "external " + this.info.getPath());
+//                Functions.xLogPath = this.info.getPath() + "/runin/log";
+//                Functions.sLogName = Functions.xLogPath + "/runin.log";
+//                Functions.sSingleXmlName = this.info.getPath() + "/runin/config/runin.xml";
+//                return;
+//            }
+//            Log.d("mtbfdebug", "internal " + this.info.getPath());
+//            Functions.xLogPath = Functions.sRootDir + "/runin/log";
+//            Functions.sLogName = Functions.xLogPath + "/runin.log";
+//            Functions.sSingleXmlName = Functions.sRootDir + "/runin/config/runin.xml";
+//            return;
+//        }
+        Functions.xLogPath = Functions.getRootPath() + "/runin/log";
+        Functions.sLogName = Functions.xLogPath + "/runin.log";
+        Functions.sSingleXmlName = Functions.sRootDir + "/runin/config/runin.xml";
+    }
+
+    public static Boolean IsComplexModel() {
+        return ComplexModel;
+    }
+
+    public static Boolean IsRuninModel() {
+        return RuninModel;
+    }
+
+    private void runActivity(int item) {
+        Functions.sSavePath = Functions.sRootDir;
+        Functions.sResultPath = Functions.sRootDir + "/runin";
+        Intent localIntent = new Intent();
+        System.out.println("runActivity savePath==" + Functions.sSavePath);
+        System.out.println("runActivity paramInt==" + item);
+        switch (item) {
+            default:
+                return;
+            case SIMPLE_ITEM:
+                localIntent.setClass(this, SingleActivity.class);
+                break;
+            case COMPLEX_ITEM:
+                localIntent.setClass(this, ComplexActivity.class);
+                break;
+            case RUNIN_ITEM:
+                localIntent.setClass(this, RunInActivity.class);
+                break;
+        }
+        if (myExtras != null) {
+            Log.d("mtbfdebug", "runActivity myExtras == " + myExtras);
+            localIntent.putExtras(myExtras);
+        }
+        startActivity(localIntent);
+    }
+
+    protected void onCreate(Bundle paramBundle) {
+        super.onCreate(paramBundle);
+        setContentView(R.layout.choosemode);
+
+        //this.dev = Dev_MountInfo.getInstance();
+        //this.info = this.dev.getExternalInfo();
+        ChangeLogPath();
+        this.functions = new Functions(this);
+        this.simple = ((Button) findViewById(R.id.simple));
+        this.complex = ((Button) findViewById(R.id.complex));
+        this.runin = ((Button) findViewById(R.id.runin));
+        this.simple.setOnClickListener(this);
+        this.complex.setOnClickListener(this);
+        this.runin.setOnClickListener(this);
+
+        this.complex.setVisibility(View.GONE);
+        this.runin.setVisibility(View.GONE);
+
+        registerDeviceAdmin();
+
+        mPm = getPackageManager();
+
+        //disable QK_CSLock
+        if (SYS_ROM_360OS) {
+            try {
+                ApplicationInfo info = mPm.getPackageInfo(QK_CSLOCK_PACKAGE_NAME, 0).applicationInfo;
+                if (info.enabled) {
+                    new DisableChanger(this, info, PackageManager.COMPONENT_ENABLED_STATE_DISABLED_USER).execute();
+                }
+            } catch (PackageManager.NameNotFoundException e) {
+                e.printStackTrace();
+            }
+        }
+
+        if (getIntent() != null && (myExtras = getIntent().getExtras()) != null) {
+            String mode = myExtras.getString("mode");
+            if ("single".equals(mode)) {
+                onClick(simple);
+            } else if ("complex".equals(mode)) {
+                onClick(complex);
+            } else if ("runin".equals(mode)) {
+                onClick(runin);
+            }
+        }
+    }
+
+    private void registerDeviceAdmin() {
+        if (mDPM == null) {
+            mDPM = (DevicePolicyManager) getSystemService(Context.DEVICE_POLICY_SERVICE);
+        }
+        ComponentName c = new ComponentName(DEVICE_ADMIN_PACKAGE_NAME, DEVICE_ADMIN_CLASS_NAME);
+        if (!mDPM.isAdminActive(c)) {
+            mDPM.setActiveAdmin(c, true);
+        }
+    }
+
+    public void onClick(View paramView) {
+        switch (paramView.getId()) {
+            case R.id.simple:
+                ComplexModel = false;
+                RuninModel = false;
+                runActivity(SIMPLE_ITEM);
+                break;
+            case R.id.complex:
+                ComplexModel = true;
+                RuninModel = false;
+                System.out.println("complex");
+                runActivity(COMPLEX_ITEM);
+                break;
+            case R.id.runin:
+                ComplexModel = false;
+                RuninModel = true;
+                System.out.println("ChooseActivity -onclick runin");
+                runActivity(RUNIN_ITEM);
+                break;
+        }
+    }
+
+    class DisableChanger extends AsyncTask<Object, Object, Object> {
+        WeakReference<ChooseActivity> mActivity;
+        ApplicationInfo mInfo;
+        int mState;
+
+        DisableChanger(ChooseActivity activity, ApplicationInfo info, int state) {
+            mActivity = new WeakReference<>(activity);
+            mInfo = info;
+            mState = state;
+        }
+
+        @Override
+        protected Object doInBackground(Object... params) {
+            mPm.setApplicationEnabledSetting(mInfo.packageName, mState, 0);
+            return null;
+        }
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/Wifi.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/Wifi.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/Wifi.java	(revision 167997)
@@ -0,0 +1,68 @@
+package com.mtbf.runner;
+
+import android.content.Context;
+import android.net.wifi.WifiManager;
+
+public class Wifi {
+    private static int wifiloop;
+    Functions functions;
+    WifiManager mWifiManager;
+    private String pstr;
+
+    public Wifi(Context Context, int paramInt) {
+        wifiloop = paramInt;
+        this.mWifiManager = ((WifiManager) Context.getSystemService(Context.WIFI_SERVICE));
+        this.functions = new Functions(Context);
+    }
+
+    protected static String getIndexStr(int paramInt1, int paramInt2) {
+        return "Loop" + (paramInt1 + 1) + "/" + paramInt2;
+    }
+
+    public void TurnOffWLAN() {
+        if (this.mWifiManager.isWifiEnabled()) {
+            this.mWifiManager.setWifiEnabled(false);
+            this.functions.sleep(5000);
+        }
+    }
+
+    public void TurnOnWLAN() {
+        if (!this.mWifiManager.isWifiEnabled()) {
+            this.mWifiManager.setWifiEnabled(true);
+            this.functions.sleep(5000);
+        }
+    }
+
+    public void startwifitest(SingleActivity paramTableActivity) {
+        int i = 0;
+        for (i = 0; i < wifiloop; i++) {
+            this.pstr = getIndexStr(i, wifiloop);
+            paramTableActivity.sendMessage(3, 8, "Wifi\u6b63\u5728\u8fd0\u884c\u4e2d  " + this.pstr);
+            TurnOnWLAN();
+            if (this.mWifiManager.getWifiState() == 3) {
+                this.functions.log(this.pstr + " wifi \u6253\u5f00\u6210\u529f");
+                testScanAP();
+                if (this.mWifiManager.getScanResults() != null)
+                    this.functions.log(this.pstr + " wifi \u5f00\u59cb\u641c\u7d22\u6210\u529f");
+                else
+                    this.functions.log(this.pstr + " wifi \u5f00\u59cb\u641c\u7d22\u5931\u8d25");
+
+                TurnOffWLAN();
+                if (this.mWifiManager.getWifiState() == 1)
+                    this.functions.log(this.pstr + " wifi \u5173\u95ed\u6210\u529f");
+                else
+                    this.functions.log(this.pstr + " wifi \u5173\u95ed\u5931\u8d25");
+            } else {
+                this.functions.log(this.pstr + " wifi \u6253\u5f00\u5931\u8d25");
+            }
+
+        }
+    }
+
+    public void testScanAP() {
+        TurnOnWLAN();
+        if (this.mWifiManager.startScan())
+            this.functions.sleep(4000);
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/SingleActivity.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/SingleActivity.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/SingleActivity.java	(revision 167997)
@@ -0,0 +1,855 @@
+package com.mtbf.runner;
+
+import android.content.Intent;
+import android.media.MediaRecorder;
+import android.os.Build;
+import android.os.Build.VERSION;
+import android.os.Bundle;
+import android.os.IBinder;
+import android.os.ServiceManager;
+import android.util.Log;
+import android.view.View;
+import android.widget.Button;
+import android.widget.CheckBox;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.techain.runtime.Case;
+import com.techain.runtime.InitCases;
+import com.techain.runtime.R;
+import com.mtbf.runner.ScreenTest.Controller;
+import com.techain.rebootStress.RebootStressActivity;
+
+import java.io.File;
+import java.io.IOException;
+import java.util.LinkedList;
+
+public class SingleActivity extends BaseActivity
+        implements View.OnClickListener {
+
+    private static final int PRODUCT_INFO_NVRAM_LID = 59;
+    private static final int RUNIN_TEST_REPORT_NV_POS = 498;
+
+    private static final int REQUEST_VIDEO_CODE = 0;
+    private static final int REQUEST_PICTURE_CODE = 1;
+    private static final int REQUEST_CAMERA_CODE = 2;
+    private static final int REQUEST_2D_CODE = 3;
+    private static final int REQUEST_3D_CODE = 4;
+    private static final int REQUEST_CPU_CODE = 5;
+    private static final int REQUEST_MEMORY_CODE = 6;
+    private static final int REQUEST_SLEEP_CODE = 7;
+    private static final int REQUEST_LCD_CODE = 8;
+    private static final int REQUEST_REBOOT_CODE = 10;
+
+    private TextView currLoop;
+    private TextView cameraInfo;
+    private TextView cpuInfo;
+    private TextView emmcInfo;
+    private TextView memoryInfo;
+    private TextView speakerInfo;
+    private TextView sleepInfo;
+    private TextView twodInfo;
+    private TextView threedInfo;
+    private TextView videoInfo;
+    private TextView rebootInfo;
+    private TextView lcdInfo;
+    private TextView btInfo;
+    private TextView micInfo;
+    private TextView picInfo;
+    private TextView receiverInfo;
+    private TextView sdcardInfo;
+    private TextView teleInfo;
+    private TextView vibrateInfo;
+    private TextView wifiInfo;
+
+    private CheckBox cameraBox;
+    private CheckBox cpuBox;
+    private CheckBox rebootBox;
+    private CheckBox memoryBox;
+    private CheckBox musicBox;
+    private CheckBox sleepBox;
+    private CheckBox threedBox;
+    private CheckBox twodBox;
+    private CheckBox videoBox;
+    private CheckBox emmcBox;
+    private CheckBox btBox;
+    private CheckBox micBox;
+    private CheckBox picBox;
+    private CheckBox receiverBox;
+    private CheckBox sdcardBox;
+    private CheckBox teleBox;
+    private CheckBox vibrateBox;
+    private CheckBox lcdBox;
+    private CheckBox wifiBox;
+
+    private Button selectAll;
+    private Button start;
+
+    int callNumber = 0;
+
+    private LinkedList<Case> cpuCase;
+    private LinkedList<Case> mMemoryCase;
+    private LinkedList<Case> mTwoDCases;
+    private LinkedList<Case> mThreeDCases;
+
+    private InitCases initcases;
+    private boolean isRecording = true;
+    private MediaRecorder mediaRecorder;
+    private Wifi wifi;
+    private BT bt;
+
+    private Runnable mAudioRunnable = new Runnable() {
+        public void run() {
+            mWorkHandler.removeCallbacks(mAudioRunnable);
+            if ((mediaRecorder != null) && (isRecording)) {
+                mediaRecorder.stop();
+                mediaRecorder.release();
+                mFunctions.sleep(2000);
+                sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.micInfo, "录音完成");
+            }
+            synchronized (mWorkThread) {
+                mWorkThread.notify();
+                //SingleActivity.access$902(SingleActivity.this, null);
+                mediaRecorder = null;
+                isRecording = false;
+                Log.d("mtbfdebug", "startRecordAudio end");
+            }
+        }
+    };
+
+    private void setControl() {
+        this.start = ((Button) findViewById(R.id.start));
+        this.selectAll = ((Button) findViewById(R.id.selectAll));
+        this.musicBox = ((CheckBox) findViewById(R.id.musicBox));
+        this.mTestItems.add(this.musicBox);
+        this.videoBox = ((CheckBox) findViewById(R.id.videoBox));
+        this.mTestItems.add(this.videoBox);
+        this.cameraBox = ((CheckBox) findViewById(R.id.cameraBox));
+        this.mTestItems.add(this.cameraBox);
+        this.twodBox = ((CheckBox) findViewById(R.id.twodBox));
+        this.mTestItems.add(this.twodBox);
+        this.threedBox = ((CheckBox) findViewById(R.id.threedBox));
+        this.mTestItems.add(this.threedBox);
+        this.cpuBox = ((CheckBox) findViewById(R.id.cpuBox));
+        this.mTestItems.add(this.cpuBox);
+        this.memoryBox = ((CheckBox) findViewById(R.id.memoryBox));
+        this.mTestItems.add(this.memoryBox);
+        this.sleepBox = ((CheckBox) findViewById(R.id.sleepBox));
+        this.mTestItems.add(this.sleepBox);
+        this.emmcBox = ((CheckBox) findViewById(R.id.emmcBox));
+        this.mTestItems.add(this.emmcBox);
+        this.rebootBox = ((CheckBox) findViewById(R.id.rebootBox));
+        this.mTestItems.add(this.rebootBox);
+        this.receiverBox = ((CheckBox) findViewById(R.id.receiverBox));
+        //this.mTestItems.add(this.receiverBox);
+        this.picBox = ((CheckBox) findViewById(R.id.picBox));
+        //this.mTestItems.add(this.picBox);
+        this.btBox = ((CheckBox) findViewById(R.id.btBox));
+        //this.mTestItems.add(this.btBox);
+        this.wifiBox = ((CheckBox) findViewById(R.id.wifiBox));
+        //this.mTestItems.add(this.wifiBox);
+        this.micBox = ((CheckBox) findViewById(R.id.micBox));
+        //this.mTestItems.add(this.micBox);
+        this.vibrateBox = ((CheckBox) findViewById(R.id.vibrateBox));
+        //this.mTestItems.add(this.vibrateBox);
+        this.sdcardBox = ((CheckBox) findViewById(R.id.sdcardBox));
+        //this.mTestItems.add(this.sdcardBox);
+        this.lcdBox = ((CheckBox) findViewById(R.id.lcdBox));
+        //this.mTestItems.add(this.lcdBox);
+
+        this.speakerInfo = ((TextView) findViewById(R.id.speakerInfo));
+        this.videoInfo = ((TextView) findViewById(R.id.videoInfo));
+        this.cameraInfo = ((TextView) findViewById(R.id.cameraInfo));
+        this.currLoop = ((TextView) findViewById(R.id.currloop));
+        this.twodInfo = ((TextView) findViewById(R.id.twodInfo));
+        this.threedInfo = ((TextView) findViewById(R.id.threedInfo));
+        this.cpuInfo = ((TextView) findViewById(R.id.cpuInfo));
+        this.memoryInfo = ((TextView) findViewById(R.id.memoryInfo));
+        this.sleepInfo = ((TextView) findViewById(R.id.sleepInfo));
+        this.emmcInfo = ((TextView) findViewById(R.id.tv_item_emmc));
+        this.rebootInfo = ((TextView) findViewById(R.id.rebootInfo));
+        this.picInfo = ((TextView) findViewById(R.id.picInfo));
+        this.receiverInfo = ((TextView) findViewById(R.id.receiverInfo));
+        this.btInfo = ((TextView) findViewById(R.id.btInfo));
+        this.wifiInfo = ((TextView) findViewById(R.id.wifiInfo));
+        this.micInfo = ((TextView) findViewById(R.id.micInfo));
+        this.vibrateInfo = ((TextView) findViewById(R.id.vibrateInfo));
+        this.sdcardInfo = ((TextView) findViewById(R.id.sdcardInfo));
+        this.lcdInfo = ((TextView) findViewById(R.id.lcdInfo));
+
+        this.selectAll.setOnClickListener(this);
+        this.start.setOnClickListener(this);
+    }
+
+    private void start() {
+        resetText();
+        if (getChecked()) {
+            run();
+            return;
+        }
+        Toast.makeText(SingleActivity.this, "没有选择任何模块!", Toast.LENGTH_LONG).show();
+    }
+
+    private void startWifi() {
+        this.wifi = new Wifi(this, Parameters.WIFI_LOOP);
+        this.wifi.startwifitest(this);
+    }
+
+    public boolean getChecked() {
+        for (int i = 0; i < this.mTestItems.size(); i++)
+            if ((this.mTestItems.get(i)).isChecked())
+                return true;
+        return false;
+    }
+
+    public void getCheckedPara() {
+        new StringBuffer();
+        if (this.cameraBox.isChecked())
+            this.mFunctions.log("CAMERA模块 DURATION: " + Parameters.CAMERA_DURATION + " min");
+        if (this.btBox.isChecked())
+            this.mFunctions.log("BT模块 LOOP: " + Parameters.BT_LOOP);
+        if (this.wifiBox.isChecked())
+            this.mFunctions.log("WIFI模块 LOOP: " + Parameters.WIFI_LOOP);
+        if (this.micBox.isChecked())
+            this.mFunctions.log("MIC模块 LOOP: " + Parameters.MIC_LOOP + ", DURATION: " + Parameters.MIC_INTERVAL + " min");
+        if (this.vibrateBox.isChecked())
+            this.mFunctions.log("VIBRATE模块 LOOP: " + Parameters.Vibrate_LOOP);
+        if (this.sdcardBox.isChecked())
+            this.mFunctions.log("SDCARD模块 LOOP: " + Parameters.SD_LOOP);
+        if (this.twodBox.isChecked())
+            this.mFunctions.log("2D模块 DURATION: " + Parameters.TWOD_DURATION + " min");
+        if (this.threedBox.isChecked())
+            this.mFunctions.log("3D模块 DURATION: " + Parameters.THREED_DURATION + " min");
+        if (this.cpuBox.isChecked())
+            this.mFunctions.log("CPU模块 DURATION: " + Parameters.CPU_DURATION + " min");
+        if (this.memoryBox.isChecked())
+            this.mFunctions.log("MEMORY模块 DURATION: " + Parameters.MEMORY_DURATION + " min");
+        if (this.sleepBox.isChecked())
+            this.mFunctions.log("SLEEP模块 LOOP: " + Parameters.SLEEP_LOOP);
+        if (this.lcdBox.isChecked())
+            this.mFunctions.log("LCD模块 LOOP: " + Parameters.LCD_LOOP);
+        if (this.emmcBox.isChecked())
+            this.mFunctions.log("EMMC模块 DURATION: " + Parameters.EMMC_DURATION);
+        this.mFunctions.log("************************************");
+    }
+
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+
+        Log.i("mtbfdebug", "onActivityResult requestCode== " + requestCode);
+        Log.i("mtbfdebug", "onActivityResult resultCode== " + resultCode);
+        Log.i("mtbfdebug", "onActivityResult data== " + data);
+        Log.i("mtbfdebug", "onActivityResult mTestCases== " + mTestCases);
+
+        switch (requestCode) {
+            case REQUEST_VIDEO_CODE:
+            case REQUEST_PICTURE_CODE:
+            case REQUEST_CAMERA_CODE:
+            case REQUEST_SLEEP_CODE:
+            case REQUEST_LCD_CODE:
+                synchronized (mWorkThread) {
+                    this.mWorkThread.notify();
+                }
+                break;
+            case REQUEST_2D_CODE:
+            case REQUEST_3D_CODE:
+            case REQUEST_CPU_CODE:
+            case REQUEST_MEMORY_CODE:
+                onCaseActivityResult(requestCode, data, mTestCases);
+                break;
+        }
+    }
+
+    public void onClick(View paramView) {
+        switch (paramView.getId()) {
+            case R.id.selectAll:
+                selectAll();
+                break;
+            case R.id.start:
+                start();
+                break;
+        }
+    }
+
+    protected void onCreate(Bundle paramBundle) {
+        super.onCreate(paramBundle);
+        setContentView(R.layout.single);
+
+        mFunctions = new Functions(this);
+        mReceiver = new WorkReceiver();
+        registerReceiver(mReceiver, mFilter);
+        setControl();
+        checkRebootFinished();
+    }
+
+    protected void onDestroy() {
+        unregisterReceiver(mReceiver);
+        super.onDestroy();
+    }
+
+    private void playVideo() {
+        this.mFunctions.log("Video模块开始-----------DURATION:" + Parameters.VIDEO_DURATION + " min");
+        Log.d("mtbfdebug", "Video模块开始-----------DURATION:" + Parameters.VIDEO_DURATION + " min");
+        Intent localIntent = new Intent(this, SurfaceActivity.class);
+        startActivityForResult(localIntent, this.REQUEST_VIDEO_CODE);
+        new TimeThread(Functions.ACTION_STOP_VIDEO, Parameters.VIDEO_DURATION).start();
+        synchronized (mWorkThread) {
+            try {
+                this.mWorkThread.wait();
+            } catch (InterruptedException localInterruptedException) {
+                localInterruptedException.printStackTrace();
+            }
+        }
+        mFunctions.log("VIDEO 完成");
+        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.videoInfo, "VIDEO 完成");
+    }
+
+    protected void resetText() {
+        this.speakerInfo.setText("SOUND");
+        this.videoInfo.setText("VIDEO");
+        this.cameraInfo.setText("CAMERA");
+        this.twodInfo.setText("2D");
+        this.threedInfo.setText("3D");
+        this.cpuInfo.setText("CPU");
+        this.memoryInfo.setText("MEMORY");
+        this.sleepInfo.setText("SLEEP");
+        this.emmcInfo.setText("EMMC");
+
+        //this.receiverInfo.setText("RECEIVER");
+        //this.picInfo.setText("PICTURE");
+        //this.btInfo.setText("BT");
+        //this.wifiInfo.setText("WIFI");
+        //this.micInfo.setText("MIC");
+        //this.vibrateInfo.setText("VIBRATE");
+        //this.lcdInfo.setText("LCD");
+        //this.sdcardInfo.setText("SDCARD");
+    }
+
+    @Override
+    protected void updateLoopText(String text) {
+        resetText();
+        currLoop.setText("当前运行 " + text + "/" + Parameters.TOTAL_LOOP);
+    }
+
+    @Override
+    protected void onTestComplete() {
+        start.setEnabled(true);
+        selectAll.setEnabled(true);
+        enableAllItems(Boolean.valueOf(true));
+        currLoop.setText("测试完成");
+
+        //write nvram
+        mFunctions.log("准备写入标志位");
+        try {
+            byte[] buff;
+            IBinder binder = ServiceManager.getService("NvRAMAgent");
+            NvRAMAgent agent = NvRAMAgent.Stub.asInterface(binder);
+            buff = agent.readFile(PRODUCT_INFO_NVRAM_LID);
+            buff[RUNIN_TEST_REPORT_NV_POS] = mIsCompleted ? (byte) 1 : (byte) 0;
+            Log.d("mtbfdebug", "写入标志位：" + RUNIN_TEST_REPORT_NV_POS + " ---> " + buff[RUNIN_TEST_REPORT_NV_POS]);
+            agent.writeFile(PRODUCT_INFO_NVRAM_LID, buff);
+            mFunctions.log("写入标志位成功：" + RUNIN_TEST_REPORT_NV_POS + " ---> " + buff[RUNIN_TEST_REPORT_NV_POS]);
+        } catch (Exception e) {
+            mFunctions.log("写入标志位失败");
+            e.printStackTrace();
+        }
+    }
+
+    protected void run() {
+        this.callNumber = 0;
+        this.start.setEnabled(false);
+        this.selectAll.setEnabled(false);
+        enableAllItems(Boolean.valueOf(false));
+        this.mWorkThread = new SingleThread();
+        this.mWorkThread.start();
+    }
+
+    public void showPic() {
+        startActivityForResult(new Intent(this, PicActivity.class), this.REQUEST_PICTURE_CODE);
+    }
+
+    public void startBT() {
+        Log.d("mtbfdebug", "startBT begin");
+        this.bt = new BT(this, Parameters.BT_LOOP);
+        try {
+            this.bt.startBTtest(this);
+            Log.d("mtbfdebug", "startBT end");
+            return;
+        } catch (InterruptedException localInterruptedException) {
+            //while (true)
+            {
+                localInterruptedException.printStackTrace();
+                Log.e("mtbfdebug", "startBTtest fail " + localInterruptedException.toString());
+            }
+        }
+    }
+
+    public void startRecord() {
+        int i = 0;
+        for (i = 0; i < Parameters.MIC_LOOP; i++) {
+            startRecordAudio(60000 * Parameters.MIC_INTERVAL, Functions.getIndexStr(i, Parameters.MIC_LOOP));
+            synchronized (this.mWorkThread) {
+                try {
+                    this.mWorkThread.wait();
+                    Log.d("mtbfdebug", "Record模块完成-----------");
+                    this.mFunctions.log("Record模块完成-----------");
+                } catch (InterruptedException localInterruptedException) {
+                    // while (true)
+                    localInterruptedException.printStackTrace();
+                }
+            }
+        }
+    }
+
+    public Functions getFunctions() {
+        return mFunctions;
+    }
+
+    public void startRecordAudio(int millSecond, String loopinfo) {
+        mediaRecorder = new MediaRecorder();
+        Log.d("mtbfdebug", "startRecordAudio begin");
+        StringBuilder strb = new StringBuilder();
+        strb.append(Functions.sSavePath);
+        strb.append("/runin");
+        strb.append("/testrecorder.amr");
+
+        String mAudiofilePath = strb.toString();
+        Log.d("mtbfdebug", "mAudioFilePath == " + mAudiofilePath);
+
+        File file = new File(mAudiofilePath);
+        if (file.exists()) {
+            file.delete();
+        }
+        mediaRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);
+        mediaRecorder.setOutputFormat(3);
+        mediaRecorder.setAudioEncoder(1);
+        mediaRecorder.setOutputFile(mAudiofilePath);
+        try {
+            mediaRecorder.prepare();
+        } catch (IllegalStateException e) {
+            e.printStackTrace();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        mediaRecorder.start();
+        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.micInfo, "MIC 开始录音 " + loopinfo);
+        mFunctions.log("MIC 开始录音 " + loopinfo);
+        mWorkHandler.postDelayed(mAudioRunnable, millSecond);
+        //isRecording=false;
+    }
+
+    public void takePicture() {
+        mFunctions.log("getRun ==" + mWorkThread.isRun());
+        if (this.mWorkThread.isRun()) {
+            startActivityForResult(new Intent(this, CameraTest.class), this.REQUEST_CAMERA_CODE);
+            new TimeThread(Functions.ACTION_STOP_CAMERA, Parameters.CAMERA_DURATION).start();
+        }
+    }
+
+    class SingleThread extends WorkThread {
+        public void run() {
+            System.out.println("Single run");
+
+            Functions.log(" ");
+            Functions.log("------------------------------------");
+            Functions.log("PRODUCT: " + Build.PRODUCT);
+            Functions.log("MODEL: " + Build.MODEL);
+            Functions.log("VERSION: " + VERSION.RELEASE);
+            Functions.log("HW: " + Build.HARDWARE);
+            Functions.log("SW: " + Build.DISPLAY);
+            Functions.log("IMEI: " + mFunctions.getImei(SingleActivity.this));
+            Functions.log("------------------------------------");
+            Functions.log("************************************");
+            Functions.log("已选择的模块和参数");
+            Functions.log("************************************");
+            getCheckedPara();
+            Functions.log("************************************");
+
+            for (int k = 0; k < Parameters.TOTAL_LOOP; k++) {
+                StringBuilder titleinfo = new StringBuilder("external loop: ");
+                titleinfo.append(k + 1);
+                titleinfo.append("/");
+                titleinfo.append(Parameters.TOTAL_LOOP);
+                titleinfo.append(" begin");
+                Functions.log(titleinfo.toString());
+
+                sendMessage(MSG_UPDATE_LOOP_TEXT, String.valueOf(k + 1));//hcz
+                initcases = new InitCases();//hcz
+
+                if (isRun()) {
+                    //Speaker
+                    if (musicBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("SPEAKER 模块开始-----------DURATION:");
+                        strb.append(Parameters.SPEAKER_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.speakerInfo, "SPEAKER 正在运行");
+                        mFunctions.playMusic(SingleActivity.this);
+
+                        new TimeThread(ACTION_STOP_MUSIC, Parameters.SPEAKER_DURATION).start();
+                        synchronized (mWorkThread) {
+                            try {
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("SPEAKER 完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.speakerInfo, "SPEAKER 完成");
+                    }
+
+                    //Receiver
+                    if (receiverBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("RECEIVER 模块开始-----------DURATION:");
+                        strb.append(Parameters.RECEIVER_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        mFunctions.playMusicByReceiver(SingleActivity.this);
+                        new TimeThread(ACTION_STOP_MUSIC, Parameters.SPEAKER_DURATION).start();
+
+                        synchronized (mWorkThread) {
+                            try {
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("RECEIVER 完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.receiverInfo, "RECEIVER 完成");
+                    }
+
+                    //Videos
+                    if (videoBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("RECEIVER模块开始-----------DURATION:");
+                        strb.append(Parameters.RECEIVER_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+                        playVideo();
+                    }
+
+                    //Picture
+                    if (picBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("PICTURE模块开始-----------DURATION:");
+                        //strb.append(Parameters.PICTURE_LOOP);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+                        showPic();
+
+                        synchronized (mWorkThread) {
+                            try {
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("PICTURE 完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.picInfo, "PICTURE 完成");
+                    }
+
+                    //camera
+                    if (cameraBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("CAMERA模块开始-----------DURATION:");
+                        strb.append(Parameters.CAMERA_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+                        takePicture();
+
+                        synchronized (mWorkThread) {
+                            try {
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("CAMERA 完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.cameraInfo, "CAMERA ���成");
+                    }
+
+                    //BT
+                    if (btBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("BT模块开始-----------LOOP:");
+                        strb.append(Parameters.BT_LOOP);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+                        startBT();
+                        Functions.log("BT 完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.btInfo, "BT 完成");
+                    }
+
+                    //wifi
+                    if (wifiBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("WIFI 模块开始-----------LOOP:");
+                        strb.append(Parameters.WIFI_LOOP);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+                        startWifi();
+                        Functions.log("WIFI 完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.wifiInfo, "WIFI 完成");
+                    }
+
+                    //micphone
+                    if (micBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("MIC 模块开始 -----------INTERVAL:");
+                        strb.append(Parameters.MIC_INTERVAL);
+                        strb.append(" min");
+                        strb.append("LOOP:");
+                        strb.append(Parameters.MIC_LOOP);
+                        Functions.log(strb.toString());
+                        startRecord();
+                        Functions.log("MIC 完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.micInfo, "MIC 完成");
+                    }
+
+                    //vibrate
+                    if (vibrateBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("VIBRATE 模块开始 -----------LOOP:");
+                        strb.append(Parameters.Vibrate_LOOP);
+                        Functions.log(strb.toString());
+                        mFunctions.startVibrate(SingleActivity.this, Parameters.Vibrate_LOOP);
+
+                        synchronized (mWorkThread) {
+                            try {
+                                Functions.log("UI mWorkThread going to wait");
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("VIBRATE  完成 ");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.vibrateInfo, "VIBRATE  完成 ");
+                    }
+
+                    //sdcard
+                    if (sdcardBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("SDCARD 模块开始 -----------LOOP:");
+                        strb.append(Parameters.SD_LOOP);
+                        Functions.log(strb.toString());
+                        mFunctions.TestSDcard(SingleActivity.this, Parameters.SD_LOOP);
+
+                        synchronized (mWorkThread) {
+                            try {
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("SD  完成 ");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.sdcardInfo, "SD  完成 ");
+                    }
+
+                    //2d
+                    if (twodBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("2D 模块开始运行-----------DURATION:");
+                        strb.append(Parameters.TWOD_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        mTwoDCases = initcases.getCases(InitCases.TWO_D_ITEM);
+                        mTestCases = InitCases.changeList(mTestCases, mTwoDCases);
+                        InitCases.setTime(mTwoDCases, Parameters.TWOD_DURATION);
+                        runCase(mTwoDCases, REQUEST_2D_CODE);
+                        synchronized (mWorkThread) {
+                            try {
+                                Functions.log("UI mWorkThread going to wait");
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        mTwoDCases.clear();
+                        mTestCases.clear();
+                        Functions.log("2D 完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.twodInfo, "2D 完成");
+                    }
+
+                    //3d
+                    if (threedBox.isChecked()) {
+
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("3D 模块开始运行-----------DURATION:");
+                        strb.append(Parameters.THREED_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        mThreeDCases = initcases.getCases(1);
+                        mTestCases = InitCases.changeList(mTestCases, mThreeDCases);
+                        InitCases.setTime(mThreeDCases, Parameters.THREED_DURATION);
+                        runCase(mThreeDCases, REQUEST_3D_CODE);
+
+                        synchronized (mWorkThread) {
+                            try {
+                                Functions.log("UI mWorkThread going to wait");
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        mThreeDCases.clear();
+                        mTestCases.clear();
+                        Functions.log("3D 完成");
+
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.threedInfo, "3D 完成");
+                    }
+                    //cpu
+                    if (cpuBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("CPU 模块开始运行-----------DURATION:");
+                        strb.append(Parameters.CPU_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        cpuCase = initcases.getCases(2);
+                        mTestCases = InitCases.changeList(mTestCases, cpuCase);
+                        InitCases.setTime(cpuCase, Parameters.CPU_DURATION);
+                        runCase(cpuCase, REQUEST_CPU_CODE);
+
+                        synchronized (mWorkThread) {
+                            try {
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        cpuCase.clear();
+                        mTestCases.clear();
+                        Functions.log("CPU 完成");
+
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.cpuInfo, "CPU 完成");
+                    }
+
+                    //Memory
+                    if (memoryBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("MEMORY 模块开始运行 -----------DURATION:");
+                        strb.append(Parameters.MEMORY_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        mMemoryCase = initcases.getCases(3);
+
+                        mTestCases = InitCases.changeList(mTestCases, mMemoryCase);
+                        InitCases.setTime(mMemoryCase, Parameters.MEMORY_DURATION);
+                        runCase(mMemoryCase, REQUEST_MEMORY_CODE);
+
+                        synchronized (mWorkThread) {
+                            try {
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        mMemoryCase.clear();
+                        mTestCases.clear();
+                        Functions.log("MEMORY 完成");
+
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.memoryInfo, "MEMORY 完成");
+                    }
+
+                    //Sleep
+                    if (sleepBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("SLEEP 模块开始运行-----------LOOP:");
+                        strb.append(Parameters.SLEEP_LOOP);
+                        Functions.log(strb.toString());
+
+                        Intent localIntent = new Intent(SingleActivity.this, Controller.class);
+                        startActivityForResult(localIntent, REQUEST_SLEEP_CODE);
+                        synchronized (mWorkThread) {
+                            try {
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("SLEEP 完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.sleepInfo, "SLEEP 完成");
+                    }
+
+                    //LCD
+                    if (lcdBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("LCD模块开始运行-----------LOOP:");
+                        strb.append(Parameters.LCD_LOOP);
+                        Functions.log(strb.toString());
+
+                        Intent localIntent = new Intent(SingleActivity.this, ColorActivity.class);
+                        startActivityForResult(localIntent, REQUEST_LCD_CODE);
+
+                        synchronized (mWorkThread) {
+                            try {
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("LCD 完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.lcdInfo, "LCD 完成");
+                    }
+
+                    //EMMC
+                    if (emmcBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("EMMC 模块开始运行-----------DURATION:");
+                        strb.append(Parameters.EMMC_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        mFunctions.TestEmmc(SingleActivity.this);
+                        new TimeThread(ACTION_STOP_EMMC, Parameters.EMMC_DURATION).start();
+                        synchronized (mWorkThread) {
+                            try {
+                                Functions.log("UI mWorkThread going to wait");
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("EMMC 完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.tv_item_emmc, "EMMC 完成");
+                    }
+                    //reboot
+                    if (rebootBox.isChecked()) {
+
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("reboot 模块开始运行-----------LOOP:");
+                        strb.append(Parameters.REBOOT_LOOP);
+                        Functions.log(strb.toString());
+
+                        Intent localIntent = new Intent(SingleActivity.this, RebootStressActivity.class);
+                        Bundle bundle = new Bundle();
+                        bundle.putBoolean("rebootstart", true);
+                        localIntent.putExtras(bundle);
+                        startActivityForResult(localIntent, REQUEST_REBOOT_CODE);
+
+                        synchronized (mWorkThread) {
+                            try {
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        //Functions.log("reboot 完成");
+                        //sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.rebootInfo,"reboot 完成");
+                    }
+                    mFunctions.WriteCasesLog(mTestCases);
+                    mTestCases.clear();
+                }
+            }
+            mWorkHandler.sendEmptyMessage(MSG_COMPLETE_TEST);
+        }
+    }
+}
+
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/TreeAdapter.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/TreeAdapter.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/TreeAdapter.java	(revision 167997)
@@ -0,0 +1,139 @@
+package com.mtbf.runner;
+
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.BaseExpandableListAdapter;
+import android.widget.TextView;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.LinkedHashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.Map.Entry;
+import java.util.Set;
+
+public class TreeAdapter extends BaseExpandableListAdapter
+{
+  public static final int ItemHeight = 55;
+  public static final int PaddingLeft = 36;
+  private Context context;
+  private TextView info;
+  private LayoutInflater mChildInflater;
+  private LayoutInflater mGroupInflater;
+  private Map<Integer, List<String>> map = new LinkedHashMap();
+  private List<String> mmsInfo = new ArrayList();
+  private List<String> musicInfo = new ArrayList();
+  private int myPaddingLeft = 0;
+  private List<String> parents = new ArrayList();
+  private List<String> picInfo = new ArrayList();
+  private List<String> smsInfo = new ArrayList();
+  private List<String> telephonyInfo = new ArrayList();
+  private List<String> videoInfo = new ArrayList();
+
+  public TreeAdapter(Context paramContext, int paramInt)
+  {
+    this.context = paramContext;
+    this.mChildInflater = ((LayoutInflater)this.context.getSystemService("layout_inflater"));
+    this.mGroupInflater = ((LayoutInflater)this.context.getSystemService("layout_inflater"));
+    this.myPaddingLeft = paramInt;
+    initTreeNodes();
+  }
+
+  private void initTreeNodes()
+  {
+    this.parents.add("sms");
+    this.parents.add("mms");
+    this.parents.add("telephony");
+    this.parents.add("music");
+    this.parents.add("video");
+    this.parents.add("picture");
+    this.map.put(Integer.valueOf(0), this.smsInfo);
+    this.map.put(Integer.valueOf(1), this.mmsInfo);
+    this.map.put(Integer.valueOf(2), this.telephonyInfo);
+    this.map.put(Integer.valueOf(3), this.musicInfo);
+    this.map.put(Integer.valueOf(4), this.videoInfo);
+    this.map.put(Integer.valueOf(5), this.picInfo);
+  }
+
+  public void clearChildren()
+  {
+    Iterator localIterator = this.map.entrySet().iterator();
+    while (localIterator.hasNext())
+      ((List)((Map.Entry)localIterator.next()).getValue()).clear();
+  }
+
+  public Object getChild(int paramInt1, int paramInt2)
+  {
+    return ((List)this.map.get(Integer.valueOf(paramInt1))).get(paramInt2);
+  }
+
+  public long getChildId(int paramInt1, int paramInt2)
+  {
+    return paramInt2;
+  }
+
+  public View getChildView(int paramInt1, int paramInt2, boolean paramBoolean, View paramView, ViewGroup paramViewGroup)
+  {
+    View localView = this.mChildInflater.inflate(2130903043, null);
+    this.info = ((TextView)localView.findViewById(2131165188));
+    this.info.setPadding(36 + this.myPaddingLeft, 0, 0, 0);
+    this.info.setText((CharSequence)((List)this.map.get(Integer.valueOf(paramInt1))).get(paramInt2));
+    return localView;
+  }
+
+  public int getChildrenCount(int paramInt)
+  {
+    return ((List)this.map.get(Integer.valueOf(paramInt))).size();
+  }
+
+  public Object getGroup(int paramInt)
+  {
+    return this.parents.get(paramInt);
+  }
+
+  public int getGroupCount()
+  {
+    return this.parents.size();
+  }
+
+  public long getGroupId(int paramInt)
+  {
+    return paramInt;
+  }
+
+  public View getGroupView(int paramInt, boolean paramBoolean, View paramView, ViewGroup paramViewGroup)
+  {
+    View localView = this.mGroupInflater.inflate(2130903054, null);
+    this.info = ((TextView)localView.findViewById(2131165230));
+    this.info.setPadding(18 + this.myPaddingLeft, 0, 0, 0);
+    this.info.setText((CharSequence)this.parents.get(paramInt));
+    return localView;
+  }
+
+  public List<String> getParents()
+  {
+    return this.parents;
+  }
+
+  public boolean hasStableIds()
+  {
+    return false;
+  }
+
+  public boolean isChildSelectable(int paramInt1, int paramInt2)
+  {
+    return true;
+  }
+
+  public void updateTreeNodes(int paramInt, String paramString)
+  {
+    ((List)this.map.get(Integer.valueOf(paramInt))).add(paramString);
+  }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.mtbf.runner.TreeAdapter
+ * JD-Core Version:    0.6.2
+ */
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/NvRAMAgent.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/NvRAMAgent.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/NvRAMAgent.java	(revision 167997)
@@ -0,0 +1,160 @@
+/* Copyright Statement:
+ *
+ * This software/firmware and related documentation ("MediaTek Software") are
+ * protected under relevant copyright laws. The information contained herein is
+ * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
+ * the prior written permission of MediaTek inc. and/or its licensors, any
+ * reproduction, modification, use or disclosure of MediaTek Software, and
+ * information contained herein, in whole or in part, shall be strictly
+ * prohibited.
+ *
+ * MediaTek Inc. (C) 2010. All rights reserved.
+ *
+ * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
+ * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
+ * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
+ * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
+ * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
+ * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
+ * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
+ * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
+ * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
+ * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
+ * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
+ * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
+ * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
+ * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
+ * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
+ * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
+ * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
+ * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
+ *
+ * The following software/firmware and/or related documentation ("MediaTek
+ * Software") have been modified by MediaTek Inc. All revisions are subject to
+ * any receiver's applicable license agreements with MediaTek Inc.
+ */
+
+/*
+ * This file is auto-generated.  DO NOT MODIFY.
+ * Original file: NvRAMAgent.aidl
+ */
+
+package com.mtbf.runner;
+
+
+//import java.lang.String;
+//import android.os.RemoteException;
+import android.os.IBinder;
+//import android.os.IInterface;
+//import android.os.Binder;
+//import android.os.Parcel;
+
+public interface NvRAMAgent extends android.os.IInterface {   
+    /** Local-side IPC implementation stub class. */
+    public abstract static class Stub extends android.os.Binder implements NvRAMAgent
+    {
+        private static final String DESCRIPTOR = "NvRAMAgent";
+        /** Construct the stub at attach it to the interface. */
+        public Stub() {
+            this.attachInterface(this, DESCRIPTOR);
+        }
+        /**
+         * Cast an IBinder object into an NvRAMAgent interface,
+         * generating a proxy if needed.
+         */
+        public static NvRAMAgent asInterface(IBinder obj) {
+            if ((obj == null)) {
+                return null;
+            }
+            android.os.IInterface iin = (android.os.IInterface)obj.queryLocalInterface(DESCRIPTOR);
+            if (((iin != null) && (iin instanceof NvRAMAgent))) {
+                return ((NvRAMAgent)iin);
+            }
+            return new Proxy(obj);
+        }
+        public IBinder asBinder() {
+            return this;
+        }
+        public boolean onTransact(int code, android.os.Parcel data, android.os.Parcel reply, int flags)
+                throws android.os.RemoteException {
+            switch (code) {
+                case INTERFACE_TRANSACTION:
+                    reply.writeString(DESCRIPTOR);
+                    return true;
+                case TRANSACTION_READFILE:
+                    data.enforceInterface(DESCRIPTOR);
+                    int myArg0;
+                    myArg0 = data.readInt();
+                    byte[] myResult = this.readFile(myArg0);
+                    reply.writeNoException();
+                    reply.writeByteArray(myResult);
+                    return true;
+                case TRANSACTION_WRITEFILE:
+                    data.enforceInterface(DESCRIPTOR);
+                    int myArg01;
+                    myArg01 = data.readInt();
+                    byte[] arg1;
+                    arg1 = data.createByteArray();
+                    int myResult2 = this.writeFile(myArg01, arg1);
+                    reply.writeNoException();
+                    reply.writeInt(myResult2);
+                    return true;
+                default:
+                    break;
+            }
+            return super.onTransact(code, data, reply, flags);
+        } 
+        private static class Proxy implements NvRAMAgent {
+            private IBinder mRemote;
+            Proxy(IBinder remote) {
+                mRemote = remote;
+            }
+            public IBinder asBinder() {
+                return mRemote;
+            }
+            public String getInterfaceDescriptor() {
+                return DESCRIPTOR;
+            }
+            public byte[] readFile(int fileLid) throws android.os.RemoteException
+            {
+                android.os.Parcel data = android.os.Parcel.obtain();
+                android.os.Parcel reply = android.os.Parcel.obtain();
+                byte[] result;
+                try {
+                    data.writeInterfaceToken(DESCRIPTOR);
+                    data.writeInt(fileLid);
+                    mRemote.transact(Stub.TRANSACTION_READFILE, data, reply, 0);
+                    reply.readException();
+                    result = reply.createByteArray();
+                } finally {
+                    reply.recycle();
+                    data.recycle();
+                }
+                return result;
+            }
+            public int writeFile(int fileLid, byte[] buff) throws android.os.RemoteException
+            {
+                android.os.Parcel data = android.os.Parcel.obtain();
+                android.os.Parcel reply = android.os.Parcel.obtain();
+                int result;
+                try {
+                    data.writeInterfaceToken(DESCRIPTOR);
+                    data.writeInt(fileLid);
+                    data.writeByteArray(buff);
+                    mRemote.transact(Stub.TRANSACTION_WRITEFILE, data, reply, 0);
+                    reply.readException();
+                    result = reply.readInt();
+                } finally {
+                    reply.recycle();
+                    data.recycle();
+                }
+                return result;
+            }
+        }
+        static final int TRANSACTION_READFILE = (IBinder.FIRST_CALL_TRANSACTION + 0);
+        static final int TRANSACTION_WRITEFILE = (IBinder.FIRST_CALL_TRANSACTION + 1);
+    }
+    byte[] readFile(int fileLid) throws android.os.RemoteException;
+    int writeFile(int fileLid, byte[] buff) throws android.os.RemoteException;
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/Parameters.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/Parameters.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/Parameters.java	(revision 167997)
@@ -0,0 +1,35 @@
+package com.mtbf.runner;
+
+
+public class Parameters {
+    public static int LCD_LOOP = 0;
+    public static int SD_LOOP = 0;
+    public static int SPEAKER_CAMERA_VIBRATE_MIC_DURATION = 0;
+    public static int RECEIVER_PICTURE_VIBRATE_MIC_DURATION = 0;
+    public static int VIDEO_VIBRATE_MIC_DURATION = 0;
+    public static int LCD_SPEAKER_DURATION = 0;
+    public static int RECEIVER_2D_3D_DURATION = 0;
+    public static int SPEAKER_VIBRATE_MIC_DURATION = 0;
+    public static int CPU_DURATION = 0;
+    public static int MEMORY_DURATION = 0;
+    public static int SLEEP_LOOP = 0;
+    public static int EMMC_DURATION = 0;
+    public static int REBOOT_LOOP = 0;
+    public static int TWOD_DURATION = 0;
+    public static int THREED_DURATION = 0;
+    public static int RECEIVER_LCD_DURATION = 0;
+    public static int SPEAKER_VIDEO_DURATION = 0;
+    public static int VIBRATE_MIC_CAMERA_DURATION = 0;
+    public static int SPEAKER_DURATION = 0;
+    public static int WIFI_LOOP = 0;
+    public static int MIC_LOOP = 0;
+    public static int MIC_INTERVAL = 0;
+    public static int Vibrate_LOOP = 0;
+    public static int RECEIVER_DURATION = 0;
+    public static int VIDEO_DURATION = 0;
+    public static int CAMERA_DURATION = 0;
+    public static int BT_LOOP = 0;
+    public static int TOTAL_LOOP = 0;
+    public static int GPS_LOOP = 0;
+    public static int SDCARD_DURATION = 0;
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/PressKeyHelper.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/PressKeyHelper.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/PressKeyHelper.java	(revision 167997)
@@ -0,0 +1,233 @@
+package com.mtbf.runner;
+
+import android.content.Context;
+import android.content.Intent;
+import java.io.DataInputStream;
+import java.io.IOException;
+import java.io.OutputStream;
+import java.net.InetSocketAddress;
+import java.net.Socket;
+
+public class PressKeyHelper
+{
+  private static String CMD_DUMP = "_";
+  private static DataInputStream doi;
+  private static OutputStream ksout;
+  private static KSResponse ksr = null;
+  private static Socket kssocket;
+  private Context context;
+
+  public PressKeyHelper(Context paramContext)
+  {
+    this.context = paramContext;
+  }
+
+  // ERROR //
+  private static void initKS()
+  {
+    // Byte code:
+    //   0: getstatic 20	com/mtbf/runner/PressKeyHelper:ksr	Lcom/mtbf/runner/KSResponse;
+    //   3: ifnonnull +13 -> 16
+    //   6: new 35	com/mtbf/runner/KSResponse
+    //   9: dup
+    //   10: invokespecial 36	com/mtbf/runner/KSResponse:<init>	()V
+    //   13: putstatic 20	com/mtbf/runner/PressKeyHelper:ksr	Lcom/mtbf/runner/KSResponse;
+    //   16: getstatic 38	com/mtbf/runner/PressKeyHelper:kssocket	Ljava/net/Socket;
+    //   19: ifnull +23 -> 42
+    //   22: getstatic 38	com/mtbf/runner/PressKeyHelper:kssocket	Ljava/net/Socket;
+    //   25: invokevirtual 44	java/net/Socket:isClosed	()Z
+    //   28: ifne +14 -> 42
+    //   31: getstatic 38	com/mtbf/runner/PressKeyHelper:kssocket	Ljava/net/Socket;
+    //   34: invokevirtual 47	java/net/Socket:isConnected	()Z
+    //   37: istore_2
+    //   38: iload_2
+    //   39: ifne +84 -> 123
+    //   42: getstatic 38	com/mtbf/runner/PressKeyHelper:kssocket	Ljava/net/Socket;
+    //   45: ifnull +9 -> 54
+    //   48: getstatic 38	com/mtbf/runner/PressKeyHelper:kssocket	Ljava/net/Socket;
+    //   51: invokevirtual 50	java/net/Socket:close	()V
+    //   54: new 40	java/net/Socket
+    //   57: dup
+    //   58: invokespecial 51	java/net/Socket:<init>	()V
+    //   61: putstatic 38	com/mtbf/runner/PressKeyHelper:kssocket	Ljava/net/Socket;
+    //   64: getstatic 38	com/mtbf/runner/PressKeyHelper:kssocket	Ljava/net/Socket;
+    //   67: iconst_1
+    //   68: invokevirtual 55	java/net/Socket:setTcpNoDelay	(Z)V
+    //   71: getstatic 38	com/mtbf/runner/PressKeyHelper:kssocket	Ljava/net/Socket;
+    //   74: sipush 2000
+    //   77: invokevirtual 59	java/net/Socket:setSoTimeout	(I)V
+    //   80: getstatic 38	com/mtbf/runner/PressKeyHelper:kssocket	Ljava/net/Socket;
+    //   83: new 61	java/net/InetSocketAddress
+    //   86: dup
+    //   87: ldc 63
+    //   89: sipush 10086
+    //   92: invokespecial 66	java/net/InetSocketAddress:<init>	(Ljava/lang/String;I)V
+    //   95: invokevirtual 70	java/net/Socket:connect	(Ljava/net/SocketAddress;)V
+    //   98: getstatic 38	com/mtbf/runner/PressKeyHelper:kssocket	Ljava/net/Socket;
+    //   101: invokevirtual 74	java/net/Socket:getOutputStream	()Ljava/io/OutputStream;
+    //   104: putstatic 76	com/mtbf/runner/PressKeyHelper:ksout	Ljava/io/OutputStream;
+    //   107: new 78	java/io/DataInputStream
+    //   110: dup
+    //   111: getstatic 38	com/mtbf/runner/PressKeyHelper:kssocket	Ljava/net/Socket;
+    //   114: invokevirtual 82	java/net/Socket:getInputStream	()Ljava/io/InputStream;
+    //   117: invokespecial 85	java/io/DataInputStream:<init>	(Ljava/io/InputStream;)V
+    //   120: putstatic 87	com/mtbf/runner/PressKeyHelper:doi	Ljava/io/DataInputStream;
+    //   123: return
+    //   124: astore_0
+    //   125: aload_0
+    //   126: invokevirtual 90	java/lang/Exception:printStackTrace	()V
+    //   129: return
+    //   130: astore_1
+    //   131: goto -77 -> 54
+    //
+    // Exception single:
+    //   from	to	target	type
+    //   0	16	124	java/lang/Exception
+    //   16	38	124	java/lang/Exception
+    //   54	123	124	java/lang/Exception
+    //   42	54	130	java/lang/Exception
+  }
+
+  private static KSResponse ks(String paramString)
+  {
+  //  while (true)
+    {
+      try
+      {
+        ksout.write((paramString + "\n").getBytes());
+        ksout.flush();
+        return readKsResp();
+      }
+      catch (Exception localException)
+      {
+      }
+      try
+      {
+        Thread.sleep(2000L);
+        initKS();
+        try
+        {
+          ksout.write((paramString + "\n").getBytes());
+          ksout.flush();
+        }
+        catch (IOException localIOException)
+        {
+          localIOException.printStackTrace();
+        }
+      }
+      catch (InterruptedException localInterruptedException)
+      {
+        //while (true)
+          localInterruptedException.printStackTrace();
+      }
+    }
+	return ksr;
+  }
+
+  private static Socket open4939(int paramInt)
+  {
+    if (CMD_DUMP.equals("_"))
+      CMD_DUMP = "DUMP -1";
+    Socket localSocket = new Socket();
+    try
+    {
+      localSocket.setSoTimeout(paramInt);
+      localSocket.connect(new InetSocketAddress("127.0.0.1", 4939));
+      return localSocket;
+    }
+    catch (IOException localIOException1)
+    {
+      do
+        localIOException1.printStackTrace();
+      while (kssocket == null);
+      try
+      {
+        kssocket.close();
+        return localSocket;
+      }
+      catch (IOException localIOException2)
+      {
+        localIOException2.printStackTrace();
+      }
+    }
+    return localSocket;
+  }
+
+  private static KSResponse readKsResp()
+  {
+    ksr.reset();
+    try
+    {
+      if (doi.readInt() == 0);
+      for (ksr.ok = true; ; ksr.ok = false)
+      {
+        int i = doi.readInt();
+        if (i > 0)
+        {
+          byte[] arrayOfByte = new byte[i];
+          doi.read(arrayOfByte);
+          ksr.msg = new String(arrayOfByte);
+        }
+        return ksr;
+      }
+    }
+    catch (Exception localException)
+    {
+      //while (true)
+        localException.printStackTrace();
+    }
+	return ksr;
+  }
+
+  public static void sleep(int paramInt)
+  {
+    long l = paramInt;
+    try
+    {
+      Thread.sleep(l);
+      return;
+    }
+    catch (InterruptedException localInterruptedException)
+    {
+      localInterruptedException.printStackTrace();
+    }
+  }
+
+  public void keypress(int paramInt)
+  {
+    startKeyService();
+    sleep(500);
+    ks("key," + paramInt + "," + 0);
+    sleep(500);
+    stopKeyService();
+  }
+
+  public void startKeyService()
+  {
+    Intent localIntent = new Intent();
+    localIntent.setAction("ks.start");
+    this.context.sendBroadcast(localIntent);
+  }
+
+  public void stopKeyService()
+  {
+    Intent localIntent = new Intent();
+    localIntent.setAction("ks.stop");
+    this.context.sendBroadcast(localIntent);
+  }
+
+  public void touch(int paramInt1, int paramInt2)
+  {
+    open4939(20000);
+    startKeyService();
+    sleep(5000);
+    ks("touch," + paramInt1 + "," + paramInt2 + "," + 0);
+    sleep(5000);
+    stopKeyService();
+  }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.mtbf.runner.PressKeyHelper
+ * JD-Core Version:    0.6.2
+ */
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/BT.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/BT.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/BT.java	(revision 167997)
@@ -0,0 +1,117 @@
+package com.mtbf.runner;
+
+import android.bluetooth.BluetoothAdapter;
+import android.content.Context;
+import android.util.Log;
+
+public class BT {
+    BluetoothAdapter adapter = BluetoothAdapter.getDefaultAdapter();
+    public int btloop;
+    private int curloop;
+    Functions functions;
+    private String pstr;
+
+    public BT(Context context, int paramInt) {
+        this.btloop = paramInt;
+        this.functions = new Functions(context);
+    }
+
+    protected static String getIndexStr(int paramInt1, int paramInt2) {
+        return "Loop" + (paramInt1 + 1) + "/" + paramInt2;
+    }
+
+    public void TurnOffBT()
+            throws InterruptedException {
+        Log.d("mtbfdebug", "TurnOffBT begin");
+        if (this.adapter.getState() == 12)
+            this.adapter.disable();
+        if (waitForStatus(10, 10)) {
+            this.functions.log(this.pstr + " \u84dd\u7259\u5173\u95ed\u6210\u529f");
+            Log.d("mtbfdebug", this.pstr + " \u84dd\u7259\u5173\u95ed\u6210\u529f");
+        } else //while (true)
+        {
+            Log.d("mtbfdebug", "TurnOffBT end");
+            //return;
+            this.functions.log(this.pstr + " \u84dd\u7259\u5173\u95ed\u6210\u529f");
+            Log.d("mtbfdebug", this.pstr + " \u84dd\u7259\u5173\u95ed\u6210\u529f");
+        }
+    }
+
+    public void TurnOnBT()
+            throws InterruptedException {
+        Log.d("mtbfdebug", "TurnOnBT begin");
+        if (this.adapter.getState() == 10)
+            this.adapter.enable();
+        if (waitForStatus(12, 10)) {
+            this.functions.log(this.pstr + " \u84dd\u7259\u6253\u5f00\u6210\u529f");
+            Log.d("mtbfdebug", this.pstr + " \u84dd\u7259\u6253\u5f00\u6210\u529f");
+        } else//while (true)
+        {
+            Log.d("mtbfdebug", "TurnOnBT end");
+            //return;
+            this.functions.log(this.pstr + " \u84dd\u7259\u6253\u5f00\u6210\u529f");
+            Log.d("mtbfdebug", this.pstr + " \u84dd\u7259\u6253\u5f00\u6210\u529f");
+        }
+    }
+
+    public void startBTtest(SingleActivity paramTableActivity)
+            throws InterruptedException {
+        Log.d("mtbfdebug", "startBTtest begin");
+        for (int i = 0; i < this.btloop; i++) {
+            this.pstr = getIndexStr(i, this.btloop);
+            paramTableActivity.sendMessage(3, 7, "BT\u6b63\u5728\u8fd0\u884c\u4e2d  " + this.pstr);
+            TurnOnBT();
+            startDiscoverytest();
+            TurnOffBT();
+            paramTableActivity.sendMessage(3, 7, "BT\u5b8c\u6210");
+        }
+        Log.d("mtbfdebug", "startBTtest end");
+    }
+
+    public void startDiscoverytest()
+            throws InterruptedException {
+        if (!this.adapter.isDiscovering()) {
+            this.adapter.startDiscovery();
+            this.functions.sleep(8000);
+            if (!this.adapter.isDiscovering())
+                // break label191;
+                this.functions.log(this.pstr + " \u84dd\u7259\u5f00\u59cb\u641c\u7d22\u6210\u529f");
+            Log.d("mtbfdebug", this.pstr + " \u84dd\u7259\u5f00\u59cb\u641c\u7d22\u6210\u529f");
+        } else//while (true)
+        {
+            if (this.adapter.isDiscovering()) {
+                this.adapter.cancelDiscovery();
+                this.functions.sleep(8000);
+                if (this.adapter.isDiscovering())
+                    // break;
+                    this.functions.log(this.pstr + " \u84dd\u7259\u5f00\u59cb\u641c\u7d22\u6210\u529f");
+                Log.d("mtbfdebug", this.pstr + " \u84dd\u7259\u5f00\u59cb\u641c\u7d22\u6210\u529f");
+            }
+            //return;
+            //label191: this.mFunctions.log(this.pstr + " 蓝牙开始搜索失败");
+            Log.d("mtbfdebug", this.pstr + " \u84dd\u7259\u5f00\u59cb\u641c\u7d22\u6210\u529f");
+        }
+        this.functions.log(this.pstr + " \u84dd\u7259\u5f00\u59cb\u641c\u7d22\u6210\u529f");
+        Log.d("mtbfdebug", this.pstr + " \u84dd\u7259\u5f00\u59cb\u641c\u7d22\u6210\u529f");
+    }
+
+    public boolean waitForStatus(int paramInt1, int paramInt2) {
+
+        boolean bool = true;
+        for (int i = 0; ; i++) {
+            bool = false;
+            if (i >= paramInt2)
+                return bool;//break label40;
+            if (this.adapter.getState() == paramInt1)
+                break;
+            this.functions.sleep(1000);
+        }
+        //label40:
+        return bool;
+    }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.mtbf.runner.BT
+ * JD-Core Version:    0.6.2
+ */
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/SurfaceActivity.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/SurfaceActivity.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/SurfaceActivity.java	(revision 167997)
@@ -0,0 +1,171 @@
+package com.mtbf.runner;
+
+import android.app.Activity;
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.media.AudioManager;
+import android.media.MediaPlayer;
+import android.net.Uri;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.KeyEvent;
+import android.view.SurfaceHolder;
+import android.view.SurfaceView;
+import android.view.WindowManager;
+import android.widget.Toast;
+
+import java.io.IOException;
+
+import com.techain.runtime.R;
+
+public class SurfaceActivity extends Activity
+        implements SurfaceHolder.Callback, MediaPlayer.OnPreparedListener, MediaPlayer.OnErrorListener {
+    Functions functions;
+    private MediaPlayer mp;
+    BroadcastReceiver receiver = new BroadcastReceiver() {
+        public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent) {
+            if (paramAnonymousIntent.getAction().equalsIgnoreCase(Functions.ACTION_STOP_VIDEO)) {
+                Log.d("mtbfdebug", "SurfaceActivity->onReceive");
+                SurfaceActivity.this.handleStop();
+            }
+        }
+    };
+    private SurfaceHolder surfaceHolder;
+    private SurfaceView surfaceView;
+
+    private void handleStop() {
+        Log.d("mtbfdebug", "SurfaceActivity->handleStop begin");
+        if (this.mp != null) {
+            if (this.mp.isPlaying()) {
+                this.mp.stop();
+            }
+            this.mp.reset();
+            this.mp.release();
+            this.mp = null;
+        }
+        this.functions.stopVibrate();
+        this.functions.setRun();
+        Log.d("mtbfdebug", "SurfaceActivity->handleStop stop");
+        setResult(0);
+        finish();
+    }
+
+    private void initComponents() {
+        IntentFilter localIntentFilter = new IntentFilter(Functions.ACTION_STOP_VIDEO);
+        registerReceiver(this.receiver, localIntentFilter);
+        this.surfaceView = ((SurfaceView) findViewById(R.id.surfaceview));
+        this.surfaceHolder = this.surfaceView.getHolder();
+        this.surfaceHolder.addCallback(this);
+        this.surfaceHolder.setType(3);
+    }
+
+    private void initPlayer() {
+        this.mp = new MediaPlayer();
+        this.mp.setOnPreparedListener(this);
+        this.mp.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {
+            int index = 0;
+
+            public void onCompletion(MediaPlayer paramAnonymousMediaPlayer) {
+                if (paramAnonymousMediaPlayer != null) {
+                    this.index = (1 + this.index);
+                    Log.d("mtbfdebug", "SurfaceActivity->onCompletion: " + this.index);
+                    paramAnonymousMediaPlayer.start();
+                }
+            }
+        });
+    }
+
+    protected void onCreate(Bundle paramBundle) {
+        super.onCreate(paramBundle);
+        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
+		
+        setContentView(R.layout.surface);
+        initComponents();
+        initPlayer();
+    }
+
+    protected void onDestroy() {
+        Log.d("mtbfdebug", "SurfaceActivity->onDestroy");
+        unregisterReceiver(this.receiver);
+        super.onDestroy();
+    }
+
+    public boolean onError(MediaPlayer paramMediaPlayer, int paramInt1, int paramInt2) {
+        Log.e("mtbfdebug", "media error");
+        return false;
+    }
+
+    public boolean onKeyUp(int paramInt, KeyEvent paramKeyEvent) {
+        if (paramInt == 4) {
+            Log.d("mtbfdebug", "SurfaceActivity->onKeyUp");
+            handleStop();
+        }
+        return super.onKeyUp(paramInt, paramKeyEvent);
+    }
+
+    public void onPrepared(MediaPlayer paramMediaPlayer) {
+        Log.d("mtbfdebug", "SurfaceActivity->onPrepared begin");
+        if (paramMediaPlayer != null) {
+            Log.d("mtbfdebug", "SurfaceActivity->mp.start");
+            paramMediaPlayer.start();
+        }
+        Log.d("mtbfdebug", "SurfaceActivity->onPrepared end");
+    }
+
+    public void surfaceChanged(SurfaceHolder paramSurfaceHolder, int paramInt1, int paramInt2, int paramInt3) {
+        Log.e("com.media", "surface changed");
+        Log.e("mtbfdebug", "surfaceChanged");
+    }
+
+    public void surfaceCreated(SurfaceHolder paramSurfaceHolder) {
+        try {
+            ((AudioManager) getSystemService(Context.AUDIO_SERVICE)).setMode(0);
+            if (ChooseActivity.IsComplexModel().booleanValue()) {
+                this.functions = new Functions(this, Functions.COMPLEX_MODE);
+            } else if (ChooseActivity.IsRuninModel().booleanValue()) {
+                this.functions = new Functions(this, Functions.RUNIN_MODE);
+            } else {
+                this.functions = new Functions(this);
+            }
+                try {
+                    mp.setDataSource(this, Uri.parse("android.resource://" + getPackageName() + "/"+ R.raw.test_video));
+                } catch (SecurityException e) {
+                    e.printStackTrace();
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+                Log.d("mtbfdebug", "surfaceCreated->mp.setDisplay");
+                this.mp.setDisplay(paramSurfaceHolder);
+                Log.d("mtbfdebug", "surfaceCreated->mp.setScreenOnWhilePlaying");
+                this.mp.setScreenOnWhilePlaying(true);
+                Log.d("mtbfdebug", "surfaceCreated->mp.prepare");
+                try {
+                    this.mp.prepare();
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+
+        } catch (IllegalStateException localIllegalStateException) {
+            {
+                localIllegalStateException.printStackTrace();
+                Log.e("mtbfdebug", "surfaceCreated fail " + localIllegalStateException.toString());
+                handleStop();
+            }
+        } catch (IllegalArgumentException localIllegalArgumentException) {
+            localIllegalArgumentException.printStackTrace();//label206: localIllegalArgumentException.printStackTrace();
+            Log.e("mtbfdebug", "surfaceCreated fail " + localIllegalArgumentException.toString());
+            handleStop();
+        }
+    }
+
+    public void surfaceDestroyed(SurfaceHolder paramSurfaceHolder) {
+        Log.d("mtbfdebug", "surfaceDestroyed");
+    }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.mtbf.runner.SurfaceActivity
+ * JD-Core Version:    0.6.2
+ */
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/RunInActivity.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/RunInActivity.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/RunInActivity.java	(revision 167997)
@@ -0,0 +1,609 @@
+package com.mtbf.runner;
+
+import android.content.Intent;
+import android.media.MediaRecorder;
+import android.os.Build;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.View;
+import android.widget.Button;
+import android.widget.CheckBox;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.techain.rebootStress.RebootStressActivity;
+import com.techain.runtime.Case;
+import com.techain.runtime.InitCases;
+import com.techain.runtime.R;
+import com.mtbf.runner.ScreenTest.Controller;
+
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.util.Iterator;
+import java.util.LinkedList;
+
+import org.dom4j.Document;
+import org.dom4j.DocumentException;
+import org.dom4j.Element;
+import org.dom4j.io.SAXReader;
+import org.dom4j.io.XMLWriter;
+
+public class RunInActivity extends BaseActivity
+        implements View.OnClickListener {
+
+    private static final int REQUEST_CPU_CODE = 0;
+    private static final int REQUEST_2D_CODE = 1;
+    private static final int REQUEST_3D_CODE = 2;
+    private static final int REQUEST_MEMORY_CODE = 3;
+    private static final int REQUEST_SLEEP_CODE = 4;
+    private static final int REQUEST_RECEIVER_LCD_CODE = 5;
+    private static final int REQUEST_SPEAKER_VIDEO_CODE = 6;
+    private static final int REQUEST_VIBRATE_MIC_CAMERA_CODE = 7;
+    private static final int REQUEST_REBOOT_CODE = 8;
+
+    private static Document xml;
+
+    BT bt;
+    int callNumber = 0;
+    CheckBox cpuBox;
+    TextView cpuInfo;
+
+    LinkedList<Case> cpuCase;
+    TextView currLoop;
+    CheckBox emmcBox;
+    TextView emmcInfo;
+    InitCases valinitcases;
+
+    private Runnable mAudioRunnable = new Runnable() {
+        public void run() {
+            mWorkHandler.removeCallbacks(mAudioRunnable);
+            if (mediaRecorder != null) {
+                mediaRecorder.stop();
+                mediaRecorder.release();
+                mFunctions.sleep(2000);
+                sendMessage(MSG_UPDATE_ITEM_TEXT, 9, "瑜版洟鐓剁�灞惧灇");
+            }
+            synchronized (mWorkThread) {
+                mWorkThread.notify();
+                //RunInActivity.access$1002(RunInActivity.this, null);
+                return;
+            }
+        }
+    };
+
+    private MediaRecorder mediaRecorder;
+    CheckBox memoryBox;
+    TextView memoryInfo;
+
+    LinkedList<Case> memorycase;
+    CheckBox rebootBox;
+    TextView rebootInfo;
+    CheckBox rec_lcdBox;
+    TextView rec_lcdInfo;
+
+    Button selectAll;
+    CheckBox sleepBox;
+    TextView sleepInfo;
+
+    CheckBox spe_videoBox;
+    TextView spe_videoInfo;
+
+
+    Button start;
+    CheckBox threedBox;
+    TextView threedInfo;
+
+    LinkedList<Case> threedcase;
+    CheckBox twodBox;
+    TextView twodInfo;
+
+    LinkedList<Case> twodcase;
+    CheckBox vib_mic_camBox;
+    TextView vib_mic_camInfo;
+
+
+    Wifi wifi;
+
+    private void WritetoXml() {
+        Dev_MountInfo.DevInfo localDevInfo = Dev_MountInfo.getInstance().getExternalInfo();
+        File localFile = new File(Functions.sRunInXmlName);
+        SAXReader localSAXReader = new SAXReader();
+        try {
+            xml = localSAXReader.read(localFile);
+            Iterator localIterator = xml.getRootElement().elementIterator();
+            while (localIterator.hasNext()) {
+                Element localElement = (Element) localIterator.next();
+                if (localElement.getName().equals("musicpath")) {
+                    Log.d("mtbfdebug", "change musicpath");
+                    localElement.setText(localDevInfo.getPath() + "/runin/test.mp3");
+                }
+                if (localElement.getName().equals("videopath")) {
+                    Log.d("mtbfdebug", "change videopath");
+                    localElement.setText(localDevInfo.getPath() + "/runin/test.3gp");
+                }
+                if (localElement.getName().equals("picpath")) {
+                    Log.d("mtbfdebug", "change picpath");
+                    localElement.setText(localDevInfo.getPath() + "/runin/test.jpg");
+                }
+            }
+        } catch (DocumentException localDocumentException) {
+            this.mFunctions.log("读取配置文件异常");
+            return;
+        }
+        try {
+            XMLWriter localXMLWriter = new XMLWriter(new FileWriter(localFile));
+            localXMLWriter.write(xml);
+            localXMLWriter.close();
+            return;
+        } catch (IOException localIOException) {
+            localIOException.printStackTrace();
+        }
+    }
+
+    private void enableCBox(Boolean paramBoolean) {
+        for (int i = 0; i < this.mTestItems.size(); i++)
+            mTestItems.get(i).setEnabled(paramBoolean.booleanValue());
+    }
+
+    private void setControl() {
+        this.start = ((Button) findViewById(R.id.start_runin));
+        this.selectAll = ((Button) findViewById(R.id.runin_selectAll));
+        this.twodBox = ((CheckBox) findViewById(R.id.runin_twodBox));
+        this.mTestItems.add(this.twodBox);
+        this.threedBox = ((CheckBox) findViewById(R.id.runin_threedBox));
+        this.mTestItems.add(this.threedBox);
+        this.cpuBox = ((CheckBox) findViewById(R.id.runin_cpuBox));
+        this.mTestItems.add(this.cpuBox);
+        this.memoryBox = ((CheckBox) findViewById(R.id.runin_memoryBox));
+        this.mTestItems.add(this.memoryBox);
+        this.emmcBox = ((CheckBox) findViewById(R.id.runin_emmcBox));
+        this.mTestItems.add(this.emmcBox);
+        this.sleepBox = ((CheckBox) findViewById(R.id.runin_sleepBox));
+        this.mTestItems.add(this.sleepBox);
+        this.rec_lcdBox = ((CheckBox) findViewById(R.id.rec_lcdBox));
+        this.mTestItems.add(this.rec_lcdBox);
+        this.spe_videoBox = ((CheckBox) findViewById(R.id.spe_videoBox));
+        this.mTestItems.add(this.spe_videoBox);
+        this.vib_mic_camBox = ((CheckBox) findViewById(R.id.vib_mic_camBox));
+        this.mTestItems.add(this.vib_mic_camBox);
+        this.rebootBox = ((CheckBox) findViewById(R.id.runin_rebootBox));
+        this.mTestItems.add(this.rebootBox);
+        this.currLoop = ((TextView) findViewById(R.id.runin_currloop));
+        this.twodInfo = ((TextView) findViewById(R.id.runin_twodInfo));
+        this.threedInfo = ((TextView) findViewById(R.id.runin_threedInfo));
+        this.cpuInfo = ((TextView) findViewById(R.id.runin_cpuInfo));
+        this.memoryInfo = ((TextView) findViewById(R.id.runin_memoryInfo));
+        this.sleepInfo = ((TextView) findViewById(R.id.runin_sleepInfo));
+        this.emmcInfo = ((TextView) findViewById(R.id.tv_item_emmc));
+        this.rec_lcdInfo = ((TextView) findViewById(R.id.rec_lcdInfo));
+        this.spe_videoInfo = ((TextView) findViewById(R.id.spe_videoInfo));
+        this.vib_mic_camInfo = ((TextView) findViewById(R.id.vib_mic_camInfo));
+        this.rebootInfo = ((TextView) findViewById(R.id.runin_rebootInfo));
+        this.selectAll.setOnClickListener(this);
+        this.start.setOnClickListener(this);
+    }
+
+    private void setSelectAll() {
+        for (int i = 0; i < this.mTestItems.size(); i++)
+            mTestItems.get(i).setChecked(true);
+    }
+
+    private void start() {
+        resetText();
+        if (getChecked()) {
+            run();
+            return;
+        }
+        Toast.makeText(RunInActivity.this, "没有选择任何模块!", Toast.LENGTH_SHORT).show();
+    }
+
+    public boolean getChecked() {
+
+        System.out.println("getChecked this.mTestItems.size()==" + this.mTestItems.size());
+        for (int i = 0; i < this.mTestItems.size(); i++)
+            if (((CheckBox) this.mTestItems.get(i)).isChecked())
+                return true;
+        return false;
+    }
+
+    public void getCheckedPara() {
+        new StringBuffer();
+        if (this.cpuBox.isChecked())
+            this.mFunctions.log("CPU 模块 DURATION: " + Parameters.CPU_DURATION + " min");
+        if (this.twodBox.isChecked())
+            this.mFunctions.log("2D 模块 DURATION: " + Parameters.TWOD_DURATION + " min");
+        if (this.threedBox.isChecked())
+            this.mFunctions.log("3D模块 DURATION: " + Parameters.THREED_DURATION + " min");
+        if (this.memoryBox.isChecked())
+            this.mFunctions.log("MEMORY模块 DURATION: " + Parameters.MEMORY_DURATION + " min");
+        if (this.emmcBox.isChecked())
+            this.mFunctions.log("EMMC模块 DURATION: " + Parameters.EMMC_DURATION);
+        if (this.sleepBox.isChecked())
+            this.mFunctions.log("SLEEP模块 LOOP: " + Parameters.SLEEP_LOOP);
+        if (this.rec_lcdBox.isChecked())
+            this.mFunctions.log("RECEIVER+LCD模块 DURATION: " + Parameters.RECEIVER_LCD_DURATION + " min");
+        if (this.spe_videoBox.isChecked())
+            this.mFunctions.log("SPEAKER+VIDEO模块 DURATION: " + Parameters.SPEAKER_VIDEO_DURATION + " min");
+        if (this.vib_mic_camBox.isChecked())
+            this.mFunctions.log("VIBRATE+MIC+CAMERA模块 DURATION: " + Parameters.VIBRATE_MIC_CAMERA_DURATION + " min");
+        if (this.rebootBox.isChecked())
+            this.mFunctions.log("REBOOT模块 LOOP: " + Parameters.REBOOT_LOOP);
+        this.mFunctions.log("************************************");
+    }
+
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        Log.i("mtbfdebug", "RunInActivity - onActivityResult requestCode==" + requestCode);
+        Log.i("mtbfdebug", "RunInActivity -onActivityResult resultCode==" + resultCode);
+        Log.i("mtbfdebug", "RunInActivity -onActivityResult data==" + data);
+
+        switch (requestCode) {
+            case REQUEST_CPU_CODE:
+            case REQUEST_2D_CODE:
+            case REQUEST_3D_CODE:
+            case REQUEST_MEMORY_CODE:
+                onCaseActivityResult(requestCode, data, mTestCases);
+                break;
+            case REQUEST_SPEAKER_VIDEO_CODE:
+            case REQUEST_RECEIVER_LCD_CODE:
+            case REQUEST_VIBRATE_MIC_CAMERA_CODE:
+                mFunctions.releaseAll();
+            case REQUEST_SLEEP_CODE:
+                synchronized (mWorkThread) {
+                    this.mWorkThread.notify();
+                }
+                break;
+        }
+    }
+
+    public void onClick(View paramView) {
+        switch (paramView.getId()) {
+            case R.id.runin_selectAll:
+                setSelectAll();
+                break;
+            case R.id.start_runin:
+                start();
+                break;
+        }
+    }
+
+    protected void onCreate(Bundle paramBundle) {
+        super.onCreate(paramBundle);
+        setContentView(R.layout.runin);
+
+        mFunctions = new Functions(this, Functions.RUNIN_MODE);
+        mReceiver = new WorkReceiver();
+        registerReceiver(mReceiver, mFilter);
+        setControl();
+        checkRebootFinished();
+    }
+
+    public Functions getFunctions() {
+        return mFunctions;
+    }
+
+    protected void onDestroy() {
+        unregisterReceiver(mReceiver);
+        super.onDestroy();
+    }
+
+    protected void resetText() {
+        this.twodInfo.setText(R.string.twoD);
+        this.threedInfo.setText(R.string.threeD);
+        this.cpuInfo.setText(R.string.cpu);
+        this.memoryInfo.setText(R.string.memory);
+        this.sleepInfo.setText(R.string.sleep);
+        this.emmcInfo.setText(R.string.emmc);
+        this.rec_lcdInfo.setText(R.string.rec_lcd);
+        this.spe_videoInfo.setText(R.string.spe_video);
+        this.vib_mic_camInfo.setText(R.string.vib_mic_cam);
+        this.rebootInfo.setText(R.string.reboot);
+    }
+
+    @Override
+    protected void updateLoopText(String text) {
+        resetText();
+        currLoop.setText("当前运行" + text + "/" + Parameters.TOTAL_LOOP);
+    }
+
+    @Override
+    protected void onTestComplete() {
+        start.setEnabled(true);
+        selectAll.setEnabled(true);
+        enableCBox(Boolean.valueOf(true));
+        currLoop.setText("测试完成");
+    }
+
+    protected void run() {
+        this.callNumber = 0;
+        this.start.setEnabled(false);
+        this.selectAll.setEnabled(false);
+        enableCBox(Boolean.valueOf(false));
+        mWorkThread = new RunInThread();
+        mWorkThread.start();
+    }
+
+    public class RunInThread extends WorkThread {
+        public void run() {
+            System.out.println("RunIn run");
+            Functions.log(" ");
+            Functions.log("------------------------------------");
+            Functions.log("PRODUCT: " + Build.PRODUCT);
+            Functions.log("MODEL: " + Build.MODEL);
+            Functions.log("VERSION: " + Build.VERSION.RELEASE);
+            Functions.log("HW: " + Build.HARDWARE);
+            Functions.log("SW: " + Build.DISPLAY);
+            Functions.log("IMEI: " + mFunctions.getImei(RunInActivity.this));
+            Functions.log("------------------------------------");
+            Functions.log("************************************");
+            Functions.log("已选择的模块和参数");
+            Functions.log("************************************");
+            getCheckedPara();
+            Functions.log("************************************");
+
+            for (int k = 0; k < Parameters.TOTAL_LOOP; k++) {
+                StringBuilder titleinfo = new StringBuilder("external loop: ");
+                titleinfo.append(k + 1);
+                titleinfo.append("/");
+                titleinfo.append(Parameters.TOTAL_LOOP);
+                titleinfo.append(" begin");
+                Functions.log(titleinfo.toString());
+
+                sendMessage(MSG_UPDATE_LOOP_TEXT, String.valueOf(k + 1));//hcz
+                valinitcases = new InitCases();//hcz
+
+                if (mWorkThread.isRun()) {
+                    //cpu
+                    if (cpuBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("CPU 模块开始-----------DURATION:");
+                        strb.append(Parameters.CPU_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        cpuCase = valinitcases.getCases(InitCases.CPU_ITEM);
+                        mTestCases = InitCases.changeList(mTestCases, cpuCase);
+                        InitCases.setTime(cpuCase, Parameters.CPU_DURATION);
+                        runCase(cpuCase, REQUEST_CPU_CODE);
+                        synchronized (mWorkThread) {
+                            try {
+                                wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        cpuCase.clear();
+                        mTestCases.clear();
+                        Functions.log("cpu 完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.runin_cpuInfo, "CPU 完成");
+                    }
+
+                    //2d
+                    if (twodBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("2D 模块开始-----------DURATION:");
+                        strb.append(Parameters.TWOD_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        twodcase = valinitcases.getCases(InitCases.TWO_D_ITEM);
+                        mTestCases = InitCases.changeList(mTestCases, twodcase);
+                        InitCases.setTime(twodcase, Parameters.TWOD_DURATION);
+                        runCase(twodcase, REQUEST_2D_CODE);
+
+                        synchronized (mWorkThread) {
+                            try {
+                                wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        twodcase.clear();
+                        mTestCases.clear();
+                        Functions.log("2D 模块完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.runin_twodInfo, "2D 模块 完成");
+                    }
+
+                    //3d
+                    if (threedBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("3D 模块开始-----------DURATION:");
+                        strb.append(Parameters.THREED_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        threedcase = valinitcases.getCases(InitCases.THREE_D_ITEM);
+                        mTestCases = InitCases.changeList(mTestCases, threedcase);
+                        InitCases.setTime(threedcase, Parameters.THREED_DURATION);
+                        runCase(threedcase, REQUEST_3D_CODE);
+                        synchronized (mWorkThread) {
+                            try {
+                                wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        threedcase.clear();
+                        mTestCases.clear();
+                        Functions.log("3D模块完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.runin_threedInfo, "3D模块完成");
+                    }
+
+                    //Memory
+                    if (memoryBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("Memory 模块开始-----------DURATION:");
+                        strb.append(Parameters.MEMORY_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        memorycase = valinitcases.getCases(InitCases.MEMORY_ITEM);
+                        mTestCases = InitCases.changeList(mTestCases, memorycase);
+                        InitCases.setTime(memorycase, Parameters.MEMORY_DURATION);
+                        runCase(memorycase, REQUEST_MEMORY_CODE);
+                        synchronized (mWorkThread) {
+                            try {
+                                wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        memorycase.clear();
+                        mTestCases.clear();
+                        Functions.log("Memory 模块完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.runin_memoryInfo, "MEMORY 模块完成");
+                    }
+
+                    //EMMC
+                    if (emmcBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("EMMC 模块开始-----------DURATION:");
+                        strb.append(Parameters.EMMC_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        mFunctions.TestEmmc(RunInActivity.this);
+                        new TimeThread(ACTION_STOP_EMMC, Parameters.EMMC_DURATION).start();
+                        synchronized (mWorkThread) {
+                            try {
+                                wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("EMMC 模块完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.tv_item_emmc, "EMMC 模块完成");
+                    }
+
+                    //Sleep
+                    if (sleepBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("EMMC 模块开始-----------LOOP:");
+                        strb.append(Parameters.SLEEP_LOOP);
+                        Functions.log(strb.toString());
+
+                        Intent localIntent = new Intent(RunInActivity.this, Controller.class);
+                        startActivityForResult(localIntent, REQUEST_SLEEP_CODE);
+                        synchronized (mWorkThread) {
+                            try {
+                                wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("Sleep 模块完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.runin_sleepInfo, "SLEEP 模块完成");
+                    }
+
+                    //rec_lcd
+                    if (rec_lcdBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("Receiver+Lcd 模块开始-----------DURATION:");
+                        strb.append(Parameters.RECEIVER_LCD_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        mFunctions.playMusicByReceiver(RunInActivity.this);
+                        Intent localIntent = new Intent(RunInActivity.this, ColorActivity.class);
+                        startActivityForResult(localIntent, REQUEST_RECEIVER_LCD_CODE);
+                        new TimeThread(Functions.ACTION_STOP_COLOR, Parameters.RECEIVER_LCD_DURATION).start();
+                        synchronized (mWorkThread) {
+                            try {
+                                wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("Receiver+Lcd 模块完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.rec_lcdInfo, "Receiver+Lcd 模块完成");
+                        try {
+                            Thread.sleep(2000);
+                        } catch (InterruptedException e) {
+                            e.printStackTrace();
+                        }
+                    }
+
+                    //speaker+video
+                    if (spe_videoBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("Speaker+Video 模块开始-----------DURATION:");
+                        strb.append(Parameters.SPEAKER_VIDEO_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        Intent localIntent = new Intent(RunInActivity.this, SurfaceActivity.class);
+                        startActivityForResult(localIntent, REQUEST_SPEAKER_VIDEO_CODE);
+                        new TimeThread(Functions.ACTION_STOP_VIDEO, Parameters.SPEAKER_VIDEO_DURATION).start();
+                        synchronized (mWorkThread) {
+                            try {
+                                wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("Speaker+Video 模块完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.spe_videoInfo, "SPEAKER + VIDEO 完成");
+                    }
+
+                    //VIBRATE_MIC_CAMERA_DURATION
+                    if (vib_mic_camBox.isChecked()) {
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("VIBRATE_MIC_CAMERA_DURATION 模块开始-----------DURATION:");
+                        strb.append(Parameters.VIBRATE_MIC_CAMERA_DURATION);
+                        strb.append(" min");
+                        Functions.log(strb.toString());
+
+                        mFunctions.ComplexStartVibrate(RunInActivity.this, Parameters.VIBRATE_MIC_CAMERA_DURATION);
+                        mFunctions.ComplexStartRecordAudio(Parameters.VIBRATE_MIC_CAMERA_DURATION * 60 * 1000);
+                        Intent localIntent = new Intent(RunInActivity.this, CameraTest.class);
+                        startActivityForResult(localIntent, REQUEST_VIBRATE_MIC_CAMERA_CODE);
+                        new TimeThread(Functions.ACTION_STOP_CAMERA, Parameters.VIBRATE_MIC_CAMERA_DURATION).start();
+                        synchronized (mWorkThread) {
+                            try {
+                                wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        if (mFunctions.isRecording()) {
+                            mFunctions.stopRecord();
+                        }
+                        Functions.log("VIBRATE+MIC+CAMERA 模块完成");
+                        sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.vib_mic_camInfo, "Camera+Vibrate+Mic 模块完成");
+                        try {
+                            Thread.sleep(2000);
+                        } catch (InterruptedException e) {
+                            e.printStackTrace();
+                        }
+                    }
+
+                    //reboot
+                    if (rebootBox.isChecked()) {
+
+                        StringBuilder strb = new StringBuilder();
+                        strb.append("reboot 模块开始运行-----------LOOP:");
+                        strb.append(Parameters.REBOOT_LOOP);
+                        Functions.log(strb.toString());
+
+                        Intent localIntent = new Intent(RunInActivity.this, RebootStressActivity.class);
+                        Bundle bundle = new Bundle();
+                        bundle.putBoolean("rebootstart", true);
+                        localIntent.putExtras(bundle);
+                        startActivityForResult(localIntent, REQUEST_REBOOT_CODE);
+                        synchronized (mWorkThread) {
+                            try {
+                                mWorkThread.wait();
+                            } catch (InterruptedException e) {
+                                e.printStackTrace();
+                            }
+                        }
+                        Functions.log("reboot 模块完成");
+                        //sendMessage(MSG_UPDATE_ITEM_TEXT, R.id.runin_rebootInfo,"reboot 完成");
+                    }
+                }
+            }
+            mWorkHandler.sendEmptyMessage(MSG_COMPLETE_TEST);
+        }
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/Functions.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/Functions.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/Functions.java	(revision 167997)
@@ -0,0 +1,909 @@
+
+package com.mtbf.runner;
+
+import java.io.BufferedReader;
+import java.io.BufferedWriter;
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.FileReader;
+import java.io.IOException;
+import java.io.OutputStreamWriter;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.LinkedList;
+import java.util.UUID;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+import org.dom4j.Document;
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+import org.xmlpull.v1.XmlPullParser;
+import org.xmlpull.v1.XmlPullParserException;
+
+import android.content.res.XmlResourceParser;
+import android.net.Uri;
+import android.os.RemoteException;
+import android.os.storage.IMountService;
+import android.os.storage.StorageEventListener;
+
+import com.techain.runtime.Case;
+import com.techain.runtime.R;
+
+import android.content.Context;
+import android.media.AudioManager;
+import android.media.CamcorderProfile;
+import android.media.MediaPlayer;
+import android.media.MediaRecorder;
+import android.os.Build;
+import android.os.Environment;
+import android.os.Vibrator;
+import android.os.storage.StorageManager;
+import android.telephony.TelephonyManager;
+import android.util.Log;
+
+
+public class Functions {
+
+    public final static String LOG_TAG = "mtbfdebug";
+    public static String xLogPath;
+    public static String sLogName;
+    public static String sSingleXmlName;
+    public static String sComplexXmlName;
+    public static String sRunInXmlName;
+    public static String sResultPath;
+
+    public static final String ACTION_STOP_CAMERA = "stop_camera";
+    public static final String ACTION_STOP_VIDEO = "stop_video";
+    public static final String ACTION_STOP_PICTURE = "stop_picture";
+    public static final String ACTION_STOP_COLOR = "stop_color";
+
+    public static String sRootDir = getRootPath();
+
+    public static final int SINGLE_MODE = 1;
+    public static final int COMPLEX_MODE = 2;
+    public static final int RUNIN_MODE = 3;
+
+    public static String sSavePath;
+
+    private static Date date;
+    private static SimpleDateFormat format;
+    private boolean isRecording;
+
+    private IMountService mMountService;
+    private StorageManager mStorageManager;
+    private Document xml;
+    static String currentTime = "";
+    private int orientation;
+
+    private MediaPlayer mMediaPlayer;
+    private Vibrator mVibrator;
+    private AudioManager mAudioManager;
+    private MediaRecorder mMediaRecorder;
+
+    private String mAudioFilePath = "";
+    private File logPath;
+    static File mLogFile;
+    private int audioMode = 0;
+
+    private Context mContext;
+    private WorkThread mEmmcThread;
+
+    boolean isRun;
+
+    public Functions(Context context, int mode) {
+        format = new SimpleDateFormat("MM/dd HH:mm:ss");
+        mContext = context;
+        Log.d("mtbfdebug", "Functions xLogPath== " + xLogPath);
+        logPath = new File(xLogPath);
+        if (!logPath.exists())
+            logPath.mkdir();
+        mLogFile = new File(sLogName);
+
+        Log.d("mtbfdebug", "Functions sLogName== " + sLogName);
+        if (!mLogFile.exists())
+            try {
+                mLogFile.createNewFile();
+            } catch (IOException e1) {
+                e1.printStackTrace();
+            }
+        isRun = true;
+        File file_path = new File(xLogPath);
+        if (!file_path.exists()) {
+            file_path.mkdir();
+        }
+        File file_name = new File(sLogName);
+        if (!file_name.exists()) {
+            try {
+                file_name.createNewFile();
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+        }
+        getParameters(mode);
+    }
+
+    public Functions(Context context) {
+        format = new SimpleDateFormat("MM/dd HH:mm:ss");
+        isRun = true;
+        mContext = context;
+        Log.d("mtbfdebug", "Functions xLogPath== " + xLogPath);
+        logPath = new File(xLogPath);
+        if (!logPath.exists())
+            logPath.mkdir();
+        mLogFile = new File(sLogName);
+        Log.d("mtbfdebug", "Functions sLogName== " + sLogName);
+        File dirs = new File(mLogFile.getParent());
+        if (!dirs.exists()) {
+            dirs.mkdirs();
+        }
+        if (!mLogFile.exists())
+            try {
+                mLogFile.createNewFile();
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+        Log.d("mtbfdebug", "test single models");
+        getParameters(SINGLE_MODE);
+    }
+
+    public static void log(String content) {
+        if (content.equalsIgnoreCase(""))
+            return;
+        getTime();
+        android.util.Log.v(LOG_TAG, content);
+
+        StringBuilder strb = new StringBuilder();
+        strb.append(currentTime);
+        strb.append("  ------------   ");
+        strb.append(content);
+        strb.append("\r\n");
+        if (mLogFile == null)//only for reboot
+        {
+            Functions.xLogPath = Functions.sRootDir + "/runin/log";
+            Functions.sLogName = Functions.xLogPath + "/runin.log";
+            Functions.sSingleXmlName = Functions.sRootDir + "/runin/runin.xml";
+            mLogFile = new File(sLogName);
+        }
+        BufferedWriter localBufferedWriter = null;
+        try {
+            localBufferedWriter = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(mLogFile, true)));
+            localBufferedWriter.write(strb.toString());
+        } catch (FileNotFoundException e1) {
+            e1.printStackTrace();
+        } catch (IOException e) {
+            e.printStackTrace();
+        } finally {
+            try {
+                if (localBufferedWriter != null) {
+                    localBufferedWriter.close();
+                }
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+        }
+    }
+
+    public void sleep(int ms) {
+        try {
+            Thread.sleep(ms);
+        } catch (InterruptedException e) {
+            e.printStackTrace();
+        }
+    }
+
+    public String getImei(Context context) {
+
+        TelephonyManager tm = (TelephonyManager) context.getSystemService("phone");
+        return tm.getDeviceId();
+    }
+
+    public static String getRootPath() {
+        File sdDir = null;
+        boolean sdCardExist = Environment.getExternalStorageState()
+                .equals(android.os.Environment.MEDIA_MOUNTED);
+        if (sdCardExist) {
+            sdDir = Environment.getExternalStorageDirectory();
+        }
+        if (sdDir != null) {
+            return sdDir.toString();
+        } else {
+            return "/sdcard/";
+        }
+    }
+
+    public void stopEmmc() {
+        if (mEmmcThread != null && mEmmcThread.isRun()) {
+            Log.d("mtbfdebug", "stopEmmc begin");
+            mEmmcThread.stopThread();
+            Log.d("mtbfdebug", "stopEmmc end");
+        }
+    }
+
+    public void stopMusic() {
+        if (mMediaPlayer != null) {
+            Log.d("mtbfdebug", "stopMusic begin");
+            if (mAudioManager != null) {
+                mAudioManager.setMode(audioMode);
+            }
+            mMediaPlayer.stop();
+            mMediaPlayer.reset();
+            mMediaPlayer.release();
+            mMediaPlayer = null;
+            Log.d("mtbfdebug", "stopMusic end");
+        }
+    }
+
+    public void setRun() {
+        isRun = false;
+    }
+
+    public void stopVibrate() {
+        Log.d("mtbfdebug", "stopVibrate begin");
+        if (mVibrator != null) {
+            mVibrator.cancel();
+            mVibrator = null;
+        }
+        Log.d("mtbfdebug", "stopVibrate end");
+    }
+
+    public void stopRecord() {
+        Log.d("mtbfdebug", "stopRecord begin");
+        if (mMediaRecorder != null) {
+            mMediaRecorder.stop();
+            mMediaRecorder.release();
+            isRecording = false;
+        }
+        Log.d("mtbfdebug", "stopRecord begin");
+    }
+
+    public void startVibrate(Context obj, int loop) {
+        new VibrateThread(obj, loop).start();
+    }
+
+    public void mountSDcard() {
+
+    }
+
+    public String getResult(LinkedList<Case> mCases) {
+        String result = "";
+        Case mycase;
+        for (int i = 0; i < mCases.size(); i++) {
+            mycase = mCases.get(i);
+            if (!mycase.couldFetchReport()) continue;
+            result += "============================================================\n";
+            if (mycase.getTitle() != null) {
+                result += mycase.getTitle() + "\n";
+            } else {
+                result += "\n";
+            }
+            result += "------------------------------------------------------------\n";
+            if (mycase.getResultOutput() != null) {
+                result += mycase.getResultOutput().trim() + "\n";
+            } else {
+                result += "\n";
+            }
+        }
+        result += "============================================================\n";
+
+        return result;
+    }
+
+    public void writeResult(String filename, String output, Context context) {
+        File file = new File(filename);
+        if (file.exists()) {
+            log("File exists, delete " + filename);
+            file.delete();
+        }
+        Log.d("mtbfdebug", "writeResult...... ");
+        Log.d("mtbfdebug", "result path : " + file.getPath());
+        try {
+            file.createNewFile();
+            FileOutputStream fos = new FileOutputStream(file);
+            fos.write(output.getBytes());
+            fos.flush();
+        } catch (Exception e) {
+            log("Write Failed.");
+            e.printStackTrace();
+        }
+        Log.d("mtbfdebug", "writeResult finish! ");
+    }
+
+    public void releaseAll() {
+        Log.d("mtbfdebug", "releaseAll");
+        stopMusic();
+        stopVibrate();
+        stopEmmc();
+        stopRecord();
+        setRun();
+    }
+
+    public static String getIndexStr(int index, int loop) {
+        StringBuilder strb = new StringBuilder();
+        strb.append("Loop");
+        strb.append(index + 1);
+        strb.append("/");
+        strb.append(loop);
+        return strb.toString();
+    }
+
+
+    public String getXMLResult(LinkedList<Case> cases) {
+        if (cases.size() == 0)
+            return "";
+        Date date = new Date();
+        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssz");
+        String xml = "";
+        xml += "<?xml version=\"1.0\" encoding=\"UTF-8\"?>";
+        xml += "<result";
+        xml += " executedTimestamp=\"" + sdf.format(date) + "\"";
+        xml += " manufacturer=\"" + Build.MANUFACTURER.replace(' ', '_') + "\"";
+        xml += " model=\"" + Build.MODEL.replace(' ', '_') + ":" + Build.DISPLAY + "\"";
+        xml += " buildTimestamp=\"" + sdf.format(new Date(Build.TIME)) + "\"";
+        xml += " orientation=\"" + Integer.toString(orientation) + "\"";
+
+        try { // read kernel version
+            BufferedReader procVersion = new BufferedReader(new FileReader("/proc/version"));
+            StringBuffer sbuff = new StringBuffer();
+            String tmp;
+            while ((tmp = procVersion.readLine()) != null)
+                sbuff.append(tmp);
+            procVersion.close();
+            tmp = sbuff.toString().replace("[\n\r]+", " ").replace(" +", ".");
+            xml += " version=\"" + tmp + "\"";
+        } catch (IOException e) {
+            Log.e("mtbfdebug", "opening /proc/version failed: " + e.toString());
+        }
+
+        try { // read and parse cpu info
+            BufferedReader procVersion = new BufferedReader(new FileReader("/proc/cpuinfo"));
+            StringBuffer sbuff = new StringBuffer();
+            String tmp;
+            while ((tmp = procVersion.readLine()) != null)
+                sbuff.append(tmp + "\n");
+            procVersion.close();
+
+            tmp = sbuff.toString();
+
+            sbuff = new StringBuffer();
+
+            Pattern p1 = Pattern.compile("(Processor\\s*:\\s*(.*)\\s*[\n\r]+)");
+            Matcher m1 = p1.matcher(tmp);
+            if (m1.find()) sbuff.append(m1.group(2));
+
+            Pattern p2 = Pattern.compile("(Hardware\\s*:\\s*(.*)\\s*[\n\r]+)");
+            Matcher m2 = p2.matcher(tmp);
+            if (m2.find()) sbuff.append(":" + m2.group(2));
+
+            Pattern p3 = Pattern.compile("(Revision\\s*:\\s*(.*)\\s*[\n\r]+)");
+            Matcher m3 = p3.matcher(tmp);
+            if (m3.find()) sbuff.append(":" + m3.group(2));
+
+            Log.e("mtbfdebug", sbuff.toString());
+            xml += " cpu=\"" + sbuff.toString() + "\"";
+        } catch (IOException e) {
+            Log.e("mtbfdebug", "opening /proc/version failed: " + e.toString());
+        }
+
+        xml += ">";
+
+        Case mycase;
+        for (int i = 0; i < cases.size(); i++) {
+            mycase = cases.get(i);
+            xml += mycase.getXMLBenchmark();
+        }
+        xml += "</result>";
+        return xml;
+    }
+
+    public String getJSONResult(LinkedList<Case> cases) {
+        Date date = new Date();
+        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'");
+
+        JSONObject result = new JSONObject();
+        try {
+            JSONArray testRunsArray = new JSONArray();
+            JSONObject testRunsObject = new JSONObject();
+            testRunsObject.put("analyzer_assigned_date", sdf.format(date));
+            testRunsObject.put("time_check_performed", false);
+            testRunsObject.put("analyzer_assigned_uuid", UUID.randomUUID().toString());
+            testRunsObject.put("test_id", "0xbench");
+
+            JSONArray testResultsList = new JSONArray();
+            Case myCase;
+            for (int i = 0; i < cases.size(); i++) {
+                myCase = cases.get(i);
+                JSONArray caseResultList = myCase.getJSONBenchmark();
+                for (int j = 0; j < caseResultList.length(); j++) {
+                    testResultsList.put(caseResultList.get(j));
+                }
+            }
+            testRunsObject.put("test_results", testResultsList);
+            testRunsArray.put(testRunsObject);
+            result.put("test_runs", testRunsArray);
+            result.put("format", "Dashboard Bundle Format 1.2");
+        } catch (JSONException jsonE) {
+            jsonE.printStackTrace();
+        }
+        return result.toString();
+    }
+
+    public void TestEmmc(Context context) {
+        mEmmcThread = new EmmcThread(context);
+        mEmmcThread.start();
+    }
+
+    private void getParameters(int mode) {
+        XmlResourceParser parser;
+        int resId;
+        if (mode == COMPLEX_MODE) {
+            resId = R.xml.complex_config;
+        } else if (mode == RUNIN_MODE) {
+            resId = R.xml.runin_config;
+        } else {
+            resId = R.xml.single_config;
+        }
+        try {
+            parser = mContext.getResources().getXml(resId);
+            String nodeName;
+            int type = parser.getEventType();
+            while (type != XmlPullParser.END_DOCUMENT) {
+                nodeName = parser.getName();
+                if (type == XmlPullParser.START_TAG) {
+                    if (!"config".equals(nodeName)) {
+                        switch (nodeName) {
+                            case "total_loop":
+                                Parameters.TOTAL_LOOP = Integer.parseInt(parser.nextText());
+                                break;
+                            case "speaker_duration":
+                                Parameters.SPEAKER_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                            case "receiver_duration":
+                                Parameters.RECEIVER_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                            case "video_duration":
+                                Parameters.VIDEO_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                            case "camera_duration":
+                                Parameters.CAMERA_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                            case "bt_loop":
+                                Parameters.BT_LOOP = Integer.parseInt(parser.nextText());
+                                break;
+                            case "wifi_loop":
+                                Parameters.WIFI_LOOP = Integer.parseInt(parser.nextText());
+                                break;
+                            case "mic_loop":
+                                Parameters.MIC_LOOP = Integer.parseInt(parser.nextText());
+                                break;
+                            case "mic_interval":
+                                Parameters.MIC_INTERVAL = Integer.parseInt(parser.nextText());
+                                break;
+                            case "vibrate_loop":
+                                Parameters.Vibrate_LOOP = Integer.parseInt(parser.nextText());
+                                break;
+                            case "gps_loop":
+                                Parameters.GPS_LOOP = Integer.parseInt(parser.nextText());
+                                break;
+                            case "sd_loop":
+                                Parameters.SD_LOOP = Integer.parseInt(parser.nextText());
+                                break;
+                            case "twod_duration":
+                                Parameters.TWOD_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                            case "threed_duration":
+                                Parameters.THREED_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                            case "cpu_duration":
+                                Parameters.CPU_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                            case "memory_duration":
+                                Parameters.MEMORY_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                            case "sleep_loop":
+                                Parameters.SLEEP_LOOP = Integer.parseInt(parser.nextText());
+                                break;
+                            case "lcd_loop":
+                                Parameters.LCD_LOOP = Integer.parseInt(parser.nextText());
+                                break;
+                            case "emmc_duration":
+                                Parameters.EMMC_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                            case "speaker_camera_vibrate_mic_duration":
+                                Parameters.SPEAKER_CAMERA_VIBRATE_MIC_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                            case "receiver_picture_vibrate_mic_duration":
+                                Parameters.RECEIVER_PICTURE_VIBRATE_MIC_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                            case "video_vibrate_mic_duration":
+                                Parameters.VIDEO_VIBRATE_MIC_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                            case "receiver_2d_3d_duration":
+                                Parameters.RECEIVER_2D_3D_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                            case "speaker_vibrate_mic_duration":
+                                Parameters.SPEAKER_VIBRATE_MIC_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                            case "rec_lcd_duration":
+                                Parameters.RECEIVER_LCD_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                            case "speaker_video_duration":
+                                Parameters.SPEAKER_VIDEO_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                            case "vibrate_mic_camera_duration":
+                                Parameters.VIBRATE_MIC_CAMERA_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                            case "reboot_loop":
+                                Parameters.REBOOT_LOOP = Integer.parseInt(parser.nextText());
+                                break;
+                            case "lcd_speaker_duration":
+                                Parameters.LCD_SPEAKER_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                            case "sdcard_duration":
+                                Parameters.SDCARD_DURATION = Integer.parseInt(parser.nextText());
+                                break;
+                        }
+                    }
+                }
+                type = parser.next();
+            }
+        } catch (XmlPullParserException e) {
+            e.printStackTrace();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+    }
+
+    public static void getTime() {
+        date = new Date();
+        if (format != null) {
+            currentTime = format.format(date);
+        } else {
+            format = new SimpleDateFormat("MM/dd HH:mm:ss");
+            currentTime = format.format(date);
+        }
+    }
+
+    public void playMusicByReceiver(Context context) {
+        mAudioManager = (AudioManager) context.getSystemService(Context.AUDIO_SERVICE);
+        //mAudioManager.setSpeakerphoneOn(false);
+        audioMode = mAudioManager.getMode();
+
+        Functions.log("playMusicByReceiver  audioMode== " + audioMode);
+        mAudioManager.setMode(2);//receiver
+        mMediaPlayer = new MediaPlayer();
+        mMediaPlayer.reset();
+        try {
+            Functions.log("playMusicByReceiver going to mMediaPlayer.setDataSource()");
+            //mMediaPlayer.setDataSource(Parameters.MUSIC_PATH);
+            mMediaPlayer.setDataSource(context, Uri.parse("android.resource://" + context.getPackageName() + "/" + R.raw.test_audio));
+        } catch (IllegalArgumentException e) {
+            e.printStackTrace();
+        } catch (SecurityException e) {
+            e.printStackTrace();
+        } catch (IllegalStateException e) {
+            e.printStackTrace();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        mMediaPlayer.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {
+            public void onCompletion(MediaPlayer paramAnonymousMediaPlayer) {
+                if (paramAnonymousMediaPlayer != null) {
+                    mMediaPlayer.start();
+                    Log.d("mtbfdebug", "mFunctions->playMusicByReceiver-->onCompletion: ");
+                }
+            }
+        });
+        try {
+            Functions.log("playMusicByReceiver going to mMediaPlayer.prepare()");
+            mMediaPlayer.prepare();
+        } catch (IllegalStateException e) {
+            e.printStackTrace();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        getTime();
+        Functions.log("playMusicByReceiver going to mMediaPlayer.start()");
+        mMediaPlayer.start();
+        //if(ChooseActivity.IsRuninModel())
+    }
+
+    void playMusicByReceiverwWithMplayer(Context context) {
+
+        //Functions.log("Parameters.MUSIC_PATH == " + Parameters.MUSIC_PATH);
+
+        mAudioManager = (AudioManager) context.getSystemService(Context.AUDIO_SERVICE);
+        //mAudioManager.setSpeakerphoneOn(false);
+        audioMode = mAudioManager.getMode();
+        Functions.log("playMusicByReceiverwWithMplayer  audioMode== " + audioMode);
+
+        mAudioManager.setMode(2);//receiver
+        //String path = Parameters.MUSIC_PATH;
+        String mplayerPath = "system/bin/mplayer";
+        //isPlay=true;
+        String[] cmd = new String[]{
+                mplayerPath,
+                //        path
+        };
+        try {
+            Process proc = Runtime.getRuntime().exec(cmd);
+        } catch (IOException e1) {
+            e1.printStackTrace();
+            return;
+        }
+    }
+
+    public void playMusic(Context context) {
+        mAudioManager = (AudioManager) context.getSystemService(Context.AUDIO_SERVICE);
+        mAudioManager.setMode(0x00);///speaker
+        mMediaPlayer = new MediaPlayer();
+        try {
+            //mMediaPlayer.setDataSource(Parameters.MUSIC_PATH);
+            mMediaPlayer.setDataSource(context, Uri.parse("android.resource://" + context.getPackageName() + "/" + R.raw.test_audio));
+        } catch (IllegalArgumentException e) {
+            e.printStackTrace();
+        } catch (SecurityException e) {
+            e.printStackTrace();
+        } catch (IllegalStateException e) {
+            e.printStackTrace();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        mMediaPlayer.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {
+
+
+            public void onCompletion(MediaPlayer paramAnonymousMediaPlayer) {
+                if (paramAnonymousMediaPlayer != null) {
+                    mMediaPlayer.start();
+                    Log.d("mtbfdebug", "mFunctions->playMusic-->onCompletion: ");
+                }
+            }
+        });
+        try {
+            mMediaPlayer.prepare();
+        } catch (IllegalStateException e) {
+            e.printStackTrace();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        getTime();
+        mMediaPlayer.start();
+        //if(ChooseActivity.IsRuninModel())
+    }
+
+//    public boolean checkResource(String filePath) {
+//        if (filePath == null) {
+//            return false;
+//        }
+//        File file = new File(filePath);
+//        return file.exists();
+//    }
+
+    public void ComplexStartVibrate(Context obj, int loop) {
+        new VibrateThread(obj, loop).start();
+    }
+
+    public void ComplexStartRecordAudio(int millSecond) {
+        mMediaRecorder = new MediaRecorder();
+        new RecordThread().start();
+    }
+
+    private synchronized IMountService getMountService(Context context) {
+        final IMountService MountService = (IMountService) context.getSystemService("mount");///*ServiceManager.getService("mount")*/;
+        return MountService;
+
+    }
+
+    public void TestSDcard(Context obj, int loop) {
+        new SDThread(obj, loop).start();
+    }
+
+    class EmmcThread extends WorkThread {
+        private Context context;
+
+        EmmcThread(Context context) {
+            this.context = context;
+        }
+
+        public void run() {
+            //for (int j = 0; j < Parameters.EMMC_LOOP; j++) {
+            StringBuilder strb = new StringBuilder();
+            strb.append("EMMC 正在运行");
+            ((BaseActivity) context).sendMessage(RunInActivity.MSG_UPDATE_ITEM_TEXT, R.id.tv_item_emmc, strb.toString());
+            while (isRun()) {
+                FileOutputStream out;
+                String content = "aa";
+                try {
+                    out = context.openFileOutput("testemmc.txt", 0x02);
+                    for (int i = 0; i < 100 * 1024; i++) {
+                        out.write(content.getBytes());
+                    }
+                    out.close();
+                    //Functions.log("EMMC has been 2M!");
+                } catch (IOException ex) {
+                    ex.printStackTrace();
+                }
+                ByteArrayOutputStream baos;//=new ByteArrayOutputStream();
+                try {
+                    FileInputStream in = context.openFileInput("testemmc.txt");
+                    baos = new ByteArrayOutputStream();
+                    int len;
+                    byte[] buffer = new byte[0x200000];
+                    while ((len = in.read(buffer)) != -1) {
+                        baos.write(buffer, 0, len);
+                    }
+                } catch (FileNotFoundException e) {
+                    Functions.log("testemmc.txt not found");
+                    e.printStackTrace();
+                } catch (IOException e) {
+                    Functions.log("testemmc.txt read error! ");
+                    e.printStackTrace();
+                }
+                File file = new File("/data/data/com.techain.runtime/files/testemmc.txt");
+                if (file.exists()) {
+                    file.delete();
+                    //Functions.log("testemmc.txt deleted");
+                }
+            }
+            synchronized (((BaseActivity) context).mWorkThread) {
+                ((BaseActivity) context).mWorkThread.notify();
+            }
+        }
+    }
+
+    class VibrateThread extends WorkThread {
+        private Context context;
+        int valLoop;
+
+        VibrateThread(Context context, int loop) {
+            this.context = context;
+            valLoop = loop;
+        }
+
+        public void run() {
+            isRun = true;
+            mVibrator = (Vibrator) context.getSystemService(Context.VIBRATOR_SERVICE);
+            Functions.log("VibrateThread run valLoop== " + valLoop);
+            //for (int i = 0; i < valLoop; i++) {
+            while (isRun()) {
+                StringBuilder info = new StringBuilder();
+                info.append("震动测试正在运行  ");
+                //info.append(i + 1);
+                //info.append("/");
+                //info.append(valLoop);
+                //((BaseActivity) context).sendMessage(SingleActivity.MSG_UPDATE_ITEM_TEXT, R.id.vibrateInfo, info.toString());
+                if (mVibrator != null) {
+                    mVibrator.vibrate(new long[]{100, 200}, 0);
+                }
+                try {
+                    Thread.sleep(60 * 000);
+                } catch (InterruptedException e) {
+                    e.printStackTrace();
+                }
+                if (mVibrator != null) {
+                    mVibrator.cancel();
+                }
+                try {
+                    Thread.sleep(2000);
+                } catch (InterruptedException e) {
+                    e.printStackTrace();
+                }
+
+                for (int j = 0; j < 4; j++) {
+                    if (mVibrator != null) {
+                        mVibrator.vibrate(new long[]{100, 15000}, 0);
+                    }
+                    try {
+                        Thread.sleep(15000);
+                    } catch (InterruptedException e) {
+                        e.printStackTrace();
+                    }
+                    if (mVibrator != null) {
+                        mVibrator.cancel();
+                    }
+                }
+                try {
+                    Thread.sleep(1000);
+                } catch (InterruptedException e) {
+                    e.printStackTrace();
+                }
+
+            }
+            synchronized (((BaseActivity) context).mWorkThread) {
+                ((BaseActivity) context).mWorkThread.notify();
+            }
+        }
+    }
+
+    class RecordThread extends WorkThread {
+
+        public void run() {
+            isRun = true;
+            mAudioFilePath = getRootPath() + "/runin";
+            log("mAudioFilePath ==" + mAudioFilePath);
+            File recordFile = new File(mAudioFilePath + "/testrecorder.amr");
+            if (recordFile.exists()) {
+                recordFile.delete();
+            }
+            mMediaRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);
+            mMediaRecorder.setOutputFormat(MediaRecorder.OutputFormat.AMR_NB);
+            mMediaRecorder.setAudioEncoder(CamcorderProfile.QUALITY_HIGH);
+            mMediaRecorder.setOutputFile(mAudioFilePath + "/testrecorder.mp4");
+            try {
+                mMediaRecorder.prepare();
+            } catch (IllegalStateException e) {
+                log("mediaRecorder.prepare fail");
+                mMediaRecorder.release();
+                e.printStackTrace();
+            } catch (IOException e) {
+                log("mediaRecorder.prepare2 fail");
+                mMediaRecorder.release();
+                e.printStackTrace();
+            }
+            mMediaRecorder.start();
+            isRecording = true;
+        }
+    }
+
+    boolean isRecording() {
+        return isRecording;
+    }
+
+    class SDThread extends WorkThread {
+        private Context context;
+        private int loop;
+
+        SDThread(Context obj, int loop) {
+            context = obj;
+            this.loop = loop;
+        }
+
+        public void run() {
+            isRun = true;
+            IMountService mountService = getMountService(context);
+            StorageEventListener mStorageListener = new StorageEventListener() {
+
+                public void onStorageStateChanged(String path, String oldState, String newState) {
+                    Log.d("mtbfdebug", "oldState " + oldState + "newState " + newState);
+                }
+
+            };
+            mStorageManager = (StorageManager) context.getSystemService(Context.STORAGE_SERVICE);
+            //mStorageManager.registerListener(mStorageListener);
+
+            for (int i = 0; i < loop; i++) {
+                String str = "SD卡测试正在运行  " + i + 1 + "/" + loop;
+                ((SingleActivity) context).sendMessage(3, 0xc, str);
+                log("SD卡测试正在运行  " + i + 1 + "/" + loop);
+                final String EXTERNAL_DIR = Environment.getExternalStorageDirectory().getPath();
+                try {
+                    mountService.unmountVolume(EXTERNAL_DIR, true, false);
+                } catch (RemoteException e) {
+                    e.printStackTrace();
+                }
+                try {
+                    Thread.sleep(5000);
+                } catch (InterruptedException e) {
+                    e.printStackTrace();
+                }
+                try {
+                    mountService.mountVolume(EXTERNAL_DIR);
+                } catch (RemoteException e) {
+                    e.printStackTrace();
+                }
+                try {
+                    Thread.sleep(5000);
+                } catch (InterruptedException e) {
+                    e.printStackTrace();
+                }
+            }
+        }
+    }
+
+    public void WriteCasesLog(LinkedList<Case> mCases) {
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/WorkThread.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/WorkThread.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/WorkThread.java	(revision 167997)
@@ -0,0 +1,14 @@
+package com.mtbf.runner;
+
+/**
+ * Created by chiu on 2016/7/8.
+ */
+public class WorkThread extends Thread {
+    protected boolean mIsRun = true;
+    protected boolean isRun() {
+        return mIsRun;
+    }
+    protected void stopThread() {
+        mIsRun = false;
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/Dev_MountInfo.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/Dev_MountInfo.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/Dev_MountInfo.java	(revision 167997)
@@ -0,0 +1,131 @@
+package com.mtbf.runner;
+
+import android.os.Environment;
+
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.FileReader;
+import java.io.IOException;
+import java.util.ArrayList;
+
+public class Dev_MountInfo
+        implements IDev {
+    private static Dev_MountInfo dev;
+    private final int DEV_EXTERNAL = 1;
+    private final int DEV_INTERNAL = 0;
+    public final String HEAD = "dev_mount";
+    public final String LABEL = "<label>";
+    public final String MOUNT_POINT = "<mount_point>";
+    private final int NLABEL = 1;
+    private final int NMOUNT_POINT = 3;
+    private final int NPATH = 2;
+    private final int NSYSFS_PATH = 4;
+    public final String PATH = "<part>";
+    public final String SYSFS_PATH = "<sysfs_path1...>";
+    private final File VOLD_FSTAB = new File(Environment.getRootDirectory().getAbsoluteFile() + File.separator + "etc" + File.separator + "vold.fstab");
+    private ArrayList<String> cache = new ArrayList();
+    private DevInfo info;
+
+    private DevInfo getInfo(int paramInt) {
+        if (this.info == null)
+            this.info = new DevInfo();
+        try {
+            initVoldFstabToCache();
+
+            System.out.println("this.cache.size()==" + this.cache.size());
+            if (paramInt >= this.cache.size())
+                return null;
+
+
+            String[] arrayOfString = cache.get(paramInt).split(" ");
+            this.info.setLabel(arrayOfString[1]);
+            this.info.setMount_point(arrayOfString[3]);
+            this.info.setPath(arrayOfString[2]);
+            this.info.setSysfs_path(arrayOfString[4]);
+        } catch (IOException localIOException) {
+            //while (true)
+            localIOException.printStackTrace();
+        }
+        return this.info;
+    }
+
+    public static Dev_MountInfo getInstance() {
+        if (dev == null)
+            dev = new Dev_MountInfo();
+        return dev;
+    }
+
+    private void initVoldFstabToCache()
+            throws IOException {
+        this.cache.clear();
+
+        System.out.println("this.VOLD_FSTAB==" + this.VOLD_FSTAB);
+        BufferedReader localBufferedReader = new BufferedReader(new FileReader(this.VOLD_FSTAB));
+        while (true) {
+            String str = localBufferedReader.readLine();
+
+            System.out.println("initVoldFstabToCache str==" + str);
+            if (str == null)
+                break;
+            if (str.startsWith("dev_mount"))
+                this.cache.add(str);
+        }
+        localBufferedReader.close();
+        this.cache.trimToSize();
+    }
+
+    public DevInfo getExternalInfo() {
+        return getInfo(0);
+    }
+
+    public DevInfo getInternalInfo() {
+        return getInfo(0);
+    }
+
+    public class DevInfo {
+        private String label;
+        private String mount_point;
+        private String path;
+        private String sysfs_path;
+
+        public DevInfo() {
+        }
+
+        private void setLabel(String paramString) {
+            this.label = paramString;
+        }
+
+        private void setMount_point(String paramString) {
+            this.mount_point = paramString;
+        }
+
+        private void setPath(String paramString) {
+            this.path = paramString;
+        }
+
+        private void setSysfs_path(String paramString) {
+            this.sysfs_path = paramString;
+        }
+
+        public String getLabel() {
+            return this.label;
+        }
+
+        public String getMount_point() {
+            return this.mount_point;
+        }
+
+        public String getPath() {
+            return this.path;
+        }
+
+        public String getSysfs_path() {
+            return this.sysfs_path;
+        }
+    }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.mtbf.runner.Dev_MountInfo
+ * JD-Core Version:    0.6.2
+ */
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/ScreenTest.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/ScreenTest.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/ScreenTest.java	(revision 167997)
@@ -0,0 +1,155 @@
+package com.mtbf.runner;
+
+import android.app.Activity;
+import android.app.AlarmManager;
+import android.app.PendingIntent;
+import android.app.admin.DeviceAdminReceiver;
+import android.app.admin.DevicePolicyManager;
+import android.content.BroadcastReceiver;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.os.Bundle;
+import android.os.PowerManager;
+import android.os.PowerManager.WakeLock;
+import android.util.Log;
+import android.widget.TextView;
+
+import java.io.PrintStream;
+
+import com.techain.runtime.R;
+
+public class ScreenTest extends DeviceAdminReceiver {
+    public static class Controller extends Activity {
+        private static final String TAG = "screenTest";
+        private static int TEST_CNT_MAX = 0;
+        public static final String TIMER_EXPIRED = "timerExpired";
+        private static final String fileName = "/data/data/com.techain.reboottest/BootCheck.txt";
+        private static final String filePath = "/data/data/com.techain.reboottest/";
+        private static int mLockCnt;
+        private static boolean mStateLock = false;
+        private AlarmManager alarmManager = null;
+        private ComponentName componentName = null;
+        Functions functions;
+        private MyReceiver mReceiver;
+        private TextView mTextView = null;
+        private PowerManager.WakeLock mWakeLock = null;
+        private DevicePolicyManager policyManager = null;
+        private Intent unLockIntent = null;
+
+        static {
+            mLockCnt = 0;
+        }
+
+        private void activeManager() {
+            Intent localIntent = new Intent("android.app.action.ADD_DEVICE_ADMIN");
+            localIntent.putExtra("android.app.extra.DEVICE_ADMIN", this.componentName);
+            startActivityForResult(localIntent, 1);
+        }
+
+        private void lockScreen() {
+            if (this.policyManager == null)
+                this.policyManager = ((DevicePolicyManager) getSystemService("device_policy"));
+            if (this.componentName == null)
+                this.componentName = new ComponentName(this, ScreenTest.class);
+            if (this.mWakeLock != null)
+                this.mWakeLock.release();
+            boolean bool = this.policyManager.isAdminActive(this.componentName);
+            Log.d("mtbfdebug", "lock screen");
+            if (!bool) {
+                activeManager();
+                return;
+            }
+            mStateLock = true;
+            this.policyManager.lockNow();
+        }
+
+        private void setTimer(long paramLong) {
+            PendingIntent localPendingIntent = PendingIntent.getBroadcast(this, 0, new Intent(this, AlarmReceiver.class), 0);
+            this.alarmManager.set(0, paramLong + System.currentTimeMillis(), localPendingIntent);
+            Log.d("ww_debug", "setTimer time = " + paramLong);
+        }
+
+        private void unLockScreen() {
+            this.mWakeLock = ((PowerManager) getSystemService(Context.POWER_SERVICE)).newWakeLock(268435462, "SimpleTimer");
+            this.mWakeLock.acquire();
+            Log.d("mtbfdebug", "unlock screen");
+        }
+
+        public void finish() {
+            PendingIntent localPendingIntent = PendingIntent.getBroadcast(this, 0, new Intent(this, AlarmReceiver.class), 0);
+            this.alarmManager.cancel(localPendingIntent);
+            mStateLock = false;
+            mLockCnt = 0;
+            if (this.mWakeLock != null)
+                this.mWakeLock.release();
+            unregisterReceiver(this.mReceiver);
+            Log.d("ww_debug", "finish ");
+            super.finish();
+        }
+
+        protected void onCreate(Bundle paramBundle) {
+            super.onCreate(paramBundle);
+            setContentView(R.layout.sleeptest);
+            if (ChooseActivity.IsComplexModel().booleanValue())
+                this.functions = new Functions(this, Functions.COMPLEX_MODE);
+            else if (ChooseActivity.IsRuninModel().booleanValue())
+                this.functions = new Functions(this, Functions.RUNIN_MODE);
+            else
+                this.functions = new Functions(this);
+
+            //else//while (true)
+            {
+                TEST_CNT_MAX = 2 * Parameters.SLEEP_LOOP;
+                this.functions.log("Sleep test start");
+                if (this.policyManager == null)
+                    this.policyManager = ((DevicePolicyManager) getSystemService(Context.DEVICE_POLICY_SERVICE));
+                if (this.componentName == null)
+                    this.componentName = new ComponentName(this, ScreenTest.class);
+                if (this.alarmManager == null)
+                    this.alarmManager = ((AlarmManager) getSystemService(Context.ALARM_SERVICE));
+                this.policyManager = ((DevicePolicyManager) getSystemService(Context.DEVICE_POLICY_SERVICE));
+                this.componentName = new ComponentName(this, ScreenTest.class);
+                activeManager();
+                setTimer(1000L);
+                try {
+                    IntentFilter localIntentFilter = new IntentFilter("timerExpired");
+                    this.mReceiver = new MyReceiver();
+                    registerReceiver(this.mReceiver, localIntentFilter);
+                    //return;
+                } catch (Exception localException) {
+                }
+            }
+        }
+
+        protected void onDestroy() {
+            super.onDestroy();
+        }
+
+        public class MyReceiver extends BroadcastReceiver {
+            public void onReceive(Context paramContext, Intent paramIntent) {
+                Log.d("mtbfdebug", "test cnt = " + ScreenTest.Controller.mLockCnt + " state = " + ScreenTest.Controller.mStateLock + " max = " + ScreenTest.Controller.TEST_CNT_MAX);
+                if (ScreenTest.Controller.mLockCnt >= ScreenTest.Controller.TEST_CNT_MAX) {
+                    ScreenTest.Controller.this.unLockScreen();
+                    ScreenTest.Controller.this.finish();
+                    return;
+                }
+                mLockCnt++;
+                if (ScreenTest.Controller.mStateLock) {
+                    ScreenTest.Controller.this.unLockScreen();
+                    ScreenTest.Controller.mStateLock = false;
+                    ScreenTest.Controller.this.functions.log("SLEEP模块完成---LOOP：" + ScreenTest.Controller.mLockCnt / 2 + "/" + Parameters.SLEEP_LOOP);
+                    System.out.println("mStateLock " + ScreenTest.Controller.mStateLock + "mLockCnt " + ScreenTest.Controller.mLockCnt);
+                    ScreenTest.Controller.this.setTimer(3000L);
+                    //return;
+                } else {
+                    ScreenTest.Controller.this.lockScreen();
+                    ScreenTest.Controller.mStateLock = true;
+                    System.out.println("mStateLock " + ScreenTest.Controller.mStateLock + "mLockCnt " + ScreenTest.Controller.mLockCnt);
+                    ScreenTest.Controller.this.setTimer(10000L);
+                }
+            }
+        }
+    }
+}
Index: vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/AlarmReceiver.java
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/AlarmReceiver.java	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/src/com/mtbf/runner/AlarmReceiver.java	(revision 167997)
@@ -0,0 +1,25 @@
+package com.mtbf.runner;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.util.Log;
+import java.io.PrintStream;
+
+public class AlarmReceiver extends BroadcastReceiver
+{
+  public static final String TIMER_EXPIRED = "timerExpired";
+
+  public void onReceive(Context paramContext, Intent paramIntent)
+  {
+    Intent localIntent = new Intent("timerExpired");
+    Log.d("ww_debug", "AlarmReceiver!");
+    System.out.println("alarmreceiver");
+    paramContext.sendBroadcast(localIntent);
+  }
+}
+
+/* Location:           D:\APktool\dex2jar-0.0.9.15\dex2jar-0.0.9.15\classes_dex2jar.jar
+ * Qualified Name:     com.mtbf.runner.AlarmReceiver
+ * JD-Core Version:    0.6.2
+ */
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/res/values/strings.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/values/strings.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/values/strings.xml	(revision 167997)
@@ -0,0 +1,75 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="app_name">RunIn Version 1.0</string>
+    <string name="Status">Status</string>
+    <string name="Runin">Runin</string>
+    <string name="choose_mode">请选择运行模式</string>
+    <string name="speaker_camera_vibrate_mic">Speaker+Camera+Vibrate+Mic</string>
+    <string name="receiver_picture_vibrate_mic">Receiver+Picture+Vibrate+Mic</string>
+    <string name="video_vibrate_mic">Video+Vibrate+Mic</string>
+    <string name="lcd_speaker">Lcd+Speaker</string>
+    <string name="twod_threed_receiver">2D+3D+Receiver</string>
+    <string name="speaker_vibrate_mic">Speaker+Vibrate+Mic</string>
+    <string name="rec_lcd">Rec+Lcd</string>
+    <string name="spe_video">Speaker+Video</string>
+    <string name="vib_mic_cam">Vibrate+MIC+Camera</string>
+    <string name="editloop">请输入loop数</string>
+    <string name="simple">单一模块</string>
+    <string name="complex">复合模块</string>
+    <string name="start">开始运行</string>
+    <string name="all">全选</string>
+    <string name="module">模块</string>
+    <string name="SPEAKER">SOUND</string>
+    <string name="RECEIVER">RECEIVER</string>
+    <string name="VIDEO">VIDEO</string>
+    <string name="PICTURE">PICTURE</string>
+    <string name="CAMERA">CAMERA</string>
+    <string name="twoD">2D</string>
+    <string name="threeD">3D</string>
+    <string name="cpu">CPU</string>
+    <string name="memory">Memory</string>
+    <string name="emmc">Emmc</string>
+    <string name="sleep">Sleep</string>
+    <string name="runsleep">Running sleep test</string>
+    <string name="lcd">LCD</string>
+    <string name="reboot">REBOOT</string>
+    <string name="telephony">TELEPHONY</string>
+    <string name="bt">BT</string>
+    <string name="wifi">WIFI</string>
+    <string name="name">参数名</string>
+    <string name="value">参数值</string>
+    <string name="mic">MIC</string>
+    <string name="vibrate">VIBRATE</string>
+    <string name="gps">GPS</string>
+    <string name="sdcard">SDCard</string>
+    <string name="cur_reboot_loop">当前状态：未运行</string>
+    <string name="btn_run_text">Run</string>
+    <string name="btn_show_text">Show</string>
+    <string name="btn_upload_text">Upload</string>
+    <string name="txtvw_upload_help">Click send to upload to default page, or check login to create your own page (you need to get apikey from 0xBenchWeb first).</string>
+    <string name="txtvw_benchname">Upload to benchmark page:</string>
+    <string name="txtvw_email">Email:</string>
+    <string name="txtvw_api">API Key:</string>
+    <string name="btn_send_text">Send</string>
+    <string name="btn_back_text">Done</string>
+    <string name="btn_login_google">Login for API-key</string>
+    <string name="default_benchname">PublicPage</string>
+    <string name="default_appspot">0xbenchmark</string>
+    <string name="default_email">ZXBench@gmail.com</string>
+    <string name="default_api">32935947-ed54-43b3-b3b2-a38223c6ec47</string>
+    <string name="login">Login</string>
+    <string name="settings_path_hint">Save result to...</string>
+    <string name="settings_custom_path">Customize</string>
+    <string name="settings_edit_path">Edit Custom Path</string>
+    <string name="menu_settings">Settings</string>
+    <string name="banner_info_text">Hell World!</string>
+    <string name="tips_test_time">test time</string>
+    <string name="tips_alert_time">please input test parameter</string>
+    <string name="tips_alert_charger">Please connect charger to start test!</string>
+    <string name="reboot_curloop">当前状态：未运行</string>
+    <string name="reboot_start_str">开始执行</string>
+	<string name="reboot_loop">运行次数</string>
+
+    <integer name="version_code">1</integer>
+    <string name="version_code_name">1.01</string>
+</resources>
Index: vendor/sprd/platform/packages/apps/RunIn/res/xml/single_config.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/xml/single_config.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/xml/single_config.xml	(revision 167997)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<config>
+    <total_loop>1</total_loop>
+    <speaker_duration>20</speaker_duration>
+    <video_duration>20</video_duration>
+    <camera_duration>20</camera_duration>
+    <twod_duration>40</twod_duration>
+    <threed_duration>40</threed_duration>
+    <cpu_duration>40</cpu_duration>
+    <memory_duration>20</memory_duration>
+    <emmc_duration>20</emmc_duration>
+    <sleep_loop>8</sleep_loop>
+    <reboot_loop>8</reboot_loop>
+</config>
Index: vendor/sprd/platform/packages/apps/RunIn/res/xml/device_admin_sample.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/xml/device_admin_sample.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/xml/device_admin_sample.xml	(revision 167997)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<device-admin
+  xmlns:android="http://schemas.android.com/apk/res/android">
+    <uses-policies>
+        <force-lock />
+    </uses-policies>
+</device-admin>
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/res/xml/complex_config.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/xml/complex_config.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/xml/complex_config.xml	(revision 167997)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<config>
+    <speaker_camera_vibrate_mic_duration>1</speaker_camera_vibrate_mic_duration>
+    <receiver_picture_vibrate_mic_duration>1</receiver_picture_vibrate_mic_duration>
+    <video_vibrate_mic_duration>1</video_vibrate_mic_duration>
+    <sdcard_duration>1</sdcard_duration>
+    <lcd_speaker_duration>1</lcd_speaker_duration>
+    <receiver_2d_3d_duration>1</receiver_2d_3d_duration>
+    <speaker_vibrate_mic_duration>1</speaker_vibrate_mic_duration>
+    <cpu_duration>1</cpu_duration>
+    <memory_duration>1</memory_duration>
+    <sleep_loop>4</sleep_loop>
+    <emmc_duration>1</emmc_duration>
+    <reboot_loop>2</reboot_loop> 
+</config>
Index: vendor/sprd/platform/packages/apps/RunIn/res/xml/runin_config.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/xml/runin_config.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/xml/runin_config.xml	(revision 167997)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<config>
+    <total_loop>1</total_loop>
+    <cpu_duration>1</cpu_duration>
+    <twod_duration>1</twod_duration>
+    <threed_duration>1</threed_duration>
+    <memory_duration>1</memory_duration>
+    <emmc_duration>1</emmc_duration>
+    <sleep_loop>4</sleep_loop>
+    <rec_lcd_duration>1</rec_lcd_duration>
+    <speaker_video_duration>1</speaker_video_duration>
+    <vibrate_mic_camera_duration>1</vibrate_mic_camera_duration>
+</config>
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/icon_auto.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/icon_auto.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/icon_auto.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/icon_auto.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable/icon_auto.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_2d_b.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_2d_b.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_2d_b.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_2d_b.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_2d_b.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_3d_b.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_3d_b.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_3d_b.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_3d_b.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_3d_b.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_misc.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_misc.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_misc.xml	(revision 167997)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:drawable="@drawable/ic_misc_b"
+          android:state_selected="true" />
+    <item android:drawable="@drawable/ic_misc_w" />
+</selector>
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_vm_w.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_vm_w.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_vm_w.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_vm_w.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_vm_w.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_c_w.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_c_w.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_c_w.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_c_w.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_c_w.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_eye_w.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_eye_w.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_eye_w.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_eye_w.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_eye_w.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_pi_b.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_pi_b.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_pi_b.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_pi_b.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_pi_b.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/crate.bmp
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/crate.bmp
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/crate.bmp	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/crate.bmp	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable/crate.bmp
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/icon.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/icon.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/icon.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/icon.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable/icon.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_2d.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_2d.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_2d.xml	(revision 167997)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:drawable="@drawable/ic_2d_b"
+          android:state_selected="true" />
+    <item android:drawable="@drawable/ic_2d_w" />
+</selector>
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_misc_w.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_misc_w.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_misc_w.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_misc_w.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_misc_w.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_3d.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_3d.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_3d.xml	(revision 167997)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:drawable="@drawable/ic_3d_b"
+          android:state_selected="true" />
+    <item android:drawable="@drawable/ic_3d_w" />
+</selector>
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_eye_b.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_eye_b.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_eye_b.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_eye_b.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_eye_b.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_c_b.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_c_b.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_c_b.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_c_b.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_c_b.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_vm_b.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_vm_b.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_vm_b.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_vm_b.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_vm_b.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_pi.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_pi.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_pi.xml	(revision 167997)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:drawable="@drawable/ic_pi_b"
+          android:state_selected="true" />
+    <item android:drawable="@drawable/ic_pi_w" />
+</selector>
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/glass.bmp
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/glass.bmp
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/glass.bmp	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/glass.bmp	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable/glass.bmp
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_2d_w.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_2d_w.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_2d_w.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_2d_w.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_2d_w.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_3d_w.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_3d_w.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_3d_w.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_3d_w.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_3d_w.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_misc_b.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_misc_b.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_misc_b.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_misc_b.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_misc_b.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_vm.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_vm.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_vm.xml	(revision 167997)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:drawable="@drawable/ic_vm_b"
+          android:state_selected="true" />
+    <item android:drawable="@drawable/ic_vm_w" />
+</selector>
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_pi_w.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_pi_w.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_pi_w.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_pi_w.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_pi_w.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_c.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_c.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_c.xml	(revision 167997)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:drawable="@drawable/ic_c_b"
+          android:state_selected="true" />
+    <item android:drawable="@drawable/ic_c_w" />
+</selector>
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_eye.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_eye.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable/ic_eye.xml	(revision 167997)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:drawable="@drawable/ic_eye_b"
+          android:state_selected="true" />
+    <item android:drawable="@drawable/ic_eye_w" />
+</selector>
Index: vendor/sprd/platform/packages/apps/RunIn/res/values-hdpi/drawables.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/values-hdpi/drawables.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/values-hdpi/drawables.xml	(revision 167997)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <item type="drawable" name="APKTOOL_DUMMY_0019">false</item>
+</resources>
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/crate.bmp
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/crate.bmp
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/crate.bmp	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/crate.bmp	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/crate.bmp
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/icon.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/icon.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/icon.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/icon.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/icon.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/icon_auto.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/icon_auto.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/icon_auto.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/icon_auto.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/icon_auto.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/glass.bmp
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/glass.bmp
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/glass.bmp	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/glass.bmp	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable-hdpi/glass.bmp
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/crate.bmp
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/crate.bmp
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/crate.bmp	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/crate.bmp	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/crate.bmp
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/icon.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/icon.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/icon.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/icon.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/icon.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/icon_auto.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/icon_auto.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/icon_auto.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/icon_auto.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/icon_auto.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/glass.bmp
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/glass.bmp
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/glass.bmp	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/glass.bmp	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable-ldpi/glass.bmp
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/crate.bmp
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/crate.bmp
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/crate.bmp	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/crate.bmp	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/crate.bmp
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/icon.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/icon.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/icon.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/icon.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/icon.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/icon_auto.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/icon_auto.png
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/icon_auto.png	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/icon_auto.png	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/icon_auto.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/glass.bmp
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/glass.bmp
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/glass.bmp	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/glass.bmp	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/drawable-mdpi/glass.bmp
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/raw/test_picture.jpg
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/raw/test_picture.jpg
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/raw/test_picture.jpg	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/raw/test_picture.jpg	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/raw/test_picture.jpg
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/raw/test_audio.ogg
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/raw/test_audio.ogg
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/raw/test_audio.ogg	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/raw/test_audio.ogg	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/raw/test_audio.ogg
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/raw/test_video.3gp
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: vendor/sprd/platform/packages/apps/RunIn/res/raw/test_video.3gp
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/raw/test_video.3gp	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/raw/test_video.3gp	(revision 167997)

Property changes on: vendor/sprd/platform/packages/apps/RunIn/res/raw/test_video.3gp
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/pic.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/pic.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/pic.xml	(revision 167997)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical">
+
+    <ImageView
+        android:id="@+id/pic"
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent" />
+</LinearLayout>
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/report.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/report.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/report.xml	(revision 167997)
@@ -0,0 +1,52 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical">
+
+    <ScrollView
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:layout_weight="5">
+
+        <HorizontalScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content">
+
+            <LinearLayout
+                android:layout_width="fill_parent"
+                android:layout_height="fill_parent"
+                android:orientation="vertical">
+
+                <TextView
+                    android:id="@+id/report_text"
+                    android:layout_width="fill_parent"
+                    android:layout_height="wrap_content"
+                    android:typeface="monospace" />
+            </LinearLayout>
+        </HorizontalScrollView>
+    </ScrollView>
+
+    <LinearLayout
+        android:id="@+id/buttons_container"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content">
+
+        <Button
+            android:id="@+id/btn_back"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:text="@string/btn_back_text" />
+
+        <Button
+            android:id="@+id/btn_upload"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:text="@string/btn_upload_text" />
+    </LinearLayout>
+
+</LinearLayout>
+
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/color.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/color.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/color.xml	(revision 167997)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/colorLayout"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent" />
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/single.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/single.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/single.xml	(revision 167997)
@@ -0,0 +1,378 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:layout_gravity="center_horizontal"
+    android:orientation="vertical">
+
+    <Button
+        android:id="@+id/start"
+        android:layout_width="230.0dip"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:text="@string/start" />
+
+    <TextView
+        android:id="@+id/currloop"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_horizontal"
+        android:layout_marginBottom="4dp"
+        android:gravity="center" />
+
+    <TableLayout
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:gravity="center"
+        android:orientation="vertical">
+
+        <View
+            android:layout_height="1px"
+            android:background="#484848" />
+
+        <TableRow
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+
+            <Button
+                android:id="@+id/selectAll"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="@string/all" />
+
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+                android:gravity="center"
+                android:text="@string/module" />
+        </TableRow>
+
+        <View
+            android:layout_height="1px"
+            android:background="#484848" />
+    </TableLayout>
+
+    <ScrollView
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="5.0dip">
+
+        <TableLayout
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:orientation="vertical"
+            android:paddingLeft="32dp">
+
+            <TableRow
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/musicBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/speakerInfo"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/SPEAKER" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:visibility="gone">
+
+                <CheckBox
+                    android:id="@+id/receiverBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/receiverInfo"
+                    android:layout_height="wrap_content"
+                    android:gravity="center_horizontal"
+                    android:text="@string/RECEIVER" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/videoBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/videoInfo"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/VIDEO" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:visibility="gone">
+
+                <CheckBox
+                    android:id="@+id/picBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/picInfo"
+                    android:layout_height="wrap_content"
+                    android:gravity="center_horizontal"
+                    android:text="@string/PICTURE" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/cameraBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/cameraInfo"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/CAMERA" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:visibility="gone">
+
+                <CheckBox
+                    android:id="@+id/btBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/btInfo"
+                    android:layout_height="wrap_content"
+                    android:gravity="center_horizontal"
+                    android:text="@string/bt" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:visibility="gone">
+
+                <CheckBox
+                    android:id="@+id/wifiBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/wifiInfo"
+                    android:layout_height="wrap_content"
+                    android:gravity="center_horizontal"
+                    android:text="@string/wifi" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:visibility="gone">
+
+                <CheckBox
+                    android:id="@+id/micBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/micInfo"
+                    android:layout_height="wrap_content"
+                    android:gravity="center_horizontal"
+                    android:text="@string/mic" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:visibility="gone">
+
+                <CheckBox
+                    android:id="@+id/vibrateBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/vibrateInfo"
+                    android:layout_height="wrap_content"
+                    android:gravity="center_horizontal"
+                    android:text="@string/vibrate" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:visibility="gone">
+
+                <CheckBox
+                    android:id="@+id/sdcardBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/sdcardInfo"
+                    android:layout_height="wrap_content"
+                    android:gravity="center_horizontal"
+                    android:text="@string/sdcard" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/twodBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/twodInfo"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/twoD" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:layout_weight="1">
+
+                <CheckBox
+                    android:id="@+id/threedBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/threedInfo"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/threeD" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/cpuBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/cpuInfo"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/cpu" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/memoryBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/memoryInfo"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/memory" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/sleepBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/sleepInfo"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/sleep" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:visibility="gone">
+
+                <CheckBox
+                    android:id="@+id/lcdBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/lcdInfo"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/lcd" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/emmcBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/tv_item_emmc"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/emmc" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/rebootBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/rebootInfo"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/reboot" />
+            </TableRow>
+        </TableLayout>
+    </ScrollView>
+</LinearLayout>
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/image.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/image.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/image.xml	(revision 167997)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent">
+    
+    <org.zeroxlab.graphics.DrawImageView
+      android:id="@+id/image"
+      android:layout_width="fill_parent"
+      android:layout_height="fill_parent"/>
+         
+</FrameLayout>
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/circle2.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/circle2.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/circle2.xml	(revision 167997)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent">
+
+    <org.zeroxlab.graphics.DrawCircle2View
+        android:id="@+id/circle2"
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent" />
+
+</FrameLayout>
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/child.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/child.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/child.xml	(revision 167997)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="horizontal">
+
+    <TextView
+        android:id="@+id/childView"
+        android:layout_width="fill_parent"
+        android:layout_height="80.0px"
+        android:layout_weight="1.0"
+        android:textSize="18.0dip" />
+</LinearLayout>
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/main.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/main.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/main.xml	(revision 167997)
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<TabHost xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@android:id/tabhost"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent">
+    <LinearLayout
+        android:orientation="vertical"
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent"
+        android:padding="5dp">
+        <TabWidget
+            android:id="@android:id/tabs"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content" />
+        <FrameLayout
+            android:id="@android:id/tabcontent"
+            android:layout_width="fill_parent"
+            android:layout_height="fill_parent"
+            android:padding="5dp">
+        </FrameLayout>
+    </LinearLayout>
+</TabHost>
+
+
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/text.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/text.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/text.xml	(revision 167997)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent">
+    
+    <org.zeroxlab.graphics.DrawTextView
+      android:id="@+id/text"
+      android:layout_width="fill_parent"
+      android:layout_height="fill_parent"/>
+         
+</FrameLayout>
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/upload.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/upload.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/upload.xml	(revision 167997)
@@ -0,0 +1,75 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical">
+
+    <ScrollView
+        android:id="@+id/upload_list_scroller"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:scrollX="0px"
+        android:scrollY="0px">
+
+        <LinearLayout
+            android:id="@+id/upload_list_container"
+            android:layout_width="fill_parent"
+            android:layout_height="fill_parent"
+            android:orientation="vertical">
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/txtvw_upload_help" />
+
+            <CheckBox
+                android:id="@+id/login"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/login" />
+
+            <Button
+                android:id="@+id/login_google"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/btn_login_google" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/txtvw_benchname" />
+
+            <EditText
+                android:id="@+id/benchName"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/default_benchname" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/txtvw_email" />
+
+            <EditText
+                android:id="@+id/email"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content" />
+
+            <TextView
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/txtvw_api" />
+
+            <EditText
+                android:id="@+id/api"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content" />
+
+            <Button
+                android:id="@+id/send"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/btn_send_text" />
+        </LinearLayout>
+    </ScrollView>
+</LinearLayout>
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/choosemode.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/choosemode.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/choosemode.xml	(revision 167997)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:gravity="center_horizontal"
+    android:orientation="vertical">
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="50.0dip"
+        android:gravity="center"
+        android:text="@string/choose_mode"
+        android:textSize="20.0sp" />
+
+    <Button
+        android:id="@+id/simple"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="30.0dip"
+        android:text="@string/simple" />
+
+
+    <Button
+        android:id="@+id/complex"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="20.0dip"
+        android:text="@string/complex" />
+
+    <Button
+        android:id="@+id/runin"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="20.0dip"
+        android:text="@string/Runin" />
+</LinearLayout>
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/login_dialog.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/login_dialog.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/login_dialog.xml	(revision 167997)
@@ -0,0 +1,12 @@
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/layout_root"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="horizontal"
+    android:padding="10dp">
+
+    <WebView
+        android:id="@+id/web_view"
+        android:layout_width="wrap_content"
+        android:layout_height="fill_parent" />
+</LinearLayout>
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/surface.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/surface.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/surface.xml	(revision 167997)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical">
+
+    <SurfaceView
+        android:id="@+id/surfaceview"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content" />
+</LinearLayout>
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/camera.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/camera.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/camera.xml	(revision 167997)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical">
+
+    <SurfaceView
+        android:id="@+id/surface_camera"
+        android:layout_width="fill_parent"
+        android:layout_height="10.0dip"
+        android:layout_weight="1.0" />
+</LinearLayout>
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/cameratest.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/cameratest.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/cameratest.xml	(revision 167997)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical">
+
+    <TextView
+        android:id="@+id/Status"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content" />
+
+    <SurfaceView
+        android:id="@+id/surface_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content" />
+</LinearLayout>
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/gc.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/gc.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/gc.xml	(revision 167997)
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<HorizontalScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="wrap_content">
+
+    <ScrollView
+        android:id="@+id/myScrollView"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content">
+
+        <AbsoluteLayout xmlns:android="http://schemas.android.com/apk/res/android"
+            android:layout_width="fill_parent"
+            android:layout_height="fill_parent"
+            android:orientation="vertical">
+
+            <TextView
+                android:id="@+id/myTextView1"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:typeface="monospace" />
+
+        </AbsoluteLayout>
+
+    </ScrollView>
+</HorizontalScrollView>
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/parent.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/parent.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/parent.xml	(revision 167997)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="horizontal">
+
+    <TextView
+        android:id="@+id/parentView"
+        android:layout_width="fill_parent"
+        android:layout_height="65.0px"
+        android:layout_marginLeft="25.0dip"
+        android:textSize="30.0dip" />
+</LinearLayout>
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/reboot.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/reboot.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/reboot.xml	(revision 167997)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical">
+
+    <TextView
+        android:id="@+id/curloop"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:text="@string/cur_reboot_loop" />
+</LinearLayout>
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/runin.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/runin.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/runin.xml	(revision 167997)
@@ -0,0 +1,238 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:layout_gravity="center_horizontal"
+    android:orientation="vertical">
+
+    <Button
+        android:id="@+id/start_runin"
+        android:layout_width="230.0dip"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:text="@string/start" />
+
+    <TextView
+        android:id="@+id/runin_currloop"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="4dp"
+        android:gravity="center" />
+
+    <TableLayout
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:gravity="center"
+        android:orientation="vertical">
+
+        <View
+            android:layout_height="1px"
+            android:background="#484848" />
+
+        <TableRow
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content">
+
+            <Button
+                android:id="@+id/runin_selectAll"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="@string/all" />
+
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+                android:gravity="center_horizontal"
+                android:text="@string/module" />
+        </TableRow>
+
+        <View
+            android:layout_height="1px"
+            android:background="#484848" />
+    </TableLayout>
+
+    <ScrollView
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="5.0dip">
+
+        <TableLayout
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:orientation="vertical"
+            android:paddingLeft="32dp">
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/runin_cpuBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/runin_cpuInfo"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/cpu" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/runin_twodBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/runin_twodInfo"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/twoD" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/runin_threedBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/runin_threedInfo"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/threeD" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/runin_memoryBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/runin_memoryInfo"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/memory" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/runin_emmcBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/tv_item_emmc"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/emmc" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/runin_sleepBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/runin_sleepInfo"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/sleep" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/rec_lcdBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/rec_lcdInfo"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/rec_lcd" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/spe_videoBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/spe_videoInfo"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/spe_video" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/vib_mic_camBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/vib_mic_camInfo"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/vib_mic_cam" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/runin_rebootBox"
+                    android:layout_width="50.0dip"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/runin_rebootInfo"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/reboot" />
+            </TableRow>
+        </TableLayout>
+    </ScrollView>
+</LinearLayout>
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/paratable.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/paratable.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/paratable.xml	(revision 167997)
@@ -0,0 +1,51 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="wrap_content"
+    android:layout_gravity="center_horizontal"
+    android:orientation="vertical">
+
+    <TableLayout
+        android:id="@+id/table1"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical">
+
+        <TableRow
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:paddingBottom="4dp"
+            android:paddingTop="4dp">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_weight="2"
+                android:gravity="center_horizontal"
+                android:text="@string/name"
+                android:textSize="15.0dip" />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+                android:gravity="center_horizontal"
+                android:text="@string/value"
+                android:textSize="15.0dip" />
+        </TableRow>
+
+        <View
+            android:layout_height="1px"
+            android:background="#484848" />
+    </TableLayout>
+
+    <ScrollView
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content">
+        <TableLayout
+            android:id="@+id/table"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical" />
+    </ScrollView>
+</LinearLayout>
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/rect.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/rect.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/rect.xml	(revision 167997)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent">
+    
+    <org.zeroxlab.graphics.DrawRectView
+      android:id="@+id/rect"
+      android:layout_width="fill_parent"
+      android:layout_height="fill_parent"/>
+         
+</FrameLayout>
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/main_reboot.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/main_reboot.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/main_reboot.xml	(revision 167997)
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical">
+
+    <TextView
+        android:id="@+id/reboot_curloop"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:text="@string/reboot_curloop" />
+
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal">
+
+        <TextView
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:text="@string/reboot_loop" />
+
+        <EditText
+            android:id="@+id/reboot_loop"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:ems="10">
+
+            <requestFocus />
+        </EditText>
+    </LinearLayout>
+
+    <Button
+        android:id="@+id/reboot_start"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/reboot_start_str" />
+</LinearLayout>
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/settings.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/settings.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/settings.xml	(revision 167997)
@@ -0,0 +1,73 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (C) 2011 0xlab - http://0xlab.org/
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+
+  Authored by Julian Chu <walkingice@0xlab.org>
+-->
+
+<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent">
+
+    <LinearLayout
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent"
+        android:orientation="vertical"
+        android:padding="5dp">
+
+        <TextView
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:text="@string/settings_path_hint" />
+
+        <TextView
+            android:id="@+id/path_selection"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content" />
+
+        <RelativeLayout
+            android:id="@+id/result_path_pane"
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content">
+
+            <RadioGroup
+                android:id="@+id/radio_group_path"
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content"
+                android:orientation="vertical">
+
+                <RadioButton
+                    android:id="@+id/radio_sdcard"
+                    android:layout_width="fill_parent"
+                    android:layout_height="wrap_content" />
+
+                <RadioButton
+                    android:id="@+id/radio_custom"
+                    android:layout_width="fill_parent"
+                    android:layout_height="wrap_content"
+                    android:text="@string/settings_custom_path" />
+            </RadioGroup>
+
+            <Button
+                android:id="@+id/edit_dir"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_alignBottom="@id/radio_group_path"
+                android:layout_alignParentRight="true"
+                android:text="@string/settings_edit_path" />
+        </RelativeLayout>
+    </LinearLayout>
+</ScrollView>
+
+
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/arc.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/arc.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/arc.xml	(revision 167997)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent">
+    
+    <org.zeroxlab.graphics.DrawArcView
+      android:id="@+id/arc"
+      android:layout_width="fill_parent"
+      android:layout_height="fill_parent"/>
+         
+</FrameLayout>
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/video.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/video.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/video.xml	(revision 167997)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent">
+
+    <VideoView
+        android:id="@+id/videoview"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:layout_centerInParent="true" />
+</LinearLayout>
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/javascript.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/javascript.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/javascript.xml	(revision 167997)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical" >
+    <WebView android:id="@+id/web"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:layout_weight="1"
+        />
+</LinearLayout>
+
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/complex.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/complex.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/complex.xml	(revision 167997)
@@ -0,0 +1,291 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:gravity="center_horizontal"
+        android:orientation="horizontal">
+
+        <EditText
+            android:id="@+id/sum_loop"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center_vertical"
+            android:ems="5"
+            android:hint="loop"
+            android:inputType="number">
+
+            <requestFocus />
+        </EditText>
+
+        <Button
+            android:id="@+id/btn_start"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center_vertical"
+            android:layout_toRightOf="@id/sum_loop"
+            android:text="@string/start" />
+    </LinearLayout>
+
+    <TextView
+        android:gravity="center"
+        android:id="@+id/curloop"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content" />
+
+    <TableLayout
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="5.0dip"
+        android:gravity="center"
+        android:orientation="vertical">
+
+        <View
+            android:layout_height="1px"
+            android:background="#484848" />
+
+        <TableRow
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content">
+
+            <Button
+                android:id="@+id/Complex_selectAll"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="@string/all" />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+                android:gravity="center_horizontal"
+                android:text="@string/module" />
+        </TableRow>
+
+        <View
+            android:layout_height="1px"
+            android:background="#484848" />
+    </TableLayout>
+
+    <ScrollView
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="5.0dip">
+
+        <TableLayout
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:orientation="vertical"
+            android:paddingLeft="32dp">
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/ck_speaker_camera_vibrate_mic"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/tv_speaker_camera_vibrate_mic"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/speaker_camera_vibrate_mic" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/ck_receiver_picture_vibrate_mic"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/tv_receiver_picture_vibrate_mic"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/receiver_picture_vibrate_mic" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/ck_video_vibrate_mic"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/tv_video_vibrate_mic"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/video_vibrate_mic" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/ck_sdcard"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/tv_sdcard"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/sdcard" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/ck_lcd_speaker"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/tv_lcd_speaker"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/lcd_speaker" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/ck_2d_3d_receiver"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/tv_2d_3d_receiver"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/twod_threed_receiver" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/ck_speaker_vibrate_mic"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/tv_speaker_vibrate_mic"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/speaker_vibrate_mic" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/ck_cpu"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/tv_cpu"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/cpu" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/ck_memory"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/tv_memory"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/memory" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/ck_sleep"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/tv_sleep"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/sleep" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/ck_emmc"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/tv_item_emmc"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/emmc" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="fill_parent"
+                android:layout_height="wrap_content">
+
+                <CheckBox
+                    android:id="@+id/ck_reboot"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content" />
+
+                <TextView
+                    android:id="@+id/tv_reboot"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center_horizontal"
+                    android:text="@string/reboot" />
+            </TableRow>
+        </TableLayout>
+    </ScrollView>
+</LinearLayout>
\ No newline at end of file
Index: vendor/sprd/platform/packages/apps/RunIn/res/layout/sleeptest.xml
===================================================================
--- vendor/sprd/platform/packages/apps/RunIn/res/layout/sleeptest.xml	(revision 0)
+++ vendor/sprd/platform/packages/apps/RunIn/res/layout/sleeptest.xml	(revision 167997)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical">
+
+    <TextView
+        android:id="@+id/textView1"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/runsleep" />
+</LinearLayout>
\ No newline at end of file
Index: build/target/product/core.mk
===================================================================
--- build/target/product/core.mk	(revision 167996)
+++ build/target/product/core.mk	(revision 167997)
@@ -63,6 +63,7 @@
     Provision \
     wps \
     Camcorder \
-    KeyGen_signd
+    KeyGen_signd \
+    RunIn
 
 $(call inherit-product, $(SRC_TARGET_DIR)/product/core_base.mk)
