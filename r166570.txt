Index: u-boot64/drivers/video/sprdfb/sprdfb_panel.c
===================================================================
--- u-boot64/drivers/video/sprdfb/sprdfb_panel.c	(revision 166569)
+++ u-boot64/drivers/video/sprdfb/sprdfb_panel.c	(revision 166570)
@@ -45,6 +45,9 @@
 extern struct panel_spec lcd_rm68180_mipi_spec;
 extern struct panel_spec lcd_ili9806e_mipi_spec;
 extern struct panel_spec lcd_ili9806e_2_mipi_spec;
+extern struct panel_spec lcd_ili9806e_2_mipi_huashi_spec;
+extern struct panel_spec lcd_ili9806e_2_mipi_hsd_spec;
+extern struct panel_spec lcd_ili9806e_2_mipi_txd_spec;
 extern struct panel_spec lcd_otm8019a_mipi_spec;
 extern struct panel_spec lcd_fl10802_mipi_spec;
 extern struct panel_spec lcd_jd9161_mipi_spec;
@@ -369,6 +372,27 @@
     .panel = &lcd_ili9806e_2_mipi_spec,
 },
 #endif
+#ifdef CONFIG_FB_LCD_ILI9806E_2_MIPI_HUASHI
+{
+    .lcd_id = 0x980603,
+    .panel = &lcd_ili9806e_2_mipi_huashi_spec,
+},
+#endif
+#ifdef CONFIG_FB_LCD_ILI9806E_2_MIPI_HSD
+{
+    .lcd_id = 0x980604,
+    .panel = &lcd_ili9806e_2_mipi_hsd_spec,
+},
+#endif
+
+
+#ifdef CONFIG_FB_LCD_ILI9806E_2_MIPI_TXD
+{
+    .lcd_id = 0x9806021,
+    .panel = &lcd_ili9806e_2_mipi_txd_spec,
+},
+#endif
+
 #ifdef CONFIG_FB_LCD_OTM8019A_MIPI
 	{
 		.lcd_id = 0x8019,
Index: u-boot64/drivers/video/sprdfb/lcd/lcd_ili9806e_2_mipi.c
===================================================================
--- u-boot64/drivers/video/sprdfb/lcd/lcd_ili9806e_2_mipi.c	(revision 166569)
+++ u-boot64/drivers/video/sprdfb/lcd/lcd_ili9806e_2_mipi.c	(revision 166570)
@@ -3,7 +3,7 @@
  * Support for ili9806e_2 mipi LCD device
  *
  * Copyright (C) 2010 Spreadtrum
- *
+ * 
  * This software is licensed under the terms of the GNU General Public
  * License version 2, as published by the Free Software Foundation, and
  * may be copied, distributed, and modified under those terms.
@@ -48,169 +48,274 @@
 #define LCM_TAG_SEND  (1<< 0)
 #define LCM_TAG_SLEEP (1 << 1)
 
-static LCM_Init_Code init_data[] = {
+static LCM_Init_Code init_data[] = 
+{
+	//****************************************************************************//
 	{LCM_SEND(8), {6, 0,0xFF,0xFF,0x98,0x06,0x04,0x01}},// Change to Page 1
-	{LCM_SLEEP(5)},
-
-	{LCM_SEND(2), {0x08,0x10}},// output SDA
-
-	{LCM_SEND(2), {0x21,0x01}},// DE = 1 Active
-
-	{LCM_SEND(2), {0x30,0x01}},// 480 X 854
-	{LCM_SEND(2), {0x31,0x02}}, // 2-dot Inversion
-
-	{LCM_SEND(2), {0x50,0x78}},// VGMP
-	{LCM_SEND(2), {0x51,0x78}},// VGMN
-	{LCM_SEND(2), {0x52,0x00}}, //Flicker
-	{LCM_SEND(2), {0x53,0x49}},//Flicker
-
-	{LCM_SEND(2), {0x60,0x0a}},// SDTI
-	{LCM_SEND(2), {0x61,0x00}},// CRTI
-	{LCM_SEND(2), {0x62,0x08}},// EQTI
-	{LCM_SEND(2), {0x63,0x00}}, // PCTI
-
-	{LCM_SEND(2), {0x40,0x15}},// VGH/VGL
-	{LCM_SEND(2), {0x41,0x44}}, // VGH/VGL
-	{LCM_SEND(2), {0x42,0x01}},// VGH/VGL
-	{LCM_SEND(2), {0x43,0x09}},// VGH/VGL
-	{LCM_SEND(2), {0x44,0x07}},// VGH/VGL
-
-//++++++++++++++++++ Gamma Setting ++++++++++++++++++//
-
-	{LCM_SEND(8), {6, 0,0xFF,0xFF,0x98,0x06,0x04,0x01}},// Change to Page 1
-
-	{LCM_SEND(2), {0xA0,0x00}},// Gamma 0
-	{LCM_SEND(2), {0xA1,0x04}},// Gamma 4
-	{LCM_SEND(2), {0xA2,0x13}},// Gamma 8
-	{LCM_SEND(2), {0xA3,0x10}},// Gamma 16
-	{LCM_SEND(2), {0xA4,0x0a}},// Gamma 24
-	{LCM_SEND(2), {0xA5,0x15}},// Gamma 52
-	{LCM_SEND(2), {0xA6,0x0d}},// Gamma 80
-	{LCM_SEND(2), {0xA7,0x09}},// Gamma 108
-	{LCM_SEND(2), {0xA8,0x04}},// Gamma 147
-	{LCM_SEND(2), {0xA9,0x09}},// Gamma 175
-	{LCM_SEND(2), {0xAA,0x05}},// Gamma 203
-	{LCM_SEND(2), {0xAB,0x04}},// Gamma 231
-	{LCM_SEND(2), {0xAC,0x10}},// Gamma 239
-	{LCM_SEND(2), {0xAD,0x36}},// Gamma 247
-	{LCM_SEND(2), {0xAE,0x33}},// Gamma 251
-	{LCM_SEND(2), {0xAF,0x1f}},// Gamma 255
-
-///==============Nagitive
-	{LCM_SEND(2), {0xC0,0x00}}, // Gamma 0
-	{LCM_SEND(2), {0xC1,0x07}}, // Gamma 4
-	{LCM_SEND(2), {0xC2,0x0f}}, // Gamma 8
-	{LCM_SEND(2), {0xC3,0x0e}}, // Gamma 16
-	{LCM_SEND(2), {0xC4,0x07}}, // Gamma 24
-	{LCM_SEND(2), {0xC5,0x15}}, // Gamma 52
-	{LCM_SEND(2), {0xC6,0x07}}, // Gamma 80
-	{LCM_SEND(2), {0xC7,0x07}}, // Gamma 108
-	{LCM_SEND(2), {0xC8,0x03}}, // Gamma 147
-	{LCM_SEND(2), {0xC9,0x09}}, // Gamma 175
-	{LCM_SEND(2), {0xCA,0x08}}, // Gamma 203
-	{LCM_SEND(2), {0xCB,0x04}}, // Gamma 231
-	{LCM_SEND(2), {0xCC,0x09}}, // Gamma 239
-	{LCM_SEND(2), {0xCD,0x26}}, // Gamma 247
-	{LCM_SEND(2), {0xCE,0x21}}, // Gamma 251
-	{LCM_SEND(2), {0xCF,0x1f}}, // Gamma 255
-
+	
+	{LCM_SEND(2),{0x08,0x10}},				   // output SDA
+						
+	{LCM_SEND(2),{0x21,0x01}},				   // DE = 1 Active
+					 
+	{LCM_SEND(2),{0x30,0x01}},				   // 480 X 854
+					   
+	{LCM_SEND(2),{0x31,0x02}},				   // Inversion
+					
+	{LCM_SEND(2),{0x40,0x15}},				  // BT  
+					 
+	{LCM_SEND(2),{0x41,0x33}},				   // DVDDH DVDDL clamp 
+				   
+	{LCM_SEND(2),{0x42,0x02}},				   // VGH/VGL 
+					 
+	{LCM_SEND(2),{0x43,0x09}},				   // VGH_CLAMP 0FF ;
+					 
+	{LCM_SEND(2),{0x44,0x07}},				   // VGL_CLAMP OFF ; 
+					  
+	{LCM_SEND(2),{0x45,0x16}},	
+					
+	{LCM_SEND(2),{0x50,0x80}},					 //VGMP
+					   
+	{LCM_SEND(2),{0x51,0x80}},					//VGMN
+					
+	{LCM_SEND(2),{0x52,0x00}},					 //Flicker
+					 
+	{LCM_SEND(2),{0x53,0x41}},					 //Flicker	41
+	 
+					  
+	{LCM_SEND(2),{0x60,0x07}},				   // SDTI
+					
+	{LCM_SEND(2),{0x61,0x00}},				  // CRTI
+					
+	{LCM_SEND(2),{0x62,0x08}},				   // EQTI
+					   
+	{LCM_SEND(2),{0x63,0x00}},				  // PCTI
+	
+	//++++++++++++++++++ Gamma Setting ++++++++++++++++++//
+	
+	{LCM_SEND(2),{0xA0,0x00}},	// Gamma 0 
+					 
+	{LCM_SEND(2),{0xA1,0x03}},	// Gamma 4 
+					   
+	{LCM_SEND(2),{0xA2,0x09}},	// Gamma 8
+					   
+	{LCM_SEND(2),{0xA3,0x0D}},	// Gamma 16
+						 
+	{LCM_SEND(2),{0xA4,0x06}},	// Gamma 24
+					
+	{LCM_SEND(2),{0xA5,0x16}},	// Gamma 52
+					   
+	{LCM_SEND(2),{0xA6,0x09}},	// Gamma 80
+					  
+	{LCM_SEND(2),{0xA7,0x08}}, // Gamma 108
+						
+	{LCM_SEND(2),{0xA8,0x03}},	// Gamma 147
+					   
+	{LCM_SEND(2),{0xA9,0x07}},	// Gamma 175
+				 
+	{LCM_SEND(2),{0xAA,0x06}},	// Gamma 203
+				 
+	{LCM_SEND(2),{0xAB,0x05}},	// Gamma 231
+					 
+	{LCM_SEND(2),{0xAC,0x0D}},	// Gamma 239
+					 
+	{LCM_SEND(2),{0xAD,0x2C}},	// Gamma 247
+				   
+	{LCM_SEND(2),{0xAE,0x26}},	// Gamma 251
+					  
+	{LCM_SEND(2),{0xAF,0x00}},	// Gamma 255
+	
+	///==============Nagitive
+	{LCM_SEND(2),{0xC0,0x00}},	// Gamma 0 
+				 
+	{LCM_SEND(2),{0xC1,0x04}},	// Gamma 4
+					 
+	{LCM_SEND(2),{0xC2,0x0B}},	// Gamma 8
+					
+	{LCM_SEND(2),{0xC3,0x0F}},	// Gamma 16
+					
+	{LCM_SEND(2),{0xC4,0x09}},	// Gamma 24
+					 
+	{LCM_SEND(2),{0xC5,0x18}},	// Gamma 52
+					
+	{LCM_SEND(2),{0xC6,0x07}},	// Gamma 80
+					  
+	{LCM_SEND(2),{0xC7,0x08}},	// Gamma 108
+					   
+	{LCM_SEND(2),{0xC8,0x05}},	// Gamma 147
+					  
+	{LCM_SEND(2),{0xC9,0x09}},	// Gamma 175
+					
+	{LCM_SEND(2),{0xCA,0x07}},	// Gamma 203
+					  
+	{LCM_SEND(2),{0xCB,0x05}},	// Gamma 231
+					  
+	{LCM_SEND(2),{0xCC,0x0C}},	// Gamma 239
+					  
+	{LCM_SEND(2),{0xCD,0x2D}},	// Gamma 247
+					   
+	{LCM_SEND(2),{0xCE,0x28}},	// Gamma 251
+		  
+	{LCM_SEND(2),{0xCF,0x00}},	// Gamma 255
+	
+	
+	
+	
+	//+++++++++++++++++++++++++++++++++++++++++++++++++++//
+	
+	//****************************************************************************//
+	//****************************** Page 6 Command ******************************//
+	//****************************************************************************//
 	{LCM_SEND(8), {6, 0,0xFF,0xFF,0x98,0x06,0x04,0x06}}, // Change to Page 6
+	
+	{LCM_SEND(2),{0x00,0x21}},
+						 
+	{LCM_SEND(2),{0x01,0x0A}},
+					   
+	{LCM_SEND(2),{0x02,0x00}},	  
+					   
+	{LCM_SEND(2),{0x03,0x00}},
+					   
+	{LCM_SEND(2),{0x04,0x01}},
+					  
+	{LCM_SEND(2),{0x05,0x01}},
+					 
+	{LCM_SEND(2),{0x06,0x80}},	  
+					  
+	{LCM_SEND(2),{0x07,0x06}},
+						
+	{LCM_SEND(2),{0x08,0x01}},
+					  
+	{LCM_SEND(2),{0x09,0x80}},	  
+					   
+	{LCM_SEND(2),{0x0A,0x00}},	  
+					  
+	{LCM_SEND(2),{0x0B,0x00}},	  
+					  
+	{LCM_SEND(2),{0x0C,0x0a}},
+					   
+	{LCM_SEND(2),{0x0D,0x0a}},
+						
+	{LCM_SEND(2),{0x0E,0x00}},
+						
+	{LCM_SEND(2),{0x0F,0x00}},
+						
+	{LCM_SEND(2),{0x10,0xF0}},
+						 
+	{LCM_SEND(2),{0x11,0xF4}},
+						
+	{LCM_SEND(2),{0x12,0x04}},
+						 
+	{LCM_SEND(2),{0x13,0x00}},
+					  
+	{LCM_SEND(2),{0x14,0x00}},
+					   
+	{LCM_SEND(2),{0x15,0xC0}},
+					  
+	{LCM_SEND(2),{0x16,0x08}},
+					  
+	{LCM_SEND(2),{0x17,0x00}},
+					   
+	{LCM_SEND(2),{0x18,0x00}},
+						
+	{LCM_SEND(2),{0x19,0x00}},
+						 
+	{LCM_SEND(2),{0x1A,0x00}},
+						  
+	{LCM_SEND(2),{0x1B,0x00}},
+					   
+	{LCM_SEND(2),{0x1C,0x00}},
+					   
+	{LCM_SEND(2),{0x1D,0x00}},
+	
+	{LCM_SEND(2),{0x20,0x01}},
+					   
+	{LCM_SEND(2),{0x21,0x23}},
+						
+	{LCM_SEND(2),{0x22,0x45}},
+					  
+	{LCM_SEND(2),{0x23,0x67}},
+					  
+	{LCM_SEND(2),{0x24,0x01}},
+						   
+	{LCM_SEND(2),{0x25,0x23}},
+					  
+	{LCM_SEND(2),{0x26,0x45}},
+				   
+	{LCM_SEND(2),{0x27,0x67}},
+	
+	{LCM_SEND(2),{0x30,0x01}},
+						  
+	{LCM_SEND(2),{0x31,0x11}},	//GOUT1  FW_R
+						 
+	{LCM_SEND(2),{0x32,0x00}},	//GOUT2  BW_R
+						  
+	{LCM_SEND(2),{0x33,0xEE}},	//GOUT3  GPWR1_R
+						
+	{LCM_SEND(2),{0x34,0xFF}},	//GOUT4  GPWR2_R
+						
+	{LCM_SEND(2),{0x35,0xBB}},	//GOUT5  GCLK4_R
+						 
+	{LCM_SEND(2),{0x36,0xCA}},	//GOUT6  GCLK3_R
+						  
+	{LCM_SEND(2),{0x37,0xDD}},	//GOUT7  GCLK2_R
+						 
+	{LCM_SEND(2),{0x38,0xAC}},	//GOUT8  GCLK1_R
+						 
+	{LCM_SEND(2),{0x39,0x76}},	//GOUT9  GVST1_R   76
+						 
+	{LCM_SEND(2),{0x3A,0x67}},	//GOUT10 GVST2_R	67
+						
+	{LCM_SEND(2),{0x3B,0x22}},
+						
+	{LCM_SEND(2),{0x3C,0x22}},
+						
+	{LCM_SEND(2),{0x3D,0x22}},
+					   
+	{LCM_SEND(2),{0x3E,0x22}},
+						  
+	{LCM_SEND(2),{0x3F,0x22}},
+						 
+	{LCM_SEND(2),{0x40,0x22}},
+						   
+	{LCM_SEND(2),{0x52,0x10}},
+						 
+	{LCM_SEND(2),{0x53,0x10}},	
 
-	{LCM_SEND(2), {0x00,0x21}},
-	{LCM_SEND(2), {0x01,0x0a}},
-	{LCM_SEND(2), {0x02,0x00}},
-	{LCM_SEND(2), {0x03,0x00}},
-	{LCM_SEND(2), {0x04,0x01}},
-	{LCM_SEND(2), {0x05,0x01}},
-	{LCM_SEND(2), {0x06,0x80}},
-	{LCM_SEND(2), {0x07,0x06}},
-	{LCM_SEND(2), {0x08,0x01}},
-	{LCM_SEND(2), {0x09,0x80}},
-	{LCM_SEND(2), {0x0A,0x00}},
-	{LCM_SEND(2), {0x0B,0x00}},
-	{LCM_SEND(2), {0x0C,0x0a}},
-	{LCM_SEND(2), {0x0D,0x0a}},
-	{LCM_SEND(2), {0x0E,0x00}},
-	{LCM_SEND(2), {0x0F,0x00}},
-
-	{LCM_SEND(2), {0x10,0xf0}},
-	{LCM_SEND(2), {0x11,0xf4}},
-	{LCM_SEND(2), {0x12,0x04}},
-	{LCM_SEND(2), {0x13,0x00}},
-	{LCM_SEND(2), {0x14,0x00}},
-	{LCM_SEND(2), {0x15,0xc0}},
-	{LCM_SEND(2), {0x16,0x08}},
-	{LCM_SEND(2), {0x17,0x00}},
-	{LCM_SEND(2), {0x18,0x00}},
-	{LCM_SEND(2), {0x19,0x00}},
-	{LCM_SEND(2), {0x1A,0x00}},
-	{LCM_SEND(2), {0x1B,0x00}},
-	{LCM_SEND(2), {0x1C,0x00}},
-	{LCM_SEND(2), {0x1D,0x00}},
-
-	{LCM_SEND(2), {0x20,0x01}},
-	{LCM_SEND(2), {0x21,0x23}},
-	{LCM_SEND(2), {0x22,0x45}},
-	{LCM_SEND(2), {0x23,0x67}},
-	{LCM_SEND(2), {0x24,0x01}},
-	{LCM_SEND(2), {0x25,0x23}},
-	{LCM_SEND(2), {0x26,0x45}},
-	{LCM_SEND(2), {0x27,0x67}},
-
-	{LCM_SEND(2), {0x30,0x11}},
-	{LCM_SEND(2), {0x31,0x11}},
-	{LCM_SEND(2), {0x32,0x00}},
-	{LCM_SEND(2), {0x33,0xee}},
-	{LCM_SEND(2), {0x34,0xff}},
-	{LCM_SEND(2), {0x35,0xbb}},
-	{LCM_SEND(2), {0x36,0xca}},
-	{LCM_SEND(2), {0x37,0xdd}},
-	{LCM_SEND(2), {0x38,0xac}},
-	{LCM_SEND(2), {0x39,0x76}},
-	{LCM_SEND(2), {0x3A,0x67}},
-	{LCM_SEND(2), {0x3B,0x22}},
-	{LCM_SEND(2), {0x3C,0x22}},
-	{LCM_SEND(2), {0x3D,0x22}},
-	{LCM_SEND(2), {0x3E,0x22}},
-	{LCM_SEND(2), {0x3F,0x22}},
-
-	{LCM_SEND(2), {0x40,0x22}},
-
-	{LCM_SEND(2), {0x52,0x10}},
-
-	{LCM_SEND(2), {0x53,0x10}},
-
-	{LCM_SEND(2), {0x58,0x97}},
-
+	
+	//****************************************************************************//
+	//****************************** Page 7 Command ******************************//
+	//****************************************************************************//
 	{LCM_SEND(8), {6, 0,0xFF,0xFF,0x98,0x06,0x04,0x07}}, // Change to Page 7
-	{LCM_SEND(2), {0x17,0x22}},
+	
+	{LCM_SEND(2),{0x18,0x1D}},	// VREG1 VREG2 output
+					   
+	{LCM_SEND(2),{0x17,0x32}},	// 
+				
 
-	{LCM_SEND(2), {0x02,0x77}},
-
-	{LCM_SEND(2), {0xe1,0x79}},
-//****************************************************************************//
+					  
+	{LCM_SEND(2),{0x02,0x77}},	// 
+	
+	{LCM_SEND(2),{0xE1,0x79}},	// 
+	//****************************************************************************//
+	
 	{LCM_SEND(8), {6, 0,0xFF,0xFF,0x98,0x06,0x04,0x00}}, // Change to Page 0
-
-	{LCM_SEND(1), {0x35}},
-
+	
+	{LCM_SEND(2),{0x36,0x00}},	
+	
+						   
 	{LCM_SEND(1), {0x11}},
 	{LCM_SLEEP(120)},
-
+	
 	{LCM_SEND(1), {0x29}},
-	{LCM_SLEEP(10)},
- };
+	{LCM_SLEEP(20)},
 
+}; 
+
 static LCM_Force_Cmd_Code rd_prep_code[]={
 	{0x39, {LCM_SEND(8), {0x6, 0, 0xFF, 0xFF, 0x98, 0x06,0x04,0x01}}},
 	{0x37, {LCM_SEND(2), {0x3, 0}}},
 };
 
-static LCM_Init_Code disp_on =  {LCM_SEND(1), {0x29}};
-
-static LCM_Init_Code sleep_in =  {LCM_SEND(1), {0x10}};
-
-static LCM_Init_Code sleep_out =  {LCM_SEND(1), {0x11}};
-
 static int32_t ili9806e_2_mipi_init(struct panel_spec *self)
 {
 	int32_t i;
@@ -250,7 +355,7 @@
 {
         /*Jessica TODO: need read id*/
         int32_t i = 0;
-        uint32_t j =0;
+        uint32_t j =0;         
         LCM_Force_Cmd_Code * rd_prepare = rd_prep_code;
         uint8_t read_data[3] = {0};
         int32_t read_rtn = 0;
@@ -262,9 +367,8 @@
         mipi_set_hs_mode_t mipi_set_hs_mode = self->info.mipi->ops->mipi_set_hs_mode;
         mipi_eotp_set_t mipi_eotp_set = self->info.mipi->ops->mipi_eotp_set;
 
-	//return 0x6; //cg liyun 20130329
 
-	printk("lcd_ili9806e_2_mipi read id!\n");
+	printk("lcd_ili9806e_2_mipi_hlt read id!\n");
 	mipi_set_lp_mode();
 
 	//mipi_set_cmd_mode();
@@ -279,12 +383,14 @@
 			}
 			rd_prepare++;
 		}
-		mdelay(50);
-		read_rtn = mipi_force_read(0x02, 1,(uint8_t *)read_data);
-		printk("lcd_ili9806e_2_mipi read id 0x02 value is 0x%x!\n", read_data[0]);
+		read_rtn = mipi_force_read(0x00, 1,(uint8_t *)&read_data[0]);
+		read_rtn = mipi_force_read(0x01, 1,(uint8_t *)&read_data[1]);
+		read_rtn = mipi_force_read(0x02, 1,(uint8_t *)&read_data[2]);
+		printk("lcd_ili9806e_mipi  read id 0x00 value is 0x%x, 0x%x, 0x%x!\n", read_data[0], read_data[1], read_data[2]);
 
-		if((0x04 == read_data[0])){
-			printk("lcd_ili9806e_2_mipi read id success!\n");
+		if((0x98 == read_data[0])&&(0x06 == read_data[1])){
+
+			printk("lcd_ili9806e_2_mipi_hlt check id success!\n");
 			return 0x980602;
 		}
 	}
@@ -300,12 +406,12 @@
 };
 
 static struct timing_rgb lcd_ili9806e_2_mipi_timing = {
-	.hfp = 60,  /* unit: pixel */// 100
-	.hbp = 80,//80
-	.hsync = 60,//6
+	.hfp = 80,/* unit: pixel */
+	.hbp = 80,
+	.hsync = 10, 
 	.vfp = 20, /*unit: line*/
-	.vbp = 14,
-	.vsync =6, //6,
+	.vbp = 16,
+	.vsync = 4,
 };
 
 static struct info_mipi lcd_ili9806e_2_mipi_info = {
Index: u-boot64/drivers/video/sprdfb/lcd/Makefile
===================================================================
--- u-boot64/drivers/video/sprdfb/lcd/Makefile	(revision 166569)
+++ u-boot64/drivers/video/sprdfb/lcd/Makefile	(revision 166570)
@@ -34,6 +34,9 @@
 obj-$(CONFIG_FB_LCD_SC7798_RGB_SPI)  += lcd_sc7798_rgb_spi.o
 obj-$(CONFIG_FB_LCD_ILI9806E_MIPI)  += lcd_ili9806e_mipi.o
 obj-$(CONFIG_FB_LCD_ILI9806E_2_MIPI)  += lcd_ili9806e_2_mipi.o
+obj-$(CONFIG_FB_LCD_ILI9806E_2_MIPI_HUASHI)  += lcd_ili9806e_2_mipi_huashi.o
+obj-$(CONFIG_FB_LCD_ILI9806E_2_MIPI_HSD)  += lcd_ili9806e_2_mipi_hsd.o
+obj-$(CONFIG_FB_LCD_ILI9806E_2_MIPI_TXD)  += lcd_ili9806e_2_mipi_txd.o
 obj-$(CONFIG_FB_LCD_HX8379A_MIPI)  += lcd_hx8379a_mipi.o
 obj-$(CONFIG_FB_LCD_HX8389C_MIPI) += lcd_hx8389c_mipi.o
 obj-$(CONFIG_FB_LCD_ILI6150_LVDS) += lcd_ili6150_lvds.o
Index: u-boot64/drivers/video/sprdfb/lcd/lcd_ili9806e_2_mipi_txd.c
===================================================================
--- u-boot64/drivers/video/sprdfb/lcd/lcd_ili9806e_2_mipi_txd.c	(revision 0)
+++ u-boot64/drivers/video/sprdfb/lcd/lcd_ili9806e_2_mipi_txd.c	(revision 166570)
@@ -0,0 +1,447 @@
+/* drivers/video/sprdfb/lcd_ili9806e_2_mipi.c
+ *
+ * Support for ili9806e_2 mipi LCD device
+ *
+ * Copyright (C) 2010 Spreadtrum
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#include "../sprdfb_chip_common.h"
+#include "../sprdfb.h"
+#include "../sprdfb_panel.h"
+
+#define printk printf
+
+//#define  LCD_DEBUG
+#ifdef LCD_DEBUG
+#define LCD_PRINT printk
+#else
+#define LCD_PRINT(...)
+#endif
+
+#define MAX_DATA   48
+
+typedef struct LCM_Init_Code_tag {
+	unsigned int tag;
+	unsigned char data[MAX_DATA];
+}LCM_Init_Code;
+
+typedef struct LCM_force_cmd_code_tag{
+	unsigned int datatype;
+	LCM_Init_Code real_cmd_code;
+}LCM_Force_Cmd_Code;
+
+#define LCM_TAG_SHIFT 24
+#define LCM_TAG_MASK  ((1 << 24) -1)
+#define LCM_SEND(len) ((1 << LCM_TAG_SHIFT)| len)
+#define LCM_SLEEP(ms) ((2 << LCM_TAG_SHIFT)| ms)
+//#define ARRAY_SIZE(array) ( sizeof(array) / sizeof(array[0]))
+
+#define LCM_TAG_SEND  (1<< 0)
+#define LCM_TAG_SLEEP (1 << 1)
+
+static LCM_Init_Code init_data[] = 
+{
+	//****************************************************************************//
+	{LCM_SEND(8), {6, 0,0xFF,0xFF,0x98,0x06,0x04,0x01}},// Change to Page 1
+	
+	{LCM_SEND(2),{0x08,0x10}},				   // output SDA
+						
+	{LCM_SEND(2),{0x21,0x01}},				   // DE = 1 Active
+					 
+	{LCM_SEND(2),{0x30,0x01}},				   // 480 X 854
+					   
+	{LCM_SEND(2),{0x31,0x02}},				   // Inversion
+					
+	{LCM_SEND(2),{0x40,0x14}},				  // BT  
+					 
+	{LCM_SEND(2),{0x41,0x35}},				   // DVDDH DVDDL clamp 
+				   
+	{LCM_SEND(2),{0x42,0x03}},				   // VGH/VGL 
+					 
+	{LCM_SEND(2),{0x43,0x09}},				   // VGH_CLAMP 0FF ;
+					 
+	{LCM_SEND(2),{0x44,0x07}},				   // VGL_CLAMP OFF ; 
+					  
+	
+					
+	{LCM_SEND(2),{0x50,0x60}},					 //VGMP
+					   
+	{LCM_SEND(2),{0x51,0x60}},					//VGMN
+					
+	{LCM_SEND(2),{0x52,0x00}},					 //Flicker
+					 
+	{LCM_SEND(2),{0x53,0x41}},					 //Flicker	41
+	 
+	{LCM_SEND(2),{0x57,0x50}},					  
+	{LCM_SEND(2),{0x60,0x0a}},				   // SDTI
+					
+	{LCM_SEND(2),{0x61,0x00}},				  // CRTI
+					
+	{LCM_SEND(2),{0x62,0x08}},				   // EQTI
+					   
+	{LCM_SEND(2),{0x63,0x00}},				  // PCTI
+	
+	//++++++++++++++++++ Gamma Setting ++++++++++++++++++//
+	
+	{LCM_SEND(2),{0xA0,0x00}},	// Gamma 0 
+					 
+	{LCM_SEND(2),{0xA1,0x01}},	// Gamma 4 
+					   
+	{LCM_SEND(2),{0xA2,0x05}},	// Gamma 8
+					   
+	{LCM_SEND(2),{0xA3,0x09}},	// Gamma 16
+						 
+	{LCM_SEND(2),{0xA4,0x04}},	// Gamma 24
+					
+	{LCM_SEND(2),{0xA5,0x16}},	// Gamma 52
+					   
+	{LCM_SEND(2),{0xA6,0x09}},	// Gamma 80
+					  
+	{LCM_SEND(2),{0xA7,0x08}}, // Gamma 108
+						
+	{LCM_SEND(2),{0xA8,0x04}},	// Gamma 147
+					   
+	{LCM_SEND(2),{0xA9,0x08}},	// Gamma 175
+				 
+	{LCM_SEND(2),{0xAA,0x05}},	// Gamma 203
+				 
+	{LCM_SEND(2),{0xAB,0x07}},	// Gamma 231
+					 
+	{LCM_SEND(2),{0xAC,0x0D}},	// Gamma 239
+					 
+	{LCM_SEND(2),{0xAD,0x3B}},	// Gamma 247
+				   
+	{LCM_SEND(2),{0xAE,0x36}},	// Gamma 251
+					  
+	{LCM_SEND(2),{0xAF,0x1f}},	// Gamma 255
+	
+	///==============Nagitive
+	{LCM_SEND(2),{0xC0,0x00}},	// Gamma 0 
+				 
+	{LCM_SEND(2),{0xC1,0x01}},	// Gamma 4
+					 
+	{LCM_SEND(2),{0xC2,0x05}},	// Gamma 8
+					
+	{LCM_SEND(2),{0xC3,0x0B}},	// Gamma 16
+					
+	{LCM_SEND(2),{0xC4,0x06}},	// Gamma 24
+					 
+	{LCM_SEND(2),{0xC5,0x12}},	// Gamma 52
+					
+	{LCM_SEND(2),{0xC6,0x0A}},	// Gamma 80
+					  
+	{LCM_SEND(2),{0xC7,0x09}},	// Gamma 108
+					   
+	{LCM_SEND(2),{0xC8,0x03}},	// Gamma 147
+					  
+	{LCM_SEND(2),{0xC9,0x08}},	// Gamma 175
+					
+	{LCM_SEND(2),{0xCA,0x08}},	// Gamma 203
+					  
+	{LCM_SEND(2),{0xCB,0x02}},	// Gamma 231
+					  
+	{LCM_SEND(2),{0xCC,0x0A}},	// Gamma 239
+					  
+	{LCM_SEND(2),{0xCD,0x2A}},	// Gamma 247
+					   
+	{LCM_SEND(2),{0xCE,0x25}},	// Gamma 251
+		  
+	{LCM_SEND(2),{0xCF,0x1f}},	// Gamma 255
+	
+	
+	
+	
+	//+++++++++++++++++++++++++++++++++++++++++++++++++++//
+	
+	//****************************************************************************//
+	//****************************** Page 6 Command ******************************//
+	//****************************************************************************//
+	{LCM_SEND(8), {6, 0,0xFF,0xFF,0x98,0x06,0x04,0x06}}, // Change to Page 6
+	
+	{LCM_SEND(2),{0x00,0x21}},
+						 
+	{LCM_SEND(2),{0x01,0x0A}},
+					   
+	{LCM_SEND(2),{0x02,0x00}},	  
+					   
+	{LCM_SEND(2),{0x03,0x00}},
+					   
+	{LCM_SEND(2),{0x04,0x01}},
+					  
+	{LCM_SEND(2),{0x05,0x01}},
+					 
+	{LCM_SEND(2),{0x06,0x80}},	  
+					  
+	{LCM_SEND(2),{0x07,0x06}},
+						
+	{LCM_SEND(2),{0x08,0x01}},
+					  
+	{LCM_SEND(2),{0x09,0x80}},	  
+					   
+	{LCM_SEND(2),{0x0A,0x00}},	  
+					  
+	{LCM_SEND(2),{0x0B,0x00}},	  
+					  
+	{LCM_SEND(2),{0x0C,0x0a}},
+					   
+	{LCM_SEND(2),{0x0D,0x0a}},
+						
+	{LCM_SEND(2),{0x0E,0x00}},
+						
+	{LCM_SEND(2),{0x0F,0x00}},
+						
+	{LCM_SEND(2),{0x10,0xF0}},
+						 
+	{LCM_SEND(2),{0x11,0xF4}},
+						
+	{LCM_SEND(2),{0x12,0x04}},
+						 
+	{LCM_SEND(2),{0x13,0x00}},
+					  
+	{LCM_SEND(2),{0x14,0x00}},
+					   
+	{LCM_SEND(2),{0x15,0xC0}},
+					  
+	{LCM_SEND(2),{0x16,0x08}},
+					  
+	{LCM_SEND(2),{0x17,0x00}},
+					   
+	{LCM_SEND(2),{0x18,0x00}},
+						
+	{LCM_SEND(2),{0x19,0x00}},
+						 
+	{LCM_SEND(2),{0x1A,0x00}},
+						  
+	{LCM_SEND(2),{0x1B,0x00}},
+					   
+	{LCM_SEND(2),{0x1C,0x00}},
+					   
+	{LCM_SEND(2),{0x1D,0x00}},
+	
+	{LCM_SEND(2),{0x20,0x01}},
+					   
+	{LCM_SEND(2),{0x21,0x23}},
+						
+	{LCM_SEND(2),{0x22,0x45}},
+					  
+	{LCM_SEND(2),{0x23,0x67}},
+					  
+	{LCM_SEND(2),{0x24,0x01}},
+						   
+	{LCM_SEND(2),{0x25,0x23}},
+					  
+	{LCM_SEND(2),{0x26,0x45}},
+				   
+	{LCM_SEND(2),{0x27,0x67}},
+	
+	{LCM_SEND(2),{0x30,0x01}},
+						  
+	{LCM_SEND(2),{0x31,0x11}},	//GOUT1  FW_R
+						 
+	{LCM_SEND(2),{0x32,0x00}},	//GOUT2  BW_R
+						  
+	{LCM_SEND(2),{0x33,0xEE}},	//GOUT3  GPWR1_R
+						
+	{LCM_SEND(2),{0x34,0xFF}},	//GOUT4  GPWR2_R
+						
+	{LCM_SEND(2),{0x35,0xBB}},	//GOUT5  GCLK4_R
+						 
+	{LCM_SEND(2),{0x36,0xCA}},	//GOUT6  GCLK3_R
+						  
+	{LCM_SEND(2),{0x37,0xDD}},	//GOUT7  GCLK2_R
+						 
+	{LCM_SEND(2),{0x38,0xAC}},	//GOUT8  GCLK1_R
+						 
+	{LCM_SEND(2),{0x39,0x76}},	//GOUT9  GVST1_R   76
+						 
+	{LCM_SEND(2),{0x3A,0x67}},	//GOUT10 GVST2_R	67
+						
+	{LCM_SEND(2),{0x3B,0x22}},
+						
+	{LCM_SEND(2),{0x3C,0x22}},
+						
+	{LCM_SEND(2),{0x3D,0x22}},
+					   
+	{LCM_SEND(2),{0x3E,0x22}},
+						  
+	{LCM_SEND(2),{0x3F,0x22}},
+						 
+	{LCM_SEND(2),{0x40,0x22}},
+						   
+	{LCM_SEND(2),{0x52,0x10}},
+						 
+	{LCM_SEND(2),{0x53,0x10}},
+	
+	{LCM_SEND(2),{0x58,0x97}},
+	
+	//****************************************************************************//
+	//****************************** Page 7 Command ******************************//
+	//****************************************************************************//
+	{LCM_SEND(8), {6, 0,0xFF,0xFF,0x98,0x06,0x04,0x07}}, // Change to Page 7
+	
+	{LCM_SEND(2),{0x26,0xB2}},	// VREG1 VREG2 output
+					   
+	{LCM_SEND(2),{0x17,0x22}},	// 
+						
+	{LCM_SEND(2),{0x06,0x13}},	// 
+					  
+	{LCM_SEND(2),{0x02,0x77}},	// 
+	
+	{LCM_SEND(2),{0xE1,0x79}},	// 
+	//****************************************************************************//
+	
+	{LCM_SEND(8), {6, 0,0xFF,0xFF,0x98,0x06,0x04,0x00}}, // Change to Page 0
+	
+	{LCM_SEND(2),{0x35,0x00}},	
+	
+	{LCM_SEND(2),{0x21,0x00}}, 
+						   
+	{LCM_SEND(1), {0x11}},
+	{LCM_SLEEP(120)},
+	
+	{LCM_SEND(1), {0x29}},
+	{LCM_SLEEP(10)},
+
+}; 
+
+static LCM_Force_Cmd_Code rd_prep_code[]={
+	{0x39, {LCM_SEND(8), {0x6, 0, 0xFF, 0xFF, 0x98, 0x06,0x04,0x01}}},
+	{0x37, {LCM_SEND(2), {0x3, 0}}},
+};
+
+static int32_t ili9806e_2_mipi_init(struct panel_spec *self)
+{
+	int32_t i;
+	LCM_Init_Code *init = init_data;
+	unsigned int tag;
+
+	mipi_set_cmd_mode_t mipi_set_cmd_mode = self->info.mipi->ops->mipi_set_cmd_mode;
+	mipi_gen_write_t mipi_gen_write = self->info.mipi->ops->mipi_gen_write;
+
+         mipi_set_lp_mode_t mipi_set_lp_mode = self->info.mipi->ops->mipi_set_lp_mode;
+         mipi_set_hs_mode_t mipi_set_hs_mode = self->info.mipi->ops->mipi_set_hs_mode;
+	mipi_eotp_set_t mipi_eotp_set = self->info.mipi->ops->mipi_eotp_set;
+	LCD_PRINT("lcd_ili9806e_2_init\n");
+
+	//mipi_set_cmd_mode();
+
+	mdelay(5);
+	mipi_set_lp_mode();
+	//mipi_eotp_set(1,0);
+	for(i = 0; i < ARRAY_SIZE(init_data); i++){
+		tag = (init->tag >>24);
+		if(tag & LCM_TAG_SEND){
+			mipi_gen_write(init->data, (init->tag & LCM_TAG_MASK));
+			udelay(20);
+		}else if(tag & LCM_TAG_SLEEP){
+			mdelay((init->tag & LCM_TAG_MASK));
+		}
+		init++;
+	}
+
+	mdelay(5);
+	mipi_set_hs_mode();
+	return 0;
+}
+
+static uint32_t ili9806e_2_readid(struct panel_spec *self)
+{
+        /*Jessica TODO: need read id*/
+        int32_t i = 0;
+        uint32_t j =0;         
+        LCM_Force_Cmd_Code * rd_prepare = rd_prep_code;
+        uint8_t read_data[3] = {0};
+        int32_t read_rtn = 0;
+        unsigned int tag = 0;
+        mipi_set_cmd_mode_t mipi_set_cmd_mode = self->info.mipi->ops->mipi_set_cmd_mode;
+        mipi_force_write_t mipi_force_write = self->info.mipi->ops->mipi_force_write;
+        mipi_force_read_t mipi_force_read = self->info.mipi->ops->mipi_force_read;
+        mipi_set_lp_mode_t mipi_set_lp_mode = self->info.mipi->ops->mipi_set_lp_mode;
+        mipi_set_hs_mode_t mipi_set_hs_mode = self->info.mipi->ops->mipi_set_hs_mode;
+        mipi_eotp_set_t mipi_eotp_set = self->info.mipi->ops->mipi_eotp_set;
+
+
+	printk("lcd_ili9806e_2_mipi_hlt read id!\n");
+	mipi_set_lp_mode();
+
+	//mipi_set_cmd_mode();
+	for(j = 0; j < 4; j++){
+		rd_prepare = rd_prep_code;
+		for(i = 0; i < ARRAY_SIZE(rd_prep_code); i++){
+			tag = (rd_prepare->real_cmd_code.tag >> 24);
+			if(tag & LCM_TAG_SEND){
+				mipi_force_write(rd_prepare->datatype, rd_prepare->real_cmd_code.data, (rd_prepare->real_cmd_code.tag & LCM_TAG_MASK));
+			}else if(tag & LCM_TAG_SLEEP){
+				mdelay((rd_prepare->real_cmd_code.tag & LCM_TAG_MASK));
+			}
+			rd_prepare++;
+		}
+		read_rtn = mipi_force_read(0x00, 1,(uint8_t *)&read_data[0]);
+		read_rtn = mipi_force_read(0x01, 1,(uint8_t *)&read_data[1]);
+		read_rtn = mipi_force_read(0x02, 1,(uint8_t *)&read_data[2]);
+		printk("lcd_ili9806e_mipi  read id 0x00 value is 0x%x, 0x%x, 0x%x!\n", read_data[0], read_data[1], read_data[2]);
+
+		if((0x98 == read_data[0])&&(0x06 == read_data[1])){
+
+			printk("lcd_ili9806e_2_mipi_hlt check id success!\n");
+			return 0x980602;
+		}
+	}
+
+	mdelay(5);
+	mipi_set_hs_mode();
+	return 0;
+}
+
+static struct panel_operations lcd_ili9806e_2_mipi_operations = {
+	.panel_init = ili9806e_2_mipi_init,
+	.panel_readid = ili9806e_2_readid,
+};
+
+static struct timing_rgb lcd_ili9806e_2_mipi_timing = {
+	.hfp = 80,/* unit: pixel */
+	.hbp = 80,
+	.hsync = 10, 
+	.vfp = 20, /*unit: line*/
+	.vbp = 16,
+	.vsync = 4,
+};
+
+static struct info_mipi lcd_ili9806e_2_mipi_info = {
+	.work_mode  = SPRDFB_MIPI_MODE_VIDEO,
+	.video_bus_width = 24, /*18,16*/
+	.lan_number = 2,
+	.phy_feq = 500*1000,
+	.h_sync_pol = SPRDFB_POLARITY_POS,
+	.v_sync_pol = SPRDFB_POLARITY_POS,
+	.de_pol = SPRDFB_POLARITY_POS,
+	.te_pol = SPRDFB_POLARITY_POS,
+	.color_mode_pol = SPRDFB_POLARITY_NEG,
+	.shut_down_pol = SPRDFB_POLARITY_NEG,
+	.timing = &lcd_ili9806e_2_mipi_timing,
+	.ops = NULL,
+};
+
+struct panel_spec lcd_ili9806e_2_mipi_spec = {
+	//.cap = PANEL_CAP_NOT_TEAR_SYNC,
+	.width = 480,
+	.height = 854,
+	.fps = 60,
+	.type = LCD_MODE_DSI,
+	.direction = LCD_DIRECT_NORMAL,
+	.info = {
+		.mipi = &lcd_ili9806e_2_mipi_info
+	},
+	.ops = &lcd_ili9806e_2_mipi_operations,
+};
+
+
Index: u-boot64/drivers/video/sprdfb/lcd/lcd_ili9806e_2_mipi_hsd.c
===================================================================
--- u-boot64/drivers/video/sprdfb/lcd/lcd_ili9806e_2_mipi_hsd.c	(revision 0)
+++ u-boot64/drivers/video/sprdfb/lcd/lcd_ili9806e_2_mipi_hsd.c	(revision 166570)
@@ -0,0 +1,453 @@
+/* drivers/video/sprdfb/lcd_ili9806e_2_mipi.c
+ *
+ * Support for ili9806e_2 mipi LCD device
+ *
+ * Copyright (C) 2010 Spreadtrum
+ * 
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#include "../sprdfb_chip_common.h"
+#include "../sprdfb.h"
+#include "../sprdfb_panel.h"
+
+#define printk printf
+
+//#define  LCD_DEBUG
+#ifdef LCD_DEBUG
+#define LCD_PRINT printk
+#else
+#define LCD_PRINT(...)
+#endif
+
+#define MAX_DATA   48
+
+typedef struct LCM_Init_Code_tag {
+	unsigned int tag;
+	unsigned char data[MAX_DATA];
+}LCM_Init_Code;
+
+typedef struct LCM_force_cmd_code_tag{
+	unsigned int datatype;
+	LCM_Init_Code real_cmd_code;
+}LCM_Force_Cmd_Code;
+
+#define LCM_TAG_SHIFT 24
+#define LCM_TAG_MASK  ((1 << 24) -1)
+#define LCM_SEND(len) ((1 << LCM_TAG_SHIFT)| len)
+#define LCM_SLEEP(ms) ((2 << LCM_TAG_SHIFT)| ms)
+//#define ARRAY_SIZE(array) ( sizeof(array) / sizeof(array[0]))
+
+#define LCM_TAG_SEND  (1<< 0)
+#define LCM_TAG_SLEEP (1 << 1)
+
+static LCM_Init_Code init_data[] = 
+{
+	//****************************************************************************//
+	{LCM_SEND(8), {6, 0,0xFF,0xFF,0x98,0x06,0x04,0x01}},// Change to Page 1
+	
+	{LCM_SEND(2),{0x08,0x10}},				   // output SDA
+						
+	{LCM_SEND(2),{0x21,0x01}},				   // DE = 1 Active
+
+	//{LCM_SEND(2),{0x22,0x08}},				   
+	
+	{LCM_SEND(2),{0x30,0x01}},				   // 480 X 854
+					   
+	{LCM_SEND(2),{0x31,0x02}},				   // Inversion
+					
+	{LCM_SEND(2),{0x40,0x15}},				  // BT  
+					 
+	{LCM_SEND(2),{0x41,0x33}},				   // DVDDH DVDDL clamp 
+				   
+	{LCM_SEND(2),{0x42,0x02}},				   // VGH/VGL 
+					 
+	{LCM_SEND(2),{0x43,0x09}},				   // VGH_CLAMP 0FF ;
+					 
+	{LCM_SEND(2),{0x44,0x07}},				   // VGL_CLAMP OFF ; 
+					  
+	{LCM_SEND(2),{0x45,0x16}},	
+					
+	{LCM_SEND(2),{0x50,0x80}},					 //VGMP
+					   
+	{LCM_SEND(2),{0x51,0x80}},					//VGMN
+					
+	{LCM_SEND(2),{0x52,0x00}},					 //Flicker
+					 
+	{LCM_SEND(2),{0x53,0x41}},					 //Flicker	41
+	 
+					  
+	{LCM_SEND(2),{0x60,0x07}},				   // SDTI
+					
+	{LCM_SEND(2),{0x61,0x00}},				  // CRTI
+					
+	{LCM_SEND(2),{0x62,0x08}},				   // EQTI
+					   
+	{LCM_SEND(2),{0x63,0x00}},				  // PCTI
+	
+	//++++++++++++++++++ Gamma Setting ++++++++++++++++++//
+	
+	{LCM_SEND(2),{0xA0,0x00}},	// Gamma 0 
+					 
+	{LCM_SEND(2),{0xA1,0x03}},	// Gamma 4 
+					   
+	{LCM_SEND(2),{0xA2,0x09}},	// Gamma 8
+					   
+	{LCM_SEND(2),{0xA3,0x0D}},	// Gamma 16
+						 
+	{LCM_SEND(2),{0xA4,0x06}},	// Gamma 24
+					
+	{LCM_SEND(2),{0xA5,0x16}},	// Gamma 52
+					   
+	{LCM_SEND(2),{0xA6,0x09}},	// Gamma 80
+					  
+	{LCM_SEND(2),{0xA7,0x08}}, // Gamma 108
+						
+	{LCM_SEND(2),{0xA8,0x03}},	// Gamma 147
+					   
+	{LCM_SEND(2),{0xA9,0x07}},	// Gamma 175
+				 
+	{LCM_SEND(2),{0xAA,0x06}},	// Gamma 203
+				 
+	{LCM_SEND(2),{0xAB,0x05}},	// Gamma 231
+					 
+	{LCM_SEND(2),{0xAC,0x0D}},	// Gamma 239
+					 
+	{LCM_SEND(2),{0xAD,0x2C}},	// Gamma 247
+				   
+	{LCM_SEND(2),{0xAE,0x26}},	// Gamma 251
+					  
+	{LCM_SEND(2),{0xAF,0x00}},	// Gamma 255
+	
+	///==============Nagitive
+	{LCM_SEND(2),{0xC0,0x00}},	// Gamma 0 
+				 
+	{LCM_SEND(2),{0xC1,0x04}},	// Gamma 4
+					 
+	{LCM_SEND(2),{0xC2,0x0B}},	// Gamma 8
+					
+	{LCM_SEND(2),{0xC3,0x0F}},	// Gamma 16
+					
+	{LCM_SEND(2),{0xC4,0x09}},	// Gamma 24
+					 
+	{LCM_SEND(2),{0xC5,0x18}},	// Gamma 52
+					
+	{LCM_SEND(2),{0xC6,0x07}},	// Gamma 80
+					  
+	{LCM_SEND(2),{0xC7,0x08}},	// Gamma 108
+					   
+	{LCM_SEND(2),{0xC8,0x05}},	// Gamma 147
+					  
+	{LCM_SEND(2),{0xC9,0x09}},	// Gamma 175
+					
+	{LCM_SEND(2),{0xCA,0x07}},	// Gamma 203
+					  
+	{LCM_SEND(2),{0xCB,0x05}},	// Gamma 231
+					  
+	{LCM_SEND(2),{0xCC,0x0C}},	// Gamma 239
+					  
+	{LCM_SEND(2),{0xCD,0x2D}},	// Gamma 247
+					   
+	{LCM_SEND(2),{0xCE,0x28}},	// Gamma 251
+		  
+	{LCM_SEND(2),{0xCF,0x00}},	// Gamma 255
+	
+	
+	
+	
+	//+++++++++++++++++++++++++++++++++++++++++++++++++++//
+	
+	//****************************************************************************//
+	//****************************** Page 6 Command ******************************//
+	//****************************************************************************//
+	{LCM_SEND(8), {6, 0,0xFF,0xFF,0x98,0x06,0x04,0x06}}, // Change to Page 6
+	
+	{LCM_SEND(2),{0x00,0x21}},
+						 
+	{LCM_SEND(2),{0x01,0x0A}},
+					   
+	{LCM_SEND(2),{0x02,0x00}},	  
+					   
+	{LCM_SEND(2),{0x03,0x00}},
+					   
+	{LCM_SEND(2),{0x04,0x01}},
+					  
+	{LCM_SEND(2),{0x05,0x01}},
+					 
+	{LCM_SEND(2),{0x06,0x80}},	  
+					  
+	{LCM_SEND(2),{0x07,0x06}},
+						
+	{LCM_SEND(2),{0x08,0x01}},
+					  
+	{LCM_SEND(2),{0x09,0x80}},	  
+					   
+	{LCM_SEND(2),{0x0A,0x00}},	  
+					  
+	{LCM_SEND(2),{0x0B,0x00}},	  
+					  
+	{LCM_SEND(2),{0x0C,0x0a}},
+					   
+	{LCM_SEND(2),{0x0D,0x0a}},
+						
+	{LCM_SEND(2),{0x0E,0x00}},
+						
+	{LCM_SEND(2),{0x0F,0x00}},
+						
+	{LCM_SEND(2),{0x10,0xF0}},
+						 
+	{LCM_SEND(2),{0x11,0xF4}},
+						
+	{LCM_SEND(2),{0x12,0x04}},
+						 
+	{LCM_SEND(2),{0x13,0x00}},
+					  
+	{LCM_SEND(2),{0x14,0x00}},
+					   
+	{LCM_SEND(2),{0x15,0xC0}},
+					  
+	{LCM_SEND(2),{0x16,0x08}},
+					  
+	{LCM_SEND(2),{0x17,0x00}},
+					   
+	{LCM_SEND(2),{0x18,0x00}},
+						
+	{LCM_SEND(2),{0x19,0x00}},
+						 
+	{LCM_SEND(2),{0x1A,0x00}},
+						  
+	{LCM_SEND(2),{0x1B,0x00}},
+					   
+	{LCM_SEND(2),{0x1C,0x00}},
+					   
+	{LCM_SEND(2),{0x1D,0x00}},
+	
+	{LCM_SEND(2),{0x20,0x01}},
+					   
+	{LCM_SEND(2),{0x21,0x23}},
+						
+	{LCM_SEND(2),{0x22,0x45}},
+					  
+	{LCM_SEND(2),{0x23,0x67}},
+					  
+	{LCM_SEND(2),{0x24,0x01}},
+						   
+	{LCM_SEND(2),{0x25,0x23}},
+					  
+	{LCM_SEND(2),{0x26,0x45}},
+				   
+	{LCM_SEND(2),{0x27,0x67}},
+	
+	{LCM_SEND(2),{0x30,0x01}},
+						  
+	{LCM_SEND(2),{0x31,0x11}},	//GOUT1  FW_R
+						 
+	{LCM_SEND(2),{0x32,0x00}},	//GOUT2  BW_R
+						  
+	{LCM_SEND(2),{0x33,0xEE}},	//GOUT3  GPWR1_R
+						
+	{LCM_SEND(2),{0x34,0xFF}},	//GOUT4  GPWR2_R
+						
+	{LCM_SEND(2),{0x35,0xBB}},	//GOUT5  GCLK4_R
+						 
+	{LCM_SEND(2),{0x36,0xCA}},	//GOUT6  GCLK3_R
+						  
+	{LCM_SEND(2),{0x37,0xDD}},	//GOUT7  GCLK2_R
+						 
+	{LCM_SEND(2),{0x38,0xAC}},	//GOUT8  GCLK1_R
+						 
+	{LCM_SEND(2),{0x39,0x76}},	//GOUT9  GVST1_R   76
+						 
+	{LCM_SEND(2),{0x3A,0x67}},	//GOUT10 GVST2_R	67
+						
+	{LCM_SEND(2),{0x3B,0x22}},
+						
+	{LCM_SEND(2),{0x3C,0x22}},
+						
+	{LCM_SEND(2),{0x3D,0x22}},
+					   
+	{LCM_SEND(2),{0x3E,0x22}},
+						  
+	{LCM_SEND(2),{0x3F,0x22}},
+						 
+	{LCM_SEND(2),{0x40,0x22}},
+						   
+	{LCM_SEND(2),{0x52,0x10}},
+						 
+	{LCM_SEND(2),{0x53,0x10}},	
+
+	
+	//****************************************************************************//
+	//****************************** Page 7 Command ******************************//
+	//****************************************************************************//
+	{LCM_SEND(8), {6, 0,0xFF,0xFF,0x98,0x06,0x04,0x07}}, // Change to Page 7
+	
+	{LCM_SEND(2),{0x18,0x1D}},	// VREG1 VREG2 output
+					   
+	{LCM_SEND(2),{0x17,0x32}},	// 
+				
+
+					  
+	{LCM_SEND(2),{0x02,0x77}},	// 
+	
+	{LCM_SEND(2),{0xE1,0x79}},	// 
+	//****************************************************************************//
+	
+	{LCM_SEND(8), {6, 0,0xFF,0xFF,0x98,0x06,0x04,0x00}}, // Change to Page 0
+	
+	{LCM_SEND(2),{0x36,0x00}},	
+	
+						   
+	{LCM_SEND(1), {0x11}},
+	{LCM_SLEEP(120)},
+	
+	{LCM_SEND(1), {0x29}},
+	{LCM_SLEEP(20)},
+
+}; 
+
+static LCM_Force_Cmd_Code rd_prep_code[]={
+	{0x39, {LCM_SEND(8), {0x6, 0, 0xFF, 0xFF, 0x98, 0x06,0x04,0x01}}},
+	{0x37, {LCM_SEND(2), {0x3, 0}}},
+};
+
+static int32_t ili9806e_2_mipi_init(struct panel_spec *self)
+{
+	int32_t i;
+	LCM_Init_Code *init = init_data;
+	unsigned int tag;
+
+	mipi_set_cmd_mode_t mipi_set_cmd_mode = self->info.mipi->ops->mipi_set_cmd_mode;
+	mipi_gen_write_t mipi_gen_write = self->info.mipi->ops->mipi_gen_write;
+
+         mipi_set_lp_mode_t mipi_set_lp_mode = self->info.mipi->ops->mipi_set_lp_mode;
+         mipi_set_hs_mode_t mipi_set_hs_mode = self->info.mipi->ops->mipi_set_hs_mode;
+	mipi_eotp_set_t mipi_eotp_set = self->info.mipi->ops->mipi_eotp_set;
+	LCD_PRINT("lcd_ili9806e_2_init\n");
+
+	//mipi_set_cmd_mode();
+
+	mdelay(5);
+	mipi_set_lp_mode();
+	//mipi_eotp_set(1,0);
+	for(i = 0; i < ARRAY_SIZE(init_data); i++){
+		tag = (init->tag >>24);
+		if(tag & LCM_TAG_SEND){
+			mipi_gen_write(init->data, (init->tag & LCM_TAG_MASK));
+			udelay(20);
+		}else if(tag & LCM_TAG_SLEEP){
+			mdelay((init->tag & LCM_TAG_MASK));
+		}
+		init++;
+	}
+
+	mdelay(5);
+	mipi_set_hs_mode();
+	return 0;
+}
+
+static uint32_t ili9806e_2_readid(struct panel_spec *self)
+{
+        /*Jessica TODO: need read id*/
+        int32_t i = 0;
+        uint32_t j =0;         
+        LCM_Force_Cmd_Code * rd_prepare = rd_prep_code;
+        uint8_t read_data[3] = {0};
+        int32_t read_rtn = 0;
+        unsigned int tag = 0;
+		int lcd_id  = 1;
+		
+        mipi_set_cmd_mode_t mipi_set_cmd_mode = self->info.mipi->ops->mipi_set_cmd_mode;
+        mipi_force_write_t mipi_force_write = self->info.mipi->ops->mipi_force_write;
+        mipi_force_read_t mipi_force_read = self->info.mipi->ops->mipi_force_read;
+        mipi_set_lp_mode_t mipi_set_lp_mode = self->info.mipi->ops->mipi_set_lp_mode;
+        mipi_set_hs_mode_t mipi_set_hs_mode = self->info.mipi->ops->mipi_set_hs_mode;
+        mipi_eotp_set_t mipi_eotp_set = self->info.mipi->ops->mipi_eotp_set;
+
+
+	printk("lcd_ili9806e_2_mipi_hlt read id!\n");
+	mipi_set_lp_mode();
+
+	//mipi_set_cmd_mode();
+	for(j = 0; j < 4; j++){
+		rd_prepare = rd_prep_code;
+		for(i = 0; i < ARRAY_SIZE(rd_prep_code); i++){
+			tag = (rd_prepare->real_cmd_code.tag >> 24);
+			if(tag & LCM_TAG_SEND){
+				mipi_force_write(rd_prepare->datatype, rd_prepare->real_cmd_code.data, (rd_prepare->real_cmd_code.tag & LCM_TAG_MASK));
+			}else if(tag & LCM_TAG_SLEEP){
+				mdelay((rd_prepare->real_cmd_code.tag & LCM_TAG_MASK));
+			}
+			rd_prepare++;
+		}
+		read_rtn = mipi_force_read(0x00, 1,(uint8_t *)&read_data[0]);
+		read_rtn = mipi_force_read(0x01, 1,(uint8_t *)&read_data[1]);
+		read_rtn = mipi_force_read(0x02, 1,(uint8_t *)&read_data[2]);
+		sprd_gpio_request(NULL, 123);   
+		sprd_gpio_direction_input(NULL, 123);
+		lcd_id = sprd_gpio_get(NULL, 123);		
+		
+		printk("lk lcd_ili9806e_mipi  read id 0x00 value is 0x%x, 0x%x, 0x%x,lcd id pin = %d!\n", read_data[0], read_data[1], read_data[2],lcd_id);
+
+		if((0x98 == read_data[0])&&(0x06 == read_data[1]) && (0 == lcd_id)){
+
+			printk("lk lcd_ili9806e_2_mipi_hlt check id hsd success!\n");
+			return 0x980604;
+		}
+	}
+
+	mdelay(5);
+	mipi_set_hs_mode();
+	return 0;
+}
+
+static struct panel_operations lcd_ili9806e_2_mipi_operations = {
+	.panel_init = ili9806e_2_mipi_init,
+	.panel_readid = ili9806e_2_readid,
+};
+
+static struct timing_rgb lcd_ili9806e_2_mipi_timing = {
+	.hfp = 80,/* unit: pixel */
+	.hbp = 80,
+	.hsync = 10, 
+	.vfp = 20, /*unit: line*/
+	.vbp = 16,
+	.vsync = 4,
+};
+
+static struct info_mipi lcd_ili9806e_2_mipi_info = {
+	.work_mode  = SPRDFB_MIPI_MODE_VIDEO,
+	.video_bus_width = 24, /*18,16*/
+	.lan_number = 2,
+	.phy_feq = 500*1000,
+	.h_sync_pol = SPRDFB_POLARITY_POS,
+	.v_sync_pol = SPRDFB_POLARITY_POS,
+	.de_pol = SPRDFB_POLARITY_POS,
+	.te_pol = SPRDFB_POLARITY_POS,
+	.color_mode_pol = SPRDFB_POLARITY_NEG,
+	.shut_down_pol = SPRDFB_POLARITY_NEG,
+	.timing = &lcd_ili9806e_2_mipi_timing,
+	.ops = NULL,
+};
+
+struct panel_spec lcd_ili9806e_2_mipi_hsd_spec = {
+	//.cap = PANEL_CAP_NOT_TEAR_SYNC,
+	.width = 480,
+	.height = 854,
+	.fps = 60,
+	.type = LCD_MODE_DSI,
+	.direction = LCD_DIRECT_NORMAL,
+	.info = {
+		.mipi = &lcd_ili9806e_2_mipi_info
+	},
+	.ops = &lcd_ili9806e_2_mipi_operations,
+};
+
+
Index: u-boot64/drivers/video/sprdfb/lcd/lcd_ili9806e_2_mipi_huashi.c
===================================================================
--- u-boot64/drivers/video/sprdfb/lcd/lcd_ili9806e_2_mipi_huashi.c	(revision 0)
+++ u-boot64/drivers/video/sprdfb/lcd/lcd_ili9806e_2_mipi_huashi.c	(revision 166570)
@@ -0,0 +1,450 @@
+/* drivers/video/sprdfb/lcd_ili9806e_2_mipi.c
+ *
+ * Support for ili9806e_2 mipi LCD device
+ *
+ * Copyright (C) 2010 Spreadtrum
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#include "../sprdfb_chip_common.h"
+#include "../sprdfb.h"
+#include "../sprdfb_panel.h"
+
+#define printk printf
+
+//#define  LCD_DEBUG
+#ifdef LCD_DEBUG
+#define LCD_PRINT printk
+#else
+#define LCD_PRINT(...)
+#endif
+
+#define MAX_DATA   48
+
+typedef struct LCM_Init_Code_tag {
+	unsigned int tag;
+	unsigned char data[MAX_DATA];
+}LCM_Init_Code;
+
+typedef struct LCM_force_cmd_code_tag{
+	unsigned int datatype;
+	LCM_Init_Code real_cmd_code;
+}LCM_Force_Cmd_Code;
+
+#define LCM_TAG_SHIFT 24
+#define LCM_TAG_MASK  ((1 << 24) -1)
+#define LCM_SEND(len) ((1 << LCM_TAG_SHIFT)| len)
+#define LCM_SLEEP(ms) ((2 << LCM_TAG_SHIFT)| ms)
+//#define ARRAY_SIZE(array) ( sizeof(array) / sizeof(array[0]))
+
+#define LCM_TAG_SEND  (1<< 0)
+#define LCM_TAG_SLEEP (1 << 1)
+
+static LCM_Init_Code init_data[] = {
+//huashi TN
+//****************************************************************************//
+//****************************** Page 1 Command ******************************//
+//****************************************************************************//
+{LCM_SEND(8), {6, 0,0xFF,0xFF,0x98,0x06,0x04,0x01}},// Change to Page 1
+
+{LCM_SEND(2),{0x08,0x10}},                 // output SDA
+                    
+{LCM_SEND(2),{0x21,0x01}},                 // DE = 1 Active
+                 
+{LCM_SEND(2),{0x30,0x01}},                 // 480 X 854
+                   
+{LCM_SEND(2),{0x31,0x02}},                 // Inversion
+                
+{LCM_SEND(2),{0x40,0x10}},                // BT  
+                 
+{LCM_SEND(2),{0x41,0x33}},                 // DVDDH DVDDL clamp 
+               
+{LCM_SEND(2),{0x42,0x02}},                 // VGH/VGL 
+                 
+{LCM_SEND(2),{0x43,0x09}},                 // VGH_CLAMP 0FF ;
+                 
+{LCM_SEND(2),{0x44,0x07}},                 // VGL_CLAMP OFF ; 
+                  
+{LCM_SEND(2),{0x45,0x16}},                 // VGL_REG  -10V 
+                
+{LCM_SEND(2),{0x50,0x78}},                   //VGMP
+                   
+{LCM_SEND(2),{0x51,0x78}},                  //VGMN
+                
+{LCM_SEND(2),{0x52,0x00}},                   //Flicker
+                 
+{LCM_SEND(2),{0x53,0x4F}},                   //Flicker  41
+                  
+{LCM_SEND(2),{0x60,0x07}},                 // SDTI
+                
+{LCM_SEND(2),{0x61,0x00}},                // CRTI
+                
+{LCM_SEND(2),{0x62,0x08}},                 // EQTI
+                   
+{LCM_SEND(2),{0x63,0x00}},                // PCTI
+
+//++++++++++++++++++ Gamma Setting ++++++++++++++++++//
+
+{LCM_SEND(2),{0xA0,0x00}},  // Gamma 0 
+                 
+{LCM_SEND(2),{0xA1,0x0A}},  // Gamma 4 
+                   
+{LCM_SEND(2),{0xA2,0x16}},  // Gamma 8
+                   
+{LCM_SEND(2),{0xA3,0x0E}},  // Gamma 16
+                     
+{LCM_SEND(2),{0xA4,0x07}},  // Gamma 24
+                
+{LCM_SEND(2),{0xA5,0x19}},  // Gamma 52
+                   
+{LCM_SEND(2),{0xA6,0x08}},  // Gamma 80
+                  
+{LCM_SEND(2),{0xA7,0x06}}, // Gamma 108
+                    
+{LCM_SEND(2),{0xA8,0x02}},  // Gamma 147
+                   
+{LCM_SEND(2),{0xA9,0x09}},  // Gamma 175
+             
+{LCM_SEND(2),{0xAA,0x05}},  // Gamma 203
+             
+{LCM_SEND(2),{0xAB,0x05}},  // Gamma 231
+                 
+{LCM_SEND(2),{0xAC,0x0A}},  // Gamma 239
+                 
+{LCM_SEND(2),{0xAD,0x33}},  // Gamma 247
+               
+{LCM_SEND(2),{0xAE,0x2D}},  // Gamma 251
+                  
+{LCM_SEND(2),{0xAF,0x00}},  // Gamma 255
+
+///==============Nagitive
+{LCM_SEND(2),{0xC0,0x00}},  // Gamma 0 
+             
+{LCM_SEND(2),{0xC1,0x06}},  // Gamma 4
+                 
+{LCM_SEND(2),{0xC2,0x0F}},  // Gamma 8
+                
+{LCM_SEND(2),{0xC3,0x11}},  // Gamma 16
+                
+{LCM_SEND(2),{0xC4,0x0A}},  // Gamma 24
+                 
+{LCM_SEND(2),{0xC5,0x13}},  // Gamma 52
+                
+{LCM_SEND(2),{0xC6,0x0A}},  // Gamma 80
+                  
+{LCM_SEND(2),{0xC7,0x08}},  // Gamma 108
+                   
+{LCM_SEND(2),{0xC8,0x04}},  // Gamma 147
+                  
+{LCM_SEND(2),{0xC9,0x08}},  // Gamma 175
+                
+{LCM_SEND(2),{0xCA,0x09}},  // Gamma 203
+                  
+{LCM_SEND(2),{0xCB,0x03}},  // Gamma 231
+                  
+{LCM_SEND(2),{0xCC,0x0B}},  // Gamma 239
+                  
+{LCM_SEND(2),{0xCD,0x25}},  // Gamma 247
+                   
+{LCM_SEND(2),{0xCE,0x20}},  // Gamma 251
+      
+{LCM_SEND(2),{0xCF,0x09}},  // Gamma 255
+
+
+
+
+//+++++++++++++++++++++++++++++++++++++++++++++++++++//
+
+//****************************************************************************//
+//****************************** Page 6 Command ******************************//
+//****************************************************************************//
+{LCM_SEND(8), {6, 0,0xFF,0xFF,0x98,0x06,0x04,0x06}}, // Change to Page 6
+
+{LCM_SEND(2),{0x00,0x20}},
+                     
+{LCM_SEND(2),{0x01,0x0A}},
+                   
+{LCM_SEND(2),{0x02,0x00}},    
+                   
+{LCM_SEND(2),{0x03,0x00}},
+                   
+{LCM_SEND(2),{0x04,0x01}},
+                  
+{LCM_SEND(2),{0x05,0x01}},
+                 
+{LCM_SEND(2),{0x06,0x80}},    
+                  
+{LCM_SEND(2),{0x07,0x06}},
+                    
+{LCM_SEND(2),{0x08,0x04}},
+                  
+{LCM_SEND(2),{0x09,0x80}},    
+                   
+{LCM_SEND(2),{0x0A,0x00}},    
+                  
+{LCM_SEND(2),{0x0B,0x00}},    
+                  
+{LCM_SEND(2),{0x0C,0x01}},
+                   
+{LCM_SEND(2),{0x0D,0x01}},
+                    
+{LCM_SEND(2),{0x0E,0x00}},
+                    
+{LCM_SEND(2),{0x0F,0x00}},
+                    
+{LCM_SEND(2),{0x10,0xF0}},
+                     
+{LCM_SEND(2),{0x11,0xF4}},
+                    
+{LCM_SEND(2),{0x12,0x01}},
+                     
+{LCM_SEND(2),{0x13,0x00}},
+                  
+{LCM_SEND(2),{0x14,0x00}},
+                   
+{LCM_SEND(2),{0x15,0xC0}},
+                  
+{LCM_SEND(2),{0x16,0x08}},
+                  
+{LCM_SEND(2),{0x17,0x00}},
+                   
+{LCM_SEND(2),{0x18,0x00}},
+                    
+{LCM_SEND(2),{0x19,0x00}},
+                     
+{LCM_SEND(2),{0x1A,0x00}},
+                      
+{LCM_SEND(2),{0x1B,0x00}},
+                   
+{LCM_SEND(2),{0x1C,0x00}},
+                   
+{LCM_SEND(2),{0x1D,0x00}},
+
+{LCM_SEND(2),{0x20,0x01}},
+                   
+{LCM_SEND(2),{0x21,0x23}},
+                    
+{LCM_SEND(2),{0x22,0x45}},
+                  
+{LCM_SEND(2),{0x23,0x67}},
+                  
+{LCM_SEND(2),{0x24,0x01}},
+                       
+{LCM_SEND(2),{0x25,0x23}},
+                  
+{LCM_SEND(2),{0x26,0x45}},
+               
+{LCM_SEND(2),{0x27,0x67}},
+
+{LCM_SEND(2),{0x30,0x01}},
+                      
+{LCM_SEND(2),{0x31,0x11}},	//GOUT1  FW_R
+                     
+{LCM_SEND(2),{0x32,0x00}},	//GOUT2  BW_R
+                      
+{LCM_SEND(2),{0x33,0xEE}},	//GOUT3  GPWR1_R
+                    
+{LCM_SEND(2),{0x34,0xFF}},	//GOUT4  GPWR2_R
+                    
+{LCM_SEND(2),{0x35,0xBB}},	//GOUT5  GCLK4_R
+                     
+{LCM_SEND(2),{0x36,0xAA}},	//GOUT6  GCLK3_R
+                      
+{LCM_SEND(2),{0x37,0xDD}},	//GOUT7  GCLK2_R
+                     
+{LCM_SEND(2),{0x38,0xCC}},	//GOUT8  GCLK1_R
+                     
+{LCM_SEND(2),{0x39,0x76}},	//GOUT9  GVST1_R   76
+                     
+{LCM_SEND(2),{0x3A,0x67}},	//GOUT10 GVST2_R    67
+                    
+{LCM_SEND(2),{0x3B,0x22}},
+                    
+{LCM_SEND(2),{0x3C,0x22}},
+                    
+{LCM_SEND(2),{0x3D,0x22}},
+                   
+{LCM_SEND(2),{0x3E,0x22}},
+                      
+{LCM_SEND(2),{0x3F,0x22}},
+                     
+{LCM_SEND(2),{0x40,0x22}},
+                       
+{LCM_SEND(2),{0x52,0x10}},
+                     
+{LCM_SEND(2),{0x53,0x12}},
+
+
+//****************************************************************************//
+//****************************** Page 7 Command ******************************//
+//****************************************************************************//
+{LCM_SEND(8), {6, 0,0xFF,0xFF,0x98,0x06,0x04,0x07}}, // Change to Page 7
+
+{LCM_SEND(2),{0x18,0x1D}},  // VREG1 VREG2 output
+                   
+{LCM_SEND(2),{0x17,0x32}},  // 
+                    
+{LCM_SEND(2),{0x02,0x77}},  // 
+                  
+{LCM_SEND(2),{0x06,0x10}},  // 
+
+//****************************************************************************//
+
+{LCM_SEND(8), {6, 0,0xFF,0xFF,0x98,0x06,0x04,0x00}}, // Change to Page 0
+
+
+//{LCM_SEND(2),{0x36,0x00}},                 // Display on
+                       
+{LCM_SEND(1), {0x11}},
+{LCM_SLEEP(120)},
+
+{LCM_SEND(1), {0x29}},
+{LCM_SLEEP(10)},
+
+ }; 
+
+static LCM_Force_Cmd_Code rd_prep_code[]={
+	{0x39, {LCM_SEND(8), {0x6, 0, 0xFF, 0xFF, 0x98, 0x06,0x04,0x01}}},
+	{0x37, {LCM_SEND(2), {0x3, 0}}},
+};
+
+static int32_t ili9806e_2_mipi_init(struct panel_spec *self)
+{
+	int32_t i;
+	LCM_Init_Code *init = init_data;
+	unsigned int tag;
+
+	mipi_set_cmd_mode_t mipi_set_cmd_mode = self->info.mipi->ops->mipi_set_cmd_mode;
+	mipi_gen_write_t mipi_gen_write = self->info.mipi->ops->mipi_gen_write;
+
+         mipi_set_lp_mode_t mipi_set_lp_mode = self->info.mipi->ops->mipi_set_lp_mode;
+         mipi_set_hs_mode_t mipi_set_hs_mode = self->info.mipi->ops->mipi_set_hs_mode;
+	mipi_eotp_set_t mipi_eotp_set = self->info.mipi->ops->mipi_eotp_set;
+	LCD_PRINT("lcd_ili9806e_2_init\n");
+
+	//mipi_set_cmd_mode();
+
+	mdelay(5);
+	mipi_set_lp_mode();
+	//mipi_eotp_set(1,0);
+	for(i = 0; i < ARRAY_SIZE(init_data); i++){
+		tag = (init->tag >>24);
+		if(tag & LCM_TAG_SEND){
+			mipi_gen_write(init->data, (init->tag & LCM_TAG_MASK));
+			udelay(20);
+		}else if(tag & LCM_TAG_SLEEP){
+			mdelay((init->tag & LCM_TAG_MASK));
+		}
+		init++;
+	}
+
+	mdelay(5);
+	mipi_set_hs_mode();
+	return 0;
+}
+
+static uint32_t ili9806e_2_readid(struct panel_spec *self)
+{
+        /*Jessica TODO: need read id*/
+        int32_t i = 0;
+        uint32_t j =0;         
+        LCM_Force_Cmd_Code * rd_prepare = rd_prep_code;
+        uint8_t read_data[3] = {0};
+        int32_t read_rtn = 0;
+        unsigned int tag = 0;
+		int lcd_id = 0;
+        mipi_set_cmd_mode_t mipi_set_cmd_mode = self->info.mipi->ops->mipi_set_cmd_mode;
+        mipi_force_write_t mipi_force_write = self->info.mipi->ops->mipi_force_write;
+        mipi_force_read_t mipi_force_read = self->info.mipi->ops->mipi_force_read;
+        mipi_set_lp_mode_t mipi_set_lp_mode = self->info.mipi->ops->mipi_set_lp_mode;
+        mipi_set_hs_mode_t mipi_set_hs_mode = self->info.mipi->ops->mipi_set_hs_mode;
+        mipi_eotp_set_t mipi_eotp_set = self->info.mipi->ops->mipi_eotp_set;
+
+
+	printk("lcd_ili9806e_2_mipi_hlt read id!\n");
+	mipi_set_lp_mode();
+
+	//mipi_set_cmd_mode();
+	for(j = 0; j < 4; j++){
+		rd_prepare = rd_prep_code;
+		for(i = 0; i < ARRAY_SIZE(rd_prep_code); i++){
+			tag = (rd_prepare->real_cmd_code.tag >> 24);
+			if(tag & LCM_TAG_SEND){
+				mipi_force_write(rd_prepare->datatype, rd_prepare->real_cmd_code.data, (rd_prepare->real_cmd_code.tag & LCM_TAG_MASK));
+			}else if(tag & LCM_TAG_SLEEP){
+				mdelay((rd_prepare->real_cmd_code.tag & LCM_TAG_MASK));
+			}
+			rd_prepare++;
+		}
+		read_rtn = mipi_force_read(0x00, 1,(uint8_t *)&read_data[0]);
+		read_rtn = mipi_force_read(0x01, 1,(uint8_t *)&read_data[1]);
+		read_rtn = mipi_force_read(0x02, 1,(uint8_t *)&read_data[2]);
+		sprd_gpio_request(NULL, 123);   //
+		sprd_gpio_direction_input(NULL, 123);
+		lcd_id = sprd_gpio_get(NULL, 123);
+
+		printk("lk lcd_ili9806e_mipi  read id 0x00 value is 0x%x, 0x%x, 0x%x,lcd id pin:%d!\n", read_data[0], read_data[1], read_data[2],lcd_id);
+
+		if((0x98 == read_data[0])&&(0x06 == read_data[1]) && (0 != lcd_id)){
+
+			printk("lk lcd_ili9806e_2_mipi_hlt check id huashi success!\n");
+			return 0x980603;
+		}
+	}
+
+	mdelay(5);
+	mipi_set_hs_mode();
+	return 0;
+}
+
+static struct panel_operations lcd_ili9806e_2_mipi_operations = {
+	.panel_init = ili9806e_2_mipi_init,
+	.panel_readid = ili9806e_2_readid,
+};
+
+static struct timing_rgb lcd_ili9806e_2_mipi_timing = {
+	.hfp = 80,/* unit: pixel */
+	.hbp = 80,
+	.hsync = 10, 
+	.vfp = 20, /*unit: line*/
+	.vbp = 16,
+	.vsync = 4,
+};
+
+static struct info_mipi lcd_ili9806e_2_mipi_info = {
+	.work_mode  = SPRDFB_MIPI_MODE_VIDEO,
+	.video_bus_width = 24, /*18,16*/
+	.lan_number = 2,
+	.phy_feq = 500*1000,
+	.h_sync_pol = SPRDFB_POLARITY_POS,
+	.v_sync_pol = SPRDFB_POLARITY_POS,
+	.de_pol = SPRDFB_POLARITY_POS,
+	.te_pol = SPRDFB_POLARITY_POS,
+	.color_mode_pol = SPRDFB_POLARITY_NEG,
+	.shut_down_pol = SPRDFB_POLARITY_NEG,
+	.timing = &lcd_ili9806e_2_mipi_timing,
+	.ops = NULL,
+};
+
+struct panel_spec lcd_ili9806e_2_mipi_huashi_spec = {
+	//.cap = PANEL_CAP_NOT_TEAR_SYNC,
+	.width = 480,
+	.height = 854,
+	.fps = 60,
+	.type = LCD_MODE_DSI,
+	.direction = LCD_DIRECT_NORMAL,
+	.info = {
+		.mipi = &lcd_ili9806e_2_mipi_info
+	},
+	.ops = &lcd_ili9806e_2_mipi_operations,
+};
+
+
