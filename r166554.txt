Index: vendor/sprd/modules/libcamera/hal3/SprdCamera3Setting.cpp
===================================================================
--- vendor/sprd/modules/libcamera/hal3/SprdCamera3Setting.cpp	(revision 166553)
+++ vendor/sprd/modules/libcamera/hal3/SprdCamera3Setting.cpp	(revision 166554)
@@ -43,6 +43,8 @@
 
 namespace sprdcamera {
 
+
+#define CONFIG_FRONT_FLASH_SUPPORT
 /**********************Macro Define**********************/
 #define CAMERA3MAXFACE 10
 
@@ -1941,6 +1943,8 @@
 		s_setting[cameraId].flash_InfoInfo.available = 0;
 #endif
 	}
+	
+	s_setting[cameraId].flash_InfoInfo.available = 1;
 
 	if (s_setting[cameraId].flash_InfoInfo.available) {
 		memcpy(s_setting[cameraId].controlInfo.ae_available_modes, camera3_default_info.common.availableAeModes, sizeof(camera3_default_info.common.availableAeModes));
@@ -3777,6 +3781,8 @@
 #else
 		s_setting[mCameraId].flashInfo.state = ANDROID_FLASH_STATE_UNAVAILABLE;
 #endif
+		s_setting[mCameraId].flashInfo.state = ANDROID_FLASH_STATE_READY;
+
 	} else {
 		s_setting[mCameraId].flashInfo.state = ANDROID_FLASH_STATE_UNAVAILABLE;
 		}
Index: vendor/sprd/modules/libcamera/hal3/SprdCamera3Flash.cpp
===================================================================
--- vendor/sprd/modules/libcamera/hal3/SprdCamera3Flash.cpp	(revision 166553)
+++ vendor/sprd/modules/libcamera/hal3/SprdCamera3Flash.cpp	(revision 166554)
@@ -110,7 +110,8 @@
 	ssize_t wr_ret;
 
 	LOGI("open flash driver interface");
-	if (camera_id == 0) {
+	//if(camera_id == 0) 
+	{
 		const char* const flashInterface = "/sys/class/flash_test/flash_test/flash_value";
 		int fd = open(flashInterface, O_WRONLY);
 		/* open sysfs file parition */
@@ -118,7 +119,25 @@
 			LOGE("Failed to open: flash_light_interface, %s", flashInterface);
 			return -EINVAL;
 		}
-		if (mode) {
+		if(mode){
+			m_flashOn=SPRD_FLASH_STATUS_ON;
+			if(camera_id){
+				wr_ret = write(fd,SPRD_FRONTFLASH_CMD_ON,7);
+			}else{				
+				wr_ret = write(fd,SPRD_FLASH_CMD_ON,4);					
+			}
+		}else{	
+			m_flashOn=SPRD_FLASH_STATUS_OFF;
+			if(camera_id){
+				
+				wr_ret = write(fd,SPRD_FRONTFLASH_CMD_OFF,7);
+			}else{
+				wr_ret = write(fd,SPRD_FLASH_CMD_OFF,4);
+			}
+
+		}
+/*
+		if(mode) {
 			LOGV("SPRD_FLASH_STATUS_ON");
 			m_flashOn=SPRD_FLASH_STATUS_ON;
 			wr_ret = write(fd,SPRD_FLASH_CMD_ON,4);
@@ -127,15 +146,18 @@
 			m_flashOn=SPRD_FLASH_STATUS_OFF;
 			wr_ret = write(fd,SPRD_FLASH_CMD_OFF,4);
 		}
-		if (-1 == wr_ret) {
+*/
+		if (-1 == wr_ret){
 			LOGE("WRITE FAILED \n");
 			retVal = -EINVAL;
 		}
 		close(fd);
-	} else {
+	}
+/*lse {
 		ALOGE("There is no flash present for camera_id = %d", camera_id);
 		return -EINVAL;
 	}
+*/
 	LOGV("Close file");
 	return retVal;
 }
Index: vendor/sprd/modules/libcamera/hal3/SprdCamera3OEMIf.cpp
===================================================================
--- vendor/sprd/modules/libcamera/hal3/SprdCamera3OEMIf.cpp	(revision 166553)
+++ vendor/sprd/modules/libcamera/hal3/SprdCamera3OEMIf.cpp	(revision 166554)
@@ -4636,7 +4636,8 @@
 		break;
 
 	case ANDROID_CONTROL_AE_MODE:
-		if (mCameraId == 0 || mCameraId == 1) {
+		//if (mCameraId == 0 || mCameraId == 1) 
+		{
 			int8_t drvAeMode;
 			mSetting->androidAeModeToDrvAeMode(controlInfo.ae_mode, &drvAeMode);
 
@@ -4666,7 +4667,8 @@
 		break;
 
 	case ANDROID_FLASH_MODE:
-		if (mCameraId == 0 || mCameraId == 1) {
+		//if (mCameraId == 0 || mCameraId == 1) 
+		{
 			int8_t flashMode;
 			FLASH_Tag flashInfo;
 			mSetting->getFLASHTag(&flashInfo);
Index: vendor/sprd/modules/libcamera/hal3/SprdCamera3Flash.h
===================================================================
--- vendor/sprd/modules/libcamera/hal3/SprdCamera3Flash.h	(revision 166553)
+++ vendor/sprd/modules/libcamera/hal3/SprdCamera3Flash.h	(revision 166554)
@@ -34,9 +34,10 @@
 
 #include <hardware/camera_common.h>
 
-#define SPRD_FLASH_CMD_OFF	"0x00"
-#define SPRD_FLASH_CMD_ON 	"0x01"
-
+#define SPRD_FLASH_CMD_OFF      "0x00"
+#define SPRD_FLASH_CMD_ON       "0x01"
+#define SPRD_FRONTFLASH_CMD_OFF      "0x10000"
+#define SPRD_FRONTFLASH_CMD_ON       "0x10011"
 enum flash_status {
 	SPRD_FLASH_STATUS_OFF,
 	SPRD_FLASH_STATUS_ON,
