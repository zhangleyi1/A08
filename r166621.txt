Index: frameworks/base/services/core/java/com/android/server/policy/PhoneWindowManager.java
===================================================================
--- frameworks/base/services/core/java/com/android/server/policy/PhoneWindowManager.java	(revision 166620)
+++ frameworks/base/services/core/java/com/android/server/policy/PhoneWindowManager.java	(revision 166621)
@@ -182,7 +182,7 @@
     static boolean DEBUG_WAKEUP = true;
     static final boolean SHOW_STARTING_ANIMATIONS = true;
     static final boolean SHOW_PROCESSES_ON_ALT_MENU = false;
-
+    private boolean mOpenRecentAppFlag;
     // Whether to allow dock apps with METADATA_DOCK_HOME to temporarily take over the Home key.
     // No longer recommended for desk docks;
     static final boolean ENABLE_DESK_DOCK_HOME_CAPTURE = false;
@@ -3214,6 +3214,12 @@
             // Hijack modified menu keys for debugging features
             final int chordBug = KeyEvent.META_SHIFT_ON;
 
+            if (!down) {
+                cancelPreloadRecentApps();
+                mOpenRecentAppFlag = false;
+                return 0;
+            }
+
             if (down && repeatCount == 0) {
                 if (mEnableShiftMenuBugReports && (metaState & chordBug) == chordBug) {
                     Intent intent = new Intent(Intent.ACTION_BUG_REPORT);
@@ -3236,7 +3242,15 @@
                             res, Settings.Global.SHOW_PROCESSES, shown ? 0 : 1);
                     return -1;
                 }
+                preloadRecentApps();
+            } else if (down && repeatCount != 0) {
+                if (!mOpenRecentAppFlag) {
+                    preloadRecentApps();
+                    toggleRecentApps();
+                    mOpenRecentAppFlag = true;
+                }
             }
+            return -1;
         } else if (keyCode == KeyEvent.KEYCODE_SEARCH) {
             if (down) {
                 if (repeatCount == 0) {
@@ -3381,7 +3395,14 @@
                 dispatchDirectAudioEvent(event);
                 return -1;
             }
-        }else if (keyCode == KeyEvent.KEYCODE_BACK) {
+        } else if (keyCode == KeyEvent.KEYCODE_BACK) {
+            if (down && repeatCount != 0) {
+                Intent taskManagerIntent = new Intent();
+                taskManagerIntent.setClassName("com.android.settings", "com.android.settings.TaskManager");
+                startActivityAsUser(taskManagerIntent, UserHandle.CURRENT_OR_SELF);
+                return -1;
+            }
+
             if(mKeyguardDelegate != null && !mKeyguardDelegate.isShowing()) {
                 PMFactory.getInstance().createExtraPowerManager(mContext).scheduleButtonLightTimeout(SystemClock.uptimeMillis());
             }
Index: packages/apps/Settings/AndroidManifest.xml
===================================================================
--- packages/apps/Settings/AndroidManifest.xml	(revision 166620)
+++ packages/apps/Settings/AndroidManifest.xml	(revision 166621)
@@ -6,6 +6,7 @@
 
     <original-package android:name="com.android.settings" />
 
+    <uses-permission android:name="android.permission.KILL_BACKGROUND_PROCESSES" />
     <uses-permission android:name="android.permission.WRITE_MEDIA_STORAGE" />
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
@@ -3364,5 +3365,12 @@
                 android:taskAffinity="com.android.settings"
                 android:parentActivityName="Settings">
         </activity>
+
+        <activity android:name="com.android.settings.TaskManager"
+            android:theme="@android:style/Theme.Holo.NoActionBar">
+            <intent-filter>
+                <category android:name="android.intent.category.DEFAULT" />
+            </intent-filter>
+        </activity>
     </application>
 </manifest>
Index: packages/apps/Settings/src/com/android/settings/TaskManager.java
===================================================================
--- packages/apps/Settings/src/com/android/settings/TaskManager.java	(revision 0)
+++ packages/apps/Settings/src/com/android/settings/TaskManager.java	(revision 166621)
@@ -0,0 +1,87 @@
+package com.android.settings;
+
+import android.app.Activity;
+import android.app.ActivityManager;
+import android.content.Context;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.os.Bundle;
+import android.text.format.Formatter;
+import android.util.Log;
+import android.widget.Adapter;
+import android.widget.ListAdapter;
+import android.widget.ListView;
+import android.widget.TextView;
+import com.android.settings.R;
+import java.util.ArrayList;
+import java.util.List;
+
+public class TaskManager extends Activity implements RunningAppAdapter.Callback {
+
+    private String TAG = "taskmanager";
+    private ListView mListView;
+    private Adapter mAdapter;
+    private TextView memoryInfo;
+    private List<AppInfo> mList = new ArrayList<AppInfo>();
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+        initView();
+        getAllApps(this);
+        mListView = (ListView)findViewById(R.id.lv);
+        mAdapter = new RunningAppAdapter(mList, TaskManager.this);
+        mListView.setAdapter((ListAdapter) mAdapter);
+    }
+
+    public void getAllApps(Context context) {
+        List<PackageInfo> apps = new ArrayList<PackageInfo>();
+        PackageManager pManager = context.getPackageManager();
+        List<PackageInfo> paklist = pManager.getInstalledPackages(PackageManager.GET_ACTIVITIES);
+
+        ActivityManager mActivityManager = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);
+
+        List<ActivityManager.RunningTaskInfo> appList3 = mActivityManager
+                .getRunningTasks(1000);
+        for (ActivityManager.RunningTaskInfo running : appList3) {
+            for (int i = 0; i < paklist.size(); i++) {
+                PackageInfo pak = (PackageInfo) paklist.get(i);
+
+                if (pak.applicationInfo.packageName.equals(running.baseActivity.getPackageName())) {
+                    AppInfo app = new AppInfo();
+                    app.appName = pManager.getApplicationLabel(pak.applicationInfo).toString();
+                    app.packageName = pak.applicationInfo.packageName;
+                    app.mIcon = pManager.getApplicationIcon(pak.applicationInfo);
+                    mList.add(app);
+                }
+            }
+        }
+
+        List<ActivityManager.RunningAppProcessInfo> appList1 = mActivityManager.getRunningAppProcesses();
+        for (int i = 0; i < mList.size(); i++) {
+            for (ActivityManager.RunningAppProcessInfo running : appList1) {
+                if (mList.get(i).packageName.equals(running.processName)) {
+                    mList.get(i).pid = running.pid;
+                }
+            }
+        }
+    }
+
+    private void initView() {
+        memoryInfo = (TextView)findViewById(R.id.memoryInfo);
+        refresh();
+    }
+
+    @Override
+    public void refresh() {
+        ActivityManager activityManager = (ActivityManager) getSystemService(ACTIVITY_SERVICE);
+        ActivityManager.MemoryInfo info = new ActivityManager.MemoryInfo();
+        activityManager.getMemoryInfo(info);
+
+        long availMemory = info.availMem;
+        long totalMemory = info.totalMem;
+        memoryInfo.setText(getString(R.string.memoryInfoText, Formatter.formatFileSize(this, availMemory) ,  Formatter.formatFileSize(this, totalMemory)));
+    }
+}
+
Index: packages/apps/Settings/src/com/android/settings/AppInfo.java
===================================================================
--- packages/apps/Settings/src/com/android/settings/AppInfo.java	(revision 0)
+++ packages/apps/Settings/src/com/android/settings/AppInfo.java	(revision 166621)
@@ -0,0 +1,14 @@
+package com.android.settings;
+
+import android.graphics.drawable.Drawable;
+import android.graphics.drawable.Icon;
+
+/**
+ * Created by Administrator on 2017/3/28.
+ */
+public class AppInfo {
+    String appName;
+    String packageName;
+    Drawable mIcon;
+    int pid;
+}
Index: packages/apps/Settings/src/com/android/settings/RunningAppAdapter.java
===================================================================
--- packages/apps/Settings/src/com/android/settings/RunningAppAdapter.java	(revision 0)
+++ packages/apps/Settings/src/com/android/settings/RunningAppAdapter.java	(revision 166621)
@@ -0,0 +1,104 @@
+package com.android.settings;
+
+import android.app.ActivityManager;
+import android.content.Context;
+import android.os.Debug;
+import android.text.format.Formatter;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.BaseAdapter;
+import android.widget.Button;
+import android.widget.ImageView;
+import android.widget.TextView;
+import com.android.settings.R;
+import java.util.List;
+
+/**
+ * Created by Administrator on 2017/3/28.
+ */
+public class RunningAppAdapter extends BaseAdapter {
+
+    private Context mContext;
+    private List<AppInfo> mList;
+    private LayoutInflater mLayout;
+    private ActivityManager mActivityManger;
+    private Callback mListener;
+
+    public interface Callback {
+        public void refresh();
+    }
+
+    public RunningAppAdapter(List<AppInfo> list,  Callback listener) {
+        mContext = (Context) listener;
+        mList = list;
+        mLayout = LayoutInflater.from(mContext);
+        mActivityManger = (ActivityManager) mContext.getSystemService(Context.ACTIVITY_SERVICE);
+        mListener = listener;
+    }
+
+    @Override
+    public int getCount() {
+        return mList.size();
+    }
+
+    @Override
+    public Object getItem(int position) {
+        return mList.get(position);
+    }
+
+    @Override
+    public long getItemId(int position) {
+        return position;
+    }
+
+    @Override
+    public View getView(int position, View convertView, ViewGroup parent) {
+        View view = null;
+        ViewHolder holder = null;
+
+        if (convertView == null || convertView.getTag() == null) {
+            view = mLayout.inflate(R.layout.layout_app_item, null);
+            holder = new ViewHolder(view);
+            view.setTag(holder);
+        } else {
+            view = convertView ;
+            holder = (ViewHolder) convertView.getTag() ;
+        }
+
+        final AppInfo appInfo = (AppInfo) getItem(position);
+        holder.appIcon.setImageDrawable(appInfo.mIcon);
+        holder.appName.setText(appInfo.appName);
+        int[] pids = new int[] {appInfo.pid};
+        ActivityManager mActivityManager = (ActivityManager) mContext.getSystemService(Context.ACTIVITY_SERVICE);
+        Debug.MemoryInfo[] memoryInfo = mActivityManager.getProcessMemoryInfo(pids);
+        int memorySize = memoryInfo[0].dalvikPrivateDirty;
+        holder.memory.setText(Formatter.formatFileSize(mContext, memorySize) );
+        holder.clearBtn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                mActivityManger.killBackgroundProcesses(appInfo.packageName);
+                mList.remove(position);
+                notifyDataSetChanged();
+                mListener.refresh();
+            }
+        });
+        return view;
+    }
+
+    class ViewHolder {
+        ImageView appIcon;
+        TextView appName;
+        TextView memory;
+        TextView clearBtn;
+
+        public ViewHolder(View view) {
+            this.appIcon = (ImageView) view.findViewById(R.id.iv);
+            this.appName = (TextView) view.findViewById(R.id.name_tv);
+            this.memory = (TextView) view.findViewById(R.id.momory_tv);
+            this.clearBtn = (Button) view.findViewById(R.id.clear_btn);
+        }
+    }
+
+}
Index: packages/apps/Settings/res/values/strings.xml
===================================================================
--- packages/apps/Settings/res/values/strings.xml	(revision 166620)
+++ packages/apps/Settings/res/values/strings.xml	(revision 166621)
@@ -7668,7 +7668,7 @@
     <string name="cmupdate_settings_title">System Update</string>
     <!-- SPRD 614538-->
     <string name="current_label_phone">Phone</string>
-
-    <!-- SPRD:645023-->
-    <string name="public_volumes_permission">The guest or new user has no permission to access</string>
+    <string name="memoryInfoText"><![CDATA[Free/Total Memory: [%1$s]/[%2$s]]]></string>
+    <string name="clear_btn_text">Stop</string>
+    <string name="app_title">Task Manager</string>
 </resources>
Index: packages/apps/Settings/res/values/dimens.xml
===================================================================
--- packages/apps/Settings/res/values/dimens.xml	(revision 166620)
+++ packages/apps/Settings/res/values/dimens.xml	(revision 166621)
@@ -307,4 +307,7 @@
     <!-- SPRD: Bug 624802 @{ -->
     <dimen name="pattern_view_full_size">460px</dimen>
     <dimen name="pattern_view_multiple_size">300px</dimen>
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+    <dimen name="task_manager_title_size">18sp</dimen>
 </resources>
Index: packages/apps/Settings/res/layout/activity_main.xml
===================================================================
--- packages/apps/Settings/res/layout/activity_main.xml	(revision 0)
+++ packages/apps/Settings/res/layout/activity_main.xml	(revision 166621)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent" >
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:id="@+id/titleLl">
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:textSize="@dimen/task_manager_title_size"
+            android:text="@string/app_title"/>
+    </LinearLayout>
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/titleLl"
+        android:id="@+id/memoryInfo"
+        android:text="@string/memoryInfoText"/>
+
+    <ListView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@id/memoryInfo"
+        android:id="@+id/lv">
+    </ListView>
+</RelativeLayout>
Index: packages/apps/Settings/res/layout/layout_app_item.xml
===================================================================
--- packages/apps/Settings/res/layout/layout_app_item.xml	(revision 0)
+++ packages/apps/Settings/res/layout/layout_app_item.xml	(revision 166621)
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="horizontal" android:layout_width="match_parent"
+    android:layout_height="50dp">
+
+    <ImageView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/iv"/>
+
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:orientation="vertical">
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:gravity="center_vertical"
+            android:id="@+id/name_tv" />
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:gravity="center_vertical"
+            android:id="@+id/momory_tv" />
+
+    </LinearLayout>
+
+    <Space
+        android:layout_height="wrap_content"
+        android:layout_width="wrap_content"
+        android:layout_weight="1"/>
+
+    <Button
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="right"
+        android:text="@string/clear_btn_text"
+        android:id="@+id/clear_btn"/>
+</LinearLayout>
\ No newline at end of file
