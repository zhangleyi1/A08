Index: u-boot64/common/lcd.c
===================================================================
--- u-boot64/common/lcd.c	(revision 169075)
+++ u-boot64/common/lcd.c	(revision 169076)
@@ -1077,6 +1077,23 @@
 }
 #endif
 
+#define SZ_1M                           0x00100000
+void disp_warning_logo(void)
+{
+	int ret;
+	size_t size = SZ_1M;
+	u8 addr[SZ_1M];
+	u8 *s;
+
+	ret = read_warninglogoimg(addr, size);
+	if (ret) {
+		debugf("%s: failed to read warninglogo partition\n");
+		return;
+	}
+	bmp_display(addr, 0, 0);
+	
+}
+
 static void *lcd_logo(void)
 {
 #ifdef CONFIG_SPLASH_SCREEN
Index: u-boot64/common/loader/loader_emmc.c
===================================================================
--- u-boot64/common/loader/loader_emmc.c	(revision 169075)
+++ u-boot64/common/loader/loader_emmc.c	(revision 169076)
@@ -291,7 +291,28 @@
 	}
 	return 0;
 }
+int read_warninglogoimg(char *bmp_img, size_t size)
+{
+	block_dev_desc_t *p_block_dev = NULL;
+	disk_partition_t info;
 
+	p_block_dev = get_dev("mmc", 0);
+	if (NULL == p_block_dev)
+		return -1;
+
+	if (!get_partition_info_by_name(p_block_dev, "warninglogo", &info)) {//logo
+		if (FALSE == Emmc_Read(PARTITION_USER, info.start, size / EMMC_SECTOR_SIZE, bmp_img)) {
+			debugf("function: %s nand read error\n");
+			return -1;
+		}
+		debugf("read warninglogo partition OK!\n");
+	} else {
+		debugf("no warninglogo partition , no need to display\n");
+		return -1;
+	}
+	return 0;
+}
+
 #ifdef CONFIG_SECBOOT
 uint8_t sec_spl[SEC_SPL_LEN];
 
