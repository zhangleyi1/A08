Index: kernel/arch/arm/mach-sc/Kconfig
===================================================================
--- kernel/arch/arm/mach-sc/Kconfig	(revision 182224)
+++ kernel/arch/arm/mach-sc/Kconfig	(revision 182225)
@@ -730,6 +730,39 @@
 	help
 	SPX35L board based on SP9832A_2H11_VOLTE board.
 
+config MACH_SP9832A_2H12_VOLTE
+	bool "sp9832a_2h12_volte Board"
+	depends on ARCH_SC
+	depends on ARCH_SCX35
+	depends on ARCH_SCX35L
+	default n
+	select COMMON_CLK if OF
+	select CLKSRC_OF if OF
+	help
+	SPX35L board based on SP9832A_2H12_VOLTE board.
+
+config MACH_SP9832A_7C10_VOLTE
+	bool "sp9832a_7c10_volte Board"
+	depends on ARCH_SC
+	depends on ARCH_SCX35
+	depends on ARCH_SCX35L
+	default n
+	select COMMON_CLK if OF
+	select CLKSRC_OF if OF
+	help
+	SPX35L board based on SP9832A_7C10_VOLTE board.
+
+config MACH_SP9832A_7C20_VOLTE
+	bool "sp9832a_7c20_volte Board"
+	depends on ARCH_SC
+	depends on ARCH_SCX35
+	depends on ARCH_SCX35L
+	default n
+	select COMMON_CLK if OF
+	select CLKSRC_OF if OF
+	help
+	SPX35L board based on SP9832A_7C20_VOLTE board.
+
 config MACH_SP9832A2_VOL_13CAM
 	bool "sp9832a2_vol_13cam Board"
 	depends on ARCH_SC
Index: kernel/arch/arm/mach-sc/board-sp9832a_7c20_volte.c
===================================================================
--- kernel/arch/arm/mach-sc/board-sp9832a_7c20_volte.c	(revision 0)
+++ kernel/arch/arm/mach-sc/board-sp9832a_7c20_volte.c	(revision 182225)
@@ -0,0 +1,366 @@
+/*
+ * Copyright (C) 2014 Spreadtrum Communications Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/delay.h>
+#include <linux/export.h>
+#include <linux/irqchip/arm-gic.h>
+#include <linux/input.h>
+
+#include <asm/io.h>
+#include <asm/setup.h>
+#include <asm/mach/time.h>
+#include <asm/mach/arch.h>
+#include <asm/mach/map.h>
+#include <asm/mach-types.h>
+#include <asm/hardware/cache-l2x0.h>
+#include <asm/localtimer.h>
+#include <linux/of_platform.h>
+#include <linux/of.h>
+#include <linux/of_address.h>
+#include <linux/clocksource.h>
+#include <linux/clk-provider.h>
+#include <soc/sprd/hardware.h>
+#include <linux/i2c.h>
+#if (defined(CONFIG_INPUT_LIS3DH_I2C) || defined(CONFIG_INPUT_LIS3DH_I2C_MODULE))
+#include <linux/i2c/lis3dh.h>
+#endif
+#if (defined(CONFIG_INPUT_LTR558_I2C) || defined(CONFIG_INPUT_LTR558_I2C_MODULE))
+#include <linux/i2c/ltr_558als.h>
+#endif
+#if (defined(CONFIG_TOUCHSCREEN_MSG2138) || defined(CONFIG_TOUCHSCREEN_MSG2138_MODULE))
+#include <linux/i2c/msg2138.h>
+#endif
+#include <linux/spi/spi.h>
+#include <linux/gpio.h>
+#include <soc/sprd/board.h>
+#include <soc/sprd/serial_sprd.h>
+#include <soc/sprd/adi.h>
+#include <soc/sprd/adc.h>
+#include <soc/sprd/pinmap.h>
+#include <linux/irq.h>
+#include <linux/input/matrix_keypad.h>
+
+#include <soc/sprd/sci.h>
+#include <soc/sprd/kpd.h>
+#include <soc/sprd/sci_glb_regs.h>
+
+#if (defined(CONFIG_INV_MPU_IIO) || defined(CONFIG_INV_MPU_IIO_MODULE))
+#include <linux/mpu.h>
+#endif
+#if (defined(CONFIG_SENSORS_AK8975) || defined(CONFIG_SENSORS_AK8975_MODULE))
+#include <linux/akm8975.h>
+#endif
+
+
+/* IRQ's for the multi sensor board */
+#define MPUIRQ_GPIO 212
+#include <linux/regulator/consumer.h>
+#include <soc/sprd/regulator.h>
+#if (defined(CONFIG_TOUCHSCREEN_FOCALTECH) || defined(CONFIG_TOUCHSCREEN_FOCALTECH_MODULE))
+#include <linux/i2c/focaltech.h>
+#endif
+
+#if (defined(CONFIG_KEYBOARD_SC) || defined (CONFIG_KEYBOARD_SC_MODULE))
+#include <linux/input/matrix_keypad.h>
+#include <soc/sprd/kpd.h>
+#endif
+#if (defined(CONFIG_KEYBOARD_GPIO) || defined (CONFIG_KEYBOARD_GPIO_MODULE))
+#include <linux/gpio_keys.h>
+#endif
+#if (defined(CONFIG_KEYBOARD_SPRD_EIC) || defined(CONFIG_KEYBOARD_SPRD_EIC_MODULE))
+#include <linux/sprd_eic_keys.h>
+#endif
+#if (defined(CONFIG_BACKLIGHT_SPRD_PWM) || defined(CONFIG_BACKLIGHT_SPRD_PWM_MODULE))
+#include <linux/sprd_pwm_bl.h>
+#endif
+#if (defined(CONFIG_INPUT_HEADSET_SPRD_SC2723) || defined(CONFIG_INPUT_HEADSET_SPRD_SC2723_MODULE))
+#include <linux/headset_sprd_sc2723.h>
+#endif
+extern void bluesleep_setup_uart_port(struct platform_device *uart_dev);
+extern void __init sci_reserve(void);
+extern void __init sci_map_io(void);
+extern void __init sci_init_irq(void);
+extern void __init sci_timer_init(void);
+extern int __init sci_clock_init(void);
+extern int __init sci_regulator_init(void);
+
+int __init __clock_init_early(void)
+{
+#if !defined(CONFIG_ARCH_SCX15)
+	pr_info("ahb ctl0 %08x, ctl2 %0x8 glb aon apb0 %08x aon apb1 %08x clk_en %08x\n",
+		sci_glb_raw_read(REG_AP_AHB_AHB_EB),
+		sci_glb_raw_read(REG_AP_AHB_AHB_RST),
+		sci_glb_raw_read(REG_AON_APB_APB_EB0),
+		sci_glb_raw_read(REG_AON_APB_APB_EB1),
+		sci_glb_raw_read(REG_AON_CLK_PUB_AHB_CFG));
+#endif
+
+	sci_glb_clr(REG_AP_AHB_AHB_EB,
+		BIT_BUSMON2_EB		|
+		BIT_BUSMON1_EB		|
+		BIT_BUSMON0_EB		|
+		BIT_SPINLOCK_EB		|
+#if !defined(CONFIG_ARCH_SCX35L)
+		BIT_GPS_EB		|
+#endif
+		BIT_EMMC_EB		|
+		BIT_SDIO2_EB		|
+		BIT_SDIO1_EB		|
+		BIT_SDIO0_EB		|
+		BIT_DRM_EB		|
+		BIT_NFC_EB		|
+		BIT_DMA_EB		|
+		BIT_USB_EB		|
+#if !defined(CONFIG_ARCH_SCX35L)
+		BIT_GSP_EB		|
+		BIT_DISPC1_EB		|
+#endif
+		0);
+	sci_glb_clr(REG_AP_APB_APB_EB,
+		BIT_INTC3_EB		|
+		BIT_INTC2_EB		|
+		BIT_INTC1_EB		|
+		BIT_IIS1_EB		|
+		BIT_UART2_EB		|
+		BIT_UART0_EB		|
+		BIT_SPI1_EB		|
+		BIT_SPI0_EB		|
+		BIT_IIS0_EB		|
+		BIT_I2C0_EB		|
+		BIT_SPI2_EB		|
+		BIT_UART3_EB		|
+		0);
+	sci_glb_clr(REG_AON_APB_APB_RTC_EB,
+		BIT_KPD_RTC_EB		|
+		BIT_KPD_EB		|
+		BIT_EFUSE_EB		|
+		0);
+
+	sci_glb_clr(REG_AON_APB_APB_EB0,
+		BIT_AUDIF_EB			|
+		BIT_VBC_EB			|
+		BIT_PWM3_EB			|
+		BIT_PWM1_EB			|
+		0);
+	sci_glb_clr(REG_AON_APB_APB_EB1,
+		BIT_AUX1_EB			|
+		BIT_AUX0_EB			|
+		0);
+	sci_glb_set(REG_AON_APB_APB_EB1, BIT_CODEC_EB | 0);
+	printk("sc clock module early init ok\n");
+	return 0;
+}
+
+static inline int __sci_get_chip_id(void)
+{
+	return __raw_readl(CHIP_ID_LOW_REG);
+}
+
+const struct of_device_id of_sprd_default_bus_match_table[] = {
+	{ .compatible = "simple-bus", },
+	{ .compatible = "sprd,adi-bus", },
+	{}
+};
+
+static struct of_dev_auxdata of_sprd_default_bus_lookup[] = {
+	{ .compatible = "sprd,sprd_backlight", .name = "sprd_backlight" },
+#if (defined(CONFIG_BACKLIGHT_SPRD_PWM) || defined(CONFIG_BACKLIGHT_SPRD_PWM_MODULE))
+	{ .compatible = "sprd,sprd_pwm_bl",  .name = "sprd_pwm_bl" },
+#endif
+#if (defined(CONFIG_KEYBOARD_SC) || defined(CONFIG_KEYBOARD_SC_MODULE))
+	{.compatible = "sprd,sci-keypad", .name = "sci-keypad" },
+#endif
+#if (defined(CONFIG_KEYBOARD_GPIO) || defined(CONFIG_KEYBOARD_GPIO_MODULE))
+	{.compatible = "gpio-keys", .name = "gpio-keys" },
+#endif
+#if (defined(CONFIG_KEYBOARD_SPRD_EIC) || defined(CONFIG_KEYBOARD_SPRD_EIC_MODULE))
+	{.compatible = "sprd,sprd-eic-keys", .name = "sprd-eic-keys" },
+#endif
+#if (defined(CONFIG_INPUT_HEADSET_SPRD_SC2723) || defined(CONFIG_INPUT_HEADSET_SPRD_SC2723_MODULE))
+	{ .compatible = "sprd,headset_sprd_sc2723",  .name = "headset_sprd_sc2723" },
+#endif
+	{}
+};
+
+struct iotable_sprd io_addr_sprd;
+EXPORT_SYMBOL(io_addr_sprd);
+
+int iotable_build()
+{
+	struct device_node *np;
+	struct resource res;
+
+#define ADD_SPRD_DEVICE(compat, id)			\
+do {							\
+	np = of_find_compatible_node(NULL, NULL, compat);\
+	if (of_can_translate_address(np)) {		\
+		of_address_to_resource(np, 0, &res);	\
+		io_addr_sprd.id.paddr = res.start;	\
+		io_addr_sprd.id.length =		\
+			resource_size(&res);		\
+		io_addr_sprd.id.vaddr =			\
+		ioremap_nocache(res.start, io_addr_sprd.id.length);\
+		pr_debug("sprd io map: phys=%08x virt=%08x size=%08x\n", \
+	io_addr_sprd.id.paddr, io_addr_sprd.id.vaddr, io_addr_sprd.id.length);\
+	}						\
+} while (0)
+#define ADD_SPRD_DEVICE_BY_NAME(name, id)		\
+do {							\
+	np = of_find_node_by_name(NULL, name);		\
+	if (of_can_translate_address(np)) {		\
+		of_address_to_resource(np, 0, &res);	\
+		io_addr_sprd.id.paddr = res.start;	\
+		io_addr_sprd.id.length =		\
+			resource_size(&res);		\
+		io_addr_sprd.id.vaddr =			\
+		ioremap_nocache(res.start, io_addr_sprd.id.length);\
+		pr_debug("sprd io map: phys=%16lx virt=%16lx size=%16lx\n", \
+	io_addr_sprd.id.paddr, io_addr_sprd.id.vaddr, io_addr_sprd.id.length);\
+	}						\
+} while (0)
+	ADD_SPRD_DEVICE("sprd,ahb", AHB);
+	ADD_SPRD_DEVICE("sprd,aonapb", AONAPB);
+	ADD_SPRD_DEVICE("sprd,aonckg", AONCKG);
+	ADD_SPRD_DEVICE("sprd,apbreg", APBREG);
+	ADD_SPRD_DEVICE("sprd,core", CORE);
+	ADD_SPRD_DEVICE("sprd,mmahb", MMAHB);
+	ADD_SPRD_DEVICE("sprd,pmu", PMU);
+	ADD_SPRD_DEVICE("sprd,mmckg", MMCKG);
+	ADD_SPRD_DEVICE("sprd,gpuapb", GPUAPB);
+	ADD_SPRD_DEVICE("sprd,apbckg", APBCKG);
+	ADD_SPRD_DEVICE("sprd,gpuckg", GPUCKG);
+	ADD_SPRD_DEVICE("sprd,int", INT);
+	ADD_SPRD_DEVICE("sprd,intc0", INTC0);
+	ADD_SPRD_DEVICE("sprd,intc1", INTC1);
+	ADD_SPRD_DEVICE("sprd,intc2", INTC2);
+	ADD_SPRD_DEVICE("sprd,intc3", INTC3);
+	ADD_SPRD_DEVICE("sprd,uidefuse", UIDEFUSE);
+	ADD_SPRD_DEVICE("sprd,isp", ISP);
+	ADD_SPRD_DEVICE("sprd,ca7wdg", CA7WDG);
+	ADD_SPRD_DEVICE("sprd,csi2", CSI2);
+	ADD_SPRD_DEVICE("sprd,d-eic-gpio", EIC);
+	ADD_SPRD_DEVICE("sprd,wdg", WDG);
+	ADD_SPRD_DEVICE("sprd,ipi", IPI);
+	ADD_SPRD_DEVICE("sprd,dcam", DCAM);
+	ADD_SPRD_DEVICE("sprd,syscnt", SYSCNT);
+	ADD_SPRD_DEVICE("sprd,dma0", DMA0);
+	ADD_SPRD_DEVICE("sprd,pub", PUB);
+	ADD_SPRD_DEVICE("sprd,pin", PIN);
+	ADD_SPRD_DEVICE("sprd,d-gpio-gpio", GPIO);
+	ADD_SPRD_DEVICE("sprd,codecahb", CODECAHB);
+	ADD_SPRD_DEVICE_BY_NAME("hwspinlock0", HWSPINLOCK0);
+	ADD_SPRD_DEVICE_BY_NAME("hwspinlock1", HWSPINLOCK1);
+
+	return 0;
+}
+
+static void __init sc8830_init_machine(void)
+{
+	printk("sci get chip id = 0x%x\n", __sci_get_chip_id());
+
+	sci_adc_init();
+#ifndef CONFIG_MACH_SPX35LFPGA
+	sci_regulator_init();
+#endif
+	of_sprd_default_bus_lookup[0].phys_addr = 0x20300000;
+	of_sprd_default_bus_lookup[1].phys_addr = 0x20400000;
+	of_sprd_default_bus_lookup[2].phys_addr = 0x20500000;
+	of_sprd_default_bus_lookup[3].phys_addr = 0x20600000;
+	of_platform_populate(NULL, of_sprd_default_bus_match_table, of_sprd_default_bus_lookup, NULL);
+}
+
+#ifdef CONFIG_OF
+const struct of_device_id of_sprd_late_bus_match_table[] = {
+	{ .compatible = "sprd,sound", },
+	{}
+};
+#endif
+
+static void __init sc8830_init_late(void)
+{
+	of_platform_populate(of_find_node_by_path("/sprd-audio-devices"),
+				of_sprd_late_bus_match_table, NULL, NULL);
+}
+
+
+extern void __init sci_enable_timer_early(void);
+extern void __init sc_init_chip_id(void);
+
+void __init sprd_init_before_irq(void)
+{
+	iotable_build();
+	sc_init_chip_id();
+	/* earlier init request than irq and timer */
+	__clock_init_early();
+	/*ipi reg init for sipc*/
+	sci_glb_set(REG_AON_APB_APB_EB0, BIT_IPI_EB);
+}
+
+static void __init sc8830_pmu_init(void)
+{
+	__raw_writel(__raw_readl(REG_PMU_APB_PD_MM_TOP_CFG)
+		& ~(BIT_PD_MM_TOP_FORCE_SHUTDOWN),
+		REG_PMU_APB_PD_MM_TOP_CFG);
+
+	while (__raw_readl(REG_PMU_APB_PWR_STATUS0_DBG) & 0xf0000000) {};
+
+	__raw_writel(__raw_readl(REG_PMU_APB_PD_GPU_TOP_CFG)
+		& ~(BIT_PD_GPU_TOP_FORCE_SHUTDOWN),
+		REG_PMU_APB_PD_GPU_TOP_CFG);
+
+	while (__raw_readl(REG_PMU_APB_PWR_STATUS0_DBG) & 0x0f000000) {};
+
+	__raw_writel(__raw_readl(REG_AON_APB_APB_EB0) | BIT_MM_EB |
+		BIT_GPU_EB, REG_AON_APB_APB_EB0);
+	__raw_writel(__raw_readl(REG_MM_AHB_AHB_EB) | BIT_MM_CKG_EB,
+		REG_MM_AHB_AHB_EB);
+	__raw_writel(__raw_readl(REG_MM_AHB_GEN_CKG_CFG)
+		| BIT_MM_MTX_AXI_CKG_EN | BIT_MM_AXI_CKG_EN,
+		REG_MM_AHB_GEN_CKG_CFG);
+	__raw_writel(__raw_readl(REG_MM_CLK_MM_AHB_CFG) | 0x3,
+		REG_MM_CLK_MM_AHB_CFG);
+	__raw_writel(__raw_readl(REG_AON_APB_APB_EB1) | BIT_CODEC_EB, REG_AON_APB_APB_EB1);
+}
+
+static void sprd_init_time(void)
+{
+	if (of_have_populated_dt()) {
+		sc8830_pmu_init();
+		of_clk_init(NULL);
+		clocksource_of_init();
+	} else {
+		sci_clock_init();
+		sci_enable_timer_early();
+		sci_timer_init();
+	}
+}
+static const char *sprd_boards_compat[] __initdata = {
+	"sprd,sp8835eb",
+	NULL,
+};
+extern struct smp_operations sprd_smp_ops;
+
+MACHINE_START(SCPHONE, "sc9832a")
+	.smp		= smp_ops(sprd_smp_ops),
+	.reserve	= sci_reserve,
+	.map_io		= sci_map_io,
+	.init_irq	= sci_init_irq,
+	.init_time	= sprd_init_time,
+	.init_machine	= sc8830_init_machine,
+	.init_late	= sc8830_init_late,
+	.dt_compat	= sprd_boards_compat,
+MACHINE_END
+
Index: kernel/arch/arm/mach-sc/board-sp9832a_2h12_volte.c
===================================================================
--- kernel/arch/arm/mach-sc/board-sp9832a_2h12_volte.c	(revision 0)
+++ kernel/arch/arm/mach-sc/board-sp9832a_2h12_volte.c	(revision 182225)
@@ -0,0 +1,366 @@
+/*
+ * Copyright (C) 2014 Spreadtrum Communications Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/delay.h>
+#include <linux/export.h>
+#include <linux/irqchip/arm-gic.h>
+#include <linux/input.h>
+
+#include <asm/io.h>
+#include <asm/setup.h>
+#include <asm/mach/time.h>
+#include <asm/mach/arch.h>
+#include <asm/mach/map.h>
+#include <asm/mach-types.h>
+#include <asm/hardware/cache-l2x0.h>
+#include <asm/localtimer.h>
+#include <linux/of_platform.h>
+#include <linux/of.h>
+#include <linux/of_address.h>
+#include <linux/clocksource.h>
+#include <linux/clk-provider.h>
+#include <soc/sprd/hardware.h>
+#include <linux/i2c.h>
+#if (defined(CONFIG_INPUT_LIS3DH_I2C) || defined(CONFIG_INPUT_LIS3DH_I2C_MODULE))
+#include <linux/i2c/lis3dh.h>
+#endif
+#if (defined(CONFIG_INPUT_LTR558_I2C) || defined(CONFIG_INPUT_LTR558_I2C_MODULE))
+#include <linux/i2c/ltr_558als.h>
+#endif
+#if (defined(CONFIG_TOUCHSCREEN_MSG2138) || defined(CONFIG_TOUCHSCREEN_MSG2138_MODULE))
+#include <linux/i2c/msg2138.h>
+#endif
+#include <linux/spi/spi.h>
+#include <linux/gpio.h>
+#include <soc/sprd/board.h>
+#include <soc/sprd/serial_sprd.h>
+#include <soc/sprd/adi.h>
+#include <soc/sprd/adc.h>
+#include <soc/sprd/pinmap.h>
+#include <linux/irq.h>
+#include <linux/input/matrix_keypad.h>
+
+#include <soc/sprd/sci.h>
+#include <soc/sprd/kpd.h>
+#include <soc/sprd/sci_glb_regs.h>
+
+#if (defined(CONFIG_INV_MPU_IIO) || defined(CONFIG_INV_MPU_IIO_MODULE))
+#include <linux/mpu.h>
+#endif
+#if (defined(CONFIG_SENSORS_AK8975) || defined(CONFIG_SENSORS_AK8975_MODULE))
+#include <linux/akm8975.h>
+#endif
+
+
+/* IRQ's for the multi sensor board */
+#define MPUIRQ_GPIO 212
+#include <linux/regulator/consumer.h>
+#include <soc/sprd/regulator.h>
+#if (defined(CONFIG_TOUCHSCREEN_FOCALTECH) || defined(CONFIG_TOUCHSCREEN_FOCALTECH_MODULE))
+#include <linux/i2c/focaltech.h>
+#endif
+
+#if (defined(CONFIG_KEYBOARD_SC) || defined (CONFIG_KEYBOARD_SC_MODULE))
+#include <linux/input/matrix_keypad.h>
+#include <soc/sprd/kpd.h>
+#endif
+#if (defined(CONFIG_KEYBOARD_GPIO) || defined (CONFIG_KEYBOARD_GPIO_MODULE))
+#include <linux/gpio_keys.h>
+#endif
+#if (defined(CONFIG_KEYBOARD_SPRD_EIC) || defined(CONFIG_KEYBOARD_SPRD_EIC_MODULE))
+#include <linux/sprd_eic_keys.h>
+#endif
+#if (defined(CONFIG_BACKLIGHT_SPRD_PWM) || defined(CONFIG_BACKLIGHT_SPRD_PWM_MODULE))
+#include <linux/sprd_pwm_bl.h>
+#endif
+#if (defined(CONFIG_INPUT_HEADSET_SPRD_SC2723) || defined(CONFIG_INPUT_HEADSET_SPRD_SC2723_MODULE))
+#include <linux/headset_sprd_sc2723.h>
+#endif
+extern void bluesleep_setup_uart_port(struct platform_device *uart_dev);
+extern void __init sci_reserve(void);
+extern void __init sci_map_io(void);
+extern void __init sci_init_irq(void);
+extern void __init sci_timer_init(void);
+extern int __init sci_clock_init(void);
+extern int __init sci_regulator_init(void);
+
+int __init __clock_init_early(void)
+{
+#if !defined(CONFIG_ARCH_SCX15)
+	pr_info("ahb ctl0 %08x, ctl2 %0x8 glb aon apb0 %08x aon apb1 %08x clk_en %08x\n",
+		sci_glb_raw_read(REG_AP_AHB_AHB_EB),
+		sci_glb_raw_read(REG_AP_AHB_AHB_RST),
+		sci_glb_raw_read(REG_AON_APB_APB_EB0),
+		sci_glb_raw_read(REG_AON_APB_APB_EB1),
+		sci_glb_raw_read(REG_AON_CLK_PUB_AHB_CFG));
+#endif
+
+	sci_glb_clr(REG_AP_AHB_AHB_EB,
+		BIT_BUSMON2_EB		|
+		BIT_BUSMON1_EB		|
+		BIT_BUSMON0_EB		|
+		BIT_SPINLOCK_EB		|
+#if !defined(CONFIG_ARCH_SCX35L)
+		BIT_GPS_EB		|
+#endif
+		BIT_EMMC_EB		|
+		BIT_SDIO2_EB		|
+		BIT_SDIO1_EB		|
+		BIT_SDIO0_EB		|
+		BIT_DRM_EB		|
+		BIT_NFC_EB		|
+		BIT_DMA_EB		|
+		BIT_USB_EB		|
+#if !defined(CONFIG_ARCH_SCX35L)
+		BIT_GSP_EB		|
+		BIT_DISPC1_EB		|
+#endif
+		0);
+	sci_glb_clr(REG_AP_APB_APB_EB,
+		BIT_INTC3_EB		|
+		BIT_INTC2_EB		|
+		BIT_INTC1_EB		|
+		BIT_IIS1_EB		|
+		BIT_UART2_EB		|
+		BIT_UART0_EB		|
+		BIT_SPI1_EB		|
+		BIT_SPI0_EB		|
+		BIT_IIS0_EB		|
+		BIT_I2C0_EB		|
+		BIT_SPI2_EB		|
+		BIT_UART3_EB		|
+		0);
+	sci_glb_clr(REG_AON_APB_APB_RTC_EB,
+		BIT_KPD_RTC_EB		|
+		BIT_KPD_EB		|
+		BIT_EFUSE_EB		|
+		0);
+
+	sci_glb_clr(REG_AON_APB_APB_EB0,
+		BIT_AUDIF_EB			|
+		BIT_VBC_EB			|
+		BIT_PWM3_EB			|
+		BIT_PWM1_EB			|
+		0);
+	sci_glb_clr(REG_AON_APB_APB_EB1,
+		BIT_AUX1_EB			|
+		BIT_AUX0_EB			|
+		0);
+	sci_glb_set(REG_AON_APB_APB_EB1, BIT_CODEC_EB | 0);
+	printk("sc clock module early init ok\n");
+	return 0;
+}
+
+static inline int __sci_get_chip_id(void)
+{
+	return __raw_readl(CHIP_ID_LOW_REG);
+}
+
+const struct of_device_id of_sprd_default_bus_match_table[] = {
+	{ .compatible = "simple-bus", },
+	{ .compatible = "sprd,adi-bus", },
+	{}
+};
+
+static struct of_dev_auxdata of_sprd_default_bus_lookup[] = {
+	{ .compatible = "sprd,sprd_backlight", .name = "sprd_backlight" },
+#if (defined(CONFIG_BACKLIGHT_SPRD_PWM) || defined(CONFIG_BACKLIGHT_SPRD_PWM_MODULE))
+	{ .compatible = "sprd,sprd_pwm_bl",  .name = "sprd_pwm_bl" },
+#endif
+#if (defined(CONFIG_KEYBOARD_SC) || defined(CONFIG_KEYBOARD_SC_MODULE))
+	{.compatible = "sprd,sci-keypad", .name = "sci-keypad" },
+#endif
+#if (defined(CONFIG_KEYBOARD_GPIO) || defined(CONFIG_KEYBOARD_GPIO_MODULE))
+	{.compatible = "gpio-keys", .name = "gpio-keys" },
+#endif
+#if (defined(CONFIG_KEYBOARD_SPRD_EIC) || defined(CONFIG_KEYBOARD_SPRD_EIC_MODULE))
+	{.compatible = "sprd,sprd-eic-keys", .name = "sprd-eic-keys" },
+#endif
+#if (defined(CONFIG_INPUT_HEADSET_SPRD_SC2723) || defined(CONFIG_INPUT_HEADSET_SPRD_SC2723_MODULE))
+	{ .compatible = "sprd,headset_sprd_sc2723",  .name = "headset_sprd_sc2723" },
+#endif
+	{}
+};
+
+struct iotable_sprd io_addr_sprd;
+EXPORT_SYMBOL(io_addr_sprd);
+
+int iotable_build()
+{
+	struct device_node *np;
+	struct resource res;
+
+#define ADD_SPRD_DEVICE(compat, id)			\
+do {							\
+	np = of_find_compatible_node(NULL, NULL, compat);\
+	if (of_can_translate_address(np)) {		\
+		of_address_to_resource(np, 0, &res);	\
+		io_addr_sprd.id.paddr = res.start;	\
+		io_addr_sprd.id.length =		\
+			resource_size(&res);		\
+		io_addr_sprd.id.vaddr =			\
+		ioremap_nocache(res.start, io_addr_sprd.id.length);\
+		pr_debug("sprd io map: phys=%08x virt=%08x size=%08x\n", \
+	io_addr_sprd.id.paddr, io_addr_sprd.id.vaddr, io_addr_sprd.id.length);\
+	}						\
+} while (0)
+#define ADD_SPRD_DEVICE_BY_NAME(name, id)		\
+do {							\
+	np = of_find_node_by_name(NULL, name);		\
+	if (of_can_translate_address(np)) {		\
+		of_address_to_resource(np, 0, &res);	\
+		io_addr_sprd.id.paddr = res.start;	\
+		io_addr_sprd.id.length =		\
+			resource_size(&res);		\
+		io_addr_sprd.id.vaddr =			\
+		ioremap_nocache(res.start, io_addr_sprd.id.length);\
+		pr_debug("sprd io map: phys=%16lx virt=%16lx size=%16lx\n", \
+	io_addr_sprd.id.paddr, io_addr_sprd.id.vaddr, io_addr_sprd.id.length);\
+	}						\
+} while (0)
+	ADD_SPRD_DEVICE("sprd,ahb", AHB);
+	ADD_SPRD_DEVICE("sprd,aonapb", AONAPB);
+	ADD_SPRD_DEVICE("sprd,aonckg", AONCKG);
+	ADD_SPRD_DEVICE("sprd,apbreg", APBREG);
+	ADD_SPRD_DEVICE("sprd,core", CORE);
+	ADD_SPRD_DEVICE("sprd,mmahb", MMAHB);
+	ADD_SPRD_DEVICE("sprd,pmu", PMU);
+	ADD_SPRD_DEVICE("sprd,mmckg", MMCKG);
+	ADD_SPRD_DEVICE("sprd,gpuapb", GPUAPB);
+	ADD_SPRD_DEVICE("sprd,apbckg", APBCKG);
+	ADD_SPRD_DEVICE("sprd,gpuckg", GPUCKG);
+	ADD_SPRD_DEVICE("sprd,int", INT);
+	ADD_SPRD_DEVICE("sprd,intc0", INTC0);
+	ADD_SPRD_DEVICE("sprd,intc1", INTC1);
+	ADD_SPRD_DEVICE("sprd,intc2", INTC2);
+	ADD_SPRD_DEVICE("sprd,intc3", INTC3);
+	ADD_SPRD_DEVICE("sprd,uidefuse", UIDEFUSE);
+	ADD_SPRD_DEVICE("sprd,isp", ISP);
+	ADD_SPRD_DEVICE("sprd,ca7wdg", CA7WDG);
+	ADD_SPRD_DEVICE("sprd,csi2", CSI2);
+	ADD_SPRD_DEVICE("sprd,d-eic-gpio", EIC);
+	ADD_SPRD_DEVICE("sprd,wdg", WDG);
+	ADD_SPRD_DEVICE("sprd,ipi", IPI);
+	ADD_SPRD_DEVICE("sprd,dcam", DCAM);
+	ADD_SPRD_DEVICE("sprd,syscnt", SYSCNT);
+	ADD_SPRD_DEVICE("sprd,dma0", DMA0);
+	ADD_SPRD_DEVICE("sprd,pub", PUB);
+	ADD_SPRD_DEVICE("sprd,pin", PIN);
+	ADD_SPRD_DEVICE("sprd,d-gpio-gpio", GPIO);
+	ADD_SPRD_DEVICE("sprd,codecahb", CODECAHB);
+	ADD_SPRD_DEVICE_BY_NAME("hwspinlock0", HWSPINLOCK0);
+	ADD_SPRD_DEVICE_BY_NAME("hwspinlock1", HWSPINLOCK1);
+
+	return 0;
+}
+
+static void __init sc8830_init_machine(void)
+{
+	printk("sci get chip id = 0x%x\n", __sci_get_chip_id());
+
+	sci_adc_init();
+#ifndef CONFIG_MACH_SPX35LFPGA
+	sci_regulator_init();
+#endif
+	of_sprd_default_bus_lookup[0].phys_addr = 0x20300000;
+	of_sprd_default_bus_lookup[1].phys_addr = 0x20400000;
+	of_sprd_default_bus_lookup[2].phys_addr = 0x20500000;
+	of_sprd_default_bus_lookup[3].phys_addr = 0x20600000;
+	of_platform_populate(NULL, of_sprd_default_bus_match_table, of_sprd_default_bus_lookup, NULL);
+}
+
+#ifdef CONFIG_OF
+const struct of_device_id of_sprd_late_bus_match_table[] = {
+	{ .compatible = "sprd,sound", },
+	{}
+};
+#endif
+
+static void __init sc8830_init_late(void)
+{
+	of_platform_populate(of_find_node_by_path("/sprd-audio-devices"),
+				of_sprd_late_bus_match_table, NULL, NULL);
+}
+
+
+extern void __init sci_enable_timer_early(void);
+extern void __init sc_init_chip_id(void);
+
+void __init sprd_init_before_irq(void)
+{
+	iotable_build();
+	sc_init_chip_id();
+	/* earlier init request than irq and timer */
+	__clock_init_early();
+	/*ipi reg init for sipc*/
+	sci_glb_set(REG_AON_APB_APB_EB0, BIT_IPI_EB);
+}
+
+static void __init sc8830_pmu_init(void)
+{
+	__raw_writel(__raw_readl(REG_PMU_APB_PD_MM_TOP_CFG)
+		& ~(BIT_PD_MM_TOP_FORCE_SHUTDOWN),
+		REG_PMU_APB_PD_MM_TOP_CFG);
+
+	while (__raw_readl(REG_PMU_APB_PWR_STATUS0_DBG) & 0xf0000000) {};
+
+	__raw_writel(__raw_readl(REG_PMU_APB_PD_GPU_TOP_CFG)
+		& ~(BIT_PD_GPU_TOP_FORCE_SHUTDOWN),
+		REG_PMU_APB_PD_GPU_TOP_CFG);
+
+	while (__raw_readl(REG_PMU_APB_PWR_STATUS0_DBG) & 0x0f000000) {};
+
+	__raw_writel(__raw_readl(REG_AON_APB_APB_EB0) | BIT_MM_EB |
+		BIT_GPU_EB, REG_AON_APB_APB_EB0);
+	__raw_writel(__raw_readl(REG_MM_AHB_AHB_EB) | BIT_MM_CKG_EB,
+		REG_MM_AHB_AHB_EB);
+	__raw_writel(__raw_readl(REG_MM_AHB_GEN_CKG_CFG)
+		| BIT_MM_MTX_AXI_CKG_EN | BIT_MM_AXI_CKG_EN,
+		REG_MM_AHB_GEN_CKG_CFG);
+	__raw_writel(__raw_readl(REG_MM_CLK_MM_AHB_CFG) | 0x3,
+		REG_MM_CLK_MM_AHB_CFG);
+	__raw_writel(__raw_readl(REG_AON_APB_APB_EB1) | BIT_CODEC_EB, REG_AON_APB_APB_EB1);
+}
+
+static void sprd_init_time(void)
+{
+	if (of_have_populated_dt()) {
+		sc8830_pmu_init();
+		of_clk_init(NULL);
+		clocksource_of_init();
+	} else {
+		sci_clock_init();
+		sci_enable_timer_early();
+		sci_timer_init();
+	}
+}
+static const char *sprd_boards_compat[] __initdata = {
+	"sprd,sp8835eb",
+	NULL,
+};
+extern struct smp_operations sprd_smp_ops;
+
+MACHINE_START(SCPHONE, "sc9832a")
+	.smp		= smp_ops(sprd_smp_ops),
+	.reserve	= sci_reserve,
+	.map_io		= sci_map_io,
+	.init_irq	= sci_init_irq,
+	.init_time	= sprd_init_time,
+	.init_machine	= sc8830_init_machine,
+	.init_late	= sc8830_init_late,
+	.dt_compat	= sprd_boards_compat,
+MACHINE_END
+
Index: kernel/arch/arm/mach-sc/Makefile
===================================================================
--- kernel/arch/arm/mach-sc/Makefile	(revision 182224)
+++ kernel/arch/arm/mach-sc/Makefile	(revision 182225)
@@ -39,6 +39,9 @@
 obj-$(CONFIG_MACH_SP9830IEB_5M_H100) += board-sp9830ieb_5m_h100.o
 obj-$(CONFIG_MACH_SP9832A_2H11_4M) += board-sp9832a_2h11_4m.o
 obj-$(CONFIG_MACH_SP9832A_2H11_VOLTE) += board-sp9832a_2h11_volte.o
+obj-$(CONFIG_MACH_SP9832A_2H12_VOLTE) += board-sp9832a_2h12_volte.o
+obj-$(CONFIG_MACH_SP9832A_7C10_VOLTE) += board-sp9832a_7c10_volte.o
+obj-$(CONFIG_MACH_SP9832A_7C20_VOLTE) += board-sp9832a_7c20_volte.o
 obj-$(CONFIG_MACH_SP9832A2_VOL_13CAM) += board-sp9832a2_vol_13cam.o
 obj-$(CONFIG_MACH_SP9830I_J3LTE) += board-sp9830i_j3lte.o
 obj-$(CONFIG_MACH_SHARKLC_Z2LTE) += board-sharklc_z2lte.o
Index: kernel/arch/arm/mach-sc/board-sp9832a_7c10_volte.c
===================================================================
--- kernel/arch/arm/mach-sc/board-sp9832a_7c10_volte.c	(revision 0)
+++ kernel/arch/arm/mach-sc/board-sp9832a_7c10_volte.c	(revision 182225)
@@ -0,0 +1,366 @@
+/*
+ * Copyright (C) 2014 Spreadtrum Communications Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/delay.h>
+#include <linux/export.h>
+#include <linux/irqchip/arm-gic.h>
+#include <linux/input.h>
+
+#include <asm/io.h>
+#include <asm/setup.h>
+#include <asm/mach/time.h>
+#include <asm/mach/arch.h>
+#include <asm/mach/map.h>
+#include <asm/mach-types.h>
+#include <asm/hardware/cache-l2x0.h>
+#include <asm/localtimer.h>
+#include <linux/of_platform.h>
+#include <linux/of.h>
+#include <linux/of_address.h>
+#include <linux/clocksource.h>
+#include <linux/clk-provider.h>
+#include <soc/sprd/hardware.h>
+#include <linux/i2c.h>
+#if (defined(CONFIG_INPUT_LIS3DH_I2C) || defined(CONFIG_INPUT_LIS3DH_I2C_MODULE))
+#include <linux/i2c/lis3dh.h>
+#endif
+#if (defined(CONFIG_INPUT_LTR558_I2C) || defined(CONFIG_INPUT_LTR558_I2C_MODULE))
+#include <linux/i2c/ltr_558als.h>
+#endif
+#if (defined(CONFIG_TOUCHSCREEN_MSG2138) || defined(CONFIG_TOUCHSCREEN_MSG2138_MODULE))
+#include <linux/i2c/msg2138.h>
+#endif
+#include <linux/spi/spi.h>
+#include <linux/gpio.h>
+#include <soc/sprd/board.h>
+#include <soc/sprd/serial_sprd.h>
+#include <soc/sprd/adi.h>
+#include <soc/sprd/adc.h>
+#include <soc/sprd/pinmap.h>
+#include <linux/irq.h>
+#include <linux/input/matrix_keypad.h>
+
+#include <soc/sprd/sci.h>
+#include <soc/sprd/kpd.h>
+#include <soc/sprd/sci_glb_regs.h>
+
+#if (defined(CONFIG_INV_MPU_IIO) || defined(CONFIG_INV_MPU_IIO_MODULE))
+#include <linux/mpu.h>
+#endif
+#if (defined(CONFIG_SENSORS_AK8975) || defined(CONFIG_SENSORS_AK8975_MODULE))
+#include <linux/akm8975.h>
+#endif
+
+
+/* IRQ's for the multi sensor board */
+#define MPUIRQ_GPIO 212
+#include <linux/regulator/consumer.h>
+#include <soc/sprd/regulator.h>
+#if (defined(CONFIG_TOUCHSCREEN_FOCALTECH) || defined(CONFIG_TOUCHSCREEN_FOCALTECH_MODULE))
+#include <linux/i2c/focaltech.h>
+#endif
+
+#if (defined(CONFIG_KEYBOARD_SC) || defined (CONFIG_KEYBOARD_SC_MODULE))
+#include <linux/input/matrix_keypad.h>
+#include <soc/sprd/kpd.h>
+#endif
+#if (defined(CONFIG_KEYBOARD_GPIO) || defined (CONFIG_KEYBOARD_GPIO_MODULE))
+#include <linux/gpio_keys.h>
+#endif
+#if (defined(CONFIG_KEYBOARD_SPRD_EIC) || defined(CONFIG_KEYBOARD_SPRD_EIC_MODULE))
+#include <linux/sprd_eic_keys.h>
+#endif
+#if (defined(CONFIG_BACKLIGHT_SPRD_PWM) || defined(CONFIG_BACKLIGHT_SPRD_PWM_MODULE))
+#include <linux/sprd_pwm_bl.h>
+#endif
+#if (defined(CONFIG_INPUT_HEADSET_SPRD_SC2723) || defined(CONFIG_INPUT_HEADSET_SPRD_SC2723_MODULE))
+#include <linux/headset_sprd_sc2723.h>
+#endif
+extern void bluesleep_setup_uart_port(struct platform_device *uart_dev);
+extern void __init sci_reserve(void);
+extern void __init sci_map_io(void);
+extern void __init sci_init_irq(void);
+extern void __init sci_timer_init(void);
+extern int __init sci_clock_init(void);
+extern int __init sci_regulator_init(void);
+
+int __init __clock_init_early(void)
+{
+#if !defined(CONFIG_ARCH_SCX15)
+	pr_info("ahb ctl0 %08x, ctl2 %0x8 glb aon apb0 %08x aon apb1 %08x clk_en %08x\n",
+		sci_glb_raw_read(REG_AP_AHB_AHB_EB),
+		sci_glb_raw_read(REG_AP_AHB_AHB_RST),
+		sci_glb_raw_read(REG_AON_APB_APB_EB0),
+		sci_glb_raw_read(REG_AON_APB_APB_EB1),
+		sci_glb_raw_read(REG_AON_CLK_PUB_AHB_CFG));
+#endif
+
+	sci_glb_clr(REG_AP_AHB_AHB_EB,
+		BIT_BUSMON2_EB		|
+		BIT_BUSMON1_EB		|
+		BIT_BUSMON0_EB		|
+		BIT_SPINLOCK_EB		|
+#if !defined(CONFIG_ARCH_SCX35L)
+		BIT_GPS_EB		|
+#endif
+		BIT_EMMC_EB		|
+		BIT_SDIO2_EB		|
+		BIT_SDIO1_EB		|
+		BIT_SDIO0_EB		|
+		BIT_DRM_EB		|
+		BIT_NFC_EB		|
+		BIT_DMA_EB		|
+		BIT_USB_EB		|
+#if !defined(CONFIG_ARCH_SCX35L)
+		BIT_GSP_EB		|
+		BIT_DISPC1_EB		|
+#endif
+		0);
+	sci_glb_clr(REG_AP_APB_APB_EB,
+		BIT_INTC3_EB		|
+		BIT_INTC2_EB		|
+		BIT_INTC1_EB		|
+		BIT_IIS1_EB		|
+		BIT_UART2_EB		|
+		BIT_UART0_EB		|
+		BIT_SPI1_EB		|
+		BIT_SPI0_EB		|
+		BIT_IIS0_EB		|
+		BIT_I2C0_EB		|
+		BIT_SPI2_EB		|
+		BIT_UART3_EB		|
+		0);
+	sci_glb_clr(REG_AON_APB_APB_RTC_EB,
+		BIT_KPD_RTC_EB		|
+		BIT_KPD_EB		|
+		BIT_EFUSE_EB		|
+		0);
+
+	sci_glb_clr(REG_AON_APB_APB_EB0,
+		BIT_AUDIF_EB			|
+		BIT_VBC_EB			|
+		BIT_PWM3_EB			|
+		BIT_PWM1_EB			|
+		0);
+	sci_glb_clr(REG_AON_APB_APB_EB1,
+		BIT_AUX1_EB			|
+		BIT_AUX0_EB			|
+		0);
+	sci_glb_set(REG_AON_APB_APB_EB1, BIT_CODEC_EB | 0);
+	printk("sc clock module early init ok\n");
+	return 0;
+}
+
+static inline int __sci_get_chip_id(void)
+{
+	return __raw_readl(CHIP_ID_LOW_REG);
+}
+
+const struct of_device_id of_sprd_default_bus_match_table[] = {
+	{ .compatible = "simple-bus", },
+	{ .compatible = "sprd,adi-bus", },
+	{}
+};
+
+static struct of_dev_auxdata of_sprd_default_bus_lookup[] = {
+	{ .compatible = "sprd,sprd_backlight", .name = "sprd_backlight" },
+#if (defined(CONFIG_BACKLIGHT_SPRD_PWM) || defined(CONFIG_BACKLIGHT_SPRD_PWM_MODULE))
+	{ .compatible = "sprd,sprd_pwm_bl",  .name = "sprd_pwm_bl" },
+#endif
+#if (defined(CONFIG_KEYBOARD_SC) || defined(CONFIG_KEYBOARD_SC_MODULE))
+	{.compatible = "sprd,sci-keypad", .name = "sci-keypad" },
+#endif
+#if (defined(CONFIG_KEYBOARD_GPIO) || defined(CONFIG_KEYBOARD_GPIO_MODULE))
+	{.compatible = "gpio-keys", .name = "gpio-keys" },
+#endif
+#if (defined(CONFIG_KEYBOARD_SPRD_EIC) || defined(CONFIG_KEYBOARD_SPRD_EIC_MODULE))
+	{.compatible = "sprd,sprd-eic-keys", .name = "sprd-eic-keys" },
+#endif
+#if (defined(CONFIG_INPUT_HEADSET_SPRD_SC2723) || defined(CONFIG_INPUT_HEADSET_SPRD_SC2723_MODULE))
+	{ .compatible = "sprd,headset_sprd_sc2723",  .name = "headset_sprd_sc2723" },
+#endif
+	{}
+};
+
+struct iotable_sprd io_addr_sprd;
+EXPORT_SYMBOL(io_addr_sprd);
+
+int iotable_build()
+{
+	struct device_node *np;
+	struct resource res;
+
+#define ADD_SPRD_DEVICE(compat, id)			\
+do {							\
+	np = of_find_compatible_node(NULL, NULL, compat);\
+	if (of_can_translate_address(np)) {		\
+		of_address_to_resource(np, 0, &res);	\
+		io_addr_sprd.id.paddr = res.start;	\
+		io_addr_sprd.id.length =		\
+			resource_size(&res);		\
+		io_addr_sprd.id.vaddr =			\
+		ioremap_nocache(res.start, io_addr_sprd.id.length);\
+		pr_debug("sprd io map: phys=%08x virt=%08x size=%08x\n", \
+	io_addr_sprd.id.paddr, io_addr_sprd.id.vaddr, io_addr_sprd.id.length);\
+	}						\
+} while (0)
+#define ADD_SPRD_DEVICE_BY_NAME(name, id)		\
+do {							\
+	np = of_find_node_by_name(NULL, name);		\
+	if (of_can_translate_address(np)) {		\
+		of_address_to_resource(np, 0, &res);	\
+		io_addr_sprd.id.paddr = res.start;	\
+		io_addr_sprd.id.length =		\
+			resource_size(&res);		\
+		io_addr_sprd.id.vaddr =			\
+		ioremap_nocache(res.start, io_addr_sprd.id.length);\
+		pr_debug("sprd io map: phys=%16lx virt=%16lx size=%16lx\n", \
+	io_addr_sprd.id.paddr, io_addr_sprd.id.vaddr, io_addr_sprd.id.length);\
+	}						\
+} while (0)
+	ADD_SPRD_DEVICE("sprd,ahb", AHB);
+	ADD_SPRD_DEVICE("sprd,aonapb", AONAPB);
+	ADD_SPRD_DEVICE("sprd,aonckg", AONCKG);
+	ADD_SPRD_DEVICE("sprd,apbreg", APBREG);
+	ADD_SPRD_DEVICE("sprd,core", CORE);
+	ADD_SPRD_DEVICE("sprd,mmahb", MMAHB);
+	ADD_SPRD_DEVICE("sprd,pmu", PMU);
+	ADD_SPRD_DEVICE("sprd,mmckg", MMCKG);
+	ADD_SPRD_DEVICE("sprd,gpuapb", GPUAPB);
+	ADD_SPRD_DEVICE("sprd,apbckg", APBCKG);
+	ADD_SPRD_DEVICE("sprd,gpuckg", GPUCKG);
+	ADD_SPRD_DEVICE("sprd,int", INT);
+	ADD_SPRD_DEVICE("sprd,intc0", INTC0);
+	ADD_SPRD_DEVICE("sprd,intc1", INTC1);
+	ADD_SPRD_DEVICE("sprd,intc2", INTC2);
+	ADD_SPRD_DEVICE("sprd,intc3", INTC3);
+	ADD_SPRD_DEVICE("sprd,uidefuse", UIDEFUSE);
+	ADD_SPRD_DEVICE("sprd,isp", ISP);
+	ADD_SPRD_DEVICE("sprd,ca7wdg", CA7WDG);
+	ADD_SPRD_DEVICE("sprd,csi2", CSI2);
+	ADD_SPRD_DEVICE("sprd,d-eic-gpio", EIC);
+	ADD_SPRD_DEVICE("sprd,wdg", WDG);
+	ADD_SPRD_DEVICE("sprd,ipi", IPI);
+	ADD_SPRD_DEVICE("sprd,dcam", DCAM);
+	ADD_SPRD_DEVICE("sprd,syscnt", SYSCNT);
+	ADD_SPRD_DEVICE("sprd,dma0", DMA0);
+	ADD_SPRD_DEVICE("sprd,pub", PUB);
+	ADD_SPRD_DEVICE("sprd,pin", PIN);
+	ADD_SPRD_DEVICE("sprd,d-gpio-gpio", GPIO);
+	ADD_SPRD_DEVICE("sprd,codecahb", CODECAHB);
+	ADD_SPRD_DEVICE_BY_NAME("hwspinlock0", HWSPINLOCK0);
+	ADD_SPRD_DEVICE_BY_NAME("hwspinlock1", HWSPINLOCK1);
+
+	return 0;
+}
+
+static void __init sc8830_init_machine(void)
+{
+	printk("sci get chip id = 0x%x\n", __sci_get_chip_id());
+
+	sci_adc_init();
+#ifndef CONFIG_MACH_SPX35LFPGA
+	sci_regulator_init();
+#endif
+	of_sprd_default_bus_lookup[0].phys_addr = 0x20300000;
+	of_sprd_default_bus_lookup[1].phys_addr = 0x20400000;
+	of_sprd_default_bus_lookup[2].phys_addr = 0x20500000;
+	of_sprd_default_bus_lookup[3].phys_addr = 0x20600000;
+	of_platform_populate(NULL, of_sprd_default_bus_match_table, of_sprd_default_bus_lookup, NULL);
+}
+
+#ifdef CONFIG_OF
+const struct of_device_id of_sprd_late_bus_match_table[] = {
+	{ .compatible = "sprd,sound", },
+	{}
+};
+#endif
+
+static void __init sc8830_init_late(void)
+{
+	of_platform_populate(of_find_node_by_path("/sprd-audio-devices"),
+				of_sprd_late_bus_match_table, NULL, NULL);
+}
+
+
+extern void __init sci_enable_timer_early(void);
+extern void __init sc_init_chip_id(void);
+
+void __init sprd_init_before_irq(void)
+{
+	iotable_build();
+	sc_init_chip_id();
+	/* earlier init request than irq and timer */
+	__clock_init_early();
+	/*ipi reg init for sipc*/
+	sci_glb_set(REG_AON_APB_APB_EB0, BIT_IPI_EB);
+}
+
+static void __init sc8830_pmu_init(void)
+{
+	__raw_writel(__raw_readl(REG_PMU_APB_PD_MM_TOP_CFG)
+		& ~(BIT_PD_MM_TOP_FORCE_SHUTDOWN),
+		REG_PMU_APB_PD_MM_TOP_CFG);
+
+	while (__raw_readl(REG_PMU_APB_PWR_STATUS0_DBG) & 0xf0000000) {};
+
+	__raw_writel(__raw_readl(REG_PMU_APB_PD_GPU_TOP_CFG)
+		& ~(BIT_PD_GPU_TOP_FORCE_SHUTDOWN),
+		REG_PMU_APB_PD_GPU_TOP_CFG);
+
+	while (__raw_readl(REG_PMU_APB_PWR_STATUS0_DBG) & 0x0f000000) {};
+
+	__raw_writel(__raw_readl(REG_AON_APB_APB_EB0) | BIT_MM_EB |
+		BIT_GPU_EB, REG_AON_APB_APB_EB0);
+	__raw_writel(__raw_readl(REG_MM_AHB_AHB_EB) | BIT_MM_CKG_EB,
+		REG_MM_AHB_AHB_EB);
+	__raw_writel(__raw_readl(REG_MM_AHB_GEN_CKG_CFG)
+		| BIT_MM_MTX_AXI_CKG_EN | BIT_MM_AXI_CKG_EN,
+		REG_MM_AHB_GEN_CKG_CFG);
+	__raw_writel(__raw_readl(REG_MM_CLK_MM_AHB_CFG) | 0x3,
+		REG_MM_CLK_MM_AHB_CFG);
+	__raw_writel(__raw_readl(REG_AON_APB_APB_EB1) | BIT_CODEC_EB, REG_AON_APB_APB_EB1);
+}
+
+static void sprd_init_time(void)
+{
+	if (of_have_populated_dt()) {
+		sc8830_pmu_init();
+		of_clk_init(NULL);
+		clocksource_of_init();
+	} else {
+		sci_clock_init();
+		sci_enable_timer_early();
+		sci_timer_init();
+	}
+}
+static const char *sprd_boards_compat[] __initdata = {
+	"sprd,sp8835eb",
+	NULL,
+};
+extern struct smp_operations sprd_smp_ops;
+
+MACHINE_START(SCPHONE, "sc9832a")
+	.smp		= smp_ops(sprd_smp_ops),
+	.reserve	= sci_reserve,
+	.map_io		= sci_map_io,
+	.init_irq	= sci_init_irq,
+	.init_time	= sprd_init_time,
+	.init_machine	= sc8830_init_machine,
+	.init_late	= sc8830_init_late,
+	.dt_compat	= sprd_boards_compat,
+MACHINE_END
+
Index: kernel/arch/arm/configs/sp9832a_7c20_volte_defconfig
===================================================================
--- kernel/arch/arm/configs/sp9832a_7c20_volte_defconfig	(revision 0)
+++ kernel/arch/arm/configs/sp9832a_7c20_volte_defconfig	(revision 182225)
@@ -0,0 +1,3568 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Linux/arm 3.10.65 Kernel Configuration
+#
+CONFIG_ARM=y
+CONFIG_ARM_HAS_SG_CHAIN=y
+CONFIG_SYS_SUPPORTS_APM_EMULATION=y
+CONFIG_HAVE_PROC_CPU=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_RWSEM_GENERIC_SPINLOCK=y
+CONFIG_ARCH_HAS_CPUFREQ=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_NEED_DMA_MAP_STATE=y
+CONFIG_VECTORS_BASE=0xffff0000
+# CONFIG_ARM_PATCH_PHYS_VIRT is not set
+CONFIG_NEED_MACH_GPIO_H=y
+CONFIG_NEED_MACH_IO_H=y
+CONFIG_PHYS_OFFSET=0x80000000
+CONFIG_GENERIC_BUG=y
+CONFIG_DEFCONFIG_LIST="/lib/modules/$UNAME_RELEASE/.config"
+CONFIG_IRQ_WORK=y
+CONFIG_BUILDTIME_EXTABLE_SORT=y
+
+#
+# General setup
+#
+CONFIG_INIT_ENV_ARG_LIMIT=32
+CONFIG_CROSS_COMPILE=""
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_HAVE_KERNEL_GZIP=y
+CONFIG_HAVE_KERNEL_LZMA=y
+CONFIG_HAVE_KERNEL_XZ=y
+CONFIG_HAVE_KERNEL_LZO=y
+CONFIG_KERNEL_GZIP=y
+# CONFIG_KERNEL_LZMA is not set
+# CONFIG_KERNEL_XZ is not set
+# CONFIG_KERNEL_LZO is not set
+CONFIG_DEFAULT_HOSTNAME="(none)"
+CONFIG_SWAP=y
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+# CONFIG_POSIX_MQUEUE is not set
+# CONFIG_FHANDLE is not set
+CONFIG_AUDIT=y
+CONFIG_HAVE_ARCH_AUDITSYSCALL=y
+CONFIG_AUDITSYSCALL=y
+CONFIG_AUDIT_WATCH=y
+CONFIG_AUDIT_TREE=y
+# CONFIG_AUDIT_LOGINUID_IMMUTABLE is not set
+CONFIG_HAVE_GENERIC_HARDIRQS=y
+
+#
+# IRQ subsystem
+#
+CONFIG_GENERIC_HARDIRQS=y
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_GENERIC_IRQ_SHOW=y
+CONFIG_HARDIRQS_SW_RESEND=y
+CONFIG_IRQ_DOMAIN=y
+# CONFIG_IRQ_DOMAIN_DEBUG is not set
+CONFIG_KTIME_SCALAR=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_GENERIC_CLOCKEVENTS_BUILD=y
+CONFIG_ARCH_HAS_TICK_BROADCAST=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+
+#
+# Timers subsystem
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ_COMMON=y
+# CONFIG_HZ_PERIODIC is not set
+CONFIG_NO_HZ_IDLE=y
+CONFIG_NO_HZ=y
+CONFIG_HIGH_RES_TIMERS=y
+
+#
+# CPU/Task time and stats accounting
+#
+CONFIG_TICK_CPU_ACCOUNTING=y
+# CONFIG_IRQ_TIME_ACCOUNTING is not set
+# CONFIG_BSD_PROCESS_ACCT is not set
+# CONFIG_TASKSTATS is not set
+
+#
+# RCU Subsystem
+#
+CONFIG_TREE_PREEMPT_RCU=y
+CONFIG_PREEMPT_RCU=y
+CONFIG_RCU_STALL_COMMON=y
+# CONFIG_RCU_USER_QS is not set
+CONFIG_RCU_FANOUT=32
+CONFIG_RCU_FANOUT_LEAF=16
+# CONFIG_RCU_FANOUT_EXACT is not set
+# CONFIG_RCU_FAST_NO_HZ is not set
+# CONFIG_TREE_RCU_TRACE is not set
+# CONFIG_RCU_BOOST is not set
+# CONFIG_RCU_NOCB_CPU is not set
+# CONFIG_IKCONFIG is not set
+CONFIG_LOG_BUF_SHIFT=17
+CONFIG_CGROUPS=y
+CONFIG_CGROUP_DEBUG=y
+CONFIG_CGROUP_FREEZER=y
+# CONFIG_CGROUP_DEVICE is not set
+# CONFIG_CPUSETS is not set
+CONFIG_CGROUP_CPUACCT=y
+CONFIG_RESOURCE_COUNTERS=y
+CONFIG_MEMCG=y
+CONFIG_MEMCG_SWAP=y
+CONFIG_MEMCG_SWAP_ENABLED=y
+# CONFIG_MEMCG_KMEM is not set
+# CONFIG_CGROUP_PERF is not set
+CONFIG_CGROUP_SCHED=y
+CONFIG_FAIR_GROUP_SCHED=y
+# CONFIG_CFS_BANDWIDTH is not set
+CONFIG_RT_GROUP_SCHED=y
+# CONFIG_BLK_CGROUP is not set
+# CONFIG_CHECKPOINT_RESTORE is not set
+# CONFIG_NAMESPACES is not set
+CONFIG_UIDGID_CONVERTED=y
+# CONFIG_UIDGID_STRICT_TYPE_CHECKS is not set
+# CONFIG_SCHED_AUTOGROUP is not set
+CONFIG_MM_OWNER=y
+# CONFIG_SYSFS_DEPRECATED is not set
+CONFIG_RELAY=y
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE=""
+CONFIG_RD_GZIP=y
+# CONFIG_RD_BZIP2 is not set
+# CONFIG_RD_LZMA is not set
+# CONFIG_RD_XZ is not set
+# CONFIG_RD_LZO is not set
+CONFIG_CC_OPTIMIZE_FOR_SIZE=y
+CONFIG_SYSCTL=y
+CONFIG_ANON_INODES=y
+CONFIG_HAVE_UID16=y
+CONFIG_HOTPLUG=y
+CONFIG_PANIC_TIMEOUT=0
+CONFIG_EXPERT=y
+CONFIG_UID16=y
+CONFIG_SYSCTL_SYSCALL=y
+CONFIG_KALLSYMS=y
+CONFIG_KALLSYMS_ALL=y
+CONFIG_PRINTK=y
+CONFIG_BUG=y
+CONFIG_ELF_CORE=y
+CONFIG_BASE_FULL=y
+CONFIG_FUTEX=y
+CONFIG_HAVE_FUTEX_CMPXCHG=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_TIMERFD=y
+CONFIG_EVENTFD=y
+CONFIG_SHMEM=y
+CONFIG_AIO=y
+CONFIG_EMBEDDED=y
+CONFIG_HAVE_PERF_EVENTS=y
+CONFIG_PERF_USE_VMALLOC=y
+
+#
+# Kernel Performance Events And Counters
+#
+CONFIG_PERF_EVENTS=y
+# CONFIG_DEBUG_PERF_USE_VMALLOC is not set
+CONFIG_VM_EVENT_COUNTERS=y
+CONFIG_SLUB_DEBUG=y
+CONFIG_COMPAT_BRK=y
+# CONFIG_SLAB is not set
+CONFIG_SLUB=y
+# CONFIG_SLOB is not set
+CONFIG_PROFILING=y
+CONFIG_TRACEPOINTS=y
+CONFIG_OPROFILE=y
+CONFIG_HAVE_OPROFILE=y
+# CONFIG_KPROBES is not set
+# CONFIG_JUMP_LABEL is not set
+# CONFIG_HAVE_64BIT_ALIGNED_ACCESS is not set
+CONFIG_HAVE_KPROBES=y
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_HAVE_ARCH_TRACEHOOK=y
+CONFIG_HAVE_DMA_ATTRS=y
+CONFIG_HAVE_DMA_CONTIGUOUS=y
+CONFIG_USE_GENERIC_SMP_HELPERS=y
+CONFIG_GENERIC_SMP_IDLE_THREAD=y
+CONFIG_GENERIC_IDLE_POLL_SETUP=y
+CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y
+CONFIG_HAVE_CLK=y
+CONFIG_HAVE_DMA_API_DEBUG=y
+CONFIG_HAVE_HW_BREAKPOINT=y
+CONFIG_HAVE_ARCH_JUMP_LABEL=y
+CONFIG_ARCH_WANT_IPC_PARSE_VERSION=y
+CONFIG_HAVE_ARCH_SECCOMP_FILTER=y
+CONFIG_SECCOMP_FILTER=y
+CONFIG_HAVE_CONTEXT_TRACKING=y
+CONFIG_HAVE_IRQ_TIME_ACCOUNTING=y
+CONFIG_HAVE_MOD_ARCH_SPECIFIC=y
+CONFIG_MODULES_USE_ELF_REL=y
+CONFIG_HAVE_ARCH_MMAP_RND_BITS=y
+CONFIG_ARCH_MMAP_RND_BITS_MIN=8
+CONFIG_ARCH_MMAP_RND_BITS_MAX=16
+CONFIG_ARCH_MMAP_RND_BITS=16
+CONFIG_CLONE_BACKWARDS=y
+CONFIG_OLD_SIGSUSPEND3=y
+CONFIG_OLD_SIGACTION=y
+
+#
+# GCOV-based kernel profiling
+#
+# CONFIG_GCOV_KERNEL is not set
+CONFIG_HAVE_GENERIC_DMA_COHERENT=y
+CONFIG_SLABINFO=y
+CONFIG_RT_MUTEXES=y
+CONFIG_BASE_SMALL=0
+# CONFIG_SYSTEM_TRUSTED_KEYRING is not set
+CONFIG_MODULES=y
+# CONFIG_MODULE_FORCE_LOAD is not set
+CONFIG_MODULE_UNLOAD=y
+# CONFIG_MODULE_FORCE_UNLOAD is not set
+CONFIG_MODVERSIONS=y
+# CONFIG_MODULE_SRCVERSION_ALL is not set
+# CONFIG_MODULE_SIG is not set
+CONFIG_STOP_MACHINE=y
+CONFIG_BLOCK=y
+CONFIG_LBDAF=y
+# CONFIG_BLK_DEV_BSG is not set
+# CONFIG_BLK_DEV_BSGLIB is not set
+# CONFIG_BLK_DEV_INTEGRITY is not set
+
+#
+# Partition Types
+#
+CONFIG_PARTITION_ADVANCED=y
+# CONFIG_ACORN_PARTITION is not set
+# CONFIG_OSF_PARTITION is not set
+# CONFIG_AMIGA_PARTITION is not set
+# CONFIG_ATARI_PARTITION is not set
+# CONFIG_MAC_PARTITION is not set
+CONFIG_MSDOS_PARTITION=y
+# CONFIG_BSD_DISKLABEL is not set
+# CONFIG_MINIX_SUBPARTITION is not set
+# CONFIG_SOLARIS_X86_PARTITION is not set
+# CONFIG_UNIXWARE_DISKLABEL is not set
+# CONFIG_LDM_PARTITION is not set
+# CONFIG_SGI_PARTITION is not set
+# CONFIG_ULTRIX_PARTITION is not set
+# CONFIG_SUN_PARTITION is not set
+# CONFIG_KARMA_PARTITION is not set
+CONFIG_EFI_PARTITION=y
+# CONFIG_SYSV68_PARTITION is not set
+
+#
+# IO Schedulers
+#
+CONFIG_IOSCHED_NOOP=y
+# CONFIG_IOSCHED_DEADLINE is not set
+CONFIG_IOSCHED_CFQ=y
+CONFIG_DEFAULT_CFQ=y
+# CONFIG_DEFAULT_NOOP is not set
+CONFIG_DEFAULT_IOSCHED="cfq"
+CONFIG_UNINLINE_SPIN_UNLOCK=y
+CONFIG_ARCH_SUPPORTS_ATOMIC_RMW=y
+CONFIG_MUTEX_SPIN_ON_OWNER=y
+CONFIG_FREEZER=y
+
+#
+# System Type
+#
+CONFIG_MMU=y
+# CONFIG_ARCH_MULTIPLATFORM is not set
+# CONFIG_ARCH_INTEGRATOR is not set
+# CONFIG_ARCH_REALVIEW is not set
+# CONFIG_ARCH_VERSATILE is not set
+# CONFIG_ARCH_AT91 is not set
+# CONFIG_ARCH_CLPS711X is not set
+# CONFIG_ARCH_GEMINI is not set
+# CONFIG_ARCH_EBSA110 is not set
+# CONFIG_ARCH_EP93XX is not set
+# CONFIG_ARCH_FOOTBRIDGE is not set
+# CONFIG_ARCH_NETX is not set
+# CONFIG_ARCH_IOP13XX is not set
+# CONFIG_ARCH_IOP32X is not set
+# CONFIG_ARCH_IOP33X is not set
+# CONFIG_ARCH_IXP4XX is not set
+# CONFIG_ARCH_DOVE is not set
+# CONFIG_ARCH_KIRKWOOD is not set
+# CONFIG_ARCH_MV78XX0 is not set
+# CONFIG_ARCH_ORION5X is not set
+# CONFIG_ARCH_MMP is not set
+# CONFIG_ARCH_KS8695 is not set
+# CONFIG_ARCH_W90X900 is not set
+# CONFIG_ARCH_LPC32XX is not set
+# CONFIG_ARCH_PXA is not set
+# CONFIG_ARCH_MSM is not set
+# CONFIG_ARCH_SHMOBILE is not set
+# CONFIG_ARCH_RPC is not set
+# CONFIG_ARCH_SA1100 is not set
+# CONFIG_ARCH_S3C24XX is not set
+# CONFIG_ARCH_S3C64XX is not set
+# CONFIG_ARCH_S5P64X0 is not set
+# CONFIG_ARCH_S5PC100 is not set
+# CONFIG_ARCH_S5PV210 is not set
+# CONFIG_ARCH_EXYNOS is not set
+# CONFIG_ARCH_SHARK is not set
+# CONFIG_ARCH_U300 is not set
+# CONFIG_ARCH_DAVINCI is not set
+# CONFIG_ARCH_OMAP1 is not set
+CONFIG_ARCH_SC=y
+# CONFIG_GPIO_PCA953X is not set
+# CONFIG_KEYBOARD_GPIO_POLLED is not set
+# CONFIG_PLAT_SPEAR is not set
+
+#
+# Spreadtrum SoC Type
+#
+CONFIG_ARCH_SCX35=y
+# CONFIG_ARCH_SCX15 is not set
+CONFIG_ARCH_SCX35L=y
+# CONFIG_ARCH_SCX30G is not set
+# CONFIG_ARCH_SCX30G2 is not set
+# CONFIG_ARCH_SCX30G3 is not set
+# CONFIG_ARCH_SCX20L is not set
+# CONFIG_ARCH_SCX20 is not set
+# CONFIG_MACH_SCX35_DT is not set
+# CONFIG_CPLL_1024M is not set
+# CONFIG_TSHARK3_OVERCLOCK is not set
+# CONFIG_SC_FPGA is not set
+
+#
+# Spreadtrum Board Type
+#
+# CONFIG_MACH_SP5735EA is not set
+# CONFIG_MACH_SP5735C1EA is not set
+# CONFIG_MACH_SPX35EB is not set
+# CONFIG_MACH_SP8835EB is not set
+# CONFIG_MACH_SPX35EA is not set
+# CONFIG_MACH_SPX35EC is not set
+# CONFIG_MACH_KANAS_W is not set
+# CONFIG_MACH_KANAS_TD is not set
+# CONFIG_MACH_SC9620OPENPHONE is not set
+# CONFIG_MACH_SC9620OPENPHONE_ZT is not set
+# CONFIG_MACH_SC9620FPGA is not set
+# CONFIG_MACH_SP8830GEA is not set
+# CONFIG_MACH_SP7730GGA is not set
+# CONFIG_MACH_SP7731GGA_LC is not set
+# CONFIG_MACH_SP7730GGA_LC is not set
+# CONFIG_MACH_SP7730GGAOPENPHONE is not set
+# CONFIG_MACH_SP7731GEA is not set
+# CONFIG_MACH_SP7730SW_FPGA is not set
+# CONFIG_MACH_SP7730SW_T2 is not set
+# CONFIG_MACH_SP7730SW is not set
+# CONFIG_MACH_J3_3G is not set
+# CONFIG_MACH_SP8730SEEA_T3 is not set
+# CONFIG_MACH_SP7731GEA_HD2 is not set
+# CONFIG_MACH_SP7731GEA_HD is not set
+# CONFIG_MACH_SP7731G_1H10_HD is not set
+# CONFIG_MACH_SP8730SEEA_QHD is not set
+# CONFIG_MACH_SP8730SEEA_JIG is not set
+# CONFIG_MACH_SP7731GEPIKE is not set
+# CONFIG_MACH_SP7731GEA_FWVGA is not set
+# CONFIG_MACH_SP7731GEAOPENPHONE is not set
+# CONFIG_MACH_SP7731GEA_LC is not set
+# CONFIG_MACH_SP7730EC is not set
+# CONFIG_MACH_SP7730ECTRISIM is not set
+# CONFIG_MACH_SPX35FPGA is not set
+# CONFIG_MACH_SP7735EC is not set
+# CONFIG_MACH_SPX35LFPGA is not set
+# CONFIG_MACH_PIKELFPGA is not set
+# CONFIG_MACH_COREPRIMELITE is not set
+# CONFIG_MACH_SHARKLS_Z3LTE is not set
+# CONFIG_MACH_SHARKL_J1POPLTE is not set
+# CONFIG_MACH_SP9630EA3MN is not set
+# CONFIG_MACH_SP9630EA4MN is not set
+# CONFIG_MACH_SP9830IEA_4M_H100 is not set
+# CONFIG_MACH_SP9830I_2H11_4M is not set
+# CONFIG_MACH_SP9830AEA_5M_H100 is not set
+# CONFIG_MACH_SP9830AEA_5M_H100_32V4 is not set
+# CONFIG_MACH_SP9830A_7H10 is not set
+# CONFIG_MACH_SP9830A_7H10_VOLTE is not set
+# CONFIG_MACH_SP9830AEA_5M_VOLTE is not set
+# CONFIG_MACH_SP9830AEB_5M_H100 is not set
+# CONFIG_MACH_SP9830A_5H10_5MVOLTE is not set
+# CONFIG_MACH_SP9830A_2H10_4M is not set
+# CONFIG_PRODUCT_SP9830AEC_4M_H110 is not set
+# CONFIG_MACH_SP9832A_2H11_4M is not set
+# CONFIG_MACH_SP9832A_2H11_4MSAMSUNG is not set
+CONFIG_MACH_SP9832A_7C20_VOLTE=y
+# CONFIG_MACH_SP9832A2_VOL_13CAM is not set
+# CONFIG_MACH_SP9832A_3H10_VOLTE is not set
+CONFIG_ISP_V2=y
+CONFIG_MACH_SP9830I=y
+# CONFIG_MACH_SP9830I_J3LTE is not set
+# CONFIG_MACH_SHARKLC_Z2LTE is not set
+# CONFIG_MACH_SP9830IEA_5M_H100 is not set
+# CONFIG_MACH_SP9830I_J2LTE_V0 is not set
+# CONFIG_MACH_SP9830I_J2LTE is not set
+# CONFIG_CHIP_SP9830IED is not set
+# CONFIG_MACH_SP9830IEB_5M_H100 is not set
+# CONFIG_MACH_SP8730SEA is not set
+# CONFIG_MACH_SP8830GA is not set
+# CONFIG_MACH_SP7730GA is not set
+# CONFIG_MACH_TSHARKWSAMSUNG is not set
+# CONFIG_MACH_CORE3 is not set
+# CONFIG_MACH_PIKEAYOUNG2DTV is not set
+# CONFIG_MACH_TSHARK2TABE is not set
+# CONFIG_MACH_GRANDPRIME3G_VE is not set
+# CONFIG_MACH_COREPRIME3G_VE is not set
+# CONFIG_MACH_TIZENZ3_3G is not set
+# CONFIG_MACH_GRANDPRIME_DTV is not set
+# CONFIG_MACH_SAMSUNG is not set
+# CONFIG_GPS_BCM47520 is not set
+
+#
+# Processor Type
+#
+CONFIG_CPU_V7=y
+CONFIG_CPU_32v6K=y
+CONFIG_CPU_32v7=y
+CONFIG_CPU_ABRT_EV7=y
+CONFIG_CPU_PABRT_V7=y
+CONFIG_CPU_CACHE_V7=y
+CONFIG_CPU_CACHE_VIPT=y
+CONFIG_CPU_COPY_V6=y
+CONFIG_CPU_TLB_V7=y
+CONFIG_CPU_HAS_ASID=y
+CONFIG_CPU_CP15=y
+CONFIG_CPU_CP15_MMU=y
+
+#
+# Processor Features
+#
+# CONFIG_ARM_LPAE is not set
+# CONFIG_ARCH_PHYS_ADDR_T_64BIT is not set
+CONFIG_ARM_THUMB=y
+# CONFIG_ARM_THUMBEE is not set
+CONFIG_ARM_VIRT_EXT=y
+CONFIG_SWP_EMULATE=y
+# CONFIG_CPU_ICACHE_DISABLE is not set
+# CONFIG_CPU_DCACHE_DISABLE is not set
+# CONFIG_CPU_BPREDICT_DISABLE is not set
+CONFIG_KUSER_HELPERS=y
+# CONFIG_CACHE_L2X0 is not set
+CONFIG_ARM_L1_CACHE_SHIFT_6=y
+CONFIG_ARM_L1_CACHE_SHIFT=6
+CONFIG_ARM_DMA_MEM_BUFFERABLE=y
+CONFIG_ARM_NR_BANKS=8
+CONFIG_MULTI_IRQ_HANDLER=y
+# CONFIG_ARM_ERRATA_430973 is not set
+# CONFIG_ARM_ERRATA_458693 is not set
+# CONFIG_ARM_ERRATA_460075 is not set
+# CONFIG_ARM_ERRATA_742230 is not set
+# CONFIG_ARM_ERRATA_742231 is not set
+# CONFIG_ARM_ERRATA_643719 is not set
+# CONFIG_ARM_ERRATA_720789 is not set
+# CONFIG_ARM_ERRATA_743622 is not set
+# CONFIG_ARM_ERRATA_751472 is not set
+# CONFIG_ARM_ERRATA_754322 is not set
+# CONFIG_ARM_ERRATA_754327 is not set
+# CONFIG_ARM_ERRATA_764369 is not set
+# CONFIG_ARM_ERRATA_775420 is not set
+# CONFIG_ARM_ERRATA_798181 is not set
+
+#
+# Bus support
+#
+# CONFIG_PCI_SYSCALL is not set
+# CONFIG_PCCARD is not set
+
+#
+# Kernel Features
+#
+CONFIG_HAVE_SMP=y
+CONFIG_SMP=y
+# CONFIG_SMP_ON_UP is not set
+CONFIG_ARM_CPU_TOPOLOGY=y
+CONFIG_SCHED_MC=y
+# CONFIG_SCHED_SMT is not set
+# CONFIG_DISABLE_CPU_SCHED_DOMAIN_BALANCE is not set
+# CONFIG_HAVE_ARM_ARCH_TIMER is not set
+# CONFIG_MCPM is not set
+# CONFIG_BIG_LITTLE is not set
+CONFIG_VMSPLIT_3G=y
+# CONFIG_VMSPLIT_2G is not set
+# CONFIG_VMSPLIT_1G is not set
+CONFIG_PAGE_OFFSET=0xC0000000
+CONFIG_NR_CPUS=4
+CONFIG_HOTPLUG_CPU=y
+# CONFIG_ARM_PSCI is not set
+CONFIG_LOCAL_TIMERS=y
+CONFIG_ARCH_NR_GPIO=0
+# CONFIG_PREEMPT_NONE is not set
+# CONFIG_PREEMPT_VOLUNTARY is not set
+CONFIG_PREEMPT=y
+CONFIG_PREEMPT_COUNT=y
+CONFIG_HZ=100
+CONFIG_SCHED_HRTICK=y
+# CONFIG_THUMB2_KERNEL is not set
+CONFIG_AEABI=y
+# CONFIG_OABI_COMPAT is not set
+# CONFIG_ARCH_SPARSEMEM_DEFAULT is not set
+# CONFIG_ARCH_SELECT_MEMORY_MODEL is not set
+CONFIG_HAVE_ARCH_PFN_VALID=y
+CONFIG_HIGHMEM=y
+# CONFIG_HIGHPTE is not set
+CONFIG_HW_PERF_EVENTS=y
+# CONFIG_MEMBLOCK_RESERVE_DEBUG is not set
+CONFIG_FLATMEM=y
+CONFIG_FLAT_NODE_MEM_MAP=y
+CONFIG_HAVE_MEMBLOCK=y
+# CONFIG_HAVE_BOOTMEM_INFO_NODE is not set
+CONFIG_PAGEFLAGS_EXTENDED=y
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_COMPACTION=y
+CONFIG_MIGRATION=y
+# CONFIG_PHYS_ADDR_T_64BIT is not set
+CONFIG_ZONE_DMA_FLAG=0
+CONFIG_BOUNCE=y
+CONFIG_KSM=y
+CONFIG_OPTIMIZE_KSM=y
+CONFIG_KSM_ASSEMBLY_MEMCMP=y
+CONFIG_DEFAULT_MMAP_MIN_ADDR=4096
+CONFIG_CROSS_MEMORY_ATTACH=y
+# CONFIG_CLEANCACHE is not set
+# CONFIG_FRONTSWAP is not set
+# CONFIG_CMA is not set
+# CONFIG_ZPOOL is not set
+CONFIG_ZSMALLOC=y
+# CONFIG_PGTABLE_MAPPING is not set
+# CONFIG_ZSMALLOC_STAT is not set
+CONFIG_FORCE_MAX_ZONEORDER=14
+CONFIG_ALIGNMENT_TRAP=y
+# CONFIG_UACCESS_WITH_MEMCPY is not set
+CONFIG_SECCOMP=y
+# CONFIG_CC_STACKPROTECTOR is not set
+# CONFIG_XEN is not set
+CONFIG_ARM_FLUSH_CONSOLE_ON_RESTART=y
+
+#
+# Boot options
+#
+CONFIG_USE_OF=y
+CONFIG_ATAGS=y
+# CONFIG_DEPRECATED_PARAM_STRUCT is not set
+# CONFIG_BUILD_ARM_APPENDED_DTB_IMAGE is not set
+CONFIG_ZBOOT_ROM_TEXT=0x0
+CONFIG_ZBOOT_ROM_BSS=0x0
+# CONFIG_ARM_APPENDED_DTB is not set
+CONFIG_CMDLINE="root=/dev/ram0 rw initrd=0x80e00000,0x1f243f console=ttyS1,115200n8 init=/init mem=128M"
+CONFIG_CMDLINE_FROM_BOOTLOADER=y
+# CONFIG_CMDLINE_EXTEND is not set
+# CONFIG_CMDLINE_FORCE is not set
+# CONFIG_XIP_KERNEL is not set
+# CONFIG_KEXEC is not set
+# CONFIG_CRASH_DUMP is not set
+# CONFIG_AUTO_ZRELADDR is not set
+
+#
+# CPU Power Management
+#
+
+#
+# CPU Frequency scaling
+#
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_TABLE=y
+CONFIG_CPU_FREQ_STAT=y
+# CONFIG_CPU_FREQ_STAT_DETAILS is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set
+CONFIG_CPU_FREQ_DEFAULT_GOV_INTERACTIVE=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_SPRDEMAND is not set
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+CONFIG_CPU_FREQ_GOV_POWERSAVE=y
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+# CONFIG_CPU_FREQ_GOV_ONDEMAND is not set
+CONFIG_CPU_FREQ_GOV_INTERACTIVE=y
+# CONFIG_CPU_FREQ_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_FREQ_GOV_SPRDEMAND is not set
+# CONFIG_DVFS_ONLY is not set
+# CONFIG_SPRD_CPUFREQ_DT_DRIVER is not set
+# CONFIG_SCX35_1300MHZ is not set
+
+#
+# ARM CPU frequency scaling drivers
+#
+# CONFIG_ARM_EXYNOS4210_CPUFREQ is not set
+# CONFIG_ARM_EXYNOS4X12_CPUFREQ is not set
+# CONFIG_ARM_EXYNOS5250_CPUFREQ is not set
+# CONFIG_ARM_KIRKWOOD_CPUFREQ is not set
+CONFIG_CPU_IDLE=y
+# CONFIG_CPU_IDLE_MULTIPLE_DRIVERS is not set
+CONFIG_CPU_IDLE_GOV_LADDER=y
+CONFIG_CPU_IDLE_GOV_MENU=y
+# CONFIG_ARCH_NEEDS_CPU_IDLE_COUPLED is not set
+
+#
+# Floating point emulation
+#
+
+#
+# At least one emulation must be selected
+#
+CONFIG_VFP=y
+CONFIG_VFPv3=y
+CONFIG_NEON=y
+CONFIG_KERNEL_MODE_NEON=y
+
+#
+# Userspace binary formats
+#
+CONFIG_BINFMT_ELF=y
+CONFIG_ARCH_BINFMT_ELF_RANDOMIZE_PIE=y
+# CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS is not set
+CONFIG_BINFMT_SCRIPT=y
+# CONFIG_HAVE_AOUT is not set
+# CONFIG_BINFMT_MISC is not set
+CONFIG_COREDUMP=y
+
+#
+# Power management options
+#
+CONFIG_SUSPEND=y
+CONFIG_SUSPEND_FREEZER=y
+CONFIG_HAS_WAKELOCK=y
+CONFIG_HAS_EARLYSUSPEND=y
+CONFIG_WAKELOCK=y
+CONFIG_WAKELOCK_STAT=y
+CONFIG_USER_WAKELOCK=y
+CONFIG_EARLYSUSPEND=y
+# CONFIG_NO_USER_SPACE_SCREEN_ACCESS_CONTROL is not set
+CONFIG_FB_EARLYSUSPEND=y
+CONFIG_PM_SLEEP=y
+CONFIG_PM_SLEEP_SMP=y
+# CONFIG_PM_AUTOSLEEP is not set
+CONFIG_PM_RUNTIME=y
+CONFIG_PM=y
+# CONFIG_PM_DEBUG is not set
+# CONFIG_APM_EMULATION is not set
+CONFIG_PM_CLK=y
+# CONFIG_WQ_POWER_EFFICIENT_DEFAULT is not set
+CONFIG_CPU_PM=y
+CONFIG_SUSPEND_TIME=y
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+CONFIG_ARM_CPU_SUSPEND=y
+CONFIG_NET=y
+
+#
+# Networking options
+#
+CONFIG_PACKET=y
+# CONFIG_PACKET_DIAG is not set
+CONFIG_UNIX=y
+# CONFIG_UNIX_DIAG is not set
+CONFIG_XFRM=y
+CONFIG_XFRM_ALGO=y
+CONFIG_XFRM_USER=y
+CONFIG_XFRM_SUB_POLICY=y
+CONFIG_XFRM_SPRD_VOWIFI_FRAGMENT=y
+# CONFIG_XFRM_MIGRATE is not set
+CONFIG_XFRM_STATISTICS=y
+CONFIG_XFRM_IPCOMP=y
+CONFIG_NET_KEY=y
+# CONFIG_NET_KEY_MIGRATE is not set
+CONFIG_INET=y
+# CONFIG_IP_MULTICAST is not set
+CONFIG_IP_ADVANCED_ROUTER=y
+# CONFIG_IP_FIB_TRIE_STATS is not set
+CONFIG_IP_MULTIPLE_TABLES=y
+# CONFIG_IP_ROUTE_MULTIPATH is not set
+# CONFIG_IP_ROUTE_VERBOSE is not set
+# CONFIG_IP_PNP is not set
+# CONFIG_NET_IPIP is not set
+CONFIG_NET_IPGRE_DEMUX=y
+CONFIG_NET_IP_TUNNEL=y
+# CONFIG_NET_IPGRE is not set
+# CONFIG_ARPD is not set
+# CONFIG_SYN_COOKIES is not set
+# CONFIG_NET_IPVTI is not set
+CONFIG_INET_AH=y
+CONFIG_INET_ESP=y
+CONFIG_INET_IPCOMP=y
+CONFIG_INET_XFRM_TUNNEL=y
+CONFIG_INET_TUNNEL=y
+CONFIG_INET_XFRM_MODE_TRANSPORT=y
+CONFIG_INET_XFRM_MODE_TUNNEL=y
+CONFIG_INET_XFRM_MODE_BEET=y
+# CONFIG_INET_LRO is not set
+CONFIG_INET_DIAG=y
+CONFIG_INET_TCP_DIAG=y
+# CONFIG_INET_UDP_DIAG is not set
+CONFIG_INET_DIAG_DESTROY=y
+# CONFIG_TCP_CONG_ADVANCED is not set
+CONFIG_TCP_CONG_CUBIC=y
+CONFIG_DEFAULT_TCP_CONG="cubic"
+# CONFIG_TCP_MD5SIG is not set
+CONFIG_IPV6=y
+CONFIG_IPV6_PRIVACY=y
+CONFIG_IPV6_ROUTER_PREF=y
+CONFIG_IPV6_ROUTE_INFO=y
+CONFIG_IPV6_OPTIMISTIC_DAD=y
+CONFIG_INET6_AH=y
+CONFIG_INET6_ESP=y
+CONFIG_INET6_IPCOMP=y
+CONFIG_IPV6_MIP6=y
+CONFIG_INET6_XFRM_TUNNEL=y
+CONFIG_INET6_TUNNEL=y
+CONFIG_INET6_XFRM_MODE_TRANSPORT=y
+CONFIG_INET6_XFRM_MODE_TUNNEL=y
+CONFIG_INET6_XFRM_MODE_BEET=y
+# CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION is not set
+CONFIG_IPV6_SIT=y
+# CONFIG_IPV6_SIT_6RD is not set
+CONFIG_IPV6_NDISC_NODETYPE=y
+CONFIG_IPV6_TUNNEL=y
+# CONFIG_IPV6_GRE is not set
+CONFIG_IPV6_MULTIPLE_TABLES=y
+CONFIG_IPV6_SUBTREES=y
+# CONFIG_IPV6_MROUTE is not set
+# CONFIG_NETLABEL is not set
+CONFIG_ANDROID_PARANOID_NETWORK=y
+CONFIG_NET_ACTIVITY_STATS=y
+CONFIG_NETWORK_SECMARK=y
+# CONFIG_NETWORK_PHY_TIMESTAMPING is not set
+CONFIG_NETFILTER=y
+# CONFIG_NETFILTER_DEBUG is not set
+CONFIG_NETFILTER_ADVANCED=y
+
+#
+# Core Netfilter Configuration
+#
+CONFIG_NETFILTER_NETLINK=y
+# CONFIG_NETFILTER_NETLINK_ACCT is not set
+CONFIG_NETFILTER_NETLINK_QUEUE=y
+CONFIG_NETFILTER_NETLINK_LOG=y
+CONFIG_NF_CONNTRACK=y
+CONFIG_NF_CONNTRACK_MARK=y
+# CONFIG_NF_CONNTRACK_SECMARK is not set
+CONFIG_NF_CONNTRACK_PROCFS=y
+CONFIG_NF_CONNTRACK_EVENTS=y
+# CONFIG_NF_CONNTRACK_TIMEOUT is not set
+# CONFIG_NF_CONNTRACK_TIMESTAMP is not set
+CONFIG_NF_CT_PROTO_DCCP=y
+CONFIG_NF_CT_PROTO_GRE=y
+CONFIG_NF_CT_PROTO_SCTP=y
+CONFIG_NF_CT_PROTO_UDPLITE=y
+CONFIG_NF_CONNTRACK_AMANDA=y
+CONFIG_NF_CONNTRACK_FTP=y
+CONFIG_NF_CONNTRACK_H323=y
+CONFIG_NF_CONNTRACK_IRC=y
+CONFIG_NF_CONNTRACK_BROADCAST=y
+CONFIG_NF_CONNTRACK_NETBIOS_NS=y
+# CONFIG_NF_CONNTRACK_SNMP is not set
+CONFIG_NF_CONNTRACK_PPTP=y
+CONFIG_NF_CONNTRACK_SANE=y
+CONFIG_NF_CONNTRACK_SIP=y
+CONFIG_NF_CONNTRACK_TFTP=y
+CONFIG_NF_CT_NETLINK=y
+# CONFIG_NF_CT_NETLINK_TIMEOUT is not set
+# CONFIG_NETFILTER_NETLINK_QUEUE_CT is not set
+CONFIG_NF_NAT=y
+CONFIG_NF_NAT_NEEDED=y
+CONFIG_NF_NAT_PROTO_DCCP=y
+CONFIG_NF_NAT_PROTO_UDPLITE=y
+CONFIG_NF_NAT_PROTO_SCTP=y
+CONFIG_NF_NAT_AMANDA=y
+CONFIG_NF_NAT_FTP=y
+CONFIG_NF_NAT_IRC=y
+CONFIG_NF_NAT_SIP=y
+CONFIG_NF_NAT_TFTP=y
+CONFIG_NETFILTER_TPROXY=y
+CONFIG_NETFILTER_XTABLES=y
+
+#
+# Xtables combined modules
+#
+CONFIG_NETFILTER_XT_MARK=y
+CONFIG_NETFILTER_XT_CONNMARK=y
+
+#
+# Xtables targets
+#
+# CONFIG_NETFILTER_XT_TARGET_AUDIT is not set
+# CONFIG_NETFILTER_XT_TARGET_CHECKSUM is not set
+CONFIG_NETFILTER_XT_TARGET_CLASSIFY=y
+CONFIG_NETFILTER_XT_TARGET_CONNMARK=y
+# CONFIG_NETFILTER_XT_TARGET_CT is not set
+# CONFIG_NETFILTER_XT_TARGET_DSCP is not set
+# CONFIG_NETFILTER_XT_TARGET_HL is not set
+# CONFIG_NETFILTER_XT_TARGET_HMARK is not set
+CONFIG_NETFILTER_XT_TARGET_IDLETIMER=y
+CONFIG_NETFILTER_XT_TARGET_LOG=y
+CONFIG_NETFILTER_XT_TARGET_MARK=y
+CONFIG_NETFILTER_XT_TARGET_NETMAP=y
+CONFIG_NETFILTER_XT_TARGET_NFLOG=y
+CONFIG_NETFILTER_XT_TARGET_NFQUEUE=y
+# CONFIG_NETFILTER_XT_TARGET_NOTRACK is not set
+# CONFIG_NETFILTER_XT_TARGET_RATEEST is not set
+CONFIG_NETFILTER_XT_TARGET_REDIRECT=y
+# CONFIG_NETFILTER_XT_TARGET_TEE is not set
+CONFIG_NETFILTER_XT_TARGET_TPROXY=y
+CONFIG_NETFILTER_XT_TARGET_TRACE=y
+# CONFIG_NETFILTER_XT_TARGET_SECMARK is not set
+CONFIG_NETFILTER_XT_TARGET_TCPMSS=y
+# CONFIG_NETFILTER_XT_TARGET_TCPOPTSTRIP is not set
+
+#
+# Xtables matches
+#
+CONFIG_NETFILTER_XT_MATCH_ADDRTYPE=y
+# CONFIG_NETFILTER_XT_MATCH_BPF is not set
+# CONFIG_NETFILTER_XT_MATCH_CLUSTER is not set
+CONFIG_NETFILTER_XT_MATCH_COMMENT=y
+# CONFIG_NETFILTER_XT_MATCH_CONNBYTES is not set
+# CONFIG_NETFILTER_XT_MATCH_CONNLABEL is not set
+CONFIG_NETFILTER_XT_MATCH_CONNLIMIT=y
+CONFIG_NETFILTER_XT_MATCH_CONNMARK=y
+CONFIG_NETFILTER_XT_MATCH_CONNTRACK=y
+# CONFIG_NETFILTER_XT_MATCH_CPU is not set
+# CONFIG_NETFILTER_XT_MATCH_DCCP is not set
+# CONFIG_NETFILTER_XT_MATCH_DEVGROUP is not set
+# CONFIG_NETFILTER_XT_MATCH_DSCP is not set
+CONFIG_NETFILTER_XT_MATCH_ECN=y
+# CONFIG_NETFILTER_XT_MATCH_ESP is not set
+CONFIG_NETFILTER_XT_MATCH_HASHLIMIT=y
+CONFIG_NETFILTER_XT_MATCH_HELPER=y
+CONFIG_NETFILTER_XT_MATCH_HL=y
+CONFIG_NETFILTER_XT_MATCH_IPRANGE=y
+CONFIG_NETFILTER_XT_MATCH_LENGTH=y
+CONFIG_NETFILTER_XT_MATCH_LIMIT=y
+CONFIG_NETFILTER_XT_MATCH_MAC=y
+CONFIG_NETFILTER_XT_MATCH_MARK=y
+# CONFIG_NETFILTER_XT_MATCH_MULTIPORT is not set
+# CONFIG_NETFILTER_XT_MATCH_NFACCT is not set
+# CONFIG_NETFILTER_XT_MATCH_OSF is not set
+# CONFIG_NETFILTER_XT_MATCH_OWNER is not set
+CONFIG_NETFILTER_XT_MATCH_POLICY=y
+CONFIG_NETFILTER_XT_MATCH_PKTTYPE=y
+CONFIG_NETFILTER_XT_MATCH_QTAGUID=y
+CONFIG_NETFILTER_XT_MATCH_QUOTA=y
+CONFIG_NETFILTER_XT_MATCH_QUOTA2=y
+CONFIG_NETFILTER_XT_MATCH_QUOTA2_LOG=y
+# CONFIG_NETFILTER_XT_MATCH_RATEEST is not set
+# CONFIG_NETFILTER_XT_MATCH_REALM is not set
+# CONFIG_NETFILTER_XT_MATCH_RECENT is not set
+# CONFIG_NETFILTER_XT_MATCH_SCTP is not set
+CONFIG_NETFILTER_XT_MATCH_SOCKET=y
+CONFIG_NETFILTER_XT_MATCH_STATE=y
+CONFIG_NETFILTER_XT_MATCH_STATISTIC=y
+CONFIG_NETFILTER_XT_MATCH_STRING=y
+# CONFIG_NETFILTER_XT_MATCH_TCPMSS is not set
+CONFIG_NETFILTER_XT_MATCH_TIME=y
+CONFIG_NETFILTER_XT_MATCH_U32=y
+# CONFIG_IP_SET is not set
+# CONFIG_IP_VS is not set
+
+#
+# IP: Netfilter Configuration
+#
+CONFIG_NF_DEFRAG_IPV4=y
+CONFIG_NF_CONNTRACK_IPV4=y
+CONFIG_NF_CONNTRACK_PROC_COMPAT=y
+CONFIG_IP_NF_IPTABLES=y
+CONFIG_IP_NF_MATCH_AH=y
+CONFIG_IP_NF_MATCH_ECN=y
+# CONFIG_IP_NF_MATCH_RPFILTER is not set
+CONFIG_IP_NF_MATCH_TTL=y
+CONFIG_IP_NF_FILTER=y
+CONFIG_IP_NF_TARGET_REJECT=y
+CONFIG_IP_NF_VOWIFI_DEC_TCPDUMP=y
+CONFIG_IP_NF_TARGET_REJECT_SKERR=y
+# CONFIG_IP_NF_TARGET_ULOG is not set
+CONFIG_NF_NAT_IPV4=y
+CONFIG_IP_NF_TARGET_MASQUERADE=y
+CONFIG_IP_NF_TARGET_NETMAP=y
+CONFIG_IP_NF_TARGET_REDIRECT=y
+CONFIG_NF_NAT_PROTO_GRE=y
+CONFIG_NF_NAT_PPTP=y
+CONFIG_NF_NAT_H323=y
+CONFIG_IP_NF_MANGLE=y
+# CONFIG_IP_NF_TARGET_CLUSTERIP is not set
+# CONFIG_IP_NF_TARGET_ECN is not set
+# CONFIG_IP_NF_TARGET_TTL is not set
+CONFIG_IP_NF_RAW=y
+# CONFIG_IP_NF_SECURITY is not set
+CONFIG_IP_NF_ARPTABLES=y
+CONFIG_IP_NF_ARPFILTER=y
+CONFIG_IP_NF_ARP_MANGLE=y
+
+#
+# IPv6: Netfilter Configuration
+#
+CONFIG_NF_DEFRAG_IPV6=y
+CONFIG_NF_CONNTRACK_IPV6=y
+CONFIG_IP6_NF_IPTABLES=y
+# CONFIG_IP6_NF_MATCH_AH is not set
+# CONFIG_IP6_NF_MATCH_EUI64 is not set
+# CONFIG_IP6_NF_MATCH_FRAG is not set
+# CONFIG_IP6_NF_MATCH_OPTS is not set
+# CONFIG_IP6_NF_MATCH_HL is not set
+# CONFIG_IP6_NF_MATCH_IPV6HEADER is not set
+# CONFIG_IP6_NF_MATCH_MH is not set
+# CONFIG_IP6_NF_MATCH_RPFILTER is not set
+# CONFIG_IP6_NF_MATCH_RT is not set
+# CONFIG_IP6_NF_TARGET_HL is not set
+CONFIG_IP6_NF_FILTER=y
+CONFIG_IP6_NF_VOWIFI_DEC_TCPDUMP=y
+CONFIG_IP6_NF_TARGET_REJECT=y
+CONFIG_IP6_NF_TARGET_REJECT_SKERR=y
+CONFIG_IP6_NF_MANGLE=y
+CONFIG_IP6_NF_RAW=y
+# CONFIG_IP6_NF_SECURITY is not set
+# CONFIG_NF_NAT_IPV6 is not set
+# CONFIG_IP_DCCP is not set
+# CONFIG_IP_SCTP is not set
+# CONFIG_RDS is not set
+# CONFIG_TIPC is not set
+# CONFIG_ATM is not set
+CONFIG_L2TP=y
+# CONFIG_L2TP_DEBUGFS is not set
+# CONFIG_L2TP_V3 is not set
+# CONFIG_BRIDGE is not set
+CONFIG_HAVE_NET_DSA=y
+# CONFIG_VLAN_8021Q is not set
+# CONFIG_DECNET is not set
+# CONFIG_LLC2 is not set
+# CONFIG_IPX is not set
+# CONFIG_ATALK is not set
+# CONFIG_X25 is not set
+# CONFIG_LAPB is not set
+# CONFIG_PHONET is not set
+# CONFIG_IEEE802154 is not set
+CONFIG_NET_SCHED=y
+
+#
+# Queueing/Scheduling
+#
+# CONFIG_NET_SCH_CBQ is not set
+CONFIG_NET_SCH_HTB=y
+# CONFIG_NET_SCH_HFSC is not set
+# CONFIG_NET_SCH_PRIO is not set
+# CONFIG_NET_SCH_MULTIQ is not set
+# CONFIG_NET_SCH_RED is not set
+# CONFIG_NET_SCH_SFB is not set
+# CONFIG_NET_SCH_SFQ is not set
+# CONFIG_NET_SCH_TEQL is not set
+# CONFIG_NET_SCH_TBF is not set
+# CONFIG_NET_SCH_GRED is not set
+# CONFIG_NET_SCH_DSMARK is not set
+# CONFIG_NET_SCH_NETEM is not set
+# CONFIG_NET_SCH_DRR is not set
+# CONFIG_NET_SCH_MQPRIO is not set
+# CONFIG_NET_SCH_CHOKE is not set
+# CONFIG_NET_SCH_QFQ is not set
+# CONFIG_NET_SCH_CODEL is not set
+# CONFIG_NET_SCH_FQ_CODEL is not set
+# CONFIG_NET_SCH_INGRESS is not set
+# CONFIG_NET_SCH_PLUG is not set
+
+#
+# Classification
+#
+CONFIG_NET_CLS=y
+# CONFIG_NET_CLS_BASIC is not set
+# CONFIG_NET_CLS_TCINDEX is not set
+# CONFIG_NET_CLS_ROUTE4 is not set
+# CONFIG_NET_CLS_FW is not set
+CONFIG_NET_CLS_U32=y
+# CONFIG_CLS_U32_PERF is not set
+# CONFIG_CLS_U32_MARK is not set
+# CONFIG_NET_CLS_RSVP is not set
+# CONFIG_NET_CLS_RSVP6 is not set
+# CONFIG_NET_CLS_FLOW is not set
+# CONFIG_NET_CLS_CGROUP is not set
+CONFIG_NET_EMATCH=y
+CONFIG_NET_EMATCH_STACK=32
+# CONFIG_NET_EMATCH_CMP is not set
+# CONFIG_NET_EMATCH_NBYTE is not set
+CONFIG_NET_EMATCH_U32=y
+# CONFIG_NET_EMATCH_META is not set
+# CONFIG_NET_EMATCH_TEXT is not set
+CONFIG_NET_CLS_ACT=y
+# CONFIG_NET_ACT_POLICE is not set
+# CONFIG_NET_ACT_GACT is not set
+# CONFIG_NET_ACT_MIRRED is not set
+# CONFIG_NET_ACT_IPT is not set
+# CONFIG_NET_ACT_NAT is not set
+# CONFIG_NET_ACT_PEDIT is not set
+# CONFIG_NET_ACT_SIMP is not set
+# CONFIG_NET_ACT_SKBEDIT is not set
+# CONFIG_NET_ACT_CSUM is not set
+# CONFIG_NET_CLS_IND is not set
+CONFIG_NET_SCH_FIFO=y
+# CONFIG_DCB is not set
+# CONFIG_DNS_RESOLVER is not set
+# CONFIG_BATMAN_ADV is not set
+# CONFIG_OPENVSWITCH is not set
+# CONFIG_VSOCKETS is not set
+# CONFIG_NETLINK_MMAP is not set
+# CONFIG_NETLINK_DIAG is not set
+CONFIG_RPS=y
+CONFIG_RFS_ACCEL=y
+CONFIG_XPS=y
+# CONFIG_NETPRIO_CGROUP is not set
+CONFIG_BQL=y
+# CONFIG_BPF_JIT is not set
+
+#
+# Network testing
+#
+# CONFIG_NET_PKTGEN is not set
+# CONFIG_NET_DROP_MONITOR is not set
+# CONFIG_HAMRADIO is not set
+# CONFIG_CAN is not set
+# CONFIG_IRDA is not set
+CONFIG_BT=y
+CONFIG_BT_RFCOMM=y
+CONFIG_BT_RFCOMM_TTY=y
+CONFIG_BT_BNEP=y
+CONFIG_BT_BNEP_MC_FILTER=y
+CONFIG_BT_BNEP_PROTO_FILTER=y
+CONFIG_BT_HIDP=y
+
+#
+# Bluetooth device drivers
+#
+# CONFIG_BT_HCIBTUSB is not set
+# CONFIG_BT_HCIBTSDIO is not set
+# CONFIG_BT_HCIUART is not set
+# CONFIG_BT_HCIBCM203X is not set
+# CONFIG_BT_HCIBPA10X is not set
+# CONFIG_BT_HCIBFUSB is not set
+# CONFIG_BT_HCIVHCI is not set
+# CONFIG_BT_MRVL is not set
+# CONFIG_BT_BCM4330 is not set
+CONFIG_SPRD_2331=y
+# CONFIG_AF_RXRPC is not set
+CONFIG_FIB_RULES=y
+CONFIG_WIRELESS=y
+CONFIG_CFG80211=y
+# CONFIG_NL80211_TESTMODE is not set
+# CONFIG_CFG80211_DEVELOPER_WARNINGS is not set
+# CONFIG_CFG80211_REG_DEBUG is not set
+# CONFIG_CFG80211_CERTIFICATION_ONUS is not set
+CONFIG_CFG80211_DEFAULT_PS=y
+# CONFIG_CFG80211_DEBUGFS is not set
+CONFIG_CFG80211_INTERNAL_REGDB=y
+# CONFIG_CFG80211_WEXT is not set
+# CONFIG_LIB80211 is not set
+CONFIG_CFG80211_ALLOW_RECONNECT=y
+# CONFIG_MAC80211 is not set
+# CONFIG_WIMAX is not set
+CONFIG_RFKILL=y
+CONFIG_RFKILL_PM=y
+# CONFIG_RFKILL_INPUT is not set
+# CONFIG_RFKILL_REGULATOR is not set
+# CONFIG_RFKILL_GPIO is not set
+# CONFIG_NET_9P is not set
+# CONFIG_CAIF is not set
+# CONFIG_CEPH_LIB is not set
+# CONFIG_NFC is not set
+CONFIG_SPRD_IMS_BRIDGE=y
+CONFIG_SPRD_IMS_BRIDGE_TEST=y
+CONFIG_HAVE_BPF_JIT=y
+# CONFIG_SPRD_TOUCH_BOOST is not set
+
+#
+# Device Drivers
+#
+
+#
+# Generic Driver Options
+#
+CONFIG_UEVENT_HELPER_PATH=""
+# CONFIG_DEVTMPFS is not set
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+CONFIG_FW_LOADER=y
+CONFIG_FIRMWARE_IN_KERNEL=y
+CONFIG_EXTRA_FIRMWARE=""
+CONFIG_FW_LOADER_USER_HELPER=y
+# CONFIG_DEBUG_DRIVER is not set
+# CONFIG_DEBUG_DEVRES is not set
+# CONFIG_SYS_HYPERVISOR is not set
+# CONFIG_GENERIC_CPU_DEVICES is not set
+# CONFIG_HAVE_CPU_AUTOPROBE is not set
+CONFIG_REGMAP=y
+CONFIG_REGMAP_I2C=y
+CONFIG_REGMAP_SPI=y
+CONFIG_DMA_SHARED_BUFFER=y
+# CONFIG_BATTERY_SAMSUNG is not set
+# CONFIG_SAMSUNG_LPM_MODE is not set
+# CONFIG_SAMSUNG_BATTERY_ENG_TEST is not set
+# CONFIG_STBC_SAMSUNG is not set
+# CONFIG_CHARGER_MAX8903 is not set
+# CONFIG_CHARGER_SMB347 is not set
+# CONFIG_MFD_RT9532 is not set
+# CONFIG_CHARGER_SM5414 is not set
+# CONFIG_CHARGER_SM5418 is not set
+
+#
+# Bus devices
+#
+# CONFIG_ARM_CCI is not set
+# CONFIG_CONNECTOR is not set
+# CONFIG_MTD is not set
+CONFIG_DTC=y
+CONFIG_OF=y
+
+#
+# Device Tree and Open Firmware support
+#
+# CONFIG_PROC_DEVICETREE is not set
+# CONFIG_OF_SELFTEST is not set
+CONFIG_OF_FLATTREE=y
+CONFIG_OF_EARLY_FLATTREE=y
+CONFIG_OF_ADDRESS=y
+CONFIG_OF_IRQ=y
+CONFIG_OF_DEVICE=y
+CONFIG_OF_I2C=y
+CONFIG_OF_NET=y
+CONFIG_OF_MDIO=y
+# CONFIG_PARPORT is not set
+CONFIG_BLK_DEV=y
+CONFIG_ZRAM=y
+# CONFIG_ZRAM_LZ4_COMPRESS is not set
+CONFIG_ZRAM_DEBUG=y
+# CONFIG_BLK_DEV_COW_COMMON is not set
+CONFIG_BLK_DEV_LOOP=y
+CONFIG_BLK_DEV_LOOP_MIN_COUNT=8
+# CONFIG_BLK_DEV_CRYPTOLOOP is not set
+# CONFIG_BLK_DEV_DRBD is not set
+# CONFIG_BLK_DEV_NBD is not set
+# CONFIG_BLK_DEV_RAM is not set
+# CONFIG_CDROM_PKTCDVD is not set
+# CONFIG_ATA_OVER_ETH is not set
+# CONFIG_MG_DISK is not set
+# CONFIG_BLK_DEV_RBD is not set
+
+#
+# Misc devices
+#
+# CONFIG_SENSORS_LIS3LV02D is not set
+# CONFIG_AD525X_DPOT is not set
+# CONFIG_ATMEL_PWM is not set
+# CONFIG_DUMMY_IRQ is not set
+# CONFIG_ICS932S401 is not set
+# CONFIG_ATMEL_SSC is not set
+# CONFIG_ENCLOSURE_SERVICES is not set
+# CONFIG_APDS9802ALS is not set
+# CONFIG_ISL29003 is not set
+# CONFIG_ISL29020 is not set
+# CONFIG_SENSORS_TSL2550 is not set
+# CONFIG_SENSORS_BH1780 is not set
+# CONFIG_SENSORS_BH1770 is not set
+# CONFIG_SENSORS_APDS990X is not set
+# CONFIG_HMC6352 is not set
+# CONFIG_SENSORS_ST480 is not set
+# CONFIG_SENSORS_AK8963 is not set
+# CONFIG_DS1682 is not set
+# CONFIG_TI_DAC7512 is not set
+CONFIG_UID_STAT=y
+# CONFIG_BMP085_I2C is not set
+# CONFIG_BMP085_SPI is not set
+# CONFIG_USB_SWITCH_FSA9480 is not set
+# CONFIG_LATTICE_ECP3_CONFIG is not set
+# CONFIG_SRAM is not set
+CONFIG_UID_CPUTIME=y
+# CONFIG_SPRD_BOARD_TYPE is not set
+CONFIG_SCX35L_SCENARIO_DFS=y
+# CONFIG_SCX35L_DFS_AUTO_FIT is not set
+# CONFIG_SPRD_OSC is not set
+CONFIG_SPRD_7SRESET=y
+CONFIG_OTP_SPRD=y
+CONFIG_OTP_SPRD_EFUSE=y
+CONFIG_OTP_SPRD_ADIE_EFUSE=y
+CONFIG_SPRD_VSP=y
+CONFIG_SPRD_JPG=y
+CONFIG_SPRD_VPP=y
+CONFIG_SPRD_CODA7L=y
+CONFIG_SPRD_CPROC=y
+
+#
+# 2351 modules
+#
+# CONFIG_SPRD_2351 is not set
+# CONFIG_CGX is not set
+# CONFIG_SR2351_FM is not set
+# CONFIG_FM_SEEK_STEP_50KHZ is not set
+# CONFIG_C2PORT is not set
+
+#
+# EEPROM support
+#
+# CONFIG_EEPROM_AT24 is not set
+# CONFIG_EEPROM_AT25 is not set
+# CONFIG_EEPROM_LEGACY is not set
+# CONFIG_EEPROM_MAX6875 is not set
+# CONFIG_EEPROM_93CX6 is not set
+# CONFIG_EEPROM_93XX46 is not set
+
+#
+# Texas Instruments shared transport line discipline
+#
+# CONFIG_TI_ST is not set
+# CONFIG_SENSORS_LIS3_SPI is not set
+# CONFIG_SENSORS_LIS3_I2C is not set
+
+#
+# Altera FPGA firmware download module
+#
+# CONFIG_ALTERA_STAPL is not set
+CONFIG_BENCHMARK=y
+CONFIG_BOOT_PERF=y
+
+#
+# SDIODEV modules
+#
+CONFIG_SDIODEV=y
+# CONFIG_SDIODEV_TEST is not set
+CONFIG_WCN_EXTENSION=y
+
+#
+# MARLIN DEBUG modules
+#
+CONFIG_MDBG_SDIO=y
+CONFIG_MDBG_RING=y
+CONFIG_MDBG=y
+CONFIG_SPRD_DOWNLOAD_IMG=y
+CONFIG_SPRD_DOWNLOAD_POWER_CTL=y
+CONFIG_GNSS_DBG=y
+# CONFIG_SPRD_HWCONFIG_CHECK is not set
+
+#
+# SCSI device support
+#
+CONFIG_SCSI_MOD=y
+CONFIG_RAID_ATTRS=y
+CONFIG_SCSI=y
+CONFIG_SCSI_DMA=y
+CONFIG_SCSI_TGT=y
+# CONFIG_SCSI_NETLINK is not set
+CONFIG_SCSI_PROC_FS=y
+
+#
+# SCSI support type (disk, tape, CD-ROM)
+#
+CONFIG_BLK_DEV_SD=y
+# CONFIG_CHR_DEV_ST is not set
+# CONFIG_CHR_DEV_OSST is not set
+CONFIG_BLK_DEV_SR=y
+CONFIG_BLK_DEV_SR_VENDOR=y
+CONFIG_CHR_DEV_SG=y
+# CONFIG_CHR_DEV_SCH is not set
+CONFIG_SCSI_MULTI_LUN=y
+# CONFIG_SCSI_CONSTANTS is not set
+# CONFIG_SCSI_LOGGING is not set
+CONFIG_SCSI_SCAN_ASYNC=y
+
+#
+# SCSI Transports
+#
+# CONFIG_SCSI_SPI_ATTRS is not set
+# CONFIG_SCSI_FC_ATTRS is not set
+# CONFIG_SCSI_ISCSI_ATTRS is not set
+# CONFIG_SCSI_SAS_ATTRS is not set
+# CONFIG_SCSI_SAS_LIBSAS is not set
+# CONFIG_SCSI_SRP_ATTRS is not set
+CONFIG_SCSI_LOWLEVEL=y
+# CONFIG_ISCSI_TCP is not set
+# CONFIG_ISCSI_BOOT_SYSFS is not set
+# CONFIG_SCSI_UFSHCD is not set
+# CONFIG_LIBFC is not set
+# CONFIG_LIBFCOE is not set
+# CONFIG_SCSI_DEBUG is not set
+CONFIG_SCSI_DH=y
+# CONFIG_SCSI_DH_RDAC is not set
+# CONFIG_SCSI_DH_HP_SW is not set
+# CONFIG_SCSI_DH_EMC is not set
+# CONFIG_SCSI_DH_ALUA is not set
+# CONFIG_SCSI_OSD_INITIATOR is not set
+# CONFIG_ATA is not set
+CONFIG_MD=y
+# CONFIG_BLK_DEV_MD is not set
+# CONFIG_BCACHE is not set
+CONFIG_BLK_DEV_DM_BUILTIN=y
+CONFIG_BLK_DEV_DM=y
+# CONFIG_DM_DEBUG is not set
+CONFIG_DM_BUFIO=y
+CONFIG_DM_CRYPT=y
+# CONFIG_DM_SNAPSHOT is not set
+# CONFIG_DM_THIN_PROVISIONING is not set
+# CONFIG_DM_CACHE is not set
+# CONFIG_DM_MIRROR is not set
+# CONFIG_DM_RAID is not set
+# CONFIG_DM_ZERO is not set
+# CONFIG_DM_MULTIPATH is not set
+# CONFIG_DM_DELAY is not set
+# CONFIG_DM_UEVENT is not set
+# CONFIG_DM_FLAKEY is not set
+CONFIG_DM_VERITY=y
+CONFIG_DM_VERITY_FEC=y
+# CONFIG_TARGET_CORE is not set
+CONFIG_NETDEVICES=y
+CONFIG_NET_CORE=y
+# CONFIG_BONDING is not set
+CONFIG_DUMMY=y
+# CONFIG_EQUALIZER is not set
+CONFIG_MII=y
+# CONFIG_IFB is not set
+# CONFIG_NET_TEAM is not set
+# CONFIG_MACVLAN is not set
+# CONFIG_VXLAN is not set
+# CONFIG_NETCONSOLE is not set
+# CONFIG_NETPOLL is not set
+# CONFIG_NET_POLL_CONTROLLER is not set
+CONFIG_TUN=y
+# CONFIG_VETH is not set
+
+#
+# CAIF transport drivers
+#
+
+#
+# Distributed Switch Architecture drivers
+#
+# CONFIG_NET_DSA_MV88E6XXX is not set
+# CONFIG_NET_DSA_MV88E6060 is not set
+# CONFIG_NET_DSA_MV88E6XXX_NEED_PPU is not set
+# CONFIG_NET_DSA_MV88E6131 is not set
+# CONFIG_NET_DSA_MV88E6123_61_65 is not set
+CONFIG_ETHERNET=y
+CONFIG_NET_CADENCE=y
+# CONFIG_ARM_AT91_ETHER is not set
+# CONFIG_MACB is not set
+CONFIG_NET_VENDOR_BROADCOM=y
+# CONFIG_B44 is not set
+# CONFIG_NET_CALXEDA_XGMAC is not set
+CONFIG_NET_VENDOR_CIRRUS=y
+# CONFIG_CS89x0 is not set
+# CONFIG_DM9000 is not set
+# CONFIG_DNET is not set
+CONFIG_NET_VENDOR_FARADAY=y
+# CONFIG_FTMAC100 is not set
+# CONFIG_FTGMAC100 is not set
+CONFIG_NET_VENDOR_INTEL=y
+CONFIG_NET_VENDOR_I825XX=y
+CONFIG_NET_VENDOR_MARVELL=y
+# CONFIG_MVMDIO is not set
+CONFIG_NET_VENDOR_MICREL=y
+# CONFIG_KS8851 is not set
+# CONFIG_KS8851_MLL is not set
+CONFIG_NET_VENDOR_MICROCHIP=y
+# CONFIG_ENC28J60 is not set
+CONFIG_NET_VENDOR_NATSEMI=y
+CONFIG_NET_VENDOR_8390=y
+# CONFIG_AX88796 is not set
+# CONFIG_ETHOC is not set
+CONFIG_NET_VENDOR_SEEQ=y
+CONFIG_NET_VENDOR_SMSC=y
+CONFIG_SMC91X=y
+# CONFIG_SMC911X is not set
+CONFIG_SMSC911X=y
+# CONFIG_SMSC911X_ARCH_HOOKS is not set
+CONFIG_NET_VENDOR_STMICRO=y
+# CONFIG_STMMAC_ETH is not set
+CONFIG_NET_VENDOR_WIZNET=y
+# CONFIG_WIZNET_W5100 is not set
+# CONFIG_WIZNET_W5300 is not set
+# CONFIG_SPRD_VETH is not set
+# CONFIG_BIH is not set
+CONFIG_PHYLIB=y
+
+#
+# MII PHY device drivers
+#
+# CONFIG_AT803X_PHY is not set
+# CONFIG_AMD_PHY is not set
+# CONFIG_MARVELL_PHY is not set
+# CONFIG_DAVICOM_PHY is not set
+# CONFIG_QSEMI_PHY is not set
+# CONFIG_LXT_PHY is not set
+# CONFIG_CICADA_PHY is not set
+# CONFIG_VITESSE_PHY is not set
+# CONFIG_SMSC_PHY is not set
+# CONFIG_BROADCOM_PHY is not set
+# CONFIG_BCM87XX_PHY is not set
+# CONFIG_ICPLUS_PHY is not set
+# CONFIG_REALTEK_PHY is not set
+# CONFIG_NATIONAL_PHY is not set
+# CONFIG_STE10XP is not set
+# CONFIG_LSI_ET1011C_PHY is not set
+# CONFIG_MICREL_PHY is not set
+# CONFIG_FIXED_PHY is not set
+# CONFIG_MDIO_BITBANG is not set
+# CONFIG_MDIO_BUS_MUX_GPIO is not set
+# CONFIG_MDIO_BUS_MUX_MMIOREG is not set
+# CONFIG_MICREL_KS8995MA is not set
+CONFIG_PPP=y
+CONFIG_PPP_BSDCOMP=y
+CONFIG_PPP_DEFLATE=y
+CONFIG_PPP_FILTER=y
+CONFIG_PPP_MPPE=y
+CONFIG_PPP_MULTILINK=y
+CONFIG_PPPOE=y
+CONFIG_PPTP=y
+CONFIG_PPPOL2TP=y
+CONFIG_PPPOLAC=y
+CONFIG_PPPOPNS=y
+CONFIG_PPP_ASYNC=y
+# CONFIG_PPP_SYNC_TTY is not set
+# CONFIG_SLIP is not set
+CONFIG_SLHC=y
+
+#
+# USB Network Adapters
+#
+# CONFIG_USB_CATC is not set
+# CONFIG_USB_KAWETH is not set
+# CONFIG_USB_PEGASUS is not set
+# CONFIG_USB_RTL8150 is not set
+# CONFIG_USB_RTL8152 is not set
+# CONFIG_USB_USBNET is not set
+# CONFIG_USB_HSO is not set
+# CONFIG_USB_IPHETH is not set
+CONFIG_WLAN=y
+# CONFIG_USB_ZD1201 is not set
+# CONFIG_USB_NET_RNDIS_WLAN is not set
+# CONFIG_WIFI_CONTROL_FUNC is not set
+# CONFIG_ATH_CARDS is not set
+# CONFIG_BCMDHD is not set
+# CONFIG_BRCMFMAC is not set
+# CONFIG_HOSTAP is not set
+# CONFIG_LIBERTAS is not set
+# CONFIG_WL_TI is not set
+# CONFIG_MWIFIEX is not set
+# CONFIG_SPRDWL is not set
+CONFIG_SC2331_MEM_ALLOC=y
+
+#
+# Enable WiMAX (Networking options) to see the WiMAX drivers
+#
+# CONFIG_WAN is not set
+# CONFIG_ISDN is not set
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+# CONFIG_INPUT_FF_MEMLESS is not set
+# CONFIG_INPUT_POLLDEV is not set
+# CONFIG_INPUT_SPARSEKMAP is not set
+CONFIG_INPUT_MATRIXKMAP=y
+
+#
+# Userland interfaces
+#
+# CONFIG_INPUT_MOUSEDEV is not set
+# CONFIG_INPUT_JOYDEV is not set
+CONFIG_INPUT_EVDEV=y
+# CONFIG_INPUT_EVBUG is not set
+# CONFIG_INPUT_KEYRESET is not set
+# CONFIG_INPUT_KEYCOMBO is not set
+
+#
+# Input Device Drivers
+#
+CONFIG_INPUT_KEYBOARD=y
+# CONFIG_KEYBOARD_ADP5588 is not set
+# CONFIG_KEYBOARD_ADP5589 is not set
+# CONFIG_KEYBOARD_ATKBD is not set
+# CONFIG_KEYBOARD_QT1070 is not set
+# CONFIG_KEYBOARD_QT2160 is not set
+# CONFIG_KEYBOARD_LKKBD is not set
+CONFIG_KEYBOARD_GPIO=y
+# CONFIG_KEYBOARD_GPIO_SPRD is not set
+# CONFIG_KEYBOARD_TCA6416 is not set
+# CONFIG_KEYBOARD_TCA8418 is not set
+# CONFIG_KEYBOARD_MATRIX is not set
+# CONFIG_KEYBOARD_LM8323 is not set
+# CONFIG_KEYBOARD_LM8333 is not set
+# CONFIG_KEYBOARD_MAX7359 is not set
+# CONFIG_KEYBOARD_MCS is not set
+# CONFIG_KEYBOARD_MPR121 is not set
+# CONFIG_KEYBOARD_NEWTON is not set
+# CONFIG_KEYBOARD_OPENCORES is not set
+# CONFIG_KEYBOARD_SAMSUNG is not set
+# CONFIG_KEYBOARD_STOWAWAY is not set
+# CONFIG_KEYBOARD_SUNKBD is not set
+# CONFIG_KEYBOARD_XTKBD is not set
+# CONFIG_KEYBOARD_SC is not set
+CONFIG_KEYBOARD_SPRD_EIC=y
+# CONFIG_KEYBOARD_TC350K_J33G is not set
+# CONFIG_KEYBOARD_TC300K is not set
+# CONFIG_KEYBOARD_TC350K is not set
+# CONFIG_KEYBOARD_MELFAS_MHS204 is not set
+# CONFIG_INPUT_MOUSE is not set
+# CONFIG_INPUT_JOYSTICK is not set
+# CONFIG_INPUT_TABLET is not set
+CONFIG_INPUT_TOUCHSCREEN=y
+# CONFIG_TOUCHSCREEN_ADS7846 is not set
+# CONFIG_TOUCHSCREEN_AD7877 is not set
+# CONFIG_TOUCHSCREEN_AD7879 is not set
+# CONFIG_TOUCHSCREEN_ATMEL_MXT is not set
+# CONFIG_TOUCHSCREEN_AUO_PIXCIR is not set
+# CONFIG_TOUCHSCREEN_BU21013 is not set
+# CONFIG_TOUCHSCREEN_CY8CTMG110 is not set
+# CONFIG_TOUCHSCREEN_CYTTSP_CORE is not set
+# CONFIG_TOUCHSCREEN_DYNAPRO is not set
+# CONFIG_TOUCHSCREEN_HAMPSHIRE is not set
+# CONFIG_TOUCHSCREEN_EETI is not set
+# CONFIG_TOUCHSCREEN_EGALAX is not set
+# CONFIG_TOUCHSCREEN_FUJITSU is not set
+# CONFIG_TOUCHSCREEN_ILI210X is not set
+# CONFIG_TOUCHSCREEN_GUNZE is not set
+# CONFIG_TOUCHSCREEN_ELO is not set
+# CONFIG_TOUCHSCREEN_WACOM_W8001 is not set
+# CONFIG_TOUCHSCREEN_WACOM_I2C is not set
+# CONFIG_TOUCHSCREEN_MAX11801 is not set
+# CONFIG_TOUCHSCREEN_MCS5000 is not set
+# CONFIG_TOUCHSCREEN_MMS114 is not set
+# CONFIG_TOUCHSCREEN_ZT7554 is not set
+# CONFIG_TOUCHSCREEN_MTOUCH is not set
+# CONFIG_TOUCHSCREEN_INEXIO is not set
+# CONFIG_TOUCHSCREEN_MK712 is not set
+# CONFIG_TOUCHSCREEN_PENMOUNT is not set
+# CONFIG_TOUCHSCREEN_EDT_FT5X06 is not set
+# CONFIG_TOUCHSCREEN_TOUCHRIGHT is not set
+# CONFIG_TOUCHSCREEN_TOUCHWIN is not set
+# CONFIG_TOUCHSCREEN_PIXCIR is not set
+# CONFIG_TOUCHSCREEN_USB_COMPOSITE is not set
+# CONFIG_TOUCHSCREEN_TOUCHIT213 is not set
+# CONFIG_TOUCHSCREEN_TSC_SERIO is not set
+# CONFIG_TOUCHSCREEN_TSC2005 is not set
+# CONFIG_TOUCHSCREEN_TSC2007 is not set
+# CONFIG_TOUCHSCREEN_W90X900 is not set
+# CONFIG_TOUCHSCREEN_ST1232 is not set
+# CONFIG_TOUCHSCREEN_TPS6507X is not set
+#CONFIG_TOUCHSCREEN_FOCALTECH=y
+# CONFIG_TOUCHSCREEN_FIRMWARE_UPGRADE is not set
+# CONFIG_TOUCHSCREEN_GOODIX is not set
+# CONFIG_TOUCHSCREEN_GOODIX2 is not set
+# CONFIG_TOUCHSCREEN_MMS136 is not set
+# CONFIG_TOUCHSCREEN_IST30XX is not set
+# CONFIG_TOUCHSCREEN_IST30XXA is not set
+# CONFIG_TOUCHSCREEN_IST30XXB is not set
+# CONFIG_TOUCHSCREEN_IST30XXC is not set
+# CONFIG_TOUCHSCREEN_IST30XXC_J33G is not set
+# CONFIG_TOUCHSCREEN_IST30XXD is not set
+# CONFIG_TOUCHSCREEN_MMS134 is not set
+# CONFIG_TOUCHSCREEN_MMS134S is not set
+CONFIG_TOUCHSCREEN_MSG2138_1=y
+#CONFIG_TOUCHSCREEN_MSG2XXX=y
+# CONFIG_TOUCHSCREEN_BT541_TS is not set
+# CONFIG_TOUCHSCREEN_MELFAS_MCS6000 is not set
+# CONFIG_TOUCHSCREEN_MELFAS_MCS8040L is not set
+# CONFIG_TOUCHSCREEN_MELFAS_MCS8040L_FOR_PIKEBJ1MINI is not set
+# CONFIG_TOUCHSCREEN_BT432_TS is not set
+CONFIG_INPUT_MISC=y
+# CONFIG_INPUT_AD714X is not set
+# CONFIG_INPUT_BMA150 is not set
+# CONFIG_INPUT_MMA8450 is not set
+# CONFIG_INPUT_MPU3050 is not set
+# CONFIG_INPUT_GP2A is not set
+# CONFIG_INPUT_GPIO_TILT_POLLED is not set
+# CONFIG_INPUT_ATI_REMOTE2 is not set
+# CONFIG_INPUT_KEYCHORD is not set
+# CONFIG_INPUT_KEYSPAN_REMOTE is not set
+# CONFIG_INPUT_KXTJ9 is not set
+# CONFIG_INPUT_POWERMATE is not set
+# CONFIG_INPUT_YEALINK is not set
+# CONFIG_INPUT_CM109 is not set
+CONFIG_INPUT_UINPUT=y
+CONFIG_INPUT_GPIO=y
+# CONFIG_INPUT_PCF8574 is not set
+# CONFIG_INPUT_GPIO_ROTARY_ENCODER is not set
+# CONFIG_INPUT_ADXL34X is not set
+# CONFIG_INPUT_IMS_PCU is not set
+# CONFIG_INPUT_CMA3000 is not set
+CONFIG_INPUT_HEADSET_SPRD_SC2723=y
+# CONFIG_INPUT_SPRD_HEADSET_SHARK is not set
+# CONFIG_INPUT_SPRD_HALL is not set
+# CONFIG_INPUT_LIS3DH_I2C is not set
+#CONFIG_INPUT_LIS3DH_I2C_INTERRUPT is not set
+# CONFIG_INPUT_LIS3DH_ZT_I2C is not set
+# CONFIG_INPUT_MEM3524X_I2C is not set
+# CONFIG_INPUT_LSM6DS0_I2C is not set
+CONFIG_INPUT_COMPASS_AF8133I_I2C=y
+CONFIG_INPUT_MC3XX0_I2C=y
+CONFIG_INPUT_LTR558_I2C=y
+# CONFIG_INPUT_EPL2182_I2C  is not set
+# CONFIG_INPUT_EPL259X_I2C is not set
+# CONFIG_INPUT_STK3311_I2C is not set
+# CONFIG_INPUT_FINGERPRINT is not set
+CONFIG_INPUT_FINGERPRINT=y
+CONFIG_FINGERPRINT_FPSENSOR=y
+
+
+#
+# Hardware I/O ports
+#
+# CONFIG_SERIO is not set
+# CONFIG_GAMEPORT is not set
+
+#
+# Character devices
+#
+CONFIG_TTY=y
+# CONFIG_VT is not set
+CONFIG_UNIX98_PTYS=y
+# CONFIG_DEVPTS_MULTIPLE_INSTANCES is not set
+# CONFIG_LEGACY_PTYS is not set
+# CONFIG_SERIAL_NONSTANDARD is not set
+# CONFIG_N_GSM is not set
+# CONFIG_TRACE_SINK is not set
+CONFIG_DEVMEM=y
+CONFIG_DEVKMEM=y
+
+#
+# Serial drivers
+#
+# CONFIG_SERIAL_8250 is not set
+
+#
+# Non-8250 serial port support
+#
+# CONFIG_SERIAL_MAX3100 is not set
+# CONFIG_SERIAL_MAX310X is not set
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+# CONFIG_SERIAL_SCCNXP is not set
+# CONFIG_SERIAL_TIMBERDALE is not set
+# CONFIG_SERIAL_ALTERA_JTAGUART is not set
+# CONFIG_SERIAL_ALTERA_UART is not set
+# CONFIG_SERIAL_IFX6X60 is not set
+# CONFIG_SERIAL_XILINX_PS_UART is not set
+# CONFIG_SERIAL_ARC is not set
+CONFIG_SERIAL_SPRD_UART=y
+CONFIG_SERIAL_SPRD_UART_NR=4
+CONFIG_SERIAL_SPRD_UART_CONSOLE=y
+# CONFIG_TS0710_MUX_ENABLE is not set
+# CONFIG_MODEM_INTF is not set
+# CONFIG_MUX_SDIO_OPT1_HAL is not set
+# CONFIG_TTY_PRINTK is not set
+# CONFIG_HVC_DCC is not set
+# CONFIG_IPMI_HANDLER is not set
+# CONFIG_HW_RANDOM is not set
+# CONFIG_R3964 is not set
+# CONFIG_RAW_DRIVER is not set
+# CONFIG_TCG_TPM is not set
+# CONFIG_DCC_TTY is not set
+# CONFIG_MUX_SPI_HAL is not set
+CONFIG_I2C=y
+CONFIG_I2C_BOARDINFO=y
+CONFIG_I2C_COMPAT=y
+CONFIG_I2C_CHARDEV=y
+# CONFIG_I2C_MUX is not set
+CONFIG_I2C_HELPER_AUTO=y
+
+#
+# I2C Hardware Bus support
+#
+
+#
+# I2C system bus drivers (mostly embedded / system-on-chip)
+#
+# CONFIG_I2C_CBUS_GPIO is not set
+# CONFIG_I2C_DESIGNWARE_PLATFORM is not set
+# CONFIG_I2C_GPIO is not set
+# CONFIG_I2C_OCORES is not set
+# CONFIG_I2C_PCA_PLATFORM is not set
+# CONFIG_I2C_PXA_PCI is not set
+# CONFIG_I2C_SIMTEC is not set
+# CONFIG_I2C_XILINX is not set
+# CONFIG_I2C_RESUME_EARLY is not set
+# CONFIG_I2C_5_CLOCK_TREE_BUG is not set
+CONFIG_I2C_SPRD=y
+
+#
+# External I2C/SMBus adapter drivers
+#
+# CONFIG_I2C_SPRD_V1 is not set
+
+#
+# External I2C/SMBus adapter drivers
+#
+# CONFIG_I2C_DIOLAN_U2C is not set
+# CONFIG_I2C_PARPORT_LIGHT is not set
+# CONFIG_I2C_TAOS_EVM is not set
+# CONFIG_I2C_TINY_USB is not set
+
+#
+# Other I2C/SMBus bus drivers
+#
+CONFIG_I2C_SPRD_R6P0_DUTY=y
+# CONFIG_I2C_STUB is not set
+# CONFIG_I2C_DEBUG_CORE is not set
+# CONFIG_I2C_DEBUG_ALGO is not set
+# CONFIG_I2C_DEBUG_BUS is not set
+CONFIG_SPI=y
+# CONFIG_SPI_DEBUG is not set
+CONFIG_SPI_MASTER=y
+
+#
+# SPI Master Controller Drivers
+#
+# CONFIG_SPI_ALTERA is not set
+# CONFIG_SPI_BITBANG is not set
+# CONFIG_SPI_GPIO is not set
+# CONFIG_SPI_FSL_SPI is not set
+# CONFIG_SPI_OC_TINY is not set
+# CONFIG_SPI_PXA2XX_PCI is not set
+# CONFIG_SPI_SC18IS602 is not set
+# CONFIG_SPI_XCOMM is not set
+# CONFIG_SPI_XILINX is not set
+CONFIG_SPI_SCX35=y
+# CONFIG_SPI_DESIGNWARE is not set
+
+#
+# SPI Protocol Masters
+#
+# CONFIG_SPI_SPIDEV is not set
+# CONFIG_SPI_TLE62X0 is not set
+
+#
+# Qualcomm MSM SSBI bus support
+#
+# CONFIG_SSBI is not set
+# CONFIG_HSI is not set
+
+#
+# PPS support
+#
+# CONFIG_PPS is not set
+
+#
+# PPS generators support
+#
+
+#
+# PTP clock support
+#
+# CONFIG_PTP_1588_CLOCK is not set
+
+#
+# Enable PHYLIB and NETWORK_PHY_TIMESTAMPING to see the additional clocks.
+#
+# CONFIG_PTP_1588_CLOCK_PCH is not set
+CONFIG_ARCH_HAVE_CUSTOM_GPIO_H=y
+CONFIG_ARCH_REQUIRE_GPIOLIB=y
+CONFIG_GPIO_DEVRES=y
+CONFIG_GPIOLIB=y
+CONFIG_OF_GPIO=y
+# CONFIG_DEBUG_GPIO is not set
+CONFIG_GPIO_SYSFS=y
+
+#
+# Memory mapped GPIO drivers:
+#
+# CONFIG_GPIO_GENERIC_PLATFORM is not set
+# CONFIG_GPIO_EM is not set
+# CONFIG_GPIO_RCAR is not set
+# CONFIG_GPIO_SPRD is not set
+# CONFIG_GPIO_TS5500 is not set
+# CONFIG_GPIO_GRGPIO is not set
+
+#
+# I2C GPIO expanders:
+#
+# CONFIG_GPIO_MAX7300 is not set
+# CONFIG_GPIO_MAX732X is not set
+# CONFIG_GPIO_PCF857X is not set
+# CONFIG_GPIO_SX150X is not set
+# CONFIG_GPIO_ADP5588 is not set
+# CONFIG_GPIO_ADNP is not set
+
+#
+# PCI GPIO expanders:
+#
+
+#
+# SPI GPIO expanders:
+#
+# CONFIG_GPIO_MAX7301 is not set
+# CONFIG_GPIO_MCP23S08 is not set
+# CONFIG_GPIO_MC33880 is not set
+# CONFIG_GPIO_74X164 is not set
+
+#
+# AC97 GPIO expanders:
+#
+
+#
+# MODULbus GPIO expanders:
+#
+
+#
+# USB GPIO expanders:
+#
+# CONFIG_W1 is not set
+CONFIG_POWER_SUPPLY=y
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+# CONFIG_PDA_POWER is not set
+# CONFIG_GENERIC_ADC_BATTERY is not set
+# CONFIG_TEST_POWER is not set
+# CONFIG_BATTERY_DS2780 is not set
+# CONFIG_BATTERY_DS2781 is not set
+# CONFIG_BATTERY_DS2782 is not set
+# CONFIG_BATTERY_SBS is not set
+# CONFIG_BATTERY_BQ27x00 is not set
+# CONFIG_BATTERY_MAX17040 is not set
+# CONFIG_BATTERY_MAX17042 is not set
+# CONFIG_CHARGER_LP8727 is not set
+# CONFIG_CHARGER_GPIO is not set
+# CONFIG_CHARGER_MANAGER is not set
+# CONFIG_CHARGER_BQ2415X is not set
+# CONFIG_SPRD_2713_POWER is not set
+CONFIG_SPRD_EXT_IC_POWER=y
+# CONFIG_SPRD_CHARGER_SM5701 is not set
+# CONFIG_SPRD_CHARGER_FAN5405 is not set
+CONFIG_SPRD_CHARGER_FAN54015=y
+# CONFIG_SPRD_CHARGER_SPRD_2701 is not set
+# CONFIG_BATTERY_GOLDFISH is not set
+# CONFIG_POWER_RESET is not set
+# CONFIG_POWER_RESET_RESTART is not set
+# CONFIG_POWER_AVS is not set
+# CONFIG_HWMON is not set
+CONFIG_THERMAL=y
+CONFIG_THERMAL_OF=y
+CONFIG_THERMAL_DEFAULT_GOV_STEP_WISE=y
+# CONFIG_THERMAL_DEFAULT_GOV_FAIR_SHARE is not set
+# CONFIG_THERMAL_DEFAULT_GOV_USER_SPACE is not set
+# CONFIG_THERMAL_GOV_FAIR_SHARE is not set
+CONFIG_THERMAL_GOV_STEP_WISE=y
+# CONFIG_THERMAL_GOV_USER_SPACE is not set
+# CONFIG_CPU_THERMAL is not set
+# CONFIG_THERMAL_EMULATION is not set
+CONFIG_THERMAL_DDIE=y
+# CONFIG_THERMAL_SC2723S_PMIC is not set
+# CONFIG_THERMAL_SC2713 is not set
+CONFIG_SPRD_CPU_COOLING=y
+# CONFIG_THERMAL_BOARD_SENSOR is not set
+# CONFIG_THERMAL_ALONE_DDIE is not set
+# CONFIG_WATCHDOG is not set
+CONFIG_SSB_POSSIBLE=y
+
+#
+# Sonics Silicon Backplane
+#
+# CONFIG_SSB is not set
+CONFIG_BCMA_POSSIBLE=y
+
+#
+# Broadcom specific AMBA
+#
+# CONFIG_BCMA is not set
+
+#
+# Multifunction device drivers
+#
+# CONFIG_MFD_CORE is not set
+# CONFIG_MFD_SM5504 is not set
+# CONFIG_MFD_SM5701 is not set
+# CONFIG_MFD_SPRD_SM5701 is not set
+# CONFIG_MFD_USB_TYPEC is not set
+# CONFIG_MFD_RT8973 is not set
+# CONFIG_MFD_AS3711 is not set
+# CONFIG_MFD_RT5033 is not set
+# CONFIG_PMIC_ADP5520 is not set
+# CONFIG_MFD_LM3632 is not set
+# CONFIG_MFD_AAT2870_CORE is not set
+# CONFIG_MFD_CROS_EC is not set
+# CONFIG_MFD_ASIC3 is not set
+# CONFIG_PMIC_DA903X is not set
+# CONFIG_MFD_DA9052_SPI is not set
+# CONFIG_MFD_DA9052_I2C is not set
+# CONFIG_MFD_DA9055 is not set
+# CONFIG_MFD_MC13XXX_SPI is not set
+# CONFIG_MFD_MC13XXX_I2C is not set
+# CONFIG_HTC_EGPIO is not set
+# CONFIG_HTC_PASIC3 is not set
+# CONFIG_HTC_I2CPLD is not set
+# CONFIG_MFD_88PM800 is not set
+# CONFIG_MFD_88PM805 is not set
+# CONFIG_MFD_88PM860X is not set
+# CONFIG_MFD_MAX77686 is not set
+# CONFIG_MFD_MAX77693 is not set
+# CONFIG_MFD_MAX8907 is not set
+# CONFIG_MFD_MAX8925 is not set
+# CONFIG_MFD_MAX8997 is not set
+# CONFIG_MFD_MAX8998 is not set
+# CONFIG_EZX_PCAP is not set
+# CONFIG_MFD_VIPERBOARD is not set
+# CONFIG_MFD_RETU is not set
+# CONFIG_MFD_PCF50633 is not set
+# CONFIG_MFD_RC5T583 is not set
+# CONFIG_MFD_SEC_CORE is not set
+# CONFIG_MFD_SI476X_CORE is not set
+# CONFIG_MFD_SM501 is not set
+# CONFIG_MFD_SMSC is not set
+# CONFIG_ABX500_CORE is not set
+# CONFIG_MFD_STMPE is not set
+# CONFIG_MFD_SYSCON is not set
+# CONFIG_MFD_TI_AM335X_TSCADC is not set
+# CONFIG_MFD_LP8788 is not set
+# CONFIG_MFD_PALMAS is not set
+# CONFIG_TPS6105X is not set
+# CONFIG_TPS65010 is not set
+# CONFIG_TPS6507X is not set
+# CONFIG_MFD_TPS65090 is not set
+# CONFIG_MFD_TPS65217 is not set
+# CONFIG_MFD_TPS6586X is not set
+# CONFIG_MFD_TPS65910 is not set
+# CONFIG_MFD_TPS65912 is not set
+# CONFIG_MFD_TPS65912_I2C is not set
+# CONFIG_MFD_TPS65912_SPI is not set
+# CONFIG_MFD_TPS80031 is not set
+# CONFIG_TWL4030_CORE is not set
+# CONFIG_TWL6040_CORE is not set
+# CONFIG_MFD_WL1273_CORE is not set
+# CONFIG_MFD_LM3533 is not set
+# CONFIG_MFD_TC3589X is not set
+# CONFIG_MFD_TMIO is not set
+# CONFIG_MFD_T7L66XB is not set
+# CONFIG_MFD_TC6387XB is not set
+# CONFIG_MFD_TC6393XB is not set
+# CONFIG_MFD_ARIZONA_I2C is not set
+# CONFIG_MFD_ARIZONA_SPI is not set
+# CONFIG_MFD_WM8400 is not set
+# CONFIG_MFD_WM831X_I2C is not set
+# CONFIG_MFD_WM831X_SPI is not set
+# CONFIG_MFD_WM8350_I2C is not set
+# CONFIG_MFD_WM8994 is not set
+# CONFIG_VEXPRESS_CONFIG is not set
+# CONFIG_MFD_SMUIC is not set
+CONFIG_REGULATOR=y
+# CONFIG_REGULATOR_DEBUG is not set
+# CONFIG_REGULATOR_DUMMY is not set
+# CONFIG_REGULATOR_FIXED_VOLTAGE is not set
+# CONFIG_REGULATOR_VIRTUAL_CONSUMER is not set
+# CONFIG_REGULATOR_USERSPACE_CONSUMER is not set
+# CONFIG_REGULATOR_GPIO is not set
+# CONFIG_REGULATOR_AD5398 is not set
+# CONFIG_REGULATOR_FAN53555 is not set
+# CONFIG_REGULATOR_ISL6271A is not set
+# CONFIG_REGULATOR_MAX1586 is not set
+# CONFIG_REGULATOR_MAX8649 is not set
+# CONFIG_REGULATOR_MAX8660 is not set
+# CONFIG_REGULATOR_MAX8952 is not set
+# CONFIG_REGULATOR_MAX8973 is not set
+# CONFIG_REGULATOR_LP3971 is not set
+# CONFIG_REGULATOR_LP3972 is not set
+# CONFIG_REGULATOR_LP872X is not set
+# CONFIG_REGULATOR_LP8755 is not set
+# CONFIG_REGULATOR_TPS51632 is not set
+# CONFIG_REGULATOR_TPS62360 is not set
+# CONFIG_REGULATOR_TPS65023 is not set
+# CONFIG_REGULATOR_TPS6507X is not set
+# CONFIG_REGULATOR_TPS6524X is not set
+CONFIG_REGULATOR_SC2723=y
+CONFIG_REGULATOR_SPRD_MAP_V1="mach/chip_x35l/__sc2723_regulator_map.h"
+# CONFIG_REGULATOR_EXT_DCDC is not set
+CONFIG_MEDIA_SUPPORT=y
+
+#
+# Multimedia core support
+#
+# CONFIG_VIDEO_GSPN_SPRD is not set
+CONFIG_VIDEO_GSP_SPRD=y
+CONFIG_VIDEO_DCAM_SPRD=y
+CONFIG_CAMERA_FLASH_SGM3140=y
+# CONFIG_CAMERA_FLASH_PARALLEL_BG is not set
+# CONFIG_CAMERA_FLASH_GPIO_8132 is not set
+# CONFIG_CAMERA_FLASH_GPIO_CTRL is not set
+# CONFIG_CAMERA_FLASH_SPRD_GPIO is not set
+# CONFIG_CAMERA_FLASH_SM5701 is not set
+# CONFIG_CAMERA_FLASH_SPRD_SM5701 is not set
+# CONFIG_CAMERA_FLASH_COMMON is not set
+CONFIG_MEDIA_CAMERA_SUPPORT=y
+# CONFIG_MEDIA_ANALOG_TV_SUPPORT is not set
+# CONFIG_MEDIA_DIGITAL_TV_SUPPORT is not set
+# CONFIG_MEDIA_RADIO_SUPPORT is not set
+# CONFIG_MEDIA_RC_SUPPORT is not set
+# CONFIG_MEDIA_CONTROLLER is not set
+CONFIG_VIDEO_DEV=y
+CONFIG_VIDEO_V4L2=y
+# CONFIG_VIDEO_ADV_DEBUG is not set
+# CONFIG_VIDEO_FIXED_MINOR_RANGES is not set
+CONFIG_VIDEOBUF_GEN=y
+CONFIG_VIDEOBUF_VMALLOC=y
+# CONFIG_VIDEO_V4L2_INT_DEVICE is not set
+# CONFIG_TTPCI_EEPROM is not set
+
+#
+# Media drivers
+#
+# CONFIG_MEDIA_USB_SUPPORT is not set
+CONFIG_V4L_PLATFORM_DRIVERS=y
+# CONFIG_SOC_CAMERA is not set
+# CONFIG_V4L_MEM2MEM_DRIVERS is not set
+# CONFIG_V4L_TEST_DRIVERS is not set
+
+#
+# Supported MMC/SDIO adapters
+#
+# CONFIG_CYPRESS_FIRMWARE is not set
+
+#
+# Media ancillary drivers (tuners, sensors, i2c, frontends)
+#
+CONFIG_MEDIA_SUBDRV_AUTOSELECT=y
+
+#
+# Audio decoders, processors and mixers
+#
+
+#
+# RDS decoders
+#
+
+#
+# Video decoders
+#
+
+#
+# Video and audio decoders
+#
+
+#
+# Video encoders
+#
+
+#
+# Camera sensor devices
+#
+
+#
+# Flash devices
+#
+
+#
+# Video improvement chips
+#
+
+#
+# Miscelaneous helper chips
+#
+
+#
+# Sensors used on soc_camera driver
+#
+
+#
+# Tools to develop new frontends
+#
+# CONFIG_DVB_DUMMY_FE is not set
+
+#
+# SPREADTRUM SC2331 FM driver
+#
+CONFIG_RADIO_SPRD2331=m
+
+#
+# Graphics support
+#
+# CONFIG_DRM is not set
+CONFIG_SPRD_IOMMU=y
+# CONFIG_VGASTATE is not set
+# CONFIG_VIDEO_OUTPUT_CONTROL is not set
+CONFIG_FB=y
+# CONFIG_FIRMWARE_EDID is not set
+# CONFIG_FB_DDC is not set
+# CONFIG_FB_BOOT_VESA_SUPPORT is not set
+CONFIG_FB_CFB_FILLRECT=y
+CONFIG_FB_CFB_COPYAREA=y
+CONFIG_FB_CFB_IMAGEBLIT=y
+# CONFIG_FB_CFB_REV_PIXELS_IN_BYTE is not set
+# CONFIG_FB_SYS_FILLRECT is not set
+# CONFIG_FB_SYS_COPYAREA is not set
+# CONFIG_FB_SYS_IMAGEBLIT is not set
+# CONFIG_FB_FOREIGN_ENDIAN is not set
+# CONFIG_FB_SYS_FOPS is not set
+# CONFIG_FB_SVGALIB is not set
+# CONFIG_FB_MACMODES is not set
+# CONFIG_FB_BACKLIGHT is not set
+# CONFIG_FB_MODE_HELPERS is not set
+# CONFIG_FB_TILEBLITTING is not set
+
+#
+# Frame buffer hardware drivers
+#
+# CONFIG_FB_ARMHDLCD is not set
+# CONFIG_FB_S1D13XXX is not set
+# CONFIG_FB_SMSCUFX is not set
+# CONFIG_FB_UDL is not set
+# CONFIG_FB_GOLDFISH is not set
+# CONFIG_FB_VIRTUAL is not set
+# CONFIG_FB_METRONOME is not set
+# CONFIG_FB_BROADSHEET is not set
+# CONFIG_FB_AUO_K190X is not set
+# CONFIG_FB_SIMPLE is not set
+CONFIG_FB_SCX35L=y
+CONFIG_SPRD_FB_SIZE=8
+# CONFIG_BMP_24BPP is not set
+# CONFIG_FB_LCD_HX8369B_MIPI_COREPRIMELITE is not set
+# CONFIG_FB_LCD_SD7798D_MIPI_COREPRIMELITE is not set
+# CONFIG_FB_LCD_HX8369B_MIPI_SHARKLS_Z3LTE is not set
+# CONFIG_FB_LCD_HX8369B_MIPI_SHARKLC_Z2LTE is not set
+# CONFIG_FB_LCD_SD7798D_MIPI_SHARKLS_Z3LTE is not set
+# CONFIG_FB_LCD_HX8369B_MIPI_SHARKL_J1POPLTE is not set
+# CONFIG_FB_LCD_HX8379C_MIPI_SHARKL_J1POPLTE is not set
+# CONFIG_FB_LCD_S6E8AA5X01_MIPI is not set
+# CONFIG_FB_LCD_HX8369B_MIPI_COREPRIMELITE_MARLIN is not set
+# CONFIG_FB_LCD_S6D77ALA_MIPI_PIKEBJ1MINI is not set
+# CONFIG_FB_LCD_SC7798D_MIPI_PIKEBJ1MINI is not set
+# CONFIG_FB_LCD_NT35516_MIPI is not set
+# CONFIG_FB_LCD_NT35596H_MIPI is not set
+# CONFIG_FB_LCD_NT35596H_RDC_MIPI is not set
+# CONFIG_FB_LCD_FL10802_MIPI is not set
+# CONFIG_FB_LCD_JD9161_MIPI is not set
+# CONFIG_FB_LCD_ILI6150_LVDS is not set
+# CONFIG_FB_LCD_RM68180_MIPI is not set
+# CONFIG_FB_LCD_HX8394D_MIPI is not set
+# CONFIG_FB_LCD_OLED_BACKLIGHT is not set
+CONFIG_FB_LCD_DUMMY=y
+# CONFIG_FB_LCD_NT35516_MCU is not set
+# CONFIG_FB_LCD_ILI9806E_MIPI is not set
+#CONFIG_FB_LCD_ILI9806E_2_MIPI=y
+# CONFIG_FB_LCD_S6D7AA0X62_MIPI is not set
+#CONFIG_FB_LCD_OTM8019A_MIPI=y
+#CONFIG_FB_LCD_HX8394A_MIPI=y
+#CONFIG_FB_LCD_ILI9881C_MIPI=y
+CONFIG_FB_LCD_ILI9881C_1_MIPI=y
+# CONFIG_FB_LCD_AMS549HQ01_MIPI is not set
+CONFIG_FB_LCD_RESERVE_MEM=y
+CONFIG_FB_LCD_OVERLAY_SUPPORT=y
+CONFIG_FB_VSYNC_SUPPORT=y
+# CONFIG_FB_DYNAMIC_CLK_SUPPORT is not set
+CONFIG_FB_DYNAMIC_FREQ_SCALING=y
+# CONFIG_FB_USE_MEGACORES_MIPI_DPHY is not set
+# CONFIG_FB_LOW_RES_SIMU is not set
+CONFIG_FB_TRIPLE_FRAMEBUFFER=y
+# CONFIG_EXYNOS_VIDEO is not set
+CONFIG_BACKLIGHT_LCD_SUPPORT=y
+CONFIG_LCD_CLASS_DEVICE=y
+# CONFIG_LCD_L4F00242T03 is not set
+# CONFIG_LCD_LMS283GF05 is not set
+# CONFIG_LCD_LTV350QV is not set
+# CONFIG_LCD_ILI922X is not set
+# CONFIG_LCD_ILI9320 is not set
+# CONFIG_LCD_TDO24M is not set
+# CONFIG_LCD_VGG2432A4 is not set
+# CONFIG_LCD_PLATFORM is not set
+# CONFIG_LCD_S6E63M0 is not set
+# CONFIG_LCD_LD9040 is not set
+# CONFIG_LCD_AMS369FG06 is not set
+# CONFIG_LCD_LMS501KF03 is not set
+# CONFIG_LCD_HX8357 is not set
+#CONFIG_BACKLIGHT_SPRD_PWM=y
+# CONFIG_BACKLIGHT_SPRD is not set
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+# CONFIG_BACKLIGHT_GENERIC is not set
+# CONFIG_BACKLIGHT_ADP8860 is not set
+# CONFIG_BACKLIGHT_ADP8870 is not set
+# CONFIG_BACKLIGHT_LM3630 is not set
+# CONFIG_BACKLIGHT_LM3632 is not set
+# CONFIG_BACKLIGHT_LM3639 is not set
+# CONFIG_BACKLIGHT_LP855X is not set
+# CONFIG_BACKLIGHT_KTD253B is not set
+# CONFIG_BACKLIGHT_KTD2801 is not set
+# CONFIG_BACKLIGHT_RT4502 is not set
+CONFIG_BACKLIGHT_LCD_PANEL_CABC=y
+# CONFIG_ADF is not set
+# CONFIG_LOGO is not set
+# CONFIG_FB_SSD1307 is not set
+CONFIG_SOUND=y
+# CONFIG_SOUND_OSS_CORE is not set
+CONFIG_SND=y
+CONFIG_SND_TIMER=y
+CONFIG_SND_PCM=y
+CONFIG_SND_HWDEP=y
+CONFIG_SND_RAWMIDI=y
+CONFIG_SND_COMPRESS_OFFLOAD=y
+CONFIG_SND_JACK=y
+# CONFIG_SND_SEQUENCER is not set
+# CONFIG_SND_MIXER_OSS is not set
+# CONFIG_SND_PCM_OSS is not set
+# CONFIG_SND_HRTIMER is not set
+# CONFIG_SND_DYNAMIC_MINORS is not set
+CONFIG_SND_SUPPORT_OLD_API=y
+CONFIG_SND_VERBOSE_PROCFS=y
+# CONFIG_SND_VERBOSE_PRINTK is not set
+# CONFIG_SND_DEBUG is not set
+# CONFIG_SND_RAWMIDI_SEQ is not set
+# CONFIG_SND_OPL3_LIB_SEQ is not set
+# CONFIG_SND_OPL4_LIB_SEQ is not set
+# CONFIG_SND_SBAWE_SEQ is not set
+# CONFIG_SND_EMU10K1_SEQ is not set
+CONFIG_SND_DRIVERS=y
+# CONFIG_SND_DUMMY is not set
+# CONFIG_SND_ALOOP is not set
+# CONFIG_SND_MTPAV is not set
+# CONFIG_SND_SERIAL_U16550 is not set
+# CONFIG_SND_MPU401 is not set
+CONFIG_SND_SPRD_SAUDIO=y
+CONFIG_SND_ARM=y
+CONFIG_SND_SPI=y
+CONFIG_SND_USB=y
+CONFIG_SND_USB_AUDIO=y
+# CONFIG_SND_USB_UA101 is not set
+# CONFIG_SND_USB_CAIAQ is not set
+# CONFIG_SND_USB_6FIRE is not set
+CONFIG_SND_SOC=y
+CONFIG_SND_SOC_PM_DOWN_TIME=5000
+# CONFIG_SND_ATMEL_SOC is not set
+# CONFIG_SND_DESIGNWARE_I2S is not set
+
+#
+# SoC Audio for the SPREADTRUM
+#
+CONFIG_SND_SOC_SPRD=y
+# CONFIG_SND_SOC_SPRD_VBC_R1P0_SPRD_CODEC_V1 is not set
+# CONFIG_SND_SOC_SPRD_VBC_R2P0_SPRD_CODEC_V3 is not set
+CONFIG_SND_SOC_SPRD_VBC_R2P0_SPRD_CODEC_V4=y
+# CONFIG_SND_SOC_SPRD_MACHINE_TI is not set
+# CONFIG_SND_SOC_SPRD_MACHINE_4AUDIENCE is not set
+# CONFIG_SND_SOC_SPRD_MACHINE_4REALTEK is not set
+CONFIG_SND_SOC_SPRD_I2S_V0_NULL_CODEC=y
+CONFIG_SND_SOC_SPRD_AUDIO_DEBUG=y
+# CONFIG_SND_SOC_SPRD_AUDIO_SIPC is not set
+
+#
+# SPRD AUDIO DMA
+#
+CONFIG_SND_SOC_SPRD_AUDIO_DMA=y
+CONFIG_SND_SOC_SPRD_AUDIO_BUFFER_USE_IRAM=y
+# CONFIG_SND_SOC_SPRD_IRAM_BACKUP is not set
+
+#
+# VBC
+#
+CONFIG_SND_SOC_SPRD_VBC_R2P0=y
+CONFIG_SND_SOC_SPRD_VBC_SRC_OPEN=y
+CONFIG_SND_SOC_VBC_SRC_SAMPLE_RATE=32000
+# CONFIG_SND_SOC_SPRD_VBC_LR_INVERT is not set
+# CONFIG_SND_SOC_VBC_SUPPORT_DYNAMIC_EQ is not set
+CONFIG_SND_SOC_SPRD_VAUDIO=y
+CONFIG_SND_SOC_SPRD_I2S=y
+
+#
+# SPRD Codec
+#
+# CONFIG_SND_SOC_SPRD_USE_EAR_JACK_TYPE13 is not set
+CONFIG_SND_SOC_SPRD_CODEC_V4=y
+CONFIG_SND_SOC_SPRD_AUDIO_USE_INTER_HP_PA_V4=y
+# CONFIG_SND_SOC_SPRD_CODEC_EAR_WITH_IN_SPK is not set
+CONFIG_SND_SOC_SPRD_CODEC_NO_HP_POP=y
+CONFIG_SND_SOC_SPRD_HP_POP_DELAY_TIME=0
+CONFIG_SND_SOC_NULL_CODEC=y
+CONFIG_SND_SOC_I2C_AND_SPI=y
+# CONFIG_SND_SOC_ALL_CODECS is not set
+
+#
+# Audience earSmart Audio chip
+#
+# CONFIG_SND_SOC_ES705_ESCORE is not set
+# CONFIG_SND_SOC_ES804_ESCORE is not set
+# CONFIG_SND_SOC_ES902_ESCORE is not set
+# CONFIG_SND_SOC_ES704_ESCORE is not set
+# CONFIG_SND_SOC_ES755 is not set
+# CONFIG_SND_SOC_ES705_EXTCLK_OVER_GPIO is not set
+# CONFIG_SND_SOC_ES854 is not set
+# CONFIG_SND_SOC_N100 is not set
+# CONFIG_SND_SOC_ES857 is not set
+# CONFIG_OSP_SENSORHUB is not set
+# CONFIG_SND_SOC_ES_CDEV is not set
+CONFIG_SND_SOC_ES_WAKEUP_GPIO=y
+# CONFIG_SND_SOC_ES_GPIO_A is not set
+# CONFIG_SND_SIMPLE_CARD is not set
+# CONFIG_SOUND_PRIME is not set
+
+#
+# HID support
+#
+CONFIG_HID=y
+# CONFIG_HID_BATTERY_STRENGTH is not set
+# CONFIG_HIDRAW is not set
+CONFIG_UHID=y
+CONFIG_HID_GENERIC=y
+
+#
+# Special HID drivers
+#
+# CONFIG_HID_A4TECH is not set
+# CONFIG_HID_ACRUX is not set
+CONFIG_HID_APPLE=y
+# CONFIG_HID_APPLEIR is not set
+# CONFIG_HID_AUREAL is not set
+# CONFIG_HID_BELKIN is not set
+# CONFIG_HID_CHERRY is not set
+# CONFIG_HID_CHICONY is not set
+# CONFIG_HID_PRODIKEYS is not set
+# CONFIG_HID_CYPRESS is not set
+# CONFIG_HID_DRAGONRISE is not set
+# CONFIG_HID_EMS_FF is not set
+# CONFIG_HID_ELECOM is not set
+# CONFIG_HID_EZKEY is not set
+# CONFIG_HID_HOLTEK is not set
+# CONFIG_HID_KEYTOUCH is not set
+# CONFIG_HID_KYE is not set
+# CONFIG_HID_UCLOGIC is not set
+# CONFIG_HID_WALTOP is not set
+# CONFIG_HID_GYRATION is not set
+# CONFIG_HID_ICADE is not set
+# CONFIG_HID_TWINHAN is not set
+# CONFIG_HID_KENSINGTON is not set
+# CONFIG_HID_LCPOWER is not set
+# CONFIG_HID_LENOVO_TPKBD is not set
+# CONFIG_HID_LOGITECH is not set
+CONFIG_HID_MAGICMOUSE=y
+# CONFIG_HID_MICROSOFT is not set
+# CONFIG_HID_MONTEREY is not set
+# CONFIG_HID_MULTITOUCH is not set
+# CONFIG_HID_NTRIG is not set
+# CONFIG_HID_ORTEK is not set
+# CONFIG_HID_PANTHERLORD is not set
+# CONFIG_HID_PETALYNX is not set
+# CONFIG_HID_PICOLCD is not set
+# CONFIG_HID_PRIMAX is not set
+# CONFIG_HID_PS3REMOTE is not set
+# CONFIG_HID_ROCCAT is not set
+# CONFIG_HID_SAITEK is not set
+# CONFIG_HID_SAMSUNG is not set
+# CONFIG_HID_SONY is not set
+# CONFIG_HID_SPEEDLINK is not set
+# CONFIG_HID_STEELSERIES is not set
+# CONFIG_HID_SUNPLUS is not set
+# CONFIG_HID_GREENASIA is not set
+# CONFIG_HID_SMARTJOYPLUS is not set
+# CONFIG_HID_TIVO is not set
+# CONFIG_HID_TOPSEED is not set
+# CONFIG_HID_THINGM is not set
+# CONFIG_HID_THRUSTMASTER is not set
+# CONFIG_HID_WACOM is not set
+# CONFIG_HID_WIIMOTE is not set
+# CONFIG_HID_ZEROPLUS is not set
+# CONFIG_HID_ZYDACRON is not set
+# CONFIG_HID_SENSOR_HUB is not set
+
+#
+# USB HID support
+#
+CONFIG_USB_HID=y
+# CONFIG_HID_PID is not set
+# CONFIG_USB_HIDDEV is not set
+
+#
+# I2C HID support
+#
+# CONFIG_I2C_HID is not set
+CONFIG_USB_SUPPORT=y
+CONFIG_USB_COMMON=y
+CONFIG_USB_ARCH_HAS_HCD=y
+CONFIG_USB=y
+# CONFIG_USB_DEBUG is not set
+CONFIG_USB_ANNOUNCE_NEW_DEVICES=y
+
+#
+# Miscellaneous USB options
+#
+CONFIG_USB_DEFAULT_PERSIST=y
+# CONFIG_USB_DYNAMIC_MINORS is not set
+CONFIG_USB_OTG=y
+# CONFIG_USB_OTG_WHITELIST is not set
+# CONFIG_USB_OTG_BLACKLIST_HUB is not set
+# CONFIG_USB_MON is not set
+# CONFIG_USB_WUSB_CBAF is not set
+
+#
+# USB Host Controller Drivers
+#
+# CONFIG_USB_C67X00_HCD is not set
+# CONFIG_USB_XHCI_HCD is not set
+# CONFIG_USB_EHCI_HCD is not set
+# CONFIG_USB_OXU210HP_HCD is not set
+# CONFIG_USB_ISP116X_HCD is not set
+# CONFIG_USB_ISP1760_HCD is not set
+# CONFIG_USB_ISP1362_HCD is not set
+# CONFIG_USB_OHCI_HCD is not set
+# CONFIG_USB_SL811_HCD is not set
+# CONFIG_USB_R8A66597_HCD is not set
+# CONFIG_USB_MUSB_HDRC is not set
+# CONFIG_USB_RENESAS_USBHS is not set
+
+#
+# USB Device Class drivers
+#
+# CONFIG_USB_ACM is not set
+# CONFIG_USB_PRINTER is not set
+# CONFIG_USB_WDM is not set
+# CONFIG_USB_TMC is not set
+
+#
+# NOTE: USB_STORAGE depends on SCSI but BLK_DEV_SD may
+#
+
+#
+# also be needed; see USB_STORAGE Help for more info
+#
+CONFIG_USB_STORAGE=y
+# CONFIG_USB_STORAGE_DEBUG is not set
+# CONFIG_USB_STORAGE_REALTEK is not set
+# CONFIG_USB_STORAGE_DATAFAB is not set
+# CONFIG_USB_STORAGE_FREECOM is not set
+# CONFIG_USB_STORAGE_ISD200 is not set
+# CONFIG_USB_STORAGE_USBAT is not set
+# CONFIG_USB_STORAGE_SDDR09 is not set
+# CONFIG_USB_STORAGE_SDDR55 is not set
+# CONFIG_USB_STORAGE_JUMPSHOT is not set
+# CONFIG_USB_STORAGE_ALAUDA is not set
+# CONFIG_USB_STORAGE_ONETOUCH is not set
+# CONFIG_USB_STORAGE_KARMA is not set
+# CONFIG_USB_STORAGE_CYPRESS_ATACB is not set
+# CONFIG_USB_STORAGE_ENE_UB6250 is not set
+
+#
+# USB Imaging devices
+#
+# CONFIG_USB_MDC800 is not set
+# CONFIG_USB_MICROTEK is not set
+# CONFIG_USB_DWC3 is not set
+# CONFIG_USB_CHIPIDEA is not set
+
+#
+# USB port drivers
+#
+# CONFIG_USB_SERIAL is not set
+
+#
+# USB Miscellaneous drivers
+#
+# CONFIG_USB_EMI62 is not set
+# CONFIG_USB_EMI26 is not set
+# CONFIG_USB_ADUTUX is not set
+# CONFIG_USB_SEVSEG is not set
+# CONFIG_USB_RIO500 is not set
+# CONFIG_USB_LEGOTOWER is not set
+# CONFIG_USB_LCD is not set
+# CONFIG_USB_LED is not set
+# CONFIG_USB_CYPRESS_CY7C63 is not set
+# CONFIG_USB_CYTHERM is not set
+# CONFIG_USB_IDMOUSE is not set
+# CONFIG_USB_FTDI_ELAN is not set
+# CONFIG_USB_APPLEDISPLAY is not set
+# CONFIG_USB_LD is not set
+# CONFIG_USB_TRANCEVIBRATOR is not set
+# CONFIG_USB_IOWARRIOR is not set
+# CONFIG_USB_TEST is not set
+# CONFIG_USB_ISIGHTFW is not set
+# CONFIG_USB_YUREX is not set
+# CONFIG_USB_EZUSB_FX2 is not set
+# CONFIG_USB_HSIC_USB3503 is not set
+# CONFIG_USB_PHY is not set
+CONFIG_USB_OTG_WAKELOCK=y
+CONFIG_USB_GADGET=y
+# CONFIG_USB_GADGET_DEBUG is not set
+# CONFIG_USB_GADGET_DEBUG_FILES is not set
+# CONFIG_USB_GADGET_DEBUG_FS is not set
+CONFIG_USB_GADGET_VBUS_DRAW=2
+CONFIG_USB_GADGET_STORAGE_NUM_BUFFERS=2
+
+#
+# USB Peripheral Controller
+#
+# CONFIG_USB_FUSB300 is not set
+# CONFIG_USB_R8A66597 is not set
+# CONFIG_USB_PXA27X is not set
+# CONFIG_USB_MV_UDC is not set
+# CONFIG_USB_MV_U3D is not set
+# CONFIG_USB_M66592 is not set
+# CONFIG_USB_NET2272 is not set
+# CONFIG_USB_DUMMY_HCD is not set
+CONFIG_USB_GADGET_SPRD_DWC=y
+CONFIG_USB_SPRD_DWC=y
+CONFIG_USB_LIBCOMPOSITE=y
+CONFIG_USB_F_ACM=y
+CONFIG_USB_U_SERIAL=y
+# CONFIG_USB_ZERO is not set
+# CONFIG_USB_AUDIO is not set
+# CONFIG_USB_ETH is not set
+# CONFIG_USB_G_NCM is not set
+# CONFIG_USB_GADGETFS is not set
+# CONFIG_USB_FUNCTIONFS is not set
+# CONFIG_USB_MASS_STORAGE is not set
+# CONFIG_USB_G_SERIAL is not set
+# CONFIG_USB_MIDI_GADGET is not set
+# CONFIG_USB_G_PRINTER is not set
+CONFIG_USB_G_ANDROID=y
+# CONFIG_USB_ANDROID_RNDIS_DWORD_ALIGNED is not set
+# CONFIG_USB_CDC_COMPOSITE is not set
+# CONFIG_USB_G_ACM_MS is not set
+# CONFIG_USB_G_MULTI is not set
+# CONFIG_USB_G_HID is not set
+# CONFIG_USB_G_DBGP is not set
+# CONFIG_USB_G_WEBCAM is not set
+CONFIG_USB_CORE_IP_293A=y
+# CONFIG_SPRD_USB_DEVICE_ONLY is not set
+# CONFIG_SHARK_PAD_HW_V102 is not set
+# CONFIG_USB_INTERRUPT_BY_MUIC is not set
+CONFIG_MMC=y
+# CONFIG_MMC_DEBUG is not set
+CONFIG_MMC_UNSAFE_RESUME=y
+# CONFIG_MMC_CLKGATE is not set
+# CONFIG_MMC_EMBEDDED_SDIO is not set
+# CONFIG_MMC_PARANOID_SD_INIT is not set
+
+#
+# MMC/SD/SDIO Card Drivers
+#
+CONFIG_MMC_BLOCK=y
+CONFIG_MMC_BLOCK_MINORS=32
+CONFIG_MMC_BLOCK_BOUNCE=y
+CONFIG_MMC_BLOCK_DEFERRED_RESUME=y
+# CONFIG_SDIO_UART is not set
+# CONFIG_SDIO_CHANNEL is not set
+CONFIG_SDIO_CARD=y
+CONFIG_MMC_TEST=m
+
+#
+# MMC/SD/SDIO Host Controller Drivers
+#
+# CONFIG_MMC_SDHCI is not set
+# CONFIG_MMC_SDHCI_PXAV3 is not set
+# CONFIG_MMC_SDHCI_PXAV2 is not set
+CONFIG_MMC_SDHOST=y
+# CONFIG_MMC_SDHOST_NEW is not set
+# CONFIG_MMC_DW is not set
+# CONFIG_MMC_VUB300 is not set
+# CONFIG_MMC_USHC is not set
+# CONFIG_SC_FPGA_DEBUG_MMC is not set
+# CONFIG_MEMSTICK is not set
+CONFIG_NEW_LEDS=y
+CONFIG_LEDS_CLASS=y
+
+#
+# LED drivers
+#
+# CONFIG_FLASHLIGHT is not set
+# CONFIG_LEDS_LM3530 is not set
+# CONFIG_LEDS_LM3642 is not set
+# CONFIG_LEDS_LM3648 is not set
+# CONFIG_LEDS_PCA9532 is not set
+# CONFIG_LEDS_GPIO is not set
+# CONFIG_LEDS_LP3944 is not set
+# CONFIG_LEDS_LP5521 is not set
+# CONFIG_LEDS_LP5523 is not set
+# CONFIG_LEDS_LP5562 is not set
+# CONFIG_LEDS_PCA955X is not set
+# CONFIG_LEDS_PCA9633 is not set
+# CONFIG_LEDS_DAC124S085 is not set
+# CONFIG_LEDS_REGULATOR is not set
+# CONFIG_LEDS_BD2802 is not set
+# CONFIG_LEDS_LT3593 is not set
+# CONFIG_LEDS_RENESAS_TPU is not set
+# CONFIG_LEDS_TCA6507 is not set
+# CONFIG_LEDS_LM355x is not set
+# CONFIG_LEDS_OT200 is not set
+# CONFIG_LEDS_BLINKM is not set
+# CONFIG_LEDS_SC8810_KB is not set
+CONFIG_SPRD_KPLED_2723=y
+CONFIG_LEDS_SPRD_BLTC_RGB=y
+# CONFIG_LEDS_SPRD_BLTC_RGB_2731 is not set
+# CONFIG_LEDS_SPRD_RGB is not set
+
+#
+# LED Triggers
+#
+# CONFIG_LEDS_TRIGGERS is not set
+CONFIG_SWITCH=y
+CONFIG_SWITCH_GPIO=y
+# CONFIG_ACCESSIBILITY is not set
+# CONFIG_EDAC is not set
+CONFIG_RTC_LIB=y
+CONFIG_RTC_CLASS=y
+CONFIG_RTC_HCTOSYS=y
+CONFIG_RTC_SYSTOHC=y
+CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
+# CONFIG_RTC_DEBUG is not set
+
+#
+# RTC interfaces
+#
+CONFIG_RTC_INTF_SYSFS=y
+CONFIG_RTC_INTF_PROC=y
+CONFIG_RTC_INTF_DEV=y
+# CONFIG_RTC_INTF_DEV_UIE_EMUL is not set
+# CONFIG_RTC_DRV_TEST is not set
+
+#
+# I2C RTC drivers
+#
+# CONFIG_RTC_DRV_DS1307 is not set
+# CONFIG_RTC_DRV_DS1374 is not set
+# CONFIG_RTC_DRV_DS1672 is not set
+# CONFIG_RTC_DRV_DS3232 is not set
+# CONFIG_RTC_DRV_MAX6900 is not set
+# CONFIG_RTC_DRV_RS5C372 is not set
+# CONFIG_RTC_DRV_ISL1208 is not set
+# CONFIG_RTC_DRV_ISL12022 is not set
+# CONFIG_RTC_DRV_X1205 is not set
+# CONFIG_RTC_DRV_PCF8523 is not set
+# CONFIG_RTC_DRV_PCF8563 is not set
+# CONFIG_RTC_DRV_PCF8583 is not set
+# CONFIG_RTC_DRV_M41T80 is not set
+# CONFIG_RTC_DRV_BQ32K is not set
+# CONFIG_RTC_DRV_S35390A is not set
+# CONFIG_RTC_DRV_FM3130 is not set
+# CONFIG_RTC_DRV_RX8581 is not set
+# CONFIG_RTC_DRV_RX8025 is not set
+# CONFIG_RTC_DRV_EM3027 is not set
+# CONFIG_RTC_DRV_RV3029C2 is not set
+
+#
+# SPI RTC drivers
+#
+# CONFIG_RTC_DRV_M41T93 is not set
+# CONFIG_RTC_DRV_M41T94 is not set
+# CONFIG_RTC_DRV_DS1305 is not set
+# CONFIG_RTC_DRV_DS1390 is not set
+# CONFIG_RTC_DRV_MAX6902 is not set
+# CONFIG_RTC_DRV_R9701 is not set
+# CONFIG_RTC_DRV_RS5C348 is not set
+# CONFIG_RTC_DRV_DS3234 is not set
+# CONFIG_RTC_DRV_PCF2123 is not set
+# CONFIG_RTC_DRV_RX4581 is not set
+
+#
+# Platform RTC drivers
+#
+# CONFIG_RTC_DRV_CMOS is not set
+# CONFIG_RTC_DRV_DS1286 is not set
+# CONFIG_RTC_DRV_DS1511 is not set
+# CONFIG_RTC_DRV_DS1553 is not set
+# CONFIG_RTC_DRV_DS1742 is not set
+# CONFIG_RTC_DRV_STK17TA8 is not set
+# CONFIG_RTC_DRV_M48T86 is not set
+# CONFIG_RTC_DRV_M48T35 is not set
+# CONFIG_RTC_DRV_M48T59 is not set
+# CONFIG_RTC_DRV_MSM6242 is not set
+# CONFIG_RTC_DRV_BQ4802 is not set
+# CONFIG_RTC_DRV_RP5C01 is not set
+# CONFIG_RTC_DRV_V3020 is not set
+# CONFIG_RTC_DRV_DS2404 is not set
+
+#
+# on-CPU RTC drivers
+#
+# CONFIG_RTC_DRV_SNVS is not set
+
+#
+# HID Sensor RTC drivers
+#
+# CONFIG_RTC_DRV_HID_SENSOR_TIME is not set
+CONFIG_RTC_DRV_SPRD=y
+CONFIG_RTC_START_YEAR=2012
+# CONFIG_DMADEVICES is not set
+# CONFIG_AUXDISPLAY is not set
+# CONFIG_UIO is not set
+# CONFIG_VIRT_DRIVERS is not set
+
+#
+# Virtio drivers
+#
+# CONFIG_VIRTIO_MMIO is not set
+
+#
+# Microsoft Hyper-V guest support
+#
+CONFIG_STAGING=y
+# CONFIG_USBIP_CORE is not set
+# CONFIG_PRISM2_USB is not set
+# CONFIG_ECHO is not set
+# CONFIG_COMEDI is not set
+# CONFIG_ASUS_OLED is not set
+# CONFIG_RTLLIB is not set
+# CONFIG_R8712U is not set
+# CONFIG_RTS5139 is not set
+# CONFIG_TRANZPORT is not set
+# CONFIG_LINE6_USB is not set
+# CONFIG_VT6656 is not set
+
+#
+# IIO staging drivers
+#
+
+#
+# Accelerometers
+#
+# CONFIG_ADIS16201 is not set
+# CONFIG_ADIS16203 is not set
+# CONFIG_ADIS16204 is not set
+# CONFIG_ADIS16209 is not set
+# CONFIG_ADIS16220 is not set
+# CONFIG_ADIS16240 is not set
+# CONFIG_LIS3L02DQ is not set
+# CONFIG_SCA3000 is not set
+
+#
+# Analog to digital converters
+#
+# CONFIG_AD7291 is not set
+# CONFIG_AD7606 is not set
+# CONFIG_AD799X is not set
+# CONFIG_AD7780 is not set
+# CONFIG_AD7816 is not set
+# CONFIG_AD7192 is not set
+# CONFIG_AD7280 is not set
+
+#
+# Analog digital bi-direction converters
+#
+# CONFIG_ADT7316 is not set
+
+#
+# Capacitance to digital converters
+#
+# CONFIG_AD7150 is not set
+# CONFIG_AD7152 is not set
+# CONFIG_AD7746 is not set
+
+#
+# Direct Digital Synthesis
+#
+# CONFIG_AD5930 is not set
+# CONFIG_AD9832 is not set
+# CONFIG_AD9834 is not set
+# CONFIG_AD9850 is not set
+# CONFIG_AD9852 is not set
+# CONFIG_AD9910 is not set
+# CONFIG_AD9951 is not set
+
+#
+# Digital gyroscope sensors
+#
+# CONFIG_ADIS16060 is not set
+# CONFIG_ADIS16130 is not set
+# CONFIG_ADIS16260 is not set
+
+#
+# Network Analyzer, Impedance Converters
+#
+# CONFIG_AD5933 is not set
+
+#
+# Light sensors
+#
+# CONFIG_SENSORS_ISL29018 is not set
+# CONFIG_SENSORS_ISL29028 is not set
+# CONFIG_TSL2583 is not set
+# CONFIG_TSL2x7x is not set
+
+#
+# Magnetometer sensors
+#
+# CONFIG_SENSORS_HMC5843 is not set
+
+#
+# Active energy metering IC
+#
+# CONFIG_ADE7753 is not set
+# CONFIG_ADE7754 is not set
+# CONFIG_ADE7758 is not set
+# CONFIG_ADE7759 is not set
+# CONFIG_ADE7854 is not set
+
+#
+# Resolver to digital converters
+#
+# CONFIG_AD2S90 is not set
+# CONFIG_AD2S1200 is not set
+# CONFIG_AD2S1210 is not set
+
+#
+# Triggers - standalone
+#
+# CONFIG_IIO_PERIODIC_RTC_TRIGGER is not set
+# CONFIG_IIO_GPIO_TRIGGER is not set
+# CONFIG_IIO_SYSFS_TRIGGER is not set
+# CONFIG_IIO_SIMPLE_DUMMY is not set
+# CONFIG_USB_ENESTORAGE is not set
+# CONFIG_BCM_WIMAX is not set
+# CONFIG_FT1000 is not set
+
+#
+# Speakup console speech
+#
+# CONFIG_TOUCHSCREEN_CLEARPAD_TM1217 is not set
+# CONFIG_TOUCHSCREEN_SYNAPTICS_I2C_RMI4 is not set
+# CONFIG_STAGING_MEDIA is not set
+
+#
+# Android
+#
+CONFIG_ANDROID=y
+CONFIG_ASHMEM=y
+CONFIG_ANDROID_TIMED_OUTPUT=y
+CONFIG_ANDROID_TIMED_GPIO=y
+CONFIG_ANDROID_LOW_MEMORY_KILLER=y
+CONFIG_ANDROID_LOW_MEMORY_KILLER_AUTODETECT_OOM_ADJ_VALUES=y
+CONFIG_OOM_NOTIFIER=y
+CONFIG_SEC_DEBUG_LMK_MEMINFO=y
+CONFIG_ANDROID_INTF_ALARM_DEV=y
+CONFIG_SYNC=y
+# CONFIG_SW_SYNC is not set
+CONFIG_ION=y
+# CONFIG_ION_TEST is not set
+# CONFIG_ION_DUMMY is not set
+CONFIG_ION_SPRD=y
+# CONFIG_ION_POOL_CACHE_POLICY is not set
+# CONFIG_FIQ_DEBUGGER is not set
+# CONFIG_FIQ_WATCHDOG is not set
+CONFIG_RUNTIME_COMPCACHE=y
+# CONFIG_KSWAPD_NOSWAP is not set
+# CONFIG_USB_WPAN_HCD is not set
+# CONFIG_WIMAX_GDM72XX is not set
+# CONFIG_CED1401 is not set
+# CONFIG_DGRP is not set
+
+#
+# Spreadtrum Platform Specific Drivers
+#
+
+#
+# Spreadtrum Adie Type
+#
+# CONFIG_ADIE_SC2713 is not set
+# CONFIG_ADIE_SC2713S is not set
+# CONFIG_ADIE_SC2711 is not set
+CONFIG_ADIE_SC2723=y
+# CONFIG_ADIE_SC2723S is not set
+CONFIG_BUS_MONITOR_DEBUG=y
+CONFIG_DJTAG=y
+CONFIG_BUS_MONITOR_PERF=y
+# CONFIG_SC_VIBRATOR is not set
+CONFIG_SPRD_VIBRATOR_2723=y
+CONFIG_SPRD_ION_MM_SIZE=1
+CONFIG_SPRD_ION_OVERLAY_SIZE=1
+# CONFIG_SPRD_VIBRATOR_2731 is not set
+CONFIG_EIRQ_NUM=0
+CONFIG_PIN_POWER_DOMAIN_SWITCH=y
+
+#
+# SC8830 ADIE type
+#
+CONFIG_SC_INTERNAL_ADI=y
+CONFIG_SC_INTERNAL_ADC=y
+CONFIG_SC_INTERNAL_WATCHDOG=y
+# CONFIG_FIX_V7TAGRAM_BUG is not set
+# CONFIG_DDR_VALIDITY_TEST is not set
+CONFIG_SPRD_CPU_DYNAMIC_HOTPLUG=y
+# CONFIG_SPRD_DCDC_DEBUG is not set
+# CONFIG_SPRD_AVS_DEBUG is not set
+# CONFIG_SPRD_AUX_DEBUG is not set
+CONFIG_SPRD_SIMCTRL=y
+# CONFIG_SPRD_MODEM_TD is not set
+# CONFIG_MODEM_W_MEMCUT is not set
+# CONFIG_SIPC_TD is not set
+# CONFIG_SIPC_WCDMA is not set
+# CONFIG_SIPC_WCN is not set
+CONFIG_SIPC_PMIC=y
+# CONFIG_SIPC_GGE is not set
+CONFIG_SIPC_LTE=y
+# CONFIG_VOIP_LTE is not set
+# CONFIG_CP_SWITCH is not set
+# CONFIG_EAR_LOW_LEVEL_DETECT is not set
+# CONFIG_SS_FUNCTION is not set
+# CONFIG_TSP_0_1_A is not set
+CONFIG_SPRD_MAILBOX=y
+# CONFIG_SPRD_MAILBOX_FIFO is not set
+CONFIG_SPRD_SYSDUMP=y
+CONFIG_SPRD_DEBUG=y
+CONFIG_SPRD_DEBUG_SCHED_LOG=y
+CONFIG_SPRD_DEBUG_DMALOG=y
+# CONFIG_GPS_LSI_S5N6420 is not set
+CONFIG_SPRD_EIRQSOFF_DEBUG=y
+CONFIG_CLKDEV_LOOKUP=y
+CONFIG_HAVE_CLK_PREPARE=y
+CONFIG_COMMON_CLK=y
+
+#
+# Common Clock Framework
+#
+CONFIG_COMMON_CLK_DEBUG=y
+# CONFIG_COMMON_CLK_SI5351 is not set
+CONFIG_HWSPINLOCK=y
+
+#
+# Hardware Spinlock drivers
+#
+CONFIG_HWSPINLOCK_SCI=y
+CONFIG_CLKSRC_OF=y
+CONFIG_CLKSRC_MMIO=y
+# CONFIG_ARM_ARCH_TIMER_EVTSTREAM is not set
+# CONFIG_MAILBOX is not set
+# CONFIG_MCDT is not set
+# CONFIG_IOMMU_SUPPORT is not set
+
+#
+# Remoteproc drivers
+#
+# CONFIG_STE_MODEM_RPROC is not set
+
+#
+# Rpmsg drivers
+#
+# CONFIG_PM_DEVFREQ is not set
+# CONFIG_EXTCON is not set
+# CONFIG_MEMORY is not set
+CONFIG_IIO=y
+CONFIG_IIO_BUFFER=y
+# CONFIG_IIO_BUFFER_CB is not set
+CONFIG_IIO_KFIFO_BUF=y
+CONFIG_IIO_TRIGGER=y
+CONFIG_IIO_CONSUMERS_PER_TRIGGER=2
+
+#
+# Accelerometers
+#
+# CONFIG_KXSD9 is not set
+# CONFIG_IIO_ST_ACCEL_3AXIS is not set
+
+#
+# Analog to digital converters
+#
+# CONFIG_AD7266 is not set
+# CONFIG_AD7298 is not set
+# CONFIG_AD7923 is not set
+# CONFIG_AD7791 is not set
+# CONFIG_AD7793 is not set
+# CONFIG_AD7476 is not set
+# CONFIG_AD7887 is not set
+# CONFIG_EXYNOS_ADC is not set
+# CONFIG_MAX1363 is not set
+# CONFIG_TI_ADC081C is not set
+
+#
+# Amplifiers
+#
+# CONFIG_AD8366 is not set
+
+#
+# Hid Sensor IIO Common
+#
+
+#
+# Digital to analog converters
+#
+# CONFIG_AD5064 is not set
+# CONFIG_AD5360 is not set
+# CONFIG_AD5380 is not set
+# CONFIG_AD5421 is not set
+# CONFIG_AD5624R_SPI is not set
+# CONFIG_AD5446 is not set
+# CONFIG_AD5449 is not set
+# CONFIG_AD5504 is not set
+# CONFIG_AD5755 is not set
+# CONFIG_AD5764 is not set
+# CONFIG_AD5791 is not set
+# CONFIG_AD5686 is not set
+# CONFIG_MAX517 is not set
+# CONFIG_MCP4725 is not set
+
+#
+# Frequency Synthesizers DDS/PLL
+#
+
+#
+# Clock Generator/Distribution
+#
+# CONFIG_AD9523 is not set
+
+#
+# Phase-Locked Loop (PLL) frequency synthesizers
+#
+# CONFIG_ADF4350 is not set
+
+#
+# Digital gyroscope sensors
+#
+# CONFIG_ADIS16080 is not set
+# CONFIG_ADIS16136 is not set
+# CONFIG_ADXRS450 is not set
+# CONFIG_IIO_ST_GYRO_3AXIS is not set
+# CONFIG_ITG3200 is not set
+# CONFIG_INV_MPU_IIO is not set
+
+#
+# Light sensors
+#
+# CONFIG_ADJD_S311 is not set
+# CONFIG_SENSORS_TSL2563 is not set
+# CONFIG_VCNL4000 is not set
+# CONFIG_INV_YAS53X_IIO is not set
+# CONFIG_INV_AMI306_IIO is not set
+# CONFIG_PWM is not set
+CONFIG_IRQCHIP=y
+CONFIG_ARM_GIC=y
+# CONFIG_IPACK_BUS is not set
+# CONFIG_RESET_CONTROLLER is not set
+
+#
+# SIPC modules
+#
+CONFIG_SIPC=y
+# CONFIG_SIPC_V2 is not set
+CONFIG_SIPC_SPIPE=y
+# CONFIG_SIPC_SPOOL is not set
+CONFIG_SIPC_SETH=y
+CONFIG_SETH_OPT=y
+# CONFIG_SETH_GRO_DISABLE is not set
+# CONFIG_SBLOCK_SHARE_BLOCKS is not set
+CONFIG_SETH_RAWIP=y
+CONFIG_ZERO_COPY_SIPX=y
+CONFIG_SIPCMEM_CACHE_EN=y
+CONFIG_SIPC_STTY=y
+# CONFIG_SIPC_DUAL_SIM_PLUG is not set
+
+#
+# Sensor support
+#
+# CONFIG_SENSORS is not set
+
+#
+# SPRD IQ modules
+#
+CONFIG_SPRD_IQ=y
+# CONFIG_HAS_AUTOTST is not set
+CONFIG_GATOR=m
+# CONFIG_NO_HOTPLUG_POLICY is not set
+# CONFIG_SS_TOUCH_BOOST_CPU_HOTPLUG is not set
+# CONFIG_TEE_SUPPORT is not set
+
+#
+# Trusty
+#
+# CONFIG_TRUSTY is not set
+
+#
+# Android
+#
+CONFIG_ANDROID_BINDER_IPC=y
+CONFIG_ANDROID_BINDER_IPC_32BIT=y
+
+#
+# File systems
+#
+CONFIG_DCACHE_WORD_ACCESS=y
+# CONFIG_EXT2_FS is not set
+# CONFIG_EXT3_FS is not set
+CONFIG_EXT4_FS=y
+CONFIG_EXT4_USE_FOR_EXT23=y
+# CONFIG_EXT4_FS_POSIX_ACL is not set
+CONFIG_EXT4_FS_SECURITY=y
+# CONFIG_EXT4_FS_ENCRYPTION is not set
+# CONFIG_EXT4_DEBUG is not set
+# CONFIG_SDCARD_FS is not set
+CONFIG_JBD2=y
+# CONFIG_JBD2_DEBUG is not set
+CONFIG_FS_MBCACHE=y
+# CONFIG_REISERFS_FS is not set
+# CONFIG_JFS_FS is not set
+# CONFIG_XFS_FS is not set
+# CONFIG_GFS2_FS is not set
+# CONFIG_OCFS2_FS is not set
+# CONFIG_BTRFS_FS is not set
+# CONFIG_NILFS2_FS is not set
+# CONFIG_FS_POSIX_ACL is not set
+CONFIG_FILE_LOCKING=y
+CONFIG_FSNOTIFY=y
+# CONFIG_DNOTIFY is not set
+CONFIG_INOTIFY_USER=y
+# CONFIG_FANOTIFY is not set
+# CONFIG_QUOTA is not set
+# CONFIG_QUOTACTL is not set
+# CONFIG_AUTOFS4_FS is not set
+CONFIG_FUSE_FS=y
+# CONFIG_CUSE is not set
+
+#
+# Caches
+#
+# CONFIG_FSCACHE is not set
+
+#
+# CD-ROM/DVD Filesystems
+#
+# CONFIG_ISO9660_FS is not set
+# CONFIG_UDF_FS is not set
+
+#
+# DOS/FAT/NT Filesystems
+#
+CONFIG_FAT_FS=y
+# CONFIG_MSDOS_FS is not set
+CONFIG_VFAT_FS=y
+CONFIG_FAT_DEFAULT_CODEPAGE=437
+CONFIG_FAT_DEFAULT_IOCHARSET="iso8859-1"
+CONFIG_EXFAT_FS=y
+CONFIG_EXFAT_VIRTUAL_XATTR=y
+CONFIG_EXFAT_VIRTUAL_XATTR_SELINUX_LABEL="u:object_r:sdcard_external:s0"
+# CONFIG_NTFS_FS is not set
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+CONFIG_PROC_SYSCTL=y
+CONFIG_PROC_PAGE_MONITOR=y
+CONFIG_SPRD_DEBUG_FRAME=y
+# CONFIG_SPRD_DEBUG_PHYMEM_INFO is not set
+# CONFIG_SPRD_DEBUG_USRPROCMEM_INFO is not set
+# CONFIG_SPRD_DEBUG_USRPROCSTACK_INFO is not set
+CONFIG_SPRD_DEBUG_CPU_RATE=y
+CONFIG_SPRD_DEBUG_MORE_SMAPS_INFO=y
+CONFIG_SPRD_UBOOT_LOG_DUMP=y
+CONFIG_SYSFS=y
+CONFIG_TMPFS=y
+# CONFIG_TMPFS_POSIX_ACL is not set
+# CONFIG_TMPFS_XATTR is not set
+# CONFIG_HUGETLB_PAGE is not set
+CONFIG_CONFIGFS_FS=y
+CONFIG_MISC_FILESYSTEMS=y
+# CONFIG_ADFS_FS is not set
+# CONFIG_AFFS_FS is not set
+# CONFIG_ECRYPT_FS is not set
+# CONFIG_HFS_FS is not set
+# CONFIG_HFSPLUS_FS is not set
+# CONFIG_BEFS_FS is not set
+# CONFIG_BFS_FS is not set
+# CONFIG_EFS_FS is not set
+# CONFIG_LOGFS is not set
+# CONFIG_CRAMFS is not set
+# CONFIG_SQUASHFS is not set
+# CONFIG_VXFS_FS is not set
+# CONFIG_MINIX_FS is not set
+# CONFIG_OMFS_FS is not set
+# CONFIG_HPFS_FS is not set
+# CONFIG_QNX4FS_FS is not set
+# CONFIG_QNX6FS_FS is not set
+# CONFIG_ROMFS_FS is not set
+CONFIG_PSTORE=y
+CONFIG_PSTORE_CONSOLE=y
+# CONFIG_PSTORE_PMSG is not set
+# CONFIG_PSTORE_FTRACE is not set
+CONFIG_PSTORE_RAM=y
+# CONFIG_SYSV_FS is not set
+# CONFIG_UFS_FS is not set
+# CONFIG_F2FS_FS is not set
+# CONFIG_NETWORK_FILESYSTEMS is not set
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="iso8859-1"
+CONFIG_NLS_CODEPAGE_437=y
+# CONFIG_NLS_CODEPAGE_737 is not set
+# CONFIG_NLS_CODEPAGE_775 is not set
+# CONFIG_NLS_CODEPAGE_850 is not set
+# CONFIG_NLS_CODEPAGE_852 is not set
+# CONFIG_NLS_CODEPAGE_855 is not set
+# CONFIG_NLS_CODEPAGE_857 is not set
+# CONFIG_NLS_CODEPAGE_860 is not set
+# CONFIG_NLS_CODEPAGE_861 is not set
+# CONFIG_NLS_CODEPAGE_862 is not set
+# CONFIG_NLS_CODEPAGE_863 is not set
+# CONFIG_NLS_CODEPAGE_864 is not set
+# CONFIG_NLS_CODEPAGE_865 is not set
+# CONFIG_NLS_CODEPAGE_866 is not set
+# CONFIG_NLS_CODEPAGE_869 is not set
+# CONFIG_NLS_CODEPAGE_936 is not set
+# CONFIG_NLS_CODEPAGE_950 is not set
+# CONFIG_NLS_CODEPAGE_932 is not set
+# CONFIG_NLS_CODEPAGE_949 is not set
+# CONFIG_NLS_CODEPAGE_874 is not set
+# CONFIG_NLS_ISO8859_8 is not set
+# CONFIG_NLS_CODEPAGE_1250 is not set
+# CONFIG_NLS_CODEPAGE_1251 is not set
+CONFIG_NLS_ASCII=y
+CONFIG_NLS_ISO8859_1=y
+# CONFIG_NLS_ISO8859_2 is not set
+# CONFIG_NLS_ISO8859_3 is not set
+# CONFIG_NLS_ISO8859_4 is not set
+# CONFIG_NLS_ISO8859_5 is not set
+# CONFIG_NLS_ISO8859_6 is not set
+# CONFIG_NLS_ISO8859_7 is not set
+# CONFIG_NLS_ISO8859_9 is not set
+# CONFIG_NLS_ISO8859_13 is not set
+# CONFIG_NLS_ISO8859_14 is not set
+# CONFIG_NLS_ISO8859_15 is not set
+# CONFIG_NLS_KOI8_R is not set
+# CONFIG_NLS_KOI8_U is not set
+# CONFIG_NLS_MAC_ROMAN is not set
+# CONFIG_NLS_MAC_CELTIC is not set
+# CONFIG_NLS_MAC_CENTEURO is not set
+# CONFIG_NLS_MAC_CROATIAN is not set
+# CONFIG_NLS_MAC_CYRILLIC is not set
+# CONFIG_NLS_MAC_GAELIC is not set
+# CONFIG_NLS_MAC_GREEK is not set
+# CONFIG_NLS_MAC_ICELAND is not set
+# CONFIG_NLS_MAC_INUIT is not set
+# CONFIG_NLS_MAC_ROMANIAN is not set
+# CONFIG_NLS_MAC_TURKISH is not set
+CONFIG_NLS_UTF8=y
+# CONFIG_DLM is not set
+CONFIG_SPRD_IODEBUG=y
+# CONFIG_SPRD_IODEBUG_HOTPOINT is not set
+# CONFIG_SPRD_IODEBUG_IOSCHEDULE is not set
+CONFIG_SPRD_IODEBUG_VFS=y
+CONFIG_SPRD_IODEBUG_BDI=y
+# CONFIG_SPRD_METADATA_BUFFER_RECLAIM is not set
+# CONFIG_SPRD_LAZY_SHRINK_SBCACHE is not set
+
+#
+# Kernel hacking
+#
+CONFIG_PRINTK_TIME=y
+CONFIG_DEFAULT_MESSAGE_LOGLEVEL=4
+CONFIG_ENABLE_WARN_DEPRECATED=y
+CONFIG_ENABLE_MUST_CHECK=y
+CONFIG_FRAME_WARN=1024
+CONFIG_MAGIC_SYSRQ=y
+# CONFIG_STRIP_ASM_SYMS is not set
+# CONFIG_READABLE_ASM is not set
+# CONFIG_UNUSED_SYMBOLS is not set
+CONFIG_DEBUG_FS=y
+# CONFIG_HEADERS_CHECK is not set
+# CONFIG_DEBUG_SECTION_MISMATCH is not set
+CONFIG_DEBUG_KERNEL=y
+# CONFIG_DEBUG_SHIRQ is not set
+CONFIG_LOCKUP_DETECTOR=y
+CONFIG_HARDLOCKUP_DETECTOR_OTHER_CPU=y
+CONFIG_HARDLOCKUP_DETECTOR=y
+# CONFIG_BOOTPARAM_HARDLOCKUP_PANIC is not set
+CONFIG_BOOTPARAM_HARDLOCKUP_PANIC_VALUE=0
+# CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC is not set
+CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC_VALUE=0
+# CONFIG_PANIC_ON_OOPS is not set
+CONFIG_PANIC_ON_OOPS_VALUE=0
+# CONFIG_DETECT_HUNG_TASK is not set
+# CONFIG_SCHED_DEBUG is not set
+# CONFIG_SCHEDSTATS is not set
+# CONFIG_TIMER_STATS is not set
+# CONFIG_DEBUG_OBJECTS is not set
+# CONFIG_SLUB_DEBUG_ON is not set
+# CONFIG_SLUB_STATS is not set
+CONFIG_HAVE_DEBUG_KMEMLEAK=y
+# CONFIG_DEBUG_KMEMLEAK is not set
+# CONFIG_DEBUG_PREEMPT is not set
+# CONFIG_DEBUG_RT_MUTEXES is not set
+# CONFIG_RT_MUTEX_TESTER is not set
+# CONFIG_DEBUG_SPINLOCK is not set
+# CONFIG_DEBUG_MUTEXES is not set
+# CONFIG_DEBUG_LOCK_ALLOC is not set
+# CONFIG_PROVE_LOCKING is not set
+# CONFIG_LOCK_STAT is not set
+CONFIG_TRACE_IRQFLAGS=y
+# CONFIG_DEBUG_ATOMIC_SLEEP is not set
+# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
+CONFIG_STACKTRACE=y
+# CONFIG_DEBUG_STACK_USAGE is not set
+# CONFIG_DEBUG_KOBJECT is not set
+# CONFIG_DEBUG_HIGHMEM is not set
+CONFIG_DEBUG_BUGVERBOSE=y
+CONFIG_DEBUG_INFO=y
+# CONFIG_DEBUG_INFO_REDUCED is not set
+# CONFIG_DEBUG_VM is not set
+# CONFIG_DEBUG_WRITECOUNT is not set
+# CONFIG_DEBUG_MEMORY_INIT is not set
+# CONFIG_DEBUG_LIST is not set
+# CONFIG_TEST_LIST_SORT is not set
+# CONFIG_DEBUG_SG is not set
+# CONFIG_DEBUG_NOTIFIERS is not set
+# CONFIG_DEBUG_CREDENTIALS is not set
+CONFIG_FRAME_POINTER=y
+# CONFIG_BOOT_PRINTK_DELAY is not set
+
+#
+# RCU Debugging
+#
+# CONFIG_PROVE_RCU_DELAY is not set
+# CONFIG_SPARSE_RCU_POINTER is not set
+# CONFIG_RCU_TORTURE_TEST is not set
+CONFIG_RCU_CPU_STALL_TIMEOUT=60
+CONFIG_RCU_CPU_STALL_VERBOSE=y
+# CONFIG_RCU_CPU_STALL_INFO is not set
+# CONFIG_RCU_TRACE is not set
+# CONFIG_BACKTRACE_SELF_TEST is not set
+# CONFIG_DEBUG_BLOCK_EXT_DEVT is not set
+# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
+# CONFIG_DEBUG_PER_CPU_MAPS is not set
+# CONFIG_LKDTM is not set
+# CONFIG_NOTIFIER_ERROR_INJECTION is not set
+# CONFIG_FAULT_INJECTION is not set
+# CONFIG_DEBUG_PAGEALLOC is not set
+# CONFIG_SPRD_PAGERECORDER is not set
+CONFIG_NOP_TRACER=y
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y
+CONFIG_HAVE_DYNAMIC_FTRACE=y
+CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
+CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
+CONFIG_HAVE_C_RECORDMCOUNT=y
+CONFIG_TRACER_MAX_TRACE=y
+CONFIG_TRACE_CLOCK=y
+CONFIG_RING_BUFFER=y
+CONFIG_EVENT_TRACING=y
+CONFIG_CONTEXT_SWITCH_TRACER=y
+CONFIG_RING_BUFFER_ALLOW_SWAP=y
+CONFIG_TRACING=y
+CONFIG_GENERIC_TRACER=y
+CONFIG_TRACING_SUPPORT=y
+CONFIG_FTRACE=y
+CONFIG_FUNCTION_TRACER=y
+CONFIG_FUNCTION_GRAPH_TRACER=y
+CONFIG_IRQSOFF_TRACER=y
+CONFIG_PREEMPT_TRACER=y
+CONFIG_SCHED_TRACER=y
+CONFIG_FTRACE_SYSCALLS=y
+CONFIG_TRACER_SNAPSHOT=y
+CONFIG_TRACER_SNAPSHOT_PER_CPU_SWAP=y
+CONFIG_BRANCH_PROFILE_NONE=y
+# CONFIG_PROFILE_ANNOTATED_BRANCHES is not set
+# CONFIG_PROFILE_ALL_BRANCHES is not set
+# CONFIG_STACK_TRACER is not set
+CONFIG_BLK_DEV_IO_TRACE=y
+# CONFIG_PROBE_EVENTS is not set
+CONFIG_DYNAMIC_FTRACE=y
+# CONFIG_FUNCTION_PROFILER is not set
+CONFIG_FTRACE_MCOUNT_RECORD=y
+# CONFIG_FTRACE_STARTUP_TEST is not set
+# CONFIG_RING_BUFFER_BENCHMARK is not set
+# CONFIG_RING_BUFFER_STARTUP_TEST is not set
+# CONFIG_RBTREE_TEST is not set
+# CONFIG_INTERVAL_TREE_TEST is not set
+CONFIG_DYNAMIC_DEBUG=y
+# CONFIG_DMA_API_DEBUG is not set
+# CONFIG_ATOMIC64_SELFTEST is not set
+# CONFIG_SAMPLES is not set
+CONFIG_HAVE_ARCH_KGDB=y
+# CONFIG_KGDB is not set
+# CONFIG_TEST_STRING_HELPERS is not set
+# CONFIG_TEST_KSTRTOX is not set
+# CONFIG_STRICT_DEVMEM is not set
+CONFIG_ARM_UNWIND=y
+CONFIG_OLD_MCOUNT=y
+# CONFIG_DEBUG_USER is not set
+# CONFIG_DEBUG_RODATA is not set
+# CONFIG_DEBUG_LL is not set
+CONFIG_DEBUG_LL_INCLUDE="soc/sprd/debug-macro.S"
+CONFIG_UNCOMPRESS_INCLUDE="mach/uncompress.h"
+# CONFIG_PID_IN_CONTEXTIDR is not set
+# CONFIG_DEBUG_SET_MODULE_RONX is not set
+# CONFIG_CORESIGHT is not set
+
+#
+# Security options
+#
+CONFIG_KEYS=y
+# CONFIG_ENCRYPTED_KEYS is not set
+# CONFIG_KEYS_DEBUG_PROC_KEYS is not set
+# CONFIG_SECURITY_DMESG_RESTRICT is not set
+# CONFIG_SECURITY_PERF_EVENTS_RESTRICT is not set
+CONFIG_SECURITY=y
+# CONFIG_SECURITYFS is not set
+CONFIG_SECURITY_NETWORK=y
+# CONFIG_SECURITY_NETWORK_XFRM is not set
+# CONFIG_SECURITY_PATH is not set
+CONFIG_LSM_MMAP_MIN_ADDR=32768
+CONFIG_SECURITY_SELINUX=y
+# CONFIG_SECURITY_SELINUX_BOOTPARAM is not set
+# CONFIG_SECURITY_SELINUX_DISABLE is not set
+CONFIG_SECURITY_SELINUX_DEVELOP=y
+CONFIG_SECURITY_SELINUX_AVC_STATS=y
+CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE=1
+# CONFIG_SECURITY_SELINUX_POLICYDB_VERSION_MAX is not set
+# CONFIG_SECURITY_SMACK is not set
+# CONFIG_SECURITY_TOMOYO is not set
+# CONFIG_SECURITY_APPARMOR is not set
+# CONFIG_SECURITY_YAMA is not set
+# CONFIG_IMA is not set
+# CONFIG_EVM is not set
+CONFIG_ROOT_RECORDER=y
+CONFIG_DEFAULT_SECURITY_SELINUX=y
+# CONFIG_DEFAULT_SECURITY_DAC is not set
+CONFIG_DEFAULT_SECURITY="selinux"
+CONFIG_CRYPTO=y
+
+#
+# Crypto core or helper
+#
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_CRYPTO_AEAD=y
+CONFIG_CRYPTO_AEAD2=y
+CONFIG_CRYPTO_BLKCIPHER=y
+CONFIG_CRYPTO_BLKCIPHER2=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_HASH2=y
+CONFIG_CRYPTO_RNG=y
+CONFIG_CRYPTO_RNG2=y
+CONFIG_CRYPTO_PCOMP2=y
+CONFIG_CRYPTO_MANAGER=y
+CONFIG_CRYPTO_MANAGER2=y
+# CONFIG_CRYPTO_USER is not set
+CONFIG_CRYPTO_MANAGER_DISABLE_TESTS=y
+# CONFIG_CRYPTO_GF128MUL is not set
+# CONFIG_CRYPTO_NULL is not set
+# CONFIG_CRYPTO_PCRYPT is not set
+CONFIG_CRYPTO_NULL=y
+CONFIG_CRYPTO_WORKQUEUE=y
+# CONFIG_CRYPTO_CRYPTD is not set
+CONFIG_CRYPTO_AUTHENC=y
+# CONFIG_CRYPTO_TEST is not set
+
+#
+# Authenticated Encryption with Associated Data
+#
+# CONFIG_CRYPTO_CCM is not set
+# CONFIG_CRYPTO_GCM is not set
+# CONFIG_CRYPTO_SEQIV is not set
+
+#
+# Block modes
+#
+CONFIG_CRYPTO_CBC=y
+# CONFIG_CRYPTO_CTR is not set
+# CONFIG_CRYPTO_CTS is not set
+CONFIG_CRYPTO_ECB=y
+# CONFIG_CRYPTO_LRW is not set
+# CONFIG_CRYPTO_PCBC is not set
+# CONFIG_CRYPTO_XTS is not set
+
+#
+# Hash modes
+#
+# CONFIG_CRYPTO_CMAC is not set
+CONFIG_CRYPTO_HMAC=y
+CONFIG_CRYPTO_XCBC=y
+# CONFIG_CRYPTO_VMAC is not set
+
+#
+# Digest
+#
+CONFIG_CRYPTO_CRC32C=y
+# CONFIG_CRYPTO_CRC32 is not set
+# CONFIG_CRYPTO_GHASH is not set
+# CONFIG_CRYPTO_MD4 is not set
+CONFIG_CRYPTO_MD5=y
+# CONFIG_CRYPTO_MICHAEL_MIC is not set
+# CONFIG_CRYPTO_RMD128 is not set
+# CONFIG_CRYPTO_RMD160 is not set
+# CONFIG_CRYPTO_RMD256 is not set
+# CONFIG_CRYPTO_RMD320 is not set
+CONFIG_CRYPTO_SHA1=y
+# CONFIG_CRYPTO_SHA1_ARM is not set
+# CONFIG_CRYPTO_SHA1_ARM_NEON is not set
+CONFIG_CRYPTO_SHA256=y
+CONFIG_CRYPTO_SHA256_ARM=y
+CONFIG_CRYPTO_SHA512=y
+CONFIG_CRYPTO_SHA512_ARM_NEON=y
+# CONFIG_CRYPTO_TGR192 is not set
+# CONFIG_CRYPTO_WP512 is not set
+
+#
+# Ciphers
+#
+CONFIG_CRYPTO_AES=y
+CONFIG_CRYPTO_AES_ARM=y
+# CONFIG_CRYPTO_AES_ARM_BS is not set
+# CONFIG_CRYPTO_ANUBIS is not set
+CONFIG_CRYPTO_ARC4=y
+# CONFIG_CRYPTO_BLOWFISH is not set
+# CONFIG_CRYPTO_CAMELLIA is not set
+# CONFIG_CRYPTO_CAST5 is not set
+# CONFIG_CRYPTO_CAST6 is not set
+CONFIG_CRYPTO_DES=y
+# CONFIG_CRYPTO_FCRYPT is not set
+# CONFIG_CRYPTO_KHAZAD is not set
+# CONFIG_CRYPTO_SALSA20 is not set
+# CONFIG_CRYPTO_SEED is not set
+# CONFIG_CRYPTO_SERPENT is not set
+# CONFIG_CRYPTO_TEA is not set
+CONFIG_CRYPTO_TWOFISH=y
+CONFIG_CRYPTO_TWOFISH_COMMON=y
+
+#
+# Compression
+#
+CONFIG_CRYPTO_DEFLATE=y
+# CONFIG_CRYPTO_ZLIB is not set
+# CONFIG_CRYPTO_LZO is not set
+
+#
+# Random Number Generation
+#
+CONFIG_CRYPTO_ANSI_CPRNG=y
+# CONFIG_CRYPTO_USER_API_HASH is not set
+# CONFIG_CRYPTO_USER_API_SKCIPHER is not set
+CONFIG_CRYPTO_HW=y
+CONFIG_CRYPTO_DEV_SPRD_AES=y
+# CONFIG_ASYMMETRIC_KEY_TYPE is not set
+CONFIG_BINARY_PRINTF=y
+
+#
+# Library routines
+#
+CONFIG_BITREVERSE=y
+CONFIG_GENERIC_STRNCPY_FROM_USER=y
+CONFIG_GENERIC_STRNLEN_USER=y
+CONFIG_GENERIC_PCI_IOMAP=y
+CONFIG_GENERIC_IO=y
+CONFIG_CRC_CCITT=y
+CONFIG_CRC16=y
+# CONFIG_CRC_T10DIF is not set
+# CONFIG_CRC_ITU_T is not set
+CONFIG_CRC32=y
+# CONFIG_CRC32_SELFTEST is not set
+CONFIG_CRC32_SLICEBY8=y
+# CONFIG_CRC32_SLICEBY4 is not set
+# CONFIG_CRC32_SARWATE is not set
+# CONFIG_CRC32_BIT is not set
+# CONFIG_CRC7 is not set
+CONFIG_LIBCRC32C=y
+# CONFIG_CRC8 is not set
+CONFIG_AUDIT_GENERIC=y
+# CONFIG_AUDIT_ARCH_COMPAT_GENERIC is not set
+CONFIG_ZLIB_INFLATE=y
+CONFIG_ZLIB_DEFLATE=y
+CONFIG_LZO_COMPRESS=y
+CONFIG_LZO_DECOMPRESS=y
+# CONFIG_XZ_DEC is not set
+# CONFIG_XZ_DEC_BCJ is not set
+CONFIG_DECOMPRESS_GZIP=y
+CONFIG_LZO_SOFT_ALGO=y
+# CONFIG_LZO_HW_ALGO is not set
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_REED_SOLOMON=y
+CONFIG_REED_SOLOMON_ENC8=y
+CONFIG_REED_SOLOMON_DEC8=y
+CONFIG_TEXTSEARCH=y
+CONFIG_TEXTSEARCH_KMP=y
+CONFIG_TEXTSEARCH_BM=y
+CONFIG_TEXTSEARCH_FSM=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_DMA=y
+CONFIG_CPU_RMAP=y
+CONFIG_DQL=y
+CONFIG_NLATTR=y
+CONFIG_ARCH_HAS_ATOMIC64_DEC_IF_POSITIVE=y
+# CONFIG_AVERAGE is not set
+# CONFIG_CORDIC is not set
+# CONFIG_DDR is not set
+CONFIG_LIBFDT=y
+CONFIG_E_SHOW_MEM=y
+# CONFIG_VIRTUALIZATION is not set
Index: kernel/arch/arm/configs/sp9832a_2h11_volte_defconfig
===================================================================
--- kernel/arch/arm/configs/sp9832a_2h11_volte_defconfig	(revision 182224)
+++ kernel/arch/arm/configs/sp9832a_2h11_volte_defconfig	(revision 182225)
@@ -3442,7 +3442,7 @@
 #
 # CONFIG_CRYPTO_CMAC is not set
 CONFIG_CRYPTO_HMAC=y
-# CONFIG_CRYPTO_XCBC is not set
+CONFIG_CRYPTO_XCBC=y
 # CONFIG_CRYPTO_VMAC is not set
 
 #
Index: kernel/arch/arm/configs/sp9832a_2h12_volte_defconfig
===================================================================
--- kernel/arch/arm/configs/sp9832a_2h12_volte_defconfig	(revision 0)
+++ kernel/arch/arm/configs/sp9832a_2h12_volte_defconfig	(revision 182225)
@@ -0,0 +1,3561 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Linux/arm 3.10.65 Kernel Configuration
+#
+CONFIG_ARM=y
+CONFIG_ARM_HAS_SG_CHAIN=y
+CONFIG_SYS_SUPPORTS_APM_EMULATION=y
+CONFIG_HAVE_PROC_CPU=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_RWSEM_GENERIC_SPINLOCK=y
+CONFIG_ARCH_HAS_CPUFREQ=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_NEED_DMA_MAP_STATE=y
+CONFIG_VECTORS_BASE=0xffff0000
+# CONFIG_ARM_PATCH_PHYS_VIRT is not set
+CONFIG_NEED_MACH_GPIO_H=y
+CONFIG_NEED_MACH_IO_H=y
+CONFIG_PHYS_OFFSET=0x80000000
+CONFIG_GENERIC_BUG=y
+CONFIG_DEFCONFIG_LIST="/lib/modules/$UNAME_RELEASE/.config"
+CONFIG_IRQ_WORK=y
+CONFIG_BUILDTIME_EXTABLE_SORT=y
+
+#
+# General setup
+#
+CONFIG_INIT_ENV_ARG_LIMIT=32
+CONFIG_CROSS_COMPILE=""
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_HAVE_KERNEL_GZIP=y
+CONFIG_HAVE_KERNEL_LZMA=y
+CONFIG_HAVE_KERNEL_XZ=y
+CONFIG_HAVE_KERNEL_LZO=y
+CONFIG_KERNEL_GZIP=y
+# CONFIG_KERNEL_LZMA is not set
+# CONFIG_KERNEL_XZ is not set
+# CONFIG_KERNEL_LZO is not set
+CONFIG_DEFAULT_HOSTNAME="(none)"
+CONFIG_SWAP=y
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+# CONFIG_POSIX_MQUEUE is not set
+# CONFIG_FHANDLE is not set
+CONFIG_AUDIT=y
+CONFIG_HAVE_ARCH_AUDITSYSCALL=y
+CONFIG_AUDITSYSCALL=y
+CONFIG_AUDIT_WATCH=y
+CONFIG_AUDIT_TREE=y
+# CONFIG_AUDIT_LOGINUID_IMMUTABLE is not set
+CONFIG_HAVE_GENERIC_HARDIRQS=y
+
+#
+# IRQ subsystem
+#
+CONFIG_GENERIC_HARDIRQS=y
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_GENERIC_IRQ_SHOW=y
+CONFIG_HARDIRQS_SW_RESEND=y
+CONFIG_IRQ_DOMAIN=y
+# CONFIG_IRQ_DOMAIN_DEBUG is not set
+CONFIG_KTIME_SCALAR=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_GENERIC_CLOCKEVENTS_BUILD=y
+CONFIG_ARCH_HAS_TICK_BROADCAST=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+
+#
+# Timers subsystem
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ_COMMON=y
+# CONFIG_HZ_PERIODIC is not set
+CONFIG_NO_HZ_IDLE=y
+CONFIG_NO_HZ=y
+CONFIG_HIGH_RES_TIMERS=y
+
+#
+# CPU/Task time and stats accounting
+#
+CONFIG_TICK_CPU_ACCOUNTING=y
+# CONFIG_IRQ_TIME_ACCOUNTING is not set
+# CONFIG_BSD_PROCESS_ACCT is not set
+# CONFIG_TASKSTATS is not set
+
+#
+# RCU Subsystem
+#
+CONFIG_TREE_PREEMPT_RCU=y
+CONFIG_PREEMPT_RCU=y
+CONFIG_RCU_STALL_COMMON=y
+# CONFIG_RCU_USER_QS is not set
+CONFIG_RCU_FANOUT=32
+CONFIG_RCU_FANOUT_LEAF=16
+# CONFIG_RCU_FANOUT_EXACT is not set
+# CONFIG_RCU_FAST_NO_HZ is not set
+# CONFIG_TREE_RCU_TRACE is not set
+# CONFIG_RCU_BOOST is not set
+# CONFIG_RCU_NOCB_CPU is not set
+# CONFIG_IKCONFIG is not set
+CONFIG_LOG_BUF_SHIFT=17
+CONFIG_CGROUPS=y
+CONFIG_CGROUP_DEBUG=y
+CONFIG_CGROUP_FREEZER=y
+# CONFIG_CGROUP_DEVICE is not set
+# CONFIG_CPUSETS is not set
+CONFIG_CGROUP_CPUACCT=y
+CONFIG_RESOURCE_COUNTERS=y
+CONFIG_MEMCG=y
+CONFIG_MEMCG_SWAP=y
+CONFIG_MEMCG_SWAP_ENABLED=y
+# CONFIG_MEMCG_KMEM is not set
+# CONFIG_CGROUP_PERF is not set
+CONFIG_CGROUP_SCHED=y
+CONFIG_FAIR_GROUP_SCHED=y
+# CONFIG_CFS_BANDWIDTH is not set
+CONFIG_RT_GROUP_SCHED=y
+# CONFIG_BLK_CGROUP is not set
+# CONFIG_CHECKPOINT_RESTORE is not set
+# CONFIG_NAMESPACES is not set
+CONFIG_UIDGID_CONVERTED=y
+# CONFIG_UIDGID_STRICT_TYPE_CHECKS is not set
+# CONFIG_SCHED_AUTOGROUP is not set
+CONFIG_MM_OWNER=y
+# CONFIG_SYSFS_DEPRECATED is not set
+CONFIG_RELAY=y
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE=""
+CONFIG_RD_GZIP=y
+# CONFIG_RD_BZIP2 is not set
+# CONFIG_RD_LZMA is not set
+# CONFIG_RD_XZ is not set
+# CONFIG_RD_LZO is not set
+CONFIG_CC_OPTIMIZE_FOR_SIZE=y
+CONFIG_SYSCTL=y
+CONFIG_ANON_INODES=y
+CONFIG_HAVE_UID16=y
+CONFIG_HOTPLUG=y
+CONFIG_PANIC_TIMEOUT=0
+CONFIG_EXPERT=y
+CONFIG_UID16=y
+CONFIG_SYSCTL_SYSCALL=y
+CONFIG_KALLSYMS=y
+CONFIG_KALLSYMS_ALL=y
+CONFIG_PRINTK=y
+CONFIG_BUG=y
+CONFIG_ELF_CORE=y
+CONFIG_BASE_FULL=y
+CONFIG_FUTEX=y
+CONFIG_HAVE_FUTEX_CMPXCHG=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_TIMERFD=y
+CONFIG_EVENTFD=y
+CONFIG_SHMEM=y
+CONFIG_AIO=y
+CONFIG_EMBEDDED=y
+CONFIG_HAVE_PERF_EVENTS=y
+CONFIG_PERF_USE_VMALLOC=y
+
+#
+# Kernel Performance Events And Counters
+#
+CONFIG_PERF_EVENTS=y
+# CONFIG_DEBUG_PERF_USE_VMALLOC is not set
+CONFIG_VM_EVENT_COUNTERS=y
+CONFIG_SLUB_DEBUG=y
+CONFIG_COMPAT_BRK=y
+# CONFIG_SLAB is not set
+CONFIG_SLUB=y
+# CONFIG_SLOB is not set
+CONFIG_PROFILING=y
+CONFIG_TRACEPOINTS=y
+CONFIG_OPROFILE=y
+CONFIG_HAVE_OPROFILE=y
+# CONFIG_KPROBES is not set
+# CONFIG_JUMP_LABEL is not set
+# CONFIG_HAVE_64BIT_ALIGNED_ACCESS is not set
+CONFIG_HAVE_KPROBES=y
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_HAVE_ARCH_TRACEHOOK=y
+CONFIG_HAVE_DMA_ATTRS=y
+CONFIG_HAVE_DMA_CONTIGUOUS=y
+CONFIG_USE_GENERIC_SMP_HELPERS=y
+CONFIG_GENERIC_SMP_IDLE_THREAD=y
+CONFIG_GENERIC_IDLE_POLL_SETUP=y
+CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y
+CONFIG_HAVE_CLK=y
+CONFIG_HAVE_DMA_API_DEBUG=y
+CONFIG_HAVE_HW_BREAKPOINT=y
+CONFIG_HAVE_ARCH_JUMP_LABEL=y
+CONFIG_ARCH_WANT_IPC_PARSE_VERSION=y
+CONFIG_HAVE_ARCH_SECCOMP_FILTER=y
+CONFIG_SECCOMP_FILTER=y
+CONFIG_HAVE_CONTEXT_TRACKING=y
+CONFIG_HAVE_IRQ_TIME_ACCOUNTING=y
+CONFIG_HAVE_MOD_ARCH_SPECIFIC=y
+CONFIG_MODULES_USE_ELF_REL=y
+CONFIG_HAVE_ARCH_MMAP_RND_BITS=y
+CONFIG_ARCH_MMAP_RND_BITS_MIN=8
+CONFIG_ARCH_MMAP_RND_BITS_MAX=16
+CONFIG_ARCH_MMAP_RND_BITS=16
+CONFIG_CLONE_BACKWARDS=y
+CONFIG_OLD_SIGSUSPEND3=y
+CONFIG_OLD_SIGACTION=y
+
+#
+# GCOV-based kernel profiling
+#
+# CONFIG_GCOV_KERNEL is not set
+CONFIG_HAVE_GENERIC_DMA_COHERENT=y
+CONFIG_SLABINFO=y
+CONFIG_RT_MUTEXES=y
+CONFIG_BASE_SMALL=0
+# CONFIG_SYSTEM_TRUSTED_KEYRING is not set
+CONFIG_MODULES=y
+# CONFIG_MODULE_FORCE_LOAD is not set
+CONFIG_MODULE_UNLOAD=y
+# CONFIG_MODULE_FORCE_UNLOAD is not set
+CONFIG_MODVERSIONS=y
+# CONFIG_MODULE_SRCVERSION_ALL is not set
+# CONFIG_MODULE_SIG is not set
+CONFIG_STOP_MACHINE=y
+CONFIG_BLOCK=y
+CONFIG_LBDAF=y
+# CONFIG_BLK_DEV_BSG is not set
+# CONFIG_BLK_DEV_BSGLIB is not set
+# CONFIG_BLK_DEV_INTEGRITY is not set
+
+#
+# Partition Types
+#
+CONFIG_PARTITION_ADVANCED=y
+# CONFIG_ACORN_PARTITION is not set
+# CONFIG_OSF_PARTITION is not set
+# CONFIG_AMIGA_PARTITION is not set
+# CONFIG_ATARI_PARTITION is not set
+# CONFIG_MAC_PARTITION is not set
+CONFIG_MSDOS_PARTITION=y
+# CONFIG_BSD_DISKLABEL is not set
+# CONFIG_MINIX_SUBPARTITION is not set
+# CONFIG_SOLARIS_X86_PARTITION is not set
+# CONFIG_UNIXWARE_DISKLABEL is not set
+# CONFIG_LDM_PARTITION is not set
+# CONFIG_SGI_PARTITION is not set
+# CONFIG_ULTRIX_PARTITION is not set
+# CONFIG_SUN_PARTITION is not set
+# CONFIG_KARMA_PARTITION is not set
+CONFIG_EFI_PARTITION=y
+# CONFIG_SYSV68_PARTITION is not set
+
+#
+# IO Schedulers
+#
+CONFIG_IOSCHED_NOOP=y
+# CONFIG_IOSCHED_DEADLINE is not set
+CONFIG_IOSCHED_CFQ=y
+CONFIG_DEFAULT_CFQ=y
+# CONFIG_DEFAULT_NOOP is not set
+CONFIG_DEFAULT_IOSCHED="cfq"
+CONFIG_UNINLINE_SPIN_UNLOCK=y
+CONFIG_ARCH_SUPPORTS_ATOMIC_RMW=y
+CONFIG_MUTEX_SPIN_ON_OWNER=y
+CONFIG_FREEZER=y
+
+#
+# System Type
+#
+CONFIG_MMU=y
+# CONFIG_ARCH_MULTIPLATFORM is not set
+# CONFIG_ARCH_INTEGRATOR is not set
+# CONFIG_ARCH_REALVIEW is not set
+# CONFIG_ARCH_VERSATILE is not set
+# CONFIG_ARCH_AT91 is not set
+# CONFIG_ARCH_CLPS711X is not set
+# CONFIG_ARCH_GEMINI is not set
+# CONFIG_ARCH_EBSA110 is not set
+# CONFIG_ARCH_EP93XX is not set
+# CONFIG_ARCH_FOOTBRIDGE is not set
+# CONFIG_ARCH_NETX is not set
+# CONFIG_ARCH_IOP13XX is not set
+# CONFIG_ARCH_IOP32X is not set
+# CONFIG_ARCH_IOP33X is not set
+# CONFIG_ARCH_IXP4XX is not set
+# CONFIG_ARCH_DOVE is not set
+# CONFIG_ARCH_KIRKWOOD is not set
+# CONFIG_ARCH_MV78XX0 is not set
+# CONFIG_ARCH_ORION5X is not set
+# CONFIG_ARCH_MMP is not set
+# CONFIG_ARCH_KS8695 is not set
+# CONFIG_ARCH_W90X900 is not set
+# CONFIG_ARCH_LPC32XX is not set
+# CONFIG_ARCH_PXA is not set
+# CONFIG_ARCH_MSM is not set
+# CONFIG_ARCH_SHMOBILE is not set
+# CONFIG_ARCH_RPC is not set
+# CONFIG_ARCH_SA1100 is not set
+# CONFIG_ARCH_S3C24XX is not set
+# CONFIG_ARCH_S3C64XX is not set
+# CONFIG_ARCH_S5P64X0 is not set
+# CONFIG_ARCH_S5PC100 is not set
+# CONFIG_ARCH_S5PV210 is not set
+# CONFIG_ARCH_EXYNOS is not set
+# CONFIG_ARCH_SHARK is not set
+# CONFIG_ARCH_U300 is not set
+# CONFIG_ARCH_DAVINCI is not set
+# CONFIG_ARCH_OMAP1 is not set
+CONFIG_ARCH_SC=y
+# CONFIG_GPIO_PCA953X is not set
+# CONFIG_KEYBOARD_GPIO_POLLED is not set
+# CONFIG_PLAT_SPEAR is not set
+
+#
+# Spreadtrum SoC Type
+#
+CONFIG_ARCH_SCX35=y
+# CONFIG_ARCH_SCX15 is not set
+CONFIG_ARCH_SCX35L=y
+# CONFIG_ARCH_SCX30G is not set
+# CONFIG_ARCH_SCX30G2 is not set
+# CONFIG_ARCH_SCX30G3 is not set
+# CONFIG_ARCH_SCX20L is not set
+# CONFIG_ARCH_SCX20 is not set
+# CONFIG_MACH_SCX35_DT is not set
+# CONFIG_CPLL_1024M is not set
+# CONFIG_TSHARK3_OVERCLOCK is not set
+# CONFIG_SC_FPGA is not set
+
+#
+# Spreadtrum Board Type
+#
+# CONFIG_MACH_SP5735EA is not set
+# CONFIG_MACH_SP5735C1EA is not set
+# CONFIG_MACH_SPX35EB is not set
+# CONFIG_MACH_SP8835EB is not set
+# CONFIG_MACH_SPX35EA is not set
+# CONFIG_MACH_SPX35EC is not set
+# CONFIG_MACH_KANAS_W is not set
+# CONFIG_MACH_KANAS_TD is not set
+# CONFIG_MACH_SC9620OPENPHONE is not set
+# CONFIG_MACH_SC9620OPENPHONE_ZT is not set
+# CONFIG_MACH_SC9620FPGA is not set
+# CONFIG_MACH_SP8830GEA is not set
+# CONFIG_MACH_SP7730GGA is not set
+# CONFIG_MACH_SP7731GGA_LC is not set
+# CONFIG_MACH_SP7730GGA_LC is not set
+# CONFIG_MACH_SP7730GGAOPENPHONE is not set
+# CONFIG_MACH_SP7731GEA is not set
+# CONFIG_MACH_SP7730SW_FPGA is not set
+# CONFIG_MACH_SP7730SW_T2 is not set
+# CONFIG_MACH_SP7730SW is not set
+# CONFIG_MACH_J3_3G is not set
+# CONFIG_MACH_SP8730SEEA_T3 is not set
+# CONFIG_MACH_SP7731GEA_HD2 is not set
+# CONFIG_MACH_SP7731GEA_HD is not set
+# CONFIG_MACH_SP7731G_1H10_HD is not set
+# CONFIG_MACH_SP8730SEEA_QHD is not set
+# CONFIG_MACH_SP8730SEEA_JIG is not set
+# CONFIG_MACH_SP7731GEPIKE is not set
+# CONFIG_MACH_SP7731GEA_FWVGA is not set
+# CONFIG_MACH_SP7731GEAOPENPHONE is not set
+# CONFIG_MACH_SP7731GEA_LC is not set
+# CONFIG_MACH_SP7730EC is not set
+# CONFIG_MACH_SP7730ECTRISIM is not set
+# CONFIG_MACH_SPX35FPGA is not set
+# CONFIG_MACH_SP7735EC is not set
+# CONFIG_MACH_SPX35LFPGA is not set
+# CONFIG_MACH_PIKELFPGA is not set
+# CONFIG_MACH_COREPRIMELITE is not set
+# CONFIG_MACH_SHARKLS_Z3LTE is not set
+# CONFIG_MACH_SHARKL_J1POPLTE is not set
+# CONFIG_MACH_SP9630EA3MN is not set
+# CONFIG_MACH_SP9630EA4MN is not set
+# CONFIG_MACH_SP9830IEA_4M_H100 is not set
+# CONFIG_MACH_SP9830I_2H11_4M is not set
+# CONFIG_MACH_SP9830AEA_5M_H100 is not set
+# CONFIG_MACH_SP9830AEA_5M_H100_32V4 is not set
+# CONFIG_MACH_SP9830A_7H10 is not set
+# CONFIG_MACH_SP9830A_7H10_VOLTE is not set
+# CONFIG_MACH_SP9830AEA_5M_VOLTE is not set
+# CONFIG_MACH_SP9830AEB_5M_H100 is not set
+# CONFIG_MACH_SP9830A_5H10_5MVOLTE is not set
+# CONFIG_MACH_SP9830A_2H10_4M is not set
+# CONFIG_PRODUCT_SP9830AEC_4M_H110 is not set
+# CONFIG_MACH_SP9832A_2H11_4M is not set
+# CONFIG_MACH_SP9832A_2H11_4MSAMSUNG is not set
+CONFIG_MACH_SP9832A_2H12_VOLTE=y
+# CONFIG_MACH_SP9832A2_VOL_13CAM is not set
+# CONFIG_MACH_SP9832A_3H10_VOLTE is not set
+CONFIG_ISP_V2=y
+CONFIG_MACH_SP9830I=y
+# CONFIG_MACH_SP9830I_J3LTE is not set
+# CONFIG_MACH_SHARKLC_Z2LTE is not set
+# CONFIG_MACH_SP9830IEA_5M_H100 is not set
+# CONFIG_MACH_SP9830I_J2LTE_V0 is not set
+# CONFIG_MACH_SP9830I_J2LTE is not set
+# CONFIG_CHIP_SP9830IED is not set
+# CONFIG_MACH_SP9830IEB_5M_H100 is not set
+# CONFIG_MACH_SP8730SEA is not set
+# CONFIG_MACH_SP8830GA is not set
+# CONFIG_MACH_SP7730GA is not set
+# CONFIG_MACH_TSHARKWSAMSUNG is not set
+# CONFIG_MACH_CORE3 is not set
+# CONFIG_MACH_PIKEAYOUNG2DTV is not set
+# CONFIG_MACH_TSHARK2TABE is not set
+# CONFIG_MACH_GRANDPRIME3G_VE is not set
+# CONFIG_MACH_COREPRIME3G_VE is not set
+# CONFIG_MACH_TIZENZ3_3G is not set
+# CONFIG_MACH_GRANDPRIME_DTV is not set
+# CONFIG_MACH_SAMSUNG is not set
+# CONFIG_GPS_BCM47520 is not set
+
+#
+# Processor Type
+#
+CONFIG_CPU_V7=y
+CONFIG_CPU_32v6K=y
+CONFIG_CPU_32v7=y
+CONFIG_CPU_ABRT_EV7=y
+CONFIG_CPU_PABRT_V7=y
+CONFIG_CPU_CACHE_V7=y
+CONFIG_CPU_CACHE_VIPT=y
+CONFIG_CPU_COPY_V6=y
+CONFIG_CPU_TLB_V7=y
+CONFIG_CPU_HAS_ASID=y
+CONFIG_CPU_CP15=y
+CONFIG_CPU_CP15_MMU=y
+
+#
+# Processor Features
+#
+# CONFIG_ARM_LPAE is not set
+# CONFIG_ARCH_PHYS_ADDR_T_64BIT is not set
+CONFIG_ARM_THUMB=y
+# CONFIG_ARM_THUMBEE is not set
+CONFIG_ARM_VIRT_EXT=y
+CONFIG_SWP_EMULATE=y
+# CONFIG_CPU_ICACHE_DISABLE is not set
+# CONFIG_CPU_DCACHE_DISABLE is not set
+# CONFIG_CPU_BPREDICT_DISABLE is not set
+CONFIG_KUSER_HELPERS=y
+# CONFIG_CACHE_L2X0 is not set
+CONFIG_ARM_L1_CACHE_SHIFT_6=y
+CONFIG_ARM_L1_CACHE_SHIFT=6
+CONFIG_ARM_DMA_MEM_BUFFERABLE=y
+CONFIG_ARM_NR_BANKS=8
+CONFIG_MULTI_IRQ_HANDLER=y
+# CONFIG_ARM_ERRATA_430973 is not set
+# CONFIG_ARM_ERRATA_458693 is not set
+# CONFIG_ARM_ERRATA_460075 is not set
+# CONFIG_ARM_ERRATA_742230 is not set
+# CONFIG_ARM_ERRATA_742231 is not set
+# CONFIG_ARM_ERRATA_643719 is not set
+# CONFIG_ARM_ERRATA_720789 is not set
+# CONFIG_ARM_ERRATA_743622 is not set
+# CONFIG_ARM_ERRATA_751472 is not set
+# CONFIG_ARM_ERRATA_754322 is not set
+# CONFIG_ARM_ERRATA_754327 is not set
+# CONFIG_ARM_ERRATA_764369 is not set
+# CONFIG_ARM_ERRATA_775420 is not set
+# CONFIG_ARM_ERRATA_798181 is not set
+
+#
+# Bus support
+#
+# CONFIG_PCI_SYSCALL is not set
+# CONFIG_PCCARD is not set
+
+#
+# Kernel Features
+#
+CONFIG_HAVE_SMP=y
+CONFIG_SMP=y
+# CONFIG_SMP_ON_UP is not set
+CONFIG_ARM_CPU_TOPOLOGY=y
+CONFIG_SCHED_MC=y
+# CONFIG_SCHED_SMT is not set
+# CONFIG_DISABLE_CPU_SCHED_DOMAIN_BALANCE is not set
+# CONFIG_HAVE_ARM_ARCH_TIMER is not set
+# CONFIG_MCPM is not set
+# CONFIG_BIG_LITTLE is not set
+CONFIG_VMSPLIT_3G=y
+# CONFIG_VMSPLIT_2G is not set
+# CONFIG_VMSPLIT_1G is not set
+CONFIG_PAGE_OFFSET=0xC0000000
+CONFIG_NR_CPUS=4
+CONFIG_HOTPLUG_CPU=y
+# CONFIG_ARM_PSCI is not set
+CONFIG_LOCAL_TIMERS=y
+CONFIG_ARCH_NR_GPIO=0
+# CONFIG_PREEMPT_NONE is not set
+# CONFIG_PREEMPT_VOLUNTARY is not set
+CONFIG_PREEMPT=y
+CONFIG_PREEMPT_COUNT=y
+CONFIG_HZ=100
+CONFIG_SCHED_HRTICK=y
+# CONFIG_THUMB2_KERNEL is not set
+CONFIG_AEABI=y
+# CONFIG_OABI_COMPAT is not set
+# CONFIG_ARCH_SPARSEMEM_DEFAULT is not set
+# CONFIG_ARCH_SELECT_MEMORY_MODEL is not set
+CONFIG_HAVE_ARCH_PFN_VALID=y
+CONFIG_HIGHMEM=y
+# CONFIG_HIGHPTE is not set
+CONFIG_HW_PERF_EVENTS=y
+# CONFIG_MEMBLOCK_RESERVE_DEBUG is not set
+CONFIG_FLATMEM=y
+CONFIG_FLAT_NODE_MEM_MAP=y
+CONFIG_HAVE_MEMBLOCK=y
+# CONFIG_HAVE_BOOTMEM_INFO_NODE is not set
+CONFIG_PAGEFLAGS_EXTENDED=y
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_COMPACTION=y
+CONFIG_MIGRATION=y
+# CONFIG_PHYS_ADDR_T_64BIT is not set
+CONFIG_ZONE_DMA_FLAG=0
+CONFIG_BOUNCE=y
+CONFIG_KSM=y
+CONFIG_OPTIMIZE_KSM=y
+CONFIG_KSM_ASSEMBLY_MEMCMP=y
+CONFIG_DEFAULT_MMAP_MIN_ADDR=4096
+CONFIG_CROSS_MEMORY_ATTACH=y
+# CONFIG_CLEANCACHE is not set
+# CONFIG_FRONTSWAP is not set
+# CONFIG_CMA is not set
+# CONFIG_ZPOOL is not set
+CONFIG_ZSMALLOC=y
+# CONFIG_PGTABLE_MAPPING is not set
+# CONFIG_ZSMALLOC_STAT is not set
+CONFIG_FORCE_MAX_ZONEORDER=14
+CONFIG_ALIGNMENT_TRAP=y
+# CONFIG_UACCESS_WITH_MEMCPY is not set
+CONFIG_SECCOMP=y
+# CONFIG_CC_STACKPROTECTOR is not set
+# CONFIG_XEN is not set
+CONFIG_ARM_FLUSH_CONSOLE_ON_RESTART=y
+
+#
+# Boot options
+#
+CONFIG_USE_OF=y
+CONFIG_ATAGS=y
+# CONFIG_DEPRECATED_PARAM_STRUCT is not set
+# CONFIG_BUILD_ARM_APPENDED_DTB_IMAGE is not set
+CONFIG_ZBOOT_ROM_TEXT=0x0
+CONFIG_ZBOOT_ROM_BSS=0x0
+# CONFIG_ARM_APPENDED_DTB is not set
+CONFIG_CMDLINE="root=/dev/ram0 rw initrd=0x80e00000,0x1f243f console=ttyS1,115200n8 init=/init mem=128M"
+CONFIG_CMDLINE_FROM_BOOTLOADER=y
+# CONFIG_CMDLINE_EXTEND is not set
+# CONFIG_CMDLINE_FORCE is not set
+# CONFIG_XIP_KERNEL is not set
+# CONFIG_KEXEC is not set
+# CONFIG_CRASH_DUMP is not set
+# CONFIG_AUTO_ZRELADDR is not set
+
+#
+# CPU Power Management
+#
+
+#
+# CPU Frequency scaling
+#
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_TABLE=y
+CONFIG_CPU_FREQ_STAT=y
+# CONFIG_CPU_FREQ_STAT_DETAILS is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set
+CONFIG_CPU_FREQ_DEFAULT_GOV_INTERACTIVE=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_SPRDEMAND is not set
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+CONFIG_CPU_FREQ_GOV_POWERSAVE=y
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+# CONFIG_CPU_FREQ_GOV_ONDEMAND is not set
+CONFIG_CPU_FREQ_GOV_INTERACTIVE=y
+# CONFIG_CPU_FREQ_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_FREQ_GOV_SPRDEMAND is not set
+# CONFIG_DVFS_ONLY is not set
+# CONFIG_SPRD_CPUFREQ_DT_DRIVER is not set
+# CONFIG_SCX35_1300MHZ is not set
+
+#
+# ARM CPU frequency scaling drivers
+#
+# CONFIG_ARM_EXYNOS4210_CPUFREQ is not set
+# CONFIG_ARM_EXYNOS4X12_CPUFREQ is not set
+# CONFIG_ARM_EXYNOS5250_CPUFREQ is not set
+# CONFIG_ARM_KIRKWOOD_CPUFREQ is not set
+CONFIG_CPU_IDLE=y
+# CONFIG_CPU_IDLE_MULTIPLE_DRIVERS is not set
+CONFIG_CPU_IDLE_GOV_LADDER=y
+CONFIG_CPU_IDLE_GOV_MENU=y
+# CONFIG_ARCH_NEEDS_CPU_IDLE_COUPLED is not set
+
+#
+# Floating point emulation
+#
+
+#
+# At least one emulation must be selected
+#
+CONFIG_VFP=y
+CONFIG_VFPv3=y
+CONFIG_NEON=y
+CONFIG_KERNEL_MODE_NEON=y
+
+#
+# Userspace binary formats
+#
+CONFIG_BINFMT_ELF=y
+CONFIG_ARCH_BINFMT_ELF_RANDOMIZE_PIE=y
+# CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS is not set
+CONFIG_BINFMT_SCRIPT=y
+# CONFIG_HAVE_AOUT is not set
+# CONFIG_BINFMT_MISC is not set
+CONFIG_COREDUMP=y
+
+#
+# Power management options
+#
+CONFIG_SUSPEND=y
+CONFIG_SUSPEND_FREEZER=y
+CONFIG_HAS_WAKELOCK=y
+CONFIG_HAS_EARLYSUSPEND=y
+CONFIG_WAKELOCK=y
+CONFIG_WAKELOCK_STAT=y
+CONFIG_USER_WAKELOCK=y
+CONFIG_EARLYSUSPEND=y
+# CONFIG_NO_USER_SPACE_SCREEN_ACCESS_CONTROL is not set
+CONFIG_FB_EARLYSUSPEND=y
+CONFIG_PM_SLEEP=y
+CONFIG_PM_SLEEP_SMP=y
+# CONFIG_PM_AUTOSLEEP is not set
+CONFIG_PM_RUNTIME=y
+CONFIG_PM=y
+# CONFIG_PM_DEBUG is not set
+# CONFIG_APM_EMULATION is not set
+CONFIG_PM_CLK=y
+# CONFIG_WQ_POWER_EFFICIENT_DEFAULT is not set
+CONFIG_CPU_PM=y
+CONFIG_SUSPEND_TIME=y
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+CONFIG_ARM_CPU_SUSPEND=y
+CONFIG_NET=y
+
+#
+# Networking options
+#
+CONFIG_PACKET=y
+# CONFIG_PACKET_DIAG is not set
+CONFIG_UNIX=y
+# CONFIG_UNIX_DIAG is not set
+CONFIG_XFRM=y
+CONFIG_XFRM_ALGO=y
+CONFIG_XFRM_USER=y
+CONFIG_XFRM_SUB_POLICY=y
+CONFIG_XFRM_SPRD_VOWIFI_FRAGMENT=y
+# CONFIG_XFRM_MIGRATE is not set
+CONFIG_XFRM_STATISTICS=y
+CONFIG_XFRM_IPCOMP=y
+CONFIG_NET_KEY=y
+# CONFIG_NET_KEY_MIGRATE is not set
+CONFIG_INET=y
+# CONFIG_IP_MULTICAST is not set
+CONFIG_IP_ADVANCED_ROUTER=y
+# CONFIG_IP_FIB_TRIE_STATS is not set
+CONFIG_IP_MULTIPLE_TABLES=y
+# CONFIG_IP_ROUTE_MULTIPATH is not set
+# CONFIG_IP_ROUTE_VERBOSE is not set
+# CONFIG_IP_PNP is not set
+# CONFIG_NET_IPIP is not set
+CONFIG_NET_IPGRE_DEMUX=y
+CONFIG_NET_IP_TUNNEL=y
+# CONFIG_NET_IPGRE is not set
+# CONFIG_ARPD is not set
+# CONFIG_SYN_COOKIES is not set
+# CONFIG_NET_IPVTI is not set
+CONFIG_INET_AH=y
+CONFIG_INET_ESP=y
+CONFIG_INET_IPCOMP=y
+CONFIG_INET_XFRM_TUNNEL=y
+CONFIG_INET_TUNNEL=y
+CONFIG_INET_XFRM_MODE_TRANSPORT=y
+CONFIG_INET_XFRM_MODE_TUNNEL=y
+CONFIG_INET_XFRM_MODE_BEET=y
+# CONFIG_INET_LRO is not set
+CONFIG_INET_DIAG=y
+CONFIG_INET_TCP_DIAG=y
+# CONFIG_INET_UDP_DIAG is not set
+CONFIG_INET_DIAG_DESTROY=y
+# CONFIG_TCP_CONG_ADVANCED is not set
+CONFIG_TCP_CONG_CUBIC=y
+CONFIG_DEFAULT_TCP_CONG="cubic"
+# CONFIG_TCP_MD5SIG is not set
+CONFIG_IPV6=y
+CONFIG_IPV6_PRIVACY=y
+CONFIG_IPV6_ROUTER_PREF=y
+CONFIG_IPV6_ROUTE_INFO=y
+CONFIG_IPV6_OPTIMISTIC_DAD=y
+CONFIG_INET6_AH=y
+CONFIG_INET6_ESP=y
+CONFIG_INET6_IPCOMP=y
+CONFIG_IPV6_MIP6=y
+CONFIG_INET6_XFRM_TUNNEL=y
+CONFIG_INET6_TUNNEL=y
+CONFIG_INET6_XFRM_MODE_TRANSPORT=y
+CONFIG_INET6_XFRM_MODE_TUNNEL=y
+CONFIG_INET6_XFRM_MODE_BEET=y
+# CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION is not set
+CONFIG_IPV6_SIT=y
+# CONFIG_IPV6_SIT_6RD is not set
+CONFIG_IPV6_NDISC_NODETYPE=y
+CONFIG_IPV6_TUNNEL=y
+# CONFIG_IPV6_GRE is not set
+CONFIG_IPV6_MULTIPLE_TABLES=y
+CONFIG_IPV6_SUBTREES=y
+# CONFIG_IPV6_MROUTE is not set
+# CONFIG_NETLABEL is not set
+CONFIG_ANDROID_PARANOID_NETWORK=y
+CONFIG_NET_ACTIVITY_STATS=y
+CONFIG_NETWORK_SECMARK=y
+# CONFIG_NETWORK_PHY_TIMESTAMPING is not set
+CONFIG_NETFILTER=y
+# CONFIG_NETFILTER_DEBUG is not set
+CONFIG_NETFILTER_ADVANCED=y
+
+#
+# Core Netfilter Configuration
+#
+CONFIG_NETFILTER_NETLINK=y
+# CONFIG_NETFILTER_NETLINK_ACCT is not set
+CONFIG_NETFILTER_NETLINK_QUEUE=y
+CONFIG_NETFILTER_NETLINK_LOG=y
+CONFIG_NF_CONNTRACK=y
+CONFIG_NF_CONNTRACK_MARK=y
+# CONFIG_NF_CONNTRACK_SECMARK is not set
+CONFIG_NF_CONNTRACK_PROCFS=y
+CONFIG_NF_CONNTRACK_EVENTS=y
+# CONFIG_NF_CONNTRACK_TIMEOUT is not set
+# CONFIG_NF_CONNTRACK_TIMESTAMP is not set
+CONFIG_NF_CT_PROTO_DCCP=y
+CONFIG_NF_CT_PROTO_GRE=y
+CONFIG_NF_CT_PROTO_SCTP=y
+CONFIG_NF_CT_PROTO_UDPLITE=y
+CONFIG_NF_CONNTRACK_AMANDA=y
+CONFIG_NF_CONNTRACK_FTP=y
+CONFIG_NF_CONNTRACK_H323=y
+CONFIG_NF_CONNTRACK_IRC=y
+CONFIG_NF_CONNTRACK_BROADCAST=y
+CONFIG_NF_CONNTRACK_NETBIOS_NS=y
+# CONFIG_NF_CONNTRACK_SNMP is not set
+CONFIG_NF_CONNTRACK_PPTP=y
+CONFIG_NF_CONNTRACK_SANE=y
+CONFIG_NF_CONNTRACK_SIP=y
+CONFIG_NF_CONNTRACK_TFTP=y
+CONFIG_NF_CT_NETLINK=y
+# CONFIG_NF_CT_NETLINK_TIMEOUT is not set
+# CONFIG_NETFILTER_NETLINK_QUEUE_CT is not set
+CONFIG_NF_NAT=y
+CONFIG_NF_NAT_NEEDED=y
+CONFIG_NF_NAT_PROTO_DCCP=y
+CONFIG_NF_NAT_PROTO_UDPLITE=y
+CONFIG_NF_NAT_PROTO_SCTP=y
+CONFIG_NF_NAT_AMANDA=y
+CONFIG_NF_NAT_FTP=y
+CONFIG_NF_NAT_IRC=y
+CONFIG_NF_NAT_SIP=y
+CONFIG_NF_NAT_TFTP=y
+CONFIG_NETFILTER_TPROXY=y
+CONFIG_NETFILTER_XTABLES=y
+
+#
+# Xtables combined modules
+#
+CONFIG_NETFILTER_XT_MARK=y
+CONFIG_NETFILTER_XT_CONNMARK=y
+
+#
+# Xtables targets
+#
+# CONFIG_NETFILTER_XT_TARGET_AUDIT is not set
+# CONFIG_NETFILTER_XT_TARGET_CHECKSUM is not set
+CONFIG_NETFILTER_XT_TARGET_CLASSIFY=y
+CONFIG_NETFILTER_XT_TARGET_CONNMARK=y
+# CONFIG_NETFILTER_XT_TARGET_CT is not set
+# CONFIG_NETFILTER_XT_TARGET_DSCP is not set
+# CONFIG_NETFILTER_XT_TARGET_HL is not set
+# CONFIG_NETFILTER_XT_TARGET_HMARK is not set
+CONFIG_NETFILTER_XT_TARGET_IDLETIMER=y
+CONFIG_NETFILTER_XT_TARGET_LOG=y
+CONFIG_NETFILTER_XT_TARGET_MARK=y
+CONFIG_NETFILTER_XT_TARGET_NETMAP=y
+CONFIG_NETFILTER_XT_TARGET_NFLOG=y
+CONFIG_NETFILTER_XT_TARGET_NFQUEUE=y
+# CONFIG_NETFILTER_XT_TARGET_NOTRACK is not set
+# CONFIG_NETFILTER_XT_TARGET_RATEEST is not set
+CONFIG_NETFILTER_XT_TARGET_REDIRECT=y
+# CONFIG_NETFILTER_XT_TARGET_TEE is not set
+CONFIG_NETFILTER_XT_TARGET_TPROXY=y
+CONFIG_NETFILTER_XT_TARGET_TRACE=y
+# CONFIG_NETFILTER_XT_TARGET_SECMARK is not set
+CONFIG_NETFILTER_XT_TARGET_TCPMSS=y
+# CONFIG_NETFILTER_XT_TARGET_TCPOPTSTRIP is not set
+
+#
+# Xtables matches
+#
+CONFIG_NETFILTER_XT_MATCH_ADDRTYPE=y
+# CONFIG_NETFILTER_XT_MATCH_BPF is not set
+# CONFIG_NETFILTER_XT_MATCH_CLUSTER is not set
+CONFIG_NETFILTER_XT_MATCH_COMMENT=y
+# CONFIG_NETFILTER_XT_MATCH_CONNBYTES is not set
+# CONFIG_NETFILTER_XT_MATCH_CONNLABEL is not set
+CONFIG_NETFILTER_XT_MATCH_CONNLIMIT=y
+CONFIG_NETFILTER_XT_MATCH_CONNMARK=y
+CONFIG_NETFILTER_XT_MATCH_CONNTRACK=y
+# CONFIG_NETFILTER_XT_MATCH_CPU is not set
+# CONFIG_NETFILTER_XT_MATCH_DCCP is not set
+# CONFIG_NETFILTER_XT_MATCH_DEVGROUP is not set
+# CONFIG_NETFILTER_XT_MATCH_DSCP is not set
+CONFIG_NETFILTER_XT_MATCH_ECN=y
+# CONFIG_NETFILTER_XT_MATCH_ESP is not set
+CONFIG_NETFILTER_XT_MATCH_HASHLIMIT=y
+CONFIG_NETFILTER_XT_MATCH_HELPER=y
+CONFIG_NETFILTER_XT_MATCH_HL=y
+CONFIG_NETFILTER_XT_MATCH_IPRANGE=y
+CONFIG_NETFILTER_XT_MATCH_LENGTH=y
+CONFIG_NETFILTER_XT_MATCH_LIMIT=y
+CONFIG_NETFILTER_XT_MATCH_MAC=y
+CONFIG_NETFILTER_XT_MATCH_MARK=y
+# CONFIG_NETFILTER_XT_MATCH_MULTIPORT is not set
+# CONFIG_NETFILTER_XT_MATCH_NFACCT is not set
+# CONFIG_NETFILTER_XT_MATCH_OSF is not set
+# CONFIG_NETFILTER_XT_MATCH_OWNER is not set
+CONFIG_NETFILTER_XT_MATCH_POLICY=y
+CONFIG_NETFILTER_XT_MATCH_PKTTYPE=y
+CONFIG_NETFILTER_XT_MATCH_QTAGUID=y
+CONFIG_NETFILTER_XT_MATCH_QUOTA=y
+CONFIG_NETFILTER_XT_MATCH_QUOTA2=y
+CONFIG_NETFILTER_XT_MATCH_QUOTA2_LOG=y
+# CONFIG_NETFILTER_XT_MATCH_RATEEST is not set
+# CONFIG_NETFILTER_XT_MATCH_REALM is not set
+# CONFIG_NETFILTER_XT_MATCH_RECENT is not set
+# CONFIG_NETFILTER_XT_MATCH_SCTP is not set
+CONFIG_NETFILTER_XT_MATCH_SOCKET=y
+CONFIG_NETFILTER_XT_MATCH_STATE=y
+CONFIG_NETFILTER_XT_MATCH_STATISTIC=y
+CONFIG_NETFILTER_XT_MATCH_STRING=y
+# CONFIG_NETFILTER_XT_MATCH_TCPMSS is not set
+CONFIG_NETFILTER_XT_MATCH_TIME=y
+CONFIG_NETFILTER_XT_MATCH_U32=y
+# CONFIG_IP_SET is not set
+# CONFIG_IP_VS is not set
+
+#
+# IP: Netfilter Configuration
+#
+CONFIG_NF_DEFRAG_IPV4=y
+CONFIG_NF_CONNTRACK_IPV4=y
+CONFIG_NF_CONNTRACK_PROC_COMPAT=y
+CONFIG_IP_NF_IPTABLES=y
+CONFIG_IP_NF_MATCH_AH=y
+CONFIG_IP_NF_MATCH_ECN=y
+# CONFIG_IP_NF_MATCH_RPFILTER is not set
+CONFIG_IP_NF_MATCH_TTL=y
+CONFIG_IP_NF_FILTER=y
+CONFIG_IP_NF_TARGET_REJECT=y
+CONFIG_IP_NF_VOWIFI_DEC_TCPDUMP=y
+CONFIG_IP_NF_TARGET_REJECT_SKERR=y
+# CONFIG_IP_NF_TARGET_ULOG is not set
+CONFIG_NF_NAT_IPV4=y
+CONFIG_IP_NF_TARGET_MASQUERADE=y
+CONFIG_IP_NF_TARGET_NETMAP=y
+CONFIG_IP_NF_TARGET_REDIRECT=y
+CONFIG_NF_NAT_PROTO_GRE=y
+CONFIG_NF_NAT_PPTP=y
+CONFIG_NF_NAT_H323=y
+CONFIG_IP_NF_MANGLE=y
+# CONFIG_IP_NF_TARGET_CLUSTERIP is not set
+# CONFIG_IP_NF_TARGET_ECN is not set
+# CONFIG_IP_NF_TARGET_TTL is not set
+CONFIG_IP_NF_RAW=y
+# CONFIG_IP_NF_SECURITY is not set
+CONFIG_IP_NF_ARPTABLES=y
+CONFIG_IP_NF_ARPFILTER=y
+CONFIG_IP_NF_ARP_MANGLE=y
+
+#
+# IPv6: Netfilter Configuration
+#
+CONFIG_NF_DEFRAG_IPV6=y
+CONFIG_NF_CONNTRACK_IPV6=y
+CONFIG_IP6_NF_IPTABLES=y
+# CONFIG_IP6_NF_MATCH_AH is not set
+# CONFIG_IP6_NF_MATCH_EUI64 is not set
+# CONFIG_IP6_NF_MATCH_FRAG is not set
+# CONFIG_IP6_NF_MATCH_OPTS is not set
+# CONFIG_IP6_NF_MATCH_HL is not set
+# CONFIG_IP6_NF_MATCH_IPV6HEADER is not set
+# CONFIG_IP6_NF_MATCH_MH is not set
+# CONFIG_IP6_NF_MATCH_RPFILTER is not set
+# CONFIG_IP6_NF_MATCH_RT is not set
+# CONFIG_IP6_NF_TARGET_HL is not set
+CONFIG_IP6_NF_FILTER=y
+CONFIG_IP6_NF_VOWIFI_DEC_TCPDUMP=y
+CONFIG_IP6_NF_TARGET_REJECT=y
+CONFIG_IP6_NF_TARGET_REJECT_SKERR=y
+CONFIG_IP6_NF_MANGLE=y
+CONFIG_IP6_NF_RAW=y
+# CONFIG_IP6_NF_SECURITY is not set
+# CONFIG_NF_NAT_IPV6 is not set
+# CONFIG_IP_DCCP is not set
+# CONFIG_IP_SCTP is not set
+# CONFIG_RDS is not set
+# CONFIG_TIPC is not set
+# CONFIG_ATM is not set
+CONFIG_L2TP=y
+# CONFIG_L2TP_DEBUGFS is not set
+# CONFIG_L2TP_V3 is not set
+# CONFIG_BRIDGE is not set
+CONFIG_HAVE_NET_DSA=y
+# CONFIG_VLAN_8021Q is not set
+# CONFIG_DECNET is not set
+# CONFIG_LLC2 is not set
+# CONFIG_IPX is not set
+# CONFIG_ATALK is not set
+# CONFIG_X25 is not set
+# CONFIG_LAPB is not set
+# CONFIG_PHONET is not set
+# CONFIG_IEEE802154 is not set
+CONFIG_NET_SCHED=y
+
+#
+# Queueing/Scheduling
+#
+# CONFIG_NET_SCH_CBQ is not set
+CONFIG_NET_SCH_HTB=y
+# CONFIG_NET_SCH_HFSC is not set
+# CONFIG_NET_SCH_PRIO is not set
+# CONFIG_NET_SCH_MULTIQ is not set
+# CONFIG_NET_SCH_RED is not set
+# CONFIG_NET_SCH_SFB is not set
+# CONFIG_NET_SCH_SFQ is not set
+# CONFIG_NET_SCH_TEQL is not set
+# CONFIG_NET_SCH_TBF is not set
+# CONFIG_NET_SCH_GRED is not set
+# CONFIG_NET_SCH_DSMARK is not set
+# CONFIG_NET_SCH_NETEM is not set
+# CONFIG_NET_SCH_DRR is not set
+# CONFIG_NET_SCH_MQPRIO is not set
+# CONFIG_NET_SCH_CHOKE is not set
+# CONFIG_NET_SCH_QFQ is not set
+# CONFIG_NET_SCH_CODEL is not set
+# CONFIG_NET_SCH_FQ_CODEL is not set
+# CONFIG_NET_SCH_INGRESS is not set
+# CONFIG_NET_SCH_PLUG is not set
+
+#
+# Classification
+#
+CONFIG_NET_CLS=y
+# CONFIG_NET_CLS_BASIC is not set
+# CONFIG_NET_CLS_TCINDEX is not set
+# CONFIG_NET_CLS_ROUTE4 is not set
+# CONFIG_NET_CLS_FW is not set
+CONFIG_NET_CLS_U32=y
+# CONFIG_CLS_U32_PERF is not set
+# CONFIG_CLS_U32_MARK is not set
+# CONFIG_NET_CLS_RSVP is not set
+# CONFIG_NET_CLS_RSVP6 is not set
+# CONFIG_NET_CLS_FLOW is not set
+# CONFIG_NET_CLS_CGROUP is not set
+CONFIG_NET_EMATCH=y
+CONFIG_NET_EMATCH_STACK=32
+# CONFIG_NET_EMATCH_CMP is not set
+# CONFIG_NET_EMATCH_NBYTE is not set
+CONFIG_NET_EMATCH_U32=y
+# CONFIG_NET_EMATCH_META is not set
+# CONFIG_NET_EMATCH_TEXT is not set
+CONFIG_NET_CLS_ACT=y
+# CONFIG_NET_ACT_POLICE is not set
+# CONFIG_NET_ACT_GACT is not set
+# CONFIG_NET_ACT_MIRRED is not set
+# CONFIG_NET_ACT_IPT is not set
+# CONFIG_NET_ACT_NAT is not set
+# CONFIG_NET_ACT_PEDIT is not set
+# CONFIG_NET_ACT_SIMP is not set
+# CONFIG_NET_ACT_SKBEDIT is not set
+# CONFIG_NET_ACT_CSUM is not set
+# CONFIG_NET_CLS_IND is not set
+CONFIG_NET_SCH_FIFO=y
+# CONFIG_DCB is not set
+# CONFIG_DNS_RESOLVER is not set
+# CONFIG_BATMAN_ADV is not set
+# CONFIG_OPENVSWITCH is not set
+# CONFIG_VSOCKETS is not set
+# CONFIG_NETLINK_MMAP is not set
+# CONFIG_NETLINK_DIAG is not set
+CONFIG_RPS=y
+CONFIG_RFS_ACCEL=y
+CONFIG_XPS=y
+# CONFIG_NETPRIO_CGROUP is not set
+CONFIG_BQL=y
+# CONFIG_BPF_JIT is not set
+
+#
+# Network testing
+#
+# CONFIG_NET_PKTGEN is not set
+# CONFIG_NET_DROP_MONITOR is not set
+# CONFIG_HAMRADIO is not set
+# CONFIG_CAN is not set
+# CONFIG_IRDA is not set
+CONFIG_BT=y
+CONFIG_BT_RFCOMM=y
+CONFIG_BT_RFCOMM_TTY=y
+CONFIG_BT_BNEP=y
+CONFIG_BT_BNEP_MC_FILTER=y
+CONFIG_BT_BNEP_PROTO_FILTER=y
+CONFIG_BT_HIDP=y
+
+#
+# Bluetooth device drivers
+#
+# CONFIG_BT_HCIBTUSB is not set
+# CONFIG_BT_HCIBTSDIO is not set
+# CONFIG_BT_HCIUART is not set
+# CONFIG_BT_HCIBCM203X is not set
+# CONFIG_BT_HCIBPA10X is not set
+# CONFIG_BT_HCIBFUSB is not set
+# CONFIG_BT_HCIVHCI is not set
+# CONFIG_BT_MRVL is not set
+# CONFIG_BT_BCM4330 is not set
+CONFIG_SPRD_2331=y
+# CONFIG_AF_RXRPC is not set
+CONFIG_FIB_RULES=y
+CONFIG_WIRELESS=y
+CONFIG_CFG80211=y
+# CONFIG_NL80211_TESTMODE is not set
+# CONFIG_CFG80211_DEVELOPER_WARNINGS is not set
+# CONFIG_CFG80211_REG_DEBUG is not set
+# CONFIG_CFG80211_CERTIFICATION_ONUS is not set
+CONFIG_CFG80211_DEFAULT_PS=y
+# CONFIG_CFG80211_DEBUGFS is not set
+CONFIG_CFG80211_INTERNAL_REGDB=y
+# CONFIG_CFG80211_WEXT is not set
+# CONFIG_LIB80211 is not set
+CONFIG_CFG80211_ALLOW_RECONNECT=y
+# CONFIG_MAC80211 is not set
+# CONFIG_WIMAX is not set
+CONFIG_RFKILL=y
+CONFIG_RFKILL_PM=y
+# CONFIG_RFKILL_INPUT is not set
+# CONFIG_RFKILL_REGULATOR is not set
+# CONFIG_RFKILL_GPIO is not set
+# CONFIG_NET_9P is not set
+# CONFIG_CAIF is not set
+# CONFIG_CEPH_LIB is not set
+# CONFIG_NFC is not set
+CONFIG_SPRD_IMS_BRIDGE=y
+CONFIG_SPRD_IMS_BRIDGE_TEST=y
+CONFIG_HAVE_BPF_JIT=y
+# CONFIG_SPRD_TOUCH_BOOST is not set
+
+#
+# Device Drivers
+#
+
+#
+# Generic Driver Options
+#
+CONFIG_UEVENT_HELPER_PATH=""
+# CONFIG_DEVTMPFS is not set
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+CONFIG_FW_LOADER=y
+CONFIG_FIRMWARE_IN_KERNEL=y
+CONFIG_EXTRA_FIRMWARE=""
+CONFIG_FW_LOADER_USER_HELPER=y
+# CONFIG_DEBUG_DRIVER is not set
+# CONFIG_DEBUG_DEVRES is not set
+# CONFIG_SYS_HYPERVISOR is not set
+# CONFIG_GENERIC_CPU_DEVICES is not set
+# CONFIG_HAVE_CPU_AUTOPROBE is not set
+CONFIG_REGMAP=y
+CONFIG_REGMAP_I2C=y
+CONFIG_REGMAP_SPI=y
+CONFIG_DMA_SHARED_BUFFER=y
+# CONFIG_BATTERY_SAMSUNG is not set
+# CONFIG_SAMSUNG_LPM_MODE is not set
+# CONFIG_SAMSUNG_BATTERY_ENG_TEST is not set
+# CONFIG_STBC_SAMSUNG is not set
+# CONFIG_CHARGER_MAX8903 is not set
+# CONFIG_CHARGER_SMB347 is not set
+# CONFIG_MFD_RT9532 is not set
+# CONFIG_CHARGER_SM5414 is not set
+# CONFIG_CHARGER_SM5418 is not set
+
+#
+# Bus devices
+#
+# CONFIG_ARM_CCI is not set
+# CONFIG_CONNECTOR is not set
+# CONFIG_MTD is not set
+CONFIG_DTC=y
+CONFIG_OF=y
+
+#
+# Device Tree and Open Firmware support
+#
+# CONFIG_PROC_DEVICETREE is not set
+# CONFIG_OF_SELFTEST is not set
+CONFIG_OF_FLATTREE=y
+CONFIG_OF_EARLY_FLATTREE=y
+CONFIG_OF_ADDRESS=y
+CONFIG_OF_IRQ=y
+CONFIG_OF_DEVICE=y
+CONFIG_OF_I2C=y
+CONFIG_OF_NET=y
+CONFIG_OF_MDIO=y
+# CONFIG_PARPORT is not set
+CONFIG_BLK_DEV=y
+CONFIG_ZRAM=y
+# CONFIG_ZRAM_LZ4_COMPRESS is not set
+CONFIG_ZRAM_DEBUG=y
+# CONFIG_BLK_DEV_COW_COMMON is not set
+CONFIG_BLK_DEV_LOOP=y
+CONFIG_BLK_DEV_LOOP_MIN_COUNT=8
+# CONFIG_BLK_DEV_CRYPTOLOOP is not set
+# CONFIG_BLK_DEV_DRBD is not set
+# CONFIG_BLK_DEV_NBD is not set
+# CONFIG_BLK_DEV_RAM is not set
+# CONFIG_CDROM_PKTCDVD is not set
+# CONFIG_ATA_OVER_ETH is not set
+# CONFIG_MG_DISK is not set
+# CONFIG_BLK_DEV_RBD is not set
+
+#
+# Misc devices
+#
+# CONFIG_SENSORS_LIS3LV02D is not set
+# CONFIG_AD525X_DPOT is not set
+# CONFIG_ATMEL_PWM is not set
+# CONFIG_DUMMY_IRQ is not set
+# CONFIG_ICS932S401 is not set
+# CONFIG_ATMEL_SSC is not set
+# CONFIG_ENCLOSURE_SERVICES is not set
+# CONFIG_APDS9802ALS is not set
+# CONFIG_ISL29003 is not set
+# CONFIG_ISL29020 is not set
+# CONFIG_SENSORS_TSL2550 is not set
+# CONFIG_SENSORS_BH1780 is not set
+# CONFIG_SENSORS_BH1770 is not set
+# CONFIG_SENSORS_APDS990X is not set
+# CONFIG_HMC6352 is not set
+# CONFIG_SENSORS_ST480 is not set
+# CONFIG_SENSORS_AK8963 is not set
+# CONFIG_DS1682 is not set
+# CONFIG_TI_DAC7512 is not set
+CONFIG_UID_STAT=y
+# CONFIG_BMP085_I2C is not set
+# CONFIG_BMP085_SPI is not set
+# CONFIG_USB_SWITCH_FSA9480 is not set
+# CONFIG_LATTICE_ECP3_CONFIG is not set
+# CONFIG_SRAM is not set
+CONFIG_UID_CPUTIME=y
+# CONFIG_SPRD_BOARD_TYPE is not set
+CONFIG_SCX35L_SCENARIO_DFS=y
+# CONFIG_SCX35L_DFS_AUTO_FIT is not set
+# CONFIG_SPRD_OSC is not set
+CONFIG_SPRD_7SRESET=y
+CONFIG_OTP_SPRD=y
+CONFIG_OTP_SPRD_EFUSE=y
+CONFIG_OTP_SPRD_ADIE_EFUSE=y
+CONFIG_SPRD_VSP=y
+CONFIG_SPRD_JPG=y
+CONFIG_SPRD_VPP=y
+CONFIG_SPRD_CODA7L=y
+CONFIG_SPRD_CPROC=y
+
+#
+# 2351 modules
+#
+# CONFIG_SPRD_2351 is not set
+# CONFIG_CGX is not set
+# CONFIG_SR2351_FM is not set
+# CONFIG_FM_SEEK_STEP_50KHZ is not set
+# CONFIG_C2PORT is not set
+
+#
+# EEPROM support
+#
+# CONFIG_EEPROM_AT24 is not set
+# CONFIG_EEPROM_AT25 is not set
+# CONFIG_EEPROM_LEGACY is not set
+# CONFIG_EEPROM_MAX6875 is not set
+# CONFIG_EEPROM_93CX6 is not set
+# CONFIG_EEPROM_93XX46 is not set
+
+#
+# Texas Instruments shared transport line discipline
+#
+# CONFIG_TI_ST is not set
+# CONFIG_SENSORS_LIS3_SPI is not set
+# CONFIG_SENSORS_LIS3_I2C is not set
+
+#
+# Altera FPGA firmware download module
+#
+# CONFIG_ALTERA_STAPL is not set
+CONFIG_BENCHMARK=y
+CONFIG_BOOT_PERF=y
+
+#
+# SDIODEV modules
+#
+CONFIG_SDIODEV=y
+# CONFIG_SDIODEV_TEST is not set
+CONFIG_WCN_EXTENSION=y
+
+#
+# MARLIN DEBUG modules
+#
+CONFIG_MDBG_SDIO=y
+CONFIG_MDBG_RING=y
+CONFIG_MDBG=y
+CONFIG_SPRD_DOWNLOAD_IMG=y
+CONFIG_SPRD_DOWNLOAD_POWER_CTL=y
+CONFIG_GNSS_DBG=y
+# CONFIG_SPRD_HWCONFIG_CHECK is not set
+
+#
+# SCSI device support
+#
+CONFIG_SCSI_MOD=y
+CONFIG_RAID_ATTRS=y
+CONFIG_SCSI=y
+CONFIG_SCSI_DMA=y
+CONFIG_SCSI_TGT=y
+# CONFIG_SCSI_NETLINK is not set
+CONFIG_SCSI_PROC_FS=y
+
+#
+# SCSI support type (disk, tape, CD-ROM)
+#
+CONFIG_BLK_DEV_SD=y
+# CONFIG_CHR_DEV_ST is not set
+# CONFIG_CHR_DEV_OSST is not set
+CONFIG_BLK_DEV_SR=y
+CONFIG_BLK_DEV_SR_VENDOR=y
+CONFIG_CHR_DEV_SG=y
+# CONFIG_CHR_DEV_SCH is not set
+CONFIG_SCSI_MULTI_LUN=y
+# CONFIG_SCSI_CONSTANTS is not set
+# CONFIG_SCSI_LOGGING is not set
+CONFIG_SCSI_SCAN_ASYNC=y
+
+#
+# SCSI Transports
+#
+# CONFIG_SCSI_SPI_ATTRS is not set
+# CONFIG_SCSI_FC_ATTRS is not set
+# CONFIG_SCSI_ISCSI_ATTRS is not set
+# CONFIG_SCSI_SAS_ATTRS is not set
+# CONFIG_SCSI_SAS_LIBSAS is not set
+# CONFIG_SCSI_SRP_ATTRS is not set
+CONFIG_SCSI_LOWLEVEL=y
+# CONFIG_ISCSI_TCP is not set
+# CONFIG_ISCSI_BOOT_SYSFS is not set
+# CONFIG_SCSI_UFSHCD is not set
+# CONFIG_LIBFC is not set
+# CONFIG_LIBFCOE is not set
+# CONFIG_SCSI_DEBUG is not set
+CONFIG_SCSI_DH=y
+# CONFIG_SCSI_DH_RDAC is not set
+# CONFIG_SCSI_DH_HP_SW is not set
+# CONFIG_SCSI_DH_EMC is not set
+# CONFIG_SCSI_DH_ALUA is not set
+# CONFIG_SCSI_OSD_INITIATOR is not set
+# CONFIG_ATA is not set
+CONFIG_MD=y
+# CONFIG_BLK_DEV_MD is not set
+# CONFIG_BCACHE is not set
+CONFIG_BLK_DEV_DM_BUILTIN=y
+CONFIG_BLK_DEV_DM=y
+# CONFIG_DM_DEBUG is not set
+CONFIG_DM_BUFIO=y
+CONFIG_DM_CRYPT=y
+# CONFIG_DM_SNAPSHOT is not set
+# CONFIG_DM_THIN_PROVISIONING is not set
+# CONFIG_DM_CACHE is not set
+# CONFIG_DM_MIRROR is not set
+# CONFIG_DM_RAID is not set
+# CONFIG_DM_ZERO is not set
+# CONFIG_DM_MULTIPATH is not set
+# CONFIG_DM_DELAY is not set
+# CONFIG_DM_UEVENT is not set
+# CONFIG_DM_FLAKEY is not set
+CONFIG_DM_VERITY=y
+CONFIG_DM_VERITY_FEC=y
+# CONFIG_TARGET_CORE is not set
+CONFIG_NETDEVICES=y
+CONFIG_NET_CORE=y
+# CONFIG_BONDING is not set
+CONFIG_DUMMY=y
+# CONFIG_EQUALIZER is not set
+CONFIG_MII=y
+# CONFIG_IFB is not set
+# CONFIG_NET_TEAM is not set
+# CONFIG_MACVLAN is not set
+# CONFIG_VXLAN is not set
+# CONFIG_NETCONSOLE is not set
+# CONFIG_NETPOLL is not set
+# CONFIG_NET_POLL_CONTROLLER is not set
+CONFIG_TUN=y
+# CONFIG_VETH is not set
+
+#
+# CAIF transport drivers
+#
+
+#
+# Distributed Switch Architecture drivers
+#
+# CONFIG_NET_DSA_MV88E6XXX is not set
+# CONFIG_NET_DSA_MV88E6060 is not set
+# CONFIG_NET_DSA_MV88E6XXX_NEED_PPU is not set
+# CONFIG_NET_DSA_MV88E6131 is not set
+# CONFIG_NET_DSA_MV88E6123_61_65 is not set
+CONFIG_ETHERNET=y
+CONFIG_NET_CADENCE=y
+# CONFIG_ARM_AT91_ETHER is not set
+# CONFIG_MACB is not set
+CONFIG_NET_VENDOR_BROADCOM=y
+# CONFIG_B44 is not set
+# CONFIG_NET_CALXEDA_XGMAC is not set
+CONFIG_NET_VENDOR_CIRRUS=y
+# CONFIG_CS89x0 is not set
+# CONFIG_DM9000 is not set
+# CONFIG_DNET is not set
+CONFIG_NET_VENDOR_FARADAY=y
+# CONFIG_FTMAC100 is not set
+# CONFIG_FTGMAC100 is not set
+CONFIG_NET_VENDOR_INTEL=y
+CONFIG_NET_VENDOR_I825XX=y
+CONFIG_NET_VENDOR_MARVELL=y
+# CONFIG_MVMDIO is not set
+CONFIG_NET_VENDOR_MICREL=y
+# CONFIG_KS8851 is not set
+# CONFIG_KS8851_MLL is not set
+CONFIG_NET_VENDOR_MICROCHIP=y
+# CONFIG_ENC28J60 is not set
+CONFIG_NET_VENDOR_NATSEMI=y
+CONFIG_NET_VENDOR_8390=y
+# CONFIG_AX88796 is not set
+# CONFIG_ETHOC is not set
+CONFIG_NET_VENDOR_SEEQ=y
+CONFIG_NET_VENDOR_SMSC=y
+CONFIG_SMC91X=y
+# CONFIG_SMC911X is not set
+CONFIG_SMSC911X=y
+# CONFIG_SMSC911X_ARCH_HOOKS is not set
+CONFIG_NET_VENDOR_STMICRO=y
+# CONFIG_STMMAC_ETH is not set
+CONFIG_NET_VENDOR_WIZNET=y
+# CONFIG_WIZNET_W5100 is not set
+# CONFIG_WIZNET_W5300 is not set
+# CONFIG_SPRD_VETH is not set
+# CONFIG_BIH is not set
+CONFIG_PHYLIB=y
+
+#
+# MII PHY device drivers
+#
+# CONFIG_AT803X_PHY is not set
+# CONFIG_AMD_PHY is not set
+# CONFIG_MARVELL_PHY is not set
+# CONFIG_DAVICOM_PHY is not set
+# CONFIG_QSEMI_PHY is not set
+# CONFIG_LXT_PHY is not set
+# CONFIG_CICADA_PHY is not set
+# CONFIG_VITESSE_PHY is not set
+# CONFIG_SMSC_PHY is not set
+# CONFIG_BROADCOM_PHY is not set
+# CONFIG_BCM87XX_PHY is not set
+# CONFIG_ICPLUS_PHY is not set
+# CONFIG_REALTEK_PHY is not set
+# CONFIG_NATIONAL_PHY is not set
+# CONFIG_STE10XP is not set
+# CONFIG_LSI_ET1011C_PHY is not set
+# CONFIG_MICREL_PHY is not set
+# CONFIG_FIXED_PHY is not set
+# CONFIG_MDIO_BITBANG is not set
+# CONFIG_MDIO_BUS_MUX_GPIO is not set
+# CONFIG_MDIO_BUS_MUX_MMIOREG is not set
+# CONFIG_MICREL_KS8995MA is not set
+CONFIG_PPP=y
+CONFIG_PPP_BSDCOMP=y
+CONFIG_PPP_DEFLATE=y
+CONFIG_PPP_FILTER=y
+CONFIG_PPP_MPPE=y
+CONFIG_PPP_MULTILINK=y
+CONFIG_PPPOE=y
+CONFIG_PPTP=y
+CONFIG_PPPOL2TP=y
+CONFIG_PPPOLAC=y
+CONFIG_PPPOPNS=y
+CONFIG_PPP_ASYNC=y
+# CONFIG_PPP_SYNC_TTY is not set
+# CONFIG_SLIP is not set
+CONFIG_SLHC=y
+
+#
+# USB Network Adapters
+#
+# CONFIG_USB_CATC is not set
+# CONFIG_USB_KAWETH is not set
+# CONFIG_USB_PEGASUS is not set
+# CONFIG_USB_RTL8150 is not set
+# CONFIG_USB_RTL8152 is not set
+# CONFIG_USB_USBNET is not set
+# CONFIG_USB_HSO is not set
+# CONFIG_USB_IPHETH is not set
+CONFIG_WLAN=y
+# CONFIG_USB_ZD1201 is not set
+# CONFIG_USB_NET_RNDIS_WLAN is not set
+# CONFIG_WIFI_CONTROL_FUNC is not set
+# CONFIG_ATH_CARDS is not set
+# CONFIG_BCMDHD is not set
+# CONFIG_BRCMFMAC is not set
+# CONFIG_HOSTAP is not set
+# CONFIG_LIBERTAS is not set
+# CONFIG_WL_TI is not set
+# CONFIG_MWIFIEX is not set
+# CONFIG_SPRDWL is not set
+CONFIG_SC2331_MEM_ALLOC=y
+
+#
+# Enable WiMAX (Networking options) to see the WiMAX drivers
+#
+# CONFIG_WAN is not set
+# CONFIG_ISDN is not set
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+# CONFIG_INPUT_FF_MEMLESS is not set
+# CONFIG_INPUT_POLLDEV is not set
+# CONFIG_INPUT_SPARSEKMAP is not set
+CONFIG_INPUT_MATRIXKMAP=y
+
+#
+# Userland interfaces
+#
+# CONFIG_INPUT_MOUSEDEV is not set
+# CONFIG_INPUT_JOYDEV is not set
+CONFIG_INPUT_EVDEV=y
+# CONFIG_INPUT_EVBUG is not set
+# CONFIG_INPUT_KEYRESET is not set
+# CONFIG_INPUT_KEYCOMBO is not set
+
+#
+# Input Device Drivers
+#
+CONFIG_INPUT_KEYBOARD=y
+# CONFIG_KEYBOARD_ADP5588 is not set
+# CONFIG_KEYBOARD_ADP5589 is not set
+# CONFIG_KEYBOARD_ATKBD is not set
+# CONFIG_KEYBOARD_QT1070 is not set
+# CONFIG_KEYBOARD_QT2160 is not set
+# CONFIG_KEYBOARD_LKKBD is not set
+CONFIG_KEYBOARD_GPIO=y
+# CONFIG_KEYBOARD_GPIO_SPRD is not set
+# CONFIG_KEYBOARD_TCA6416 is not set
+# CONFIG_KEYBOARD_TCA8418 is not set
+# CONFIG_KEYBOARD_MATRIX is not set
+# CONFIG_KEYBOARD_LM8323 is not set
+# CONFIG_KEYBOARD_LM8333 is not set
+# CONFIG_KEYBOARD_MAX7359 is not set
+# CONFIG_KEYBOARD_MCS is not set
+# CONFIG_KEYBOARD_MPR121 is not set
+# CONFIG_KEYBOARD_NEWTON is not set
+# CONFIG_KEYBOARD_OPENCORES is not set
+# CONFIG_KEYBOARD_SAMSUNG is not set
+# CONFIG_KEYBOARD_STOWAWAY is not set
+# CONFIG_KEYBOARD_SUNKBD is not set
+# CONFIG_KEYBOARD_XTKBD is not set
+# CONFIG_KEYBOARD_SC is not set
+CONFIG_KEYBOARD_SPRD_EIC=y
+# CONFIG_KEYBOARD_TC350K_J33G is not set
+# CONFIG_KEYBOARD_TC300K is not set
+# CONFIG_KEYBOARD_TC350K is not set
+# CONFIG_KEYBOARD_MELFAS_MHS204 is not set
+# CONFIG_INPUT_MOUSE is not set
+# CONFIG_INPUT_JOYSTICK is not set
+# CONFIG_INPUT_TABLET is not set
+CONFIG_INPUT_TOUCHSCREEN=y
+# CONFIG_TOUCHSCREEN_ADS7846 is not set
+# CONFIG_TOUCHSCREEN_AD7877 is not set
+# CONFIG_TOUCHSCREEN_AD7879 is not set
+# CONFIG_TOUCHSCREEN_ATMEL_MXT is not set
+# CONFIG_TOUCHSCREEN_AUO_PIXCIR is not set
+# CONFIG_TOUCHSCREEN_BU21013 is not set
+# CONFIG_TOUCHSCREEN_CY8CTMG110 is not set
+# CONFIG_TOUCHSCREEN_CYTTSP_CORE is not set
+# CONFIG_TOUCHSCREEN_DYNAPRO is not set
+# CONFIG_TOUCHSCREEN_HAMPSHIRE is not set
+# CONFIG_TOUCHSCREEN_EETI is not set
+# CONFIG_TOUCHSCREEN_EGALAX is not set
+# CONFIG_TOUCHSCREEN_FUJITSU is not set
+# CONFIG_TOUCHSCREEN_ILI210X is not set
+# CONFIG_TOUCHSCREEN_GUNZE is not set
+# CONFIG_TOUCHSCREEN_ELO is not set
+# CONFIG_TOUCHSCREEN_WACOM_W8001 is not set
+# CONFIG_TOUCHSCREEN_WACOM_I2C is not set
+# CONFIG_TOUCHSCREEN_MAX11801 is not set
+# CONFIG_TOUCHSCREEN_MCS5000 is not set
+# CONFIG_TOUCHSCREEN_MMS114 is not set
+# CONFIG_TOUCHSCREEN_ZT7554 is not set
+# CONFIG_TOUCHSCREEN_MTOUCH is not set
+# CONFIG_TOUCHSCREEN_INEXIO is not set
+# CONFIG_TOUCHSCREEN_MK712 is not set
+# CONFIG_TOUCHSCREEN_PENMOUNT is not set
+# CONFIG_TOUCHSCREEN_EDT_FT5X06 is not set
+# CONFIG_TOUCHSCREEN_TOUCHRIGHT is not set
+# CONFIG_TOUCHSCREEN_TOUCHWIN is not set
+# CONFIG_TOUCHSCREEN_PIXCIR is not set
+# CONFIG_TOUCHSCREEN_USB_COMPOSITE is not set
+# CONFIG_TOUCHSCREEN_TOUCHIT213 is not set
+# CONFIG_TOUCHSCREEN_TSC_SERIO is not set
+# CONFIG_TOUCHSCREEN_TSC2005 is not set
+# CONFIG_TOUCHSCREEN_TSC2007 is not set
+# CONFIG_TOUCHSCREEN_W90X900 is not set
+# CONFIG_TOUCHSCREEN_ST1232 is not set
+# CONFIG_TOUCHSCREEN_TPS6507X is not set
+CONFIG_TOUCHSCREEN_FOCALTECH=y
+# CONFIG_TOUCHSCREEN_FIRMWARE_UPGRADE is not set
+# CONFIG_TOUCHSCREEN_GOODIX is not set
+# CONFIG_TOUCHSCREEN_GOODIX2 is not set
+# CONFIG_TOUCHSCREEN_MMS136 is not set
+# CONFIG_TOUCHSCREEN_IST30XX is not set
+# CONFIG_TOUCHSCREEN_IST30XXA is not set
+# CONFIG_TOUCHSCREEN_IST30XXB is not set
+# CONFIG_TOUCHSCREEN_IST30XXC is not set
+# CONFIG_TOUCHSCREEN_IST30XXC_J33G is not set
+# CONFIG_TOUCHSCREEN_IST30XXD is not set
+# CONFIG_TOUCHSCREEN_MMS134 is not set
+# CONFIG_TOUCHSCREEN_MMS134S is not set
+# CONFIG_TOUCHSCREEN_MSG2138 is not set
+# CONFIG_TOUCHSCREEN_BT541_TS is not set
+# CONFIG_TOUCHSCREEN_MELFAS_MCS6000 is not set
+# CONFIG_TOUCHSCREEN_MELFAS_MCS8040L is not set
+# CONFIG_TOUCHSCREEN_MELFAS_MCS8040L_FOR_PIKEBJ1MINI is not set
+# CONFIG_TOUCHSCREEN_BT432_TS is not set
+CONFIG_INPUT_MISC=y
+# CONFIG_INPUT_AD714X is not set
+# CONFIG_INPUT_BMA150 is not set
+# CONFIG_INPUT_MMA8450 is not set
+# CONFIG_INPUT_MPU3050 is not set
+# CONFIG_INPUT_GP2A is not set
+# CONFIG_INPUT_GPIO_TILT_POLLED is not set
+# CONFIG_INPUT_ATI_REMOTE2 is not set
+# CONFIG_INPUT_KEYCHORD is not set
+# CONFIG_INPUT_KEYSPAN_REMOTE is not set
+# CONFIG_INPUT_KXTJ9 is not set
+# CONFIG_INPUT_POWERMATE is not set
+# CONFIG_INPUT_YEALINK is not set
+# CONFIG_INPUT_CM109 is not set
+CONFIG_INPUT_UINPUT=y
+CONFIG_INPUT_GPIO=y
+# CONFIG_INPUT_PCF8574 is not set
+# CONFIG_INPUT_GPIO_ROTARY_ENCODER is not set
+# CONFIG_INPUT_ADXL34X is not set
+# CONFIG_INPUT_IMS_PCU is not set
+# CONFIG_INPUT_CMA3000 is not set
+CONFIG_INPUT_HEADSET_SPRD_SC2723=y
+# CONFIG_INPUT_SPRD_HEADSET_SHARK is not set
+# CONFIG_INPUT_SPRD_HALL is not set
+# CONFIG_INPUT_LIS3DH_I2C is not set
+CONFIG_INPUT_LIS3DH_I2C_INTERRUPT=y
+# CONFIG_INPUT_LIS3DH_ZT_I2C is not set
+# CONFIG_INPUT_MEM3524X_I2C is not set
+# CONFIG_INPUT_LSM6DS0_I2C is not set
+CONFIG_INPUT_LTR558_I2C=y
+CONFIG_INPUT_EPL2182_I2C=y
+# CONFIG_INPUT_EPL259X_I2C is not set
+# CONFIG_INPUT_STK3311_I2C is not set
+# CONFIG_INPUT_FINGERPRINT is not set
+
+#
+# Hardware I/O ports
+#
+# CONFIG_SERIO is not set
+# CONFIG_GAMEPORT is not set
+
+#
+# Character devices
+#
+CONFIG_TTY=y
+# CONFIG_VT is not set
+CONFIG_UNIX98_PTYS=y
+# CONFIG_DEVPTS_MULTIPLE_INSTANCES is not set
+# CONFIG_LEGACY_PTYS is not set
+# CONFIG_SERIAL_NONSTANDARD is not set
+# CONFIG_N_GSM is not set
+# CONFIG_TRACE_SINK is not set
+CONFIG_DEVMEM=y
+CONFIG_DEVKMEM=y
+
+#
+# Serial drivers
+#
+# CONFIG_SERIAL_8250 is not set
+
+#
+# Non-8250 serial port support
+#
+# CONFIG_SERIAL_MAX3100 is not set
+# CONFIG_SERIAL_MAX310X is not set
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+# CONFIG_SERIAL_SCCNXP is not set
+# CONFIG_SERIAL_TIMBERDALE is not set
+# CONFIG_SERIAL_ALTERA_JTAGUART is not set
+# CONFIG_SERIAL_ALTERA_UART is not set
+# CONFIG_SERIAL_IFX6X60 is not set
+# CONFIG_SERIAL_XILINX_PS_UART is not set
+# CONFIG_SERIAL_ARC is not set
+CONFIG_SERIAL_SPRD_UART=y
+CONFIG_SERIAL_SPRD_UART_NR=4
+CONFIG_SERIAL_SPRD_UART_CONSOLE=y
+# CONFIG_TS0710_MUX_ENABLE is not set
+# CONFIG_MODEM_INTF is not set
+# CONFIG_MUX_SDIO_OPT1_HAL is not set
+# CONFIG_TTY_PRINTK is not set
+# CONFIG_HVC_DCC is not set
+# CONFIG_IPMI_HANDLER is not set
+# CONFIG_HW_RANDOM is not set
+# CONFIG_R3964 is not set
+# CONFIG_RAW_DRIVER is not set
+# CONFIG_TCG_TPM is not set
+# CONFIG_DCC_TTY is not set
+# CONFIG_MUX_SPI_HAL is not set
+CONFIG_I2C=y
+CONFIG_I2C_BOARDINFO=y
+CONFIG_I2C_COMPAT=y
+CONFIG_I2C_CHARDEV=y
+# CONFIG_I2C_MUX is not set
+CONFIG_I2C_HELPER_AUTO=y
+
+#
+# I2C Hardware Bus support
+#
+
+#
+# I2C system bus drivers (mostly embedded / system-on-chip)
+#
+# CONFIG_I2C_CBUS_GPIO is not set
+# CONFIG_I2C_DESIGNWARE_PLATFORM is not set
+# CONFIG_I2C_GPIO is not set
+# CONFIG_I2C_OCORES is not set
+# CONFIG_I2C_PCA_PLATFORM is not set
+# CONFIG_I2C_PXA_PCI is not set
+# CONFIG_I2C_SIMTEC is not set
+# CONFIG_I2C_XILINX is not set
+# CONFIG_I2C_RESUME_EARLY is not set
+# CONFIG_I2C_5_CLOCK_TREE_BUG is not set
+CONFIG_I2C_SPRD=y
+
+#
+# External I2C/SMBus adapter drivers
+#
+# CONFIG_I2C_SPRD_V1 is not set
+
+#
+# External I2C/SMBus adapter drivers
+#
+# CONFIG_I2C_DIOLAN_U2C is not set
+# CONFIG_I2C_PARPORT_LIGHT is not set
+# CONFIG_I2C_TAOS_EVM is not set
+# CONFIG_I2C_TINY_USB is not set
+
+#
+# Other I2C/SMBus bus drivers
+#
+CONFIG_I2C_SPRD_R6P0_DUTY=y
+# CONFIG_I2C_STUB is not set
+# CONFIG_I2C_DEBUG_CORE is not set
+# CONFIG_I2C_DEBUG_ALGO is not set
+# CONFIG_I2C_DEBUG_BUS is not set
+CONFIG_SPI=y
+# CONFIG_SPI_DEBUG is not set
+CONFIG_SPI_MASTER=y
+
+#
+# SPI Master Controller Drivers
+#
+# CONFIG_SPI_ALTERA is not set
+# CONFIG_SPI_BITBANG is not set
+# CONFIG_SPI_GPIO is not set
+# CONFIG_SPI_FSL_SPI is not set
+# CONFIG_SPI_OC_TINY is not set
+# CONFIG_SPI_PXA2XX_PCI is not set
+# CONFIG_SPI_SC18IS602 is not set
+# CONFIG_SPI_XCOMM is not set
+# CONFIG_SPI_XILINX is not set
+CONFIG_SPI_SCX35=y
+# CONFIG_SPI_DESIGNWARE is not set
+
+#
+# SPI Protocol Masters
+#
+# CONFIG_SPI_SPIDEV is not set
+# CONFIG_SPI_TLE62X0 is not set
+
+#
+# Qualcomm MSM SSBI bus support
+#
+# CONFIG_SSBI is not set
+# CONFIG_HSI is not set
+
+#
+# PPS support
+#
+# CONFIG_PPS is not set
+
+#
+# PPS generators support
+#
+
+#
+# PTP clock support
+#
+# CONFIG_PTP_1588_CLOCK is not set
+
+#
+# Enable PHYLIB and NETWORK_PHY_TIMESTAMPING to see the additional clocks.
+#
+# CONFIG_PTP_1588_CLOCK_PCH is not set
+CONFIG_ARCH_HAVE_CUSTOM_GPIO_H=y
+CONFIG_ARCH_REQUIRE_GPIOLIB=y
+CONFIG_GPIO_DEVRES=y
+CONFIG_GPIOLIB=y
+CONFIG_OF_GPIO=y
+# CONFIG_DEBUG_GPIO is not set
+CONFIG_GPIO_SYSFS=y
+
+#
+# Memory mapped GPIO drivers:
+#
+# CONFIG_GPIO_GENERIC_PLATFORM is not set
+# CONFIG_GPIO_EM is not set
+# CONFIG_GPIO_RCAR is not set
+# CONFIG_GPIO_SPRD is not set
+# CONFIG_GPIO_TS5500 is not set
+# CONFIG_GPIO_GRGPIO is not set
+
+#
+# I2C GPIO expanders:
+#
+# CONFIG_GPIO_MAX7300 is not set
+# CONFIG_GPIO_MAX732X is not set
+# CONFIG_GPIO_PCF857X is not set
+# CONFIG_GPIO_SX150X is not set
+# CONFIG_GPIO_ADP5588 is not set
+# CONFIG_GPIO_ADNP is not set
+
+#
+# PCI GPIO expanders:
+#
+
+#
+# SPI GPIO expanders:
+#
+# CONFIG_GPIO_MAX7301 is not set
+# CONFIG_GPIO_MCP23S08 is not set
+# CONFIG_GPIO_MC33880 is not set
+# CONFIG_GPIO_74X164 is not set
+
+#
+# AC97 GPIO expanders:
+#
+
+#
+# MODULbus GPIO expanders:
+#
+
+#
+# USB GPIO expanders:
+#
+# CONFIG_W1 is not set
+CONFIG_POWER_SUPPLY=y
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+# CONFIG_PDA_POWER is not set
+# CONFIG_GENERIC_ADC_BATTERY is not set
+# CONFIG_TEST_POWER is not set
+# CONFIG_BATTERY_DS2780 is not set
+# CONFIG_BATTERY_DS2781 is not set
+# CONFIG_BATTERY_DS2782 is not set
+# CONFIG_BATTERY_SBS is not set
+# CONFIG_BATTERY_BQ27x00 is not set
+# CONFIG_BATTERY_MAX17040 is not set
+# CONFIG_BATTERY_MAX17042 is not set
+# CONFIG_CHARGER_LP8727 is not set
+# CONFIG_CHARGER_GPIO is not set
+# CONFIG_CHARGER_MANAGER is not set
+# CONFIG_CHARGER_BQ2415X is not set
+# CONFIG_SPRD_2713_POWER is not set
+CONFIG_SPRD_EXT_IC_POWER=y
+# CONFIG_SPRD_CHARGER_SM5701 is not set
+# CONFIG_SPRD_CHARGER_FAN5405 is not set
+CONFIG_SPRD_CHARGER_FAN54015=y
+# CONFIG_SPRD_CHARGER_SPRD_2701 is not set
+# CONFIG_BATTERY_GOLDFISH is not set
+# CONFIG_POWER_RESET is not set
+# CONFIG_POWER_RESET_RESTART is not set
+# CONFIG_POWER_AVS is not set
+# CONFIG_HWMON is not set
+CONFIG_THERMAL=y
+CONFIG_THERMAL_OF=y
+CONFIG_THERMAL_DEFAULT_GOV_STEP_WISE=y
+# CONFIG_THERMAL_DEFAULT_GOV_FAIR_SHARE is not set
+# CONFIG_THERMAL_DEFAULT_GOV_USER_SPACE is not set
+# CONFIG_THERMAL_GOV_FAIR_SHARE is not set
+CONFIG_THERMAL_GOV_STEP_WISE=y
+# CONFIG_THERMAL_GOV_USER_SPACE is not set
+# CONFIG_CPU_THERMAL is not set
+# CONFIG_THERMAL_EMULATION is not set
+CONFIG_THERMAL_DDIE=y
+# CONFIG_THERMAL_SC2723S_PMIC is not set
+# CONFIG_THERMAL_SC2713 is not set
+CONFIG_SPRD_CPU_COOLING=y
+# CONFIG_THERMAL_BOARD_SENSOR is not set
+# CONFIG_THERMAL_ALONE_DDIE is not set
+# CONFIG_WATCHDOG is not set
+CONFIG_SSB_POSSIBLE=y
+
+#
+# Sonics Silicon Backplane
+#
+# CONFIG_SSB is not set
+CONFIG_BCMA_POSSIBLE=y
+
+#
+# Broadcom specific AMBA
+#
+# CONFIG_BCMA is not set
+
+#
+# Multifunction device drivers
+#
+# CONFIG_MFD_CORE is not set
+# CONFIG_MFD_SM5504 is not set
+# CONFIG_MFD_SM5701 is not set
+# CONFIG_MFD_SPRD_SM5701 is not set
+# CONFIG_MFD_USB_TYPEC is not set
+# CONFIG_MFD_RT8973 is not set
+# CONFIG_MFD_AS3711 is not set
+# CONFIG_MFD_RT5033 is not set
+# CONFIG_PMIC_ADP5520 is not set
+# CONFIG_MFD_LM3632 is not set
+# CONFIG_MFD_AAT2870_CORE is not set
+# CONFIG_MFD_CROS_EC is not set
+# CONFIG_MFD_ASIC3 is not set
+# CONFIG_PMIC_DA903X is not set
+# CONFIG_MFD_DA9052_SPI is not set
+# CONFIG_MFD_DA9052_I2C is not set
+# CONFIG_MFD_DA9055 is not set
+# CONFIG_MFD_MC13XXX_SPI is not set
+# CONFIG_MFD_MC13XXX_I2C is not set
+# CONFIG_HTC_EGPIO is not set
+# CONFIG_HTC_PASIC3 is not set
+# CONFIG_HTC_I2CPLD is not set
+# CONFIG_MFD_88PM800 is not set
+# CONFIG_MFD_88PM805 is not set
+# CONFIG_MFD_88PM860X is not set
+# CONFIG_MFD_MAX77686 is not set
+# CONFIG_MFD_MAX77693 is not set
+# CONFIG_MFD_MAX8907 is not set
+# CONFIG_MFD_MAX8925 is not set
+# CONFIG_MFD_MAX8997 is not set
+# CONFIG_MFD_MAX8998 is not set
+# CONFIG_EZX_PCAP is not set
+# CONFIG_MFD_VIPERBOARD is not set
+# CONFIG_MFD_RETU is not set
+# CONFIG_MFD_PCF50633 is not set
+# CONFIG_MFD_RC5T583 is not set
+# CONFIG_MFD_SEC_CORE is not set
+# CONFIG_MFD_SI476X_CORE is not set
+# CONFIG_MFD_SM501 is not set
+# CONFIG_MFD_SMSC is not set
+# CONFIG_ABX500_CORE is not set
+# CONFIG_MFD_STMPE is not set
+# CONFIG_MFD_SYSCON is not set
+# CONFIG_MFD_TI_AM335X_TSCADC is not set
+# CONFIG_MFD_LP8788 is not set
+# CONFIG_MFD_PALMAS is not set
+# CONFIG_TPS6105X is not set
+# CONFIG_TPS65010 is not set
+# CONFIG_TPS6507X is not set
+# CONFIG_MFD_TPS65090 is not set
+# CONFIG_MFD_TPS65217 is not set
+# CONFIG_MFD_TPS6586X is not set
+# CONFIG_MFD_TPS65910 is not set
+# CONFIG_MFD_TPS65912 is not set
+# CONFIG_MFD_TPS65912_I2C is not set
+# CONFIG_MFD_TPS65912_SPI is not set
+# CONFIG_MFD_TPS80031 is not set
+# CONFIG_TWL4030_CORE is not set
+# CONFIG_TWL6040_CORE is not set
+# CONFIG_MFD_WL1273_CORE is not set
+# CONFIG_MFD_LM3533 is not set
+# CONFIG_MFD_TC3589X is not set
+# CONFIG_MFD_TMIO is not set
+# CONFIG_MFD_T7L66XB is not set
+# CONFIG_MFD_TC6387XB is not set
+# CONFIG_MFD_TC6393XB is not set
+# CONFIG_MFD_ARIZONA_I2C is not set
+# CONFIG_MFD_ARIZONA_SPI is not set
+# CONFIG_MFD_WM8400 is not set
+# CONFIG_MFD_WM831X_I2C is not set
+# CONFIG_MFD_WM831X_SPI is not set
+# CONFIG_MFD_WM8350_I2C is not set
+# CONFIG_MFD_WM8994 is not set
+# CONFIG_VEXPRESS_CONFIG is not set
+# CONFIG_MFD_SMUIC is not set
+CONFIG_REGULATOR=y
+# CONFIG_REGULATOR_DEBUG is not set
+# CONFIG_REGULATOR_DUMMY is not set
+# CONFIG_REGULATOR_FIXED_VOLTAGE is not set
+# CONFIG_REGULATOR_VIRTUAL_CONSUMER is not set
+# CONFIG_REGULATOR_USERSPACE_CONSUMER is not set
+# CONFIG_REGULATOR_GPIO is not set
+# CONFIG_REGULATOR_AD5398 is not set
+# CONFIG_REGULATOR_FAN53555 is not set
+# CONFIG_REGULATOR_ISL6271A is not set
+# CONFIG_REGULATOR_MAX1586 is not set
+# CONFIG_REGULATOR_MAX8649 is not set
+# CONFIG_REGULATOR_MAX8660 is not set
+# CONFIG_REGULATOR_MAX8952 is not set
+# CONFIG_REGULATOR_MAX8973 is not set
+# CONFIG_REGULATOR_LP3971 is not set
+# CONFIG_REGULATOR_LP3972 is not set
+# CONFIG_REGULATOR_LP872X is not set
+# CONFIG_REGULATOR_LP8755 is not set
+# CONFIG_REGULATOR_TPS51632 is not set
+# CONFIG_REGULATOR_TPS62360 is not set
+# CONFIG_REGULATOR_TPS65023 is not set
+# CONFIG_REGULATOR_TPS6507X is not set
+# CONFIG_REGULATOR_TPS6524X is not set
+CONFIG_REGULATOR_SC2723=y
+CONFIG_REGULATOR_SPRD_MAP_V1="mach/chip_x35l/__sc2723_regulator_map.h"
+# CONFIG_REGULATOR_EXT_DCDC is not set
+CONFIG_MEDIA_SUPPORT=y
+
+#
+# Multimedia core support
+#
+# CONFIG_VIDEO_GSPN_SPRD is not set
+CONFIG_VIDEO_GSP_SPRD=y
+CONFIG_VIDEO_DCAM_SPRD=y
+CONFIG_CAMERA_FLASH_SGM3140=y
+# CONFIG_CAMERA_FLASH_PARALLEL_BG is not set
+# CONFIG_CAMERA_FLASH_GPIO_8132 is not set
+# CONFIG_CAMERA_FLASH_GPIO_CTRL is not set
+# CONFIG_CAMERA_FLASH_SPRD_GPIO is not set
+# CONFIG_CAMERA_FLASH_SM5701 is not set
+# CONFIG_CAMERA_FLASH_SPRD_SM5701 is not set
+# CONFIG_CAMERA_FLASH_COMMON is not set
+CONFIG_MEDIA_CAMERA_SUPPORT=y
+# CONFIG_MEDIA_ANALOG_TV_SUPPORT is not set
+# CONFIG_MEDIA_DIGITAL_TV_SUPPORT is not set
+# CONFIG_MEDIA_RADIO_SUPPORT is not set
+# CONFIG_MEDIA_RC_SUPPORT is not set
+# CONFIG_MEDIA_CONTROLLER is not set
+CONFIG_VIDEO_DEV=y
+CONFIG_VIDEO_V4L2=y
+# CONFIG_VIDEO_ADV_DEBUG is not set
+# CONFIG_VIDEO_FIXED_MINOR_RANGES is not set
+CONFIG_VIDEOBUF_GEN=y
+CONFIG_VIDEOBUF_VMALLOC=y
+# CONFIG_VIDEO_V4L2_INT_DEVICE is not set
+# CONFIG_TTPCI_EEPROM is not set
+
+#
+# Media drivers
+#
+# CONFIG_MEDIA_USB_SUPPORT is not set
+CONFIG_V4L_PLATFORM_DRIVERS=y
+# CONFIG_SOC_CAMERA is not set
+# CONFIG_V4L_MEM2MEM_DRIVERS is not set
+# CONFIG_V4L_TEST_DRIVERS is not set
+
+#
+# Supported MMC/SDIO adapters
+#
+# CONFIG_CYPRESS_FIRMWARE is not set
+
+#
+# Media ancillary drivers (tuners, sensors, i2c, frontends)
+#
+CONFIG_MEDIA_SUBDRV_AUTOSELECT=y
+
+#
+# Audio decoders, processors and mixers
+#
+
+#
+# RDS decoders
+#
+
+#
+# Video decoders
+#
+
+#
+# Video and audio decoders
+#
+
+#
+# Video encoders
+#
+
+#
+# Camera sensor devices
+#
+
+#
+# Flash devices
+#
+
+#
+# Video improvement chips
+#
+
+#
+# Miscelaneous helper chips
+#
+
+#
+# Sensors used on soc_camera driver
+#
+
+#
+# Tools to develop new frontends
+#
+# CONFIG_DVB_DUMMY_FE is not set
+
+#
+# SPREADTRUM SC2331 FM driver
+#
+CONFIG_RADIO_SPRD2331=m
+
+#
+# Graphics support
+#
+# CONFIG_DRM is not set
+CONFIG_SPRD_IOMMU=y
+# CONFIG_VGASTATE is not set
+# CONFIG_VIDEO_OUTPUT_CONTROL is not set
+CONFIG_FB=y
+# CONFIG_FIRMWARE_EDID is not set
+# CONFIG_FB_DDC is not set
+# CONFIG_FB_BOOT_VESA_SUPPORT is not set
+CONFIG_FB_CFB_FILLRECT=y
+CONFIG_FB_CFB_COPYAREA=y
+CONFIG_FB_CFB_IMAGEBLIT=y
+# CONFIG_FB_CFB_REV_PIXELS_IN_BYTE is not set
+# CONFIG_FB_SYS_FILLRECT is not set
+# CONFIG_FB_SYS_COPYAREA is not set
+# CONFIG_FB_SYS_IMAGEBLIT is not set
+# CONFIG_FB_FOREIGN_ENDIAN is not set
+# CONFIG_FB_SYS_FOPS is not set
+# CONFIG_FB_SVGALIB is not set
+# CONFIG_FB_MACMODES is not set
+# CONFIG_FB_BACKLIGHT is not set
+# CONFIG_FB_MODE_HELPERS is not set
+# CONFIG_FB_TILEBLITTING is not set
+
+#
+# Frame buffer hardware drivers
+#
+# CONFIG_FB_ARMHDLCD is not set
+# CONFIG_FB_S1D13XXX is not set
+# CONFIG_FB_SMSCUFX is not set
+# CONFIG_FB_UDL is not set
+# CONFIG_FB_GOLDFISH is not set
+# CONFIG_FB_VIRTUAL is not set
+# CONFIG_FB_METRONOME is not set
+# CONFIG_FB_BROADSHEET is not set
+# CONFIG_FB_AUO_K190X is not set
+# CONFIG_FB_SIMPLE is not set
+CONFIG_FB_SCX35L=y
+CONFIG_SPRD_FB_SIZE=8
+# CONFIG_BMP_24BPP is not set
+# CONFIG_FB_LCD_HX8369B_MIPI_COREPRIMELITE is not set
+# CONFIG_FB_LCD_SD7798D_MIPI_COREPRIMELITE is not set
+# CONFIG_FB_LCD_HX8369B_MIPI_SHARKLS_Z3LTE is not set
+# CONFIG_FB_LCD_HX8369B_MIPI_SHARKLC_Z2LTE is not set
+# CONFIG_FB_LCD_SD7798D_MIPI_SHARKLS_Z3LTE is not set
+# CONFIG_FB_LCD_HX8369B_MIPI_SHARKL_J1POPLTE is not set
+# CONFIG_FB_LCD_HX8379C_MIPI_SHARKL_J1POPLTE is not set
+# CONFIG_FB_LCD_S6E8AA5X01_MIPI is not set
+# CONFIG_FB_LCD_HX8369B_MIPI_COREPRIMELITE_MARLIN is not set
+# CONFIG_FB_LCD_S6D77ALA_MIPI_PIKEBJ1MINI is not set
+# CONFIG_FB_LCD_SC7798D_MIPI_PIKEBJ1MINI is not set
+# CONFIG_FB_LCD_NT35516_MIPI is not set
+# CONFIG_FB_LCD_NT35596H_MIPI is not set
+# CONFIG_FB_LCD_NT35596H_RDC_MIPI is not set
+# CONFIG_FB_LCD_FL10802_MIPI is not set
+# CONFIG_FB_LCD_JD9161_MIPI is not set
+# CONFIG_FB_LCD_ILI6150_LVDS is not set
+# CONFIG_FB_LCD_RM68180_MIPI is not set
+# CONFIG_FB_LCD_HX8394D_MIPI is not set
+# CONFIG_FB_LCD_OLED_BACKLIGHT is not set
+CONFIG_FB_LCD_DUMMY=y
+# CONFIG_FB_LCD_NT35516_MCU is not set
+# CONFIG_FB_LCD_ILI9806E_MIPI is not set
+CONFIG_FB_LCD_ILI9806E_2_MIPI=y
+# CONFIG_FB_LCD_S6D7AA0X62_MIPI is not set
+CONFIG_FB_LCD_OTM8019A_MIPI=y
+CONFIG_FB_LCD_HX8394A_MIPI=y
+CONFIG_FB_LCD_ILI9881C_MIPI=y
+# CONFIG_FB_LCD_AMS549HQ01_MIPI is not set
+CONFIG_FB_LCD_RESERVE_MEM=y
+CONFIG_FB_LCD_OVERLAY_SUPPORT=y
+CONFIG_FB_VSYNC_SUPPORT=y
+# CONFIG_FB_DYNAMIC_CLK_SUPPORT is not set
+CONFIG_FB_DYNAMIC_FREQ_SCALING=y
+# CONFIG_FB_USE_MEGACORES_MIPI_DPHY is not set
+# CONFIG_FB_LOW_RES_SIMU is not set
+CONFIG_FB_TRIPLE_FRAMEBUFFER=y
+# CONFIG_EXYNOS_VIDEO is not set
+CONFIG_BACKLIGHT_LCD_SUPPORT=y
+CONFIG_LCD_CLASS_DEVICE=y
+# CONFIG_LCD_L4F00242T03 is not set
+# CONFIG_LCD_LMS283GF05 is not set
+# CONFIG_LCD_LTV350QV is not set
+# CONFIG_LCD_ILI922X is not set
+# CONFIG_LCD_ILI9320 is not set
+# CONFIG_LCD_TDO24M is not set
+# CONFIG_LCD_VGG2432A4 is not set
+# CONFIG_LCD_PLATFORM is not set
+# CONFIG_LCD_S6E63M0 is not set
+# CONFIG_LCD_LD9040 is not set
+# CONFIG_LCD_AMS369FG06 is not set
+# CONFIG_LCD_LMS501KF03 is not set
+# CONFIG_LCD_HX8357 is not set
+CONFIG_BACKLIGHT_SPRD_PWM=y
+# CONFIG_BACKLIGHT_SPRD is not set
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+# CONFIG_BACKLIGHT_GENERIC is not set
+# CONFIG_BACKLIGHT_ADP8860 is not set
+# CONFIG_BACKLIGHT_ADP8870 is not set
+# CONFIG_BACKLIGHT_LM3630 is not set
+# CONFIG_BACKLIGHT_LM3632 is not set
+# CONFIG_BACKLIGHT_LM3639 is not set
+# CONFIG_BACKLIGHT_LP855X is not set
+# CONFIG_BACKLIGHT_KTD253B is not set
+# CONFIG_BACKLIGHT_KTD2801 is not set
+# CONFIG_BACKLIGHT_RT4502 is not set
+# CONFIG_BACKLIGHT_LCD_PANEL_CABC is not set
+# CONFIG_ADF is not set
+# CONFIG_LOGO is not set
+# CONFIG_FB_SSD1307 is not set
+CONFIG_SOUND=y
+# CONFIG_SOUND_OSS_CORE is not set
+CONFIG_SND=y
+CONFIG_SND_TIMER=y
+CONFIG_SND_PCM=y
+CONFIG_SND_HWDEP=y
+CONFIG_SND_RAWMIDI=y
+CONFIG_SND_COMPRESS_OFFLOAD=y
+CONFIG_SND_JACK=y
+# CONFIG_SND_SEQUENCER is not set
+# CONFIG_SND_MIXER_OSS is not set
+# CONFIG_SND_PCM_OSS is not set
+# CONFIG_SND_HRTIMER is not set
+# CONFIG_SND_DYNAMIC_MINORS is not set
+CONFIG_SND_SUPPORT_OLD_API=y
+CONFIG_SND_VERBOSE_PROCFS=y
+# CONFIG_SND_VERBOSE_PRINTK is not set
+# CONFIG_SND_DEBUG is not set
+# CONFIG_SND_RAWMIDI_SEQ is not set
+# CONFIG_SND_OPL3_LIB_SEQ is not set
+# CONFIG_SND_OPL4_LIB_SEQ is not set
+# CONFIG_SND_SBAWE_SEQ is not set
+# CONFIG_SND_EMU10K1_SEQ is not set
+CONFIG_SND_DRIVERS=y
+# CONFIG_SND_DUMMY is not set
+# CONFIG_SND_ALOOP is not set
+# CONFIG_SND_MTPAV is not set
+# CONFIG_SND_SERIAL_U16550 is not set
+# CONFIG_SND_MPU401 is not set
+CONFIG_SND_SPRD_SAUDIO=y
+CONFIG_SND_ARM=y
+CONFIG_SND_SPI=y
+CONFIG_SND_USB=y
+CONFIG_SND_USB_AUDIO=y
+# CONFIG_SND_USB_UA101 is not set
+# CONFIG_SND_USB_CAIAQ is not set
+# CONFIG_SND_USB_6FIRE is not set
+CONFIG_SND_SOC=y
+CONFIG_SND_SOC_PM_DOWN_TIME=5000
+# CONFIG_SND_ATMEL_SOC is not set
+# CONFIG_SND_DESIGNWARE_I2S is not set
+
+#
+# SoC Audio for the SPREADTRUM
+#
+CONFIG_SND_SOC_SPRD=y
+# CONFIG_SND_SOC_SPRD_VBC_R1P0_SPRD_CODEC_V1 is not set
+# CONFIG_SND_SOC_SPRD_VBC_R2P0_SPRD_CODEC_V3 is not set
+CONFIG_SND_SOC_SPRD_VBC_R2P0_SPRD_CODEC_V4=y
+# CONFIG_SND_SOC_SPRD_MACHINE_TI is not set
+# CONFIG_SND_SOC_SPRD_MACHINE_4AUDIENCE is not set
+# CONFIG_SND_SOC_SPRD_MACHINE_4REALTEK is not set
+CONFIG_SND_SOC_SPRD_I2S_V0_NULL_CODEC=y
+CONFIG_SND_SOC_SPRD_AUDIO_DEBUG=y
+# CONFIG_SND_SOC_SPRD_AUDIO_SIPC is not set
+
+#
+# SPRD AUDIO DMA
+#
+CONFIG_SND_SOC_SPRD_AUDIO_DMA=y
+CONFIG_SND_SOC_SPRD_AUDIO_BUFFER_USE_IRAM=y
+# CONFIG_SND_SOC_SPRD_IRAM_BACKUP is not set
+
+#
+# VBC
+#
+CONFIG_SND_SOC_SPRD_VBC_R2P0=y
+CONFIG_SND_SOC_SPRD_VBC_SRC_OPEN=y
+CONFIG_SND_SOC_VBC_SRC_SAMPLE_RATE=32000
+# CONFIG_SND_SOC_SPRD_VBC_LR_INVERT is not set
+# CONFIG_SND_SOC_VBC_SUPPORT_DYNAMIC_EQ is not set
+CONFIG_SND_SOC_SPRD_VAUDIO=y
+CONFIG_SND_SOC_SPRD_I2S=y
+
+#
+# SPRD Codec
+#
+# CONFIG_SND_SOC_SPRD_USE_EAR_JACK_TYPE13 is not set
+CONFIG_SND_SOC_SPRD_CODEC_V4=y
+CONFIG_SND_SOC_SPRD_AUDIO_USE_INTER_HP_PA_V4=y
+# CONFIG_SND_SOC_SPRD_CODEC_EAR_WITH_IN_SPK is not set
+CONFIG_SND_SOC_SPRD_CODEC_NO_HP_POP=y
+CONFIG_SND_SOC_SPRD_HP_POP_DELAY_TIME=0
+CONFIG_SND_SOC_NULL_CODEC=y
+CONFIG_SND_SOC_I2C_AND_SPI=y
+# CONFIG_SND_SOC_ALL_CODECS is not set
+
+#
+# Audience earSmart Audio chip
+#
+# CONFIG_SND_SOC_ES705_ESCORE is not set
+# CONFIG_SND_SOC_ES804_ESCORE is not set
+# CONFIG_SND_SOC_ES902_ESCORE is not set
+# CONFIG_SND_SOC_ES704_ESCORE is not set
+# CONFIG_SND_SOC_ES755 is not set
+# CONFIG_SND_SOC_ES705_EXTCLK_OVER_GPIO is not set
+# CONFIG_SND_SOC_ES854 is not set
+# CONFIG_SND_SOC_N100 is not set
+# CONFIG_SND_SOC_ES857 is not set
+# CONFIG_OSP_SENSORHUB is not set
+# CONFIG_SND_SOC_ES_CDEV is not set
+CONFIG_SND_SOC_ES_WAKEUP_GPIO=y
+# CONFIG_SND_SOC_ES_GPIO_A is not set
+# CONFIG_SND_SIMPLE_CARD is not set
+# CONFIG_SOUND_PRIME is not set
+
+#
+# HID support
+#
+CONFIG_HID=y
+# CONFIG_HID_BATTERY_STRENGTH is not set
+# CONFIG_HIDRAW is not set
+CONFIG_UHID=y
+CONFIG_HID_GENERIC=y
+
+#
+# Special HID drivers
+#
+# CONFIG_HID_A4TECH is not set
+# CONFIG_HID_ACRUX is not set
+CONFIG_HID_APPLE=y
+# CONFIG_HID_APPLEIR is not set
+# CONFIG_HID_AUREAL is not set
+# CONFIG_HID_BELKIN is not set
+# CONFIG_HID_CHERRY is not set
+# CONFIG_HID_CHICONY is not set
+# CONFIG_HID_PRODIKEYS is not set
+# CONFIG_HID_CYPRESS is not set
+# CONFIG_HID_DRAGONRISE is not set
+# CONFIG_HID_EMS_FF is not set
+# CONFIG_HID_ELECOM is not set
+# CONFIG_HID_EZKEY is not set
+# CONFIG_HID_HOLTEK is not set
+# CONFIG_HID_KEYTOUCH is not set
+# CONFIG_HID_KYE is not set
+# CONFIG_HID_UCLOGIC is not set
+# CONFIG_HID_WALTOP is not set
+# CONFIG_HID_GYRATION is not set
+# CONFIG_HID_ICADE is not set
+# CONFIG_HID_TWINHAN is not set
+# CONFIG_HID_KENSINGTON is not set
+# CONFIG_HID_LCPOWER is not set
+# CONFIG_HID_LENOVO_TPKBD is not set
+# CONFIG_HID_LOGITECH is not set
+CONFIG_HID_MAGICMOUSE=y
+# CONFIG_HID_MICROSOFT is not set
+# CONFIG_HID_MONTEREY is not set
+# CONFIG_HID_MULTITOUCH is not set
+# CONFIG_HID_NTRIG is not set
+# CONFIG_HID_ORTEK is not set
+# CONFIG_HID_PANTHERLORD is not set
+# CONFIG_HID_PETALYNX is not set
+# CONFIG_HID_PICOLCD is not set
+# CONFIG_HID_PRIMAX is not set
+# CONFIG_HID_PS3REMOTE is not set
+# CONFIG_HID_ROCCAT is not set
+# CONFIG_HID_SAITEK is not set
+# CONFIG_HID_SAMSUNG is not set
+# CONFIG_HID_SONY is not set
+# CONFIG_HID_SPEEDLINK is not set
+# CONFIG_HID_STEELSERIES is not set
+# CONFIG_HID_SUNPLUS is not set
+# CONFIG_HID_GREENASIA is not set
+# CONFIG_HID_SMARTJOYPLUS is not set
+# CONFIG_HID_TIVO is not set
+# CONFIG_HID_TOPSEED is not set
+# CONFIG_HID_THINGM is not set
+# CONFIG_HID_THRUSTMASTER is not set
+# CONFIG_HID_WACOM is not set
+# CONFIG_HID_WIIMOTE is not set
+# CONFIG_HID_ZEROPLUS is not set
+# CONFIG_HID_ZYDACRON is not set
+# CONFIG_HID_SENSOR_HUB is not set
+
+#
+# USB HID support
+#
+CONFIG_USB_HID=y
+# CONFIG_HID_PID is not set
+# CONFIG_USB_HIDDEV is not set
+
+#
+# I2C HID support
+#
+# CONFIG_I2C_HID is not set
+CONFIG_USB_SUPPORT=y
+CONFIG_USB_COMMON=y
+CONFIG_USB_ARCH_HAS_HCD=y
+CONFIG_USB=y
+# CONFIG_USB_DEBUG is not set
+CONFIG_USB_ANNOUNCE_NEW_DEVICES=y
+
+#
+# Miscellaneous USB options
+#
+CONFIG_USB_DEFAULT_PERSIST=y
+# CONFIG_USB_DYNAMIC_MINORS is not set
+CONFIG_USB_OTG=y
+# CONFIG_USB_OTG_WHITELIST is not set
+# CONFIG_USB_OTG_BLACKLIST_HUB is not set
+# CONFIG_USB_MON is not set
+# CONFIG_USB_WUSB_CBAF is not set
+
+#
+# USB Host Controller Drivers
+#
+# CONFIG_USB_C67X00_HCD is not set
+# CONFIG_USB_XHCI_HCD is not set
+# CONFIG_USB_EHCI_HCD is not set
+# CONFIG_USB_OXU210HP_HCD is not set
+# CONFIG_USB_ISP116X_HCD is not set
+# CONFIG_USB_ISP1760_HCD is not set
+# CONFIG_USB_ISP1362_HCD is not set
+# CONFIG_USB_OHCI_HCD is not set
+# CONFIG_USB_SL811_HCD is not set
+# CONFIG_USB_R8A66597_HCD is not set
+# CONFIG_USB_MUSB_HDRC is not set
+# CONFIG_USB_RENESAS_USBHS is not set
+
+#
+# USB Device Class drivers
+#
+# CONFIG_USB_ACM is not set
+# CONFIG_USB_PRINTER is not set
+# CONFIG_USB_WDM is not set
+# CONFIG_USB_TMC is not set
+
+#
+# NOTE: USB_STORAGE depends on SCSI but BLK_DEV_SD may
+#
+
+#
+# also be needed; see USB_STORAGE Help for more info
+#
+CONFIG_USB_STORAGE=y
+# CONFIG_USB_STORAGE_DEBUG is not set
+# CONFIG_USB_STORAGE_REALTEK is not set
+# CONFIG_USB_STORAGE_DATAFAB is not set
+# CONFIG_USB_STORAGE_FREECOM is not set
+# CONFIG_USB_STORAGE_ISD200 is not set
+# CONFIG_USB_STORAGE_USBAT is not set
+# CONFIG_USB_STORAGE_SDDR09 is not set
+# CONFIG_USB_STORAGE_SDDR55 is not set
+# CONFIG_USB_STORAGE_JUMPSHOT is not set
+# CONFIG_USB_STORAGE_ALAUDA is not set
+# CONFIG_USB_STORAGE_ONETOUCH is not set
+# CONFIG_USB_STORAGE_KARMA is not set
+# CONFIG_USB_STORAGE_CYPRESS_ATACB is not set
+# CONFIG_USB_STORAGE_ENE_UB6250 is not set
+
+#
+# USB Imaging devices
+#
+# CONFIG_USB_MDC800 is not set
+# CONFIG_USB_MICROTEK is not set
+# CONFIG_USB_DWC3 is not set
+# CONFIG_USB_CHIPIDEA is not set
+
+#
+# USB port drivers
+#
+# CONFIG_USB_SERIAL is not set
+
+#
+# USB Miscellaneous drivers
+#
+# CONFIG_USB_EMI62 is not set
+# CONFIG_USB_EMI26 is not set
+# CONFIG_USB_ADUTUX is not set
+# CONFIG_USB_SEVSEG is not set
+# CONFIG_USB_RIO500 is not set
+# CONFIG_USB_LEGOTOWER is not set
+# CONFIG_USB_LCD is not set
+# CONFIG_USB_LED is not set
+# CONFIG_USB_CYPRESS_CY7C63 is not set
+# CONFIG_USB_CYTHERM is not set
+# CONFIG_USB_IDMOUSE is not set
+# CONFIG_USB_FTDI_ELAN is not set
+# CONFIG_USB_APPLEDISPLAY is not set
+# CONFIG_USB_LD is not set
+# CONFIG_USB_TRANCEVIBRATOR is not set
+# CONFIG_USB_IOWARRIOR is not set
+# CONFIG_USB_TEST is not set
+# CONFIG_USB_ISIGHTFW is not set
+# CONFIG_USB_YUREX is not set
+# CONFIG_USB_EZUSB_FX2 is not set
+# CONFIG_USB_HSIC_USB3503 is not set
+# CONFIG_USB_PHY is not set
+CONFIG_USB_OTG_WAKELOCK=y
+CONFIG_USB_GADGET=y
+# CONFIG_USB_GADGET_DEBUG is not set
+# CONFIG_USB_GADGET_DEBUG_FILES is not set
+# CONFIG_USB_GADGET_DEBUG_FS is not set
+CONFIG_USB_GADGET_VBUS_DRAW=2
+CONFIG_USB_GADGET_STORAGE_NUM_BUFFERS=2
+
+#
+# USB Peripheral Controller
+#
+# CONFIG_USB_FUSB300 is not set
+# CONFIG_USB_R8A66597 is not set
+# CONFIG_USB_PXA27X is not set
+# CONFIG_USB_MV_UDC is not set
+# CONFIG_USB_MV_U3D is not set
+# CONFIG_USB_M66592 is not set
+# CONFIG_USB_NET2272 is not set
+# CONFIG_USB_DUMMY_HCD is not set
+CONFIG_USB_GADGET_SPRD_DWC=y
+CONFIG_USB_SPRD_DWC=y
+CONFIG_USB_LIBCOMPOSITE=y
+CONFIG_USB_F_ACM=y
+CONFIG_USB_U_SERIAL=y
+# CONFIG_USB_ZERO is not set
+# CONFIG_USB_AUDIO is not set
+# CONFIG_USB_ETH is not set
+# CONFIG_USB_G_NCM is not set
+# CONFIG_USB_GADGETFS is not set
+# CONFIG_USB_FUNCTIONFS is not set
+# CONFIG_USB_MASS_STORAGE is not set
+# CONFIG_USB_G_SERIAL is not set
+# CONFIG_USB_MIDI_GADGET is not set
+# CONFIG_USB_G_PRINTER is not set
+CONFIG_USB_G_ANDROID=y
+# CONFIG_USB_ANDROID_RNDIS_DWORD_ALIGNED is not set
+# CONFIG_USB_CDC_COMPOSITE is not set
+# CONFIG_USB_G_ACM_MS is not set
+# CONFIG_USB_G_MULTI is not set
+# CONFIG_USB_G_HID is not set
+# CONFIG_USB_G_DBGP is not set
+# CONFIG_USB_G_WEBCAM is not set
+CONFIG_USB_CORE_IP_293A=y
+# CONFIG_SPRD_USB_DEVICE_ONLY is not set
+# CONFIG_SHARK_PAD_HW_V102 is not set
+# CONFIG_USB_INTERRUPT_BY_MUIC is not set
+CONFIG_MMC=y
+# CONFIG_MMC_DEBUG is not set
+CONFIG_MMC_UNSAFE_RESUME=y
+# CONFIG_MMC_CLKGATE is not set
+# CONFIG_MMC_EMBEDDED_SDIO is not set
+# CONFIG_MMC_PARANOID_SD_INIT is not set
+
+#
+# MMC/SD/SDIO Card Drivers
+#
+CONFIG_MMC_BLOCK=y
+CONFIG_MMC_BLOCK_MINORS=32
+CONFIG_MMC_BLOCK_BOUNCE=y
+CONFIG_MMC_BLOCK_DEFERRED_RESUME=y
+# CONFIG_SDIO_UART is not set
+# CONFIG_SDIO_CHANNEL is not set
+CONFIG_SDIO_CARD=y
+CONFIG_MMC_TEST=m
+
+#
+# MMC/SD/SDIO Host Controller Drivers
+#
+# CONFIG_MMC_SDHCI is not set
+# CONFIG_MMC_SDHCI_PXAV3 is not set
+# CONFIG_MMC_SDHCI_PXAV2 is not set
+CONFIG_MMC_SDHOST=y
+# CONFIG_MMC_SDHOST_NEW is not set
+# CONFIG_MMC_DW is not set
+# CONFIG_MMC_VUB300 is not set
+# CONFIG_MMC_USHC is not set
+# CONFIG_SC_FPGA_DEBUG_MMC is not set
+# CONFIG_MEMSTICK is not set
+CONFIG_NEW_LEDS=y
+CONFIG_LEDS_CLASS=y
+
+#
+# LED drivers
+#
+# CONFIG_FLASHLIGHT is not set
+# CONFIG_LEDS_LM3530 is not set
+# CONFIG_LEDS_LM3642 is not set
+# CONFIG_LEDS_LM3648 is not set
+# CONFIG_LEDS_PCA9532 is not set
+# CONFIG_LEDS_GPIO is not set
+# CONFIG_LEDS_LP3944 is not set
+# CONFIG_LEDS_LP5521 is not set
+# CONFIG_LEDS_LP5523 is not set
+# CONFIG_LEDS_LP5562 is not set
+# CONFIG_LEDS_PCA955X is not set
+# CONFIG_LEDS_PCA9633 is not set
+# CONFIG_LEDS_DAC124S085 is not set
+# CONFIG_LEDS_REGULATOR is not set
+# CONFIG_LEDS_BD2802 is not set
+# CONFIG_LEDS_LT3593 is not set
+# CONFIG_LEDS_RENESAS_TPU is not set
+# CONFIG_LEDS_TCA6507 is not set
+# CONFIG_LEDS_LM355x is not set
+# CONFIG_LEDS_OT200 is not set
+# CONFIG_LEDS_BLINKM is not set
+# CONFIG_LEDS_SC8810_KB is not set
+CONFIG_SPRD_KPLED_2723=y
+CONFIG_LEDS_SPRD_BLTC_RGB=y
+# CONFIG_LEDS_SPRD_BLTC_RGB_2731 is not set
+# CONFIG_LEDS_SPRD_RGB is not set
+
+#
+# LED Triggers
+#
+# CONFIG_LEDS_TRIGGERS is not set
+CONFIG_SWITCH=y
+CONFIG_SWITCH_GPIO=y
+# CONFIG_ACCESSIBILITY is not set
+# CONFIG_EDAC is not set
+CONFIG_RTC_LIB=y
+CONFIG_RTC_CLASS=y
+CONFIG_RTC_HCTOSYS=y
+CONFIG_RTC_SYSTOHC=y
+CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
+# CONFIG_RTC_DEBUG is not set
+
+#
+# RTC interfaces
+#
+CONFIG_RTC_INTF_SYSFS=y
+CONFIG_RTC_INTF_PROC=y
+CONFIG_RTC_INTF_DEV=y
+# CONFIG_RTC_INTF_DEV_UIE_EMUL is not set
+# CONFIG_RTC_DRV_TEST is not set
+
+#
+# I2C RTC drivers
+#
+# CONFIG_RTC_DRV_DS1307 is not set
+# CONFIG_RTC_DRV_DS1374 is not set
+# CONFIG_RTC_DRV_DS1672 is not set
+# CONFIG_RTC_DRV_DS3232 is not set
+# CONFIG_RTC_DRV_MAX6900 is not set
+# CONFIG_RTC_DRV_RS5C372 is not set
+# CONFIG_RTC_DRV_ISL1208 is not set
+# CONFIG_RTC_DRV_ISL12022 is not set
+# CONFIG_RTC_DRV_X1205 is not set
+# CONFIG_RTC_DRV_PCF8523 is not set
+# CONFIG_RTC_DRV_PCF8563 is not set
+# CONFIG_RTC_DRV_PCF8583 is not set
+# CONFIG_RTC_DRV_M41T80 is not set
+# CONFIG_RTC_DRV_BQ32K is not set
+# CONFIG_RTC_DRV_S35390A is not set
+# CONFIG_RTC_DRV_FM3130 is not set
+# CONFIG_RTC_DRV_RX8581 is not set
+# CONFIG_RTC_DRV_RX8025 is not set
+# CONFIG_RTC_DRV_EM3027 is not set
+# CONFIG_RTC_DRV_RV3029C2 is not set
+
+#
+# SPI RTC drivers
+#
+# CONFIG_RTC_DRV_M41T93 is not set
+# CONFIG_RTC_DRV_M41T94 is not set
+# CONFIG_RTC_DRV_DS1305 is not set
+# CONFIG_RTC_DRV_DS1390 is not set
+# CONFIG_RTC_DRV_MAX6902 is not set
+# CONFIG_RTC_DRV_R9701 is not set
+# CONFIG_RTC_DRV_RS5C348 is not set
+# CONFIG_RTC_DRV_DS3234 is not set
+# CONFIG_RTC_DRV_PCF2123 is not set
+# CONFIG_RTC_DRV_RX4581 is not set
+
+#
+# Platform RTC drivers
+#
+# CONFIG_RTC_DRV_CMOS is not set
+# CONFIG_RTC_DRV_DS1286 is not set
+# CONFIG_RTC_DRV_DS1511 is not set
+# CONFIG_RTC_DRV_DS1553 is not set
+# CONFIG_RTC_DRV_DS1742 is not set
+# CONFIG_RTC_DRV_STK17TA8 is not set
+# CONFIG_RTC_DRV_M48T86 is not set
+# CONFIG_RTC_DRV_M48T35 is not set
+# CONFIG_RTC_DRV_M48T59 is not set
+# CONFIG_RTC_DRV_MSM6242 is not set
+# CONFIG_RTC_DRV_BQ4802 is not set
+# CONFIG_RTC_DRV_RP5C01 is not set
+# CONFIG_RTC_DRV_V3020 is not set
+# CONFIG_RTC_DRV_DS2404 is not set
+
+#
+# on-CPU RTC drivers
+#
+# CONFIG_RTC_DRV_SNVS is not set
+
+#
+# HID Sensor RTC drivers
+#
+# CONFIG_RTC_DRV_HID_SENSOR_TIME is not set
+CONFIG_RTC_DRV_SPRD=y
+CONFIG_RTC_START_YEAR=2012
+# CONFIG_DMADEVICES is not set
+# CONFIG_AUXDISPLAY is not set
+# CONFIG_UIO is not set
+# CONFIG_VIRT_DRIVERS is not set
+
+#
+# Virtio drivers
+#
+# CONFIG_VIRTIO_MMIO is not set
+
+#
+# Microsoft Hyper-V guest support
+#
+CONFIG_STAGING=y
+# CONFIG_USBIP_CORE is not set
+# CONFIG_PRISM2_USB is not set
+# CONFIG_ECHO is not set
+# CONFIG_COMEDI is not set
+# CONFIG_ASUS_OLED is not set
+# CONFIG_RTLLIB is not set
+# CONFIG_R8712U is not set
+# CONFIG_RTS5139 is not set
+# CONFIG_TRANZPORT is not set
+# CONFIG_LINE6_USB is not set
+# CONFIG_VT6656 is not set
+
+#
+# IIO staging drivers
+#
+
+#
+# Accelerometers
+#
+# CONFIG_ADIS16201 is not set
+# CONFIG_ADIS16203 is not set
+# CONFIG_ADIS16204 is not set
+# CONFIG_ADIS16209 is not set
+# CONFIG_ADIS16220 is not set
+# CONFIG_ADIS16240 is not set
+# CONFIG_LIS3L02DQ is not set
+# CONFIG_SCA3000 is not set
+
+#
+# Analog to digital converters
+#
+# CONFIG_AD7291 is not set
+# CONFIG_AD7606 is not set
+# CONFIG_AD799X is not set
+# CONFIG_AD7780 is not set
+# CONFIG_AD7816 is not set
+# CONFIG_AD7192 is not set
+# CONFIG_AD7280 is not set
+
+#
+# Analog digital bi-direction converters
+#
+# CONFIG_ADT7316 is not set
+
+#
+# Capacitance to digital converters
+#
+# CONFIG_AD7150 is not set
+# CONFIG_AD7152 is not set
+# CONFIG_AD7746 is not set
+
+#
+# Direct Digital Synthesis
+#
+# CONFIG_AD5930 is not set
+# CONFIG_AD9832 is not set
+# CONFIG_AD9834 is not set
+# CONFIG_AD9850 is not set
+# CONFIG_AD9852 is not set
+# CONFIG_AD9910 is not set
+# CONFIG_AD9951 is not set
+
+#
+# Digital gyroscope sensors
+#
+# CONFIG_ADIS16060 is not set
+# CONFIG_ADIS16130 is not set
+# CONFIG_ADIS16260 is not set
+
+#
+# Network Analyzer, Impedance Converters
+#
+# CONFIG_AD5933 is not set
+
+#
+# Light sensors
+#
+# CONFIG_SENSORS_ISL29018 is not set
+# CONFIG_SENSORS_ISL29028 is not set
+# CONFIG_TSL2583 is not set
+# CONFIG_TSL2x7x is not set
+
+#
+# Magnetometer sensors
+#
+# CONFIG_SENSORS_HMC5843 is not set
+
+#
+# Active energy metering IC
+#
+# CONFIG_ADE7753 is not set
+# CONFIG_ADE7754 is not set
+# CONFIG_ADE7758 is not set
+# CONFIG_ADE7759 is not set
+# CONFIG_ADE7854 is not set
+
+#
+# Resolver to digital converters
+#
+# CONFIG_AD2S90 is not set
+# CONFIG_AD2S1200 is not set
+# CONFIG_AD2S1210 is not set
+
+#
+# Triggers - standalone
+#
+# CONFIG_IIO_PERIODIC_RTC_TRIGGER is not set
+# CONFIG_IIO_GPIO_TRIGGER is not set
+# CONFIG_IIO_SYSFS_TRIGGER is not set
+# CONFIG_IIO_SIMPLE_DUMMY is not set
+# CONFIG_USB_ENESTORAGE is not set
+# CONFIG_BCM_WIMAX is not set
+# CONFIG_FT1000 is not set
+
+#
+# Speakup console speech
+#
+# CONFIG_TOUCHSCREEN_CLEARPAD_TM1217 is not set
+# CONFIG_TOUCHSCREEN_SYNAPTICS_I2C_RMI4 is not set
+# CONFIG_STAGING_MEDIA is not set
+
+#
+# Android
+#
+CONFIG_ANDROID=y
+CONFIG_ASHMEM=y
+CONFIG_ANDROID_TIMED_OUTPUT=y
+CONFIG_ANDROID_TIMED_GPIO=y
+CONFIG_ANDROID_LOW_MEMORY_KILLER=y
+CONFIG_ANDROID_LOW_MEMORY_KILLER_AUTODETECT_OOM_ADJ_VALUES=y
+CONFIG_OOM_NOTIFIER=y
+CONFIG_SEC_DEBUG_LMK_MEMINFO=y
+CONFIG_ANDROID_INTF_ALARM_DEV=y
+CONFIG_SYNC=y
+# CONFIG_SW_SYNC is not set
+CONFIG_ION=y
+# CONFIG_ION_TEST is not set
+# CONFIG_ION_DUMMY is not set
+CONFIG_ION_SPRD=y
+# CONFIG_ION_POOL_CACHE_POLICY is not set
+# CONFIG_FIQ_DEBUGGER is not set
+# CONFIG_FIQ_WATCHDOG is not set
+CONFIG_RUNTIME_COMPCACHE=y
+# CONFIG_KSWAPD_NOSWAP is not set
+# CONFIG_USB_WPAN_HCD is not set
+# CONFIG_WIMAX_GDM72XX is not set
+# CONFIG_CED1401 is not set
+# CONFIG_DGRP is not set
+
+#
+# Spreadtrum Platform Specific Drivers
+#
+
+#
+# Spreadtrum Adie Type
+#
+# CONFIG_ADIE_SC2713 is not set
+# CONFIG_ADIE_SC2713S is not set
+# CONFIG_ADIE_SC2711 is not set
+CONFIG_ADIE_SC2723=y
+# CONFIG_ADIE_SC2723S is not set
+CONFIG_BUS_MONITOR_DEBUG=y
+CONFIG_DJTAG=y
+CONFIG_BUS_MONITOR_PERF=y
+# CONFIG_SC_VIBRATOR is not set
+CONFIG_SPRD_VIBRATOR_2723=y
+CONFIG_SPRD_ION_MM_SIZE=1
+CONFIG_SPRD_ION_OVERLAY_SIZE=1
+# CONFIG_SPRD_VIBRATOR_2731 is not set
+CONFIG_EIRQ_NUM=0
+CONFIG_PIN_POWER_DOMAIN_SWITCH=y
+
+#
+# SC8830 ADIE type
+#
+CONFIG_SC_INTERNAL_ADI=y
+CONFIG_SC_INTERNAL_ADC=y
+CONFIG_SC_INTERNAL_WATCHDOG=y
+# CONFIG_FIX_V7TAGRAM_BUG is not set
+# CONFIG_DDR_VALIDITY_TEST is not set
+CONFIG_SPRD_CPU_DYNAMIC_HOTPLUG=y
+# CONFIG_SPRD_DCDC_DEBUG is not set
+# CONFIG_SPRD_AVS_DEBUG is not set
+# CONFIG_SPRD_AUX_DEBUG is not set
+CONFIG_SPRD_SIMCTRL=y
+# CONFIG_SPRD_MODEM_TD is not set
+# CONFIG_MODEM_W_MEMCUT is not set
+# CONFIG_SIPC_TD is not set
+# CONFIG_SIPC_WCDMA is not set
+# CONFIG_SIPC_WCN is not set
+CONFIG_SIPC_PMIC=y
+# CONFIG_SIPC_GGE is not set
+CONFIG_SIPC_LTE=y
+# CONFIG_VOIP_LTE is not set
+# CONFIG_CP_SWITCH is not set
+# CONFIG_EAR_LOW_LEVEL_DETECT is not set
+# CONFIG_SS_FUNCTION is not set
+# CONFIG_TSP_0_1_A is not set
+CONFIG_SPRD_MAILBOX=y
+# CONFIG_SPRD_MAILBOX_FIFO is not set
+CONFIG_SPRD_SYSDUMP=y
+CONFIG_SPRD_DEBUG=y
+CONFIG_SPRD_DEBUG_SCHED_LOG=y
+CONFIG_SPRD_DEBUG_DMALOG=y
+# CONFIG_GPS_LSI_S5N6420 is not set
+CONFIG_SPRD_EIRQSOFF_DEBUG=y
+CONFIG_CLKDEV_LOOKUP=y
+CONFIG_HAVE_CLK_PREPARE=y
+CONFIG_COMMON_CLK=y
+
+#
+# Common Clock Framework
+#
+CONFIG_COMMON_CLK_DEBUG=y
+# CONFIG_COMMON_CLK_SI5351 is not set
+CONFIG_HWSPINLOCK=y
+
+#
+# Hardware Spinlock drivers
+#
+CONFIG_HWSPINLOCK_SCI=y
+CONFIG_CLKSRC_OF=y
+CONFIG_CLKSRC_MMIO=y
+# CONFIG_ARM_ARCH_TIMER_EVTSTREAM is not set
+# CONFIG_MAILBOX is not set
+# CONFIG_MCDT is not set
+# CONFIG_IOMMU_SUPPORT is not set
+
+#
+# Remoteproc drivers
+#
+# CONFIG_STE_MODEM_RPROC is not set
+
+#
+# Rpmsg drivers
+#
+# CONFIG_PM_DEVFREQ is not set
+# CONFIG_EXTCON is not set
+# CONFIG_MEMORY is not set
+CONFIG_IIO=y
+CONFIG_IIO_BUFFER=y
+# CONFIG_IIO_BUFFER_CB is not set
+CONFIG_IIO_KFIFO_BUF=y
+CONFIG_IIO_TRIGGER=y
+CONFIG_IIO_CONSUMERS_PER_TRIGGER=2
+
+#
+# Accelerometers
+#
+# CONFIG_KXSD9 is not set
+# CONFIG_IIO_ST_ACCEL_3AXIS is not set
+
+#
+# Analog to digital converters
+#
+# CONFIG_AD7266 is not set
+# CONFIG_AD7298 is not set
+# CONFIG_AD7923 is not set
+# CONFIG_AD7791 is not set
+# CONFIG_AD7793 is not set
+# CONFIG_AD7476 is not set
+# CONFIG_AD7887 is not set
+# CONFIG_EXYNOS_ADC is not set
+# CONFIG_MAX1363 is not set
+# CONFIG_TI_ADC081C is not set
+
+#
+# Amplifiers
+#
+# CONFIG_AD8366 is not set
+
+#
+# Hid Sensor IIO Common
+#
+
+#
+# Digital to analog converters
+#
+# CONFIG_AD5064 is not set
+# CONFIG_AD5360 is not set
+# CONFIG_AD5380 is not set
+# CONFIG_AD5421 is not set
+# CONFIG_AD5624R_SPI is not set
+# CONFIG_AD5446 is not set
+# CONFIG_AD5449 is not set
+# CONFIG_AD5504 is not set
+# CONFIG_AD5755 is not set
+# CONFIG_AD5764 is not set
+# CONFIG_AD5791 is not set
+# CONFIG_AD5686 is not set
+# CONFIG_MAX517 is not set
+# CONFIG_MCP4725 is not set
+
+#
+# Frequency Synthesizers DDS/PLL
+#
+
+#
+# Clock Generator/Distribution
+#
+# CONFIG_AD9523 is not set
+
+#
+# Phase-Locked Loop (PLL) frequency synthesizers
+#
+# CONFIG_ADF4350 is not set
+
+#
+# Digital gyroscope sensors
+#
+# CONFIG_ADIS16080 is not set
+# CONFIG_ADIS16136 is not set
+# CONFIG_ADXRS450 is not set
+# CONFIG_IIO_ST_GYRO_3AXIS is not set
+# CONFIG_ITG3200 is not set
+# CONFIG_INV_MPU_IIO is not set
+
+#
+# Light sensors
+#
+# CONFIG_ADJD_S311 is not set
+# CONFIG_SENSORS_TSL2563 is not set
+# CONFIG_VCNL4000 is not set
+# CONFIG_INV_YAS53X_IIO is not set
+# CONFIG_INV_AMI306_IIO is not set
+# CONFIG_PWM is not set
+CONFIG_IRQCHIP=y
+CONFIG_ARM_GIC=y
+# CONFIG_IPACK_BUS is not set
+# CONFIG_RESET_CONTROLLER is not set
+
+#
+# SIPC modules
+#
+CONFIG_SIPC=y
+# CONFIG_SIPC_V2 is not set
+CONFIG_SIPC_SPIPE=y
+# CONFIG_SIPC_SPOOL is not set
+CONFIG_SIPC_SETH=y
+CONFIG_SETH_OPT=y
+# CONFIG_SETH_GRO_DISABLE is not set
+# CONFIG_SBLOCK_SHARE_BLOCKS is not set
+CONFIG_SETH_RAWIP=y
+CONFIG_ZERO_COPY_SIPX=y
+CONFIG_SIPCMEM_CACHE_EN=y
+CONFIG_SIPC_STTY=y
+# CONFIG_SIPC_DUAL_SIM_PLUG is not set
+
+#
+# Sensor support
+#
+# CONFIG_SENSORS is not set
+
+#
+# SPRD IQ modules
+#
+CONFIG_SPRD_IQ=y
+# CONFIG_HAS_AUTOTST is not set
+CONFIG_GATOR=m
+# CONFIG_NO_HOTPLUG_POLICY is not set
+# CONFIG_SS_TOUCH_BOOST_CPU_HOTPLUG is not set
+# CONFIG_TEE_SUPPORT is not set
+
+#
+# Trusty
+#
+# CONFIG_TRUSTY is not set
+
+#
+# Android
+#
+CONFIG_ANDROID_BINDER_IPC=y
+CONFIG_ANDROID_BINDER_IPC_32BIT=y
+
+#
+# File systems
+#
+CONFIG_DCACHE_WORD_ACCESS=y
+# CONFIG_EXT2_FS is not set
+# CONFIG_EXT3_FS is not set
+CONFIG_EXT4_FS=y
+CONFIG_EXT4_USE_FOR_EXT23=y
+# CONFIG_EXT4_FS_POSIX_ACL is not set
+CONFIG_EXT4_FS_SECURITY=y
+# CONFIG_EXT4_FS_ENCRYPTION is not set
+# CONFIG_EXT4_DEBUG is not set
+# CONFIG_SDCARD_FS is not set
+CONFIG_JBD2=y
+# CONFIG_JBD2_DEBUG is not set
+CONFIG_FS_MBCACHE=y
+# CONFIG_REISERFS_FS is not set
+# CONFIG_JFS_FS is not set
+# CONFIG_XFS_FS is not set
+# CONFIG_GFS2_FS is not set
+# CONFIG_OCFS2_FS is not set
+# CONFIG_BTRFS_FS is not set
+# CONFIG_NILFS2_FS is not set
+# CONFIG_FS_POSIX_ACL is not set
+CONFIG_FILE_LOCKING=y
+CONFIG_FSNOTIFY=y
+# CONFIG_DNOTIFY is not set
+CONFIG_INOTIFY_USER=y
+# CONFIG_FANOTIFY is not set
+# CONFIG_QUOTA is not set
+# CONFIG_QUOTACTL is not set
+# CONFIG_AUTOFS4_FS is not set
+CONFIG_FUSE_FS=y
+# CONFIG_CUSE is not set
+
+#
+# Caches
+#
+# CONFIG_FSCACHE is not set
+
+#
+# CD-ROM/DVD Filesystems
+#
+# CONFIG_ISO9660_FS is not set
+# CONFIG_UDF_FS is not set
+
+#
+# DOS/FAT/NT Filesystems
+#
+CONFIG_FAT_FS=y
+# CONFIG_MSDOS_FS is not set
+CONFIG_VFAT_FS=y
+CONFIG_FAT_DEFAULT_CODEPAGE=437
+CONFIG_FAT_DEFAULT_IOCHARSET="iso8859-1"
+CONFIG_EXFAT_FS=y
+CONFIG_EXFAT_VIRTUAL_XATTR=y
+CONFIG_EXFAT_VIRTUAL_XATTR_SELINUX_LABEL="u:object_r:sdcard_external:s0"
+# CONFIG_NTFS_FS is not set
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+CONFIG_PROC_SYSCTL=y
+CONFIG_PROC_PAGE_MONITOR=y
+CONFIG_SPRD_DEBUG_FRAME=y
+# CONFIG_SPRD_DEBUG_PHYMEM_INFO is not set
+# CONFIG_SPRD_DEBUG_USRPROCMEM_INFO is not set
+# CONFIG_SPRD_DEBUG_USRPROCSTACK_INFO is not set
+CONFIG_SPRD_DEBUG_CPU_RATE=y
+CONFIG_SPRD_DEBUG_MORE_SMAPS_INFO=y
+CONFIG_SPRD_UBOOT_LOG_DUMP=y
+CONFIG_SYSFS=y
+CONFIG_TMPFS=y
+# CONFIG_TMPFS_POSIX_ACL is not set
+# CONFIG_TMPFS_XATTR is not set
+# CONFIG_HUGETLB_PAGE is not set
+CONFIG_CONFIGFS_FS=y
+CONFIG_MISC_FILESYSTEMS=y
+# CONFIG_ADFS_FS is not set
+# CONFIG_AFFS_FS is not set
+# CONFIG_ECRYPT_FS is not set
+# CONFIG_HFS_FS is not set
+# CONFIG_HFSPLUS_FS is not set
+# CONFIG_BEFS_FS is not set
+# CONFIG_BFS_FS is not set
+# CONFIG_EFS_FS is not set
+# CONFIG_LOGFS is not set
+# CONFIG_CRAMFS is not set
+# CONFIG_SQUASHFS is not set
+# CONFIG_VXFS_FS is not set
+# CONFIG_MINIX_FS is not set
+# CONFIG_OMFS_FS is not set
+# CONFIG_HPFS_FS is not set
+# CONFIG_QNX4FS_FS is not set
+# CONFIG_QNX6FS_FS is not set
+# CONFIG_ROMFS_FS is not set
+CONFIG_PSTORE=y
+CONFIG_PSTORE_CONSOLE=y
+# CONFIG_PSTORE_PMSG is not set
+# CONFIG_PSTORE_FTRACE is not set
+CONFIG_PSTORE_RAM=y
+# CONFIG_SYSV_FS is not set
+# CONFIG_UFS_FS is not set
+# CONFIG_F2FS_FS is not set
+# CONFIG_NETWORK_FILESYSTEMS is not set
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="iso8859-1"
+CONFIG_NLS_CODEPAGE_437=y
+# CONFIG_NLS_CODEPAGE_737 is not set
+# CONFIG_NLS_CODEPAGE_775 is not set
+# CONFIG_NLS_CODEPAGE_850 is not set
+# CONFIG_NLS_CODEPAGE_852 is not set
+# CONFIG_NLS_CODEPAGE_855 is not set
+# CONFIG_NLS_CODEPAGE_857 is not set
+# CONFIG_NLS_CODEPAGE_860 is not set
+# CONFIG_NLS_CODEPAGE_861 is not set
+# CONFIG_NLS_CODEPAGE_862 is not set
+# CONFIG_NLS_CODEPAGE_863 is not set
+# CONFIG_NLS_CODEPAGE_864 is not set
+# CONFIG_NLS_CODEPAGE_865 is not set
+# CONFIG_NLS_CODEPAGE_866 is not set
+# CONFIG_NLS_CODEPAGE_869 is not set
+# CONFIG_NLS_CODEPAGE_936 is not set
+# CONFIG_NLS_CODEPAGE_950 is not set
+# CONFIG_NLS_CODEPAGE_932 is not set
+# CONFIG_NLS_CODEPAGE_949 is not set
+# CONFIG_NLS_CODEPAGE_874 is not set
+# CONFIG_NLS_ISO8859_8 is not set
+# CONFIG_NLS_CODEPAGE_1250 is not set
+# CONFIG_NLS_CODEPAGE_1251 is not set
+CONFIG_NLS_ASCII=y
+CONFIG_NLS_ISO8859_1=y
+# CONFIG_NLS_ISO8859_2 is not set
+# CONFIG_NLS_ISO8859_3 is not set
+# CONFIG_NLS_ISO8859_4 is not set
+# CONFIG_NLS_ISO8859_5 is not set
+# CONFIG_NLS_ISO8859_6 is not set
+# CONFIG_NLS_ISO8859_7 is not set
+# CONFIG_NLS_ISO8859_9 is not set
+# CONFIG_NLS_ISO8859_13 is not set
+# CONFIG_NLS_ISO8859_14 is not set
+# CONFIG_NLS_ISO8859_15 is not set
+# CONFIG_NLS_KOI8_R is not set
+# CONFIG_NLS_KOI8_U is not set
+# CONFIG_NLS_MAC_ROMAN is not set
+# CONFIG_NLS_MAC_CELTIC is not set
+# CONFIG_NLS_MAC_CENTEURO is not set
+# CONFIG_NLS_MAC_CROATIAN is not set
+# CONFIG_NLS_MAC_CYRILLIC is not set
+# CONFIG_NLS_MAC_GAELIC is not set
+# CONFIG_NLS_MAC_GREEK is not set
+# CONFIG_NLS_MAC_ICELAND is not set
+# CONFIG_NLS_MAC_INUIT is not set
+# CONFIG_NLS_MAC_ROMANIAN is not set
+# CONFIG_NLS_MAC_TURKISH is not set
+CONFIG_NLS_UTF8=y
+# CONFIG_DLM is not set
+CONFIG_SPRD_IODEBUG=y
+# CONFIG_SPRD_IODEBUG_HOTPOINT is not set
+# CONFIG_SPRD_IODEBUG_IOSCHEDULE is not set
+CONFIG_SPRD_IODEBUG_VFS=y
+CONFIG_SPRD_IODEBUG_BDI=y
+# CONFIG_SPRD_METADATA_BUFFER_RECLAIM is not set
+# CONFIG_SPRD_LAZY_SHRINK_SBCACHE is not set
+
+#
+# Kernel hacking
+#
+CONFIG_PRINTK_TIME=y
+CONFIG_DEFAULT_MESSAGE_LOGLEVEL=4
+CONFIG_ENABLE_WARN_DEPRECATED=y
+CONFIG_ENABLE_MUST_CHECK=y
+CONFIG_FRAME_WARN=1024
+CONFIG_MAGIC_SYSRQ=y
+# CONFIG_STRIP_ASM_SYMS is not set
+# CONFIG_READABLE_ASM is not set
+# CONFIG_UNUSED_SYMBOLS is not set
+CONFIG_DEBUG_FS=y
+# CONFIG_HEADERS_CHECK is not set
+# CONFIG_DEBUG_SECTION_MISMATCH is not set
+CONFIG_DEBUG_KERNEL=y
+# CONFIG_DEBUG_SHIRQ is not set
+CONFIG_LOCKUP_DETECTOR=y
+CONFIG_HARDLOCKUP_DETECTOR_OTHER_CPU=y
+CONFIG_HARDLOCKUP_DETECTOR=y
+# CONFIG_BOOTPARAM_HARDLOCKUP_PANIC is not set
+CONFIG_BOOTPARAM_HARDLOCKUP_PANIC_VALUE=0
+# CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC is not set
+CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC_VALUE=0
+# CONFIG_PANIC_ON_OOPS is not set
+CONFIG_PANIC_ON_OOPS_VALUE=0
+# CONFIG_DETECT_HUNG_TASK is not set
+# CONFIG_SCHED_DEBUG is not set
+# CONFIG_SCHEDSTATS is not set
+# CONFIG_TIMER_STATS is not set
+# CONFIG_DEBUG_OBJECTS is not set
+# CONFIG_SLUB_DEBUG_ON is not set
+# CONFIG_SLUB_STATS is not set
+CONFIG_HAVE_DEBUG_KMEMLEAK=y
+# CONFIG_DEBUG_KMEMLEAK is not set
+# CONFIG_DEBUG_PREEMPT is not set
+# CONFIG_DEBUG_RT_MUTEXES is not set
+# CONFIG_RT_MUTEX_TESTER is not set
+# CONFIG_DEBUG_SPINLOCK is not set
+# CONFIG_DEBUG_MUTEXES is not set
+# CONFIG_DEBUG_LOCK_ALLOC is not set
+# CONFIG_PROVE_LOCKING is not set
+# CONFIG_LOCK_STAT is not set
+CONFIG_TRACE_IRQFLAGS=y
+# CONFIG_DEBUG_ATOMIC_SLEEP is not set
+# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
+CONFIG_STACKTRACE=y
+# CONFIG_DEBUG_STACK_USAGE is not set
+# CONFIG_DEBUG_KOBJECT is not set
+# CONFIG_DEBUG_HIGHMEM is not set
+CONFIG_DEBUG_BUGVERBOSE=y
+CONFIG_DEBUG_INFO=y
+# CONFIG_DEBUG_INFO_REDUCED is not set
+# CONFIG_DEBUG_VM is not set
+# CONFIG_DEBUG_WRITECOUNT is not set
+# CONFIG_DEBUG_MEMORY_INIT is not set
+# CONFIG_DEBUG_LIST is not set
+# CONFIG_TEST_LIST_SORT is not set
+# CONFIG_DEBUG_SG is not set
+# CONFIG_DEBUG_NOTIFIERS is not set
+# CONFIG_DEBUG_CREDENTIALS is not set
+CONFIG_FRAME_POINTER=y
+# CONFIG_BOOT_PRINTK_DELAY is not set
+
+#
+# RCU Debugging
+#
+# CONFIG_PROVE_RCU_DELAY is not set
+# CONFIG_SPARSE_RCU_POINTER is not set
+# CONFIG_RCU_TORTURE_TEST is not set
+CONFIG_RCU_CPU_STALL_TIMEOUT=60
+CONFIG_RCU_CPU_STALL_VERBOSE=y
+# CONFIG_RCU_CPU_STALL_INFO is not set
+# CONFIG_RCU_TRACE is not set
+# CONFIG_BACKTRACE_SELF_TEST is not set
+# CONFIG_DEBUG_BLOCK_EXT_DEVT is not set
+# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
+# CONFIG_DEBUG_PER_CPU_MAPS is not set
+# CONFIG_LKDTM is not set
+# CONFIG_NOTIFIER_ERROR_INJECTION is not set
+# CONFIG_FAULT_INJECTION is not set
+# CONFIG_DEBUG_PAGEALLOC is not set
+# CONFIG_SPRD_PAGERECORDER is not set
+CONFIG_NOP_TRACER=y
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y
+CONFIG_HAVE_DYNAMIC_FTRACE=y
+CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
+CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
+CONFIG_HAVE_C_RECORDMCOUNT=y
+CONFIG_TRACER_MAX_TRACE=y
+CONFIG_TRACE_CLOCK=y
+CONFIG_RING_BUFFER=y
+CONFIG_EVENT_TRACING=y
+CONFIG_CONTEXT_SWITCH_TRACER=y
+CONFIG_RING_BUFFER_ALLOW_SWAP=y
+CONFIG_TRACING=y
+CONFIG_GENERIC_TRACER=y
+CONFIG_TRACING_SUPPORT=y
+CONFIG_FTRACE=y
+CONFIG_FUNCTION_TRACER=y
+CONFIG_FUNCTION_GRAPH_TRACER=y
+CONFIG_IRQSOFF_TRACER=y
+CONFIG_PREEMPT_TRACER=y
+CONFIG_SCHED_TRACER=y
+CONFIG_FTRACE_SYSCALLS=y
+CONFIG_TRACER_SNAPSHOT=y
+CONFIG_TRACER_SNAPSHOT_PER_CPU_SWAP=y
+CONFIG_BRANCH_PROFILE_NONE=y
+# CONFIG_PROFILE_ANNOTATED_BRANCHES is not set
+# CONFIG_PROFILE_ALL_BRANCHES is not set
+# CONFIG_STACK_TRACER is not set
+CONFIG_BLK_DEV_IO_TRACE=y
+# CONFIG_PROBE_EVENTS is not set
+CONFIG_DYNAMIC_FTRACE=y
+# CONFIG_FUNCTION_PROFILER is not set
+CONFIG_FTRACE_MCOUNT_RECORD=y
+# CONFIG_FTRACE_STARTUP_TEST is not set
+# CONFIG_RING_BUFFER_BENCHMARK is not set
+# CONFIG_RING_BUFFER_STARTUP_TEST is not set
+# CONFIG_RBTREE_TEST is not set
+# CONFIG_INTERVAL_TREE_TEST is not set
+CONFIG_DYNAMIC_DEBUG=y
+# CONFIG_DMA_API_DEBUG is not set
+# CONFIG_ATOMIC64_SELFTEST is not set
+# CONFIG_SAMPLES is not set
+CONFIG_HAVE_ARCH_KGDB=y
+# CONFIG_KGDB is not set
+# CONFIG_TEST_STRING_HELPERS is not set
+# CONFIG_TEST_KSTRTOX is not set
+# CONFIG_STRICT_DEVMEM is not set
+CONFIG_ARM_UNWIND=y
+CONFIG_OLD_MCOUNT=y
+# CONFIG_DEBUG_USER is not set
+# CONFIG_DEBUG_RODATA is not set
+# CONFIG_DEBUG_LL is not set
+CONFIG_DEBUG_LL_INCLUDE="soc/sprd/debug-macro.S"
+CONFIG_UNCOMPRESS_INCLUDE="mach/uncompress.h"
+# CONFIG_PID_IN_CONTEXTIDR is not set
+# CONFIG_DEBUG_SET_MODULE_RONX is not set
+# CONFIG_CORESIGHT is not set
+
+#
+# Security options
+#
+CONFIG_KEYS=y
+# CONFIG_ENCRYPTED_KEYS is not set
+# CONFIG_KEYS_DEBUG_PROC_KEYS is not set
+# CONFIG_SECURITY_DMESG_RESTRICT is not set
+# CONFIG_SECURITY_PERF_EVENTS_RESTRICT is not set
+CONFIG_SECURITY=y
+# CONFIG_SECURITYFS is not set
+CONFIG_SECURITY_NETWORK=y
+# CONFIG_SECURITY_NETWORK_XFRM is not set
+# CONFIG_SECURITY_PATH is not set
+CONFIG_LSM_MMAP_MIN_ADDR=32768
+CONFIG_SECURITY_SELINUX=y
+# CONFIG_SECURITY_SELINUX_BOOTPARAM is not set
+# CONFIG_SECURITY_SELINUX_DISABLE is not set
+CONFIG_SECURITY_SELINUX_DEVELOP=y
+CONFIG_SECURITY_SELINUX_AVC_STATS=y
+CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE=1
+# CONFIG_SECURITY_SELINUX_POLICYDB_VERSION_MAX is not set
+# CONFIG_SECURITY_SMACK is not set
+# CONFIG_SECURITY_TOMOYO is not set
+# CONFIG_SECURITY_APPARMOR is not set
+# CONFIG_SECURITY_YAMA is not set
+# CONFIG_IMA is not set
+# CONFIG_EVM is not set
+CONFIG_ROOT_RECORDER=y
+CONFIG_DEFAULT_SECURITY_SELINUX=y
+# CONFIG_DEFAULT_SECURITY_DAC is not set
+CONFIG_DEFAULT_SECURITY="selinux"
+CONFIG_CRYPTO=y
+
+#
+# Crypto core or helper
+#
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_CRYPTO_AEAD=y
+CONFIG_CRYPTO_AEAD2=y
+CONFIG_CRYPTO_BLKCIPHER=y
+CONFIG_CRYPTO_BLKCIPHER2=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_HASH2=y
+CONFIG_CRYPTO_RNG=y
+CONFIG_CRYPTO_RNG2=y
+CONFIG_CRYPTO_PCOMP2=y
+CONFIG_CRYPTO_MANAGER=y
+CONFIG_CRYPTO_MANAGER2=y
+# CONFIG_CRYPTO_USER is not set
+CONFIG_CRYPTO_MANAGER_DISABLE_TESTS=y
+# CONFIG_CRYPTO_GF128MUL is not set
+# CONFIG_CRYPTO_NULL is not set
+# CONFIG_CRYPTO_PCRYPT is not set
+CONFIG_CRYPTO_NULL=y
+CONFIG_CRYPTO_WORKQUEUE=y
+# CONFIG_CRYPTO_CRYPTD is not set
+CONFIG_CRYPTO_AUTHENC=y
+# CONFIG_CRYPTO_TEST is not set
+
+#
+# Authenticated Encryption with Associated Data
+#
+# CONFIG_CRYPTO_CCM is not set
+# CONFIG_CRYPTO_GCM is not set
+# CONFIG_CRYPTO_SEQIV is not set
+
+#
+# Block modes
+#
+CONFIG_CRYPTO_CBC=y
+# CONFIG_CRYPTO_CTR is not set
+# CONFIG_CRYPTO_CTS is not set
+CONFIG_CRYPTO_ECB=y
+# CONFIG_CRYPTO_LRW is not set
+# CONFIG_CRYPTO_PCBC is not set
+# CONFIG_CRYPTO_XTS is not set
+
+#
+# Hash modes
+#
+# CONFIG_CRYPTO_CMAC is not set
+CONFIG_CRYPTO_HMAC=y
+CONFIG_CRYPTO_XCBC=y
+# CONFIG_CRYPTO_VMAC is not set
+
+#
+# Digest
+#
+CONFIG_CRYPTO_CRC32C=y
+# CONFIG_CRYPTO_CRC32 is not set
+# CONFIG_CRYPTO_GHASH is not set
+# CONFIG_CRYPTO_MD4 is not set
+CONFIG_CRYPTO_MD5=y
+# CONFIG_CRYPTO_MICHAEL_MIC is not set
+# CONFIG_CRYPTO_RMD128 is not set
+# CONFIG_CRYPTO_RMD160 is not set
+# CONFIG_CRYPTO_RMD256 is not set
+# CONFIG_CRYPTO_RMD320 is not set
+CONFIG_CRYPTO_SHA1=y
+# CONFIG_CRYPTO_SHA1_ARM is not set
+# CONFIG_CRYPTO_SHA1_ARM_NEON is not set
+CONFIG_CRYPTO_SHA256=y
+CONFIG_CRYPTO_SHA256_ARM=y
+CONFIG_CRYPTO_SHA512=y
+CONFIG_CRYPTO_SHA512_ARM_NEON=y
+# CONFIG_CRYPTO_TGR192 is not set
+# CONFIG_CRYPTO_WP512 is not set
+
+#
+# Ciphers
+#
+CONFIG_CRYPTO_AES=y
+CONFIG_CRYPTO_AES_ARM=y
+# CONFIG_CRYPTO_AES_ARM_BS is not set
+# CONFIG_CRYPTO_ANUBIS is not set
+CONFIG_CRYPTO_ARC4=y
+# CONFIG_CRYPTO_BLOWFISH is not set
+# CONFIG_CRYPTO_CAMELLIA is not set
+# CONFIG_CRYPTO_CAST5 is not set
+# CONFIG_CRYPTO_CAST6 is not set
+CONFIG_CRYPTO_DES=y
+# CONFIG_CRYPTO_FCRYPT is not set
+# CONFIG_CRYPTO_KHAZAD is not set
+# CONFIG_CRYPTO_SALSA20 is not set
+# CONFIG_CRYPTO_SEED is not set
+# CONFIG_CRYPTO_SERPENT is not set
+# CONFIG_CRYPTO_TEA is not set
+CONFIG_CRYPTO_TWOFISH=y
+CONFIG_CRYPTO_TWOFISH_COMMON=y
+
+#
+# Compression
+#
+CONFIG_CRYPTO_DEFLATE=y
+# CONFIG_CRYPTO_ZLIB is not set
+# CONFIG_CRYPTO_LZO is not set
+
+#
+# Random Number Generation
+#
+CONFIG_CRYPTO_ANSI_CPRNG=y
+# CONFIG_CRYPTO_USER_API_HASH is not set
+# CONFIG_CRYPTO_USER_API_SKCIPHER is not set
+CONFIG_CRYPTO_HW=y
+CONFIG_CRYPTO_DEV_SPRD_AES=y
+# CONFIG_ASYMMETRIC_KEY_TYPE is not set
+CONFIG_BINARY_PRINTF=y
+
+#
+# Library routines
+#
+CONFIG_BITREVERSE=y
+CONFIG_GENERIC_STRNCPY_FROM_USER=y
+CONFIG_GENERIC_STRNLEN_USER=y
+CONFIG_GENERIC_PCI_IOMAP=y
+CONFIG_GENERIC_IO=y
+CONFIG_CRC_CCITT=y
+CONFIG_CRC16=y
+# CONFIG_CRC_T10DIF is not set
+# CONFIG_CRC_ITU_T is not set
+CONFIG_CRC32=y
+# CONFIG_CRC32_SELFTEST is not set
+CONFIG_CRC32_SLICEBY8=y
+# CONFIG_CRC32_SLICEBY4 is not set
+# CONFIG_CRC32_SARWATE is not set
+# CONFIG_CRC32_BIT is not set
+# CONFIG_CRC7 is not set
+CONFIG_LIBCRC32C=y
+# CONFIG_CRC8 is not set
+CONFIG_AUDIT_GENERIC=y
+# CONFIG_AUDIT_ARCH_COMPAT_GENERIC is not set
+CONFIG_ZLIB_INFLATE=y
+CONFIG_ZLIB_DEFLATE=y
+CONFIG_LZO_COMPRESS=y
+CONFIG_LZO_DECOMPRESS=y
+# CONFIG_XZ_DEC is not set
+# CONFIG_XZ_DEC_BCJ is not set
+CONFIG_DECOMPRESS_GZIP=y
+CONFIG_LZO_SOFT_ALGO=y
+# CONFIG_LZO_HW_ALGO is not set
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_REED_SOLOMON=y
+CONFIG_REED_SOLOMON_ENC8=y
+CONFIG_REED_SOLOMON_DEC8=y
+CONFIG_TEXTSEARCH=y
+CONFIG_TEXTSEARCH_KMP=y
+CONFIG_TEXTSEARCH_BM=y
+CONFIG_TEXTSEARCH_FSM=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_DMA=y
+CONFIG_CPU_RMAP=y
+CONFIG_DQL=y
+CONFIG_NLATTR=y
+CONFIG_ARCH_HAS_ATOMIC64_DEC_IF_POSITIVE=y
+# CONFIG_AVERAGE is not set
+# CONFIG_CORDIC is not set
+# CONFIG_DDR is not set
+CONFIG_LIBFDT=y
+CONFIG_E_SHOW_MEM=y
+# CONFIG_VIRTUALIZATION is not set
Index: kernel/arch/arm/configs/sp9832a_3h10_volte_defconfig
===================================================================
--- kernel/arch/arm/configs/sp9832a_3h10_volte_defconfig	(revision 182224)
+++ kernel/arch/arm/configs/sp9832a_3h10_volte_defconfig	(revision 182225)
@@ -660,9 +660,10 @@
 CONFIG_XFRM=y
 CONFIG_XFRM_ALGO=y
 CONFIG_XFRM_USER=y
-# CONFIG_XFRM_SUB_POLICY is not set
+CONFIG_XFRM_SUB_POLICY=y
+CONFIG_XFRM_SPRD_VOWIFI_FRAGMENT=y
 # CONFIG_XFRM_MIGRATE is not set
-# CONFIG_XFRM_STATISTICS is not set
+CONFIG_XFRM_STATISTICS=y
 CONFIG_XFRM_IPCOMP=y
 CONFIG_NET_KEY=y
 # CONFIG_NET_KEY_MIGRATE is not set
@@ -811,7 +812,7 @@
 #
 # Xtables matches
 #
-# CONFIG_NETFILTER_XT_MATCH_ADDRTYPE is not set
+CONFIG_NETFILTER_XT_MATCH_ADDRTYPE=y
 # CONFIG_NETFILTER_XT_MATCH_BPF is not set
 # CONFIG_NETFILTER_XT_MATCH_CLUSTER is not set
 CONFIG_NETFILTER_XT_MATCH_COMMENT=y
@@ -871,6 +872,7 @@
 CONFIG_IP_NF_MATCH_TTL=y
 CONFIG_IP_NF_FILTER=y
 CONFIG_IP_NF_TARGET_REJECT=y
+CONFIG_IP_NF_VOWIFI_DEC_TCPDUMP=y
 CONFIG_IP_NF_TARGET_REJECT_SKERR=y
 # CONFIG_IP_NF_TARGET_ULOG is not set
 CONFIG_NF_NAT_IPV4=y
@@ -907,6 +909,7 @@
 # CONFIG_IP6_NF_MATCH_RT is not set
 # CONFIG_IP6_NF_TARGET_HL is not set
 CONFIG_IP6_NF_FILTER=y
+CONFIG_IP6_NF_VOWIFI_DEC_TCPDUMP=y
 CONFIG_IP6_NF_TARGET_REJECT=y
 CONFIG_IP6_NF_TARGET_REJECT_SKERR=y
 CONFIG_IP6_NF_MANGLE=y
@@ -1061,6 +1064,8 @@
 # CONFIG_CAIF is not set
 # CONFIG_CEPH_LIB is not set
 # CONFIG_NFC is not set
+CONFIG_SPRD_IMS_BRIDGE=y
+CONFIG_SPRD_IMS_BRIDGE_TEST=y
 CONFIG_HAVE_BPF_JIT=y
 
 #
@@ -3399,6 +3404,7 @@
 # CONFIG_CRYPTO_GF128MUL is not set
 # CONFIG_CRYPTO_NULL is not set
 # CONFIG_CRYPTO_PCRYPT is not set
+CONFIG_CRYPTO_NULL=y
 CONFIG_CRYPTO_WORKQUEUE=y
 # CONFIG_CRYPTO_CRYPTD is not set
 CONFIG_CRYPTO_AUTHENC=y
@@ -3427,7 +3433,7 @@
 #
 # CONFIG_CRYPTO_CMAC is not set
 CONFIG_CRYPTO_HMAC=y
-# CONFIG_CRYPTO_XCBC is not set
+CONFIG_CRYPTO_XCBC=y
 # CONFIG_CRYPTO_VMAC is not set
 
 #
@@ -3446,8 +3452,9 @@
 CONFIG_CRYPTO_SHA1=y
 # CONFIG_CRYPTO_SHA1_ARM is not set
 CONFIG_CRYPTO_SHA256=y
-# CONFIG_CRYPTO_SHA256_ARM is not set
-# CONFIG_CRYPTO_SHA512 is not set
+CONFIG_CRYPTO_SHA256_ARM=y
+CONFIG_CRYPTO_SHA512=y
+CONFIG_CRYPTO_SHA512_ARM_NEON=y
 # CONFIG_CRYPTO_TGR192 is not set
 # CONFIG_CRYPTO_WP512 is not set
 
Index: kernel/arch/arm/configs/sp9832a_7c10_volte_defconfig
===================================================================
--- kernel/arch/arm/configs/sp9832a_7c10_volte_defconfig	(revision 0)
+++ kernel/arch/arm/configs/sp9832a_7c10_volte_defconfig	(revision 182225)
@@ -0,0 +1,3568 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Linux/arm 3.10.65 Kernel Configuration
+#
+CONFIG_ARM=y
+CONFIG_ARM_HAS_SG_CHAIN=y
+CONFIG_SYS_SUPPORTS_APM_EMULATION=y
+CONFIG_HAVE_PROC_CPU=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_RWSEM_GENERIC_SPINLOCK=y
+CONFIG_ARCH_HAS_CPUFREQ=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_NEED_DMA_MAP_STATE=y
+CONFIG_VECTORS_BASE=0xffff0000
+# CONFIG_ARM_PATCH_PHYS_VIRT is not set
+CONFIG_NEED_MACH_GPIO_H=y
+CONFIG_NEED_MACH_IO_H=y
+CONFIG_PHYS_OFFSET=0x80000000
+CONFIG_GENERIC_BUG=y
+CONFIG_DEFCONFIG_LIST="/lib/modules/$UNAME_RELEASE/.config"
+CONFIG_IRQ_WORK=y
+CONFIG_BUILDTIME_EXTABLE_SORT=y
+
+#
+# General setup
+#
+CONFIG_INIT_ENV_ARG_LIMIT=32
+CONFIG_CROSS_COMPILE=""
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_HAVE_KERNEL_GZIP=y
+CONFIG_HAVE_KERNEL_LZMA=y
+CONFIG_HAVE_KERNEL_XZ=y
+CONFIG_HAVE_KERNEL_LZO=y
+CONFIG_KERNEL_GZIP=y
+# CONFIG_KERNEL_LZMA is not set
+# CONFIG_KERNEL_XZ is not set
+# CONFIG_KERNEL_LZO is not set
+CONFIG_DEFAULT_HOSTNAME="(none)"
+CONFIG_SWAP=y
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+# CONFIG_POSIX_MQUEUE is not set
+# CONFIG_FHANDLE is not set
+CONFIG_AUDIT=y
+CONFIG_HAVE_ARCH_AUDITSYSCALL=y
+CONFIG_AUDITSYSCALL=y
+CONFIG_AUDIT_WATCH=y
+CONFIG_AUDIT_TREE=y
+# CONFIG_AUDIT_LOGINUID_IMMUTABLE is not set
+CONFIG_HAVE_GENERIC_HARDIRQS=y
+
+#
+# IRQ subsystem
+#
+CONFIG_GENERIC_HARDIRQS=y
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_GENERIC_IRQ_SHOW=y
+CONFIG_HARDIRQS_SW_RESEND=y
+CONFIG_IRQ_DOMAIN=y
+# CONFIG_IRQ_DOMAIN_DEBUG is not set
+CONFIG_KTIME_SCALAR=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_GENERIC_CLOCKEVENTS_BUILD=y
+CONFIG_ARCH_HAS_TICK_BROADCAST=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+
+#
+# Timers subsystem
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ_COMMON=y
+# CONFIG_HZ_PERIODIC is not set
+CONFIG_NO_HZ_IDLE=y
+CONFIG_NO_HZ=y
+CONFIG_HIGH_RES_TIMERS=y
+
+#
+# CPU/Task time and stats accounting
+#
+CONFIG_TICK_CPU_ACCOUNTING=y
+# CONFIG_IRQ_TIME_ACCOUNTING is not set
+# CONFIG_BSD_PROCESS_ACCT is not set
+# CONFIG_TASKSTATS is not set
+
+#
+# RCU Subsystem
+#
+CONFIG_TREE_PREEMPT_RCU=y
+CONFIG_PREEMPT_RCU=y
+CONFIG_RCU_STALL_COMMON=y
+# CONFIG_RCU_USER_QS is not set
+CONFIG_RCU_FANOUT=32
+CONFIG_RCU_FANOUT_LEAF=16
+# CONFIG_RCU_FANOUT_EXACT is not set
+# CONFIG_RCU_FAST_NO_HZ is not set
+# CONFIG_TREE_RCU_TRACE is not set
+# CONFIG_RCU_BOOST is not set
+# CONFIG_RCU_NOCB_CPU is not set
+# CONFIG_IKCONFIG is not set
+CONFIG_LOG_BUF_SHIFT=17
+CONFIG_CGROUPS=y
+CONFIG_CGROUP_DEBUG=y
+CONFIG_CGROUP_FREEZER=y
+# CONFIG_CGROUP_DEVICE is not set
+# CONFIG_CPUSETS is not set
+CONFIG_CGROUP_CPUACCT=y
+CONFIG_RESOURCE_COUNTERS=y
+CONFIG_MEMCG=y
+CONFIG_MEMCG_SWAP=y
+CONFIG_MEMCG_SWAP_ENABLED=y
+# CONFIG_MEMCG_KMEM is not set
+# CONFIG_CGROUP_PERF is not set
+CONFIG_CGROUP_SCHED=y
+CONFIG_FAIR_GROUP_SCHED=y
+# CONFIG_CFS_BANDWIDTH is not set
+CONFIG_RT_GROUP_SCHED=y
+# CONFIG_BLK_CGROUP is not set
+# CONFIG_CHECKPOINT_RESTORE is not set
+# CONFIG_NAMESPACES is not set
+CONFIG_UIDGID_CONVERTED=y
+# CONFIG_UIDGID_STRICT_TYPE_CHECKS is not set
+# CONFIG_SCHED_AUTOGROUP is not set
+CONFIG_MM_OWNER=y
+# CONFIG_SYSFS_DEPRECATED is not set
+CONFIG_RELAY=y
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE=""
+CONFIG_RD_GZIP=y
+# CONFIG_RD_BZIP2 is not set
+# CONFIG_RD_LZMA is not set
+# CONFIG_RD_XZ is not set
+# CONFIG_RD_LZO is not set
+CONFIG_CC_OPTIMIZE_FOR_SIZE=y
+CONFIG_SYSCTL=y
+CONFIG_ANON_INODES=y
+CONFIG_HAVE_UID16=y
+CONFIG_HOTPLUG=y
+CONFIG_PANIC_TIMEOUT=0
+CONFIG_EXPERT=y
+CONFIG_UID16=y
+CONFIG_SYSCTL_SYSCALL=y
+CONFIG_KALLSYMS=y
+CONFIG_KALLSYMS_ALL=y
+CONFIG_PRINTK=y
+CONFIG_BUG=y
+CONFIG_ELF_CORE=y
+CONFIG_BASE_FULL=y
+CONFIG_FUTEX=y
+CONFIG_HAVE_FUTEX_CMPXCHG=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_TIMERFD=y
+CONFIG_EVENTFD=y
+CONFIG_SHMEM=y
+CONFIG_AIO=y
+CONFIG_EMBEDDED=y
+CONFIG_HAVE_PERF_EVENTS=y
+CONFIG_PERF_USE_VMALLOC=y
+
+#
+# Kernel Performance Events And Counters
+#
+CONFIG_PERF_EVENTS=y
+# CONFIG_DEBUG_PERF_USE_VMALLOC is not set
+CONFIG_VM_EVENT_COUNTERS=y
+CONFIG_SLUB_DEBUG=y
+CONFIG_COMPAT_BRK=y
+# CONFIG_SLAB is not set
+CONFIG_SLUB=y
+# CONFIG_SLOB is not set
+CONFIG_PROFILING=y
+CONFIG_TRACEPOINTS=y
+CONFIG_OPROFILE=y
+CONFIG_HAVE_OPROFILE=y
+# CONFIG_KPROBES is not set
+# CONFIG_JUMP_LABEL is not set
+# CONFIG_HAVE_64BIT_ALIGNED_ACCESS is not set
+CONFIG_HAVE_KPROBES=y
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_HAVE_ARCH_TRACEHOOK=y
+CONFIG_HAVE_DMA_ATTRS=y
+CONFIG_HAVE_DMA_CONTIGUOUS=y
+CONFIG_USE_GENERIC_SMP_HELPERS=y
+CONFIG_GENERIC_SMP_IDLE_THREAD=y
+CONFIG_GENERIC_IDLE_POLL_SETUP=y
+CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y
+CONFIG_HAVE_CLK=y
+CONFIG_HAVE_DMA_API_DEBUG=y
+CONFIG_HAVE_HW_BREAKPOINT=y
+CONFIG_HAVE_ARCH_JUMP_LABEL=y
+CONFIG_ARCH_WANT_IPC_PARSE_VERSION=y
+CONFIG_HAVE_ARCH_SECCOMP_FILTER=y
+CONFIG_SECCOMP_FILTER=y
+CONFIG_HAVE_CONTEXT_TRACKING=y
+CONFIG_HAVE_IRQ_TIME_ACCOUNTING=y
+CONFIG_HAVE_MOD_ARCH_SPECIFIC=y
+CONFIG_MODULES_USE_ELF_REL=y
+CONFIG_HAVE_ARCH_MMAP_RND_BITS=y
+CONFIG_ARCH_MMAP_RND_BITS_MIN=8
+CONFIG_ARCH_MMAP_RND_BITS_MAX=16
+CONFIG_ARCH_MMAP_RND_BITS=16
+CONFIG_CLONE_BACKWARDS=y
+CONFIG_OLD_SIGSUSPEND3=y
+CONFIG_OLD_SIGACTION=y
+
+#
+# GCOV-based kernel profiling
+#
+# CONFIG_GCOV_KERNEL is not set
+CONFIG_HAVE_GENERIC_DMA_COHERENT=y
+CONFIG_SLABINFO=y
+CONFIG_RT_MUTEXES=y
+CONFIG_BASE_SMALL=0
+# CONFIG_SYSTEM_TRUSTED_KEYRING is not set
+CONFIG_MODULES=y
+# CONFIG_MODULE_FORCE_LOAD is not set
+CONFIG_MODULE_UNLOAD=y
+# CONFIG_MODULE_FORCE_UNLOAD is not set
+CONFIG_MODVERSIONS=y
+# CONFIG_MODULE_SRCVERSION_ALL is not set
+# CONFIG_MODULE_SIG is not set
+CONFIG_STOP_MACHINE=y
+CONFIG_BLOCK=y
+CONFIG_LBDAF=y
+# CONFIG_BLK_DEV_BSG is not set
+# CONFIG_BLK_DEV_BSGLIB is not set
+# CONFIG_BLK_DEV_INTEGRITY is not set
+
+#
+# Partition Types
+#
+CONFIG_PARTITION_ADVANCED=y
+# CONFIG_ACORN_PARTITION is not set
+# CONFIG_OSF_PARTITION is not set
+# CONFIG_AMIGA_PARTITION is not set
+# CONFIG_ATARI_PARTITION is not set
+# CONFIG_MAC_PARTITION is not set
+CONFIG_MSDOS_PARTITION=y
+# CONFIG_BSD_DISKLABEL is not set
+# CONFIG_MINIX_SUBPARTITION is not set
+# CONFIG_SOLARIS_X86_PARTITION is not set
+# CONFIG_UNIXWARE_DISKLABEL is not set
+# CONFIG_LDM_PARTITION is not set
+# CONFIG_SGI_PARTITION is not set
+# CONFIG_ULTRIX_PARTITION is not set
+# CONFIG_SUN_PARTITION is not set
+# CONFIG_KARMA_PARTITION is not set
+CONFIG_EFI_PARTITION=y
+# CONFIG_SYSV68_PARTITION is not set
+
+#
+# IO Schedulers
+#
+CONFIG_IOSCHED_NOOP=y
+# CONFIG_IOSCHED_DEADLINE is not set
+CONFIG_IOSCHED_CFQ=y
+CONFIG_DEFAULT_CFQ=y
+# CONFIG_DEFAULT_NOOP is not set
+CONFIG_DEFAULT_IOSCHED="cfq"
+CONFIG_UNINLINE_SPIN_UNLOCK=y
+CONFIG_ARCH_SUPPORTS_ATOMIC_RMW=y
+CONFIG_MUTEX_SPIN_ON_OWNER=y
+CONFIG_FREEZER=y
+
+#
+# System Type
+#
+CONFIG_MMU=y
+# CONFIG_ARCH_MULTIPLATFORM is not set
+# CONFIG_ARCH_INTEGRATOR is not set
+# CONFIG_ARCH_REALVIEW is not set
+# CONFIG_ARCH_VERSATILE is not set
+# CONFIG_ARCH_AT91 is not set
+# CONFIG_ARCH_CLPS711X is not set
+# CONFIG_ARCH_GEMINI is not set
+# CONFIG_ARCH_EBSA110 is not set
+# CONFIG_ARCH_EP93XX is not set
+# CONFIG_ARCH_FOOTBRIDGE is not set
+# CONFIG_ARCH_NETX is not set
+# CONFIG_ARCH_IOP13XX is not set
+# CONFIG_ARCH_IOP32X is not set
+# CONFIG_ARCH_IOP33X is not set
+# CONFIG_ARCH_IXP4XX is not set
+# CONFIG_ARCH_DOVE is not set
+# CONFIG_ARCH_KIRKWOOD is not set
+# CONFIG_ARCH_MV78XX0 is not set
+# CONFIG_ARCH_ORION5X is not set
+# CONFIG_ARCH_MMP is not set
+# CONFIG_ARCH_KS8695 is not set
+# CONFIG_ARCH_W90X900 is not set
+# CONFIG_ARCH_LPC32XX is not set
+# CONFIG_ARCH_PXA is not set
+# CONFIG_ARCH_MSM is not set
+# CONFIG_ARCH_SHMOBILE is not set
+# CONFIG_ARCH_RPC is not set
+# CONFIG_ARCH_SA1100 is not set
+# CONFIG_ARCH_S3C24XX is not set
+# CONFIG_ARCH_S3C64XX is not set
+# CONFIG_ARCH_S5P64X0 is not set
+# CONFIG_ARCH_S5PC100 is not set
+# CONFIG_ARCH_S5PV210 is not set
+# CONFIG_ARCH_EXYNOS is not set
+# CONFIG_ARCH_SHARK is not set
+# CONFIG_ARCH_U300 is not set
+# CONFIG_ARCH_DAVINCI is not set
+# CONFIG_ARCH_OMAP1 is not set
+CONFIG_ARCH_SC=y
+# CONFIG_GPIO_PCA953X is not set
+# CONFIG_KEYBOARD_GPIO_POLLED is not set
+# CONFIG_PLAT_SPEAR is not set
+
+#
+# Spreadtrum SoC Type
+#
+CONFIG_ARCH_SCX35=y
+# CONFIG_ARCH_SCX15 is not set
+CONFIG_ARCH_SCX35L=y
+# CONFIG_ARCH_SCX30G is not set
+# CONFIG_ARCH_SCX30G2 is not set
+# CONFIG_ARCH_SCX30G3 is not set
+# CONFIG_ARCH_SCX20L is not set
+# CONFIG_ARCH_SCX20 is not set
+# CONFIG_MACH_SCX35_DT is not set
+# CONFIG_CPLL_1024M is not set
+# CONFIG_TSHARK3_OVERCLOCK is not set
+# CONFIG_SC_FPGA is not set
+
+#
+# Spreadtrum Board Type
+#
+# CONFIG_MACH_SP5735EA is not set
+# CONFIG_MACH_SP5735C1EA is not set
+# CONFIG_MACH_SPX35EB is not set
+# CONFIG_MACH_SP8835EB is not set
+# CONFIG_MACH_SPX35EA is not set
+# CONFIG_MACH_SPX35EC is not set
+# CONFIG_MACH_KANAS_W is not set
+# CONFIG_MACH_KANAS_TD is not set
+# CONFIG_MACH_SC9620OPENPHONE is not set
+# CONFIG_MACH_SC9620OPENPHONE_ZT is not set
+# CONFIG_MACH_SC9620FPGA is not set
+# CONFIG_MACH_SP8830GEA is not set
+# CONFIG_MACH_SP7730GGA is not set
+# CONFIG_MACH_SP7731GGA_LC is not set
+# CONFIG_MACH_SP7730GGA_LC is not set
+# CONFIG_MACH_SP7730GGAOPENPHONE is not set
+# CONFIG_MACH_SP7731GEA is not set
+# CONFIG_MACH_SP7730SW_FPGA is not set
+# CONFIG_MACH_SP7730SW_T2 is not set
+# CONFIG_MACH_SP7730SW is not set
+# CONFIG_MACH_J3_3G is not set
+# CONFIG_MACH_SP8730SEEA_T3 is not set
+# CONFIG_MACH_SP7731GEA_HD2 is not set
+# CONFIG_MACH_SP7731GEA_HD is not set
+# CONFIG_MACH_SP7731G_1H10_HD is not set
+# CONFIG_MACH_SP8730SEEA_QHD is not set
+# CONFIG_MACH_SP8730SEEA_JIG is not set
+# CONFIG_MACH_SP7731GEPIKE is not set
+# CONFIG_MACH_SP7731GEA_FWVGA is not set
+# CONFIG_MACH_SP7731GEAOPENPHONE is not set
+# CONFIG_MACH_SP7731GEA_LC is not set
+# CONFIG_MACH_SP7730EC is not set
+# CONFIG_MACH_SP7730ECTRISIM is not set
+# CONFIG_MACH_SPX35FPGA is not set
+# CONFIG_MACH_SP7735EC is not set
+# CONFIG_MACH_SPX35LFPGA is not set
+# CONFIG_MACH_PIKELFPGA is not set
+# CONFIG_MACH_COREPRIMELITE is not set
+# CONFIG_MACH_SHARKLS_Z3LTE is not set
+# CONFIG_MACH_SHARKL_J1POPLTE is not set
+# CONFIG_MACH_SP9630EA3MN is not set
+# CONFIG_MACH_SP9630EA4MN is not set
+# CONFIG_MACH_SP9830IEA_4M_H100 is not set
+# CONFIG_MACH_SP9830I_2H11_4M is not set
+# CONFIG_MACH_SP9830AEA_5M_H100 is not set
+# CONFIG_MACH_SP9830AEA_5M_H100_32V4 is not set
+# CONFIG_MACH_SP9830A_7H10 is not set
+# CONFIG_MACH_SP9830A_7H10_VOLTE is not set
+# CONFIG_MACH_SP9830AEA_5M_VOLTE is not set
+# CONFIG_MACH_SP9830AEB_5M_H100 is not set
+# CONFIG_MACH_SP9830A_5H10_5MVOLTE is not set
+# CONFIG_MACH_SP9830A_2H10_4M is not set
+# CONFIG_PRODUCT_SP9830AEC_4M_H110 is not set
+# CONFIG_MACH_SP9832A_2H11_4M is not set
+# CONFIG_MACH_SP9832A_2H11_4MSAMSUNG is not set
+CONFIG_MACH_SP9832A_7C10_VOLTE=y
+# CONFIG_MACH_SP9832A2_VOL_13CAM is not set
+# CONFIG_MACH_SP9832A_3H10_VOLTE is not set
+CONFIG_ISP_V2=y
+CONFIG_MACH_SP9830I=y
+# CONFIG_MACH_SP9830I_J3LTE is not set
+# CONFIG_MACH_SHARKLC_Z2LTE is not set
+# CONFIG_MACH_SP9830IEA_5M_H100 is not set
+# CONFIG_MACH_SP9830I_J2LTE_V0 is not set
+# CONFIG_MACH_SP9830I_J2LTE is not set
+# CONFIG_CHIP_SP9830IED is not set
+# CONFIG_MACH_SP9830IEB_5M_H100 is not set
+# CONFIG_MACH_SP8730SEA is not set
+# CONFIG_MACH_SP8830GA is not set
+# CONFIG_MACH_SP7730GA is not set
+# CONFIG_MACH_TSHARKWSAMSUNG is not set
+# CONFIG_MACH_CORE3 is not set
+# CONFIG_MACH_PIKEAYOUNG2DTV is not set
+# CONFIG_MACH_TSHARK2TABE is not set
+# CONFIG_MACH_GRANDPRIME3G_VE is not set
+# CONFIG_MACH_COREPRIME3G_VE is not set
+# CONFIG_MACH_TIZENZ3_3G is not set
+# CONFIG_MACH_GRANDPRIME_DTV is not set
+# CONFIG_MACH_SAMSUNG is not set
+# CONFIG_GPS_BCM47520 is not set
+
+#
+# Processor Type
+#
+CONFIG_CPU_V7=y
+CONFIG_CPU_32v6K=y
+CONFIG_CPU_32v7=y
+CONFIG_CPU_ABRT_EV7=y
+CONFIG_CPU_PABRT_V7=y
+CONFIG_CPU_CACHE_V7=y
+CONFIG_CPU_CACHE_VIPT=y
+CONFIG_CPU_COPY_V6=y
+CONFIG_CPU_TLB_V7=y
+CONFIG_CPU_HAS_ASID=y
+CONFIG_CPU_CP15=y
+CONFIG_CPU_CP15_MMU=y
+
+#
+# Processor Features
+#
+# CONFIG_ARM_LPAE is not set
+# CONFIG_ARCH_PHYS_ADDR_T_64BIT is not set
+CONFIG_ARM_THUMB=y
+# CONFIG_ARM_THUMBEE is not set
+CONFIG_ARM_VIRT_EXT=y
+CONFIG_SWP_EMULATE=y
+# CONFIG_CPU_ICACHE_DISABLE is not set
+# CONFIG_CPU_DCACHE_DISABLE is not set
+# CONFIG_CPU_BPREDICT_DISABLE is not set
+CONFIG_KUSER_HELPERS=y
+# CONFIG_CACHE_L2X0 is not set
+CONFIG_ARM_L1_CACHE_SHIFT_6=y
+CONFIG_ARM_L1_CACHE_SHIFT=6
+CONFIG_ARM_DMA_MEM_BUFFERABLE=y
+CONFIG_ARM_NR_BANKS=8
+CONFIG_MULTI_IRQ_HANDLER=y
+# CONFIG_ARM_ERRATA_430973 is not set
+# CONFIG_ARM_ERRATA_458693 is not set
+# CONFIG_ARM_ERRATA_460075 is not set
+# CONFIG_ARM_ERRATA_742230 is not set
+# CONFIG_ARM_ERRATA_742231 is not set
+# CONFIG_ARM_ERRATA_643719 is not set
+# CONFIG_ARM_ERRATA_720789 is not set
+# CONFIG_ARM_ERRATA_743622 is not set
+# CONFIG_ARM_ERRATA_751472 is not set
+# CONFIG_ARM_ERRATA_754322 is not set
+# CONFIG_ARM_ERRATA_754327 is not set
+# CONFIG_ARM_ERRATA_764369 is not set
+# CONFIG_ARM_ERRATA_775420 is not set
+# CONFIG_ARM_ERRATA_798181 is not set
+
+#
+# Bus support
+#
+# CONFIG_PCI_SYSCALL is not set
+# CONFIG_PCCARD is not set
+
+#
+# Kernel Features
+#
+CONFIG_HAVE_SMP=y
+CONFIG_SMP=y
+# CONFIG_SMP_ON_UP is not set
+CONFIG_ARM_CPU_TOPOLOGY=y
+CONFIG_SCHED_MC=y
+# CONFIG_SCHED_SMT is not set
+# CONFIG_DISABLE_CPU_SCHED_DOMAIN_BALANCE is not set
+# CONFIG_HAVE_ARM_ARCH_TIMER is not set
+# CONFIG_MCPM is not set
+# CONFIG_BIG_LITTLE is not set
+CONFIG_VMSPLIT_3G=y
+# CONFIG_VMSPLIT_2G is not set
+# CONFIG_VMSPLIT_1G is not set
+CONFIG_PAGE_OFFSET=0xC0000000
+CONFIG_NR_CPUS=4
+CONFIG_HOTPLUG_CPU=y
+# CONFIG_ARM_PSCI is not set
+CONFIG_LOCAL_TIMERS=y
+CONFIG_ARCH_NR_GPIO=0
+# CONFIG_PREEMPT_NONE is not set
+# CONFIG_PREEMPT_VOLUNTARY is not set
+CONFIG_PREEMPT=y
+CONFIG_PREEMPT_COUNT=y
+CONFIG_HZ=100
+CONFIG_SCHED_HRTICK=y
+# CONFIG_THUMB2_KERNEL is not set
+CONFIG_AEABI=y
+# CONFIG_OABI_COMPAT is not set
+# CONFIG_ARCH_SPARSEMEM_DEFAULT is not set
+# CONFIG_ARCH_SELECT_MEMORY_MODEL is not set
+CONFIG_HAVE_ARCH_PFN_VALID=y
+CONFIG_HIGHMEM=y
+# CONFIG_HIGHPTE is not set
+CONFIG_HW_PERF_EVENTS=y
+# CONFIG_MEMBLOCK_RESERVE_DEBUG is not set
+CONFIG_FLATMEM=y
+CONFIG_FLAT_NODE_MEM_MAP=y
+CONFIG_HAVE_MEMBLOCK=y
+# CONFIG_HAVE_BOOTMEM_INFO_NODE is not set
+CONFIG_PAGEFLAGS_EXTENDED=y
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_COMPACTION=y
+CONFIG_MIGRATION=y
+# CONFIG_PHYS_ADDR_T_64BIT is not set
+CONFIG_ZONE_DMA_FLAG=0
+CONFIG_BOUNCE=y
+CONFIG_KSM=y
+CONFIG_OPTIMIZE_KSM=y
+CONFIG_KSM_ASSEMBLY_MEMCMP=y
+CONFIG_DEFAULT_MMAP_MIN_ADDR=4096
+CONFIG_CROSS_MEMORY_ATTACH=y
+# CONFIG_CLEANCACHE is not set
+# CONFIG_FRONTSWAP is not set
+# CONFIG_CMA is not set
+# CONFIG_ZPOOL is not set
+CONFIG_ZSMALLOC=y
+# CONFIG_PGTABLE_MAPPING is not set
+# CONFIG_ZSMALLOC_STAT is not set
+CONFIG_FORCE_MAX_ZONEORDER=14
+CONFIG_ALIGNMENT_TRAP=y
+# CONFIG_UACCESS_WITH_MEMCPY is not set
+CONFIG_SECCOMP=y
+# CONFIG_CC_STACKPROTECTOR is not set
+# CONFIG_XEN is not set
+CONFIG_ARM_FLUSH_CONSOLE_ON_RESTART=y
+
+#
+# Boot options
+#
+CONFIG_USE_OF=y
+CONFIG_ATAGS=y
+# CONFIG_DEPRECATED_PARAM_STRUCT is not set
+# CONFIG_BUILD_ARM_APPENDED_DTB_IMAGE is not set
+CONFIG_ZBOOT_ROM_TEXT=0x0
+CONFIG_ZBOOT_ROM_BSS=0x0
+# CONFIG_ARM_APPENDED_DTB is not set
+CONFIG_CMDLINE="root=/dev/ram0 rw initrd=0x80e00000,0x1f243f console=ttyS1,115200n8 init=/init mem=128M"
+CONFIG_CMDLINE_FROM_BOOTLOADER=y
+# CONFIG_CMDLINE_EXTEND is not set
+# CONFIG_CMDLINE_FORCE is not set
+# CONFIG_XIP_KERNEL is not set
+# CONFIG_KEXEC is not set
+# CONFIG_CRASH_DUMP is not set
+# CONFIG_AUTO_ZRELADDR is not set
+
+#
+# CPU Power Management
+#
+
+#
+# CPU Frequency scaling
+#
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_TABLE=y
+CONFIG_CPU_FREQ_STAT=y
+# CONFIG_CPU_FREQ_STAT_DETAILS is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set
+CONFIG_CPU_FREQ_DEFAULT_GOV_INTERACTIVE=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_SPRDEMAND is not set
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+CONFIG_CPU_FREQ_GOV_POWERSAVE=y
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+# CONFIG_CPU_FREQ_GOV_ONDEMAND is not set
+CONFIG_CPU_FREQ_GOV_INTERACTIVE=y
+# CONFIG_CPU_FREQ_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_FREQ_GOV_SPRDEMAND is not set
+# CONFIG_DVFS_ONLY is not set
+# CONFIG_SPRD_CPUFREQ_DT_DRIVER is not set
+# CONFIG_SCX35_1300MHZ is not set
+
+#
+# ARM CPU frequency scaling drivers
+#
+# CONFIG_ARM_EXYNOS4210_CPUFREQ is not set
+# CONFIG_ARM_EXYNOS4X12_CPUFREQ is not set
+# CONFIG_ARM_EXYNOS5250_CPUFREQ is not set
+# CONFIG_ARM_KIRKWOOD_CPUFREQ is not set
+CONFIG_CPU_IDLE=y
+# CONFIG_CPU_IDLE_MULTIPLE_DRIVERS is not set
+CONFIG_CPU_IDLE_GOV_LADDER=y
+CONFIG_CPU_IDLE_GOV_MENU=y
+# CONFIG_ARCH_NEEDS_CPU_IDLE_COUPLED is not set
+
+#
+# Floating point emulation
+#
+
+#
+# At least one emulation must be selected
+#
+CONFIG_VFP=y
+CONFIG_VFPv3=y
+CONFIG_NEON=y
+CONFIG_KERNEL_MODE_NEON=y
+
+#
+# Userspace binary formats
+#
+CONFIG_BINFMT_ELF=y
+CONFIG_ARCH_BINFMT_ELF_RANDOMIZE_PIE=y
+# CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS is not set
+CONFIG_BINFMT_SCRIPT=y
+# CONFIG_HAVE_AOUT is not set
+# CONFIG_BINFMT_MISC is not set
+CONFIG_COREDUMP=y
+
+#
+# Power management options
+#
+CONFIG_SUSPEND=y
+CONFIG_SUSPEND_FREEZER=y
+CONFIG_HAS_WAKELOCK=y
+CONFIG_HAS_EARLYSUSPEND=y
+CONFIG_WAKELOCK=y
+CONFIG_WAKELOCK_STAT=y
+CONFIG_USER_WAKELOCK=y
+CONFIG_EARLYSUSPEND=y
+# CONFIG_NO_USER_SPACE_SCREEN_ACCESS_CONTROL is not set
+CONFIG_FB_EARLYSUSPEND=y
+CONFIG_PM_SLEEP=y
+CONFIG_PM_SLEEP_SMP=y
+# CONFIG_PM_AUTOSLEEP is not set
+CONFIG_PM_RUNTIME=y
+CONFIG_PM=y
+# CONFIG_PM_DEBUG is not set
+# CONFIG_APM_EMULATION is not set
+CONFIG_PM_CLK=y
+# CONFIG_WQ_POWER_EFFICIENT_DEFAULT is not set
+CONFIG_CPU_PM=y
+CONFIG_SUSPEND_TIME=y
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+CONFIG_ARM_CPU_SUSPEND=y
+CONFIG_NET=y
+
+#
+# Networking options
+#
+CONFIG_PACKET=y
+# CONFIG_PACKET_DIAG is not set
+CONFIG_UNIX=y
+# CONFIG_UNIX_DIAG is not set
+CONFIG_XFRM=y
+CONFIG_XFRM_ALGO=y
+CONFIG_XFRM_USER=y
+CONFIG_XFRM_SUB_POLICY=y
+CONFIG_XFRM_SPRD_VOWIFI_FRAGMENT=y
+# CONFIG_XFRM_MIGRATE is not set
+CONFIG_XFRM_STATISTICS=y
+CONFIG_XFRM_IPCOMP=y
+CONFIG_NET_KEY=y
+# CONFIG_NET_KEY_MIGRATE is not set
+CONFIG_INET=y
+# CONFIG_IP_MULTICAST is not set
+CONFIG_IP_ADVANCED_ROUTER=y
+# CONFIG_IP_FIB_TRIE_STATS is not set
+CONFIG_IP_MULTIPLE_TABLES=y
+# CONFIG_IP_ROUTE_MULTIPATH is not set
+# CONFIG_IP_ROUTE_VERBOSE is not set
+# CONFIG_IP_PNP is not set
+# CONFIG_NET_IPIP is not set
+CONFIG_NET_IPGRE_DEMUX=y
+CONFIG_NET_IP_TUNNEL=y
+# CONFIG_NET_IPGRE is not set
+# CONFIG_ARPD is not set
+# CONFIG_SYN_COOKIES is not set
+# CONFIG_NET_IPVTI is not set
+CONFIG_INET_AH=y
+CONFIG_INET_ESP=y
+CONFIG_INET_IPCOMP=y
+CONFIG_INET_XFRM_TUNNEL=y
+CONFIG_INET_TUNNEL=y
+CONFIG_INET_XFRM_MODE_TRANSPORT=y
+CONFIG_INET_XFRM_MODE_TUNNEL=y
+CONFIG_INET_XFRM_MODE_BEET=y
+# CONFIG_INET_LRO is not set
+CONFIG_INET_DIAG=y
+CONFIG_INET_TCP_DIAG=y
+# CONFIG_INET_UDP_DIAG is not set
+CONFIG_INET_DIAG_DESTROY=y
+# CONFIG_TCP_CONG_ADVANCED is not set
+CONFIG_TCP_CONG_CUBIC=y
+CONFIG_DEFAULT_TCP_CONG="cubic"
+# CONFIG_TCP_MD5SIG is not set
+CONFIG_IPV6=y
+CONFIG_IPV6_PRIVACY=y
+CONFIG_IPV6_ROUTER_PREF=y
+CONFIG_IPV6_ROUTE_INFO=y
+CONFIG_IPV6_OPTIMISTIC_DAD=y
+CONFIG_INET6_AH=y
+CONFIG_INET6_ESP=y
+CONFIG_INET6_IPCOMP=y
+CONFIG_IPV6_MIP6=y
+CONFIG_INET6_XFRM_TUNNEL=y
+CONFIG_INET6_TUNNEL=y
+CONFIG_INET6_XFRM_MODE_TRANSPORT=y
+CONFIG_INET6_XFRM_MODE_TUNNEL=y
+CONFIG_INET6_XFRM_MODE_BEET=y
+# CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION is not set
+CONFIG_IPV6_SIT=y
+# CONFIG_IPV6_SIT_6RD is not set
+CONFIG_IPV6_NDISC_NODETYPE=y
+CONFIG_IPV6_TUNNEL=y
+# CONFIG_IPV6_GRE is not set
+CONFIG_IPV6_MULTIPLE_TABLES=y
+CONFIG_IPV6_SUBTREES=y
+# CONFIG_IPV6_MROUTE is not set
+# CONFIG_NETLABEL is not set
+CONFIG_ANDROID_PARANOID_NETWORK=y
+CONFIG_NET_ACTIVITY_STATS=y
+CONFIG_NETWORK_SECMARK=y
+# CONFIG_NETWORK_PHY_TIMESTAMPING is not set
+CONFIG_NETFILTER=y
+# CONFIG_NETFILTER_DEBUG is not set
+CONFIG_NETFILTER_ADVANCED=y
+
+#
+# Core Netfilter Configuration
+#
+CONFIG_NETFILTER_NETLINK=y
+# CONFIG_NETFILTER_NETLINK_ACCT is not set
+CONFIG_NETFILTER_NETLINK_QUEUE=y
+CONFIG_NETFILTER_NETLINK_LOG=y
+CONFIG_NF_CONNTRACK=y
+CONFIG_NF_CONNTRACK_MARK=y
+# CONFIG_NF_CONNTRACK_SECMARK is not set
+CONFIG_NF_CONNTRACK_PROCFS=y
+CONFIG_NF_CONNTRACK_EVENTS=y
+# CONFIG_NF_CONNTRACK_TIMEOUT is not set
+# CONFIG_NF_CONNTRACK_TIMESTAMP is not set
+CONFIG_NF_CT_PROTO_DCCP=y
+CONFIG_NF_CT_PROTO_GRE=y
+CONFIG_NF_CT_PROTO_SCTP=y
+CONFIG_NF_CT_PROTO_UDPLITE=y
+CONFIG_NF_CONNTRACK_AMANDA=y
+CONFIG_NF_CONNTRACK_FTP=y
+CONFIG_NF_CONNTRACK_H323=y
+CONFIG_NF_CONNTRACK_IRC=y
+CONFIG_NF_CONNTRACK_BROADCAST=y
+CONFIG_NF_CONNTRACK_NETBIOS_NS=y
+# CONFIG_NF_CONNTRACK_SNMP is not set
+CONFIG_NF_CONNTRACK_PPTP=y
+CONFIG_NF_CONNTRACK_SANE=y
+CONFIG_NF_CONNTRACK_SIP=y
+CONFIG_NF_CONNTRACK_TFTP=y
+CONFIG_NF_CT_NETLINK=y
+# CONFIG_NF_CT_NETLINK_TIMEOUT is not set
+# CONFIG_NETFILTER_NETLINK_QUEUE_CT is not set
+CONFIG_NF_NAT=y
+CONFIG_NF_NAT_NEEDED=y
+CONFIG_NF_NAT_PROTO_DCCP=y
+CONFIG_NF_NAT_PROTO_UDPLITE=y
+CONFIG_NF_NAT_PROTO_SCTP=y
+CONFIG_NF_NAT_AMANDA=y
+CONFIG_NF_NAT_FTP=y
+CONFIG_NF_NAT_IRC=y
+CONFIG_NF_NAT_SIP=y
+CONFIG_NF_NAT_TFTP=y
+CONFIG_NETFILTER_TPROXY=y
+CONFIG_NETFILTER_XTABLES=y
+
+#
+# Xtables combined modules
+#
+CONFIG_NETFILTER_XT_MARK=y
+CONFIG_NETFILTER_XT_CONNMARK=y
+
+#
+# Xtables targets
+#
+# CONFIG_NETFILTER_XT_TARGET_AUDIT is not set
+# CONFIG_NETFILTER_XT_TARGET_CHECKSUM is not set
+CONFIG_NETFILTER_XT_TARGET_CLASSIFY=y
+CONFIG_NETFILTER_XT_TARGET_CONNMARK=y
+# CONFIG_NETFILTER_XT_TARGET_CT is not set
+# CONFIG_NETFILTER_XT_TARGET_DSCP is not set
+# CONFIG_NETFILTER_XT_TARGET_HL is not set
+# CONFIG_NETFILTER_XT_TARGET_HMARK is not set
+CONFIG_NETFILTER_XT_TARGET_IDLETIMER=y
+CONFIG_NETFILTER_XT_TARGET_LOG=y
+CONFIG_NETFILTER_XT_TARGET_MARK=y
+CONFIG_NETFILTER_XT_TARGET_NETMAP=y
+CONFIG_NETFILTER_XT_TARGET_NFLOG=y
+CONFIG_NETFILTER_XT_TARGET_NFQUEUE=y
+# CONFIG_NETFILTER_XT_TARGET_NOTRACK is not set
+# CONFIG_NETFILTER_XT_TARGET_RATEEST is not set
+CONFIG_NETFILTER_XT_TARGET_REDIRECT=y
+# CONFIG_NETFILTER_XT_TARGET_TEE is not set
+CONFIG_NETFILTER_XT_TARGET_TPROXY=y
+CONFIG_NETFILTER_XT_TARGET_TRACE=y
+# CONFIG_NETFILTER_XT_TARGET_SECMARK is not set
+CONFIG_NETFILTER_XT_TARGET_TCPMSS=y
+# CONFIG_NETFILTER_XT_TARGET_TCPOPTSTRIP is not set
+
+#
+# Xtables matches
+#
+CONFIG_NETFILTER_XT_MATCH_ADDRTYPE=y
+# CONFIG_NETFILTER_XT_MATCH_BPF is not set
+# CONFIG_NETFILTER_XT_MATCH_CLUSTER is not set
+CONFIG_NETFILTER_XT_MATCH_COMMENT=y
+# CONFIG_NETFILTER_XT_MATCH_CONNBYTES is not set
+# CONFIG_NETFILTER_XT_MATCH_CONNLABEL is not set
+CONFIG_NETFILTER_XT_MATCH_CONNLIMIT=y
+CONFIG_NETFILTER_XT_MATCH_CONNMARK=y
+CONFIG_NETFILTER_XT_MATCH_CONNTRACK=y
+# CONFIG_NETFILTER_XT_MATCH_CPU is not set
+# CONFIG_NETFILTER_XT_MATCH_DCCP is not set
+# CONFIG_NETFILTER_XT_MATCH_DEVGROUP is not set
+# CONFIG_NETFILTER_XT_MATCH_DSCP is not set
+CONFIG_NETFILTER_XT_MATCH_ECN=y
+# CONFIG_NETFILTER_XT_MATCH_ESP is not set
+CONFIG_NETFILTER_XT_MATCH_HASHLIMIT=y
+CONFIG_NETFILTER_XT_MATCH_HELPER=y
+CONFIG_NETFILTER_XT_MATCH_HL=y
+CONFIG_NETFILTER_XT_MATCH_IPRANGE=y
+CONFIG_NETFILTER_XT_MATCH_LENGTH=y
+CONFIG_NETFILTER_XT_MATCH_LIMIT=y
+CONFIG_NETFILTER_XT_MATCH_MAC=y
+CONFIG_NETFILTER_XT_MATCH_MARK=y
+# CONFIG_NETFILTER_XT_MATCH_MULTIPORT is not set
+# CONFIG_NETFILTER_XT_MATCH_NFACCT is not set
+# CONFIG_NETFILTER_XT_MATCH_OSF is not set
+# CONFIG_NETFILTER_XT_MATCH_OWNER is not set
+CONFIG_NETFILTER_XT_MATCH_POLICY=y
+CONFIG_NETFILTER_XT_MATCH_PKTTYPE=y
+CONFIG_NETFILTER_XT_MATCH_QTAGUID=y
+CONFIG_NETFILTER_XT_MATCH_QUOTA=y
+CONFIG_NETFILTER_XT_MATCH_QUOTA2=y
+CONFIG_NETFILTER_XT_MATCH_QUOTA2_LOG=y
+# CONFIG_NETFILTER_XT_MATCH_RATEEST is not set
+# CONFIG_NETFILTER_XT_MATCH_REALM is not set
+# CONFIG_NETFILTER_XT_MATCH_RECENT is not set
+# CONFIG_NETFILTER_XT_MATCH_SCTP is not set
+CONFIG_NETFILTER_XT_MATCH_SOCKET=y
+CONFIG_NETFILTER_XT_MATCH_STATE=y
+CONFIG_NETFILTER_XT_MATCH_STATISTIC=y
+CONFIG_NETFILTER_XT_MATCH_STRING=y
+# CONFIG_NETFILTER_XT_MATCH_TCPMSS is not set
+CONFIG_NETFILTER_XT_MATCH_TIME=y
+CONFIG_NETFILTER_XT_MATCH_U32=y
+# CONFIG_IP_SET is not set
+# CONFIG_IP_VS is not set
+
+#
+# IP: Netfilter Configuration
+#
+CONFIG_NF_DEFRAG_IPV4=y
+CONFIG_NF_CONNTRACK_IPV4=y
+CONFIG_NF_CONNTRACK_PROC_COMPAT=y
+CONFIG_IP_NF_IPTABLES=y
+CONFIG_IP_NF_MATCH_AH=y
+CONFIG_IP_NF_MATCH_ECN=y
+# CONFIG_IP_NF_MATCH_RPFILTER is not set
+CONFIG_IP_NF_MATCH_TTL=y
+CONFIG_IP_NF_FILTER=y
+CONFIG_IP_NF_TARGET_REJECT=y
+CONFIG_IP_NF_VOWIFI_DEC_TCPDUMP=y
+CONFIG_IP_NF_TARGET_REJECT_SKERR=y
+# CONFIG_IP_NF_TARGET_ULOG is not set
+CONFIG_NF_NAT_IPV4=y
+CONFIG_IP_NF_TARGET_MASQUERADE=y
+CONFIG_IP_NF_TARGET_NETMAP=y
+CONFIG_IP_NF_TARGET_REDIRECT=y
+CONFIG_NF_NAT_PROTO_GRE=y
+CONFIG_NF_NAT_PPTP=y
+CONFIG_NF_NAT_H323=y
+CONFIG_IP_NF_MANGLE=y
+# CONFIG_IP_NF_TARGET_CLUSTERIP is not set
+# CONFIG_IP_NF_TARGET_ECN is not set
+# CONFIG_IP_NF_TARGET_TTL is not set
+CONFIG_IP_NF_RAW=y
+# CONFIG_IP_NF_SECURITY is not set
+CONFIG_IP_NF_ARPTABLES=y
+CONFIG_IP_NF_ARPFILTER=y
+CONFIG_IP_NF_ARP_MANGLE=y
+
+#
+# IPv6: Netfilter Configuration
+#
+CONFIG_NF_DEFRAG_IPV6=y
+CONFIG_NF_CONNTRACK_IPV6=y
+CONFIG_IP6_NF_IPTABLES=y
+# CONFIG_IP6_NF_MATCH_AH is not set
+# CONFIG_IP6_NF_MATCH_EUI64 is not set
+# CONFIG_IP6_NF_MATCH_FRAG is not set
+# CONFIG_IP6_NF_MATCH_OPTS is not set
+# CONFIG_IP6_NF_MATCH_HL is not set
+# CONFIG_IP6_NF_MATCH_IPV6HEADER is not set
+# CONFIG_IP6_NF_MATCH_MH is not set
+# CONFIG_IP6_NF_MATCH_RPFILTER is not set
+# CONFIG_IP6_NF_MATCH_RT is not set
+# CONFIG_IP6_NF_TARGET_HL is not set
+CONFIG_IP6_NF_FILTER=y
+CONFIG_IP6_NF_VOWIFI_DEC_TCPDUMP=y
+CONFIG_IP6_NF_TARGET_REJECT=y
+CONFIG_IP6_NF_TARGET_REJECT_SKERR=y
+CONFIG_IP6_NF_MANGLE=y
+CONFIG_IP6_NF_RAW=y
+# CONFIG_IP6_NF_SECURITY is not set
+# CONFIG_NF_NAT_IPV6 is not set
+# CONFIG_IP_DCCP is not set
+# CONFIG_IP_SCTP is not set
+# CONFIG_RDS is not set
+# CONFIG_TIPC is not set
+# CONFIG_ATM is not set
+CONFIG_L2TP=y
+# CONFIG_L2TP_DEBUGFS is not set
+# CONFIG_L2TP_V3 is not set
+# CONFIG_BRIDGE is not set
+CONFIG_HAVE_NET_DSA=y
+# CONFIG_VLAN_8021Q is not set
+# CONFIG_DECNET is not set
+# CONFIG_LLC2 is not set
+# CONFIG_IPX is not set
+# CONFIG_ATALK is not set
+# CONFIG_X25 is not set
+# CONFIG_LAPB is not set
+# CONFIG_PHONET is not set
+# CONFIG_IEEE802154 is not set
+CONFIG_NET_SCHED=y
+
+#
+# Queueing/Scheduling
+#
+# CONFIG_NET_SCH_CBQ is not set
+CONFIG_NET_SCH_HTB=y
+# CONFIG_NET_SCH_HFSC is not set
+# CONFIG_NET_SCH_PRIO is not set
+# CONFIG_NET_SCH_MULTIQ is not set
+# CONFIG_NET_SCH_RED is not set
+# CONFIG_NET_SCH_SFB is not set
+# CONFIG_NET_SCH_SFQ is not set
+# CONFIG_NET_SCH_TEQL is not set
+# CONFIG_NET_SCH_TBF is not set
+# CONFIG_NET_SCH_GRED is not set
+# CONFIG_NET_SCH_DSMARK is not set
+# CONFIG_NET_SCH_NETEM is not set
+# CONFIG_NET_SCH_DRR is not set
+# CONFIG_NET_SCH_MQPRIO is not set
+# CONFIG_NET_SCH_CHOKE is not set
+# CONFIG_NET_SCH_QFQ is not set
+# CONFIG_NET_SCH_CODEL is not set
+# CONFIG_NET_SCH_FQ_CODEL is not set
+# CONFIG_NET_SCH_INGRESS is not set
+# CONFIG_NET_SCH_PLUG is not set
+
+#
+# Classification
+#
+CONFIG_NET_CLS=y
+# CONFIG_NET_CLS_BASIC is not set
+# CONFIG_NET_CLS_TCINDEX is not set
+# CONFIG_NET_CLS_ROUTE4 is not set
+# CONFIG_NET_CLS_FW is not set
+CONFIG_NET_CLS_U32=y
+# CONFIG_CLS_U32_PERF is not set
+# CONFIG_CLS_U32_MARK is not set
+# CONFIG_NET_CLS_RSVP is not set
+# CONFIG_NET_CLS_RSVP6 is not set
+# CONFIG_NET_CLS_FLOW is not set
+# CONFIG_NET_CLS_CGROUP is not set
+CONFIG_NET_EMATCH=y
+CONFIG_NET_EMATCH_STACK=32
+# CONFIG_NET_EMATCH_CMP is not set
+# CONFIG_NET_EMATCH_NBYTE is not set
+CONFIG_NET_EMATCH_U32=y
+# CONFIG_NET_EMATCH_META is not set
+# CONFIG_NET_EMATCH_TEXT is not set
+CONFIG_NET_CLS_ACT=y
+# CONFIG_NET_ACT_POLICE is not set
+# CONFIG_NET_ACT_GACT is not set
+# CONFIG_NET_ACT_MIRRED is not set
+# CONFIG_NET_ACT_IPT is not set
+# CONFIG_NET_ACT_NAT is not set
+# CONFIG_NET_ACT_PEDIT is not set
+# CONFIG_NET_ACT_SIMP is not set
+# CONFIG_NET_ACT_SKBEDIT is not set
+# CONFIG_NET_ACT_CSUM is not set
+# CONFIG_NET_CLS_IND is not set
+CONFIG_NET_SCH_FIFO=y
+# CONFIG_DCB is not set
+# CONFIG_DNS_RESOLVER is not set
+# CONFIG_BATMAN_ADV is not set
+# CONFIG_OPENVSWITCH is not set
+# CONFIG_VSOCKETS is not set
+# CONFIG_NETLINK_MMAP is not set
+# CONFIG_NETLINK_DIAG is not set
+CONFIG_RPS=y
+CONFIG_RFS_ACCEL=y
+CONFIG_XPS=y
+# CONFIG_NETPRIO_CGROUP is not set
+CONFIG_BQL=y
+# CONFIG_BPF_JIT is not set
+
+#
+# Network testing
+#
+# CONFIG_NET_PKTGEN is not set
+# CONFIG_NET_DROP_MONITOR is not set
+# CONFIG_HAMRADIO is not set
+# CONFIG_CAN is not set
+# CONFIG_IRDA is not set
+CONFIG_BT=y
+CONFIG_BT_RFCOMM=y
+CONFIG_BT_RFCOMM_TTY=y
+CONFIG_BT_BNEP=y
+CONFIG_BT_BNEP_MC_FILTER=y
+CONFIG_BT_BNEP_PROTO_FILTER=y
+CONFIG_BT_HIDP=y
+
+#
+# Bluetooth device drivers
+#
+# CONFIG_BT_HCIBTUSB is not set
+# CONFIG_BT_HCIBTSDIO is not set
+# CONFIG_BT_HCIUART is not set
+# CONFIG_BT_HCIBCM203X is not set
+# CONFIG_BT_HCIBPA10X is not set
+# CONFIG_BT_HCIBFUSB is not set
+# CONFIG_BT_HCIVHCI is not set
+# CONFIG_BT_MRVL is not set
+# CONFIG_BT_BCM4330 is not set
+CONFIG_SPRD_2331=y
+# CONFIG_AF_RXRPC is not set
+CONFIG_FIB_RULES=y
+CONFIG_WIRELESS=y
+CONFIG_CFG80211=y
+# CONFIG_NL80211_TESTMODE is not set
+# CONFIG_CFG80211_DEVELOPER_WARNINGS is not set
+# CONFIG_CFG80211_REG_DEBUG is not set
+# CONFIG_CFG80211_CERTIFICATION_ONUS is not set
+CONFIG_CFG80211_DEFAULT_PS=y
+# CONFIG_CFG80211_DEBUGFS is not set
+CONFIG_CFG80211_INTERNAL_REGDB=y
+# CONFIG_CFG80211_WEXT is not set
+# CONFIG_LIB80211 is not set
+CONFIG_CFG80211_ALLOW_RECONNECT=y
+# CONFIG_MAC80211 is not set
+# CONFIG_WIMAX is not set
+CONFIG_RFKILL=y
+CONFIG_RFKILL_PM=y
+# CONFIG_RFKILL_INPUT is not set
+# CONFIG_RFKILL_REGULATOR is not set
+# CONFIG_RFKILL_GPIO is not set
+# CONFIG_NET_9P is not set
+# CONFIG_CAIF is not set
+# CONFIG_CEPH_LIB is not set
+# CONFIG_NFC is not set
+CONFIG_SPRD_IMS_BRIDGE=y
+CONFIG_SPRD_IMS_BRIDGE_TEST=y
+CONFIG_HAVE_BPF_JIT=y
+# CONFIG_SPRD_TOUCH_BOOST is not set
+
+#
+# Device Drivers
+#
+
+#
+# Generic Driver Options
+#
+CONFIG_UEVENT_HELPER_PATH=""
+# CONFIG_DEVTMPFS is not set
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+CONFIG_FW_LOADER=y
+CONFIG_FIRMWARE_IN_KERNEL=y
+CONFIG_EXTRA_FIRMWARE=""
+CONFIG_FW_LOADER_USER_HELPER=y
+# CONFIG_DEBUG_DRIVER is not set
+# CONFIG_DEBUG_DEVRES is not set
+# CONFIG_SYS_HYPERVISOR is not set
+# CONFIG_GENERIC_CPU_DEVICES is not set
+# CONFIG_HAVE_CPU_AUTOPROBE is not set
+CONFIG_REGMAP=y
+CONFIG_REGMAP_I2C=y
+CONFIG_REGMAP_SPI=y
+CONFIG_DMA_SHARED_BUFFER=y
+# CONFIG_BATTERY_SAMSUNG is not set
+# CONFIG_SAMSUNG_LPM_MODE is not set
+# CONFIG_SAMSUNG_BATTERY_ENG_TEST is not set
+# CONFIG_STBC_SAMSUNG is not set
+# CONFIG_CHARGER_MAX8903 is not set
+# CONFIG_CHARGER_SMB347 is not set
+# CONFIG_MFD_RT9532 is not set
+# CONFIG_CHARGER_SM5414 is not set
+# CONFIG_CHARGER_SM5418 is not set
+
+#
+# Bus devices
+#
+# CONFIG_ARM_CCI is not set
+# CONFIG_CONNECTOR is not set
+# CONFIG_MTD is not set
+CONFIG_DTC=y
+CONFIG_OF=y
+
+#
+# Device Tree and Open Firmware support
+#
+# CONFIG_PROC_DEVICETREE is not set
+# CONFIG_OF_SELFTEST is not set
+CONFIG_OF_FLATTREE=y
+CONFIG_OF_EARLY_FLATTREE=y
+CONFIG_OF_ADDRESS=y
+CONFIG_OF_IRQ=y
+CONFIG_OF_DEVICE=y
+CONFIG_OF_I2C=y
+CONFIG_OF_NET=y
+CONFIG_OF_MDIO=y
+# CONFIG_PARPORT is not set
+CONFIG_BLK_DEV=y
+CONFIG_ZRAM=y
+# CONFIG_ZRAM_LZ4_COMPRESS is not set
+CONFIG_ZRAM_DEBUG=y
+# CONFIG_BLK_DEV_COW_COMMON is not set
+CONFIG_BLK_DEV_LOOP=y
+CONFIG_BLK_DEV_LOOP_MIN_COUNT=8
+# CONFIG_BLK_DEV_CRYPTOLOOP is not set
+# CONFIG_BLK_DEV_DRBD is not set
+# CONFIG_BLK_DEV_NBD is not set
+# CONFIG_BLK_DEV_RAM is not set
+# CONFIG_CDROM_PKTCDVD is not set
+# CONFIG_ATA_OVER_ETH is not set
+# CONFIG_MG_DISK is not set
+# CONFIG_BLK_DEV_RBD is not set
+
+#
+# Misc devices
+#
+# CONFIG_SENSORS_LIS3LV02D is not set
+# CONFIG_AD525X_DPOT is not set
+# CONFIG_ATMEL_PWM is not set
+# CONFIG_DUMMY_IRQ is not set
+# CONFIG_ICS932S401 is not set
+# CONFIG_ATMEL_SSC is not set
+# CONFIG_ENCLOSURE_SERVICES is not set
+# CONFIG_APDS9802ALS is not set
+# CONFIG_ISL29003 is not set
+# CONFIG_ISL29020 is not set
+# CONFIG_SENSORS_TSL2550 is not set
+# CONFIG_SENSORS_BH1780 is not set
+# CONFIG_SENSORS_BH1770 is not set
+# CONFIG_SENSORS_APDS990X is not set
+# CONFIG_HMC6352 is not set
+# CONFIG_SENSORS_ST480 is not set
+# CONFIG_SENSORS_AK8963 is not set
+# CONFIG_DS1682 is not set
+# CONFIG_TI_DAC7512 is not set
+CONFIG_UID_STAT=y
+# CONFIG_BMP085_I2C is not set
+# CONFIG_BMP085_SPI is not set
+# CONFIG_USB_SWITCH_FSA9480 is not set
+# CONFIG_LATTICE_ECP3_CONFIG is not set
+# CONFIG_SRAM is not set
+CONFIG_UID_CPUTIME=y
+# CONFIG_SPRD_BOARD_TYPE is not set
+CONFIG_SCX35L_SCENARIO_DFS=y
+# CONFIG_SCX35L_DFS_AUTO_FIT is not set
+# CONFIG_SPRD_OSC is not set
+CONFIG_SPRD_7SRESET=y
+CONFIG_OTP_SPRD=y
+CONFIG_OTP_SPRD_EFUSE=y
+CONFIG_OTP_SPRD_ADIE_EFUSE=y
+CONFIG_SPRD_VSP=y
+CONFIG_SPRD_JPG=y
+CONFIG_SPRD_VPP=y
+CONFIG_SPRD_CODA7L=y
+CONFIG_SPRD_CPROC=y
+
+#
+# 2351 modules
+#
+# CONFIG_SPRD_2351 is not set
+# CONFIG_CGX is not set
+# CONFIG_SR2351_FM is not set
+# CONFIG_FM_SEEK_STEP_50KHZ is not set
+# CONFIG_C2PORT is not set
+
+#
+# EEPROM support
+#
+# CONFIG_EEPROM_AT24 is not set
+# CONFIG_EEPROM_AT25 is not set
+# CONFIG_EEPROM_LEGACY is not set
+# CONFIG_EEPROM_MAX6875 is not set
+# CONFIG_EEPROM_93CX6 is not set
+# CONFIG_EEPROM_93XX46 is not set
+
+#
+# Texas Instruments shared transport line discipline
+#
+# CONFIG_TI_ST is not set
+# CONFIG_SENSORS_LIS3_SPI is not set
+# CONFIG_SENSORS_LIS3_I2C is not set
+
+#
+# Altera FPGA firmware download module
+#
+# CONFIG_ALTERA_STAPL is not set
+CONFIG_BENCHMARK=y
+CONFIG_BOOT_PERF=y
+
+#
+# SDIODEV modules
+#
+CONFIG_SDIODEV=y
+# CONFIG_SDIODEV_TEST is not set
+CONFIG_WCN_EXTENSION=y
+
+#
+# MARLIN DEBUG modules
+#
+CONFIG_MDBG_SDIO=y
+CONFIG_MDBG_RING=y
+CONFIG_MDBG=y
+CONFIG_SPRD_DOWNLOAD_IMG=y
+CONFIG_SPRD_DOWNLOAD_POWER_CTL=y
+CONFIG_GNSS_DBG=y
+# CONFIG_SPRD_HWCONFIG_CHECK is not set
+
+#
+# SCSI device support
+#
+CONFIG_SCSI_MOD=y
+CONFIG_RAID_ATTRS=y
+CONFIG_SCSI=y
+CONFIG_SCSI_DMA=y
+CONFIG_SCSI_TGT=y
+# CONFIG_SCSI_NETLINK is not set
+CONFIG_SCSI_PROC_FS=y
+
+#
+# SCSI support type (disk, tape, CD-ROM)
+#
+CONFIG_BLK_DEV_SD=y
+# CONFIG_CHR_DEV_ST is not set
+# CONFIG_CHR_DEV_OSST is not set
+CONFIG_BLK_DEV_SR=y
+CONFIG_BLK_DEV_SR_VENDOR=y
+CONFIG_CHR_DEV_SG=y
+# CONFIG_CHR_DEV_SCH is not set
+CONFIG_SCSI_MULTI_LUN=y
+# CONFIG_SCSI_CONSTANTS is not set
+# CONFIG_SCSI_LOGGING is not set
+CONFIG_SCSI_SCAN_ASYNC=y
+
+#
+# SCSI Transports
+#
+# CONFIG_SCSI_SPI_ATTRS is not set
+# CONFIG_SCSI_FC_ATTRS is not set
+# CONFIG_SCSI_ISCSI_ATTRS is not set
+# CONFIG_SCSI_SAS_ATTRS is not set
+# CONFIG_SCSI_SAS_LIBSAS is not set
+# CONFIG_SCSI_SRP_ATTRS is not set
+CONFIG_SCSI_LOWLEVEL=y
+# CONFIG_ISCSI_TCP is not set
+# CONFIG_ISCSI_BOOT_SYSFS is not set
+# CONFIG_SCSI_UFSHCD is not set
+# CONFIG_LIBFC is not set
+# CONFIG_LIBFCOE is not set
+# CONFIG_SCSI_DEBUG is not set
+CONFIG_SCSI_DH=y
+# CONFIG_SCSI_DH_RDAC is not set
+# CONFIG_SCSI_DH_HP_SW is not set
+# CONFIG_SCSI_DH_EMC is not set
+# CONFIG_SCSI_DH_ALUA is not set
+# CONFIG_SCSI_OSD_INITIATOR is not set
+# CONFIG_ATA is not set
+CONFIG_MD=y
+# CONFIG_BLK_DEV_MD is not set
+# CONFIG_BCACHE is not set
+CONFIG_BLK_DEV_DM_BUILTIN=y
+CONFIG_BLK_DEV_DM=y
+# CONFIG_DM_DEBUG is not set
+CONFIG_DM_BUFIO=y
+CONFIG_DM_CRYPT=y
+# CONFIG_DM_SNAPSHOT is not set
+# CONFIG_DM_THIN_PROVISIONING is not set
+# CONFIG_DM_CACHE is not set
+# CONFIG_DM_MIRROR is not set
+# CONFIG_DM_RAID is not set
+# CONFIG_DM_ZERO is not set
+# CONFIG_DM_MULTIPATH is not set
+# CONFIG_DM_DELAY is not set
+# CONFIG_DM_UEVENT is not set
+# CONFIG_DM_FLAKEY is not set
+CONFIG_DM_VERITY=y
+CONFIG_DM_VERITY_FEC=y
+# CONFIG_TARGET_CORE is not set
+CONFIG_NETDEVICES=y
+CONFIG_NET_CORE=y
+# CONFIG_BONDING is not set
+CONFIG_DUMMY=y
+# CONFIG_EQUALIZER is not set
+CONFIG_MII=y
+# CONFIG_IFB is not set
+# CONFIG_NET_TEAM is not set
+# CONFIG_MACVLAN is not set
+# CONFIG_VXLAN is not set
+# CONFIG_NETCONSOLE is not set
+# CONFIG_NETPOLL is not set
+# CONFIG_NET_POLL_CONTROLLER is not set
+CONFIG_TUN=y
+# CONFIG_VETH is not set
+
+#
+# CAIF transport drivers
+#
+
+#
+# Distributed Switch Architecture drivers
+#
+# CONFIG_NET_DSA_MV88E6XXX is not set
+# CONFIG_NET_DSA_MV88E6060 is not set
+# CONFIG_NET_DSA_MV88E6XXX_NEED_PPU is not set
+# CONFIG_NET_DSA_MV88E6131 is not set
+# CONFIG_NET_DSA_MV88E6123_61_65 is not set
+CONFIG_ETHERNET=y
+CONFIG_NET_CADENCE=y
+# CONFIG_ARM_AT91_ETHER is not set
+# CONFIG_MACB is not set
+CONFIG_NET_VENDOR_BROADCOM=y
+# CONFIG_B44 is not set
+# CONFIG_NET_CALXEDA_XGMAC is not set
+CONFIG_NET_VENDOR_CIRRUS=y
+# CONFIG_CS89x0 is not set
+# CONFIG_DM9000 is not set
+# CONFIG_DNET is not set
+CONFIG_NET_VENDOR_FARADAY=y
+# CONFIG_FTMAC100 is not set
+# CONFIG_FTGMAC100 is not set
+CONFIG_NET_VENDOR_INTEL=y
+CONFIG_NET_VENDOR_I825XX=y
+CONFIG_NET_VENDOR_MARVELL=y
+# CONFIG_MVMDIO is not set
+CONFIG_NET_VENDOR_MICREL=y
+# CONFIG_KS8851 is not set
+# CONFIG_KS8851_MLL is not set
+CONFIG_NET_VENDOR_MICROCHIP=y
+# CONFIG_ENC28J60 is not set
+CONFIG_NET_VENDOR_NATSEMI=y
+CONFIG_NET_VENDOR_8390=y
+# CONFIG_AX88796 is not set
+# CONFIG_ETHOC is not set
+CONFIG_NET_VENDOR_SEEQ=y
+CONFIG_NET_VENDOR_SMSC=y
+CONFIG_SMC91X=y
+# CONFIG_SMC911X is not set
+CONFIG_SMSC911X=y
+# CONFIG_SMSC911X_ARCH_HOOKS is not set
+CONFIG_NET_VENDOR_STMICRO=y
+# CONFIG_STMMAC_ETH is not set
+CONFIG_NET_VENDOR_WIZNET=y
+# CONFIG_WIZNET_W5100 is not set
+# CONFIG_WIZNET_W5300 is not set
+# CONFIG_SPRD_VETH is not set
+# CONFIG_BIH is not set
+CONFIG_PHYLIB=y
+
+#
+# MII PHY device drivers
+#
+# CONFIG_AT803X_PHY is not set
+# CONFIG_AMD_PHY is not set
+# CONFIG_MARVELL_PHY is not set
+# CONFIG_DAVICOM_PHY is not set
+# CONFIG_QSEMI_PHY is not set
+# CONFIG_LXT_PHY is not set
+# CONFIG_CICADA_PHY is not set
+# CONFIG_VITESSE_PHY is not set
+# CONFIG_SMSC_PHY is not set
+# CONFIG_BROADCOM_PHY is not set
+# CONFIG_BCM87XX_PHY is not set
+# CONFIG_ICPLUS_PHY is not set
+# CONFIG_REALTEK_PHY is not set
+# CONFIG_NATIONAL_PHY is not set
+# CONFIG_STE10XP is not set
+# CONFIG_LSI_ET1011C_PHY is not set
+# CONFIG_MICREL_PHY is not set
+# CONFIG_FIXED_PHY is not set
+# CONFIG_MDIO_BITBANG is not set
+# CONFIG_MDIO_BUS_MUX_GPIO is not set
+# CONFIG_MDIO_BUS_MUX_MMIOREG is not set
+# CONFIG_MICREL_KS8995MA is not set
+CONFIG_PPP=y
+CONFIG_PPP_BSDCOMP=y
+CONFIG_PPP_DEFLATE=y
+CONFIG_PPP_FILTER=y
+CONFIG_PPP_MPPE=y
+CONFIG_PPP_MULTILINK=y
+CONFIG_PPPOE=y
+CONFIG_PPTP=y
+CONFIG_PPPOL2TP=y
+CONFIG_PPPOLAC=y
+CONFIG_PPPOPNS=y
+CONFIG_PPP_ASYNC=y
+# CONFIG_PPP_SYNC_TTY is not set
+# CONFIG_SLIP is not set
+CONFIG_SLHC=y
+
+#
+# USB Network Adapters
+#
+# CONFIG_USB_CATC is not set
+# CONFIG_USB_KAWETH is not set
+# CONFIG_USB_PEGASUS is not set
+# CONFIG_USB_RTL8150 is not set
+# CONFIG_USB_RTL8152 is not set
+# CONFIG_USB_USBNET is not set
+# CONFIG_USB_HSO is not set
+# CONFIG_USB_IPHETH is not set
+CONFIG_WLAN=y
+# CONFIG_USB_ZD1201 is not set
+# CONFIG_USB_NET_RNDIS_WLAN is not set
+# CONFIG_WIFI_CONTROL_FUNC is not set
+# CONFIG_ATH_CARDS is not set
+# CONFIG_BCMDHD is not set
+# CONFIG_BRCMFMAC is not set
+# CONFIG_HOSTAP is not set
+# CONFIG_LIBERTAS is not set
+# CONFIG_WL_TI is not set
+# CONFIG_MWIFIEX is not set
+# CONFIG_SPRDWL is not set
+CONFIG_SC2331_MEM_ALLOC=y
+
+#
+# Enable WiMAX (Networking options) to see the WiMAX drivers
+#
+# CONFIG_WAN is not set
+# CONFIG_ISDN is not set
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+# CONFIG_INPUT_FF_MEMLESS is not set
+# CONFIG_INPUT_POLLDEV is not set
+# CONFIG_INPUT_SPARSEKMAP is not set
+CONFIG_INPUT_MATRIXKMAP=y
+
+#
+# Userland interfaces
+#
+# CONFIG_INPUT_MOUSEDEV is not set
+# CONFIG_INPUT_JOYDEV is not set
+CONFIG_INPUT_EVDEV=y
+# CONFIG_INPUT_EVBUG is not set
+# CONFIG_INPUT_KEYRESET is not set
+# CONFIG_INPUT_KEYCOMBO is not set
+
+#
+# Input Device Drivers
+#
+CONFIG_INPUT_KEYBOARD=y
+# CONFIG_KEYBOARD_ADP5588 is not set
+# CONFIG_KEYBOARD_ADP5589 is not set
+# CONFIG_KEYBOARD_ATKBD is not set
+# CONFIG_KEYBOARD_QT1070 is not set
+# CONFIG_KEYBOARD_QT2160 is not set
+# CONFIG_KEYBOARD_LKKBD is not set
+CONFIG_KEYBOARD_GPIO=y
+# CONFIG_KEYBOARD_GPIO_SPRD is not set
+# CONFIG_KEYBOARD_TCA6416 is not set
+# CONFIG_KEYBOARD_TCA8418 is not set
+# CONFIG_KEYBOARD_MATRIX is not set
+# CONFIG_KEYBOARD_LM8323 is not set
+# CONFIG_KEYBOARD_LM8333 is not set
+# CONFIG_KEYBOARD_MAX7359 is not set
+# CONFIG_KEYBOARD_MCS is not set
+# CONFIG_KEYBOARD_MPR121 is not set
+# CONFIG_KEYBOARD_NEWTON is not set
+# CONFIG_KEYBOARD_OPENCORES is not set
+# CONFIG_KEYBOARD_SAMSUNG is not set
+# CONFIG_KEYBOARD_STOWAWAY is not set
+# CONFIG_KEYBOARD_SUNKBD is not set
+# CONFIG_KEYBOARD_XTKBD is not set
+# CONFIG_KEYBOARD_SC is not set
+CONFIG_KEYBOARD_SPRD_EIC=y
+# CONFIG_KEYBOARD_TC350K_J33G is not set
+# CONFIG_KEYBOARD_TC300K is not set
+# CONFIG_KEYBOARD_TC350K is not set
+# CONFIG_KEYBOARD_MELFAS_MHS204 is not set
+# CONFIG_INPUT_MOUSE is not set
+# CONFIG_INPUT_JOYSTICK is not set
+# CONFIG_INPUT_TABLET is not set
+CONFIG_INPUT_TOUCHSCREEN=y
+# CONFIG_TOUCHSCREEN_ADS7846 is not set
+# CONFIG_TOUCHSCREEN_AD7877 is not set
+# CONFIG_TOUCHSCREEN_AD7879 is not set
+# CONFIG_TOUCHSCREEN_ATMEL_MXT is not set
+# CONFIG_TOUCHSCREEN_AUO_PIXCIR is not set
+# CONFIG_TOUCHSCREEN_BU21013 is not set
+# CONFIG_TOUCHSCREEN_CY8CTMG110 is not set
+# CONFIG_TOUCHSCREEN_CYTTSP_CORE is not set
+# CONFIG_TOUCHSCREEN_DYNAPRO is not set
+# CONFIG_TOUCHSCREEN_HAMPSHIRE is not set
+# CONFIG_TOUCHSCREEN_EETI is not set
+# CONFIG_TOUCHSCREEN_EGALAX is not set
+# CONFIG_TOUCHSCREEN_FUJITSU is not set
+# CONFIG_TOUCHSCREEN_ILI210X is not set
+# CONFIG_TOUCHSCREEN_GUNZE is not set
+# CONFIG_TOUCHSCREEN_ELO is not set
+# CONFIG_TOUCHSCREEN_WACOM_W8001 is not set
+# CONFIG_TOUCHSCREEN_WACOM_I2C is not set
+# CONFIG_TOUCHSCREEN_MAX11801 is not set
+# CONFIG_TOUCHSCREEN_MCS5000 is not set
+# CONFIG_TOUCHSCREEN_MMS114 is not set
+# CONFIG_TOUCHSCREEN_ZT7554 is not set
+# CONFIG_TOUCHSCREEN_MTOUCH is not set
+# CONFIG_TOUCHSCREEN_INEXIO is not set
+# CONFIG_TOUCHSCREEN_MK712 is not set
+# CONFIG_TOUCHSCREEN_PENMOUNT is not set
+# CONFIG_TOUCHSCREEN_EDT_FT5X06 is not set
+# CONFIG_TOUCHSCREEN_TOUCHRIGHT is not set
+# CONFIG_TOUCHSCREEN_TOUCHWIN is not set
+# CONFIG_TOUCHSCREEN_PIXCIR is not set
+# CONFIG_TOUCHSCREEN_USB_COMPOSITE is not set
+# CONFIG_TOUCHSCREEN_TOUCHIT213 is not set
+# CONFIG_TOUCHSCREEN_TSC_SERIO is not set
+# CONFIG_TOUCHSCREEN_TSC2005 is not set
+# CONFIG_TOUCHSCREEN_TSC2007 is not set
+# CONFIG_TOUCHSCREEN_W90X900 is not set
+# CONFIG_TOUCHSCREEN_ST1232 is not set
+# CONFIG_TOUCHSCREEN_TPS6507X is not set
+#CONFIG_TOUCHSCREEN_FOCALTECH=y
+# CONFIG_TOUCHSCREEN_FIRMWARE_UPGRADE is not set
+# CONFIG_TOUCHSCREEN_GOODIX is not set
+# CONFIG_TOUCHSCREEN_GOODIX2 is not set
+# CONFIG_TOUCHSCREEN_MMS136 is not set
+# CONFIG_TOUCHSCREEN_IST30XX is not set
+# CONFIG_TOUCHSCREEN_IST30XXA is not set
+# CONFIG_TOUCHSCREEN_IST30XXB is not set
+# CONFIG_TOUCHSCREEN_IST30XXC is not set
+# CONFIG_TOUCHSCREEN_IST30XXC_J33G is not set
+# CONFIG_TOUCHSCREEN_IST30XXD is not set
+# CONFIG_TOUCHSCREEN_MMS134 is not set
+# CONFIG_TOUCHSCREEN_MMS134S is not set
+CONFIG_TOUCHSCREEN_MSG2138_1=y
+#CONFIG_TOUCHSCREEN_MSG2XXX=y
+# CONFIG_TOUCHSCREEN_BT541_TS is not set
+# CONFIG_TOUCHSCREEN_MELFAS_MCS6000 is not set
+# CONFIG_TOUCHSCREEN_MELFAS_MCS8040L is not set
+# CONFIG_TOUCHSCREEN_MELFAS_MCS8040L_FOR_PIKEBJ1MINI is not set
+# CONFIG_TOUCHSCREEN_BT432_TS is not set
+CONFIG_INPUT_MISC=y
+# CONFIG_INPUT_AD714X is not set
+# CONFIG_INPUT_BMA150 is not set
+# CONFIG_INPUT_MMA8450 is not set
+# CONFIG_INPUT_MPU3050 is not set
+# CONFIG_INPUT_GP2A is not set
+# CONFIG_INPUT_GPIO_TILT_POLLED is not set
+# CONFIG_INPUT_ATI_REMOTE2 is not set
+# CONFIG_INPUT_KEYCHORD is not set
+# CONFIG_INPUT_KEYSPAN_REMOTE is not set
+# CONFIG_INPUT_KXTJ9 is not set
+# CONFIG_INPUT_POWERMATE is not set
+# CONFIG_INPUT_YEALINK is not set
+# CONFIG_INPUT_CM109 is not set
+CONFIG_INPUT_UINPUT=y
+CONFIG_INPUT_GPIO=y
+# CONFIG_INPUT_PCF8574 is not set
+# CONFIG_INPUT_GPIO_ROTARY_ENCODER is not set
+# CONFIG_INPUT_ADXL34X is not set
+# CONFIG_INPUT_IMS_PCU is not set
+# CONFIG_INPUT_CMA3000 is not set
+CONFIG_INPUT_HEADSET_SPRD_SC2723=y
+# CONFIG_INPUT_SPRD_HEADSET_SHARK is not set
+# CONFIG_INPUT_SPRD_HALL is not set
+# CONFIG_INPUT_LIS3DH_I2C is not set
+#CONFIG_INPUT_LIS3DH_I2C_INTERRUPT is not set
+# CONFIG_INPUT_LIS3DH_ZT_I2C is not set
+# CONFIG_INPUT_MEM3524X_I2C is not set
+# CONFIG_INPUT_LSM6DS0_I2C is not set
+CONFIG_INPUT_COMPASS_AF8133I_I2C=y
+CONFIG_INPUT_MC3XX0_I2C=y
+CONFIG_INPUT_LTR558_I2C=y
+# CONFIG_INPUT_EPL2182_I2C  is not set
+# CONFIG_INPUT_EPL259X_I2C is not set
+# CONFIG_INPUT_STK3311_I2C is not set
+# CONFIG_INPUT_FINGERPRINT is not set
+CONFIG_INPUT_FINGERPRINT=y
+CONFIG_FINGERPRINT_FPSENSOR=y
+
+
+#
+# Hardware I/O ports
+#
+# CONFIG_SERIO is not set
+# CONFIG_GAMEPORT is not set
+
+#
+# Character devices
+#
+CONFIG_TTY=y
+# CONFIG_VT is not set
+CONFIG_UNIX98_PTYS=y
+# CONFIG_DEVPTS_MULTIPLE_INSTANCES is not set
+# CONFIG_LEGACY_PTYS is not set
+# CONFIG_SERIAL_NONSTANDARD is not set
+# CONFIG_N_GSM is not set
+# CONFIG_TRACE_SINK is not set
+CONFIG_DEVMEM=y
+CONFIG_DEVKMEM=y
+
+#
+# Serial drivers
+#
+# CONFIG_SERIAL_8250 is not set
+
+#
+# Non-8250 serial port support
+#
+# CONFIG_SERIAL_MAX3100 is not set
+# CONFIG_SERIAL_MAX310X is not set
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+# CONFIG_SERIAL_SCCNXP is not set
+# CONFIG_SERIAL_TIMBERDALE is not set
+# CONFIG_SERIAL_ALTERA_JTAGUART is not set
+# CONFIG_SERIAL_ALTERA_UART is not set
+# CONFIG_SERIAL_IFX6X60 is not set
+# CONFIG_SERIAL_XILINX_PS_UART is not set
+# CONFIG_SERIAL_ARC is not set
+CONFIG_SERIAL_SPRD_UART=y
+CONFIG_SERIAL_SPRD_UART_NR=4
+CONFIG_SERIAL_SPRD_UART_CONSOLE=y
+# CONFIG_TS0710_MUX_ENABLE is not set
+# CONFIG_MODEM_INTF is not set
+# CONFIG_MUX_SDIO_OPT1_HAL is not set
+# CONFIG_TTY_PRINTK is not set
+# CONFIG_HVC_DCC is not set
+# CONFIG_IPMI_HANDLER is not set
+# CONFIG_HW_RANDOM is not set
+# CONFIG_R3964 is not set
+# CONFIG_RAW_DRIVER is not set
+# CONFIG_TCG_TPM is not set
+# CONFIG_DCC_TTY is not set
+# CONFIG_MUX_SPI_HAL is not set
+CONFIG_I2C=y
+CONFIG_I2C_BOARDINFO=y
+CONFIG_I2C_COMPAT=y
+CONFIG_I2C_CHARDEV=y
+# CONFIG_I2C_MUX is not set
+CONFIG_I2C_HELPER_AUTO=y
+
+#
+# I2C Hardware Bus support
+#
+
+#
+# I2C system bus drivers (mostly embedded / system-on-chip)
+#
+# CONFIG_I2C_CBUS_GPIO is not set
+# CONFIG_I2C_DESIGNWARE_PLATFORM is not set
+# CONFIG_I2C_GPIO is not set
+# CONFIG_I2C_OCORES is not set
+# CONFIG_I2C_PCA_PLATFORM is not set
+# CONFIG_I2C_PXA_PCI is not set
+# CONFIG_I2C_SIMTEC is not set
+# CONFIG_I2C_XILINX is not set
+# CONFIG_I2C_RESUME_EARLY is not set
+# CONFIG_I2C_5_CLOCK_TREE_BUG is not set
+CONFIG_I2C_SPRD=y
+
+#
+# External I2C/SMBus adapter drivers
+#
+# CONFIG_I2C_SPRD_V1 is not set
+
+#
+# External I2C/SMBus adapter drivers
+#
+# CONFIG_I2C_DIOLAN_U2C is not set
+# CONFIG_I2C_PARPORT_LIGHT is not set
+# CONFIG_I2C_TAOS_EVM is not set
+# CONFIG_I2C_TINY_USB is not set
+
+#
+# Other I2C/SMBus bus drivers
+#
+CONFIG_I2C_SPRD_R6P0_DUTY=y
+# CONFIG_I2C_STUB is not set
+# CONFIG_I2C_DEBUG_CORE is not set
+# CONFIG_I2C_DEBUG_ALGO is not set
+# CONFIG_I2C_DEBUG_BUS is not set
+CONFIG_SPI=y
+# CONFIG_SPI_DEBUG is not set
+CONFIG_SPI_MASTER=y
+
+#
+# SPI Master Controller Drivers
+#
+# CONFIG_SPI_ALTERA is not set
+# CONFIG_SPI_BITBANG is not set
+# CONFIG_SPI_GPIO is not set
+# CONFIG_SPI_FSL_SPI is not set
+# CONFIG_SPI_OC_TINY is not set
+# CONFIG_SPI_PXA2XX_PCI is not set
+# CONFIG_SPI_SC18IS602 is not set
+# CONFIG_SPI_XCOMM is not set
+# CONFIG_SPI_XILINX is not set
+CONFIG_SPI_SCX35=y
+# CONFIG_SPI_DESIGNWARE is not set
+
+#
+# SPI Protocol Masters
+#
+# CONFIG_SPI_SPIDEV is not set
+# CONFIG_SPI_TLE62X0 is not set
+
+#
+# Qualcomm MSM SSBI bus support
+#
+# CONFIG_SSBI is not set
+# CONFIG_HSI is not set
+
+#
+# PPS support
+#
+# CONFIG_PPS is not set
+
+#
+# PPS generators support
+#
+
+#
+# PTP clock support
+#
+# CONFIG_PTP_1588_CLOCK is not set
+
+#
+# Enable PHYLIB and NETWORK_PHY_TIMESTAMPING to see the additional clocks.
+#
+# CONFIG_PTP_1588_CLOCK_PCH is not set
+CONFIG_ARCH_HAVE_CUSTOM_GPIO_H=y
+CONFIG_ARCH_REQUIRE_GPIOLIB=y
+CONFIG_GPIO_DEVRES=y
+CONFIG_GPIOLIB=y
+CONFIG_OF_GPIO=y
+# CONFIG_DEBUG_GPIO is not set
+CONFIG_GPIO_SYSFS=y
+
+#
+# Memory mapped GPIO drivers:
+#
+# CONFIG_GPIO_GENERIC_PLATFORM is not set
+# CONFIG_GPIO_EM is not set
+# CONFIG_GPIO_RCAR is not set
+# CONFIG_GPIO_SPRD is not set
+# CONFIG_GPIO_TS5500 is not set
+# CONFIG_GPIO_GRGPIO is not set
+
+#
+# I2C GPIO expanders:
+#
+# CONFIG_GPIO_MAX7300 is not set
+# CONFIG_GPIO_MAX732X is not set
+# CONFIG_GPIO_PCF857X is not set
+# CONFIG_GPIO_SX150X is not set
+# CONFIG_GPIO_ADP5588 is not set
+# CONFIG_GPIO_ADNP is not set
+
+#
+# PCI GPIO expanders:
+#
+
+#
+# SPI GPIO expanders:
+#
+# CONFIG_GPIO_MAX7301 is not set
+# CONFIG_GPIO_MCP23S08 is not set
+# CONFIG_GPIO_MC33880 is not set
+# CONFIG_GPIO_74X164 is not set
+
+#
+# AC97 GPIO expanders:
+#
+
+#
+# MODULbus GPIO expanders:
+#
+
+#
+# USB GPIO expanders:
+#
+# CONFIG_W1 is not set
+CONFIG_POWER_SUPPLY=y
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+# CONFIG_PDA_POWER is not set
+# CONFIG_GENERIC_ADC_BATTERY is not set
+# CONFIG_TEST_POWER is not set
+# CONFIG_BATTERY_DS2780 is not set
+# CONFIG_BATTERY_DS2781 is not set
+# CONFIG_BATTERY_DS2782 is not set
+# CONFIG_BATTERY_SBS is not set
+# CONFIG_BATTERY_BQ27x00 is not set
+# CONFIG_BATTERY_MAX17040 is not set
+# CONFIG_BATTERY_MAX17042 is not set
+# CONFIG_CHARGER_LP8727 is not set
+# CONFIG_CHARGER_GPIO is not set
+# CONFIG_CHARGER_MANAGER is not set
+# CONFIG_CHARGER_BQ2415X is not set
+# CONFIG_SPRD_2713_POWER is not set
+CONFIG_SPRD_EXT_IC_POWER=y
+# CONFIG_SPRD_CHARGER_SM5701 is not set
+# CONFIG_SPRD_CHARGER_FAN5405 is not set
+CONFIG_SPRD_CHARGER_FAN54015=y
+# CONFIG_SPRD_CHARGER_SPRD_2701 is not set
+# CONFIG_BATTERY_GOLDFISH is not set
+# CONFIG_POWER_RESET is not set
+# CONFIG_POWER_RESET_RESTART is not set
+# CONFIG_POWER_AVS is not set
+# CONFIG_HWMON is not set
+CONFIG_THERMAL=y
+CONFIG_THERMAL_OF=y
+CONFIG_THERMAL_DEFAULT_GOV_STEP_WISE=y
+# CONFIG_THERMAL_DEFAULT_GOV_FAIR_SHARE is not set
+# CONFIG_THERMAL_DEFAULT_GOV_USER_SPACE is not set
+# CONFIG_THERMAL_GOV_FAIR_SHARE is not set
+CONFIG_THERMAL_GOV_STEP_WISE=y
+# CONFIG_THERMAL_GOV_USER_SPACE is not set
+# CONFIG_CPU_THERMAL is not set
+# CONFIG_THERMAL_EMULATION is not set
+CONFIG_THERMAL_DDIE=y
+# CONFIG_THERMAL_SC2723S_PMIC is not set
+# CONFIG_THERMAL_SC2713 is not set
+CONFIG_SPRD_CPU_COOLING=y
+# CONFIG_THERMAL_BOARD_SENSOR is not set
+# CONFIG_THERMAL_ALONE_DDIE is not set
+# CONFIG_WATCHDOG is not set
+CONFIG_SSB_POSSIBLE=y
+
+#
+# Sonics Silicon Backplane
+#
+# CONFIG_SSB is not set
+CONFIG_BCMA_POSSIBLE=y
+
+#
+# Broadcom specific AMBA
+#
+# CONFIG_BCMA is not set
+
+#
+# Multifunction device drivers
+#
+# CONFIG_MFD_CORE is not set
+# CONFIG_MFD_SM5504 is not set
+# CONFIG_MFD_SM5701 is not set
+# CONFIG_MFD_SPRD_SM5701 is not set
+# CONFIG_MFD_USB_TYPEC is not set
+# CONFIG_MFD_RT8973 is not set
+# CONFIG_MFD_AS3711 is not set
+# CONFIG_MFD_RT5033 is not set
+# CONFIG_PMIC_ADP5520 is not set
+# CONFIG_MFD_LM3632 is not set
+# CONFIG_MFD_AAT2870_CORE is not set
+# CONFIG_MFD_CROS_EC is not set
+# CONFIG_MFD_ASIC3 is not set
+# CONFIG_PMIC_DA903X is not set
+# CONFIG_MFD_DA9052_SPI is not set
+# CONFIG_MFD_DA9052_I2C is not set
+# CONFIG_MFD_DA9055 is not set
+# CONFIG_MFD_MC13XXX_SPI is not set
+# CONFIG_MFD_MC13XXX_I2C is not set
+# CONFIG_HTC_EGPIO is not set
+# CONFIG_HTC_PASIC3 is not set
+# CONFIG_HTC_I2CPLD is not set
+# CONFIG_MFD_88PM800 is not set
+# CONFIG_MFD_88PM805 is not set
+# CONFIG_MFD_88PM860X is not set
+# CONFIG_MFD_MAX77686 is not set
+# CONFIG_MFD_MAX77693 is not set
+# CONFIG_MFD_MAX8907 is not set
+# CONFIG_MFD_MAX8925 is not set
+# CONFIG_MFD_MAX8997 is not set
+# CONFIG_MFD_MAX8998 is not set
+# CONFIG_EZX_PCAP is not set
+# CONFIG_MFD_VIPERBOARD is not set
+# CONFIG_MFD_RETU is not set
+# CONFIG_MFD_PCF50633 is not set
+# CONFIG_MFD_RC5T583 is not set
+# CONFIG_MFD_SEC_CORE is not set
+# CONFIG_MFD_SI476X_CORE is not set
+# CONFIG_MFD_SM501 is not set
+# CONFIG_MFD_SMSC is not set
+# CONFIG_ABX500_CORE is not set
+# CONFIG_MFD_STMPE is not set
+# CONFIG_MFD_SYSCON is not set
+# CONFIG_MFD_TI_AM335X_TSCADC is not set
+# CONFIG_MFD_LP8788 is not set
+# CONFIG_MFD_PALMAS is not set
+# CONFIG_TPS6105X is not set
+# CONFIG_TPS65010 is not set
+# CONFIG_TPS6507X is not set
+# CONFIG_MFD_TPS65090 is not set
+# CONFIG_MFD_TPS65217 is not set
+# CONFIG_MFD_TPS6586X is not set
+# CONFIG_MFD_TPS65910 is not set
+# CONFIG_MFD_TPS65912 is not set
+# CONFIG_MFD_TPS65912_I2C is not set
+# CONFIG_MFD_TPS65912_SPI is not set
+# CONFIG_MFD_TPS80031 is not set
+# CONFIG_TWL4030_CORE is not set
+# CONFIG_TWL6040_CORE is not set
+# CONFIG_MFD_WL1273_CORE is not set
+# CONFIG_MFD_LM3533 is not set
+# CONFIG_MFD_TC3589X is not set
+# CONFIG_MFD_TMIO is not set
+# CONFIG_MFD_T7L66XB is not set
+# CONFIG_MFD_TC6387XB is not set
+# CONFIG_MFD_TC6393XB is not set
+# CONFIG_MFD_ARIZONA_I2C is not set
+# CONFIG_MFD_ARIZONA_SPI is not set
+# CONFIG_MFD_WM8400 is not set
+# CONFIG_MFD_WM831X_I2C is not set
+# CONFIG_MFD_WM831X_SPI is not set
+# CONFIG_MFD_WM8350_I2C is not set
+# CONFIG_MFD_WM8994 is not set
+# CONFIG_VEXPRESS_CONFIG is not set
+# CONFIG_MFD_SMUIC is not set
+CONFIG_REGULATOR=y
+# CONFIG_REGULATOR_DEBUG is not set
+# CONFIG_REGULATOR_DUMMY is not set
+# CONFIG_REGULATOR_FIXED_VOLTAGE is not set
+# CONFIG_REGULATOR_VIRTUAL_CONSUMER is not set
+# CONFIG_REGULATOR_USERSPACE_CONSUMER is not set
+# CONFIG_REGULATOR_GPIO is not set
+# CONFIG_REGULATOR_AD5398 is not set
+# CONFIG_REGULATOR_FAN53555 is not set
+# CONFIG_REGULATOR_ISL6271A is not set
+# CONFIG_REGULATOR_MAX1586 is not set
+# CONFIG_REGULATOR_MAX8649 is not set
+# CONFIG_REGULATOR_MAX8660 is not set
+# CONFIG_REGULATOR_MAX8952 is not set
+# CONFIG_REGULATOR_MAX8973 is not set
+# CONFIG_REGULATOR_LP3971 is not set
+# CONFIG_REGULATOR_LP3972 is not set
+# CONFIG_REGULATOR_LP872X is not set
+# CONFIG_REGULATOR_LP8755 is not set
+# CONFIG_REGULATOR_TPS51632 is not set
+# CONFIG_REGULATOR_TPS62360 is not set
+# CONFIG_REGULATOR_TPS65023 is not set
+# CONFIG_REGULATOR_TPS6507X is not set
+# CONFIG_REGULATOR_TPS6524X is not set
+CONFIG_REGULATOR_SC2723=y
+CONFIG_REGULATOR_SPRD_MAP_V1="mach/chip_x35l/__sc2723_regulator_map.h"
+# CONFIG_REGULATOR_EXT_DCDC is not set
+CONFIG_MEDIA_SUPPORT=y
+
+#
+# Multimedia core support
+#
+# CONFIG_VIDEO_GSPN_SPRD is not set
+CONFIG_VIDEO_GSP_SPRD=y
+CONFIG_VIDEO_DCAM_SPRD=y
+CONFIG_CAMERA_FLASH_SGM3140=y
+# CONFIG_CAMERA_FLASH_PARALLEL_BG is not set
+# CONFIG_CAMERA_FLASH_GPIO_8132 is not set
+# CONFIG_CAMERA_FLASH_GPIO_CTRL is not set
+# CONFIG_CAMERA_FLASH_SPRD_GPIO is not set
+# CONFIG_CAMERA_FLASH_SM5701 is not set
+# CONFIG_CAMERA_FLASH_SPRD_SM5701 is not set
+# CONFIG_CAMERA_FLASH_COMMON is not set
+CONFIG_MEDIA_CAMERA_SUPPORT=y
+# CONFIG_MEDIA_ANALOG_TV_SUPPORT is not set
+# CONFIG_MEDIA_DIGITAL_TV_SUPPORT is not set
+# CONFIG_MEDIA_RADIO_SUPPORT is not set
+# CONFIG_MEDIA_RC_SUPPORT is not set
+# CONFIG_MEDIA_CONTROLLER is not set
+CONFIG_VIDEO_DEV=y
+CONFIG_VIDEO_V4L2=y
+# CONFIG_VIDEO_ADV_DEBUG is not set
+# CONFIG_VIDEO_FIXED_MINOR_RANGES is not set
+CONFIG_VIDEOBUF_GEN=y
+CONFIG_VIDEOBUF_VMALLOC=y
+# CONFIG_VIDEO_V4L2_INT_DEVICE is not set
+# CONFIG_TTPCI_EEPROM is not set
+
+#
+# Media drivers
+#
+# CONFIG_MEDIA_USB_SUPPORT is not set
+CONFIG_V4L_PLATFORM_DRIVERS=y
+# CONFIG_SOC_CAMERA is not set
+# CONFIG_V4L_MEM2MEM_DRIVERS is not set
+# CONFIG_V4L_TEST_DRIVERS is not set
+
+#
+# Supported MMC/SDIO adapters
+#
+# CONFIG_CYPRESS_FIRMWARE is not set
+
+#
+# Media ancillary drivers (tuners, sensors, i2c, frontends)
+#
+CONFIG_MEDIA_SUBDRV_AUTOSELECT=y
+
+#
+# Audio decoders, processors and mixers
+#
+
+#
+# RDS decoders
+#
+
+#
+# Video decoders
+#
+
+#
+# Video and audio decoders
+#
+
+#
+# Video encoders
+#
+
+#
+# Camera sensor devices
+#
+
+#
+# Flash devices
+#
+
+#
+# Video improvement chips
+#
+
+#
+# Miscelaneous helper chips
+#
+
+#
+# Sensors used on soc_camera driver
+#
+
+#
+# Tools to develop new frontends
+#
+# CONFIG_DVB_DUMMY_FE is not set
+
+#
+# SPREADTRUM SC2331 FM driver
+#
+CONFIG_RADIO_SPRD2331=m
+
+#
+# Graphics support
+#
+# CONFIG_DRM is not set
+CONFIG_SPRD_IOMMU=y
+# CONFIG_VGASTATE is not set
+# CONFIG_VIDEO_OUTPUT_CONTROL is not set
+CONFIG_FB=y
+# CONFIG_FIRMWARE_EDID is not set
+# CONFIG_FB_DDC is not set
+# CONFIG_FB_BOOT_VESA_SUPPORT is not set
+CONFIG_FB_CFB_FILLRECT=y
+CONFIG_FB_CFB_COPYAREA=y
+CONFIG_FB_CFB_IMAGEBLIT=y
+# CONFIG_FB_CFB_REV_PIXELS_IN_BYTE is not set
+# CONFIG_FB_SYS_FILLRECT is not set
+# CONFIG_FB_SYS_COPYAREA is not set
+# CONFIG_FB_SYS_IMAGEBLIT is not set
+# CONFIG_FB_FOREIGN_ENDIAN is not set
+# CONFIG_FB_SYS_FOPS is not set
+# CONFIG_FB_SVGALIB is not set
+# CONFIG_FB_MACMODES is not set
+# CONFIG_FB_BACKLIGHT is not set
+# CONFIG_FB_MODE_HELPERS is not set
+# CONFIG_FB_TILEBLITTING is not set
+
+#
+# Frame buffer hardware drivers
+#
+# CONFIG_FB_ARMHDLCD is not set
+# CONFIG_FB_S1D13XXX is not set
+# CONFIG_FB_SMSCUFX is not set
+# CONFIG_FB_UDL is not set
+# CONFIG_FB_GOLDFISH is not set
+# CONFIG_FB_VIRTUAL is not set
+# CONFIG_FB_METRONOME is not set
+# CONFIG_FB_BROADSHEET is not set
+# CONFIG_FB_AUO_K190X is not set
+# CONFIG_FB_SIMPLE is not set
+CONFIG_FB_SCX35L=y
+CONFIG_SPRD_FB_SIZE=8
+# CONFIG_BMP_24BPP is not set
+# CONFIG_FB_LCD_HX8369B_MIPI_COREPRIMELITE is not set
+# CONFIG_FB_LCD_SD7798D_MIPI_COREPRIMELITE is not set
+# CONFIG_FB_LCD_HX8369B_MIPI_SHARKLS_Z3LTE is not set
+# CONFIG_FB_LCD_HX8369B_MIPI_SHARKLC_Z2LTE is not set
+# CONFIG_FB_LCD_SD7798D_MIPI_SHARKLS_Z3LTE is not set
+# CONFIG_FB_LCD_HX8369B_MIPI_SHARKL_J1POPLTE is not set
+# CONFIG_FB_LCD_HX8379C_MIPI_SHARKL_J1POPLTE is not set
+# CONFIG_FB_LCD_S6E8AA5X01_MIPI is not set
+# CONFIG_FB_LCD_HX8369B_MIPI_COREPRIMELITE_MARLIN is not set
+# CONFIG_FB_LCD_S6D77ALA_MIPI_PIKEBJ1MINI is not set
+# CONFIG_FB_LCD_SC7798D_MIPI_PIKEBJ1MINI is not set
+# CONFIG_FB_LCD_NT35516_MIPI is not set
+# CONFIG_FB_LCD_NT35596H_MIPI is not set
+# CONFIG_FB_LCD_NT35596H_RDC_MIPI is not set
+# CONFIG_FB_LCD_FL10802_MIPI is not set
+# CONFIG_FB_LCD_JD9161_MIPI is not set
+# CONFIG_FB_LCD_ILI6150_LVDS is not set
+# CONFIG_FB_LCD_RM68180_MIPI is not set
+# CONFIG_FB_LCD_HX8394D_MIPI is not set
+# CONFIG_FB_LCD_OLED_BACKLIGHT is not set
+CONFIG_FB_LCD_DUMMY=y
+# CONFIG_FB_LCD_NT35516_MCU is not set
+# CONFIG_FB_LCD_ILI9806E_MIPI is not set
+#CONFIG_FB_LCD_ILI9806E_2_MIPI=y
+# CONFIG_FB_LCD_S6D7AA0X62_MIPI is not set
+#CONFIG_FB_LCD_OTM8019A_MIPI=y
+#CONFIG_FB_LCD_HX8394A_MIPI=y
+#CONFIG_FB_LCD_ILI9881C_MIPI=y
+CONFIG_FB_LCD_ILI9881C_1_MIPI=y
+# CONFIG_FB_LCD_AMS549HQ01_MIPI is not set
+CONFIG_FB_LCD_RESERVE_MEM=y
+CONFIG_FB_LCD_OVERLAY_SUPPORT=y
+CONFIG_FB_VSYNC_SUPPORT=y
+# CONFIG_FB_DYNAMIC_CLK_SUPPORT is not set
+CONFIG_FB_DYNAMIC_FREQ_SCALING=y
+# CONFIG_FB_USE_MEGACORES_MIPI_DPHY is not set
+# CONFIG_FB_LOW_RES_SIMU is not set
+CONFIG_FB_TRIPLE_FRAMEBUFFER=y
+# CONFIG_EXYNOS_VIDEO is not set
+CONFIG_BACKLIGHT_LCD_SUPPORT=y
+CONFIG_LCD_CLASS_DEVICE=y
+# CONFIG_LCD_L4F00242T03 is not set
+# CONFIG_LCD_LMS283GF05 is not set
+# CONFIG_LCD_LTV350QV is not set
+# CONFIG_LCD_ILI922X is not set
+# CONFIG_LCD_ILI9320 is not set
+# CONFIG_LCD_TDO24M is not set
+# CONFIG_LCD_VGG2432A4 is not set
+# CONFIG_LCD_PLATFORM is not set
+# CONFIG_LCD_S6E63M0 is not set
+# CONFIG_LCD_LD9040 is not set
+# CONFIG_LCD_AMS369FG06 is not set
+# CONFIG_LCD_LMS501KF03 is not set
+# CONFIG_LCD_HX8357 is not set
+#CONFIG_BACKLIGHT_SPRD_PWM=y
+# CONFIG_BACKLIGHT_SPRD is not set
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+# CONFIG_BACKLIGHT_GENERIC is not set
+# CONFIG_BACKLIGHT_ADP8860 is not set
+# CONFIG_BACKLIGHT_ADP8870 is not set
+# CONFIG_BACKLIGHT_LM3630 is not set
+# CONFIG_BACKLIGHT_LM3632 is not set
+# CONFIG_BACKLIGHT_LM3639 is not set
+# CONFIG_BACKLIGHT_LP855X is not set
+# CONFIG_BACKLIGHT_KTD253B is not set
+# CONFIG_BACKLIGHT_KTD2801 is not set
+# CONFIG_BACKLIGHT_RT4502 is not set
+CONFIG_BACKLIGHT_LCD_PANEL_CABC=y
+# CONFIG_ADF is not set
+# CONFIG_LOGO is not set
+# CONFIG_FB_SSD1307 is not set
+CONFIG_SOUND=y
+# CONFIG_SOUND_OSS_CORE is not set
+CONFIG_SND=y
+CONFIG_SND_TIMER=y
+CONFIG_SND_PCM=y
+CONFIG_SND_HWDEP=y
+CONFIG_SND_RAWMIDI=y
+CONFIG_SND_COMPRESS_OFFLOAD=y
+CONFIG_SND_JACK=y
+# CONFIG_SND_SEQUENCER is not set
+# CONFIG_SND_MIXER_OSS is not set
+# CONFIG_SND_PCM_OSS is not set
+# CONFIG_SND_HRTIMER is not set
+# CONFIG_SND_DYNAMIC_MINORS is not set
+CONFIG_SND_SUPPORT_OLD_API=y
+CONFIG_SND_VERBOSE_PROCFS=y
+# CONFIG_SND_VERBOSE_PRINTK is not set
+# CONFIG_SND_DEBUG is not set
+# CONFIG_SND_RAWMIDI_SEQ is not set
+# CONFIG_SND_OPL3_LIB_SEQ is not set
+# CONFIG_SND_OPL4_LIB_SEQ is not set
+# CONFIG_SND_SBAWE_SEQ is not set
+# CONFIG_SND_EMU10K1_SEQ is not set
+CONFIG_SND_DRIVERS=y
+# CONFIG_SND_DUMMY is not set
+# CONFIG_SND_ALOOP is not set
+# CONFIG_SND_MTPAV is not set
+# CONFIG_SND_SERIAL_U16550 is not set
+# CONFIG_SND_MPU401 is not set
+CONFIG_SND_SPRD_SAUDIO=y
+CONFIG_SND_ARM=y
+CONFIG_SND_SPI=y
+CONFIG_SND_USB=y
+CONFIG_SND_USB_AUDIO=y
+# CONFIG_SND_USB_UA101 is not set
+# CONFIG_SND_USB_CAIAQ is not set
+# CONFIG_SND_USB_6FIRE is not set
+CONFIG_SND_SOC=y
+CONFIG_SND_SOC_PM_DOWN_TIME=5000
+# CONFIG_SND_ATMEL_SOC is not set
+# CONFIG_SND_DESIGNWARE_I2S is not set
+
+#
+# SoC Audio for the SPREADTRUM
+#
+CONFIG_SND_SOC_SPRD=y
+# CONFIG_SND_SOC_SPRD_VBC_R1P0_SPRD_CODEC_V1 is not set
+# CONFIG_SND_SOC_SPRD_VBC_R2P0_SPRD_CODEC_V3 is not set
+CONFIG_SND_SOC_SPRD_VBC_R2P0_SPRD_CODEC_V4=y
+# CONFIG_SND_SOC_SPRD_MACHINE_TI is not set
+# CONFIG_SND_SOC_SPRD_MACHINE_4AUDIENCE is not set
+# CONFIG_SND_SOC_SPRD_MACHINE_4REALTEK is not set
+CONFIG_SND_SOC_SPRD_I2S_V0_NULL_CODEC=y
+CONFIG_SND_SOC_SPRD_AUDIO_DEBUG=y
+# CONFIG_SND_SOC_SPRD_AUDIO_SIPC is not set
+
+#
+# SPRD AUDIO DMA
+#
+CONFIG_SND_SOC_SPRD_AUDIO_DMA=y
+CONFIG_SND_SOC_SPRD_AUDIO_BUFFER_USE_IRAM=y
+# CONFIG_SND_SOC_SPRD_IRAM_BACKUP is not set
+
+#
+# VBC
+#
+CONFIG_SND_SOC_SPRD_VBC_R2P0=y
+CONFIG_SND_SOC_SPRD_VBC_SRC_OPEN=y
+CONFIG_SND_SOC_VBC_SRC_SAMPLE_RATE=32000
+# CONFIG_SND_SOC_SPRD_VBC_LR_INVERT is not set
+# CONFIG_SND_SOC_VBC_SUPPORT_DYNAMIC_EQ is not set
+CONFIG_SND_SOC_SPRD_VAUDIO=y
+CONFIG_SND_SOC_SPRD_I2S=y
+
+#
+# SPRD Codec
+#
+# CONFIG_SND_SOC_SPRD_USE_EAR_JACK_TYPE13 is not set
+CONFIG_SND_SOC_SPRD_CODEC_V4=y
+CONFIG_SND_SOC_SPRD_AUDIO_USE_INTER_HP_PA_V4=y
+# CONFIG_SND_SOC_SPRD_CODEC_EAR_WITH_IN_SPK is not set
+CONFIG_SND_SOC_SPRD_CODEC_NO_HP_POP=y
+CONFIG_SND_SOC_SPRD_HP_POP_DELAY_TIME=0
+CONFIG_SND_SOC_NULL_CODEC=y
+CONFIG_SND_SOC_I2C_AND_SPI=y
+# CONFIG_SND_SOC_ALL_CODECS is not set
+
+#
+# Audience earSmart Audio chip
+#
+# CONFIG_SND_SOC_ES705_ESCORE is not set
+# CONFIG_SND_SOC_ES804_ESCORE is not set
+# CONFIG_SND_SOC_ES902_ESCORE is not set
+# CONFIG_SND_SOC_ES704_ESCORE is not set
+# CONFIG_SND_SOC_ES755 is not set
+# CONFIG_SND_SOC_ES705_EXTCLK_OVER_GPIO is not set
+# CONFIG_SND_SOC_ES854 is not set
+# CONFIG_SND_SOC_N100 is not set
+# CONFIG_SND_SOC_ES857 is not set
+# CONFIG_OSP_SENSORHUB is not set
+# CONFIG_SND_SOC_ES_CDEV is not set
+CONFIG_SND_SOC_ES_WAKEUP_GPIO=y
+# CONFIG_SND_SOC_ES_GPIO_A is not set
+# CONFIG_SND_SIMPLE_CARD is not set
+# CONFIG_SOUND_PRIME is not set
+
+#
+# HID support
+#
+CONFIG_HID=y
+# CONFIG_HID_BATTERY_STRENGTH is not set
+# CONFIG_HIDRAW is not set
+CONFIG_UHID=y
+CONFIG_HID_GENERIC=y
+
+#
+# Special HID drivers
+#
+# CONFIG_HID_A4TECH is not set
+# CONFIG_HID_ACRUX is not set
+CONFIG_HID_APPLE=y
+# CONFIG_HID_APPLEIR is not set
+# CONFIG_HID_AUREAL is not set
+# CONFIG_HID_BELKIN is not set
+# CONFIG_HID_CHERRY is not set
+# CONFIG_HID_CHICONY is not set
+# CONFIG_HID_PRODIKEYS is not set
+# CONFIG_HID_CYPRESS is not set
+# CONFIG_HID_DRAGONRISE is not set
+# CONFIG_HID_EMS_FF is not set
+# CONFIG_HID_ELECOM is not set
+# CONFIG_HID_EZKEY is not set
+# CONFIG_HID_HOLTEK is not set
+# CONFIG_HID_KEYTOUCH is not set
+# CONFIG_HID_KYE is not set
+# CONFIG_HID_UCLOGIC is not set
+# CONFIG_HID_WALTOP is not set
+# CONFIG_HID_GYRATION is not set
+# CONFIG_HID_ICADE is not set
+# CONFIG_HID_TWINHAN is not set
+# CONFIG_HID_KENSINGTON is not set
+# CONFIG_HID_LCPOWER is not set
+# CONFIG_HID_LENOVO_TPKBD is not set
+# CONFIG_HID_LOGITECH is not set
+CONFIG_HID_MAGICMOUSE=y
+# CONFIG_HID_MICROSOFT is not set
+# CONFIG_HID_MONTEREY is not set
+# CONFIG_HID_MULTITOUCH is not set
+# CONFIG_HID_NTRIG is not set
+# CONFIG_HID_ORTEK is not set
+# CONFIG_HID_PANTHERLORD is not set
+# CONFIG_HID_PETALYNX is not set
+# CONFIG_HID_PICOLCD is not set
+# CONFIG_HID_PRIMAX is not set
+# CONFIG_HID_PS3REMOTE is not set
+# CONFIG_HID_ROCCAT is not set
+# CONFIG_HID_SAITEK is not set
+# CONFIG_HID_SAMSUNG is not set
+# CONFIG_HID_SONY is not set
+# CONFIG_HID_SPEEDLINK is not set
+# CONFIG_HID_STEELSERIES is not set
+# CONFIG_HID_SUNPLUS is not set
+# CONFIG_HID_GREENASIA is not set
+# CONFIG_HID_SMARTJOYPLUS is not set
+# CONFIG_HID_TIVO is not set
+# CONFIG_HID_TOPSEED is not set
+# CONFIG_HID_THINGM is not set
+# CONFIG_HID_THRUSTMASTER is not set
+# CONFIG_HID_WACOM is not set
+# CONFIG_HID_WIIMOTE is not set
+# CONFIG_HID_ZEROPLUS is not set
+# CONFIG_HID_ZYDACRON is not set
+# CONFIG_HID_SENSOR_HUB is not set
+
+#
+# USB HID support
+#
+CONFIG_USB_HID=y
+# CONFIG_HID_PID is not set
+# CONFIG_USB_HIDDEV is not set
+
+#
+# I2C HID support
+#
+# CONFIG_I2C_HID is not set
+CONFIG_USB_SUPPORT=y
+CONFIG_USB_COMMON=y
+CONFIG_USB_ARCH_HAS_HCD=y
+CONFIG_USB=y
+# CONFIG_USB_DEBUG is not set
+CONFIG_USB_ANNOUNCE_NEW_DEVICES=y
+
+#
+# Miscellaneous USB options
+#
+CONFIG_USB_DEFAULT_PERSIST=y
+# CONFIG_USB_DYNAMIC_MINORS is not set
+CONFIG_USB_OTG=y
+# CONFIG_USB_OTG_WHITELIST is not set
+# CONFIG_USB_OTG_BLACKLIST_HUB is not set
+# CONFIG_USB_MON is not set
+# CONFIG_USB_WUSB_CBAF is not set
+
+#
+# USB Host Controller Drivers
+#
+# CONFIG_USB_C67X00_HCD is not set
+# CONFIG_USB_XHCI_HCD is not set
+# CONFIG_USB_EHCI_HCD is not set
+# CONFIG_USB_OXU210HP_HCD is not set
+# CONFIG_USB_ISP116X_HCD is not set
+# CONFIG_USB_ISP1760_HCD is not set
+# CONFIG_USB_ISP1362_HCD is not set
+# CONFIG_USB_OHCI_HCD is not set
+# CONFIG_USB_SL811_HCD is not set
+# CONFIG_USB_R8A66597_HCD is not set
+# CONFIG_USB_MUSB_HDRC is not set
+# CONFIG_USB_RENESAS_USBHS is not set
+
+#
+# USB Device Class drivers
+#
+# CONFIG_USB_ACM is not set
+# CONFIG_USB_PRINTER is not set
+# CONFIG_USB_WDM is not set
+# CONFIG_USB_TMC is not set
+
+#
+# NOTE: USB_STORAGE depends on SCSI but BLK_DEV_SD may
+#
+
+#
+# also be needed; see USB_STORAGE Help for more info
+#
+CONFIG_USB_STORAGE=y
+# CONFIG_USB_STORAGE_DEBUG is not set
+# CONFIG_USB_STORAGE_REALTEK is not set
+# CONFIG_USB_STORAGE_DATAFAB is not set
+# CONFIG_USB_STORAGE_FREECOM is not set
+# CONFIG_USB_STORAGE_ISD200 is not set
+# CONFIG_USB_STORAGE_USBAT is not set
+# CONFIG_USB_STORAGE_SDDR09 is not set
+# CONFIG_USB_STORAGE_SDDR55 is not set
+# CONFIG_USB_STORAGE_JUMPSHOT is not set
+# CONFIG_USB_STORAGE_ALAUDA is not set
+# CONFIG_USB_STORAGE_ONETOUCH is not set
+# CONFIG_USB_STORAGE_KARMA is not set
+# CONFIG_USB_STORAGE_CYPRESS_ATACB is not set
+# CONFIG_USB_STORAGE_ENE_UB6250 is not set
+
+#
+# USB Imaging devices
+#
+# CONFIG_USB_MDC800 is not set
+# CONFIG_USB_MICROTEK is not set
+# CONFIG_USB_DWC3 is not set
+# CONFIG_USB_CHIPIDEA is not set
+
+#
+# USB port drivers
+#
+# CONFIG_USB_SERIAL is not set
+
+#
+# USB Miscellaneous drivers
+#
+# CONFIG_USB_EMI62 is not set
+# CONFIG_USB_EMI26 is not set
+# CONFIG_USB_ADUTUX is not set
+# CONFIG_USB_SEVSEG is not set
+# CONFIG_USB_RIO500 is not set
+# CONFIG_USB_LEGOTOWER is not set
+# CONFIG_USB_LCD is not set
+# CONFIG_USB_LED is not set
+# CONFIG_USB_CYPRESS_CY7C63 is not set
+# CONFIG_USB_CYTHERM is not set
+# CONFIG_USB_IDMOUSE is not set
+# CONFIG_USB_FTDI_ELAN is not set
+# CONFIG_USB_APPLEDISPLAY is not set
+# CONFIG_USB_LD is not set
+# CONFIG_USB_TRANCEVIBRATOR is not set
+# CONFIG_USB_IOWARRIOR is not set
+# CONFIG_USB_TEST is not set
+# CONFIG_USB_ISIGHTFW is not set
+# CONFIG_USB_YUREX is not set
+# CONFIG_USB_EZUSB_FX2 is not set
+# CONFIG_USB_HSIC_USB3503 is not set
+# CONFIG_USB_PHY is not set
+CONFIG_USB_OTG_WAKELOCK=y
+CONFIG_USB_GADGET=y
+# CONFIG_USB_GADGET_DEBUG is not set
+# CONFIG_USB_GADGET_DEBUG_FILES is not set
+# CONFIG_USB_GADGET_DEBUG_FS is not set
+CONFIG_USB_GADGET_VBUS_DRAW=2
+CONFIG_USB_GADGET_STORAGE_NUM_BUFFERS=2
+
+#
+# USB Peripheral Controller
+#
+# CONFIG_USB_FUSB300 is not set
+# CONFIG_USB_R8A66597 is not set
+# CONFIG_USB_PXA27X is not set
+# CONFIG_USB_MV_UDC is not set
+# CONFIG_USB_MV_U3D is not set
+# CONFIG_USB_M66592 is not set
+# CONFIG_USB_NET2272 is not set
+# CONFIG_USB_DUMMY_HCD is not set
+CONFIG_USB_GADGET_SPRD_DWC=y
+CONFIG_USB_SPRD_DWC=y
+CONFIG_USB_LIBCOMPOSITE=y
+CONFIG_USB_F_ACM=y
+CONFIG_USB_U_SERIAL=y
+# CONFIG_USB_ZERO is not set
+# CONFIG_USB_AUDIO is not set
+# CONFIG_USB_ETH is not set
+# CONFIG_USB_G_NCM is not set
+# CONFIG_USB_GADGETFS is not set
+# CONFIG_USB_FUNCTIONFS is not set
+# CONFIG_USB_MASS_STORAGE is not set
+# CONFIG_USB_G_SERIAL is not set
+# CONFIG_USB_MIDI_GADGET is not set
+# CONFIG_USB_G_PRINTER is not set
+CONFIG_USB_G_ANDROID=y
+# CONFIG_USB_ANDROID_RNDIS_DWORD_ALIGNED is not set
+# CONFIG_USB_CDC_COMPOSITE is not set
+# CONFIG_USB_G_ACM_MS is not set
+# CONFIG_USB_G_MULTI is not set
+# CONFIG_USB_G_HID is not set
+# CONFIG_USB_G_DBGP is not set
+# CONFIG_USB_G_WEBCAM is not set
+CONFIG_USB_CORE_IP_293A=y
+# CONFIG_SPRD_USB_DEVICE_ONLY is not set
+# CONFIG_SHARK_PAD_HW_V102 is not set
+# CONFIG_USB_INTERRUPT_BY_MUIC is not set
+CONFIG_MMC=y
+# CONFIG_MMC_DEBUG is not set
+CONFIG_MMC_UNSAFE_RESUME=y
+# CONFIG_MMC_CLKGATE is not set
+# CONFIG_MMC_EMBEDDED_SDIO is not set
+# CONFIG_MMC_PARANOID_SD_INIT is not set
+
+#
+# MMC/SD/SDIO Card Drivers
+#
+CONFIG_MMC_BLOCK=y
+CONFIG_MMC_BLOCK_MINORS=32
+CONFIG_MMC_BLOCK_BOUNCE=y
+CONFIG_MMC_BLOCK_DEFERRED_RESUME=y
+# CONFIG_SDIO_UART is not set
+# CONFIG_SDIO_CHANNEL is not set
+CONFIG_SDIO_CARD=y
+CONFIG_MMC_TEST=m
+
+#
+# MMC/SD/SDIO Host Controller Drivers
+#
+# CONFIG_MMC_SDHCI is not set
+# CONFIG_MMC_SDHCI_PXAV3 is not set
+# CONFIG_MMC_SDHCI_PXAV2 is not set
+CONFIG_MMC_SDHOST=y
+# CONFIG_MMC_SDHOST_NEW is not set
+# CONFIG_MMC_DW is not set
+# CONFIG_MMC_VUB300 is not set
+# CONFIG_MMC_USHC is not set
+# CONFIG_SC_FPGA_DEBUG_MMC is not set
+# CONFIG_MEMSTICK is not set
+CONFIG_NEW_LEDS=y
+CONFIG_LEDS_CLASS=y
+
+#
+# LED drivers
+#
+# CONFIG_FLASHLIGHT is not set
+# CONFIG_LEDS_LM3530 is not set
+# CONFIG_LEDS_LM3642 is not set
+# CONFIG_LEDS_LM3648 is not set
+# CONFIG_LEDS_PCA9532 is not set
+# CONFIG_LEDS_GPIO is not set
+# CONFIG_LEDS_LP3944 is not set
+# CONFIG_LEDS_LP5521 is not set
+# CONFIG_LEDS_LP5523 is not set
+# CONFIG_LEDS_LP5562 is not set
+# CONFIG_LEDS_PCA955X is not set
+# CONFIG_LEDS_PCA9633 is not set
+# CONFIG_LEDS_DAC124S085 is not set
+# CONFIG_LEDS_REGULATOR is not set
+# CONFIG_LEDS_BD2802 is not set
+# CONFIG_LEDS_LT3593 is not set
+# CONFIG_LEDS_RENESAS_TPU is not set
+# CONFIG_LEDS_TCA6507 is not set
+# CONFIG_LEDS_LM355x is not set
+# CONFIG_LEDS_OT200 is not set
+# CONFIG_LEDS_BLINKM is not set
+# CONFIG_LEDS_SC8810_KB is not set
+CONFIG_SPRD_KPLED_2723=y
+CONFIG_LEDS_SPRD_BLTC_RGB=y
+# CONFIG_LEDS_SPRD_BLTC_RGB_2731 is not set
+# CONFIG_LEDS_SPRD_RGB is not set
+
+#
+# LED Triggers
+#
+# CONFIG_LEDS_TRIGGERS is not set
+CONFIG_SWITCH=y
+CONFIG_SWITCH_GPIO=y
+# CONFIG_ACCESSIBILITY is not set
+# CONFIG_EDAC is not set
+CONFIG_RTC_LIB=y
+CONFIG_RTC_CLASS=y
+CONFIG_RTC_HCTOSYS=y
+CONFIG_RTC_SYSTOHC=y
+CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
+# CONFIG_RTC_DEBUG is not set
+
+#
+# RTC interfaces
+#
+CONFIG_RTC_INTF_SYSFS=y
+CONFIG_RTC_INTF_PROC=y
+CONFIG_RTC_INTF_DEV=y
+# CONFIG_RTC_INTF_DEV_UIE_EMUL is not set
+# CONFIG_RTC_DRV_TEST is not set
+
+#
+# I2C RTC drivers
+#
+# CONFIG_RTC_DRV_DS1307 is not set
+# CONFIG_RTC_DRV_DS1374 is not set
+# CONFIG_RTC_DRV_DS1672 is not set
+# CONFIG_RTC_DRV_DS3232 is not set
+# CONFIG_RTC_DRV_MAX6900 is not set
+# CONFIG_RTC_DRV_RS5C372 is not set
+# CONFIG_RTC_DRV_ISL1208 is not set
+# CONFIG_RTC_DRV_ISL12022 is not set
+# CONFIG_RTC_DRV_X1205 is not set
+# CONFIG_RTC_DRV_PCF8523 is not set
+# CONFIG_RTC_DRV_PCF8563 is not set
+# CONFIG_RTC_DRV_PCF8583 is not set
+# CONFIG_RTC_DRV_M41T80 is not set
+# CONFIG_RTC_DRV_BQ32K is not set
+# CONFIG_RTC_DRV_S35390A is not set
+# CONFIG_RTC_DRV_FM3130 is not set
+# CONFIG_RTC_DRV_RX8581 is not set
+# CONFIG_RTC_DRV_RX8025 is not set
+# CONFIG_RTC_DRV_EM3027 is not set
+# CONFIG_RTC_DRV_RV3029C2 is not set
+
+#
+# SPI RTC drivers
+#
+# CONFIG_RTC_DRV_M41T93 is not set
+# CONFIG_RTC_DRV_M41T94 is not set
+# CONFIG_RTC_DRV_DS1305 is not set
+# CONFIG_RTC_DRV_DS1390 is not set
+# CONFIG_RTC_DRV_MAX6902 is not set
+# CONFIG_RTC_DRV_R9701 is not set
+# CONFIG_RTC_DRV_RS5C348 is not set
+# CONFIG_RTC_DRV_DS3234 is not set
+# CONFIG_RTC_DRV_PCF2123 is not set
+# CONFIG_RTC_DRV_RX4581 is not set
+
+#
+# Platform RTC drivers
+#
+# CONFIG_RTC_DRV_CMOS is not set
+# CONFIG_RTC_DRV_DS1286 is not set
+# CONFIG_RTC_DRV_DS1511 is not set
+# CONFIG_RTC_DRV_DS1553 is not set
+# CONFIG_RTC_DRV_DS1742 is not set
+# CONFIG_RTC_DRV_STK17TA8 is not set
+# CONFIG_RTC_DRV_M48T86 is not set
+# CONFIG_RTC_DRV_M48T35 is not set
+# CONFIG_RTC_DRV_M48T59 is not set
+# CONFIG_RTC_DRV_MSM6242 is not set
+# CONFIG_RTC_DRV_BQ4802 is not set
+# CONFIG_RTC_DRV_RP5C01 is not set
+# CONFIG_RTC_DRV_V3020 is not set
+# CONFIG_RTC_DRV_DS2404 is not set
+
+#
+# on-CPU RTC drivers
+#
+# CONFIG_RTC_DRV_SNVS is not set
+
+#
+# HID Sensor RTC drivers
+#
+# CONFIG_RTC_DRV_HID_SENSOR_TIME is not set
+CONFIG_RTC_DRV_SPRD=y
+CONFIG_RTC_START_YEAR=2012
+# CONFIG_DMADEVICES is not set
+# CONFIG_AUXDISPLAY is not set
+# CONFIG_UIO is not set
+# CONFIG_VIRT_DRIVERS is not set
+
+#
+# Virtio drivers
+#
+# CONFIG_VIRTIO_MMIO is not set
+
+#
+# Microsoft Hyper-V guest support
+#
+CONFIG_STAGING=y
+# CONFIG_USBIP_CORE is not set
+# CONFIG_PRISM2_USB is not set
+# CONFIG_ECHO is not set
+# CONFIG_COMEDI is not set
+# CONFIG_ASUS_OLED is not set
+# CONFIG_RTLLIB is not set
+# CONFIG_R8712U is not set
+# CONFIG_RTS5139 is not set
+# CONFIG_TRANZPORT is not set
+# CONFIG_LINE6_USB is not set
+# CONFIG_VT6656 is not set
+
+#
+# IIO staging drivers
+#
+
+#
+# Accelerometers
+#
+# CONFIG_ADIS16201 is not set
+# CONFIG_ADIS16203 is not set
+# CONFIG_ADIS16204 is not set
+# CONFIG_ADIS16209 is not set
+# CONFIG_ADIS16220 is not set
+# CONFIG_ADIS16240 is not set
+# CONFIG_LIS3L02DQ is not set
+# CONFIG_SCA3000 is not set
+
+#
+# Analog to digital converters
+#
+# CONFIG_AD7291 is not set
+# CONFIG_AD7606 is not set
+# CONFIG_AD799X is not set
+# CONFIG_AD7780 is not set
+# CONFIG_AD7816 is not set
+# CONFIG_AD7192 is not set
+# CONFIG_AD7280 is not set
+
+#
+# Analog digital bi-direction converters
+#
+# CONFIG_ADT7316 is not set
+
+#
+# Capacitance to digital converters
+#
+# CONFIG_AD7150 is not set
+# CONFIG_AD7152 is not set
+# CONFIG_AD7746 is not set
+
+#
+# Direct Digital Synthesis
+#
+# CONFIG_AD5930 is not set
+# CONFIG_AD9832 is not set
+# CONFIG_AD9834 is not set
+# CONFIG_AD9850 is not set
+# CONFIG_AD9852 is not set
+# CONFIG_AD9910 is not set
+# CONFIG_AD9951 is not set
+
+#
+# Digital gyroscope sensors
+#
+# CONFIG_ADIS16060 is not set
+# CONFIG_ADIS16130 is not set
+# CONFIG_ADIS16260 is not set
+
+#
+# Network Analyzer, Impedance Converters
+#
+# CONFIG_AD5933 is not set
+
+#
+# Light sensors
+#
+# CONFIG_SENSORS_ISL29018 is not set
+# CONFIG_SENSORS_ISL29028 is not set
+# CONFIG_TSL2583 is not set
+# CONFIG_TSL2x7x is not set
+
+#
+# Magnetometer sensors
+#
+# CONFIG_SENSORS_HMC5843 is not set
+
+#
+# Active energy metering IC
+#
+# CONFIG_ADE7753 is not set
+# CONFIG_ADE7754 is not set
+# CONFIG_ADE7758 is not set
+# CONFIG_ADE7759 is not set
+# CONFIG_ADE7854 is not set
+
+#
+# Resolver to digital converters
+#
+# CONFIG_AD2S90 is not set
+# CONFIG_AD2S1200 is not set
+# CONFIG_AD2S1210 is not set
+
+#
+# Triggers - standalone
+#
+# CONFIG_IIO_PERIODIC_RTC_TRIGGER is not set
+# CONFIG_IIO_GPIO_TRIGGER is not set
+# CONFIG_IIO_SYSFS_TRIGGER is not set
+# CONFIG_IIO_SIMPLE_DUMMY is not set
+# CONFIG_USB_ENESTORAGE is not set
+# CONFIG_BCM_WIMAX is not set
+# CONFIG_FT1000 is not set
+
+#
+# Speakup console speech
+#
+# CONFIG_TOUCHSCREEN_CLEARPAD_TM1217 is not set
+# CONFIG_TOUCHSCREEN_SYNAPTICS_I2C_RMI4 is not set
+# CONFIG_STAGING_MEDIA is not set
+
+#
+# Android
+#
+CONFIG_ANDROID=y
+CONFIG_ASHMEM=y
+CONFIG_ANDROID_TIMED_OUTPUT=y
+CONFIG_ANDROID_TIMED_GPIO=y
+CONFIG_ANDROID_LOW_MEMORY_KILLER=y
+CONFIG_ANDROID_LOW_MEMORY_KILLER_AUTODETECT_OOM_ADJ_VALUES=y
+CONFIG_OOM_NOTIFIER=y
+CONFIG_SEC_DEBUG_LMK_MEMINFO=y
+CONFIG_ANDROID_INTF_ALARM_DEV=y
+CONFIG_SYNC=y
+# CONFIG_SW_SYNC is not set
+CONFIG_ION=y
+# CONFIG_ION_TEST is not set
+# CONFIG_ION_DUMMY is not set
+CONFIG_ION_SPRD=y
+# CONFIG_ION_POOL_CACHE_POLICY is not set
+# CONFIG_FIQ_DEBUGGER is not set
+# CONFIG_FIQ_WATCHDOG is not set
+CONFIG_RUNTIME_COMPCACHE=y
+# CONFIG_KSWAPD_NOSWAP is not set
+# CONFIG_USB_WPAN_HCD is not set
+# CONFIG_WIMAX_GDM72XX is not set
+# CONFIG_CED1401 is not set
+# CONFIG_DGRP is not set
+
+#
+# Spreadtrum Platform Specific Drivers
+#
+
+#
+# Spreadtrum Adie Type
+#
+# CONFIG_ADIE_SC2713 is not set
+# CONFIG_ADIE_SC2713S is not set
+# CONFIG_ADIE_SC2711 is not set
+CONFIG_ADIE_SC2723=y
+# CONFIG_ADIE_SC2723S is not set
+CONFIG_BUS_MONITOR_DEBUG=y
+CONFIG_DJTAG=y
+CONFIG_BUS_MONITOR_PERF=y
+# CONFIG_SC_VIBRATOR is not set
+CONFIG_SPRD_VIBRATOR_2723=y
+CONFIG_SPRD_ION_MM_SIZE=1
+CONFIG_SPRD_ION_OVERLAY_SIZE=1
+# CONFIG_SPRD_VIBRATOR_2731 is not set
+CONFIG_EIRQ_NUM=0
+CONFIG_PIN_POWER_DOMAIN_SWITCH=y
+
+#
+# SC8830 ADIE type
+#
+CONFIG_SC_INTERNAL_ADI=y
+CONFIG_SC_INTERNAL_ADC=y
+CONFIG_SC_INTERNAL_WATCHDOG=y
+# CONFIG_FIX_V7TAGRAM_BUG is not set
+# CONFIG_DDR_VALIDITY_TEST is not set
+CONFIG_SPRD_CPU_DYNAMIC_HOTPLUG=y
+# CONFIG_SPRD_DCDC_DEBUG is not set
+# CONFIG_SPRD_AVS_DEBUG is not set
+# CONFIG_SPRD_AUX_DEBUG is not set
+CONFIG_SPRD_SIMCTRL=y
+# CONFIG_SPRD_MODEM_TD is not set
+# CONFIG_MODEM_W_MEMCUT is not set
+# CONFIG_SIPC_TD is not set
+# CONFIG_SIPC_WCDMA is not set
+# CONFIG_SIPC_WCN is not set
+CONFIG_SIPC_PMIC=y
+# CONFIG_SIPC_GGE is not set
+CONFIG_SIPC_LTE=y
+# CONFIG_VOIP_LTE is not set
+# CONFIG_CP_SWITCH is not set
+# CONFIG_EAR_LOW_LEVEL_DETECT is not set
+# CONFIG_SS_FUNCTION is not set
+# CONFIG_TSP_0_1_A is not set
+CONFIG_SPRD_MAILBOX=y
+# CONFIG_SPRD_MAILBOX_FIFO is not set
+CONFIG_SPRD_SYSDUMP=y
+CONFIG_SPRD_DEBUG=y
+CONFIG_SPRD_DEBUG_SCHED_LOG=y
+CONFIG_SPRD_DEBUG_DMALOG=y
+# CONFIG_GPS_LSI_S5N6420 is not set
+CONFIG_SPRD_EIRQSOFF_DEBUG=y
+CONFIG_CLKDEV_LOOKUP=y
+CONFIG_HAVE_CLK_PREPARE=y
+CONFIG_COMMON_CLK=y
+
+#
+# Common Clock Framework
+#
+CONFIG_COMMON_CLK_DEBUG=y
+# CONFIG_COMMON_CLK_SI5351 is not set
+CONFIG_HWSPINLOCK=y
+
+#
+# Hardware Spinlock drivers
+#
+CONFIG_HWSPINLOCK_SCI=y
+CONFIG_CLKSRC_OF=y
+CONFIG_CLKSRC_MMIO=y
+# CONFIG_ARM_ARCH_TIMER_EVTSTREAM is not set
+# CONFIG_MAILBOX is not set
+# CONFIG_MCDT is not set
+# CONFIG_IOMMU_SUPPORT is not set
+
+#
+# Remoteproc drivers
+#
+# CONFIG_STE_MODEM_RPROC is not set
+
+#
+# Rpmsg drivers
+#
+# CONFIG_PM_DEVFREQ is not set
+# CONFIG_EXTCON is not set
+# CONFIG_MEMORY is not set
+CONFIG_IIO=y
+CONFIG_IIO_BUFFER=y
+# CONFIG_IIO_BUFFER_CB is not set
+CONFIG_IIO_KFIFO_BUF=y
+CONFIG_IIO_TRIGGER=y
+CONFIG_IIO_CONSUMERS_PER_TRIGGER=2
+
+#
+# Accelerometers
+#
+# CONFIG_KXSD9 is not set
+# CONFIG_IIO_ST_ACCEL_3AXIS is not set
+
+#
+# Analog to digital converters
+#
+# CONFIG_AD7266 is not set
+# CONFIG_AD7298 is not set
+# CONFIG_AD7923 is not set
+# CONFIG_AD7791 is not set
+# CONFIG_AD7793 is not set
+# CONFIG_AD7476 is not set
+# CONFIG_AD7887 is not set
+# CONFIG_EXYNOS_ADC is not set
+# CONFIG_MAX1363 is not set
+# CONFIG_TI_ADC081C is not set
+
+#
+# Amplifiers
+#
+# CONFIG_AD8366 is not set
+
+#
+# Hid Sensor IIO Common
+#
+
+#
+# Digital to analog converters
+#
+# CONFIG_AD5064 is not set
+# CONFIG_AD5360 is not set
+# CONFIG_AD5380 is not set
+# CONFIG_AD5421 is not set
+# CONFIG_AD5624R_SPI is not set
+# CONFIG_AD5446 is not set
+# CONFIG_AD5449 is not set
+# CONFIG_AD5504 is not set
+# CONFIG_AD5755 is not set
+# CONFIG_AD5764 is not set
+# CONFIG_AD5791 is not set
+# CONFIG_AD5686 is not set
+# CONFIG_MAX517 is not set
+# CONFIG_MCP4725 is not set
+
+#
+# Frequency Synthesizers DDS/PLL
+#
+
+#
+# Clock Generator/Distribution
+#
+# CONFIG_AD9523 is not set
+
+#
+# Phase-Locked Loop (PLL) frequency synthesizers
+#
+# CONFIG_ADF4350 is not set
+
+#
+# Digital gyroscope sensors
+#
+# CONFIG_ADIS16080 is not set
+# CONFIG_ADIS16136 is not set
+# CONFIG_ADXRS450 is not set
+# CONFIG_IIO_ST_GYRO_3AXIS is not set
+# CONFIG_ITG3200 is not set
+# CONFIG_INV_MPU_IIO is not set
+
+#
+# Light sensors
+#
+# CONFIG_ADJD_S311 is not set
+# CONFIG_SENSORS_TSL2563 is not set
+# CONFIG_VCNL4000 is not set
+# CONFIG_INV_YAS53X_IIO is not set
+# CONFIG_INV_AMI306_IIO is not set
+# CONFIG_PWM is not set
+CONFIG_IRQCHIP=y
+CONFIG_ARM_GIC=y
+# CONFIG_IPACK_BUS is not set
+# CONFIG_RESET_CONTROLLER is not set
+
+#
+# SIPC modules
+#
+CONFIG_SIPC=y
+# CONFIG_SIPC_V2 is not set
+CONFIG_SIPC_SPIPE=y
+# CONFIG_SIPC_SPOOL is not set
+CONFIG_SIPC_SETH=y
+CONFIG_SETH_OPT=y
+# CONFIG_SETH_GRO_DISABLE is not set
+# CONFIG_SBLOCK_SHARE_BLOCKS is not set
+CONFIG_SETH_RAWIP=y
+CONFIG_ZERO_COPY_SIPX=y
+CONFIG_SIPCMEM_CACHE_EN=y
+CONFIG_SIPC_STTY=y
+# CONFIG_SIPC_DUAL_SIM_PLUG is not set
+
+#
+# Sensor support
+#
+# CONFIG_SENSORS is not set
+
+#
+# SPRD IQ modules
+#
+CONFIG_SPRD_IQ=y
+# CONFIG_HAS_AUTOTST is not set
+CONFIG_GATOR=m
+# CONFIG_NO_HOTPLUG_POLICY is not set
+# CONFIG_SS_TOUCH_BOOST_CPU_HOTPLUG is not set
+# CONFIG_TEE_SUPPORT is not set
+
+#
+# Trusty
+#
+# CONFIG_TRUSTY is not set
+
+#
+# Android
+#
+CONFIG_ANDROID_BINDER_IPC=y
+CONFIG_ANDROID_BINDER_IPC_32BIT=y
+
+#
+# File systems
+#
+CONFIG_DCACHE_WORD_ACCESS=y
+# CONFIG_EXT2_FS is not set
+# CONFIG_EXT3_FS is not set
+CONFIG_EXT4_FS=y
+CONFIG_EXT4_USE_FOR_EXT23=y
+# CONFIG_EXT4_FS_POSIX_ACL is not set
+CONFIG_EXT4_FS_SECURITY=y
+# CONFIG_EXT4_FS_ENCRYPTION is not set
+# CONFIG_EXT4_DEBUG is not set
+# CONFIG_SDCARD_FS is not set
+CONFIG_JBD2=y
+# CONFIG_JBD2_DEBUG is not set
+CONFIG_FS_MBCACHE=y
+# CONFIG_REISERFS_FS is not set
+# CONFIG_JFS_FS is not set
+# CONFIG_XFS_FS is not set
+# CONFIG_GFS2_FS is not set
+# CONFIG_OCFS2_FS is not set
+# CONFIG_BTRFS_FS is not set
+# CONFIG_NILFS2_FS is not set
+# CONFIG_FS_POSIX_ACL is not set
+CONFIG_FILE_LOCKING=y
+CONFIG_FSNOTIFY=y
+# CONFIG_DNOTIFY is not set
+CONFIG_INOTIFY_USER=y
+# CONFIG_FANOTIFY is not set
+# CONFIG_QUOTA is not set
+# CONFIG_QUOTACTL is not set
+# CONFIG_AUTOFS4_FS is not set
+CONFIG_FUSE_FS=y
+# CONFIG_CUSE is not set
+
+#
+# Caches
+#
+# CONFIG_FSCACHE is not set
+
+#
+# CD-ROM/DVD Filesystems
+#
+# CONFIG_ISO9660_FS is not set
+# CONFIG_UDF_FS is not set
+
+#
+# DOS/FAT/NT Filesystems
+#
+CONFIG_FAT_FS=y
+# CONFIG_MSDOS_FS is not set
+CONFIG_VFAT_FS=y
+CONFIG_FAT_DEFAULT_CODEPAGE=437
+CONFIG_FAT_DEFAULT_IOCHARSET="iso8859-1"
+CONFIG_EXFAT_FS=y
+CONFIG_EXFAT_VIRTUAL_XATTR=y
+CONFIG_EXFAT_VIRTUAL_XATTR_SELINUX_LABEL="u:object_r:sdcard_external:s0"
+# CONFIG_NTFS_FS is not set
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+CONFIG_PROC_SYSCTL=y
+CONFIG_PROC_PAGE_MONITOR=y
+CONFIG_SPRD_DEBUG_FRAME=y
+# CONFIG_SPRD_DEBUG_PHYMEM_INFO is not set
+# CONFIG_SPRD_DEBUG_USRPROCMEM_INFO is not set
+# CONFIG_SPRD_DEBUG_USRPROCSTACK_INFO is not set
+CONFIG_SPRD_DEBUG_CPU_RATE=y
+CONFIG_SPRD_DEBUG_MORE_SMAPS_INFO=y
+CONFIG_SPRD_UBOOT_LOG_DUMP=y
+CONFIG_SYSFS=y
+CONFIG_TMPFS=y
+# CONFIG_TMPFS_POSIX_ACL is not set
+# CONFIG_TMPFS_XATTR is not set
+# CONFIG_HUGETLB_PAGE is not set
+CONFIG_CONFIGFS_FS=y
+CONFIG_MISC_FILESYSTEMS=y
+# CONFIG_ADFS_FS is not set
+# CONFIG_AFFS_FS is not set
+# CONFIG_ECRYPT_FS is not set
+# CONFIG_HFS_FS is not set
+# CONFIG_HFSPLUS_FS is not set
+# CONFIG_BEFS_FS is not set
+# CONFIG_BFS_FS is not set
+# CONFIG_EFS_FS is not set
+# CONFIG_LOGFS is not set
+# CONFIG_CRAMFS is not set
+# CONFIG_SQUASHFS is not set
+# CONFIG_VXFS_FS is not set
+# CONFIG_MINIX_FS is not set
+# CONFIG_OMFS_FS is not set
+# CONFIG_HPFS_FS is not set
+# CONFIG_QNX4FS_FS is not set
+# CONFIG_QNX6FS_FS is not set
+# CONFIG_ROMFS_FS is not set
+CONFIG_PSTORE=y
+CONFIG_PSTORE_CONSOLE=y
+# CONFIG_PSTORE_PMSG is not set
+# CONFIG_PSTORE_FTRACE is not set
+CONFIG_PSTORE_RAM=y
+# CONFIG_SYSV_FS is not set
+# CONFIG_UFS_FS is not set
+# CONFIG_F2FS_FS is not set
+# CONFIG_NETWORK_FILESYSTEMS is not set
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="iso8859-1"
+CONFIG_NLS_CODEPAGE_437=y
+# CONFIG_NLS_CODEPAGE_737 is not set
+# CONFIG_NLS_CODEPAGE_775 is not set
+# CONFIG_NLS_CODEPAGE_850 is not set
+# CONFIG_NLS_CODEPAGE_852 is not set
+# CONFIG_NLS_CODEPAGE_855 is not set
+# CONFIG_NLS_CODEPAGE_857 is not set
+# CONFIG_NLS_CODEPAGE_860 is not set
+# CONFIG_NLS_CODEPAGE_861 is not set
+# CONFIG_NLS_CODEPAGE_862 is not set
+# CONFIG_NLS_CODEPAGE_863 is not set
+# CONFIG_NLS_CODEPAGE_864 is not set
+# CONFIG_NLS_CODEPAGE_865 is not set
+# CONFIG_NLS_CODEPAGE_866 is not set
+# CONFIG_NLS_CODEPAGE_869 is not set
+# CONFIG_NLS_CODEPAGE_936 is not set
+# CONFIG_NLS_CODEPAGE_950 is not set
+# CONFIG_NLS_CODEPAGE_932 is not set
+# CONFIG_NLS_CODEPAGE_949 is not set
+# CONFIG_NLS_CODEPAGE_874 is not set
+# CONFIG_NLS_ISO8859_8 is not set
+# CONFIG_NLS_CODEPAGE_1250 is not set
+# CONFIG_NLS_CODEPAGE_1251 is not set
+CONFIG_NLS_ASCII=y
+CONFIG_NLS_ISO8859_1=y
+# CONFIG_NLS_ISO8859_2 is not set
+# CONFIG_NLS_ISO8859_3 is not set
+# CONFIG_NLS_ISO8859_4 is not set
+# CONFIG_NLS_ISO8859_5 is not set
+# CONFIG_NLS_ISO8859_6 is not set
+# CONFIG_NLS_ISO8859_7 is not set
+# CONFIG_NLS_ISO8859_9 is not set
+# CONFIG_NLS_ISO8859_13 is not set
+# CONFIG_NLS_ISO8859_14 is not set
+# CONFIG_NLS_ISO8859_15 is not set
+# CONFIG_NLS_KOI8_R is not set
+# CONFIG_NLS_KOI8_U is not set
+# CONFIG_NLS_MAC_ROMAN is not set
+# CONFIG_NLS_MAC_CELTIC is not set
+# CONFIG_NLS_MAC_CENTEURO is not set
+# CONFIG_NLS_MAC_CROATIAN is not set
+# CONFIG_NLS_MAC_CYRILLIC is not set
+# CONFIG_NLS_MAC_GAELIC is not set
+# CONFIG_NLS_MAC_GREEK is not set
+# CONFIG_NLS_MAC_ICELAND is not set
+# CONFIG_NLS_MAC_INUIT is not set
+# CONFIG_NLS_MAC_ROMANIAN is not set
+# CONFIG_NLS_MAC_TURKISH is not set
+CONFIG_NLS_UTF8=y
+# CONFIG_DLM is not set
+CONFIG_SPRD_IODEBUG=y
+# CONFIG_SPRD_IODEBUG_HOTPOINT is not set
+# CONFIG_SPRD_IODEBUG_IOSCHEDULE is not set
+CONFIG_SPRD_IODEBUG_VFS=y
+CONFIG_SPRD_IODEBUG_BDI=y
+# CONFIG_SPRD_METADATA_BUFFER_RECLAIM is not set
+# CONFIG_SPRD_LAZY_SHRINK_SBCACHE is not set
+
+#
+# Kernel hacking
+#
+CONFIG_PRINTK_TIME=y
+CONFIG_DEFAULT_MESSAGE_LOGLEVEL=4
+CONFIG_ENABLE_WARN_DEPRECATED=y
+CONFIG_ENABLE_MUST_CHECK=y
+CONFIG_FRAME_WARN=1024
+CONFIG_MAGIC_SYSRQ=y
+# CONFIG_STRIP_ASM_SYMS is not set
+# CONFIG_READABLE_ASM is not set
+# CONFIG_UNUSED_SYMBOLS is not set
+CONFIG_DEBUG_FS=y
+# CONFIG_HEADERS_CHECK is not set
+# CONFIG_DEBUG_SECTION_MISMATCH is not set
+CONFIG_DEBUG_KERNEL=y
+# CONFIG_DEBUG_SHIRQ is not set
+CONFIG_LOCKUP_DETECTOR=y
+CONFIG_HARDLOCKUP_DETECTOR_OTHER_CPU=y
+CONFIG_HARDLOCKUP_DETECTOR=y
+# CONFIG_BOOTPARAM_HARDLOCKUP_PANIC is not set
+CONFIG_BOOTPARAM_HARDLOCKUP_PANIC_VALUE=0
+# CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC is not set
+CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC_VALUE=0
+# CONFIG_PANIC_ON_OOPS is not set
+CONFIG_PANIC_ON_OOPS_VALUE=0
+# CONFIG_DETECT_HUNG_TASK is not set
+# CONFIG_SCHED_DEBUG is not set
+# CONFIG_SCHEDSTATS is not set
+# CONFIG_TIMER_STATS is not set
+# CONFIG_DEBUG_OBJECTS is not set
+# CONFIG_SLUB_DEBUG_ON is not set
+# CONFIG_SLUB_STATS is not set
+CONFIG_HAVE_DEBUG_KMEMLEAK=y
+# CONFIG_DEBUG_KMEMLEAK is not set
+# CONFIG_DEBUG_PREEMPT is not set
+# CONFIG_DEBUG_RT_MUTEXES is not set
+# CONFIG_RT_MUTEX_TESTER is not set
+# CONFIG_DEBUG_SPINLOCK is not set
+# CONFIG_DEBUG_MUTEXES is not set
+# CONFIG_DEBUG_LOCK_ALLOC is not set
+# CONFIG_PROVE_LOCKING is not set
+# CONFIG_LOCK_STAT is not set
+CONFIG_TRACE_IRQFLAGS=y
+# CONFIG_DEBUG_ATOMIC_SLEEP is not set
+# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
+CONFIG_STACKTRACE=y
+# CONFIG_DEBUG_STACK_USAGE is not set
+# CONFIG_DEBUG_KOBJECT is not set
+# CONFIG_DEBUG_HIGHMEM is not set
+CONFIG_DEBUG_BUGVERBOSE=y
+CONFIG_DEBUG_INFO=y
+# CONFIG_DEBUG_INFO_REDUCED is not set
+# CONFIG_DEBUG_VM is not set
+# CONFIG_DEBUG_WRITECOUNT is not set
+# CONFIG_DEBUG_MEMORY_INIT is not set
+# CONFIG_DEBUG_LIST is not set
+# CONFIG_TEST_LIST_SORT is not set
+# CONFIG_DEBUG_SG is not set
+# CONFIG_DEBUG_NOTIFIERS is not set
+# CONFIG_DEBUG_CREDENTIALS is not set
+CONFIG_FRAME_POINTER=y
+# CONFIG_BOOT_PRINTK_DELAY is not set
+
+#
+# RCU Debugging
+#
+# CONFIG_PROVE_RCU_DELAY is not set
+# CONFIG_SPARSE_RCU_POINTER is not set
+# CONFIG_RCU_TORTURE_TEST is not set
+CONFIG_RCU_CPU_STALL_TIMEOUT=60
+CONFIG_RCU_CPU_STALL_VERBOSE=y
+# CONFIG_RCU_CPU_STALL_INFO is not set
+# CONFIG_RCU_TRACE is not set
+# CONFIG_BACKTRACE_SELF_TEST is not set
+# CONFIG_DEBUG_BLOCK_EXT_DEVT is not set
+# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
+# CONFIG_DEBUG_PER_CPU_MAPS is not set
+# CONFIG_LKDTM is not set
+# CONFIG_NOTIFIER_ERROR_INJECTION is not set
+# CONFIG_FAULT_INJECTION is not set
+# CONFIG_DEBUG_PAGEALLOC is not set
+# CONFIG_SPRD_PAGERECORDER is not set
+CONFIG_NOP_TRACER=y
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y
+CONFIG_HAVE_DYNAMIC_FTRACE=y
+CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
+CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
+CONFIG_HAVE_C_RECORDMCOUNT=y
+CONFIG_TRACER_MAX_TRACE=y
+CONFIG_TRACE_CLOCK=y
+CONFIG_RING_BUFFER=y
+CONFIG_EVENT_TRACING=y
+CONFIG_CONTEXT_SWITCH_TRACER=y
+CONFIG_RING_BUFFER_ALLOW_SWAP=y
+CONFIG_TRACING=y
+CONFIG_GENERIC_TRACER=y
+CONFIG_TRACING_SUPPORT=y
+CONFIG_FTRACE=y
+CONFIG_FUNCTION_TRACER=y
+CONFIG_FUNCTION_GRAPH_TRACER=y
+CONFIG_IRQSOFF_TRACER=y
+CONFIG_PREEMPT_TRACER=y
+CONFIG_SCHED_TRACER=y
+CONFIG_FTRACE_SYSCALLS=y
+CONFIG_TRACER_SNAPSHOT=y
+CONFIG_TRACER_SNAPSHOT_PER_CPU_SWAP=y
+CONFIG_BRANCH_PROFILE_NONE=y
+# CONFIG_PROFILE_ANNOTATED_BRANCHES is not set
+# CONFIG_PROFILE_ALL_BRANCHES is not set
+# CONFIG_STACK_TRACER is not set
+CONFIG_BLK_DEV_IO_TRACE=y
+# CONFIG_PROBE_EVENTS is not set
+CONFIG_DYNAMIC_FTRACE=y
+# CONFIG_FUNCTION_PROFILER is not set
+CONFIG_FTRACE_MCOUNT_RECORD=y
+# CONFIG_FTRACE_STARTUP_TEST is not set
+# CONFIG_RING_BUFFER_BENCHMARK is not set
+# CONFIG_RING_BUFFER_STARTUP_TEST is not set
+# CONFIG_RBTREE_TEST is not set
+# CONFIG_INTERVAL_TREE_TEST is not set
+CONFIG_DYNAMIC_DEBUG=y
+# CONFIG_DMA_API_DEBUG is not set
+# CONFIG_ATOMIC64_SELFTEST is not set
+# CONFIG_SAMPLES is not set
+CONFIG_HAVE_ARCH_KGDB=y
+# CONFIG_KGDB is not set
+# CONFIG_TEST_STRING_HELPERS is not set
+# CONFIG_TEST_KSTRTOX is not set
+# CONFIG_STRICT_DEVMEM is not set
+CONFIG_ARM_UNWIND=y
+CONFIG_OLD_MCOUNT=y
+# CONFIG_DEBUG_USER is not set
+# CONFIG_DEBUG_RODATA is not set
+# CONFIG_DEBUG_LL is not set
+CONFIG_DEBUG_LL_INCLUDE="soc/sprd/debug-macro.S"
+CONFIG_UNCOMPRESS_INCLUDE="mach/uncompress.h"
+# CONFIG_PID_IN_CONTEXTIDR is not set
+# CONFIG_DEBUG_SET_MODULE_RONX is not set
+# CONFIG_CORESIGHT is not set
+
+#
+# Security options
+#
+CONFIG_KEYS=y
+# CONFIG_ENCRYPTED_KEYS is not set
+# CONFIG_KEYS_DEBUG_PROC_KEYS is not set
+# CONFIG_SECURITY_DMESG_RESTRICT is not set
+# CONFIG_SECURITY_PERF_EVENTS_RESTRICT is not set
+CONFIG_SECURITY=y
+# CONFIG_SECURITYFS is not set
+CONFIG_SECURITY_NETWORK=y
+# CONFIG_SECURITY_NETWORK_XFRM is not set
+# CONFIG_SECURITY_PATH is not set
+CONFIG_LSM_MMAP_MIN_ADDR=32768
+CONFIG_SECURITY_SELINUX=y
+# CONFIG_SECURITY_SELINUX_BOOTPARAM is not set
+# CONFIG_SECURITY_SELINUX_DISABLE is not set
+CONFIG_SECURITY_SELINUX_DEVELOP=y
+CONFIG_SECURITY_SELINUX_AVC_STATS=y
+CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE=1
+# CONFIG_SECURITY_SELINUX_POLICYDB_VERSION_MAX is not set
+# CONFIG_SECURITY_SMACK is not set
+# CONFIG_SECURITY_TOMOYO is not set
+# CONFIG_SECURITY_APPARMOR is not set
+# CONFIG_SECURITY_YAMA is not set
+# CONFIG_IMA is not set
+# CONFIG_EVM is not set
+CONFIG_ROOT_RECORDER=y
+CONFIG_DEFAULT_SECURITY_SELINUX=y
+# CONFIG_DEFAULT_SECURITY_DAC is not set
+CONFIG_DEFAULT_SECURITY="selinux"
+CONFIG_CRYPTO=y
+
+#
+# Crypto core or helper
+#
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_CRYPTO_AEAD=y
+CONFIG_CRYPTO_AEAD2=y
+CONFIG_CRYPTO_BLKCIPHER=y
+CONFIG_CRYPTO_BLKCIPHER2=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_HASH2=y
+CONFIG_CRYPTO_RNG=y
+CONFIG_CRYPTO_RNG2=y
+CONFIG_CRYPTO_PCOMP2=y
+CONFIG_CRYPTO_MANAGER=y
+CONFIG_CRYPTO_MANAGER2=y
+# CONFIG_CRYPTO_USER is not set
+CONFIG_CRYPTO_MANAGER_DISABLE_TESTS=y
+# CONFIG_CRYPTO_GF128MUL is not set
+# CONFIG_CRYPTO_NULL is not set
+# CONFIG_CRYPTO_PCRYPT is not set
+CONFIG_CRYPTO_NULL=y
+CONFIG_CRYPTO_WORKQUEUE=y
+# CONFIG_CRYPTO_CRYPTD is not set
+CONFIG_CRYPTO_AUTHENC=y
+# CONFIG_CRYPTO_TEST is not set
+
+#
+# Authenticated Encryption with Associated Data
+#
+# CONFIG_CRYPTO_CCM is not set
+# CONFIG_CRYPTO_GCM is not set
+# CONFIG_CRYPTO_SEQIV is not set
+
+#
+# Block modes
+#
+CONFIG_CRYPTO_CBC=y
+# CONFIG_CRYPTO_CTR is not set
+# CONFIG_CRYPTO_CTS is not set
+CONFIG_CRYPTO_ECB=y
+# CONFIG_CRYPTO_LRW is not set
+# CONFIG_CRYPTO_PCBC is not set
+# CONFIG_CRYPTO_XTS is not set
+
+#
+# Hash modes
+#
+# CONFIG_CRYPTO_CMAC is not set
+CONFIG_CRYPTO_HMAC=y
+CONFIG_CRYPTO_XCBC=y
+# CONFIG_CRYPTO_VMAC is not set
+
+#
+# Digest
+#
+CONFIG_CRYPTO_CRC32C=y
+# CONFIG_CRYPTO_CRC32 is not set
+# CONFIG_CRYPTO_GHASH is not set
+# CONFIG_CRYPTO_MD4 is not set
+CONFIG_CRYPTO_MD5=y
+# CONFIG_CRYPTO_MICHAEL_MIC is not set
+# CONFIG_CRYPTO_RMD128 is not set
+# CONFIG_CRYPTO_RMD160 is not set
+# CONFIG_CRYPTO_RMD256 is not set
+# CONFIG_CRYPTO_RMD320 is not set
+CONFIG_CRYPTO_SHA1=y
+# CONFIG_CRYPTO_SHA1_ARM is not set
+# CONFIG_CRYPTO_SHA1_ARM_NEON is not set
+CONFIG_CRYPTO_SHA256=y
+CONFIG_CRYPTO_SHA256_ARM=y
+CONFIG_CRYPTO_SHA512=y
+CONFIG_CRYPTO_SHA512_ARM_NEON=y
+# CONFIG_CRYPTO_TGR192 is not set
+# CONFIG_CRYPTO_WP512 is not set
+
+#
+# Ciphers
+#
+CONFIG_CRYPTO_AES=y
+CONFIG_CRYPTO_AES_ARM=y
+# CONFIG_CRYPTO_AES_ARM_BS is not set
+# CONFIG_CRYPTO_ANUBIS is not set
+CONFIG_CRYPTO_ARC4=y
+# CONFIG_CRYPTO_BLOWFISH is not set
+# CONFIG_CRYPTO_CAMELLIA is not set
+# CONFIG_CRYPTO_CAST5 is not set
+# CONFIG_CRYPTO_CAST6 is not set
+CONFIG_CRYPTO_DES=y
+# CONFIG_CRYPTO_FCRYPT is not set
+# CONFIG_CRYPTO_KHAZAD is not set
+# CONFIG_CRYPTO_SALSA20 is not set
+# CONFIG_CRYPTO_SEED is not set
+# CONFIG_CRYPTO_SERPENT is not set
+# CONFIG_CRYPTO_TEA is not set
+CONFIG_CRYPTO_TWOFISH=y
+CONFIG_CRYPTO_TWOFISH_COMMON=y
+
+#
+# Compression
+#
+CONFIG_CRYPTO_DEFLATE=y
+# CONFIG_CRYPTO_ZLIB is not set
+# CONFIG_CRYPTO_LZO is not set
+
+#
+# Random Number Generation
+#
+CONFIG_CRYPTO_ANSI_CPRNG=y
+# CONFIG_CRYPTO_USER_API_HASH is not set
+# CONFIG_CRYPTO_USER_API_SKCIPHER is not set
+CONFIG_CRYPTO_HW=y
+CONFIG_CRYPTO_DEV_SPRD_AES=y
+# CONFIG_ASYMMETRIC_KEY_TYPE is not set
+CONFIG_BINARY_PRINTF=y
+
+#
+# Library routines
+#
+CONFIG_BITREVERSE=y
+CONFIG_GENERIC_STRNCPY_FROM_USER=y
+CONFIG_GENERIC_STRNLEN_USER=y
+CONFIG_GENERIC_PCI_IOMAP=y
+CONFIG_GENERIC_IO=y
+CONFIG_CRC_CCITT=y
+CONFIG_CRC16=y
+# CONFIG_CRC_T10DIF is not set
+# CONFIG_CRC_ITU_T is not set
+CONFIG_CRC32=y
+# CONFIG_CRC32_SELFTEST is not set
+CONFIG_CRC32_SLICEBY8=y
+# CONFIG_CRC32_SLICEBY4 is not set
+# CONFIG_CRC32_SARWATE is not set
+# CONFIG_CRC32_BIT is not set
+# CONFIG_CRC7 is not set
+CONFIG_LIBCRC32C=y
+# CONFIG_CRC8 is not set
+CONFIG_AUDIT_GENERIC=y
+# CONFIG_AUDIT_ARCH_COMPAT_GENERIC is not set
+CONFIG_ZLIB_INFLATE=y
+CONFIG_ZLIB_DEFLATE=y
+CONFIG_LZO_COMPRESS=y
+CONFIG_LZO_DECOMPRESS=y
+# CONFIG_XZ_DEC is not set
+# CONFIG_XZ_DEC_BCJ is not set
+CONFIG_DECOMPRESS_GZIP=y
+CONFIG_LZO_SOFT_ALGO=y
+# CONFIG_LZO_HW_ALGO is not set
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_REED_SOLOMON=y
+CONFIG_REED_SOLOMON_ENC8=y
+CONFIG_REED_SOLOMON_DEC8=y
+CONFIG_TEXTSEARCH=y
+CONFIG_TEXTSEARCH_KMP=y
+CONFIG_TEXTSEARCH_BM=y
+CONFIG_TEXTSEARCH_FSM=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_DMA=y
+CONFIG_CPU_RMAP=y
+CONFIG_DQL=y
+CONFIG_NLATTR=y
+CONFIG_ARCH_HAS_ATOMIC64_DEC_IF_POSITIVE=y
+# CONFIG_AVERAGE is not set
+# CONFIG_CORDIC is not set
+# CONFIG_DDR is not set
+CONFIG_LIBFDT=y
+CONFIG_E_SHOW_MEM=y
+# CONFIG_VIRTUALIZATION is not set
Index: kernel/arch/arm/boot/dts/sprd-scx35l_sp9832a_2h12_volte.dts
===================================================================
--- kernel/arch/arm/boot/dts/sprd-scx35l_sp9832a_2h12_volte.dts	(revision 0)
+++ kernel/arch/arm/boot/dts/sprd-scx35l_sp9832a_2h12_volte.dts	(revision 182225)
@@ -0,0 +1,1133 @@
+/*
+* Copyright (C) 2013 Spreadtrum Communication Incorporated
+*               http://www.spreadtrum.com/
+*
+* This program is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License version 2 as
+* published by the Free Software Foundation.
+*/
+/dts-v1/;
+
+/* memory reserved for fb */
+/memreserve/ 0x9ED74000 0xA8C000; /* 480*854*4*3, 4K alignment*/
+
+/* memory reserved for ION */
+/memreserve/ 0x9F800000 0x800000; /* 480*854*4*2, 8K alignment */
+
+/* For MPU remapping buffer */
+/memreserve/ 0xFD7FF000 0x00001000; /* 4K alignment*/
+
+/* memory reserved for tos */
+/memreserve/ 0xFD800000 0x02000000; /* 1M alignment*/
+
+/* memory reserved for VMM  */
+/memreserve/ 0xFF800000 0x600000; /* 6M, 2M alignment */
+
+/include/ "sprd-sharkl-modem-volte.dtsi"
+/include/ "scx35l-sp9830ied-clocks.dtsi"
+/include/ "sc2723-regulators.dtsi"
+/include/ "sprd-sound.dtsi"
+/include/ "sprd-battery.dtsi"
+
+/ {
+	model = "Spreadtrum SP8835EB board";
+	compatible = "sprd,sp8835eb";
+	sprd,sc-id = <8830 1 0x20000>;
+	#address-cells = <1>;
+	#size-cells = <1>;
+	interrupt-parent = <&gic>;
+
+	chosen {
+		bootargs = "loglevel=1 console=ttyS1,115200n8 init=/init root=/dev/ram0 rw androidboot.hardware=sp9832a_2h12";
+		linux,initrd-start = <0x85500000>;
+		linux,initrd-end   = <0x855a3212>;
+	};
+
+	memory: memory {
+		device_type = "memory";
+		reg = <0x80000000 0x80000000>;
+	};
+
+	aliases {
+		serial0 = &uart0;
+		serial1 = &uart1;
+		serial2 = &uart2;
+		serial3 = &uart3;
+		i2c0 = &i2c0;
+		i2c1 = &i2c1;
+		i2c2 = &i2c2;
+		i2c3 = &i2c3;
+		lcd0 = &fb0;
+		spi0 = &spi0;
+		spi1 = &spi1;
+		spi2 = &spi2;
+		hwspinlock0 = &hwspinlock0;
+		hwspinlock1 = &hwspinlock1;
+	};
+
+	cpus {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		cpu@f00 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <0xf00>;
+		};
+
+		cpu@f01 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <0xf01>;
+		};
+
+		cpu@f02 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <0xf02>;
+		};
+
+		cpu@f03 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <0xf03>;
+		};
+	};
+
+	pmu {
+		compatible = "arm,cortex-a7-pmu";
+		interrupts = <0 92 0x0>,
+				<0 93 0x0>,
+				<0 94 0x0>,
+				<0 95 0x0>;
+	};
+
+	gic: interrupt-controller@12001000 {
+		compatible = "arm,cortex-a15-gic", "arm,cortex-a9-gic";
+		#interrupt-cells = <3>;
+		#address-cells = <0>;
+		interrupt-controller;
+		reg = <0x12001000 0x1000>,
+			<0x12002000 0x1000>;
+	};
+
+	uart0: uart@70000000 {
+		compatible  = "sprd,serial";
+		interrupts = <0 2 0x0>;
+		reg = <0x70000000 0x1000>;
+		clock-names = "clk_uart0";
+		clocks = <&clock 60>;
+		sprdclk = <48000000>;
+		sprdwaketype = "BT_RTS_HIGH_WHEN_SLEEP";
+	};
+	uart1: uart@70100000 {
+		compatible  = "sprd,serial";
+		interrupts = <0 3 0x0>;
+		reg = <0x70100000 0x1000>;
+		clock-names = "clk_uart1";
+		clocks = <&clock 61>;
+		sprdclk = <26000000>;
+		sprdwaketype = "BT_RTS_HIGH_WHEN_SLEEP";
+	};
+	uart2: uart@70200000 {
+		compatible  = "sprd,serial";
+		interrupts = <0 4 0x0>;
+		reg = <0x70200000 0x1000>;
+		clock-names = "clk_uart2";
+		clocks = <&clock 62>;
+		sprdclk = <26000000>;
+		sprdwaketype = "BT_RTS_HIGH_WHEN_SLEEP";
+	};
+	uart3: uart@70300000 {
+		compatible  = "sprd,serial";
+		interrupts = <0 5 0x0>;
+		reg = <0x70300000 0x1000>;
+		clock-names = "clk_uart3";
+		clocks = <&clock 63>;
+		sprdclk = <26000000>;
+		sprdwaketype = "BT_RTS_HIGH_WHEN_SLEEP";
+	};
+
+	timer {
+		compatible  = "sprd,scx35-timer";
+		reg =	<0x40230000 0x1000>, /* SYSCNT */
+			<0x40050000 0x1000>, /* GPTIMER0 */
+			<0x40220000 0x1000>, /* APTIMER0 */
+			<0x40320000 0x1000>, /* APTIMER1 */
+			<0x40330000 0x1000>; /* APTIMER2 */
+		interrupts = <0 118 0x0>,
+				<0 28 0x0>,
+				<0 29 0x0>,
+				<0 119 0x0>,
+				<0 121 0x0>,
+				<0 31 0x0>;
+	};
+	clock: clockdevice {
+		compatible = "sprd,scx35-clock";
+		#clock-cells = <1>;
+	};
+	d_eic_gpio: gpio@40210000 {
+		compatible = "sprd,d-eic-gpio";
+		reg = <0x40210000 0x1000>;
+		gpio-controller;
+		interrupt-controller;
+		#interrupt-cells = <2>;
+		#gpio-cells = <2>;
+		gpiobase = <288>;
+		ngpios = <16>;
+		interrupts = <0 37 0x0>;
+	};
+	d_gpio_gpio: gpio@40280000 {
+		compatible = "sprd,d-gpio-gpio";
+		reg = <0x40280000 0x1000>;
+		gpio-controller;
+		interrupt-controller;
+		#interrupt-cells = <2>;
+		#gpio-cells = <2>;
+		gpiobase = <0>;
+		ngpios = <256>;
+		interrupts = <0 35 0x0>;
+	};
+
+	pinctrl {
+		compatible = "sprd,pinctrl";
+		reg = <0x402a0000 0x1000>;
+		pwr_domain = "vdd28",
+			"vdd18",
+			"vddsim0",
+			"vddsim1",
+			"vddsim2",
+			"vddsdio",
+			"vdd18";
+		ctrl_desc = <0x10 0 1
+			0x10 1 1
+			0x10 2 1
+			0x10 3 1
+			0x10 4 1
+			0x10 5 1
+			0x10 6 1>;
+	};
+
+	sdios{
+		#address-cells = <2>;
+		#size-cells = <2>;
+		ranges;
+		sdio3: sdio@20600000{
+			compatible  = "sprd,sdhost-3.0";
+			reg = <0 0x20600000 0 0x1000>;
+			interrupts = <0 60 0x0>;
+			sprd,name = "sdio_emmc";
+			/*detect_gpio = <-1>; */
+			SD_Pwr_Name = "vddemmccore";
+			_1_8V_signal_Name = "vddgen0";
+			signal_default_Voltage = <1800000>;
+			ocr_avail = <0x00040000>;
+			clocks = <&clk_emmc>, <&clk_384m>;
+			base_clk = <384000000>;
+			bus-width = <8>;
+			caps = <0xC00F8D47>;
+			caps2 = <0x202>;
+			pm_caps = <0x4>;
+			writeDelay = <0x34>;
+			readPosDelay = <0x8>;
+			readNegDelay = <0x8>;
+		};
+
+		sdio0: sdio@20300000{
+			compatible  = "sprd,sdhost-3.0";
+			reg = <0 0x20300000 0 0x1000>;
+			interrupts = <0 57 0x0>;
+			sprd,name = "sdio_sd";
+			detect_gpio = <141>;
+			SD_Pwr_Name = "vddsdcore";
+			_1_8V_signal_Name = "vddsdio";
+			signal_default_Voltage = <3000000>;
+			ocr_avail = <0x00040000>;
+			clocks = <&clk_sdio0>, <&clk_384m>;
+			base_clk = <384000000>;
+			bus-width = <4>;
+			caps = <0xC0020407>;
+			caps2 = <0x200>;
+			pm_caps = <0x4>;
+			writeDelay = <0x3>;
+			readPosDelay = <0x3>;
+			readNegDelay = <0x3>;
+		};
+
+
+		sdio1: sdio@20400000{
+			compatible  = "sprd,sdhost-3.0";
+			reg = <0 0x20400000 0 0x1000>;
+			interrupts = <0 58 0x0>;
+			sprd,name = "sdio_wifi";
+			/* detect_gpio = <-1>; */
+			/* SD_Pwr_Name = "vddsdcore"; */
+			/* _1_8V_signal_Name = "vddsdio";*/
+			/* signal_default_Voltage = <3000000>; */
+			ocr_avail = <0x00360080>;
+			clocks = <&clk_sdio1>, <&clk_128m>;
+			base_clk = <128000000>;
+			bus-width = <4>;
+			caps = <0xC00FA407>;
+			caps2 = <0x0>;
+			pm_caps = <0x5>;
+			writeDelay = <0x03>;
+			readPosDelay = <0x03>;
+			readNegDelay = <0x03>;
+		};
+	};
+
+	fb0: fb@20800000 {
+		compatible = "sprd,sprdfb";
+		reg = <0x20800000 0x1000>,<0x21800000 0x1000>;
+		interrupts = <0 46 0x0>,<0 48 0x0>, <0 49 0x0>;
+		clock-names = "dispc_clk_parent", "dispc_dbi_clk_parent", "dispc_dpi_clk_parent", "dispc_emc_clk_parent", "dispc_clk", "dispc_dbi_clk", "dispc_dpi_clk", "dispc_emc_clk", "fb_spi_clock", "fb_spi_clock_parent";
+		clocks = <&clk_256m>, <&clk_256m>, <&clk_384m>, <&clk_aon_apb>, <&clk_dispc0>, <&clk_dispc0_dbi>, <&clk_dispc0_dpi>, <&clk_disp_emc>, <&clk_spi2>, <&ext_26m>;
+		clock-src = <256000000 256000000 384000000>;
+		dpi_clk_div = <7>;
+		sprd,fb_use_reservemem;
+		sprd,fb_mem = <0x9ED74000 0xA8C000>;
+	};
+
+	adic:adic {
+		compatible = "sprd,adi";
+		reg = <0x40030000 0x10000>;
+	};
+	adi: adi_bus {
+		compatible = "sprd,adi-bus";
+		interrupts = <0 38 0x0>;
+		reg = <0x40038000 0x1000>;
+		interrupt-controller;
+		sprd,irqnums = <11>;
+		#interrupt-cells = <2>;
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges = <0x40 0x40038040 0x40>,
+			<0x80 0x40038080 0x80>,
+			<0x100 0x40038100 0x80>,
+			<0x480 0x40038480 0x80>;
+		sprd_backlight {
+			compatible = "sprd,sprd_backlight";
+			start = <3>;
+			end = <3>;
+			flags = <0x100>;
+		};
+		keyboard_backlight {
+			compatible = "sprd,keyboard-backlight";
+		};
+		sprd_kpled_2723 {
+			compatible = "sprd,sprd-kpled-2723";
+			brightness_max = <255>;
+			brightness_min = <0>;
+			run_mode = <1>;
+		};
+
+		leds_sprd_bltc_rgb {
+			compatible = "sprd,sprd-leds-bltc-rgb";
+			reg = <0x440 0x40>,
+			<0x800 0xff>;
+		};
+
+		watchdog@40{
+			compatible = "sprd,watchdog";
+			reg = <0x40 0x40>;
+			interrupts = <3 0x0>;
+		};
+		rtc@80 {
+			compatible = "sprd,rtc";
+			reg = <0x80 0x80>;
+			interrupts = <2 0x0>;
+		};
+		a_eic_gpio: gpio@100 {
+			compatible = "sprd,a-eic-gpio";
+			reg = <0x100 0x80>; /* adi reg */
+			gpio-controller;
+			interrupt-controller;
+			#interrupt-cells = <2>;
+			#gpio-cells = <2>;
+			gpiobase = <304>;
+			ngpios = <16>;
+			interrupt-parent = <&adi>;
+			interrupts = <5 0x0>; /* ext irq 5 */
+		};
+		sprd_eic_keys {
+			compatible = "sprd,sprd-eic-keys";
+			input-name = "sprd-eic-keys";
+			key_power {
+				label = "Power Key";
+				linux,code = <116>;
+				gpios = <&a_eic_gpio 2 0>;
+				debounce-interval = <2>;
+				gpio-key,wakeup;
+			};
+			key_volumeup {
+				label = "Volumeup Key";
+				linux,code = <115>;
+				gpios = <&a_eic_gpio 10 0>;
+				debounce-interval = <2>;
+				gpio-key,wakeup;
+			};
+		};
+		headset_sprd_sc2723 {
+			compatible = "sprd,headset_sprd_sc2723";
+			gpio_switch = <0>;
+			gpio_detect = <312>;
+			gpio_button = <307>;
+			irq_trigger_level_detect = <1>;
+			irq_trigger_level_button = <1>;
+			adc_threshold_3pole_detect = <300>;
+			adc_threshold_4pole_detect = <3270>;
+			irq_threshold_buttont = <6>;
+			voltage_headmicbias = <3000000>;
+			nbuttons = <3>;
+			headset_buttons_media {
+				adc_min = <0>;
+				adc_max = <420>;
+				code = <226>;
+				type = <0>;
+			};
+
+			headset_buttons_up {
+				adc_min = <450>;
+				adc_max = <880>;
+				code = <115>;
+				type = <0>;
+			};
+			headset_buttons_down {
+				adc_min = <900>;
+				adc_max =<2300>;
+				code = <114>;
+				type = <0>;
+			};
+		};
+	};
+	sprd_pwm_bl {
+		compatible = "sprd,sprd_pwm_bl";
+		reg = <0x40260000 0xf>;
+		brightness_max = <255>;
+		brightness_min = <0>;
+		pwm_index = <2>;
+		gpio_ctrl_pin = <0>;
+		gpio_active_level = <0>;
+	};
+	gpio_keys {
+		compatible = "gpio-keys";
+		input-name = "sprd-gpio-keys";
+		key_volumedown {
+			label = "Volumedown Key";
+			linux,code = <114>;
+			gpios = <&d_gpio_gpio 124 1>;
+			debounce-interval = <2>;
+			gpio-key,wakeup;
+		};
+/*
+		key_volumeup {
+			label = "Volumeup Key";
+			linux,code = <115>;
+			gpios = <&d_gpio_gpio 125 1>;
+			debounce-interval = <2>;
+			gpio-key,wakeup;
+		};
+*/
+		key_camerafocus {
+			label = "Camerafocus Key";
+			linux,code = <0x210>;
+			gpios = <&d_gpio_gpio 125 1>;
+			debounce-interval = <2>;
+			gpio-key,wakeup;
+		};
+		key_camera {
+			label = "Camera Key";
+			linux,code = <212>;
+			gpios = <&d_gpio_gpio 126 1>;
+			debounce-interval = <2>;
+			gpio-key,wakeup;
+		};
+	};
+	rfkill {
+		compatible = "broadcom,rfkill";
+		gpios = <&d_gpio_gpio 131 0  /* power */
+			&d_gpio_gpio 122 0>;  /* reset */
+	};
+        bluesleep {
+               compatible = "broadcom,bluesleep";
+               bt-wake-gpio = <&d_gpio_gpio 132 0>;  /*GPIO_AP2BT_WAKE*/
+               host-wake-gpio = <&d_gpio_gpio 133 0>; /*GPIO_BT2AP_WAKE*/
+         };
+
+	sprd_vsp@60900000 {
+		compatible = "sprd,sprd_vsp";
+		reg = <0x60900000 0xc000>;
+		interrupts = <0 43 0x0>;
+		clock-names = "clk_mm_i", "clk_vsp", "clk_mm_axi";
+		clocks = <&clk_mm>, <&clk_vsp>, <&clk_mm_axi>;
+		version = <3>;
+	};
+	sprd_jpg {
+		compatible = "sprd,sprd_jpg";
+		reg = <0x60b00000 0x8000>;
+		interrupts = <0 42 0x0>;
+		clock-names = "clk_mm_i","clk_jpg";
+		clocks = <&clk_mm>, <&clk_jpg>;
+	};
+
+	 sprd_vpp@61000000{
+                 compatible = "sprd,sprd_vpp";
+                 reg = <0x61000000 0x4000>;
+                 interrupts = <0 43 0x0>;
+		clock-names = "clk_mm","clk_vpp";
+		clocks = <&clk_mm>, <&clk_vpp>;
+         };
+
+	 sprd_coda7l@62100000{
+		compatible = "sprd,sprd_coda7l";
+		reg = <0x62100000 0x4000>;
+		interrupts = <0 43 0x0>;
+		clock-names = "clk_mm_i","clk_coda7_axi","clk_coda7_cc","clk_coda7_apb";
+		clocks = <&clk_mm>, <&clk_coda7_axi>, <&clk_coda7_cc>, <&clk_coda7_apb>;
+		power-regs-info = <0x402b01a4 0 0x402b00c4 0x0000000f>;
+         };
+
+	i2c0: i2c@70500000 {
+		compatible = "sprd,i2c";
+		interrupts = <0 11 0x0>;
+		reg = <0x70500000 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		sensor_main@0x3c {
+			compatible = "sprd,sensor_main";
+			reg = <0x3c>;
+		};
+		sensor_sub@0x21 {
+			compatible = "sprd,sensor_sub";
+			reg = <0x21>;
+		};
+	};
+	i2c1: i2c@70600000 {
+		compatible = "sprd,i2c";
+		interrupts = <0 12 0x0>;
+		reg = <0x70600000 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		fan54015_chg@0x6a {
+			compatible = "fairchild,fan54015_chg";
+			reg = <0x6a>;
+		};
+	};
+	i2c2: i2c@70700000 {
+		compatible = "sprd,i2c";
+		interrupts = <0 13 0x0>;
+		reg = <0x70700000 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		lis3dh_acc@18{
+			compatible = "ST,lis3dh_acc";
+			reg = <0x18>;
+			gpios = <&d_gpio_gpio 139 0>;
+			poll_interval = <10>;
+			min_interval = <1>;
+			g_range = <0>;
+			axis_map_x = <1>;
+			axis_map_y = <0>;
+			axis_map_z = <2>;
+			negate_x = <0>;
+			negate_y = <1>;
+			negate_z = <0>;
+		};
+		ltr_558als@23{
+			compatible = "LITEON,ltr_558als";
+			reg = <0x23>;
+			gpios = <&d_gpio_gpio 140 0>;
+			/*low sensitve(def):1500,250,220,1800,1600,1; have no sensitve=<> as def.
+			  High sensitve:1000,40,35,1200,1000,48 */
+			sensitive = <1000 40 35
+						1200 1000 48>;
+			luxcorrection = <2330>;
+		};
+                epl259x_pls@49{
+                        compatible = "ELAN,epl259x_pls";
+                        reg = <0x49>;
+                        gpios = <&d_gpio_gpio 140 0>;
+                };
+
+	};
+	i2c3: i2c@70800000 {
+		compatible  = "sprd,i2c";
+		interrupts = <0 14 0x0>;
+		reg = <0x70800000 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		focaltech_ts@38{
+			compatible = "focaltech,focaltech_ts";
+			reg = <0x38>;
+			gpios = <&d_gpio_gpio 145 0
+				&d_gpio_gpio 144 0>;
+			vdd_name = "vdd18";
+			virtualkeys = <580 1350 60 45
+				360 1350 60 45
+				160 1350 60 45>;
+			TP_MAX_X = <720>;
+			TP_MAX_Y = <1280>;
+		};
+/*
+		msg2138_ts@26{
+			compatible = "Mstar,msg2138_ts";
+			reg = <0x26>;
+			gpios = <&d_gpio_gpio 145 0
+                                 &d_gpio_gpio 144 0>;
+			vdd_name = "vdd28";
+			virtualkeys = <256 1068 64 64
+				128 1068 64 64
+				192 1068 64 64>;
+			TP_MAX_X = <480>;
+			TP_MAX_Y = <800>;
+		};
+*/
+	};
+	sprd_dcam {
+		compatible = "sprd,sprd_dcam";
+		interrupts = <0 45 0>;
+		reg = <0x60800000 0x100000>;
+		clock-names = "clk_mm_i","clk_dcam";
+		clocks = <&clk_mm>, <&clk_dcam>;
+	};
+	sprd_scale {
+		compatible = "sprd,sprd_scale";
+	};
+	sprd_rotation {
+		compatible = "sprd,sprd_rotation";
+	};
+	sprd_sensor {
+		compatible  = "sprd,sprd_sensor";
+		reg = <0x60c00000 0x100000>;
+		gpios = <&d_gpio_gpio 45 0   /*main reset*/
+			&d_gpio_gpio 47 0    /*main powerdown*/
+			&d_gpio_gpio 44 0    /*sub reset*/
+			&d_gpio_gpio 46 0    /*sub powerdown*/
+		        &d_gpio_gpio 0 0
+		        &d_gpio_gpio 0 0
+		        &d_gpio_gpio 0 0
+		        &d_gpio_gpio 0 0>;
+		clock-names ="clk_mm_i","clk_sensor","clk_ccir","clk_dcam","clk_dcam_mipi";
+		clocks = <&clk_mm>,<&clk_sensor>,<&clk_ccir>,<&clk_dcam>,<&clk_dcam_mipi>;
+	};
+	sprd_isp {
+		compatible  = "sprd,sprd_isp";
+		reg = <0x60a00000 0x100000>;
+		clock-names = "clk_mm_i","clk_isp";
+		clocks = <&clk_mm>, <&clk_isp>;
+	};
+	sprd_dma_copy {
+		compatible  = "sprd,sprd_dma_copy";
+	};
+
+	gsp:gsp@20a00000 {
+		compatible = "sprd,gsp";
+		reg = <0x20a00000 0x1000>;
+		interrupts = <0 51 0x0>;
+		clock-names = "clk_gsp", "clk_gsp_emc", "clk_gsp_parent", "clk_aon_apb";
+		clocks = <&clk_gsp>, <&clk_gsp_emc>, <&clk_256m>, <&clk_aon_apb>;
+		gsp_mmu_ctrl_base = <0x20b08000>;
+	};
+
+	sprd_fm: sprd_fm@40270000{
+		compatible  = "sprd,sprd_fm";
+		reg = <0x40270000 0x1000>;
+	};
+
+	usb: usb@20200000 {
+		compatible  = "sprd,usb";
+		interrupts = <0 55 0x0>;
+		vbus-gpios = <&a_eic_gpio 0 0>;
+		id-gpios = <&d_gpio_gpio 90 0>;
+		reg = <0x20200000 0x1000>;
+		tune_value = <0x078e33>;
+		usb-supply = <&vddusb>;
+		phy-type = "usb20_synops_phy";
+		#address-cells = <1>;
+		#size-cells = <0>;
+	};
+	sprd_thermal: thermal@402F0000{
+		compatible = "sprd,ddie-thermal";
+                interrupts = <0 26 0x0>;
+                reg = <0x402f0000 0x1000>;
+		sensor_arm {
+		id = <0>;
+		temp-inteval=<2>;
+		thermal-name = "sprd_arm_thm";
+		trip0-temp-active = <31000>;
+		trip0-type = "active";
+		trip0-temp-lowoff = <0>;
+		trip0-cdev-num = <1>;
+		trip0-cdev-name0 = "thermal-cpufreq-0";
+	        trip1-temp-active = <56000>;
+		trip1-type = "active";
+		trip1-temp-lowoff = <29000>;
+                trip1-cdev-num = <1>;
+		trip1-cdev-name0 = "thermal-cpufreq-0";
+		trip2-temp-active = <60000>;
+		trip2-type = "active";
+		trip2-temp-lowoff = <46000>;
+                trip2-cdev-num = <1>;
+		trip2-cdev-name0 = "thermal-cpufreq-0";
+                trip3-temp-active = <90000>;
+		trip3-type = "active";
+		trip3-temp-lowoff = <50000>;
+                trip3-cdev-num = <1>;
+		trip3-cdev-name0 = "thermal-cpufreq-0";
+		trip4-temp-active = <115000>;
+		trip4-type = "critical";
+		trip4-temp-lowoff = <80000>;
+                trip4-cdev-num = <1>;
+		trip4-cdev-name0 = "thermal-cpufreq-0";
+                trip-points-critical = <119000>;
+		trip-num = <6>;
+		};
+	 };
+	touch_booster {
+		status = "okay";
+		compatible = "touch_booster";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		touch_name = "touch";
+		little_freq = <1300000>;
+		boostpause = <500>;
+	};
+	sprd_cpu_cooling{
+		compatible = "sprd,sprd-cpu-cooling";
+		id = <0>;
+	};
+	spi0: spi@70a00000 {
+		compatible  = "sprd,sprd-spi";
+		interrupts = <0 7 0x0>;
+		reg = <0x70a00000 0x1000>;
+		clock-names = "clk_spi0";
+		#address-cells = <1>;
+		#size-cells = <0>;
+	};
+	spi1: spi@70b00000 {
+		compatible  = "sprd,sprd-spi";
+		interrupts = <0 8 0x0>;
+		reg = <0x70b00000 0x1000>;
+		clock-names = "clk_spi1";
+		#address-cells = <1>;
+		#size-cells = <0>;
+	};
+	spi2: spi@70c00000 {
+		compatible  = "sprd,sprd-spi";
+		interrupts = <0 9 0x0>;
+		reg = <0x70c00000 0x1000>;
+		clock-names = "clk_spi2";
+		#address-cells = <1>;
+		#size-cells = <0>;
+	};
+	dma: dma-controller@20100000 {
+		compatible = "sprd,sharkl64-dma";
+		#dma-cells = <1>;
+		#dma-channels = <64>;
+		aon_offset = <32>;
+		reg = <0 0x20100000 0 0x4000>,	        /* ap reg */
+			<0 0x40100000 0 0x4000>;	/* aon reg */
+		interrupts = <0 50 0x0>,		/* ap int */
+				<0 70 0x0>;		/* aon int */
+	};
+	adc: adc@40038300 {
+		compatible = "sprd,sprd-adc";
+		reg = <0x40038300 0x400>;
+	};
+	hwspinlock0: hwspinlock0@20d00000 {
+		compatible = "sprd,sprd-hwspinlock";
+		reg = <0x20d00000 0x1000>;
+	};
+	hwspinlock1: hwspinlock1@40060000 {
+		compatible = "sprd,sprd-hwspinlock";
+		reg = <0x40060000 0x1000>;
+	};
+	itm_wlan{
+		compatible = "sprd,itm_wlan";
+	};
+	dmac: dmac@20100000 {
+		compatible  = "sprd,sprd-dma";
+		interrupts = <0 50 0x0>;
+		reg = <0 0x20100000 0 0x4000>;
+	};
+	gpu@60000000 {
+		compatible = "arm,mali-400", "arm,mali-utgard";
+		reg = <0x60000000 0x10000>;
+		interrupts = <0 39 0>, <0 39 0>, <0 39 0>, <0 39 0>, <0 39 0>, <0 39 0>, <0 39 0>;
+		interrupt-names = "IRQGP", "IRQGPMMU", "IRQPP0", "IRQPPMMU0", "IRQPP1", "IRQPPMMU1", "IRQPMU";
+
+		pmu_domain_config = <0x1000 0x1000 0x1000 0x0 0x0 0x0 0x0 0x0 0x0 0x1000 0x0 0x0>;
+		pmu_switch_delay = <0xffff>;
+
+		clocks = <&clk_gpu_axi>,<&clk_gpu>,<&clk_153m6>,<&clk_192m>,<&clk_256m>,<&clk_307m2>,<&clk_384m>,<&clk_512m>,<&clk_614m4>;
+		clock-names = "clk_gpu_axi","clk_gpu","clk_153m6","clk_192m","clk_256m","clk_307m2","clk_384m","clk_512m","clk_614m4";
+
+		freq-list-len = <5>;
+		freq-lists = <153600 2 1>, <256000 4 1>, <384000 6 1>, <512000 7 1>, <614400 8 1>;
+		freq-default = <1>;
+		freq-9 = <4>;
+		freq-8 = <4>;
+		freq-7 = <1>;
+		freq-5 = <0>;
+		freq-range-max = <4>;
+		freq-range-min = <1>;
+	};
+	ion {
+		compatible = "sprd,ion-sprd";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		sprd,ion-heap@1 {
+			reg = <1>;			/* system */
+			reg-names = "ion_heap_system";
+			sprd,ion-heap-type = <0>;	/* system */
+			sprd,ion-heap-mem = <0x0 0x0>;
+		};
+
+		sprd,ion-heap@2 {
+			reg = <2>;			/* mm */
+			reg-names = "ion_heap_carveout_mm";
+			sprd,ion-heap-type = <0>;	/* carveout mm */
+			sprd,ion-heap-mem = <0x98800000 0x7100000>;
+		};
+
+		sprd,ion-heap@3 {
+			reg = <3>;			/* overlay */
+			reg-names = "ion_heap_carveout_overlay";
+			sprd,ion-heap-type = <2>;	/* carveout */
+			sprd,ion-heap-mem = <0x9F800000 0x800000>;      /* 480*854*4*2, 8K alignment */
+		};
+	};
+	sprd_iommu0:sprd_iommu@20b00000 {
+		compatible  = "sprd,sprd_iommu";//gsp
+		func-name = "sprd_iommu_gsp";
+		reg = <0x10000000 0x2000000>, //iova
+			<0x20b00000 0x8000>,  //pgt
+			<0x20b08000 0x8000>;  //ctrl_reg
+		reg_name = "iova","pgt","ctrl_reg";
+		clock-names = "clk_gsp_emc","clk_153m6","clk_gsp";
+		clocks = <&clk_gsp_emc>, <&clk_153m6>,<&clk_gsp>;
+		status = "ok";
+	};
+	sprd_iommu1:sprd_iommu@60f00000 {
+		compatible  = "sprd,sprd_iommu";//mm
+		func-name = "sprd_iommu_mm";
+		reg = <0x20000000 0x8000000>,   //iova
+			<0x60f00000 0x20000>,     //pgt
+			<0x60f20000 0x2000>;      //ctrl_reg
+		reg_name = "iova","pgt","ctrl_reg";
+		clock-names = "clk_mmu","clk_mm_i","clk_mm_axi";
+		clocks = <&clk_mmu>,<&clk_mm>,<&clk_mm_axi>;
+		status = "ok";
+	};
+	sprd-io-base {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges = <0 0 0x80000000>;
+		ahb {
+			compatible = "sprd,ahb";
+			reg = <0x20e00000 0x10000>;
+		};
+		hwlock0 {
+			compatible = "sprd,hwlock0";
+			reg = <0x20d00000 0x1000>;
+		};
+		aonapb {
+			compatible = "sprd,aonapb";
+			reg = <0x402e0000 0x10000>;
+		};
+		apbreg {
+			compatible = "sprd,apbreg";
+			reg = <0x71300000 0x10000>;
+		};
+		pmu {
+			compatible = "sprd,pmu";
+			reg = <0x402b0000 0x10000>;
+		};
+		mmahb {
+			compatible = "sprd,mmahb";
+			reg = <0x60d00000 0x4000>;
+		};
+		mmckg {
+			compatible = "sprd,mmckg";
+			reg = <0x60e00000 0x1000>;
+		};
+		codecahb {
+			compatible = "sprd,codecahb";
+			reg = <0x62000000 0x1000>;
+		};
+		adislave {
+			compatible = "sprd,adislave";
+			reg = <0x40038000 0x1000>;
+		};
+		gpuapb {
+			compatible = "sprd,gpuapb";
+			reg = <0x60100000 0x1000>;
+		};
+		apbckg {
+			compatible = "sprd,apbckg";
+			reg = <0x21500000 0x1000>;
+		};
+		aonckg {
+			compatible = "sprd,aonckg";
+			reg = <0x402d0000 0x1000>;
+		};
+		gpuckg {
+			compatible = "sprd,gpuckg";
+			reg = <0x60200000 0x1000>;
+		};
+		core {
+			compatible = "sprd,core";
+			reg = <0x12000000 0x10000>;
+		};
+		int {
+			compatible = "sprd,int";
+			reg = <0x40200000 0x1000>;
+		};
+		intc0 {
+			compatible = "sprd,intc0";
+			reg = <0x71400000 0x1000>;
+		};
+		intc1 {
+			compatible = "sprd,intc1";
+			reg = <0x71500000 0x1000>;
+		};
+		intc2 {
+			compatible = "sprd,intc2";
+			reg = <0x71600000 0x1000>;
+		};
+		intc3 {
+			compatible = "sprd,intc3";
+			reg = <0x71700000 0x1000>;
+		};
+		send_mbox {
+			compatible = "sprd,send_mbox";
+			reg = <0x400a0000 0x1000>;
+		};
+		recv_mbox {
+			compatible = "sprd,recv_mbox";
+			reg = <0x400a8000 0x1000>;
+		};
+		uidefuse {
+			compatible = "sprd,uidefuse";
+			reg = <0x40240000 0x1000>;
+		};
+		ipi {
+			compatible = "sprd,ipi";
+			reg = <0x402c0000 0x1000>;
+		};
+		syscnt {
+			compatible = "sprd,syscnt";
+			reg = <0x40230000 0x1000>;
+		};
+		dma0 {
+			compatible = "sprd,dma0";
+			reg = <0x20100000 0x4000>;
+		};
+		pub {
+			compatible = "sprd,pub";
+			reg = <0x30020000 0x10000>;
+		};
+		pin {
+			compatible = "sprd,pin";
+			reg = <0x402a0000 0x1000>;
+		};
+		mailbox {
+			compatible = "sprd,mailbox";
+			reg = <0x400a0000 0x10000>;
+		};
+		axibm0 {
+			compatible  = "sprd,axibm0";
+			reg = <0 0x30040000 0 0x20000>;
+			interrupts = <0 86 0x0>;
+		};
+	};
+
+	sprd_bm {
+		compatible = "sprd,sprd_bm";
+		reg = <0x30040000 0xA0000>,
+		<0x20F00000 0x300000>;
+		interrupts = <0 86 0x0>;
+		sprd,bm_status = <1>;
+		sprd,bm_count = <10 11>;
+		sprd,cpu_chn = <0 1>;
+		sprd,disp_chn = <1 1>;
+		sprd,gpu_chn = <2 1>;
+		sprd,ap_zip_chn = <3 1>;
+		sprd,mm_chn = <4 1>;
+		sprd,cp0_arm0_1_chn = <5 1>;
+		sprd,cp0_dsp_chn = <6 0>;
+		sprd,cp1_lte_chn = <7 1>;
+		sprd,cp1_dsp_chn = <8 1>;
+		sprd,cp1_arm_chn = <9 1>;
+		sprd,ap_dap_chn = <0 0>;
+		sprd,ap_cpu_chn = <0 1>;
+		sprd,ap_dma_r_chn = <0 2>;
+		sprd,ap_dma_w_chn = <0 3>;
+		sprd,ap_sdio_0_chn = <1 0>;
+		sprd,ap_sdio_1_chn = <1 1>;
+		sprd,ap_sdio_2_chn = <1 2>;
+		sprd,ap_emmc_chn = <1 3>;
+		sprd,ap_nandc_chn = <2 0>;
+		sprd,ap_otg_chn = <2 1>;
+		sprd,ap_hsic_chn = <2 2>;
+	};
+
+	wdt@40290000 {
+		compatible = "sprd,sprd-wdt";
+		reg = <0x40290000 0x1000>,
+			<0x40310000 0x1000>;
+		interrupts = <0 124 0x0>;
+	};
+
+	sprd-marlin {
+		compatible = "sprd,marlin";
+		gpios = <&d_gpio_gpio 97 0 /*marlin gpio0 */
+			&d_gpio_gpio 132 0  /*marlin gpio1 */
+			&d_gpio_gpio 133 0  /*marlin gpio2 */
+			&d_gpio_gpio 94 0  /*marlin gpio3 */
+			&d_gpio_gpio 122 0>;  /*marlin reset*/
+		cp-rfctl-offset = <0x244>;  /*coex func. marlin gpio3*/
+		vdd-download = "vddcon"; /*vdd 1.6v*/
+		vdd-pa = "vddwifipa"; /*vdd 3.3v*/
+		clk-name = "clk_aux0"; /*clk 32k*/
+		sdhci-name = "sdio_wifi";
+	};
+	sprd-ge2 {
+		compatible = "sprd,ge2";
+		gpios = <&d_gpio_gpio 130 0>; /*ge2 chip_en*/
+		vdd-lna = "vddsim2"; /*vdd lna*/
+	};
+	sprd_sysdump {
+		compatible = "sprd,sysdump";
+		magic-addr = < 0x85500000  0x100000>;
+		ram = &memory;
+		modem = <0x89600000 0x4C00000>;/* e.g. lte modem*/
+		iomem = <0x40290000 0x1000>;/* e.g. wdt*/
+	};
+	crypto_engine: crypto_engine@62010000 {
+		compatible  = "sprd,sprd-aes";
+		interrupts = <0 43 0x0>;
+		reg = <0x62010000 0x100>;
+		clocks = <&clk_aes>, <&clk_mm>, <&clk_mm_axi>;
+		clock-names = "apb_clk", "mm_clk", "mm_axi_clk";
+		power-regs-info = <0x402b01a4 0 0x402b00c4 0x0000000f>;
+	};
+
+	trusty {
+		compatible = "android,trusty-smc-v1";
+		ranges;
+		#address-cells = <0x2>;
+		#size-cells = <0x2>;
+
+		irq {
+			compatible = "android,trusty-irq-v1";
+		};
+/*
+		fiq {
+			compatible = "android,trusty-fiq-v1";
+			ranges;
+			#address-cells = <0x2>;
+			#size-cells = <0x2>;
+
+			fiq-debugger {
+				compatible = "android,trusty-fiq-v1-tegra-uart";
+				reg = <0x0 0x70006000 0x0 0x40>;
+				interrupts = <0x0 0x24 0x4 0x0 0x10 0x4>;
+				interrupt-names = "fiq", "signal";
+			};
+		};
+*/
+		virtio {
+			compatible = "android,trusty-virtio-v1";
+		};
+
+		log {
+			compatible = "android,trusty-log-v1";
+		};
+	};
+};
+
+&vbc_r2p0 {
+	status = "okay";
+};
+
+&sprd_codec {
+	status = "okay";
+	sprd,audio_power_ver = <4>;
+};
+
+&i2s0 {
+	sprd,config_type = "pcm";
+	sprd,slave_timeout = <0xF11>;
+	sprd,_hw_port = <0>;
+	sprd,fs = <8000>;
+	sprd,bus_type = <1>;
+	sprd,rtx_mode = <3>;
+	sprd,byte_per_chan = <1>;
+	sprd,slave_mode = <0>;
+	sprd,lsb = <0>;
+	sprd,lrck = <0>;
+	sprd,low_for_left = <1>;
+	sprd,clk_inv = <0>;
+	sprd,pcm_short_frame = <1>;
+	sprd,pcm_slot = <0x1>;
+	sprd,pcm_cycle = <1>;
+	sprd,tx_watermark = <12>;
+	sprd,rx_watermark = <20>;
+	status = "okay";
+};
+
+&i2s1 {
+	status = "okay";
+};
+
+&i2s2 {
+	status = "okay";
+};
+
+&i2s3 {
+	status = "okay";
+};
+
+&i2s_sound {
+	sprd,i2s = <&i2s0>, <&i2s1>, <&i2s2>, <&i2s3>;
+};
+
+&sprd_battery {
+	gpios = <&a_eic_gpio 0 0        /* chg int */
+		&a_eic_gpio 4 0        /* cv state */
+		&a_eic_gpio 6 0		/* chg ovi */
+		&a_eic_gpio 9 0>;	/* battery detect */
+	chg-end-vol-h = <4365>;
+	chg-end-vol-pure = <4340>;
+	chg-end-vol-l = <4330>;
+	chg-bat-safety-vol = <4430>;
+	rechg-vol = <4260>;
+	adp-cdp-cur = <700>;
+	adp-dcp-cur = <1150>;
+	adp-sdp-cur = <450>;
+	chg-end-cur = <100>;
+	chg-polling-time = <15>;
+	fgu-mode = <0>;
+	alm-soc = <5>;
+	alm-vol = <3500>;
+	soft-vbat-uvlo = <3100>;
+	rint = <200>;
+	cnom = <2100>;
+	rsense-real = <200>;
+	rsense-spec = <200>;
+	relax-current = <50>;
+	fgu-cal-ajust = <0>;
+	ocv-tab-size = <21>;
+	ocv-tab-vol = <4318 4254 4198 4145 4094 4052 3987 3955 3902 3865 3838 3817 3800 3785 3769 3752 3733 3706 3691 3588 3400>;
+	ocv-tab-cap = <100  95   90   85   80   75   70   65   60   55   50   45   40   35   30   25   20   15   10   5    0>;
+};
+&vddrf{
+	vol-tagert = <1500000>;/*kernel hide_offset =  hide-offset - 1000*/
+};
+&vddrf0{
+	vol-tagert = <1800000>;/*kernel hide_offset =  hide-offset - 1000*/
+};
Index: kernel/arch/arm/boot/dts/sprd-scx35l_sp9832a_7c10_volte.dts
===================================================================
--- kernel/arch/arm/boot/dts/sprd-scx35l_sp9832a_7c10_volte.dts	(revision 0)
+++ kernel/arch/arm/boot/dts/sprd-scx35l_sp9832a_7c10_volte.dts	(revision 182225)
@@ -0,0 +1,1142 @@
+/*
+* Copyright (C) 2013 Spreadtrum Communication Incorporated
+*               http://www.spreadtrum.com/
+*
+* This program is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License version 2 as
+* published by the Free Software Foundation.
+*/
+/dts-v1/;
+
+/* memory reserved for fb */
+/memreserve/ 0x9ED74000 0xA8C000; /* 480*854*4*3, 4K alignment*/
+
+/* memory reserved for ION */
+/memreserve/ 0x9F800000 0x800000; /* 480*854*4*2, 8K alignment */
+
+/* For MPU remapping buffer */
+/memreserve/ 0xBD9FF000 0x00001000; /* 4K alignment*/
+
+/* memory reserved for tos */
+/memreserve/ 0xBDA00000 0x02000000; /* 1M alignment*/
+
+/* memory reserved for VMM  */
+/memreserve/ 0xBFA00000 0x600000; /* 6M, 2M alignment */
+
+/include/ "sprd-sharkl-modem-volte.dtsi"
+/include/ "scx35l-sp9830ied-clocks.dtsi"
+/include/ "sc2723-regulators.dtsi"
+/include/ "sprd-sound.dtsi"
+/include/ "sprd-battery.dtsi"
+
+/ {
+	model = "Spreadtrum SP8835EB board";
+	compatible = "sprd,sp8835eb";
+	sprd,sc-id = <8830 1 0x20000>;
+	#address-cells = <1>;
+	#size-cells = <1>;
+	interrupt-parent = <&gic>;
+
+	chosen {
+		bootargs = "loglevel=1 console=ttyS1,115200n8 init=/init root=/dev/ram0 rw androidboot.hardware=sp9832a_7c10";
+		linux,initrd-start = <0x85500000>;
+		linux,initrd-end   = <0x855a3212>;
+	};
+
+	memory: memory {
+		device_type = "memory";
+		reg = <0x80000000 0x40000000>;
+	};
+
+	aliases {
+		serial0 = &uart0;
+		serial1 = &uart1;
+		serial2 = &uart2;
+		serial3 = &uart3;
+		i2c0 = &i2c0;
+		i2c1 = &i2c1;
+		i2c2 = &i2c2;
+		i2c3 = &i2c3;
+		lcd0 = &fb0;
+		spi0 = &spi0;
+		spi1 = &spi1;
+		spi2 = &spi2;
+		hwspinlock0 = &hwspinlock0;
+		hwspinlock1 = &hwspinlock1;
+	};
+
+	cpus {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		cpu@f00 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <0xf00>;
+		};
+
+		cpu@f01 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <0xf01>;
+		};
+
+		cpu@f02 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <0xf02>;
+		};
+
+		cpu@f03 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <0xf03>;
+		};
+	};
+
+	pmu {
+		compatible = "arm,cortex-a7-pmu";
+		interrupts = <0 92 0x0>,
+				<0 93 0x0>,
+				<0 94 0x0>,
+				<0 95 0x0>;
+	};
+
+	gic: interrupt-controller@12001000 {
+		compatible = "arm,cortex-a15-gic", "arm,cortex-a9-gic";
+		#interrupt-cells = <3>;
+		#address-cells = <0>;
+		interrupt-controller;
+		reg = <0x12001000 0x1000>,
+			<0x12002000 0x1000>;
+	};
+
+	uart0: uart@70000000 {
+		compatible  = "sprd,serial";
+		interrupts = <0 2 0x0>;
+		reg = <0x70000000 0x1000>;
+		clock-names = "clk_uart0";
+		clocks = <&clock 60>;
+		sprdclk = <48000000>;
+		sprdwaketype = "BT_RTS_HIGH_WHEN_SLEEP";
+	};
+	uart1: uart@70100000 {
+		compatible  = "sprd,serial";
+		interrupts = <0 3 0x0>;
+		reg = <0x70100000 0x1000>;
+		clock-names = "clk_uart1";
+		clocks = <&clock 61>;
+		sprdclk = <26000000>;
+		sprdwaketype = "BT_RTS_HIGH_WHEN_SLEEP";
+	};
+	uart2: uart@70200000 {
+		compatible  = "sprd,serial";
+		interrupts = <0 4 0x0>;
+		reg = <0x70200000 0x1000>;
+		clock-names = "clk_uart2";
+		clocks = <&clock 62>;
+		sprdclk = <26000000>;
+		sprdwaketype = "BT_RTS_HIGH_WHEN_SLEEP";
+	};
+	uart3: uart@70300000 {
+		compatible  = "sprd,serial";
+		interrupts = <0 5 0x0>;
+		reg = <0x70300000 0x1000>;
+		clock-names = "clk_uart3";
+		clocks = <&clock 63>;
+		sprdclk = <26000000>;
+		sprdwaketype = "BT_RTS_HIGH_WHEN_SLEEP";
+	};
+
+	timer {
+		compatible  = "sprd,scx35-timer";
+		reg =	<0x40230000 0x1000>, /* SYSCNT */
+			<0x40050000 0x1000>, /* GPTIMER0 */
+			<0x40220000 0x1000>, /* APTIMER0 */
+			<0x40320000 0x1000>, /* APTIMER1 */
+			<0x40330000 0x1000>; /* APTIMER2 */
+		interrupts = <0 118 0x0>,
+				<0 28 0x0>,
+				<0 29 0x0>,
+				<0 119 0x0>,
+				<0 121 0x0>,
+				<0 31 0x0>;
+	};
+	clock: clockdevice {
+		compatible = "sprd,scx35-clock";
+		#clock-cells = <1>;
+	};
+	d_eic_gpio: gpio@40210000 {
+		compatible = "sprd,d-eic-gpio";
+		reg = <0x40210000 0x1000>;
+		gpio-controller;
+		interrupt-controller;
+		#interrupt-cells = <2>;
+		#gpio-cells = <2>;
+		gpiobase = <288>;
+		ngpios = <16>;
+		interrupts = <0 37 0x0>;
+	};
+	d_gpio_gpio: gpio@40280000 {
+		compatible = "sprd,d-gpio-gpio";
+		reg = <0x40280000 0x1000>;
+		gpio-controller;
+		interrupt-controller;
+		#interrupt-cells = <2>;
+		#gpio-cells = <2>;
+		gpiobase = <0>;
+		ngpios = <256>;
+		interrupts = <0 35 0x0>;
+	};
+
+	pinctrl {
+		compatible = "sprd,pinctrl";
+		reg = <0x402a0000 0x1000>;
+		pwr_domain = "vdd28",
+			"vdd18",
+			"vddsim0",
+			"vddsim1",
+			"vddsim2",
+			"vddsdio",
+			"vdd18";
+		ctrl_desc = <0x10 0 1
+			0x10 1 1
+			0x10 2 1
+			0x10 3 1
+			0x10 4 1
+			0x10 5 1
+			0x10 6 1>;
+	};
+
+	sdios{
+		#address-cells = <2>;
+		#size-cells = <2>;
+		ranges;
+		sdio3: sdio@20600000{
+			compatible  = "sprd,sdhost-3.0";
+			reg = <0 0x20600000 0 0x1000>;
+			interrupts = <0 60 0x0>;
+			sprd,name = "sdio_emmc";
+			/*detect_gpio = <-1>; */
+			SD_Pwr_Name = "vddemmccore";
+			_1_8V_signal_Name = "vddgen0";
+			signal_default_Voltage = <1800000>;
+			ocr_avail = <0x00040000>;
+			clocks = <&clk_emmc>, <&clk_384m>;
+			base_clk = <384000000>;
+			bus-width = <8>;
+			caps = <0xC00F8D47>;
+			caps2 = <0x202>;
+			pm_caps = <0x4>;
+			writeDelay = <0x34>;
+			readPosDelay = <0x8>;
+			readNegDelay = <0x8>;
+		};
+
+		sdio0: sdio@20300000{
+			compatible  = "sprd,sdhost-3.0";
+			reg = <0 0x20300000 0 0x1000>;
+			interrupts = <0 57 0x0>;
+			sprd,name = "sdio_sd";
+			detect_gpio = <137>;
+			SD_Pwr_Name = "vddsdcore";
+			_1_8V_signal_Name = "vddsdio";
+			signal_default_Voltage = <3000000>;
+			ocr_avail = <0x00040000>;
+			clocks = <&clk_sdio0>, <&clk_384m>;
+			base_clk = <384000000>;
+			bus-width = <4>;
+			caps = <0xC0020407>;
+			caps2 = <0x200>;
+			pm_caps = <0x4>;
+			writeDelay = <0x3>;
+			readPosDelay = <0x3>;
+			readNegDelay = <0x3>;
+		};
+
+
+		sdio1: sdio@20400000{
+			compatible  = "sprd,sdhost-3.0";
+			reg = <0 0x20400000 0 0x1000>;
+			interrupts = <0 58 0x0>;
+			sprd,name = "sdio_wifi";
+			/* detect_gpio = <-1>; */
+			/* SD_Pwr_Name = "vddsdcore"; */
+			/* _1_8V_signal_Name = "vddsdio";*/
+			/* signal_default_Voltage = <3000000>; */
+			ocr_avail = <0x00360080>;
+			clocks = <&clk_sdio1>, <&clk_128m>;
+			base_clk = <128000000>;
+			bus-width = <4>;
+			caps = <0xC00FA407>;
+			caps2 = <0x0>;
+			pm_caps = <0x5>;
+			writeDelay = <0x03>;
+			readPosDelay = <0x03>;
+			readNegDelay = <0x03>;
+		};
+	};
+
+	fb0: fb@20800000 {
+		compatible = "sprd,sprdfb";
+		reg = <0x20800000 0x1000>,<0x21800000 0x1000>;
+		interrupts = <0 46 0x0>,<0 48 0x0>, <0 49 0x0>;
+		clock-names = "dispc_clk_parent", "dispc_dbi_clk_parent", "dispc_dpi_clk_parent", "dispc_emc_clk_parent", "dispc_clk", "dispc_dbi_clk", "dispc_dpi_clk", "dispc_emc_clk", "fb_spi_clock", "fb_spi_clock_parent";
+		clocks = <&clk_256m>, <&clk_256m>, <&clk_384m>, <&clk_aon_apb>, <&clk_dispc0>, <&clk_dispc0_dbi>, <&clk_dispc0_dpi>, <&clk_disp_emc>, <&clk_spi2>, <&ext_26m>;
+		clock-src = <256000000 256000000 384000000>;
+		dpi_clk_div = <7>;
+		sprd,fb_use_reservemem;
+		sprd,fb_mem = <0x9ED74000 0xA8C000>;
+	};
+
+	adic:adic {
+		compatible = "sprd,adi";
+		reg = <0x40030000 0x10000>;
+	};
+	adi: adi_bus {
+		compatible = "sprd,adi-bus";
+		interrupts = <0 38 0x0>;
+		reg = <0x40038000 0x1000>;
+		interrupt-controller;
+		sprd,irqnums = <11>;
+		#interrupt-cells = <2>;
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges = <0x40 0x40038040 0x40>,
+			<0x80 0x40038080 0x80>,
+			<0x100 0x40038100 0x80>,
+			<0x480 0x40038480 0x80>;
+		sprd_backlight {
+			compatible = "sprd,sprd_backlight";
+			start = <3>;
+			end = <3>;
+			flags = <0x100>;
+		};
+		keyboard_backlight {
+			compatible = "sprd,keyboard-backlight";
+		};
+		sprd_kpled_2723 {
+			compatible = "sprd,sprd-kpled-2723";
+			brightness_max = <255>;
+			brightness_min = <0>;
+			run_mode = <1>;
+		};
+
+		leds_sprd_bltc_rgb {
+			compatible = "sprd,sprd-leds-bltc-rgb";
+			reg = <0x440 0x40>,
+			<0x800 0xff>;
+		};
+
+		watchdog@40{
+			compatible = "sprd,watchdog";
+			reg = <0x40 0x40>;
+			interrupts = <3 0x0>;
+		};
+		rtc@80 {
+			compatible = "sprd,rtc";
+			reg = <0x80 0x80>;
+			interrupts = <2 0x0>;
+		};
+		a_eic_gpio: gpio@100 {
+			compatible = "sprd,a-eic-gpio";
+			reg = <0x100 0x80>; /* adi reg */
+			gpio-controller;
+			interrupt-controller;
+			#interrupt-cells = <2>;
+			#gpio-cells = <2>;
+			gpiobase = <304>;
+			ngpios = <16>;
+			interrupt-parent = <&adi>;
+			interrupts = <5 0x0>; /* ext irq 5 */
+		};
+		sprd_eic_keys {
+			compatible = "sprd,sprd-eic-keys";
+			input-name = "sprd-eic-keys";
+			key_power {
+				label = "Power Key";
+				linux,code = <116>;
+				gpios = <&a_eic_gpio 2 0>;
+				debounce-interval = <2>;
+				gpio-key,wakeup;
+			};
+/*
+			key_volumeup {
+				label = "Volumeup Key";
+				linux,code = <115>;
+				gpios = <&a_eic_gpio 10 0>;
+				debounce-interval = <2>;
+				gpio-key,wakeup;
+			};
+*/
+		};
+		headset_sprd_sc2723 {
+			compatible = "sprd,headset_sprd_sc2723";
+			gpio_switch = <0>;
+			gpio_detect = <312>;
+			gpio_button = <307>;
+			irq_trigger_level_detect = <1>;
+			irq_trigger_level_button = <1>;
+			adc_threshold_3pole_detect = <300>;
+			adc_threshold_4pole_detect = <3270>;
+			irq_threshold_buttont = <6>;
+			voltage_headmicbias = <3000000>;
+			nbuttons = <3>;
+			headset_buttons_media {
+				adc_min = <0>;
+				adc_max = <420>;
+				code = <226>;
+				type = <0>;
+			};
+
+			headset_buttons_up {
+				adc_min = <450>;
+				adc_max = <880>;
+				code = <115>;
+				type = <0>;
+			};
+			headset_buttons_down {
+				adc_min = <900>;
+				adc_max =<2300>;
+				code = <114>;
+				type = <0>;
+			};
+		};
+	};
+	sprd_pwm_bl {
+		compatible = "sprd,sprd_pwm_bl";
+		reg = <0x40260000 0xf>;
+		brightness_max = <255>;
+		brightness_min = <0>;
+		pwm_index = <2>;
+		gpio_ctrl_pin = <0>;
+		gpio_active_level = <0>;
+	};
+	 panel_cabc_bl {
+		compatible = "sprd,panel_cabc_bl";
+	};
+	gpio_keys {
+		compatible = "gpio-keys";
+		input-name = "sprd-gpio-keys";
+		key_volumedown {
+			label = "Volumedown Key";
+			linux,code = <114>;
+			gpios = <&d_gpio_gpio 124 1>;
+			debounce-interval = <2>;
+			gpio-key,wakeup;
+		};
+
+		key_volumeup {
+			label = "Volumeup Key";
+			linux,code = <115>;
+			gpios = <&d_gpio_gpio 125 1>;
+			debounce-interval = <2>;
+			gpio-key,wakeup;
+		};
+/*
+		key_camerafocus {
+			label = "Camerafocus Key";
+			linux,code = <0x210>;
+			gpios = <&d_gpio_gpio 125 1>;
+			debounce-interval = <2>;
+			gpio-key,wakeup;
+		};
+		key_camera {
+			label = "Camera Key";
+			linux,code = <212>;
+			gpios = <&d_gpio_gpio 126 1>;
+			debounce-interval = <2>;
+			gpio-key,wakeup;
+		};
+*/
+	};
+	rfkill {
+		compatible = "broadcom,rfkill";
+		gpios = <&d_gpio_gpio 131 0  /* power */
+			&d_gpio_gpio 122 0>;  /* reset */
+	};
+        bluesleep {
+               compatible = "broadcom,bluesleep";
+               bt-wake-gpio = <&d_gpio_gpio 132 0>;  /*GPIO_AP2BT_WAKE*/
+               host-wake-gpio = <&d_gpio_gpio 133 0>; /*GPIO_BT2AP_WAKE*/
+         };
+
+	sprd_vsp@60900000 {
+		compatible = "sprd,sprd_vsp";
+		reg = <0x60900000 0xc000>;
+		interrupts = <0 43 0x0>;
+		clock-names = "clk_mm_i", "clk_vsp", "clk_mm_axi";
+		clocks = <&clk_mm>, <&clk_vsp>, <&clk_mm_axi>;
+		version = <3>;
+	};
+	sprd_jpg {
+		compatible = "sprd,sprd_jpg";
+		reg = <0x60b00000 0x8000>;
+		interrupts = <0 42 0x0>;
+		clock-names = "clk_mm_i","clk_jpg";
+		clocks = <&clk_mm>, <&clk_jpg>;
+	};
+
+	 sprd_vpp@61000000{
+                 compatible = "sprd,sprd_vpp";
+                 reg = <0x61000000 0x4000>;
+                 interrupts = <0 43 0x0>;
+		clock-names = "clk_mm","clk_vpp";
+		clocks = <&clk_mm>, <&clk_vpp>;
+         };
+
+	 sprd_coda7l@62100000{
+		compatible = "sprd,sprd_coda7l";
+		reg = <0x62100000 0x4000>;
+		interrupts = <0 43 0x0>;
+		clock-names = "clk_mm_i","clk_coda7_axi","clk_coda7_cc","clk_coda7_apb";
+		clocks = <&clk_mm>, <&clk_coda7_axi>, <&clk_coda7_cc>, <&clk_coda7_apb>;
+		power-regs-info = <0x402b01a4 0 0x402b00c4 0x0000000f>;
+         };
+
+	i2c0: i2c@70500000 {
+		compatible = "sprd,i2c";
+		interrupts = <0 11 0x0>;
+		reg = <0x70500000 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		sensor_main@0x3c {
+			compatible = "sprd,sensor_main";
+			reg = <0x3c>;
+		};
+		sensor_sub@0x21 {
+			compatible = "sprd,sensor_sub";
+			reg = <0x21>;
+		};
+	};
+	i2c1: i2c@70600000 {
+		compatible = "sprd,i2c";
+		interrupts = <0 12 0x0>;
+		reg = <0x70600000 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		fan54015_chg@0x6a {
+			compatible = "fairchild,fan54015_chg";
+			reg = <0x6a>;
+		};
+	};
+	i2c2: i2c@70700000 {
+		compatible = "sprd,i2c";
+		interrupts = <0 13 0x0>;
+		reg = <0x70700000 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+/*		lis3dh_acc@18{
+			compatible = "ST,lis3dh_acc";
+			reg = <0x18>;
+			gpios = <&d_gpio_gpio 139 0>;
+			poll_interval = <10>;
+			min_interval = <1>;
+			g_range = <0>;
+			axis_map_x = <1>;
+			axis_map_y = <0>;
+			axis_map_z = <2>;
+			negate_x = <0>;
+			negate_y = <1>;
+			negate_z = <0>;
+		};
+*/
+                 mc3xx0@4c{
+			compatible = "mc3xx,mc3xx0";
+			reg = <0x4C>;
+		};
+
+                af8133@1e {
+			compatible = "vtc,af8133";
+			reg = <0x1e>;
+		};
+		ltr_558als@23{
+			compatible = "LITEON,ltr_558als";
+			reg = <0x23>;
+			gpios = <&d_gpio_gpio 140 0>;
+			/*low sensitve(def):1500,250,220,1800,1600,1; have no sensitve=<> as def.
+			  High sensitve:1000,40,35,1200,1000,48 */
+			sensitive = <1000 40 35
+						1200 1000 48>;
+			luxcorrection = <2330>;
+		};
+/*
+              epl259x_pls@49{
+                        compatible = "ELAN,epl259x_pls";
+                        reg = <0x49>;
+                        gpios = <&d_gpio_gpio 140 0>;
+                };
+*/
+	};
+	i2c3: i2c@70800000 {
+		compatible  = "sprd,i2c";
+		interrupts = <0 14 0x0>;
+		reg = <0x70800000 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		msg2138_ts@26{
+			compatible = "Mstar,msg2138_ts";
+			reg = <0x26>;
+			gpios = <&d_gpio_gpio 145 0
+                                 &d_gpio_gpio 144 0>;
+			vdd_name = "vdd28";
+			virtualkeys = <580 1350 70 70
+				360 1350 70 70
+				160 1350 70 70>;
+			TP_MAX_X = <720>;
+			TP_MAX_Y = <1280>;
+		 };
+	};
+	sprd_dcam {
+		compatible = "sprd,sprd_dcam";
+		interrupts = <0 45 0>;
+		reg = <0x60800000 0x100000>;
+		clock-names = "clk_mm_i","clk_dcam";
+		clocks = <&clk_mm>, <&clk_dcam>;
+	};
+	sprd_scale {
+		compatible = "sprd,sprd_scale";
+	};
+	sprd_rotation {
+		compatible = "sprd,sprd_rotation";
+	};
+	sprd_sensor {
+		compatible  = "sprd,sprd_sensor";
+		reg = <0x60c00000 0x100000>;
+		gpios = <&d_gpio_gpio 45 0   /*main reset*/
+			&d_gpio_gpio 47 0    /*main powerdown*/
+			&d_gpio_gpio 44 0    /*sub reset*/
+			&d_gpio_gpio 46 0    /*sub powerdown*/
+		        &d_gpio_gpio 0 0
+		        &d_gpio_gpio 0 0
+		        &d_gpio_gpio 0 0
+		        &d_gpio_gpio 0 0>;
+		clock-names ="clk_mm_i","clk_sensor","clk_ccir","clk_dcam","clk_dcam_mipi";
+		clocks = <&clk_mm>,<&clk_sensor>,<&clk_ccir>,<&clk_dcam>,<&clk_dcam_mipi>;
+	};
+	sprd_isp {
+		compatible  = "sprd,sprd_isp";
+		reg = <0x60a00000 0x100000>;
+		clock-names = "clk_mm_i","clk_isp";
+		clocks = <&clk_mm>, <&clk_isp>;
+	};
+	sprd_dma_copy {
+		compatible  = "sprd,sprd_dma_copy";
+	};
+
+	gsp:gsp@20a00000 {
+		compatible = "sprd,gsp";
+		reg = <0x20a00000 0x1000>;
+		interrupts = <0 51 0x0>;
+		clock-names = "clk_gsp", "clk_gsp_emc", "clk_gsp_parent", "clk_aon_apb";
+		clocks = <&clk_gsp>, <&clk_gsp_emc>, <&clk_256m>, <&clk_aon_apb>;
+		gsp_mmu_ctrl_base = <0x20b08000>;
+	};
+
+	sprd_fm: sprd_fm@40270000{
+		compatible  = "sprd,sprd_fm";
+		reg = <0x40270000 0x1000>;
+	};
+
+	usb: usb@20200000 {
+		compatible  = "sprd,usb";
+		interrupts = <0 55 0x0>;
+		vbus-gpios = <&a_eic_gpio 0 0>;
+		id-gpios = <&d_gpio_gpio 90 0>;
+		reg = <0x20200000 0x1000>;
+		tune_value = <0x078e33>;
+		usb-supply = <&vddusb>;
+		phy-type = "usb20_synops_phy";
+		#address-cells = <1>;
+		#size-cells = <0>;
+	};
+	sprd_thermal: thermal@402F0000{
+		compatible = "sprd,ddie-thermal";
+                interrupts = <0 26 0x0>;
+                reg = <0x402f0000 0x1000>;
+		sensor_arm {
+		id = <0>;
+		temp-inteval=<2>;
+		thermal-name = "sprd_arm_thm";
+		trip0-temp-active = <31000>;
+		trip0-type = "active";
+		trip0-temp-lowoff = <0>;
+		trip0-cdev-num = <1>;
+		trip0-cdev-name0 = "thermal-cpufreq-0";
+	        trip1-temp-active = <56000>;
+		trip1-type = "active";
+		trip1-temp-lowoff = <29000>;
+                trip1-cdev-num = <1>;
+		trip1-cdev-name0 = "thermal-cpufreq-0";
+		trip2-temp-active = <60000>;
+		trip2-type = "active";
+		trip2-temp-lowoff = <46000>;
+                trip2-cdev-num = <1>;
+		trip2-cdev-name0 = "thermal-cpufreq-0";
+                trip3-temp-active = <90000>;
+		trip3-type = "active";
+		trip3-temp-lowoff = <50000>;
+                trip3-cdev-num = <1>;
+		trip3-cdev-name0 = "thermal-cpufreq-0";
+		trip4-temp-active = <115000>;
+		trip4-type = "critical";
+		trip4-temp-lowoff = <80000>;
+                trip4-cdev-num = <1>;
+		trip4-cdev-name0 = "thermal-cpufreq-0";
+                trip-points-critical = <119000>;
+		trip-num = <6>;
+		};
+	 };
+	touch_booster {
+		status = "okay";
+		compatible = "touch_booster";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		touch_name = "touch";
+		little_freq = <1300000>;
+		boostpause = <500>;
+	};
+	sprd_cpu_cooling{
+		compatible = "sprd,sprd-cpu-cooling";
+		id = <0>;
+	};
+	spi0: spi@70a00000 {
+		compatible  = "sprd,sprd-spi";
+		interrupts = <0 7 0x0>;
+		reg = <0x70a00000 0x1000>;
+		clock-names = "clk_spi0";
+		#address-cells = <1>;
+		#size-cells = <0>;
+	};
+	spi1: spi@70b00000 {
+		compatible  = "sprd,sprd-spi";
+		interrupts = <0 8 0x0>;
+		reg = <0x70b00000 0x1000>;
+		clock-names = "clk_spi1";
+		#address-cells = <1>;
+		#size-cells = <0>;
+	};
+	spi2: spi@70c00000 {
+		compatible  = "sprd,sprd-spi";
+		interrupts = <0 9 0x0>;
+		reg = <0x70c00000 0x1000>;
+		clock-names = "clk_spi2";
+		#address-cells = <1>;
+		#size-cells = <0>;
+	};
+	dma: dma-controller@20100000 {
+		compatible = "sprd,sharkl64-dma";
+		#dma-cells = <1>;
+		#dma-channels = <64>;
+		aon_offset = <32>;
+		reg = <0 0x20100000 0 0x4000>,	        /* ap reg */
+			<0 0x40100000 0 0x4000>;	/* aon reg */
+		interrupts = <0 50 0x0>,		/* ap int */
+				<0 70 0x0>;		/* aon int */
+	};
+	adc: adc@40038300 {
+		compatible = "sprd,sprd-adc";
+		reg = <0x40038300 0x400>;
+	};
+	hwspinlock0: hwspinlock0@20d00000 {
+		compatible = "sprd,sprd-hwspinlock";
+		reg = <0x20d00000 0x1000>;
+	};
+	hwspinlock1: hwspinlock1@40060000 {
+		compatible = "sprd,sprd-hwspinlock";
+		reg = <0x40060000 0x1000>;
+	};
+	itm_wlan{
+		compatible = "sprd,itm_wlan";
+	};
+	dmac: dmac@20100000 {
+		compatible  = "sprd,sprd-dma";
+		interrupts = <0 50 0x0>;
+		reg = <0 0x20100000 0 0x4000>;
+	};
+	gpu@60000000 {
+		compatible = "arm,mali-400", "arm,mali-utgard";
+		reg = <0x60000000 0x10000>;
+		interrupts = <0 39 0>, <0 39 0>, <0 39 0>, <0 39 0>, <0 39 0>, <0 39 0>, <0 39 0>;
+		interrupt-names = "IRQGP", "IRQGPMMU", "IRQPP0", "IRQPPMMU0", "IRQPP1", "IRQPPMMU1", "IRQPMU";
+
+		pmu_domain_config = <0x1000 0x1000 0x1000 0x0 0x0 0x0 0x0 0x0 0x0 0x1000 0x0 0x0>;
+		pmu_switch_delay = <0xffff>;
+
+		clocks = <&clk_gpu_axi>,<&clk_gpu>,<&clk_153m6>,<&clk_192m>,<&clk_256m>,<&clk_307m2>,<&clk_384m>,<&clk_512m>,<&clk_614m4>;
+		clock-names = "clk_gpu_axi","clk_gpu","clk_153m6","clk_192m","clk_256m","clk_307m2","clk_384m","clk_512m","clk_614m4";
+
+		freq-list-len = <5>;
+		freq-lists = <153600 2 1>, <256000 4 1>, <384000 6 1>, <512000 7 1>, <614400 8 1>;
+		freq-default = <1>;
+		freq-9 = <4>;
+		freq-8 = <4>;
+		freq-7 = <1>;
+		freq-5 = <0>;
+		freq-range-max = <4>;
+		freq-range-min = <1>;
+	};
+	ion {
+		compatible = "sprd,ion-sprd";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		sprd,ion-heap@1 {
+			reg = <1>;			/* system */
+			reg-names = "ion_heap_system";
+			sprd,ion-heap-type = <0>;	/* system */
+			sprd,ion-heap-mem = <0x0 0x0>;
+		};
+
+		sprd,ion-heap@2 {
+			reg = <2>;			/* mm */
+			reg-names = "ion_heap_carveout_mm";
+			sprd,ion-heap-type = <0>;	/* carveout mm */
+			sprd,ion-heap-mem = <0x98800000 0x7100000>;
+		};
+
+		sprd,ion-heap@3 {
+			reg = <3>;			/* overlay */
+			reg-names = "ion_heap_carveout_overlay";
+			sprd,ion-heap-type = <2>;	/* carveout */
+			sprd,ion-heap-mem = <0x9F800000 0x800000>;      /* 480*854*4*2, 8K alignment */
+		};
+	};
+	sprd_iommu0:sprd_iommu@20b00000 {
+		compatible  = "sprd,sprd_iommu";//gsp
+		func-name = "sprd_iommu_gsp";
+		reg = <0x10000000 0x2000000>, //iova
+			<0x20b00000 0x8000>,  //pgt
+			<0x20b08000 0x8000>;  //ctrl_reg
+		reg_name = "iova","pgt","ctrl_reg";
+		clock-names = "clk_gsp_emc","clk_153m6","clk_gsp";
+		clocks = <&clk_gsp_emc>, <&clk_153m6>,<&clk_gsp>;
+		status = "ok";
+	};
+	sprd_iommu1:sprd_iommu@60f00000 {
+		compatible  = "sprd,sprd_iommu";//mm
+		func-name = "sprd_iommu_mm";
+		reg = <0x20000000 0x8000000>,   //iova
+			<0x60f00000 0x20000>,     //pgt
+			<0x60f20000 0x2000>;      //ctrl_reg
+		reg_name = "iova","pgt","ctrl_reg";
+		clock-names = "clk_mmu","clk_mm_i","clk_mm_axi";
+		clocks = <&clk_mmu>,<&clk_mm>,<&clk_mm_axi>;
+		status = "ok";
+	};
+	sprd-io-base {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges = <0 0 0x80000000>;
+		ahb {
+			compatible = "sprd,ahb";
+			reg = <0x20e00000 0x10000>;
+		};
+		hwlock0 {
+			compatible = "sprd,hwlock0";
+			reg = <0x20d00000 0x1000>;
+		};
+		aonapb {
+			compatible = "sprd,aonapb";
+			reg = <0x402e0000 0x10000>;
+		};
+		apbreg {
+			compatible = "sprd,apbreg";
+			reg = <0x71300000 0x10000>;
+		};
+		pmu {
+			compatible = "sprd,pmu";
+			reg = <0x402b0000 0x10000>;
+		};
+		mmahb {
+			compatible = "sprd,mmahb";
+			reg = <0x60d00000 0x4000>;
+		};
+		mmckg {
+			compatible = "sprd,mmckg";
+			reg = <0x60e00000 0x1000>;
+		};
+		codecahb {
+			compatible = "sprd,codecahb";
+			reg = <0x62000000 0x1000>;
+		};
+		adislave {
+			compatible = "sprd,adislave";
+			reg = <0x40038000 0x1000>;
+		};
+		gpuapb {
+			compatible = "sprd,gpuapb";
+			reg = <0x60100000 0x1000>;
+		};
+		apbckg {
+			compatible = "sprd,apbckg";
+			reg = <0x21500000 0x1000>;
+		};
+		aonckg {
+			compatible = "sprd,aonckg";
+			reg = <0x402d0000 0x1000>;
+		};
+		gpuckg {
+			compatible = "sprd,gpuckg";
+			reg = <0x60200000 0x1000>;
+		};
+		core {
+			compatible = "sprd,core";
+			reg = <0x12000000 0x10000>;
+		};
+		int {
+			compatible = "sprd,int";
+			reg = <0x40200000 0x1000>;
+		};
+		intc0 {
+			compatible = "sprd,intc0";
+			reg = <0x71400000 0x1000>;
+		};
+		intc1 {
+			compatible = "sprd,intc1";
+			reg = <0x71500000 0x1000>;
+		};
+		intc2 {
+			compatible = "sprd,intc2";
+			reg = <0x71600000 0x1000>;
+		};
+		intc3 {
+			compatible = "sprd,intc3";
+			reg = <0x71700000 0x1000>;
+		};
+		send_mbox {
+			compatible = "sprd,send_mbox";
+			reg = <0x400a0000 0x1000>;
+		};
+		recv_mbox {
+			compatible = "sprd,recv_mbox";
+			reg = <0x400a8000 0x1000>;
+		};
+		uidefuse {
+			compatible = "sprd,uidefuse";
+			reg = <0x40240000 0x1000>;
+		};
+		ipi {
+			compatible = "sprd,ipi";
+			reg = <0x402c0000 0x1000>;
+		};
+		syscnt {
+			compatible = "sprd,syscnt";
+			reg = <0x40230000 0x1000>;
+		};
+		dma0 {
+			compatible = "sprd,dma0";
+			reg = <0x20100000 0x4000>;
+		};
+		pub {
+			compatible = "sprd,pub";
+			reg = <0x30020000 0x10000>;
+		};
+		pin {
+			compatible = "sprd,pin";
+			reg = <0x402a0000 0x1000>;
+		};
+		mailbox {
+			compatible = "sprd,mailbox";
+			reg = <0x400a0000 0x10000>;
+		};
+		axibm0 {
+			compatible  = "sprd,axibm0";
+			reg = <0 0x30040000 0 0x20000>;
+			interrupts = <0 86 0x0>;
+		};
+	};
+
+	sprd_bm {
+		compatible = "sprd,sprd_bm";
+		reg = <0x30040000 0xA0000>,
+		<0x20F00000 0x300000>;
+		interrupts = <0 86 0x0>;
+		sprd,bm_status = <1>;
+		sprd,bm_count = <10 11>;
+		sprd,cpu_chn = <0 1>;
+		sprd,disp_chn = <1 1>;
+		sprd,gpu_chn = <2 1>;
+		sprd,ap_zip_chn = <3 1>;
+		sprd,mm_chn = <4 1>;
+		sprd,cp0_arm0_1_chn = <5 1>;
+		sprd,cp0_dsp_chn = <6 0>;
+		sprd,cp1_lte_chn = <7 1>;
+		sprd,cp1_dsp_chn = <8 1>;
+		sprd,cp1_arm_chn = <9 1>;
+		sprd,ap_dap_chn = <0 0>;
+		sprd,ap_cpu_chn = <0 1>;
+		sprd,ap_dma_r_chn = <0 2>;
+		sprd,ap_dma_w_chn = <0 3>;
+		sprd,ap_sdio_0_chn = <1 0>;
+		sprd,ap_sdio_1_chn = <1 1>;
+		sprd,ap_sdio_2_chn = <1 2>;
+		sprd,ap_emmc_chn = <1 3>;
+		sprd,ap_nandc_chn = <2 0>;
+		sprd,ap_otg_chn = <2 1>;
+		sprd,ap_hsic_chn = <2 2>;
+	};
+
+	wdt@40290000 {
+		compatible = "sprd,sprd-wdt";
+		reg = <0x40290000 0x1000>,
+			<0x40310000 0x1000>;
+		interrupts = <0 124 0x0>;
+	};
+
+	sprd-marlin {
+		compatible = "sprd,marlin";
+		gpios = <&d_gpio_gpio 97 0 /*marlin gpio0 */
+			&d_gpio_gpio 132 0  /*marlin gpio1 */
+			&d_gpio_gpio 133 0  /*marlin gpio2 */
+			&d_gpio_gpio 94 0  /*marlin gpio3 */
+			&d_gpio_gpio 122 0>;  /*marlin reset*/
+		cp-rfctl-offset = <0x244>;  /*coex func. marlin gpio3*/
+		vdd-download = "vddcon"; /*vdd 1.6v*/
+		vdd-pa = "vddwifipa"; /*vdd 3.3v*/
+		clk-name = "clk_aux0"; /*clk 32k*/
+		sdhci-name = "sdio_wifi";
+	};
+	sprd-ge2 {
+		compatible = "sprd,ge2";
+		gpios = <&d_gpio_gpio 130 0>; /*ge2 chip_en*/
+		vdd-lna = "vddsim2"; /*vdd lna*/
+	};
+	sprd_sysdump {
+		compatible = "sprd,sysdump";
+		magic-addr = < 0x85500000  0x100000>;
+		ram = &memory;
+		modem = <0x89600000 0x4C00000>;/* e.g. lte modem*/
+		iomem = <0x40290000 0x1000>;/* e.g. wdt*/
+	};
+	crypto_engine: crypto_engine@62010000 {
+		compatible  = "sprd,sprd-aes";
+		interrupts = <0 43 0x0>;
+		reg = <0x62010000 0x100>;
+		clocks = <&clk_aes>, <&clk_mm>, <&clk_mm_axi>;
+		clock-names = "apb_clk", "mm_clk", "mm_axi_clk";
+		power-regs-info = <0x402b01a4 0 0x402b00c4 0x0000000f>;
+	};
+
+	trusty {
+		compatible = "android,trusty-smc-v1";
+		ranges;
+		#address-cells = <0x2>;
+		#size-cells = <0x2>;
+
+		irq {
+			compatible = "android,trusty-irq-v1";
+		};
+/*
+		fiq {
+			compatible = "android,trusty-fiq-v1";
+			ranges;
+			#address-cells = <0x2>;
+			#size-cells = <0x2>;
+
+			fiq-debugger {
+				compatible = "android,trusty-fiq-v1-tegra-uart";
+				reg = <0x0 0x70006000 0x0 0x40>;
+				interrupts = <0x0 0x24 0x4 0x0 0x10 0x4>;
+				interrupt-names = "fiq", "signal";
+			};
+		};
+*/
+		virtio {
+			compatible = "android,trusty-virtio-v1";
+		};
+
+		log {
+			compatible = "android,trusty-log-v1";
+		};
+	};
+    fingerprint {
+        compatible = "fpsensor,fingerprint";
+        /*
+        fpreset-gpios = <&ap_gpio 156 0 >;
+        fpint-gpios = <&ap_gpio 155 0 >;
+        */
+    };
+};
+
+&vbc_r2p0 {
+	status = "okay";
+};
+
+&sprd_codec {
+	status = "okay";
+	sprd,audio_power_ver = <4>;
+};
+
+&i2s0 {
+	sprd,config_type = "pcm";
+	sprd,slave_timeout = <0xF11>;
+	sprd,_hw_port = <0>;
+	sprd,fs = <8000>;
+	sprd,bus_type = <1>;
+	sprd,rtx_mode = <3>;
+	sprd,byte_per_chan = <1>;
+	sprd,slave_mode = <0>;
+	sprd,lsb = <0>;
+	sprd,lrck = <0>;
+	sprd,low_for_left = <1>;
+	sprd,clk_inv = <0>;
+	sprd,pcm_short_frame = <1>;
+	sprd,pcm_slot = <0x1>;
+	sprd,pcm_cycle = <1>;
+	sprd,tx_watermark = <12>;
+	sprd,rx_watermark = <20>;
+	status = "okay";
+};
+
+&i2s1 {
+	status = "okay";
+};
+
+&i2s2 {
+	status = "okay";
+};
+
+&i2s3 {
+	status = "okay";
+};
+
+&i2s_sound {
+	sprd,i2s = <&i2s0>, <&i2s1>, <&i2s2>, <&i2s3>;
+};
+
+&sprd_battery {
+	gpios = <&a_eic_gpio 0 0        /* chg int */
+		&a_eic_gpio 4 0        /* cv state */
+		&a_eic_gpio 6 0		/* chg ovi */
+		&a_eic_gpio 9 0>;	/* battery detect */
+	chg-end-vol-h = <4365>;
+	chg-end-vol-pure = <4340>;
+	chg-end-vol-l = <4330>;
+	chg-bat-safety-vol = <4430>;
+	rechg-vol = <4260>;
+	adp-cdp-cur = <700>;
+	adp-dcp-cur = <1150>;
+	adp-sdp-cur = <450>;
+	chg-end-cur = <100>;
+	chg-polling-time = <15>;
+	fgu-mode = <0>;
+	alm-soc = <5>;
+	alm-vol = <3500>;
+	soft-vbat-uvlo = <3100>;
+	rint = <200>;
+	cnom = <2100>;
+	rsense-real = <200>;
+	rsense-spec = <200>;
+	relax-current = <50>;
+	fgu-cal-ajust = <0>;
+	ocv-tab-size = <21>;
+	ocv-tab-vol = <4318 4254 4198 4145 4094 4052 3987 3955 3902 3865 3838 3817 3800 3785 3769 3752 3733 3706 3691 3588 3400>;
+	ocv-tab-cap = <100  95   90   85   80   75   70   65   60   55   50   45   40   35   30   25   20   15   10   5    0>;
+};
+&vddrf{
+	vol-tagert = <1500000>;/*kernel hide_offset =  hide-offset - 1000*/
+};
+&vddrf0{
+	vol-tagert = <1800000>;/*kernel hide_offset =  hide-offset - 1000*/
+};
Index: kernel/arch/arm/boot/dts/Makefile
===================================================================
--- kernel/arch/arm/boot/dts/Makefile	(revision 182224)
+++ kernel/arch/arm/boot/dts/Makefile	(revision 182225)
@@ -282,6 +282,11 @@
 dtb-$(CONFIG_MACH_SP9832A_2H11_VOLTE) += sprd-scx35l_sp9832a_2h11_volte.dtb \
 	sprd-scx35l_sp9832a_2h11_volte_trusty_vmm.dtb
 endif
+
+dtb-$(CONFIG_MACH_SP9832A_2H12_VOLTE) += sprd-scx35l_sp9832a_2h12_volte.dtb
+
+dtb-$(CONFIG_MACH_SP9832A_7C10_VOLTE) += sprd-scx35l_sp9832a_7c10_volte.dtb
+dtb-$(CONFIG_MACH_SP9832A_7C20_VOLTE) += sprd-scx35l_sp9832a_7c20_volte.dtb
 dtb-$(CONFIG_MACH_SP9830I_J3LTE) += sprd-scx35l_sp9830i_j3lte.dtb
 ifeq ($(CONFIG_MACH_SP9830I_J2LTE_V0), y)
 dtb-$(CONFIG_MACH_SP9830I_J2LTE_V0) += sprd-scx35l_sp9830i_j2lte_v0.dtb
Index: kernel/arch/arm/boot/dts/sprd-scx35l_sp9832a_7c20_volte.dts
===================================================================
--- kernel/arch/arm/boot/dts/sprd-scx35l_sp9832a_7c20_volte.dts	(revision 0)
+++ kernel/arch/arm/boot/dts/sprd-scx35l_sp9832a_7c20_volte.dts	(revision 182225)
@@ -0,0 +1,1142 @@
+/*
+* Copyright (C) 2013 Spreadtrum Communication Incorporated
+*               http://www.spreadtrum.com/
+*
+* This program is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License version 2 as
+* published by the Free Software Foundation.
+*/
+/dts-v1/;
+
+/* memory reserved for fb */
+/memreserve/ 0x9ED74000 0xA8C000; /* 480*854*4*3, 4K alignment*/
+
+/* memory reserved for ION */
+/memreserve/ 0x9F800000 0x800000; /* 480*854*4*2, 8K alignment */
+
+/* For MPU remapping buffer */
+/memreserve/ 0xFD7FF000 0x00001000; /* 4K alignment*/
+
+/* memory reserved for tos */
+/memreserve/ 0xFD800000 0x02000000; /* 1M alignment*/
+
+/* memory reserved for VMM  */
+/memreserve/ 0xFF800000 0x600000; /* 6M, 2M alignment */
+
+/include/ "sprd-sharkl-modem-volte.dtsi"
+/include/ "scx35l-sp9830ied-clocks.dtsi"
+/include/ "sc2723-regulators.dtsi"
+/include/ "sprd-sound.dtsi"
+/include/ "sprd-battery.dtsi"
+
+/ {
+	model = "Spreadtrum SP8835EB board";
+	compatible = "sprd,sp8835eb";
+	sprd,sc-id = <8830 1 0x20000>;
+	#address-cells = <1>;
+	#size-cells = <1>;
+	interrupt-parent = <&gic>;
+
+	chosen {
+		bootargs = "loglevel=1 console=ttyS1,115200n8 init=/init root=/dev/ram0 rw androidboot.hardware=sp9832a_7c20";
+		linux,initrd-start = <0x85500000>;
+		linux,initrd-end   = <0x855a3212>;
+	};
+
+	memory: memory {
+		device_type = "memory";
+		reg = <0x80000000 0x80000000>;
+	};
+
+	aliases {
+		serial0 = &uart0;
+		serial1 = &uart1;
+		serial2 = &uart2;
+		serial3 = &uart3;
+		i2c0 = &i2c0;
+		i2c1 = &i2c1;
+		i2c2 = &i2c2;
+		i2c3 = &i2c3;
+		lcd0 = &fb0;
+		spi0 = &spi0;
+		spi1 = &spi1;
+		spi2 = &spi2;
+		hwspinlock0 = &hwspinlock0;
+		hwspinlock1 = &hwspinlock1;
+	};
+
+	cpus {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		cpu@f00 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <0xf00>;
+		};
+
+		cpu@f01 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <0xf01>;
+		};
+
+		cpu@f02 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <0xf02>;
+		};
+
+		cpu@f03 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <0xf03>;
+		};
+	};
+
+	pmu {
+		compatible = "arm,cortex-a7-pmu";
+		interrupts = <0 92 0x0>,
+				<0 93 0x0>,
+				<0 94 0x0>,
+				<0 95 0x0>;
+	};
+
+	gic: interrupt-controller@12001000 {
+		compatible = "arm,cortex-a15-gic", "arm,cortex-a9-gic";
+		#interrupt-cells = <3>;
+		#address-cells = <0>;
+		interrupt-controller;
+		reg = <0x12001000 0x1000>,
+			<0x12002000 0x1000>;
+	};
+
+	uart0: uart@70000000 {
+		compatible  = "sprd,serial";
+		interrupts = <0 2 0x0>;
+		reg = <0x70000000 0x1000>;
+		clock-names = "clk_uart0";
+		clocks = <&clock 60>;
+		sprdclk = <48000000>;
+		sprdwaketype = "BT_RTS_HIGH_WHEN_SLEEP";
+	};
+	uart1: uart@70100000 {
+		compatible  = "sprd,serial";
+		interrupts = <0 3 0x0>;
+		reg = <0x70100000 0x1000>;
+		clock-names = "clk_uart1";
+		clocks = <&clock 61>;
+		sprdclk = <26000000>;
+		sprdwaketype = "BT_RTS_HIGH_WHEN_SLEEP";
+	};
+	uart2: uart@70200000 {
+		compatible  = "sprd,serial";
+		interrupts = <0 4 0x0>;
+		reg = <0x70200000 0x1000>;
+		clock-names = "clk_uart2";
+		clocks = <&clock 62>;
+		sprdclk = <26000000>;
+		sprdwaketype = "BT_RTS_HIGH_WHEN_SLEEP";
+	};
+	uart3: uart@70300000 {
+		compatible  = "sprd,serial";
+		interrupts = <0 5 0x0>;
+		reg = <0x70300000 0x1000>;
+		clock-names = "clk_uart3";
+		clocks = <&clock 63>;
+		sprdclk = <26000000>;
+		sprdwaketype = "BT_RTS_HIGH_WHEN_SLEEP";
+	};
+
+	timer {
+		compatible  = "sprd,scx35-timer";
+		reg =	<0x40230000 0x1000>, /* SYSCNT */
+			<0x40050000 0x1000>, /* GPTIMER0 */
+			<0x40220000 0x1000>, /* APTIMER0 */
+			<0x40320000 0x1000>, /* APTIMER1 */
+			<0x40330000 0x1000>; /* APTIMER2 */
+		interrupts = <0 118 0x0>,
+				<0 28 0x0>,
+				<0 29 0x0>,
+				<0 119 0x0>,
+				<0 121 0x0>,
+				<0 31 0x0>;
+	};
+	clock: clockdevice {
+		compatible = "sprd,scx35-clock";
+		#clock-cells = <1>;
+	};
+	d_eic_gpio: gpio@40210000 {
+		compatible = "sprd,d-eic-gpio";
+		reg = <0x40210000 0x1000>;
+		gpio-controller;
+		interrupt-controller;
+		#interrupt-cells = <2>;
+		#gpio-cells = <2>;
+		gpiobase = <288>;
+		ngpios = <16>;
+		interrupts = <0 37 0x0>;
+	};
+	d_gpio_gpio: gpio@40280000 {
+		compatible = "sprd,d-gpio-gpio";
+		reg = <0x40280000 0x1000>;
+		gpio-controller;
+		interrupt-controller;
+		#interrupt-cells = <2>;
+		#gpio-cells = <2>;
+		gpiobase = <0>;
+		ngpios = <256>;
+		interrupts = <0 35 0x0>;
+	};
+
+	pinctrl {
+		compatible = "sprd,pinctrl";
+		reg = <0x402a0000 0x1000>;
+		pwr_domain = "vdd28",
+			"vdd18",
+			"vddsim0",
+			"vddsim1",
+			"vddsim2",
+			"vddsdio",
+			"vdd18";
+		ctrl_desc = <0x10 0 1
+			0x10 1 1
+			0x10 2 1
+			0x10 3 1
+			0x10 4 1
+			0x10 5 1
+			0x10 6 1>;
+	};
+
+	sdios{
+		#address-cells = <2>;
+		#size-cells = <2>;
+		ranges;
+		sdio3: sdio@20600000{
+			compatible  = "sprd,sdhost-3.0";
+			reg = <0 0x20600000 0 0x1000>;
+			interrupts = <0 60 0x0>;
+			sprd,name = "sdio_emmc";
+			/*detect_gpio = <-1>; */
+			SD_Pwr_Name = "vddemmccore";
+			_1_8V_signal_Name = "vddgen0";
+			signal_default_Voltage = <1800000>;
+			ocr_avail = <0x00040000>;
+			clocks = <&clk_emmc>, <&clk_384m>;
+			base_clk = <384000000>;
+			bus-width = <8>;
+			caps = <0xC00F8D47>;
+			caps2 = <0x202>;
+			pm_caps = <0x4>;
+			writeDelay = <0x34>;
+			readPosDelay = <0x8>;
+			readNegDelay = <0x8>;
+		};
+
+		sdio0: sdio@20300000{
+			compatible  = "sprd,sdhost-3.0";
+			reg = <0 0x20300000 0 0x1000>;
+			interrupts = <0 57 0x0>;
+			sprd,name = "sdio_sd";
+			detect_gpio = <137>;
+			SD_Pwr_Name = "vddsdcore";
+			_1_8V_signal_Name = "vddsdio";
+			signal_default_Voltage = <3000000>;
+			ocr_avail = <0x00040000>;
+			clocks = <&clk_sdio0>, <&clk_384m>;
+			base_clk = <384000000>;
+			bus-width = <4>;
+			caps = <0xC0020407>;
+			caps2 = <0x200>;
+			pm_caps = <0x4>;
+			writeDelay = <0x3>;
+			readPosDelay = <0x3>;
+			readNegDelay = <0x3>;
+		};
+
+
+		sdio1: sdio@20400000{
+			compatible  = "sprd,sdhost-3.0";
+			reg = <0 0x20400000 0 0x1000>;
+			interrupts = <0 58 0x0>;
+			sprd,name = "sdio_wifi";
+			/* detect_gpio = <-1>; */
+			/* SD_Pwr_Name = "vddsdcore"; */
+			/* _1_8V_signal_Name = "vddsdio";*/
+			/* signal_default_Voltage = <3000000>; */
+			ocr_avail = <0x00360080>;
+			clocks = <&clk_sdio1>, <&clk_128m>;
+			base_clk = <128000000>;
+			bus-width = <4>;
+			caps = <0xC00FA407>;
+			caps2 = <0x0>;
+			pm_caps = <0x5>;
+			writeDelay = <0x03>;
+			readPosDelay = <0x03>;
+			readNegDelay = <0x03>;
+		};
+	};
+
+	fb0: fb@20800000 {
+		compatible = "sprd,sprdfb";
+		reg = <0x20800000 0x1000>,<0x21800000 0x1000>;
+		interrupts = <0 46 0x0>,<0 48 0x0>, <0 49 0x0>;
+		clock-names = "dispc_clk_parent", "dispc_dbi_clk_parent", "dispc_dpi_clk_parent", "dispc_emc_clk_parent", "dispc_clk", "dispc_dbi_clk", "dispc_dpi_clk", "dispc_emc_clk", "fb_spi_clock", "fb_spi_clock_parent";
+		clocks = <&clk_256m>, <&clk_256m>, <&clk_384m>, <&clk_aon_apb>, <&clk_dispc0>, <&clk_dispc0_dbi>, <&clk_dispc0_dpi>, <&clk_disp_emc>, <&clk_spi2>, <&ext_26m>;
+		clock-src = <256000000 256000000 384000000>;
+		dpi_clk_div = <7>;
+		sprd,fb_use_reservemem;
+		sprd,fb_mem = <0x9ED74000 0xA8C000>;
+	};
+
+	adic:adic {
+		compatible = "sprd,adi";
+		reg = <0x40030000 0x10000>;
+	};
+	adi: adi_bus {
+		compatible = "sprd,adi-bus";
+		interrupts = <0 38 0x0>;
+		reg = <0x40038000 0x1000>;
+		interrupt-controller;
+		sprd,irqnums = <11>;
+		#interrupt-cells = <2>;
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges = <0x40 0x40038040 0x40>,
+			<0x80 0x40038080 0x80>,
+			<0x100 0x40038100 0x80>,
+			<0x480 0x40038480 0x80>;
+		sprd_backlight {
+			compatible = "sprd,sprd_backlight";
+			start = <3>;
+			end = <3>;
+			flags = <0x100>;
+		};
+		keyboard_backlight {
+			compatible = "sprd,keyboard-backlight";
+		};
+		sprd_kpled_2723 {
+			compatible = "sprd,sprd-kpled-2723";
+			brightness_max = <255>;
+			brightness_min = <0>;
+			run_mode = <1>;
+		};
+
+		leds_sprd_bltc_rgb {
+			compatible = "sprd,sprd-leds-bltc-rgb";
+			reg = <0x440 0x40>,
+			<0x800 0xff>;
+		};
+
+		watchdog@40{
+			compatible = "sprd,watchdog";
+			reg = <0x40 0x40>;
+			interrupts = <3 0x0>;
+		};
+		rtc@80 {
+			compatible = "sprd,rtc";
+			reg = <0x80 0x80>;
+			interrupts = <2 0x0>;
+		};
+		a_eic_gpio: gpio@100 {
+			compatible = "sprd,a-eic-gpio";
+			reg = <0x100 0x80>; /* adi reg */
+			gpio-controller;
+			interrupt-controller;
+			#interrupt-cells = <2>;
+			#gpio-cells = <2>;
+			gpiobase = <304>;
+			ngpios = <16>;
+			interrupt-parent = <&adi>;
+			interrupts = <5 0x0>; /* ext irq 5 */
+		};
+		sprd_eic_keys {
+			compatible = "sprd,sprd-eic-keys";
+			input-name = "sprd-eic-keys";
+			key_power {
+				label = "Power Key";
+				linux,code = <116>;
+				gpios = <&a_eic_gpio 2 0>;
+				debounce-interval = <2>;
+				gpio-key,wakeup;
+			};
+/*
+			key_volumeup {
+				label = "Volumeup Key";
+				linux,code = <115>;
+				gpios = <&a_eic_gpio 10 0>;
+				debounce-interval = <2>;
+				gpio-key,wakeup;
+			};
+*/
+		};
+		headset_sprd_sc2723 {
+			compatible = "sprd,headset_sprd_sc2723";
+			gpio_switch = <0>;
+			gpio_detect = <312>;
+			gpio_button = <307>;
+			irq_trigger_level_detect = <1>;
+			irq_trigger_level_button = <1>;
+			adc_threshold_3pole_detect = <300>;
+			adc_threshold_4pole_detect = <3270>;
+			irq_threshold_buttont = <6>;
+			voltage_headmicbias = <3000000>;
+			nbuttons = <3>;
+			headset_buttons_media {
+				adc_min = <0>;
+				adc_max = <420>;
+				code = <226>;
+				type = <0>;
+			};
+
+			headset_buttons_up {
+				adc_min = <450>;
+				adc_max = <880>;
+				code = <115>;
+				type = <0>;
+			};
+			headset_buttons_down {
+				adc_min = <900>;
+				adc_max =<2300>;
+				code = <114>;
+				type = <0>;
+			};
+		};
+	};
+	sprd_pwm_bl {
+		compatible = "sprd,sprd_pwm_bl";
+		reg = <0x40260000 0xf>;
+		brightness_max = <255>;
+		brightness_min = <0>;
+		pwm_index = <2>;
+		gpio_ctrl_pin = <0>;
+		gpio_active_level = <0>;
+	};
+	 panel_cabc_bl {
+		compatible = "sprd,panel_cabc_bl";
+	};
+	gpio_keys {
+		compatible = "gpio-keys";
+		input-name = "sprd-gpio-keys";
+		key_volumedown {
+			label = "Volumedown Key";
+			linux,code = <114>;
+			gpios = <&d_gpio_gpio 124 1>;
+			debounce-interval = <2>;
+			gpio-key,wakeup;
+		};
+
+		key_volumeup {
+			label = "Volumeup Key";
+			linux,code = <115>;
+			gpios = <&d_gpio_gpio 125 1>;
+			debounce-interval = <2>;
+			gpio-key,wakeup;
+		};
+/*
+		key_camerafocus {
+			label = "Camerafocus Key";
+			linux,code = <0x210>;
+			gpios = <&d_gpio_gpio 125 1>;
+			debounce-interval = <2>;
+			gpio-key,wakeup;
+		};
+		key_camera {
+			label = "Camera Key";
+			linux,code = <212>;
+			gpios = <&d_gpio_gpio 126 1>;
+			debounce-interval = <2>;
+			gpio-key,wakeup;
+		};
+*/
+	};
+	rfkill {
+		compatible = "broadcom,rfkill";
+		gpios = <&d_gpio_gpio 131 0  /* power */
+			&d_gpio_gpio 122 0>;  /* reset */
+	};
+        bluesleep {
+               compatible = "broadcom,bluesleep";
+               bt-wake-gpio = <&d_gpio_gpio 132 0>;  /*GPIO_AP2BT_WAKE*/
+               host-wake-gpio = <&d_gpio_gpio 133 0>; /*GPIO_BT2AP_WAKE*/
+         };
+
+	sprd_vsp@60900000 {
+		compatible = "sprd,sprd_vsp";
+		reg = <0x60900000 0xc000>;
+		interrupts = <0 43 0x0>;
+		clock-names = "clk_mm_i", "clk_vsp", "clk_mm_axi";
+		clocks = <&clk_mm>, <&clk_vsp>, <&clk_mm_axi>;
+		version = <3>;
+	};
+	sprd_jpg {
+		compatible = "sprd,sprd_jpg";
+		reg = <0x60b00000 0x8000>;
+		interrupts = <0 42 0x0>;
+		clock-names = "clk_mm_i","clk_jpg";
+		clocks = <&clk_mm>, <&clk_jpg>;
+	};
+
+	 sprd_vpp@61000000{
+                 compatible = "sprd,sprd_vpp";
+                 reg = <0x61000000 0x4000>;
+                 interrupts = <0 43 0x0>;
+		clock-names = "clk_mm","clk_vpp";
+		clocks = <&clk_mm>, <&clk_vpp>;
+         };
+
+	 sprd_coda7l@62100000{
+		compatible = "sprd,sprd_coda7l";
+		reg = <0x62100000 0x4000>;
+		interrupts = <0 43 0x0>;
+		clock-names = "clk_mm_i","clk_coda7_axi","clk_coda7_cc","clk_coda7_apb";
+		clocks = <&clk_mm>, <&clk_coda7_axi>, <&clk_coda7_cc>, <&clk_coda7_apb>;
+		power-regs-info = <0x402b01a4 0 0x402b00c4 0x0000000f>;
+         };
+
+	i2c0: i2c@70500000 {
+		compatible = "sprd,i2c";
+		interrupts = <0 11 0x0>;
+		reg = <0x70500000 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		sensor_main@0x3c {
+			compatible = "sprd,sensor_main";
+			reg = <0x3c>;
+		};
+		sensor_sub@0x21 {
+			compatible = "sprd,sensor_sub";
+			reg = <0x21>;
+		};
+	};
+	i2c1: i2c@70600000 {
+		compatible = "sprd,i2c";
+		interrupts = <0 12 0x0>;
+		reg = <0x70600000 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		fan54015_chg@0x6a {
+			compatible = "fairchild,fan54015_chg";
+			reg = <0x6a>;
+		};
+	};
+	i2c2: i2c@70700000 {
+		compatible = "sprd,i2c";
+		interrupts = <0 13 0x0>;
+		reg = <0x70700000 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+/*		lis3dh_acc@18{
+			compatible = "ST,lis3dh_acc";
+			reg = <0x18>;
+			gpios = <&d_gpio_gpio 139 0>;
+			poll_interval = <10>;
+			min_interval = <1>;
+			g_range = <0>;
+			axis_map_x = <1>;
+			axis_map_y = <0>;
+			axis_map_z = <2>;
+			negate_x = <0>;
+			negate_y = <1>;
+			negate_z = <0>;
+		};
+*/
+                 mc3xx0@4c{
+			compatible = "mc3xx,mc3xx0";
+			reg = <0x4C>;
+		};
+
+                af8133@1e {
+			compatible = "vtc,af8133";
+			reg = <0x1e>;
+		};
+		ltr_558als@23{
+			compatible = "LITEON,ltr_558als";
+			reg = <0x23>;
+			gpios = <&d_gpio_gpio 140 0>;
+			/*low sensitve(def):1500,250,220,1800,1600,1; have no sensitve=<> as def.
+			  High sensitve:1000,40,35,1200,1000,48 */
+			sensitive = <1000 40 35
+						1200 1000 48>;
+			luxcorrection = <2330>;
+		};
+/*
+              epl259x_pls@49{
+                        compatible = "ELAN,epl259x_pls";
+                        reg = <0x49>;
+                        gpios = <&d_gpio_gpio 140 0>;
+                };
+*/
+	};
+	i2c3: i2c@70800000 {
+		compatible  = "sprd,i2c";
+		interrupts = <0 14 0x0>;
+		reg = <0x70800000 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		msg2138_ts@26{
+			compatible = "Mstar,msg2138_ts";
+			reg = <0x26>;
+			gpios = <&d_gpio_gpio 145 0
+                                 &d_gpio_gpio 144 0>;
+			vdd_name = "vdd28";
+			virtualkeys = <580 1350 70 70
+				360 1350 70 70
+				160 1350 70 70>;
+			TP_MAX_X = <720>;
+			TP_MAX_Y = <1280>;
+		 };
+	};
+	sprd_dcam {
+		compatible = "sprd,sprd_dcam";
+		interrupts = <0 45 0>;
+		reg = <0x60800000 0x100000>;
+		clock-names = "clk_mm_i","clk_dcam";
+		clocks = <&clk_mm>, <&clk_dcam>;
+	};
+	sprd_scale {
+		compatible = "sprd,sprd_scale";
+	};
+	sprd_rotation {
+		compatible = "sprd,sprd_rotation";
+	};
+	sprd_sensor {
+		compatible  = "sprd,sprd_sensor";
+		reg = <0x60c00000 0x100000>;
+		gpios = <&d_gpio_gpio 45 0   /*main reset*/
+			&d_gpio_gpio 47 0    /*main powerdown*/
+			&d_gpio_gpio 44 0    /*sub reset*/
+			&d_gpio_gpio 46 0    /*sub powerdown*/
+		        &d_gpio_gpio 0 0
+		        &d_gpio_gpio 0 0
+		        &d_gpio_gpio 0 0
+		        &d_gpio_gpio 0 0>;
+		clock-names ="clk_mm_i","clk_sensor","clk_ccir","clk_dcam","clk_dcam_mipi";
+		clocks = <&clk_mm>,<&clk_sensor>,<&clk_ccir>,<&clk_dcam>,<&clk_dcam_mipi>;
+	};
+	sprd_isp {
+		compatible  = "sprd,sprd_isp";
+		reg = <0x60a00000 0x100000>;
+		clock-names = "clk_mm_i","clk_isp";
+		clocks = <&clk_mm>, <&clk_isp>;
+	};
+	sprd_dma_copy {
+		compatible  = "sprd,sprd_dma_copy";
+	};
+
+	gsp:gsp@20a00000 {
+		compatible = "sprd,gsp";
+		reg = <0x20a00000 0x1000>;
+		interrupts = <0 51 0x0>;
+		clock-names = "clk_gsp", "clk_gsp_emc", "clk_gsp_parent", "clk_aon_apb";
+		clocks = <&clk_gsp>, <&clk_gsp_emc>, <&clk_256m>, <&clk_aon_apb>;
+		gsp_mmu_ctrl_base = <0x20b08000>;
+	};
+
+	sprd_fm: sprd_fm@40270000{
+		compatible  = "sprd,sprd_fm";
+		reg = <0x40270000 0x1000>;
+	};
+
+	usb: usb@20200000 {
+		compatible  = "sprd,usb";
+		interrupts = <0 55 0x0>;
+		vbus-gpios = <&a_eic_gpio 0 0>;
+		id-gpios = <&d_gpio_gpio 90 0>;
+		reg = <0x20200000 0x1000>;
+		tune_value = <0x078e33>;
+		usb-supply = <&vddusb>;
+		phy-type = "usb20_synops_phy";
+		#address-cells = <1>;
+		#size-cells = <0>;
+	};
+	sprd_thermal: thermal@402F0000{
+		compatible = "sprd,ddie-thermal";
+                interrupts = <0 26 0x0>;
+                reg = <0x402f0000 0x1000>;
+		sensor_arm {
+		id = <0>;
+		temp-inteval=<2>;
+		thermal-name = "sprd_arm_thm";
+		trip0-temp-active = <31000>;
+		trip0-type = "active";
+		trip0-temp-lowoff = <0>;
+		trip0-cdev-num = <1>;
+		trip0-cdev-name0 = "thermal-cpufreq-0";
+	        trip1-temp-active = <56000>;
+		trip1-type = "active";
+		trip1-temp-lowoff = <29000>;
+                trip1-cdev-num = <1>;
+		trip1-cdev-name0 = "thermal-cpufreq-0";
+		trip2-temp-active = <60000>;
+		trip2-type = "active";
+		trip2-temp-lowoff = <46000>;
+                trip2-cdev-num = <1>;
+		trip2-cdev-name0 = "thermal-cpufreq-0";
+                trip3-temp-active = <90000>;
+		trip3-type = "active";
+		trip3-temp-lowoff = <50000>;
+                trip3-cdev-num = <1>;
+		trip3-cdev-name0 = "thermal-cpufreq-0";
+		trip4-temp-active = <115000>;
+		trip4-type = "critical";
+		trip4-temp-lowoff = <80000>;
+                trip4-cdev-num = <1>;
+		trip4-cdev-name0 = "thermal-cpufreq-0";
+                trip-points-critical = <119000>;
+		trip-num = <6>;
+		};
+	 };
+	touch_booster {
+		status = "okay";
+		compatible = "touch_booster";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		touch_name = "touch";
+		little_freq = <1300000>;
+		boostpause = <500>;
+	};
+	sprd_cpu_cooling{
+		compatible = "sprd,sprd-cpu-cooling";
+		id = <0>;
+	};
+	spi0: spi@70a00000 {
+		compatible  = "sprd,sprd-spi";
+		interrupts = <0 7 0x0>;
+		reg = <0x70a00000 0x1000>;
+		clock-names = "clk_spi0";
+		#address-cells = <1>;
+		#size-cells = <0>;
+	};
+	spi1: spi@70b00000 {
+		compatible  = "sprd,sprd-spi";
+		interrupts = <0 8 0x0>;
+		reg = <0x70b00000 0x1000>;
+		clock-names = "clk_spi1";
+		#address-cells = <1>;
+		#size-cells = <0>;
+	};
+	spi2: spi@70c00000 {
+		compatible  = "sprd,sprd-spi";
+		interrupts = <0 9 0x0>;
+		reg = <0x70c00000 0x1000>;
+		clock-names = "clk_spi2";
+		#address-cells = <1>;
+		#size-cells = <0>;
+	};
+	dma: dma-controller@20100000 {
+		compatible = "sprd,sharkl64-dma";
+		#dma-cells = <1>;
+		#dma-channels = <64>;
+		aon_offset = <32>;
+		reg = <0 0x20100000 0 0x4000>,	        /* ap reg */
+			<0 0x40100000 0 0x4000>;	/* aon reg */
+		interrupts = <0 50 0x0>,		/* ap int */
+				<0 70 0x0>;		/* aon int */
+	};
+	adc: adc@40038300 {
+		compatible = "sprd,sprd-adc";
+		reg = <0x40038300 0x400>;
+	};
+	hwspinlock0: hwspinlock0@20d00000 {
+		compatible = "sprd,sprd-hwspinlock";
+		reg = <0x20d00000 0x1000>;
+	};
+	hwspinlock1: hwspinlock1@40060000 {
+		compatible = "sprd,sprd-hwspinlock";
+		reg = <0x40060000 0x1000>;
+	};
+	itm_wlan{
+		compatible = "sprd,itm_wlan";
+	};
+	dmac: dmac@20100000 {
+		compatible  = "sprd,sprd-dma";
+		interrupts = <0 50 0x0>;
+		reg = <0 0x20100000 0 0x4000>;
+	};
+	gpu@60000000 {
+		compatible = "arm,mali-400", "arm,mali-utgard";
+		reg = <0x60000000 0x10000>;
+		interrupts = <0 39 0>, <0 39 0>, <0 39 0>, <0 39 0>, <0 39 0>, <0 39 0>, <0 39 0>;
+		interrupt-names = "IRQGP", "IRQGPMMU", "IRQPP0", "IRQPPMMU0", "IRQPP1", "IRQPPMMU1", "IRQPMU";
+
+		pmu_domain_config = <0x1000 0x1000 0x1000 0x0 0x0 0x0 0x0 0x0 0x0 0x1000 0x0 0x0>;
+		pmu_switch_delay = <0xffff>;
+
+		clocks = <&clk_gpu_axi>,<&clk_gpu>,<&clk_153m6>,<&clk_192m>,<&clk_256m>,<&clk_307m2>,<&clk_384m>,<&clk_512m>,<&clk_614m4>;
+		clock-names = "clk_gpu_axi","clk_gpu","clk_153m6","clk_192m","clk_256m","clk_307m2","clk_384m","clk_512m","clk_614m4";
+
+		freq-list-len = <5>;
+		freq-lists = <153600 2 1>, <256000 4 1>, <384000 6 1>, <512000 7 1>, <614400 8 1>;
+		freq-default = <1>;
+		freq-9 = <4>;
+		freq-8 = <4>;
+		freq-7 = <1>;
+		freq-5 = <0>;
+		freq-range-max = <4>;
+		freq-range-min = <1>;
+	};
+	ion {
+		compatible = "sprd,ion-sprd";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		sprd,ion-heap@1 {
+			reg = <1>;			/* system */
+			reg-names = "ion_heap_system";
+			sprd,ion-heap-type = <0>;	/* system */
+			sprd,ion-heap-mem = <0x0 0x0>;
+		};
+
+		sprd,ion-heap@2 {
+			reg = <2>;			/* mm */
+			reg-names = "ion_heap_carveout_mm";
+			sprd,ion-heap-type = <0>;	/* carveout mm */
+			sprd,ion-heap-mem = <0x98800000 0x7100000>;
+		};
+
+		sprd,ion-heap@3 {
+			reg = <3>;			/* overlay */
+			reg-names = "ion_heap_carveout_overlay";
+			sprd,ion-heap-type = <2>;	/* carveout */
+			sprd,ion-heap-mem = <0x9F800000 0x800000>;      /* 480*854*4*2, 8K alignment */
+		};
+	};
+	sprd_iommu0:sprd_iommu@20b00000 {
+		compatible  = "sprd,sprd_iommu";//gsp
+		func-name = "sprd_iommu_gsp";
+		reg = <0x10000000 0x2000000>, //iova
+			<0x20b00000 0x8000>,  //pgt
+			<0x20b08000 0x8000>;  //ctrl_reg
+		reg_name = "iova","pgt","ctrl_reg";
+		clock-names = "clk_gsp_emc","clk_153m6","clk_gsp";
+		clocks = <&clk_gsp_emc>, <&clk_153m6>,<&clk_gsp>;
+		status = "ok";
+	};
+	sprd_iommu1:sprd_iommu@60f00000 {
+		compatible  = "sprd,sprd_iommu";//mm
+		func-name = "sprd_iommu_mm";
+		reg = <0x20000000 0x8000000>,   //iova
+			<0x60f00000 0x20000>,     //pgt
+			<0x60f20000 0x2000>;      //ctrl_reg
+		reg_name = "iova","pgt","ctrl_reg";
+		clock-names = "clk_mmu","clk_mm_i","clk_mm_axi";
+		clocks = <&clk_mmu>,<&clk_mm>,<&clk_mm_axi>;
+		status = "ok";
+	};
+	sprd-io-base {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges = <0 0 0x80000000>;
+		ahb {
+			compatible = "sprd,ahb";
+			reg = <0x20e00000 0x10000>;
+		};
+		hwlock0 {
+			compatible = "sprd,hwlock0";
+			reg = <0x20d00000 0x1000>;
+		};
+		aonapb {
+			compatible = "sprd,aonapb";
+			reg = <0x402e0000 0x10000>;
+		};
+		apbreg {
+			compatible = "sprd,apbreg";
+			reg = <0x71300000 0x10000>;
+		};
+		pmu {
+			compatible = "sprd,pmu";
+			reg = <0x402b0000 0x10000>;
+		};
+		mmahb {
+			compatible = "sprd,mmahb";
+			reg = <0x60d00000 0x4000>;
+		};
+		mmckg {
+			compatible = "sprd,mmckg";
+			reg = <0x60e00000 0x1000>;
+		};
+		codecahb {
+			compatible = "sprd,codecahb";
+			reg = <0x62000000 0x1000>;
+		};
+		adislave {
+			compatible = "sprd,adislave";
+			reg = <0x40038000 0x1000>;
+		};
+		gpuapb {
+			compatible = "sprd,gpuapb";
+			reg = <0x60100000 0x1000>;
+		};
+		apbckg {
+			compatible = "sprd,apbckg";
+			reg = <0x21500000 0x1000>;
+		};
+		aonckg {
+			compatible = "sprd,aonckg";
+			reg = <0x402d0000 0x1000>;
+		};
+		gpuckg {
+			compatible = "sprd,gpuckg";
+			reg = <0x60200000 0x1000>;
+		};
+		core {
+			compatible = "sprd,core";
+			reg = <0x12000000 0x10000>;
+		};
+		int {
+			compatible = "sprd,int";
+			reg = <0x40200000 0x1000>;
+		};
+		intc0 {
+			compatible = "sprd,intc0";
+			reg = <0x71400000 0x1000>;
+		};
+		intc1 {
+			compatible = "sprd,intc1";
+			reg = <0x71500000 0x1000>;
+		};
+		intc2 {
+			compatible = "sprd,intc2";
+			reg = <0x71600000 0x1000>;
+		};
+		intc3 {
+			compatible = "sprd,intc3";
+			reg = <0x71700000 0x1000>;
+		};
+		send_mbox {
+			compatible = "sprd,send_mbox";
+			reg = <0x400a0000 0x1000>;
+		};
+		recv_mbox {
+			compatible = "sprd,recv_mbox";
+			reg = <0x400a8000 0x1000>;
+		};
+		uidefuse {
+			compatible = "sprd,uidefuse";
+			reg = <0x40240000 0x1000>;
+		};
+		ipi {
+			compatible = "sprd,ipi";
+			reg = <0x402c0000 0x1000>;
+		};
+		syscnt {
+			compatible = "sprd,syscnt";
+			reg = <0x40230000 0x1000>;
+		};
+		dma0 {
+			compatible = "sprd,dma0";
+			reg = <0x20100000 0x4000>;
+		};
+		pub {
+			compatible = "sprd,pub";
+			reg = <0x30020000 0x10000>;
+		};
+		pin {
+			compatible = "sprd,pin";
+			reg = <0x402a0000 0x1000>;
+		};
+		mailbox {
+			compatible = "sprd,mailbox";
+			reg = <0x400a0000 0x10000>;
+		};
+		axibm0 {
+			compatible  = "sprd,axibm0";
+			reg = <0 0x30040000 0 0x20000>;
+			interrupts = <0 86 0x0>;
+		};
+	};
+
+	sprd_bm {
+		compatible = "sprd,sprd_bm";
+		reg = <0x30040000 0xA0000>,
+		<0x20F00000 0x300000>;
+		interrupts = <0 86 0x0>;
+		sprd,bm_status = <1>;
+		sprd,bm_count = <10 11>;
+		sprd,cpu_chn = <0 1>;
+		sprd,disp_chn = <1 1>;
+		sprd,gpu_chn = <2 1>;
+		sprd,ap_zip_chn = <3 1>;
+		sprd,mm_chn = <4 1>;
+		sprd,cp0_arm0_1_chn = <5 1>;
+		sprd,cp0_dsp_chn = <6 0>;
+		sprd,cp1_lte_chn = <7 1>;
+		sprd,cp1_dsp_chn = <8 1>;
+		sprd,cp1_arm_chn = <9 1>;
+		sprd,ap_dap_chn = <0 0>;
+		sprd,ap_cpu_chn = <0 1>;
+		sprd,ap_dma_r_chn = <0 2>;
+		sprd,ap_dma_w_chn = <0 3>;
+		sprd,ap_sdio_0_chn = <1 0>;
+		sprd,ap_sdio_1_chn = <1 1>;
+		sprd,ap_sdio_2_chn = <1 2>;
+		sprd,ap_emmc_chn = <1 3>;
+		sprd,ap_nandc_chn = <2 0>;
+		sprd,ap_otg_chn = <2 1>;
+		sprd,ap_hsic_chn = <2 2>;
+	};
+
+	wdt@40290000 {
+		compatible = "sprd,sprd-wdt";
+		reg = <0x40290000 0x1000>,
+			<0x40310000 0x1000>;
+		interrupts = <0 124 0x0>;
+	};
+
+	sprd-marlin {
+		compatible = "sprd,marlin";
+		gpios = <&d_gpio_gpio 97 0 /*marlin gpio0 */
+			&d_gpio_gpio 132 0  /*marlin gpio1 */
+			&d_gpio_gpio 133 0  /*marlin gpio2 */
+			&d_gpio_gpio 94 0  /*marlin gpio3 */
+			&d_gpio_gpio 122 0>;  /*marlin reset*/
+		cp-rfctl-offset = <0x244>;  /*coex func. marlin gpio3*/
+		vdd-download = "vddcon"; /*vdd 1.6v*/
+		vdd-pa = "vddwifipa"; /*vdd 3.3v*/
+		clk-name = "clk_aux0"; /*clk 32k*/
+		sdhci-name = "sdio_wifi";
+	};
+	sprd-ge2 {
+		compatible = "sprd,ge2";
+		gpios = <&d_gpio_gpio 130 0>; /*ge2 chip_en*/
+		vdd-lna = "vddsim2"; /*vdd lna*/
+	};
+	sprd_sysdump {
+		compatible = "sprd,sysdump";
+		magic-addr = < 0x85500000  0x100000>;
+		ram = &memory;
+		modem = <0x89600000 0x4C00000>;/* e.g. lte modem*/
+		iomem = <0x40290000 0x1000>;/* e.g. wdt*/
+	};
+	crypto_engine: crypto_engine@62010000 {
+		compatible  = "sprd,sprd-aes";
+		interrupts = <0 43 0x0>;
+		reg = <0x62010000 0x100>;
+		clocks = <&clk_aes>, <&clk_mm>, <&clk_mm_axi>;
+		clock-names = "apb_clk", "mm_clk", "mm_axi_clk";
+		power-regs-info = <0x402b01a4 0 0x402b00c4 0x0000000f>;
+	};
+
+	trusty {
+		compatible = "android,trusty-smc-v1";
+		ranges;
+		#address-cells = <0x2>;
+		#size-cells = <0x2>;
+
+		irq {
+			compatible = "android,trusty-irq-v1";
+		};
+/*
+		fiq {
+			compatible = "android,trusty-fiq-v1";
+			ranges;
+			#address-cells = <0x2>;
+			#size-cells = <0x2>;
+
+			fiq-debugger {
+				compatible = "android,trusty-fiq-v1-tegra-uart";
+				reg = <0x0 0x70006000 0x0 0x40>;
+				interrupts = <0x0 0x24 0x4 0x0 0x10 0x4>;
+				interrupt-names = "fiq", "signal";
+			};
+		};
+*/
+		virtio {
+			compatible = "android,trusty-virtio-v1";
+		};
+
+		log {
+			compatible = "android,trusty-log-v1";
+		};
+	};
+    fingerprint {
+        compatible = "fpsensor,fingerprint";
+        /*
+        fpreset-gpios = <&ap_gpio 156 0 >;
+        fpint-gpios = <&ap_gpio 155 0 >;
+        */
+    };
+};
+
+&vbc_r2p0 {
+	status = "okay";
+};
+
+&sprd_codec {
+	status = "okay";
+	sprd,audio_power_ver = <4>;
+};
+
+&i2s0 {
+	sprd,config_type = "pcm";
+	sprd,slave_timeout = <0xF11>;
+	sprd,_hw_port = <0>;
+	sprd,fs = <8000>;
+	sprd,bus_type = <1>;
+	sprd,rtx_mode = <3>;
+	sprd,byte_per_chan = <1>;
+	sprd,slave_mode = <0>;
+	sprd,lsb = <0>;
+	sprd,lrck = <0>;
+	sprd,low_for_left = <1>;
+	sprd,clk_inv = <0>;
+	sprd,pcm_short_frame = <1>;
+	sprd,pcm_slot = <0x1>;
+	sprd,pcm_cycle = <1>;
+	sprd,tx_watermark = <12>;
+	sprd,rx_watermark = <20>;
+	status = "okay";
+};
+
+&i2s1 {
+	status = "okay";
+};
+
+&i2s2 {
+	status = "okay";
+};
+
+&i2s3 {
+	status = "okay";
+};
+
+&i2s_sound {
+	sprd,i2s = <&i2s0>, <&i2s1>, <&i2s2>, <&i2s3>;
+};
+
+&sprd_battery {
+	gpios = <&a_eic_gpio 0 0        /* chg int */
+		&a_eic_gpio 4 0        /* cv state */
+		&a_eic_gpio 6 0		/* chg ovi */
+		&a_eic_gpio 9 0>;	/* battery detect */
+	chg-end-vol-h = <4365>;
+	chg-end-vol-pure = <4340>;
+	chg-end-vol-l = <4330>;
+	chg-bat-safety-vol = <4430>;
+	rechg-vol = <4260>;
+	adp-cdp-cur = <700>;
+	adp-dcp-cur = <1150>;
+	adp-sdp-cur = <450>;
+	chg-end-cur = <100>;
+	chg-polling-time = <15>;
+	fgu-mode = <0>;
+	alm-soc = <5>;
+	alm-vol = <3500>;
+	soft-vbat-uvlo = <3100>;
+	rint = <200>;
+	cnom = <2100>;
+	rsense-real = <200>;
+	rsense-spec = <200>;
+	relax-current = <50>;
+	fgu-cal-ajust = <0>;
+	ocv-tab-size = <21>;
+	ocv-tab-vol = <4318 4254 4198 4145 4094 4052 3987 3955 3902 3865 3838 3817 3800 3785 3769 3752 3733 3706 3691 3588 3400>;
+	ocv-tab-cap = <100  95   90   85   80   75   70   65   60   55   50   45   40   35   30   25   20   15   10   5    0>;
+};
+&vddrf{
+	vol-tagert = <1500000>;/*kernel hide_offset =  hide-offset - 1000*/
+};
+&vddrf0{
+	vol-tagert = <1800000>;/*kernel hide_offset =  hide-offset - 1000*/
+};
Index: kernel/drivers/platform/sprd/busmonitor.c
===================================================================
--- kernel/drivers/platform/sprd/busmonitor.c	(revision 182224)
+++ kernel/drivers/platform/sprd/busmonitor.c	(revision 182225)
@@ -954,12 +954,18 @@
 {
 	u32 bm_chn;
 	struct sci_bm_cfg bm_cfg;
+	int ret;
+	u32 mpu_dump_addr = 0;
+	u32 ddr_size = 0;
+	struct device_node *np = NULL;
+	struct resource res;
+
 #if defined(CONFIG_MACH_SP7731CEA) || defined(CONFIG_MACH_SP7731CEB) || defined(CONFIG_MACH_SP7731C_3C10)
 	bm_chn = 1;
 #endif
 
-#if defined(CONFIG_MACH_SP9832A_2H11_4M) || defined(CONFIG_MACH_SP9832A2_VOL_13CAM) || defined(CONFIG_MACH_SP9832A_2H11_VOLTE) ||\
-	defined(CONFIG_MACH_SP9832A_3H10_VOLTE)
+#if defined(CONFIG_MACH_SP9832A_2H11_4M) || defined(CONFIG_MACH_SP9832A2_VOL_13CAM) || defined(CONFIG_MACH_SP9832A_2H11_VOLTE) || defined(CONFIG_MACH_SP9832A_2H12_VOLTE) || defined(CONFIG_MACH_SP9832A_7C10_VOLTE) ||\
+	defined(CONFIG_MACH_SP9832A_7C20_VOLTE) || defined(CONFIG_MACH_SP9832A_3H10_VOLTE)
 	bm_chn = 2;
 #endif
 
@@ -969,8 +975,19 @@
 	bm_chn = 1;
 #endif
 
-	bm_cfg.addr_min = MPU_DUMP_ADDR;
-	bm_cfg.addr_max = MPU_DUMP_ADDR + MPU_DUMP_LEN - 1;
+	np = of_find_node_by_name(NULL, "memory");
+	if (np) {
+		ret = of_address_to_resource(np, 0, &res);
+		if (!ret)
+			ddr_size = res.end - res.start;
+	}
+	/* diff mpu dump addr according PHY RAM size*/
+	if ((ddr_size >> 24) == 0x7F)
+		mpu_dump_addr = MPU_DUMP_ADDR_2G;
+	else
+		mpu_dump_addr = MPU_DUMP_ADDR_1G;
+	bm_cfg.addr_min = mpu_dump_addr;
+	bm_cfg.addr_max = mpu_dump_addr + MPU_DUMP_LEN - 1;
 	bm_cfg.bm_mode = RW_MODE;
 	sci_bm_set_point(bm_chn, bm_def_value[bm_chn].chn_sel, &bm_cfg, NULL, NULL);
 
Index: kernel/drivers/regulator/core.c
===================================================================
--- kernel/drivers/regulator/core.c	(revision 182224)
+++ kernel/drivers/regulator/core.c	(revision 182225)
@@ -1532,6 +1532,8 @@
 				gpio_free(pin->gpio);
 				list_del(&pin->list);
 				kfree(pin);
+				rdev->ena_pin = NULL;
+				return;
 			} else {
 				pin->request_count--;
 			}
Index: kernel/drivers/crypto/Kconfig
===================================================================
--- kernel/drivers/crypto/Kconfig	(revision 182224)
+++ kernel/drivers/crypto/Kconfig	(revision 182225)
@@ -310,7 +310,7 @@
 
 config CRYPTO_DEV_SPRD_AES
 	tristate "Support for SPRD AES hw crypto engine"
-	depends on MACH_SP9832A_2H11_VOLTE || MACH_SP9832A_3H10_VOLTE || MACH_SP9832A2_VOL_13CAM
+	depends on MACH_SP9832A_2H11_VOLTE || MACH_SP9832A_2H12_VOLTE || MACH_SP9832A_7C10_VOLTE || MACH_SP9832A_7C20_VOLTE || MACH_SP9832A_3H10_VOLTE || MACH_SP9832A2_VOL_13CAM
 	select CRYPTO_AES
 	#select CRYPTO_ECB
 	select CRYPTO_CBC
Index: kernel/drivers/tty/serial/serial_sprd_dt.c
===================================================================
--- kernel/drivers/tty/serial/serial_sprd_dt.c	(revision 182224)
+++ kernel/drivers/tty/serial/serial_sprd_dt.c	(revision 182225)
@@ -459,7 +459,13 @@
 
 static void serial_sprd_shutdown(struct uart_port *port)
 {
-	serial_sprd_reset(port);
+	if (port->cons && port->cons->index == port->line) {
+		serial_out(port, ARM_UART_IEN, 0x0);
+		serial_out(port, ARM_UART_ICLR, 0xffffffff);
+	} else {
+		serial_sprd_reset(port);
+	}
+
 	free_irq(port->irq, port);
 }
 
Index: kernel/drivers/net/wireless/sprdwl/cfg80211.c
===================================================================
--- kernel/drivers/net/wireless/sprdwl/cfg80211.c	(revision 182224)
+++ kernel/drivers/net/wireless/sprdwl/cfg80211.c	(revision 182225)
@@ -1798,7 +1798,7 @@
 		goto freepos;
 	}
 	resp_ie_len = *(u8 *)(req_ie_ptr + req_ie_len);
-	resp_ie_ptr = req_ie_ptr + req_ie_len + sizeof(resp_ie_ptr);
+	resp_ie_ptr = req_ie_ptr + req_ie_len + sizeof(resp_ie_len);
 
 	if (vif->sm_state == SPRDWL_CONNECTING) {
 		/* inform connect result to cfg80211 */
Index: kernel/drivers/media/usb/uvc/uvc_ctrl.c
===================================================================
--- kernel/drivers/media/usb/uvc/uvc_ctrl.c	(revision 182224)
+++ kernel/drivers/media/usb/uvc/uvc_ctrl.c	(revision 182225)
@@ -1939,6 +1939,9 @@
 	if (!found)
 		return -ENOENT;
 
+	if (ctrl->info.size < mapping->size)
+		return -EINVAL;
+
 	if (mutex_lock_interruptible(&chain->ctrl_mutex))
 		return -ERESTARTSYS;
 
Index: kernel/drivers/media/sprd_dcam/tshark/dcam_drv.c
===================================================================
--- kernel/drivers/media/sprd_dcam/tshark/dcam_drv.c	(revision 182224)
+++ kernel/drivers/media/sprd_dcam/tshark/dcam_drv.c	(revision 182225)
@@ -318,6 +318,7 @@
 LOCAL int32_t     _dcam_frame_enqueue(struct dcam_frm_queue *queue, struct dcam_frame *frame);
 LOCAL int32_t     _dcam_frame_dequeue(struct dcam_frm_queue *queue, struct dcam_frame *frame);
 LOCAL void        _dcam_buf_queue_init(struct dcam_buf_queue *queue);
+LOCAL void        _dcam_buf_queue_deinit(struct dcam_buf_queue *queue);
 LOCAL int32_t     _dcam_buf_queue_write(struct dcam_buf_queue *queue, struct dcam_frame *frame);
 LOCAL int32_t     _dcam_buf_queue_read(struct dcam_buf_queue *queue, struct dcam_frame *frame);
 LOCAL void        _dcam_wait_update_done(enum dcam_path_index path_index, uint32_t *p_flag);
@@ -2931,6 +2932,24 @@
 	return;
 }
 
+LOCAL void _dcam_buf_queue_deinit(struct dcam_buf_queue *queue)
+{
+    unsigned long            flag;
+
+    if (DCAM_ADDR_INVALID(queue)) {
+        printk("DCAM: invalid heap %p \n", queue);
+        return;
+    }
+
+    spin_lock_irqsave(&queue->lock, flag);
+    memset((void*)queue, 0, sizeof(struct dcam_buf_queue));
+    queue->write = &queue->frame[0];
+    queue->read  = &queue->frame[0];
+    spin_unlock_irqrestore(&queue->lock, flag);
+    spin_lock_init(&queue->lock);
+    return;
+}
+
 LOCAL int32_t _dcam_buf_queue_write(struct dcam_buf_queue *queue, struct dcam_frame *frame)
 {
 	int                      ret = DCAM_RTN_SUCCESS;
@@ -3059,17 +3078,17 @@
 
 	if (DCAM_PATH_IDX_0 & path_index) {
 		_dcam_frm_queue_clear(&s_p_dcam_mod->dcam_path0.frame_queue);
-		_dcam_buf_queue_init(&s_p_dcam_mod->dcam_path0.buf_queue);
+		_dcam_buf_queue_deinit(&s_p_dcam_mod->dcam_path0.buf_queue);
 	}
 
 	if (DCAM_PATH_IDX_1 & path_index) {
 		_dcam_frm_queue_clear(&s_p_dcam_mod->dcam_path1.frame_queue);
-		_dcam_buf_queue_init(&s_p_dcam_mod->dcam_path1.buf_queue);
+		_dcam_buf_queue_deinit(&s_p_dcam_mod->dcam_path1.buf_queue);
 	}
 
 	if (DCAM_PATH_IDX_2 & path_index) {
 		_dcam_frm_queue_clear(&s_p_dcam_mod->dcam_path2.frame_queue);
-		_dcam_buf_queue_init(&s_p_dcam_mod->dcam_path2.buf_queue);
+		_dcam_buf_queue_deinit(&s_p_dcam_mod->dcam_path2.buf_queue);
 	}
 
 	return;
Index: kernel/drivers/media/sprd_dcam/tshark2/dcam_drv.c
===================================================================
--- kernel/drivers/media/sprd_dcam/tshark2/dcam_drv.c	(revision 182224)
+++ kernel/drivers/media/sprd_dcam/tshark2/dcam_drv.c	(revision 182225)
@@ -3105,6 +3105,7 @@
 	queue->write = &queue->frame[0];
 	queue->read  = &queue->frame[0];
 	spin_unlock_irqrestore(&queue->lock, flag);
+	spin_lock_init(&queue->lock);
 	return;
 }
 
Index: kernel/drivers/media/sprd_dcam/sharkl/dcam_drv.c
===================================================================
--- kernel/drivers/media/sprd_dcam/sharkl/dcam_drv.c	(revision 182224)
+++ kernel/drivers/media/sprd_dcam/sharkl/dcam_drv.c	(revision 182225)
@@ -320,6 +320,7 @@
 LOCAL int32_t     _dcam_frame_enqueue(struct dcam_frm_queue *queue, struct dcam_frame *frame);
 LOCAL int32_t     _dcam_frame_dequeue(struct dcam_frm_queue *queue, struct dcam_frame *frame);
 LOCAL void        _dcam_buf_queue_init(struct dcam_buf_queue *queue);
+LOCAL void        _dcam_buf_queue_deinit(struct dcam_buf_queue *queue);
 LOCAL int32_t     _dcam_buf_queue_write(struct dcam_buf_queue *queue, struct dcam_frame *frame);
 LOCAL int32_t     _dcam_buf_queue_read(struct dcam_buf_queue *queue, struct dcam_frame *frame);
 LOCAL void        _dcam_wait_update_done(enum dcam_path_index path_index, uint32_t *p_flag);
@@ -2875,6 +2876,24 @@
 	return;
 }
 
+LOCAL void _dcam_buf_queue_deinit(struct dcam_buf_queue *queue)
+{
+    unsigned long            flag;
+
+    if (DCAM_ADDR_INVALID(queue)) {
+        printk("DCAM: invalid heap %p \n", queue);
+        return;
+    }
+
+    spin_lock_irqsave(&queue->lock, flag);
+    memset((void*)queue, 0, sizeof(struct dcam_buf_queue));
+    queue->write = &queue->frame[0];
+    queue->read  = &queue->frame[0];
+    spin_unlock_irqrestore(&queue->lock, flag);
+    spin_lock_init(&queue->lock);
+    return;
+}
+
 LOCAL int32_t _dcam_buf_queue_write(struct dcam_buf_queue *queue, struct dcam_frame *frame)
 {
 	int                      ret = DCAM_RTN_SUCCESS;
@@ -3005,17 +3024,17 @@
 
 	if (DCAM_PATH_IDX_0 & path_index) {
 		_dcam_frm_queue_clear(&s_p_dcam_mod->dcam_path0.frame_queue);
-		_dcam_buf_queue_init(&s_p_dcam_mod->dcam_path0.buf_queue);
+		_dcam_buf_queue_deinit(&s_p_dcam_mod->dcam_path0.buf_queue);
 	}
 
 	if (DCAM_PATH_IDX_1 & path_index) {
 		_dcam_frm_queue_clear(&s_p_dcam_mod->dcam_path1.frame_queue);
-		_dcam_buf_queue_init(&s_p_dcam_mod->dcam_path1.buf_queue);
+		_dcam_buf_queue_deinit(&s_p_dcam_mod->dcam_path1.buf_queue);
 	}
 
 	if (DCAM_PATH_IDX_2 & path_index) {
 		_dcam_frm_queue_clear(&s_p_dcam_mod->dcam_path2.frame_queue);
-		_dcam_buf_queue_init(&s_p_dcam_mod->dcam_path2.buf_queue);
+		_dcam_buf_queue_deinit(&s_p_dcam_mod->dcam_path2.buf_queue);
 	}
 
 	return;
Index: kernel/drivers/media/sprd_dcam/pike/dcam_drv.c
===================================================================
--- kernel/drivers/media/sprd_dcam/pike/dcam_drv.c	(revision 182224)
+++ kernel/drivers/media/sprd_dcam/pike/dcam_drv.c	(revision 182225)
@@ -314,6 +314,7 @@
 LOCAL int32_t     _dcam_frame_enqueue(struct dcam_frm_queue *queue, struct dcam_frame *frame);
 LOCAL int32_t     _dcam_frame_dequeue(struct dcam_frm_queue *queue, struct dcam_frame *frame);
 LOCAL void        _dcam_buf_queue_init(struct dcam_buf_queue *queue);
+LOCAL void        _dcam_buf_queue_deinit(struct dcam_buf_queue *queue);
 LOCAL int32_t     _dcam_buf_queue_write(struct dcam_buf_queue *queue, struct dcam_frame *frame);
 LOCAL int32_t     _dcam_buf_queue_read(struct dcam_buf_queue *queue, struct dcam_frame *frame);
 LOCAL void        _dcam_wait_update_done(enum dcam_path_index path_index, uint32_t *p_flag);
@@ -2822,6 +2823,24 @@
 	return;
 }
 
+LOCAL void _dcam_buf_queue_deinit(struct dcam_buf_queue *queue)
+{
+    unsigned long            flag;
+
+    if (DCAM_ADDR_INVALID(queue)) {
+        printk("DCAM: invalid heap %p \n", queue);
+        return;
+    }
+
+    spin_lock_irqsave(&queue->lock, flag);
+    memset((void*)queue, 0, sizeof(struct dcam_buf_queue));
+    queue->write = &queue->frame[0];
+    queue->read  = &queue->frame[0];
+    spin_unlock_irqrestore(&queue->lock, flag);
+    spin_lock_init(&queue->lock);
+    return;
+}
+
 LOCAL int32_t _dcam_buf_queue_write(struct dcam_buf_queue *queue, struct dcam_frame *frame)
 {
 	int                      ret = DCAM_RTN_SUCCESS;
@@ -2950,17 +2969,17 @@
 
 	if (DCAM_PATH_IDX_0 & path_index) {
 		_dcam_frm_queue_clear(&s_p_dcam_mod->dcam_path0.frame_queue);
-		_dcam_buf_queue_init(&s_p_dcam_mod->dcam_path0.buf_queue);
+		_dcam_buf_queue_deinit(&s_p_dcam_mod->dcam_path0.buf_queue);
 	}
 
 	if (DCAM_PATH_IDX_1 & path_index) {
 		_dcam_frm_queue_clear(&s_p_dcam_mod->dcam_path1.frame_queue);
-		_dcam_buf_queue_init(&s_p_dcam_mod->dcam_path1.buf_queue);
+		_dcam_buf_queue_deinit(&s_p_dcam_mod->dcam_path1.buf_queue);
 	}
 
 	if (DCAM_PATH_IDX_2 & path_index) {
 		_dcam_frm_queue_clear(&s_p_dcam_mod->dcam_path2.frame_queue);
-		_dcam_buf_queue_init(&s_p_dcam_mod->dcam_path2.buf_queue);
+		_dcam_buf_queue_deinit(&s_p_dcam_mod->dcam_path2.buf_queue);
 	}
 
 	return;
Index: kernel/drivers/media/radio/sprd2331/fmdrv_main.h
===================================================================
--- kernel/drivers/media/radio/sprd2331/fmdrv_main.h	(revision 182224)
+++ kernel/drivers/media/radio/sprd2331/fmdrv_main.h	(revision 182225)
@@ -23,14 +23,19 @@
 #ifndef _FMDRV_MAIN_H
 #define _FMDRV_MAIN_H
 #include <linux/fs.h>
+
 int fm_open(struct inode *, struct file *);
 int fm_powerup(void *);
 int fm_powerdown(void);
 int fm_tune(void *);
 int fm_seek(void *);
+int fm_mute(void *);
 int fm_getrssi(void *);
-int fm_mute(void *);
 int fm_rds_onoff(void *);
+int fm_set_volume(void *arg);
+int fm_rw_reg(void *arg);
 int fm_read_rds_data(struct file *, char *, size_t , loff_t *);
+int fm_sdio_write(unsigned char *, unsigned int);
+
 struct fm_rds_data *get_rds_data();
 #endif
Index: kernel/drivers/media/radio/sprd2331/fmdrv_ops.c
===================================================================
--- kernel/drivers/media/radio/sprd2331/fmdrv_ops.c	(revision 182224)
+++ kernel/drivers/media/radio/sprd2331/fmdrv_ops.c	(revision 182225)
@@ -80,7 +80,7 @@
 
 	case FM_IOCTL_SETVOL:
 		fm_pr("----SETVOL----");
-		ret = 0;
+		ret = fm_set_volume(argp);
 		break;
 
 	case FM_IOCTL_GETVOL:
@@ -124,7 +124,7 @@
 
 	case FM_IOCTL_RW_REG:
 		fm_pr("----RW_REG----");
-		ret = 0;
+		ret = fm_rw_reg(argp);
 		break;
 
 	case FM_IOCTL_GETMONOSTERO:
@@ -386,7 +386,7 @@
 #endif
 
 	fm_pr("**********************************************");
-	fm_pr(" marlin2 FM driver ");
+	fm_pr(" marlin FM driver ");
 	fm_pr(" Version: %s", ver_str);
 	fm_pr(" Build date: %s %s", __DATE__, __TIME__);
 	fm_pr("**********************************************");
Index: kernel/drivers/media/radio/sprd2331/fmdrv_main.c
===================================================================
--- kernel/drivers/media/radio/sprd2331/fmdrv_main.c	(revision 182224)
+++ kernel/drivers/media/radio/sprd2331/fmdrv_main.c	(revision 182225)
@@ -22,7 +22,7 @@
 
 /* driver definitions */
 #define DRIVER_AUTHOR "Songhe Wei<songhe.wei@spreadtrum.com>"
-#define DRIVER_DESC "SDIO radio driver for marlin2 FM Radio Receivers,"\
+#define DRIVER_DESC "SDIO radio driver for marlin FM Radio Receivers,"\
 "share SDIO with BT/WIFI"
 
 #include <linux/miscdevice.h>
@@ -67,65 +67,63 @@
 struct fmdrv_ops *fmdev;
 static struct fm_rds_data *g_rds_data_string;
 
-/*
-
-static int fm_read_rds_data(struct file *filp, char __user *buf,
-		size_t count, loff_t *pos)
+static void receive_tasklet(unsigned long arg)
 {
-	rdsdata_struct rds_data;
-	int len = 0;
-	sprintf(rds_data.ps_data.PS[3], "haha");
-	sprintf(rds_data.rt_data.TextData[3], "george debuging");
-	rds_data.rt_data.TextLength = strlen(rds_data.rt_data.TextData[3]);
-	fm_pr("***** %s *****\n", rds_data.rt_data.TextData[3]);
-	rds_data.pty = 1;
-	rds_data.event_status = 0xff;
-	if (copy_to_user(buf, &rds_data, sizeof(rdsdata_struct)));
-	if (read_flag == 1) {
-		read_flag = 0;
-		fm_pr("* rrds fmdev->read_buf: %s *\n", fmdev->read_buf);
-	}
-	len = sizeof(rdsdata_struct);
-	return len;
-}
-*/
+	unsigned char *pdata;/* the data from SDIO is event data*/
+	struct fm_rx_data *rx = NULL;
+	read_flag = 1;
 
+	while (!list_empty(&fmdev->rx_head)) {
+		spin_lock_bh(&fmdev->rw_lock);
 
+		rx = list_first_entry_or_null(&fmdev->rx_head,
+				struct fm_rx_data, entry);
+		if (rx)
+			list_del(&rx->entry);
 
+		else {
+			spin_unlock_bh(&fmdev->rw_lock);
+			return;
+		}
+		pdata = rx->buf;
+		if (*pdata != '1') {
+			memcpy(fmdev->read_buf, rx->buf, FM_READ_SIZE);
+			/*pdata = fmdev->read_buf;*/
+		}
 
-static void receive_tasklet(unsigned long arg)
-{
-	unsigned char *pdata;/* the data from SDIO is event data*/
-	read_flag = 1;
-	pdata = fmdev->read_buf;
+		if (*pdata == '1') {
+			pdata = pdata + 2;
+			rds_parser(pdata, 12);
+			/*wake_up_interruptible(&fmdev->rds_han.rx_queue);*/
+			}
 
-	if (*pdata == '1') {
-		pdata = pdata + 2;
-		rds_parser(pdata, 12);
-		/*wake_up_interruptible(&fmdev->rds_han.rx_queue);*/
+		/* seek event before: status,RSSI,SNR,Freq */
+		/* seek event after: 4,status,RSSI,SNR,Freq */
+		else if ((*pdata == '4') ||
+			((fmdev->seek_flag == 1) && (*pdata == '3')) ||
+			((fmdev->seek_flag == 1) && (*pdata == '0'))) {
+			fmdev->seek_flag = 0;
+			fm_pr("RX before seektask_completion=0x%x",
+				fmdev->seektask_completion.done);
+			complete(&fmdev->seektask_completion);
+			fm_pr("RX after seektask_completion=0x%x",
+				fmdev->seektask_completion.done);
 		}
 
-	/* seek event before: status,RSSI,SNR,Freq */
-	/* seek event after: 4,status,RSSI,SNR,Freq */
-	else if ((*pdata == '4') ||
-		((fmdev->seek_flag == 1) && (*pdata == '3')) ||
-		((fmdev->seek_flag == 1) && (*pdata == '0'))) {
-		fmdev->seek_flag = 0;
-		fm_pr("RX before seektask_completion=0x%x",
-			fmdev->seektask_completion.done);
-		complete(&fmdev->seektask_completion);
-		fm_pr("RX after seektask_completion=0x%x",
-			fmdev->seektask_completion.done);
+		else {
+			fm_pr("receive_tasklet before completion=0x%x",
+				fmdev->completed.done);
+			complete(&fmdev->completed);
+			fm_pr("receive_tasklet after completion=0x%x",
+				fmdev->completed.done);
+		}
+		fm_pr("fm free start\n");
+		kfree(rx->buf);
+		rx->buf = NULL;
+		kfree(rx);
+		rx = NULL;
+		spin_unlock_bh(&fmdev->rw_lock);
 	}
-
-	else {
-		fm_pr("receive_tasklet before completion=0x%x",
-			fmdev->completed.done);
-		complete(&fmdev->completed);
-		fm_pr("receive_tasklet after completion=0x%x",
-			fmdev->completed.done);
-	}
-
 }
 
 /* ssize_t */
@@ -221,22 +219,22 @@
 	return 0;
 }
 
-void parse_at_fm_num(int *num)
+void parse_at_fm_num(int *num, int offset)
 {
 	int i = 0;
 	int len = 0;
-	char *cur_ptr;
-	int result = 0;
+	unsigned char *cur_ptr;
+	unsigned int result = 0;
 	int ret = 0;
 
-	cur_ptr = fmdev->read_buf;
 	read_flag = 0;
+	cur_ptr = (unsigned char *)fmdev->read_buf + offset;
 	len = strlen(cur_ptr);
 	result = cur_ptr[0] - '0';
 	for (i = 1; i < len; i++)
 		result = result * 10 + cur_ptr[i] - '0';
 	*num = result;
-	fm_pr("fm num event have come num = %d", result);
+	fm_pr("fm num event have come, num = %d", result);
 
 	return;
 }
@@ -247,17 +245,8 @@
 	return 0;
 }
 
-/*
-static int fm_read_rds_data(struct file *filp,char __user *buf,
-size_t count,loff_t *pos)
-{
-	return 0;
-}
-*/
-
 void fm_sdio_read(void)
 {
-	memset(fmdev->read_buf, 0, FM_READ_SIZE);
 	fmdev->rcv_len = sdio_dev_get_chn_datalen(FM_CHANNEL_READ);
 	if (fmdev->rcv_len <= 0) {
 		fm_err("FM_CHANNEL_READ len err\n");
@@ -266,12 +255,32 @@
 	if (fmdev->rcv_len > FM_READ_SIZE)
 		fm_err("The read data len:%d, beyond max read:%d",
 		fmdev->rcv_len, FM_READ_SIZE);
-	sdio_dev_read(FM_CHANNEL_READ, fmdev->read_buf, &fmdev->rcv_len);
-	fm_pr("* fmdev->read_buf: %s *\n", fmdev->read_buf);
+
+	if (fmdev != NULL) {
+
+		struct fm_rx_data *rx =
+			kmalloc(sizeof(struct fm_rx_data), GFP_KERNEL);
+		if (!rx) {
+			pr_err("(fmdrv): %s(): No memory to create fm rx data\n",
+					__func__);
+			return -ENOMEM;
+		}
+		rx->buf = kmalloc(FM_READ_SIZE, GFP_KERNEL);
+		if (!rx->buf) {
+			pr_err("(fmdrv): %s(): No memory to create fm rx buf\n",
+					__func__);
+			return -ENOMEM;
+		}
+		sdio_dev_read(FM_CHANNEL_READ, rx->buf, &fmdev->rcv_len);
+		fm_pr("* fmdev->read_buf: %s *\n", rx->buf);
+		spin_lock_bh(&fmdev->rw_lock);
+		list_add_tail(&rx->entry, &fmdev->rx_head);
+		spin_unlock_bh(&fmdev->rw_lock);
+	}
 	return;
 }
 
-int fm_sdio_write(char *buffer, uint32 size)
+int fm_sdio_write(unsigned char *buffer, uint32 size)
 {
 	sdio_dev_write(FM_CHANNEL_WRITE, buffer, size);
 	printk_ratelimited(KERN_INFO "%s size: %d\n", __func__, size);
@@ -332,23 +341,29 @@
 	unsigned long timeleft;
 	int ret = 0;
 
+	mutex_lock(&fmdev->mutex);
 	init_completion(&fmdev->completed);
 	fm_pr("fm_write_completion done=0X%x", fmdev->completed.done);
 	ret = fm_write_buf(array);
 	if (ret) {
+		mutex_unlock(&fmdev->mutex);
 		fm_pr("fm write fail ret =%d\n", ret);
 		return -EFAULT;
 	}
+
 	timeleft = wait_for_completion_timeout(&fmdev->completed,
 		FM_DRV_TX_TIMEOUT);
 	fm_pr("fm_write_after_completion done=0X%x", fmdev->completed.done);
 	if (!timeleft) {
+		mutex_unlock(&fmdev->mutex);
 		fm_err("Timeout, %d\n", ETIMEDOUT);
 		return -ETIMEDOUT;
 	} else {
+		mutex_unlock(&fmdev->mutex);
 		fm_pr("success!");
 		return 0;
 	}
+
 }
 
 /*
@@ -409,7 +424,8 @@
 */
 
 int fm_tune(void *arg)
-{   struct fm_tune_parm parm;
+{
+	struct fm_tune_parm parm;
 	int ret = 0;
 	if (copy_from_user(&parm, arg, sizeof(parm))) {
 		fm_pr("fm tune 's ret value is -eFAULT\n");
@@ -482,9 +498,10 @@
 
 	sprintf(fmdev->write_buf, "at+fm=13\r\n");
 	ret = fm_write(fmdev->write_buf);
-	if (read_flag == 1)
-		parse_at_fm_num(&rssi);
-	else {
+	if (read_flag == 1) {
+		/*status, rssi*/
+		parse_at_fm_num(&rssi, 2);
+	} else {
 		fm_pr("fm getrssi can not get read buf\n");
 		return -EFAULT;
 	}
@@ -506,6 +523,75 @@
 	return 0;
 }
 
+int fm_set_volume(void *arg)
+{
+	unsigned char vol;
+	int ret = 0;
+	if (copy_from_user(&vol, arg, sizeof(vol))) {
+		fm_pr("fm set volume 's ret value is -eFAULT\n");
+		return -EFAULT;
+	}
+	fm_pr("fm ioctl set_volume = %d\n", vol);
+	sprintf(fmdev->write_buf, "at+fm=10,%d\r\n", vol);
+	ret = fm_write(fmdev->write_buf);
+	if (ret < 0) {
+		fm_pr("(fmdrv) %s FM set volume status failed %d\n",
+			__func__, ret);
+	}
+
+	return ret;
+}
+
+int fm_rw_reg(void *arg)
+{
+	struct fm_reg_ctl_parm parm;
+	unsigned char a[7];
+	int ret = 0;
+	unsigned char  respond_len;
+	unsigned short freq;
+
+	if (copy_from_user(&parm, arg, sizeof(parm))) {
+		fm_err("fm rw register's ret value is -eFAULT\n");
+		return -EFAULT;
+	}
+	/*addr: address offset, default base is FM ctrl base reg*/
+	fm_pr("fm ioctl rw reg flag=%d, addr=0x%x, value=0x%x\n",
+		parm.rw_flag, parm.addr, parm.val);
+	if (parm.rw_flag == 1) {
+		/*read reg*/
+		sprintf(fmdev->write_buf, "at+fm=22,%d\r\n", parm.addr);
+		ret = fm_write(fmdev->write_buf);
+		if (ret < 0) {
+			fm_pr("(fmdrv) %s FM read reg value failed %d\n",
+				__func__, ret);
+			return ret;
+		}
+		if (read_flag == 1) {
+			/*status, reg_val*/
+			parse_at_fm_num(&parm.val, 2);
+			fm_pr("FM get reg 0x%x value=0x%x\n",
+				parm.addr, parm.val);
+		} else {
+			fm_pr("fm read reg: not get value!\n");
+			return -EFAULT;
+		}
+	} else if (parm.rw_flag == 0) {
+		/*write reg*/
+		sprintf(fmdev->write_buf, "at+fm=23,%d,%d\r\n",
+			parm.addr, parm.val);
+		ret = fm_write(fmdev->write_buf);
+		if (ret < 0) {
+			fm_pr("(fmdrv) %s FM write reg value failed %d\n",
+				__func__, ret);
+			return ret;
+		}
+	}
+	if (copy_to_user(arg, &parm, sizeof(parm)))
+		ret = -EFAULT;
+
+	return ret;
+}
+
 struct fm_rds_data *get_rds_data()
 {
 	fm_pr("fm get rds data\n");
@@ -549,8 +635,6 @@
 {
 	/*memcpy(g_rds_data_string, fm_rds_info, sizeof(struct fm_rds_data)); */
 	g_rds_data_string = fm_rds_info;
-
-
 }
 
 void fm_rds_init(void)
@@ -569,9 +653,12 @@
 		return;
 	init_completion(&fmdev->completed);
 	init_completion(&fmdev->seektask_completion);
+	spin_lock_init(&(fmdev->rw_lock));
+	mutex_init(&fmdev->mutex);
+	INIT_LIST_HEAD(&(fmdev->rx_head));
 
 	fmdev->read_buf =  kzalloc(FM_READ_SIZE, GFP_KERNEL);
-/*malloc mem for rds struct */
+	/*malloc mem for rds struct */
 	fm_rds_info = kzalloc(sizeof(struct fm_rds_data), GFP_KERNEL);
 	if (NULL == fm_rds_info) {
 		fm_err("fm can't allocate FM RDS buffer\n");
@@ -586,7 +673,8 @@
 	/* RDS init*/
 	fm_rds_init();
 	init_waitqueue_head(&fmdev->rds_han.rx_queue);
-/* tasklet_schedule(&fmdev->rx_task);/* not here,should called in callback*/
+	/* tasklet_schedule(&fmdev->rx_task);
+	/* not here,should called in callback*/
 
 	return ret;
 }
Index: kernel/drivers/media/radio/sprd2331/fmdrv.h
===================================================================
--- kernel/drivers/media/radio/sprd2331/fmdrv.h	(revision 182224)
+++ kernel/drivers/media/radio/sprd2331/fmdrv.h	(revision 182225)
@@ -227,6 +227,14 @@
 };
 #endif
 
+struct fm_reg_ctl_parm {
+	unsigned char err;
+	unsigned int addr;
+	unsigned int val;
+	/*0:write, 1:read*/
+	unsigned char rw_flag;
+} __packed;
+
 #define NEED_DEF_RDS 1
 
 #if NEED_DEF_RDS
@@ -458,6 +466,11 @@
 	int cycle; /*  repeat times */
 };
 
+struct fm_rx_data {
+	unsigned char		*buf;
+	struct list_head	entry;
+};
+
 struct fm_rds_handle {
 	unsigned char rds_flag;/*is RDS on or off */
 	wait_queue_head_t rx_queue;
Index: kernel/drivers/sipc/seth.c
===================================================================
--- kernel/drivers/sipc/seth.c	(revision 182224)
+++ kernel/drivers/sipc/seth.c	(revision 182225)
@@ -127,7 +127,15 @@
 	struct seth_dtrans_stats dt_stats; /* record data_transfer statistics*/
 #endif /* SETH_NAPI */
 } SEth;
-uint32_t seth_gro_enable = 1;
+
+static int gro_enable __read_mostly = 0;
+/*
+  * Set gro_enable module para, which enables us dynamicly switch gro on/off
+  * Directory: /sys/module/seth/parameter/gro_enable
+  */
+module_param(gro_enable, int, S_IRUGO | S_IWUSR);
+MODULE_PARM_DESC(gro_enable, "enable NIC GRO function");
+
 #ifdef CONFIG_DEBUG_FS
 struct dentry *root = NULL;
 uint32_t seth_print_seq;
@@ -388,7 +396,7 @@
 #ifdef CONFIG_SETH_GRO_DISABLE
 		netif_receive_skb(skb);
 #else
-		if (likely(seth_gro_enable))
+		if (likely(gro_enable))
 			napi_gro_receive(napi, skb);
 		else
 			netif_receive_skb(skb);
@@ -506,7 +514,7 @@
 #ifdef CONFIG_SETH_GRO_DISABLE
 		netif_receive_skb(skb);
 #else
-		if (likely(seth_gro_enable))
+		if (likely(gro_enable))
 			napi_gro_receive(napi, skb);
 		else
 			netif_receive_skb(skb);
@@ -1364,9 +1372,6 @@
 	debugfs_create_u32("print_seq", S_IRUGO | S_IWUGO, root, &seth_print_seq);
 	debugfs_create_u32("print_ipid", S_IRUGO | S_IWUGO,
 		root, &seth_print_ipid);
-	debugfs_create_u32("gro_enable", S_IRUGO | S_IWUGO,
-		root, &seth_gro_enable);
-
 	return 0;
 }
 
Index: kernel/drivers/input/fingerprint/Makefile
===================================================================
--- kernel/drivers/input/fingerprint/Makefile	(revision 182224)
+++ kernel/drivers/input/fingerprint/Makefile	(revision 182225)
@@ -5,4 +5,5 @@
 # Each configuration option enables a list of files.
 
 obj-$(CONFIG_FINGERPRINT_FPC1020) += fpc1020/
-obj-$(CONFIG_FINGERPRINT_ET300)   += et300/
\ No newline at end of file
+obj-$(CONFIG_FINGERPRINT_ET300)   += et300/
+obj-$(CONFIG_FINGERPRINT_FPSENSOR)   += fpsensor/
Index: kernel/drivers/input/fingerprint/fpsensor/fpsensor_spi.h
===================================================================
--- kernel/drivers/input/fingerprint/fpsensor/fpsensor_spi.h	(revision 0)
+++ kernel/drivers/input/fingerprint/fpsensor/fpsensor_spi.h	(revision 182225)
@@ -0,0 +1,114 @@
+/*
+ * Copyright (C) 2012-2022 fpsensor Technology (Beijing) Co., Ltd.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#ifndef __FPSENSOR_SPI_H
+#define __FPSENSOR_SPI_H
+
+#include <linux/types.h>
+#include <linux/cdev.h>
+#include <linux/wait.h>
+
+/**********************IO Magic**********************/
+#define CONFIG_OF 1
+#define FPSENSOR_IOC_MAGIC    0xf0
+
+typedef enum fpsensor_key_event {
+	FPSENSOR_KEY_NONE = 0,
+	FPSENSOR_KEY_HOME,
+	FPSENSOR_KEY_POWER,
+	FPSENSOR_KEY_MENU,
+	FPSENSOR_KEY_BACK,
+	FPSENSOR_KEY_CAPTURE,
+	FPSENSOR_KEY_UP,
+	FPSENSOR_KEY_DOWN,
+	FPSENSOR_KEY_RIGHT,
+	FPSENSOR_KEY_LEFT,
+	FPSENSOR_KEY_TAP,
+	FPSENSOR_KEY_HEAVY
+} fpsensor_key_event_t;
+
+struct fpsensor_key {
+	enum fpsensor_key_event key;
+	uint32_t value;   /* key down = 1, key up = 0 */
+};
+
+/* define commands */
+#define FPSENSOR_IOC_INIT                       _IOWR(FPSENSOR_IOC_MAGIC, 0, unsigned int)
+#define FPSENSOR_IOC_EXIT                       _IOWR(FPSENSOR_IOC_MAGIC, 1, unsigned int)
+#define FPSENSOR_IOC_RESET                      _IOWR(FPSENSOR_IOC_MAGIC, 2, unsigned int)
+#define FPSENSOR_IOC_ENABLE_IRQ                 _IOWR(FPSENSOR_IOC_MAGIC, 3, unsigned int)
+#define FPSENSOR_IOC_DISABLE_IRQ                _IOWR(FPSENSOR_IOC_MAGIC, 4, unsigned int)
+#define FPSENSOR_IOC_GET_INT_VAL                _IOWR(FPSENSOR_IOC_MAGIC, 5, unsigned int)
+#define FPSENSOR_IOC_DISABLE_SPI_CLK            _IOWR(FPSENSOR_IOC_MAGIC, 6, unsigned int)
+#define FPSENSOR_IOC_ENABLE_SPI_CLK             _IOWR(FPSENSOR_IOC_MAGIC, 7, unsigned int)
+#define FPSENSOR_IOC_ENABLE_POWER               _IOWR(FPSENSOR_IOC_MAGIC, 8, unsigned int)
+#define FPSENSOR_IOC_DISABLE_POWER              _IOWR(FPSENSOR_IOC_MAGIC, 9, unsigned int)
+#define FPSENSOR_IOC_INPUT_KEY_EVENT            _IOWR(FPSENSOR_IOC_MAGIC, 10, struct fpsensor_key)
+/* fp sensor has change to sleep mode while screen off */
+#define FPSENSOR_IOC_ENTER_SLEEP_MODE           _IOWR(FPSENSOR_IOC_MAGIC, 11, unsigned int)
+#define FPSENSOR_IOC_REMOVE                     _IOWR(FPSENSOR_IOC_MAGIC, 12, unsigned int)
+#define FPSENSOR_IOC_CANCEL_WAIT                _IOWR(FPSENSOR_IOC_MAGIC, 13, unsigned int)
+
+#define FPSENSOR_IOC_MAXNR    14  /* THIS MACRO IS NOT USED NOW... */
+static const char * const pctl_names[] = {
+	"fpsensor_reset_reset",
+	"fpsensor_reset_active",
+	"fpsensor_irq_active",
+};
+
+typedef struct {
+	dev_t devno;
+	struct class           *class;
+	struct device          *device;
+	struct cdev            cdev;
+
+	spinlock_t    spi_lock;
+	struct platform_device *platform_device;
+	struct list_head device_entry;
+	struct input_dev *input;
+
+	/* buffer is NULL unless this device is open (users > 0) */
+	unsigned int users;
+	u8 *buffer;
+	struct mutex buf_lock;
+	u8 buf_status;
+	u8 device_available;    /* changed during fingerprint chip sleep and wakeup phase */
+	int device_count;
+	/* fasync support used */
+	u8 probe_finish;
+	u8 irq_count;
+	/* bit24-bit32 of signal count */
+	/* bit16-bit23 of event type, 1: key down; 2: key up; 3: fp data ready; 4: home key */
+	/* bit0-bit15 of event type, buffer status register */
+	u32 event_type;
+	u8 sig_count;
+	u8 is_sleep_mode;
+	/* for netlink use */
+	struct sock *nl_sk;
+	int pid;
+	volatile unsigned int RcvIRQ;
+	int irq;
+	int irq_gpio;
+	int reset_gpio;
+	int power_gpio;
+	struct wake_lock ttw_wl;
+	/*pinctrl*/
+	struct pinctrl *fingerprint_pinctrl;
+	struct pinctrl_state *pinctrl_state[ARRAY_SIZE(pctl_names)];
+	wait_queue_head_t wq_irq_return;
+	int cancel;
+    u8 suspend_flag;
+} fpsensor_data_t;
+extern void setRcvIRQ(int  val);
+
+#endif    /* __FPSENSOR_SPI_TEE_H */
Index: kernel/drivers/input/fingerprint/fpsensor/fpsensor_spi.c
===================================================================
--- kernel/drivers/input/fingerprint/fpsensor/fpsensor_spi.c	(revision 0)
+++ kernel/drivers/input/fingerprint/fpsensor/fpsensor_spi.c	(revision 182225)
@@ -0,0 +1,802 @@
+/*
+ * Copyright (C) 2012-2022 fpsensor Technology (Beijing) Co., Ltd.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#include <linux/clk.h>
+#include <linux/delay.h>
+#include <linux/gpio.h>
+#include <linux/interrupt.h>
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/mutex.h>
+#include <linux/regulator/consumer.h>
+#include <linux/platform_device.h>
+#include <linux/wakelock.h>
+#include <linux/input.h>
+#include <net/sock.h>
+#include <linux/compat.h>
+#include <linux/notifier.h>
+#include "fpsensor_spi.h"
+#ifdef CONFIG_OF
+#include <linux/of.h>
+#include <linux/of_irq.h>
+#include <linux/of_gpio.h>
+#include <linux/of_platform.h>
+#endif
+
+
+
+/**************************debug******************************/
+#define ERR_LOG     (0)
+#define INFO_LOG    (1)
+#define DEBUG_LOG   (2)
+
+/* debug log setting */
+u8 fpsensor_debug_level = INFO_LOG;
+
+#define fpsensor_debug(level, fmt, args...) do { \
+	if (fpsensor_debug_level >= level) { \
+		printk("fpCoreCa [fpsensor] " fmt, ##args); \
+	} \
+} while (0)
+
+#define FUNC_ENTRY()  fpsensor_debug(DEBUG_LOG, "%s, %d, entry\n", __func__, __LINE__)
+#define FUNC_EXIT()   fpsensor_debug(DEBUG_LOG, "%s, %d, exit\n", __func__, __LINE__)
+
+/*platform device name*/
+#define FPSENSOR_DEV_NAME       "fpsensor"
+/*device name after register in charater*/
+#define FPSENSOR_CLASS_NAME     "fpsensor"
+#define FPSENSOR_MAJOR          255
+#define N_SPI_MINORS            32    /* ... up to 256 */
+static DECLARE_BITMAP(minors, N_SPI_MINORS);
+#define FPSENSOR_SPI_VERSION "fpsensor_spi_tee_v0.11"
+#define FPSENSOR_INPUT_NAME  "fpsensor_keys"
+
+/**************************feature control******************************/
+#define FPSENSOR_IOCTL      1
+
+/***********************input *************************/
+#ifndef FPSENSOR_INPUT_HOME_KEY
+/* on MTK EVB board, home key has been redefine to KEY_HOMEPAGE! */
+/* double check the define on customer board!!! */
+#define FPSENSOR_INPUT_HOME_KEY     KEY_HOMEPAGE /* KEY_HOME */
+#define FPSENSOR_INPUT_MENU_KEY     KEY_MENU
+#define FPSENSOR_INPUT_BACK_KEY     KEY_BACK
+#define FPSENSOR_INPUT_FF_KEY       KEY_POWER
+#define FPSENSOR_INPUT_CAMERA_KEY   KEY_CAMERA
+#define FPSENSOR_INPUT_OTHER_KEY    KEY_VOLUMEDOWN  /* temporary key value for capture use */
+#endif
+
+#define FPSENSOR_NAV_UP_KEY     19  /*KEY_UP*/
+#define FPSENSOR_NAV_DOWN_KEY   20  /*KEY_DOWN*/
+#define FPSENSOR_NAV_LEFT_KEY   21  /*KEY_LEFT*/
+#define FPSENSOR_NAV_RIGHT_KEY  22  /*KEY_RIGHT*/
+#define FPSENSOR_NAV_TAP_KEY    23
+
+/*************************************************************/
+/* global variables                         */
+fpsensor_data_t *g_fpsensor = NULL;
+EXPORT_SYMBOL(g_fpsensor);
+
+static unsigned bufsiz = (150 * 150);
+module_param(bufsiz, uint, S_IRUGO);
+MODULE_PARM_DESC(bufsiz, "data bytes in biggest supported SPI message");
+
+
+int test_irq_ret = 0;
+
+/* -------------------------------------------------------------------- */
+/* fingerprint chip hardware configuration                                  */
+/* -------------------------------------------------------------------- */
+static void fpsensor_gpio_free(fpsensor_data_t *fpsensor_dev)
+{
+	struct device *dev = &fpsensor_dev->platform_device->dev;
+	if (g_fpsensor->irq_gpio != 0) {
+		//devm_gpio_free(dev, g_fpsensor->irq_gpio);
+        gpio_free(g_fpsensor->irq_gpio);
+	}
+	if (g_fpsensor->reset_gpio != 0) {
+		//devm_gpio_free(dev, g_fpsensor->reset_gpio);
+        gpio_free(g_fpsensor->reset_gpio);
+	}
+}
+
+static void fpsensor_irq_gpio_cfg(void)
+{
+	int error;
+
+	fpsensor_debug(DEBUG_LOG, "********(%d)(%s)\n", __LINE__, __func__);
+	error = gpio_direction_input(g_fpsensor->irq_gpio);
+
+	if (error) {
+		fpsensor_debug(ERR_LOG, "setup fp interrupt gpio for input failed!error[%d]\n", error);
+		return ;
+	}
+
+	fpsensor_debug(DEBUG_LOG, "********(%d)(%s)\n", __LINE__, __func__);
+	g_fpsensor->irq = gpio_to_irq(g_fpsensor->irq_gpio);
+	fpsensor_debug(INFO_LOG, "fp interrupt irq number[%d]\n", g_fpsensor->irq);
+
+	if (g_fpsensor->irq < 0) {
+		fpsensor_debug(ERR_LOG, "fp interrupt gpio to irq failed!\n");
+		return ;
+	}
+
+	return;
+}
+
+static int fpsensor_request_named_gpio(fpsensor_data_t *fpsensor_dev, const char *label, int *gpio, int gpio_index)
+{
+	struct device *dev = &fpsensor_dev->platform_device->dev;
+	int rc = 0;
+	#if 0
+	struct device_node *np = dev->of_node;
+	int rc = of_get_named_gpio(np, label, 0);
+	if (rc < 0)  {
+		fpsensor_debug(ERR_LOG, "failed to get '%s'\n", label);
+		return rc;
+	}
+	*gpio = rc;
+	rc = devm_gpio_request(dev, *gpio, label);
+	if (rc) {
+		fpsensor_debug(ERR_LOG, "failed to request gpio %d\n", *gpio);
+		return rc;
+	}
+	#else
+	if (gpio_index == 1) { //reset
+		*gpio = 156;
+	} else if (gpio_index == 0) { //irq
+		*gpio = 155;
+	}
+	rc = gpio_request(*gpio, label);
+	#endif
+	fpsensor_debug(ERR_LOG, "%s %d\n", label, *gpio);
+	return 0;
+}
+
+/* delay ms after reset */
+static void fpsensor_hw_reset(int delay)
+{
+	FUNC_ENTRY();
+	fpsensor_debug(ERR_LOG, "test_log, irq: %d, irq_ret:%d\n", g_fpsensor->irq, test_irq_ret);
+
+	gpio_set_value(g_fpsensor->reset_gpio, 1);
+
+	udelay(100);
+	gpio_set_value(g_fpsensor->reset_gpio, 0);
+
+	udelay(1000);
+	gpio_set_value(g_fpsensor->reset_gpio, 1);
+
+	if (delay) {
+		udelay(delay);/* delay is configurable */
+	}
+	FUNC_EXIT();
+	return;
+}
+
+static int fpsensor_get_gpio_dts_info(void)
+{
+	int rc = 0;
+
+	FUNC_ENTRY();
+	/*get reset resource*/
+	rc = fpsensor_request_named_gpio(g_fpsensor, "fpint-gpios", &g_fpsensor->irq_gpio, 0);
+	if (rc) {
+		fpsensor_debug(ERR_LOG, "Failed to request irq GPIO. rc = %d\n", rc);
+		return -1;
+	}
+
+	rc = fpsensor_request_named_gpio(g_fpsensor, "fpreset-gpios", &g_fpsensor->reset_gpio, 1);
+	if (rc) {
+		fpsensor_debug(ERR_LOG, "Failed to request reset GPIO. rc = %d\n", rc);
+		return -1;
+	}
+	gpio_direction_output(g_fpsensor->reset_gpio, 1);
+	fpsensor_hw_reset(1250);
+
+	return rc;
+}
+
+static void fpsensor_spi_clk_enable(u8 bonoff)
+{
+
+}
+
+static void fpsensor_hw_power_enable(u8 onoff)
+{
+
+}
+
+static void fpsensor_enable_irq(fpsensor_data_t *fpsensor_dev)
+{
+    FUNC_ENTRY();
+    setRcvIRQ(0);
+    /* Request that the interrupt should be wakeable */
+    if (fpsensor_dev->irq_count == 0) {
+		enable_irq(fpsensor_dev->irq);
+		fpsensor_dev->irq_count = 1;
+    }
+    FUNC_EXIT();
+    return;
+}
+
+static void fpsensor_disable_irq(fpsensor_data_t *fpsensor_dev)
+{
+	FUNC_ENTRY();
+
+	if (0 == fpsensor_dev->device_available) {
+		fpsensor_debug(ERR_LOG, "%s, devices not available\n", __func__);
+	} else {
+		if (0 == fpsensor_dev->irq_count) {
+			fpsensor_debug(ERR_LOG, "%s, irq already disabled\n", __func__);
+		} else {
+			disable_irq_nosync(fpsensor_dev->irq);
+			fpsensor_dev->irq_count = 0;
+			fpsensor_debug(DEBUG_LOG, "%s disable interrupt!\n", __func__);
+		}
+	}
+	setRcvIRQ(0);
+	FUNC_EXIT();
+	return;
+}
+
+/* -------------------------------------------------------------------- */
+/* file operation function                                              */
+/* -------------------------------------------------------------------- */
+static ssize_t fpsensor_read(struct file *filp, char __user *buf, size_t count, loff_t *f_pos)
+{
+	fpsensor_debug(ERR_LOG, "Not support read opertion in TEE version\n");
+	return -EFAULT;
+}
+
+static ssize_t fpsensor_write(struct file *filp, const char __user *buf, size_t count, loff_t *f_pos)
+{
+	fpsensor_debug(ERR_LOG, "Not support write opertion in TEE version\n");
+	return -EFAULT;
+}
+
+static irqreturn_t fpsensor_irq(int irq, void *handle)
+{
+	fpsensor_data_t *fpsensor_dev = (fpsensor_data_t *)handle;
+	int irqf = 0;
+
+    fpsensor_debug(ERR_LOG, "*************** irq %s %d\n", __func__, gpio_get_value(g_fpsensor->irq_gpio));
+
+#if 1 //test irq wakeup
+    irqf = IRQF_TRIGGER_RISING | IRQF_ONESHOT | IRQF_NO_SUSPEND;
+    if (fpsensor_dev->suspend_flag == 1) {
+        irq_set_irq_type(fpsensor_dev->irq, irqf);
+        fpsensor_dev->suspend_flag = 0;
+    }
+#endif
+
+	/* Make sure 'wakeup_enabled' is updated before using it
+	** since this is interrupt context (other thread...) */
+	smp_rmb();
+	wake_lock_timeout(&fpsensor_dev->ttw_wl, msecs_to_jiffies(1000));
+
+#if FPSENSOR_IOCTL
+	setRcvIRQ(1);
+#endif
+	wake_up_interruptible(&fpsensor_dev->wq_irq_return);
+	fpsensor_dev->sig_count++;
+
+	return IRQ_HANDLED;
+}
+
+void setRcvIRQ(int  val)
+{
+	fpsensor_data_t *fpsensor_dev = g_fpsensor;
+	fpsensor_dev->RcvIRQ = val;
+}
+
+static long fpsensor_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
+{
+	fpsensor_data_t *fpsensor_dev = NULL;
+	struct fpsensor_key fpsensor_key;
+	uint32_t key_event;
+	int retval = 0;
+	unsigned int val = 0;
+	int irqf;
+
+	fpsensor_debug(INFO_LOG, "[rickon]: fpsensor ioctl cmd : 0x%x \n", cmd);
+	fpsensor_dev = (fpsensor_data_t *)filp->private_data;
+	/*clear cancel flag*/
+	fpsensor_dev->cancel = 0 ;
+	switch (cmd) {
+	case FPSENSOR_IOC_INIT:
+		fpsensor_debug(INFO_LOG, "%s: fpsensor init started======\n", __func__);
+		retval = fpsensor_get_gpio_dts_info();
+		if (retval) {
+			break;
+		}
+		fpsensor_irq_gpio_cfg();
+		/*regist irq*/
+		irqf = IRQF_TRIGGER_RISING | IRQF_ONESHOT | IRQF_NO_SUSPEND;
+		//irqf = IRQF_TRIGGER_RISING | IRQF_ONESHOT; //use this can not power on?
+
+                retval = request_threaded_irq(g_fpsensor->irq, fpsensor_irq, NULL, irqf, dev_name(&g_fpsensor->platform_device->dev), g_fpsensor);
+
+        test_irq_ret = retval;
+
+		if (retval == 0)
+			fpsensor_debug(INFO_LOG, " irq thread reqquest success!\n");
+		else
+			fpsensor_debug(INFO_LOG, " irq thread request failed , retval =%d \n", retval);
+		enable_irq_wake(g_fpsensor->irq);
+		fpsensor_dev->device_available = 1;
+		fpsensor_dev->irq_count = 0;
+		/*sunbo: add to avoid "unbalanced enable for IRQ 419" warning - begin*/
+		fpsensor_dev->irq_count = 1;
+		fpsensor_disable_irq(fpsensor_dev);
+		/*sunbo: add to avoid "unbalanced enable for IRQ 419" warning - end*/
+
+		fpsensor_dev->sig_count = 0;
+
+		fpsensor_debug(INFO_LOG, "%s: fpsensor init finished======\n", __func__);
+		break;
+
+	case FPSENSOR_IOC_EXIT:
+		fpsensor_disable_irq(fpsensor_dev);
+		if (fpsensor_dev->irq) {
+			free_irq(fpsensor_dev->irq, fpsensor_dev);
+			fpsensor_dev->irq_count = 0;
+		}
+		fpsensor_dev->device_available = 0;
+		fpsensor_gpio_free(g_fpsensor);
+		fpsensor_debug(INFO_LOG, "%s: fpsensor exit finished======\n", __func__);
+		break;
+
+	case FPSENSOR_IOC_RESET:
+		fpsensor_debug(INFO_LOG, "%s: chip reset command\n", __func__);
+		fpsensor_hw_reset(1250);
+		break;
+
+	case FPSENSOR_IOC_ENABLE_IRQ:
+		fpsensor_debug(INFO_LOG, "%s: chip ENable IRQ command\n", __func__);
+		fpsensor_enable_irq(fpsensor_dev);
+		break;
+
+	case FPSENSOR_IOC_DISABLE_IRQ:
+		fpsensor_debug(INFO_LOG, "%s: chip disable IRQ command\n", __func__);
+		fpsensor_disable_irq(fpsensor_dev);
+		break;
+	case FPSENSOR_IOC_GET_INT_VAL:
+		val = gpio_get_value(fpsensor_dev->irq_gpio);
+		if (copy_to_user((void __user *)arg, (void *)&val, sizeof(unsigned int))) {
+			fpsensor_debug(ERR_LOG, "Failed to copy data to user\n");
+			retval = -EFAULT;
+			break;
+		}
+		retval = 0;
+		break;
+	case FPSENSOR_IOC_ENABLE_SPI_CLK:
+		//fpsensor_debug(INFO_LOG, "%s: ENABLE_SPI_CLK ======\n", __func__);
+		fpsensor_spi_clk_enable(1);
+		break;
+	case FPSENSOR_IOC_DISABLE_SPI_CLK:
+		//fpsensor_debug(INFO_LOG, "%s: DISABLE_SPI_CLK ======\n", __func__);
+		fpsensor_spi_clk_enable(0);
+		break;
+	case FPSENSOR_IOC_ENABLE_POWER:
+		fpsensor_debug(INFO_LOG, "%s: FPSENSOR_IOC_ENABLE_POWER ======\n", __func__);
+		fpsensor_hw_power_enable(1);
+		break;
+	case FPSENSOR_IOC_DISABLE_POWER:
+		fpsensor_debug(INFO_LOG, "%s: FPSENSOR_IOC_DISABLE_POWER ======\n", __func__);
+		fpsensor_hw_power_enable(0);
+		break;
+	case FPSENSOR_IOC_INPUT_KEY_EVENT:
+		if (copy_from_user(&fpsensor_key, (struct fpsensor_key *)arg, sizeof(struct fpsensor_key))) {
+			fpsensor_debug(ERR_LOG, "Failed to copy input key event from user to kernel\n");
+			retval = -EFAULT;
+			break;
+		}
+		if (FPSENSOR_KEY_HOME == fpsensor_key.key) {
+			key_event = FPSENSOR_INPUT_HOME_KEY;
+		} else if (FPSENSOR_KEY_POWER == fpsensor_key.key) {
+			key_event = FPSENSOR_INPUT_FF_KEY;
+		} else if (FPSENSOR_KEY_CAPTURE == fpsensor_key.key) {
+			key_event = FPSENSOR_INPUT_CAMERA_KEY;
+		} else {
+			/* add special key define */
+			key_event = FPSENSOR_INPUT_OTHER_KEY;
+		}
+		fpsensor_debug(INFO_LOG, "%s: received key event[%d], key=%d, value=%d\n",
+			__func__, key_event, fpsensor_key.key, fpsensor_key.value);
+		if ((FPSENSOR_KEY_POWER == fpsensor_key.key || FPSENSOR_KEY_CAPTURE == fpsensor_key.key)
+		&& (fpsensor_key.value == 1)) {
+			input_report_key(fpsensor_dev->input, key_event, 1);
+			input_sync(fpsensor_dev->input);
+			input_report_key(fpsensor_dev->input, key_event, 0);
+			input_sync(fpsensor_dev->input);
+		} else if (FPSENSOR_KEY_UP == fpsensor_key.key) {
+			input_report_key(fpsensor_dev->input, FPSENSOR_NAV_UP_KEY, 1);
+			input_sync(fpsensor_dev->input);
+			input_report_key(fpsensor_dev->input, FPSENSOR_NAV_UP_KEY, 0);
+			input_sync(fpsensor_dev->input);
+		} else if (FPSENSOR_KEY_DOWN == fpsensor_key.key) {
+			input_report_key(fpsensor_dev->input, FPSENSOR_NAV_DOWN_KEY, 1);
+			input_sync(fpsensor_dev->input);
+			input_report_key(fpsensor_dev->input, FPSENSOR_NAV_DOWN_KEY, 0);
+			input_sync(fpsensor_dev->input);
+		} else if (FPSENSOR_KEY_RIGHT == fpsensor_key.key) {
+			input_report_key(fpsensor_dev->input, FPSENSOR_NAV_RIGHT_KEY, 1);
+			input_sync(fpsensor_dev->input);
+			input_report_key(fpsensor_dev->input, FPSENSOR_NAV_RIGHT_KEY, 0);
+			input_sync(fpsensor_dev->input);
+		} else if (FPSENSOR_KEY_LEFT == fpsensor_key.key) {
+			input_report_key(fpsensor_dev->input, FPSENSOR_NAV_LEFT_KEY, 1);
+			input_sync(fpsensor_dev->input);
+			input_report_key(fpsensor_dev->input, FPSENSOR_NAV_LEFT_KEY, 0);
+			input_sync(fpsensor_dev->input);
+		} else  if (FPSENSOR_KEY_TAP == fpsensor_key.key) {
+			input_report_key(fpsensor_dev->input, FPSENSOR_NAV_TAP_KEY, 1);
+			input_sync(fpsensor_dev->input);
+			input_report_key(fpsensor_dev->input, FPSENSOR_NAV_TAP_KEY, 0);
+			input_sync(fpsensor_dev->input);
+		} else if ((FPSENSOR_KEY_POWER != fpsensor_key.key) && (FPSENSOR_KEY_CAPTURE != fpsensor_key.key)) {
+			input_report_key(fpsensor_dev->input, key_event, fpsensor_key.value);
+			input_sync(fpsensor_dev->input);
+		}
+		break;
+
+	case FPSENSOR_IOC_ENTER_SLEEP_MODE:
+		fpsensor_dev->is_sleep_mode = 1;
+		break;
+	case FPSENSOR_IOC_REMOVE:
+
+		if (fpsensor_dev->input != NULL) {
+			input_unregister_device(fpsensor_dev->input);
+		}
+		device_destroy(fpsensor_dev->class, fpsensor_dev->devno);
+		unregister_chrdev_region(fpsensor_dev->devno, 1);
+		class_destroy(fpsensor_dev->class);
+
+
+		fpsensor_debug(INFO_LOG, "%s remove finished\n", __func__);
+		break;
+
+	case FPSENSOR_IOC_CANCEL_WAIT:
+		fpsensor_debug(INFO_LOG, "%s: FPSENSOR CANCEL WAIT\n", __func__);
+		wake_up_interruptible(&fpsensor_dev->wq_irq_return);
+		fpsensor_dev->cancel = 1;
+		break;
+	default:
+		fpsensor_debug(ERR_LOG, "fpsensor doesn't support this command(%d)\n", cmd);
+		break;
+	}
+
+	return retval;
+}
+
+static long fpsensor_compat_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
+{
+    return fpsensor_ioctl(filp, cmd, (unsigned long)(arg));
+}
+
+static unsigned int fpsensor_poll(struct file *filp, struct poll_table_struct *wait)
+{
+	unsigned int ret = 0;
+	fpsensor_debug(ERR_LOG, " support poll opertion  in   version\n");
+	ret |= POLLIN;
+	poll_wait(filp, &g_fpsensor->wq_irq_return, wait);
+	if (g_fpsensor->cancel == 1) {
+		fpsensor_debug(ERR_LOG, " cancle\n");
+		ret =  POLLERR;
+		g_fpsensor->cancel = 0;
+		return ret;
+	}
+	if (g_fpsensor->RcvIRQ) {
+        fpsensor_debug(ERR_LOG, " ******get irq\n");
+		ret |= POLLRDNORM;
+	} else {
+		ret = 0;
+	}
+	return ret;
+}
+
+/* -------------------------------------------------------------------- */
+/* device function                                  */
+/* -------------------------------------------------------------------- */
+static int fpsensor_open(struct inode *inode, struct file *filp)
+{
+	fpsensor_data_t *fpsensor_dev;
+
+	FUNC_ENTRY();
+	fpsensor_dev = container_of(inode->i_cdev, fpsensor_data_t, cdev);
+	fpsensor_dev->users++;
+	fpsensor_dev->device_available = 1;
+	filp->private_data = fpsensor_dev;
+	FUNC_EXIT();
+	return 0;
+}
+
+static int fpsensor_release(struct inode *inode, struct file *filp)
+{
+	fpsensor_data_t *fpsensor_dev;
+	int    status = 0;
+
+	FUNC_ENTRY();
+	fpsensor_dev = filp->private_data;
+	filp->private_data = NULL;
+
+	/*last close??*/
+	fpsensor_dev->users--;
+	if (!fpsensor_dev->users) {
+		fpsensor_debug(INFO_LOG, "%s, disble_irq. irq = %d\n", __func__, fpsensor_dev->irq);
+		fpsensor_disable_irq(fpsensor_dev);
+	}
+
+	fpsensor_dev->device_available = 0;
+	FUNC_EXIT();
+	return status;
+}
+
+static const struct file_operations fpsensor_fops = {
+	.owner          = THIS_MODULE,
+	.write          = fpsensor_write,
+	.read           = fpsensor_read,
+	.unlocked_ioctl = fpsensor_ioctl,
+	.compat_ioctl   = fpsensor_compat_ioctl,
+	.open           = fpsensor_open,
+	.release        = fpsensor_release,
+	.poll           = fpsensor_poll,
+
+};
+
+/* -------------------------------------------------------------------- */
+static int fpsensor_create_class(fpsensor_data_t *fpsensor)
+{
+	int error = 0;
+	BUILD_BUG_ON(N_SPI_MINORS > 256);
+	error = register_chrdev(FPSENSOR_MAJOR, FPSENSOR_DEV_NAME, &fpsensor_fops);
+	fpsensor->class = class_create(THIS_MODULE, FPSENSOR_CLASS_NAME);
+	if (IS_ERR(fpsensor->class)) {
+		fpsensor_debug(ERR_LOG, "%s, Failed to create class.\n", __func__);
+		error = PTR_ERR(fpsensor->class);
+	}
+
+	return error;
+}
+
+/* -------------------------------------------------------------------- */
+static int fpsensor_create_device(fpsensor_data_t *fpsensor)
+{
+	int error = 0;
+	unsigned long minor;
+	minor = find_first_zero_bit(minors, N_SPI_MINORS);
+	if (minor < N_SPI_MINORS) {
+		struct device *dev;
+
+		fpsensor->devno = MKDEV(FPSENSOR_MAJOR, minor);
+		dev = device_create(fpsensor->class, &fpsensor->platform_device->dev,  fpsensor->devno,
+			fpsensor, FPSENSOR_DEV_NAME);
+		error = IS_ERR(dev) ? PTR_ERR(dev) : 0;
+	} else {
+		fpsensor_debug(ERR_LOG, "no minor number available!\n");
+		error = -ENODEV;
+	}
+	set_bit(minor, minors);
+	return error;
+}
+
+/*-------------------------------------------------------------------------*/
+static int fpsensor_probe(struct platform_device *pdev)
+{
+	fpsensor_data_t *fpsensor_dev = NULL;
+	int error = 0;
+	int status = -EINVAL;
+
+	FUNC_ENTRY();
+    printk("fpCoreCa [fpsensor] probe\n");
+	/* Allocate driver data */
+	fpsensor_dev = kzalloc(sizeof(*fpsensor_dev), GFP_KERNEL);
+	if (!fpsensor_dev) {
+		fpsensor_debug(ERR_LOG, "%s, Failed to alloc memory for fpsensor device.\n", __func__);
+		FUNC_EXIT();
+		return -ENOMEM;
+	}
+	fpsensor_dev->platform_device = pdev ;
+
+	g_fpsensor = fpsensor_dev;
+	/* Initialize the driver data */
+	mutex_init(&fpsensor_dev->buf_lock);
+
+	fpsensor_dev->device_available = 0;
+	fpsensor_dev->irq = 0;
+	fpsensor_dev->probe_finish = 0;
+	fpsensor_dev->device_count = 0;
+	fpsensor_dev->users = 0;
+    g_fpsensor->suspend_flag = 0;
+	/*setup fpsensor configurations.*/
+	fpsensor_debug(INFO_LOG, "%s, Setting fpsensor device configuration.\n", __func__);
+	error = fpsensor_create_class(fpsensor_dev);
+	if (error)
+		goto err2;
+
+	error = fpsensor_create_device(fpsensor_dev);
+	if (error)
+		goto err2;
+
+	cdev_init(&fpsensor_dev->cdev, &fpsensor_fops);
+	fpsensor_dev->cdev.owner = THIS_MODULE;
+	error = cdev_add(&fpsensor_dev->cdev, fpsensor_dev->devno, 1);
+	if (error)
+		goto err2;
+
+	fpsensor_dev->input = input_allocate_device();
+	if (fpsensor_dev->input == NULL) {
+		fpsensor_debug(ERR_LOG, "%s, Failed to allocate input device.\n", __func__);
+		error = -ENOMEM;
+		goto err2;
+	}
+	__set_bit(EV_KEY, fpsensor_dev->input->evbit);
+	__set_bit(FPSENSOR_INPUT_HOME_KEY, fpsensor_dev->input->keybit);
+
+	__set_bit(FPSENSOR_INPUT_MENU_KEY, fpsensor_dev->input->keybit);
+	__set_bit(FPSENSOR_INPUT_BACK_KEY, fpsensor_dev->input->keybit);
+	__set_bit(FPSENSOR_INPUT_FF_KEY, fpsensor_dev->input->keybit);
+
+	__set_bit(FPSENSOR_NAV_TAP_KEY, fpsensor_dev->input->keybit);
+	__set_bit(FPSENSOR_NAV_UP_KEY, fpsensor_dev->input->keybit);
+	__set_bit(FPSENSOR_NAV_DOWN_KEY, fpsensor_dev->input->keybit);
+	__set_bit(FPSENSOR_NAV_RIGHT_KEY, fpsensor_dev->input->keybit);
+	__set_bit(FPSENSOR_NAV_LEFT_KEY, fpsensor_dev->input->keybit);
+	__set_bit(FPSENSOR_INPUT_CAMERA_KEY, fpsensor_dev->input->keybit);
+	fpsensor_dev->input->name = FPSENSOR_INPUT_NAME;
+	if (input_register_device(fpsensor_dev->input)) {
+		fpsensor_debug(ERR_LOG, "%s, Failed to register input device.\n", __func__);
+		error = -ENODEV;
+		goto err1;
+	}
+	fpsensor_dev->device_available = 1;
+	fpsensor_dev->irq_count = 0;
+	fpsensor_dev->sig_count = 0;
+	fpsensor_debug(INFO_LOG, "%s: fpsensor init finished======\n", __func__);
+
+	fpsensor_dev->probe_finish = 1;
+	fpsensor_dev->is_sleep_mode = 0;
+	fpsensor_spi_clk_enable(1);
+
+	init_waitqueue_head(&fpsensor_dev->wq_irq_return);
+	wake_lock_init(&g_fpsensor->ttw_wl, WAKE_LOCK_SUSPEND, "fpsensor_ttw_wl");
+	fpsensor_debug(INFO_LOG, "%s probe finished, normal driver version: %s\n", __func__,
+		FPSENSOR_SPI_VERSION);
+
+	FUNC_EXIT();
+	return 0;
+
+	err1:
+	input_free_device(fpsensor_dev->input);
+
+	err2:
+	device_destroy(fpsensor_dev->class, fpsensor_dev->devno);
+	fpsensor_hw_power_enable(0);
+	fpsensor_spi_clk_enable(0);
+	clear_bit(MINOR(fpsensor_dev->devno), minors);
+
+	kfree(fpsensor_dev);
+	FUNC_EXIT();
+	return status;
+}
+
+static int fpsensor_remove(struct platform_device *pdev)
+{
+	fpsensor_data_t *fpsensor_dev = g_fpsensor;
+	FUNC_ENTRY();
+
+	/* make sure ops on existing fds can abort cleanly */
+	if (fpsensor_dev->irq) {
+		free_irq(fpsensor_dev->irq, fpsensor_dev);
+	}
+	device_destroy(fpsensor_dev->class, fpsensor_dev->devno);
+	unregister_chrdev_region(fpsensor_dev->devno, 1);
+	class_destroy(fpsensor_dev->class);
+	if (fpsensor_dev->users == 0) {
+		if (fpsensor_dev->input != NULL)
+			input_unregister_device(fpsensor_dev->input);
+
+		if (fpsensor_dev->buffer != NULL)
+			kfree(fpsensor_dev->buffer);
+	}
+	clear_bit(MINOR(fpsensor_dev->devno), minors);
+	fpsensor_hw_power_enable(0);
+	wake_lock_destroy(&fpsensor_dev->ttw_wl);
+
+	fpsensor_debug(INFO_LOG, "%s remove finished\n", __func__);
+	kfree(fpsensor_dev);
+	FUNC_EXIT();
+	return 0;
+}
+
+#ifdef CONFIG_PM
+static int fpsensor_suspend(struct platform_device *pdev, pm_message_t state)
+{
+	int irqf = 0;
+
+	fpsensor_debug(INFO_LOG, "%s\n", __func__);
+	fpsensor_debug(INFO_LOG, "%s, irq is %d\n", __func__, gpio_get_value(g_fpsensor->irq_gpio));
+
+#if 1 //test irq wakeup
+    irqf = IRQF_TRIGGER_HIGH | IRQF_ONESHOT | IRQF_NO_SUSPEND;
+    fpsensor_disable_irq(g_fpsensor);
+    irq_set_irq_type(g_fpsensor->irq, irqf);
+    g_fpsensor->suspend_flag = 1;
+    fpsensor_enable_irq(g_fpsensor);
+#endif
+
+	fpsensor_debug(INFO_LOG, "%s exit\n", __func__);
+	fpsensor_debug(INFO_LOG, "%s, exit irq is %d\n", __func__, gpio_get_value(g_fpsensor->irq_gpio));
+	return 0;
+}
+
+static int fpsensor_resume(struct platform_device *pdev)
+{
+	fpsensor_debug(INFO_LOG, "%s\n", __func__);
+	return 0;
+}
+#endif
+
+/*-------------------------------------------------------------------------*/
+static struct of_device_id fpsensor_of_match[] = {
+	{ .compatible = "fpsensor,fingerprint", },
+	{}
+};
+MODULE_DEVICE_TABLE(of, fpsensor_of_match);
+static struct platform_driver fpsensor_driver = {
+	.driver = {
+		.name = FPSENSOR_DEV_NAME,
+		.owner = THIS_MODULE,
+		.of_match_table = fpsensor_of_match,
+	},
+	.probe = fpsensor_probe,
+	.remove = fpsensor_remove,
+#ifdef CONFIG_PM
+	.suspend = fpsensor_suspend,
+	.resume = fpsensor_resume,
+#endif
+};
+
+static int __init fpsensor_init(void)
+{
+    int status;
+
+    FUNC_ENTRY();
+    printk("fpCoreCa [fpsensor] \n");
+
+    status = platform_driver_register(&fpsensor_driver);
+    if (status < 0)
+    {
+        fpsensor_debug(ERR_LOG, "%s, Failed to register SPI driver.\n", __func__);
+    }
+    FUNC_EXIT();
+
+    return status;
+}
+module_init(fpsensor_init);
+
+static void __exit fpsensor_exit(void)
+{
+    FUNC_ENTRY();
+    platform_driver_unregister(&fpsensor_driver);
+    FUNC_EXIT();
+}
+module_exit(fpsensor_exit);
+
+MODULE_AUTHOR("xhli");
+MODULE_DESCRIPTION(" Fingerprint fpsensor TEE driver");
+MODULE_LICENSE("GPL");
+MODULE_ALIAS("platform:fpsensor-drivers");
+
Index: kernel/drivers/input/fingerprint/fpsensor/Makefile
===================================================================
--- kernel/drivers/input/fingerprint/fpsensor/Makefile	(revision 0)
+++ kernel/drivers/input/fingerprint/fpsensor/Makefile	(revision 182225)
@@ -0,0 +1,5 @@
+#
+# Makefile for fpsensor fingureprint sensor
+#
+
+obj-y += fpsensor_spi.o
Index: kernel/drivers/input/fingerprint/Kconfig
===================================================================
--- kernel/drivers/input/fingerprint/Kconfig	(revision 182224)
+++ kernel/drivers/input/fingerprint/Kconfig	(revision 182225)
@@ -9,7 +9,7 @@
 
 	  If unsure, say Y.
 
-if INPUT_FINGERPRINT
+#if INPUT_FINGERPRINT
 config FINGERPRINT_FPC1020
 	tristate "FPC1020 fingerprint driver"
 	depends on SPI_MASTER
@@ -29,4 +29,12 @@
 
 	  If unsure, say N.
 
-endif
+config FINGERPRINT_FPSENSOR
+	tristate "fpsensor fingerprint driver"
+    default y
+	help
+	  This option enables support for the fingerprint device via SPI.
+
+	  If unsure, say N.
+
+#endif
Index: kernel/drivers/input/misc/mc3xx0.c
===================================================================
--- kernel/drivers/input/misc/mc3xx0.c	(revision 0)
+++ kernel/drivers/input/misc/mc3xx0.c	(revision 182225)
@@ -0,0 +1,2495 @@
+/*****************************************************************************
+ *
+ * Copyright (c) 2013 mCube, Inc.  All rights reserved.
+ *
+ * This source is subject to the mCube Software License.
+ * This software is protected by Copyright and the information and source code
+ * contained herein is confidential. The software including the source code
+ * may not be copied and the information contained herein may not be used or
+ * disclosed except with the written permission of mCube Inc.
+ *
+ * All other rights reserved.
+ *
+ * This code and information are provided "as is" without warranty of any
+ * kind, either expressed or implied, including but not limited to the
+ * implied warranties of merchantability and/or fitness for a
+ * particular purpose.
+ *
+ * The following software/firmware and/or related documentation ("mCube Software")
+ * have been modified by mCube Inc. All revisions are subject to any receiver's
+ * applicable license agreements with mCube Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ *
+ *****************************************************************************/
+ 
+#include <linux/err.h>
+#include <linux/errno.h>
+#include <linux/delay.h>
+#include <linux/fs.h>
+#include <linux/i2c.h>
+#include <linux/input.h>
+#include <linux/input-polldev.h>
+#include <linux/miscdevice.h>
+#include <linux/uaccess.h>
+#include <linux/slab.h>
+#include <linux/workqueue.h>
+#include <linux/irq.h>
+#include <linux/gpio.h>
+#include <linux/interrupt.h>
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+#include <linux/earlysuspend.h>
+#endif
+
+#include <linux/i2c/mc3xx0.h>
+
+// register address define
+#define MC3XXX_XOUT_REG			0x00
+#define MC3XXX_YOUT_REG			0x01
+#define MC3XXX_ZOUT_REG			0x02
+#define MC3XXX_TILT_REG			0x03
+#define MC3XXX_OPSTAT_REG		0x04
+#define MC3XXX_SC_REG			0x05
+#define MC3XXX_INTEN_REG		0x06
+#define MC3XXX_MODE_REG			0x07
+#define MC3XXX_SAMPR_REG		0x08
+#define MC3XXX_TAPEN_REG		0x09
+#define MC3XXX_TAPP_REG			0x0A
+#define MC3XXX_DROP_REG			0x0B
+#define MC3XXX_SHDB_REG			0x0C
+#define MC3XXX_XOUT_EX_L_REG	0x0D
+#define MC3XXX_XOUT_EX_H_REG	0x0E
+#define MC3XXX_YOUT_EX_L_REG	0x0F
+#define MC3XXX_YOUT_EX_H_REG	0x10
+#define MC3XXX_ZOUT_EX_L_REG	0x11
+#define MC3XXX_ZOUT_EX_H_REG	0x12
+
+#define MC3XXX_CHIPID_REG		0x18
+
+#define MC3XXX_OUTCFG_REG		0x20
+#define MC3XXX_XOFFL_REG		0x21
+#define MC3XXX_XOFFH_REG		0x22
+#define MC3XXX_YOFFL_REG		0x23
+#define MC3XXX_YOFFH_REG		0x24
+#define MC3XXX_ZOFFL_REG		0x25
+#define MC3XXX_ZOFFH_REG		0x26
+#define MC3XXX_XGAIN_REG		0x27
+#define MC3XXX_YGAIN_REG		0x28
+#define MC3XXX_ZGAIN_REG		0x29
+
+#define MC3XXX_SHAKE_TH_REG		0x2B
+#define MC3XXX_UD_Z_TH_REG		0x2C
+#define MC3XXX_UD_X_TH_REG		0x2D
+#define MC3XXX_RL_Z_TH_REG		0x2E
+#define MC3XXX_RL_Y_TH_REG		0x2F
+#define MC3XXX_FB_Z_TH_REG		0x30
+#define MC3XXX_DROP_TH_REG		0x31
+#define MC3XXX_TAP_TH_REG		0x32
+
+#define MC3XXX_PCODE_REG		0x3B
+
+// mode
+#define MC3XXX_MODE_AUTO			0
+#define MC3XXX_MODE_WAKE			1
+#define MC3XXX_MODE_SNIFF			2
+#define MC3XXX_MODE_STANDBY		    3
+
+// range
+#define MC3XXX_RANGE_2G			    0
+#define MC3XXX_RANGE_4G			    1
+#define MC3XXX_RANGE_8G_10BIT		2
+#define MC3XXX_RANGE_8G_14BIT		3
+
+// bandwidth
+#define MC3XXX_BW_512HZ			    0
+#define MC3XXX_BW_256HZ			    1
+#define MC3XXX_BW_128HZ			    2
+#define MC3XXX_BW_64HZ				3
+#define MC3XXX_BW_32HZ				4
+#define MC3XXX_BW_16HZ				5
+#define MC3XXX_BW_8HZ				6
+
+// initial value	
+#define MC3XXX_RANGE_SET			MC3XXX_RANGE_8G_14BIT  /* +/-8g, 14bit */
+#define MC3XXX_BW_SET				MC3XXX_BW_128HZ /* 128HZ  */
+#define MC3XXX_MAX_DELAY			200
+#define ABSMIN_8G					(-8 * 1024)
+#define ABSMAX_8G					(8 * 1024)
+#define ABSMIN_1_5G					(-128)
+#define ABSMAX_1_5G				    (128)
+
+// 1g constant value
+#define GRAVITY_1G_VALUE			1024
+
+// product code
+#define MC3XXX_PCODE_3210		0x90
+#define MC3XXX_PCODE_3230		0x19
+#define MC3XXX_PCODE_3250		0x88
+#define MC3XXX_PCODE_3410		0xA8
+#define MC3XXX_PCODE_3410N		0xB8
+#define MC3XXX_PCODE_3430		0x29
+#define MC3XXX_PCODE_3430N		0x39
+#define MC3XXX_PCODE_3510B		0x40
+#define MC3XXX_PCODE_3530B		0x30
+#define MC3XXX_PCODE_3510C		0x10
+#define MC3XXX_PCODE_3530C		0x60
+
+#define MC3XXX_IOC_MAGIC 				77 //0x1D
+#define MC3XXX_ACC_IOCTL_SET_DELAY		_IOW(MC3XXX_IOC_MAGIC,0,int)
+#define MC3XXX_ACC_IOCTL_GET_DELAY		_IOR(MC3XXX_IOC_MAGIC,1,int)
+#define MC3XXX_ACC_IOCTL_SET_ENABLE		_IOW(MC3XXX_IOC_MAGIC,2,int)
+#define MC3XXX_ACC_IOCTL_GET_ENABLE		_IOR(MC3XXX_IOC_MAGIC,3,int)
+#define MC3XXX_ACC_IOCTL_CALIBRATION	_IOW(MC3XXX_IOC_MAGIC,4,int)
+
+
+// macro define
+#define delay_to_jiffies(d) ((d)?msecs_to_jiffies(d):1)
+#define actual_delay(d)     (jiffies_to_msecs(delay_to_jiffies(d)))
+
+// data declare
+enum mc3xxx_orientation {
+	MC3XXX_TOP_LEFT_DOWN = 0,
+	MC3XXX_TOP_RIGHT_DOWN,
+	MC3XXX_TOP_RIGHT_UP,
+	MC3XXX_TOP_LEFT_UP,
+	MC3XXX_BOTTOM_LEFT_DOWN,
+	MC3XXX_BOTTOM_RIGHT_DOWN,
+	MC3XXX_BOTTOM_RIGHT_UP,
+	MC3XXX_BOTTOM_LEFT_UP
+};
+
+enum mc3xxx_axis {
+	MC3XXX_AXIS_X = 0,
+	MC3XXX_AXIS_Y,
+	MC3XXX_AXIS_Z,
+	MC3XXX_AXIS_NUM
+};
+
+struct mc3xxxacc {
+	signed short x;
+	signed short y;
+	signed short z;
+};
+
+struct mc3xxx_hwmsen_convert {
+	signed char sign[3];
+	unsigned char map[3];
+};
+
+struct mc3xxx_data {
+	atomic_t enable;                /* attribute value */
+	atomic_t delay;                 /* attribute value */
+	atomic_t position;              /* attribute value */
+	atomic_t threshold;             /* attribute value */
+	struct mc3xxxacc value;
+	struct mutex value_mutex;
+	struct mutex enable_mutex;
+	struct i2c_client *client;
+	struct input_dev *input;
+	struct delayed_work work;
+	unsigned char product_code;
+	unsigned char resolution;
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+    struct early_suspend early_suspend; 
+#endif
+};
+
+/******************************
+ *** CONFIGURATIONS
+ ******************************/
+#define MCUBE_DOT_CALIBRATION
+//#define MCUBE_FUNC_DEBUG
+//#define I2C_BUS_NUM_STATIC_ALLOC
+#define MCUBE_I2C_BURST_LIMIT_2_BYTES
+//#define SUPPORT_VPROXIMITY_SENSOR
+
+#define MC3XXX_DEV_NAME       MC3XX0_ACC_I2C_NAME
+#define MC3XXX_DEV_VERSION    "2.0.3"
+#define MC3XXX_INPUT_NAME     "accelerometer"
+#define MC3XXX_I2C_ADDR       MC3XX0_ACC_I2C_ADDR
+
+#ifdef CONFIG_MACH_MM5029
+static unsigned char mc3xxx_current_placement = MC3XXX_BOTTOM_LEFT_DOWN; // current soldered placement
+#else
+static unsigned char mc3xxx_current_placement = MC3XXX_BOTTOM_RIGHT_DOWN; // current soldered placement
+#endif
+
+#ifdef MCUBE_FUNC_DEBUG
+    #define MC_PRINT(x...)        printk(x)
+    #define MC_ERR_PRINT(x...)    printk(x)
+#else
+    #define MC_PRINT(x...)
+    #define MC_ERR_PRINT(x...)
+#endif
+
+// Transformation matrix for chip mounting position
+static const struct mc3xxx_hwmsen_convert mc3xxx_cvt[] = {
+	{{  1,   1,   1}, { MC3XXX_AXIS_X,  MC3XXX_AXIS_Y,  MC3XXX_AXIS_Z}}, // 0: top   , left-down
+	{{ -1,   1,   1}, { MC3XXX_AXIS_Y,  MC3XXX_AXIS_X,  MC3XXX_AXIS_Z}}, // 1: top   , right-down
+	{{ -1,  -1,   1}, { MC3XXX_AXIS_X,  MC3XXX_AXIS_Y,  MC3XXX_AXIS_Z}}, // 2: top   , right-up
+	{{  1,  -1,   1}, { MC3XXX_AXIS_Y,  MC3XXX_AXIS_X,  MC3XXX_AXIS_Z}}, // 3: top   , left-up
+	{{ -1,   1,  -1}, { MC3XXX_AXIS_X,  MC3XXX_AXIS_Y,  MC3XXX_AXIS_Z}}, // 4: bottom, left-down
+	{{  1,   1,  -1}, { MC3XXX_AXIS_Y,  MC3XXX_AXIS_X,  MC3XXX_AXIS_Z}}, // 5: bottom, right-down
+	{{  1,  -1,  -1}, { MC3XXX_AXIS_X,  MC3XXX_AXIS_Y,  MC3XXX_AXIS_Z}}, // 6: bottom, right-up
+	{{ -1,  -1,  -1}, { MC3XXX_AXIS_Y,  MC3XXX_AXIS_X,  MC3XXX_AXIS_Z}}, // 7: bottom, left-up
+};
+
+static struct i2c_client *mc3xxx_client = NULL;
+
+static int mc3xxx_data_resolution[4] = {
+	256, // +/- 2g, 10bit
+	128, // +/- 4g, 10bit
+	64,  // +/- 8g, 10bit
+	1024 // +/- 8g, 14bit
+};
+
+static GSENSOR_VECTOR3D mc3xxx_gain = {0};
+
+#ifdef I2C_BUS_NUM_STATIC_ALLOC
+#define I2C_STATIC_BUS_NUM       2
+
+static struct i2c_board_info  mc3xxx_i2c_boardinfo = {
+	I2C_BOARD_INFO(MC3XXX_DEV_NAME, MC3XXX_I2C_ADDR)
+};
+#endif
+
+static unsigned char s_bPCODE      = 0x00;
+static unsigned short mc3xxx_i2c_auto_probe_addr[] = { 0x4C, 0x6C, 0x4E, 0x6D, 0x6E, 0x6F };
+
+#define REMAP_IF_MC3250_READ(nDataX, nDataY) \
+            if (MC3XXX_PCODE_3250 == s_bPCODE)          \
+            {                                                                         \
+                int    _nTemp = 0;                                           \
+                                                                                       \
+                _nTemp = nDataX;                                         \
+                nDataX = nDataY;                                         \
+                nDataY = -_nTemp;                                      \
+            }
+
+#define REMAP_IF_MC3250_WRITE(nDataX, nDataY) \
+            if (MC3XXX_PCODE_3250 == s_bPCODE)            \
+            {                                                                           \
+                int    _nTemp = 0;                                             \
+                                                                                         \
+                _nTemp = nDataX;                                           \
+                nDataX = -nDataY;                                         \
+                nDataY = _nTemp;                                          \
+            }
+
+#define REMAP_IF_MC34XX_N(nDataX, nDataY)        \
+            if ((MC3XXX_PCODE_3410N == s_bPCODE) ||  \
+                 (MC3XXX_PCODE_3430N == s_bPCODE))     \
+            {                                                                          \
+                nDataX = -nDataX;                                        \
+                nDataY = -nDataY;                                       \
+            }
+
+#define IS_MC35XX()                                                  \
+            ((MC3XXX_PCODE_3510B == s_bPCODE) ||   \
+             (MC3XXX_PCODE_3510C == (s_bPCODE&0xF1)) ||   \
+             (MC3XXX_PCODE_3530B == s_bPCODE) ||   \
+             (MC3XXX_PCODE_3530C == (s_bPCODE&0xF1)))
+
+#define REMAP_IF_MC35XX(nDataX, nDataY)          \
+            if (IS_MC35XX())                                            \
+            {                                                                       \
+                nDataX = -nDataX;                                     \
+                nDataY = -nDataY;                                    \
+            }
+
+
+#ifdef MCUBE_DOT_CALIBRATION
+#define CALIB_PATH			"/data/data/com.mcube.acc/files/mcube-calib.txt"
+#define DATA_PATH			"/sdcard/mcube-register-map.txt"
+//static char file_path[128] = "/data/data/com.mcube.acc/files/mcube-calib.txt";
+//static char file_path[128] = "/productinfo/mcube-calib.txt";
+//static char factory_path[128] ="/data/data/com.mcube.acc/files/fac-calib.txt";
+
+//static GSENSOR_VECTOR3D mc3xxx_gain;
+static SENSOR_DATA gain_data = {0}, offset_data = {0};
+static unsigned char offset_buf[9] = {0};
+static struct file *fd_file = NULL;
+static int load_cali_cnt = 30;
+static bool IsRbmMode = false;
+static mm_segment_t oldfs = 0;
+static SENSOR_DATA mc3xxx_cali_data = {0};
+
+static void mc3xxx_read_cali_file(struct mc3xxx_data *mc3xxx);
+static int mc3xxx_read_true_data(struct mc3xxx_data *mc3xxx, struct mc3xxxacc *acc);
+#endif
+
+static inline int mc3xxx_smbus_read_byte(struct i2c_client *client,
+		unsigned char reg_addr, unsigned char *data)
+{
+	signed int dummy = 0;
+	dummy = i2c_smbus_read_byte_data(client, reg_addr);
+	if (dummy < 0)
+		return dummy;
+	*data = dummy & 0x000000ff;
+
+	return 0;
+}
+
+static inline int mc3xxx_smbus_write_byte(struct i2c_client *client,
+		unsigned char reg_addr, unsigned char *data)
+{
+	signed int dummy = 0;
+
+	dummy = i2c_smbus_write_byte_data(client, reg_addr, *data);
+	if (dummy < 0)
+		return dummy;
+	return 0;
+}
+
+static inline int mc3xxx_smbus_read_block(struct i2c_client *client,
+		unsigned char reg_addr, unsigned char *data, unsigned char len)
+{
+	signed int dummy = 0;
+
+    #ifdef MCUBE_I2C_BURST_LIMIT_2_BYTES
+        for (  ; len > 1; (len -= 2))
+        {
+            dummy = i2c_smbus_read_i2c_block_data(client, reg_addr, 2, data);
+            if (dummy < 0)
+                return dummy;
+            reg_addr += 2;
+            data += 2;
+        }
+        
+        if (0 == len)
+            return 0;
+    #endif
+	
+	dummy = i2c_smbus_read_i2c_block_data(client, reg_addr, len, data);
+	if (dummy < 0)
+		return dummy;
+
+	return 0;
+}
+
+static inline int mc3xxx_smbus_write_block(struct i2c_client *client,
+		unsigned char reg_addr, unsigned char *data, unsigned char len)
+{
+	signed int dummy = 0;
+
+    #ifdef MCUBE_I2C_BURST_LIMIT_2_BYTES
+        for (  ; len > 1; (len -= 2))
+        {
+            dummy = i2c_smbus_write_i2c_block_data(client, reg_addr, 2, data);
+            if (dummy < 0)
+                return dummy;
+            reg_addr += 2;
+            data += 2;
+        }
+        
+        if (0 == len)
+            return 0;
+    #endif
+
+	dummy = i2c_smbus_write_i2c_block_data(client, reg_addr, len, data);
+	if (dummy < 0)
+		return dummy;
+	return 0;
+}
+
+static bool mc3xxx_is_high_end(unsigned char product_code)
+{
+	if ((MC3XXX_PCODE_3230 == product_code) || (MC3XXX_PCODE_3430 == product_code) ||
+	     (MC3XXX_PCODE_3430N == product_code) || (MC3XXX_PCODE_3530B == product_code) ||
+	     (MC3XXX_PCODE_3530C == (product_code&0xF1)))
+		return false;
+	else
+		return true;
+}
+
+static bool mc3xxx_is_mc3510(unsigned char product_code)
+{
+	if ((MC3XXX_PCODE_3510B == product_code) || (MC3XXX_PCODE_3510C == (product_code&0xF1)))
+		return true;
+	else
+		return false;
+}
+
+static bool mc3xxx_is_mc3530(unsigned char product_code)
+{
+	if ((MC3XXX_PCODE_3530B == product_code) || (MC3XXX_PCODE_3530C == (product_code&0xF1)))
+		return true;
+	else
+		return false;
+}
+
+static bool mc3xxx_validate_pcode(unsigned char bPCode)
+{
+	if (   (MC3XXX_PCODE_3210  == bPCode) || (MC3XXX_PCODE_3230  == bPCode)
+	    || (MC3XXX_PCODE_3250  == bPCode)
+	    || (MC3XXX_PCODE_3410  == bPCode) || (MC3XXX_PCODE_3430  == bPCode)
+	    || (MC3XXX_PCODE_3410N == bPCode) || (MC3XXX_PCODE_3430N == bPCode)
+	    || (MC3XXX_PCODE_3510B == bPCode) || (MC3XXX_PCODE_3530B == bPCode)
+	    || (MC3XXX_PCODE_3510C == (bPCode&0xF1)) || (MC3XXX_PCODE_3530C == (bPCode&0xF1)) )
+	{
+		return true;
+	}    
+
+	return false;
+}
+
+static int mc3xxx_detect_pcode(struct i2c_client *client)
+{
+	int ret = 0;
+	unsigned char product_code = 0;
+	int _nProbeAddrCount = (sizeof(mc3xxx_i2c_auto_probe_addr) / sizeof(mc3xxx_i2c_auto_probe_addr[0]));
+	int _nCount = 0;
+
+	MC_PRINT("%s: entered\n", __func__);
+
+	for (_nCount = 0; _nCount < _nProbeAddrCount; _nCount++)
+	{
+    	client->addr = mc3xxx_i2c_auto_probe_addr[_nCount];
+
+		ret = mc3xxx_smbus_read_byte(client, MC3XXX_PCODE_REG, &product_code);
+		if (ret)
+		{
+			MC_PRINT("%s: read error: %x\n", __func__, ret);
+			continue;
+		}
+
+		if (true == mc3xxx_validate_pcode(product_code))
+		{
+			s_bPCODE = product_code;
+			return product_code;
+		}
+	}
+
+	return -1;
+}
+
+static int mc3xxx_read_chip_id(struct i2c_client *client, char *buf)
+{
+	u8 bChipID[4] = { 0 };
+	int res = 0;
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	res = mc3xxx_smbus_read_block(mc3xxx->client, 0x3C, bChipID, 4);
+
+	if (res)
+	{
+		MC_ERR_PRINT("%s: i2c error!\n", __func__);
+		bChipID[0] = 0;
+		bChipID[1] = 0;
+		bChipID[2] = 0;
+		bChipID[3] = 0;
+	}
+
+	MC_PRINT("%s: %02X-%02X-%02X-%02X\n", __func__, bChipID[0], bChipID[1], bChipID[2], bChipID[3]);
+
+	return sprintf(buf, "%02X-%02X-%02X-%02X\n", bChipID[0], bChipID[1], bChipID[2], bChipID[3]);
+}
+
+static int mc3xxx_set_mode(struct i2c_client *client, unsigned char mode)
+{
+	int comres = 0 ;
+	unsigned char data = 0;
+
+	if (4 > mode) {
+		comres = mc3xxx_smbus_read_byte(client, MC3XXX_MODE_REG, &data);
+		data &= ~0x03;
+		data |= mode;
+		
+		comres += mc3xxx_smbus_write_byte(client, MC3XXX_MODE_REG, &data);
+	} else {
+		comres = -1 ;
+	}
+
+	return comres;
+}
+
+static int mc3xxx_get_mode(struct i2c_client *client, unsigned char *mode)
+{
+	int comres = 0;
+	unsigned char data = 0;
+
+	comres = mc3xxx_smbus_read_byte(client, MC3XXX_MODE_REG, &data);
+
+	*mode = data & 0x03;
+	
+	return comres;
+}
+
+static int mc3xxx_set_range(struct i2c_client *client, unsigned char range)
+{
+	int comres = 0;
+	unsigned char data = 0;
+	unsigned char pcode = 0;
+
+	if (4 > range) {
+		comres += mc3xxx_smbus_read_byte(client, MC3XXX_PCODE_REG, &pcode);
+		if (mc3xxx_is_mc3510(pcode))
+		{
+			data = 0x25;
+			comres = mc3xxx_smbus_write_byte(client, MC3XXX_OUTCFG_REG, &data);
+			mc3xxx_gain.x = mc3xxx_gain.y = mc3xxx_gain.z = 1024;
+			return comres;
+		}
+		else if (mc3xxx_is_mc3530(pcode))
+		{
+			data = 0x02;
+			comres = mc3xxx_smbus_write_byte(client, MC3XXX_OUTCFG_REG, &data);
+			mc3xxx_gain.x = mc3xxx_gain.y = mc3xxx_gain.z = 64;
+			return comres;
+		}
+
+		if (mc3xxx_is_high_end(pcode)) {
+			data = (range << 2) | 0x33;
+			comres = mc3xxx_smbus_write_byte(client, MC3XXX_OUTCFG_REG, &data);
+			if (0 == comres)
+				mc3xxx_gain.x = mc3xxx_gain.y = mc3xxx_gain.z = mc3xxx_data_resolution[range];
+		}
+		else {
+			//data = 0x32;
+			mc3xxx_gain.x = mc3xxx_gain.y = mc3xxx_gain.z = 86;
+		}
+	} else {
+		comres = -1 ;
+	}
+
+	return comres;
+}
+
+static int mc3xxx_get_range(struct i2c_client *client, unsigned char *range)
+{
+	int comres = 0;
+	unsigned char data = 0;
+
+	comres = mc3xxx_smbus_read_byte(client, MC3XXX_OUTCFG_REG, &data);
+	*range = ((data >> 2) & 0x03);
+
+	return comres;
+}
+
+static int mc3xxx_set_bandwidth(struct i2c_client *client, unsigned char BW)
+{
+	int comres = 0;
+	unsigned char data = 0;
+
+	if (7 > BW) {
+		comres = mc3xxx_smbus_read_byte(client, MC3XXX_OUTCFG_REG, &data);
+		data &= ~(0x07 << 4);
+		data |= (BW << 4);
+		comres += mc3xxx_smbus_write_byte(client, MC3XXX_OUTCFG_REG, &data);
+	} else {
+		comres = -1 ;
+	}
+
+	return comres;
+}
+
+static int mc3xxx_get_bandwidth(struct i2c_client *client, unsigned char *BW)
+{
+	int comres = 0;
+	unsigned char data = 0;
+
+	comres = mc3xxx_smbus_read_byte(client, MC3XXX_OUTCFG_REG, &data);
+	*BW = ((data >> 4) & 0x07);
+
+	return comres;
+}
+
+static int mc3xxx_init(struct mc3xxx_data *mc3xxx)
+{
+	int rc = 0;
+	
+	if (true == mc3xxx_is_high_end(mc3xxx->product_code))
+	{
+		rc = mc3xxx_set_bandwidth(mc3xxx->client, MC3XXX_BW_SET);
+		rc += mc3xxx_set_range(mc3xxx->client, MC3XXX_RANGE_SET);
+	}
+ 	else if(mc3xxx_is_mc3530(mc3xxx->product_code))
+    {
+		rc = mc3xxx_set_range(mc3xxx->client, MC3XXX_RANGE_SET);
+        mc3xxx_gain.x = mc3xxx_gain.y = mc3xxx_gain.z = 64;        
+    }
+	else
+	{
+		//rc = mc3xxx_set_range(mc3xxx->client, MC3XXX_RANGE_SET);
+		mc3xxx_gain.x = mc3xxx_gain.y = mc3xxx_gain.z = 86;
+	}
+
+	return rc;
+}
+
+static int mc3xxx_read_accel_xyz(struct mc3xxx_data *mc3xxx, struct mc3xxxacc *acc, int orient)
+{
+	int comres = -1;
+	unsigned char data[6] = { 0 };
+	//s16 tmp = 0;
+	s16 raw[3] = { 0 };
+	const struct mc3xxx_hwmsen_convert *pCvt = NULL;
+
+	if (true == mc3xxx_is_high_end(mc3xxx->product_code))
+	{
+		comres = mc3xxx_smbus_read_block(mc3xxx->client, MC3XXX_XOUT_EX_L_REG, data, 6);
+		raw[0] = (s16)(data[0] + (data[1] << 8));
+		raw[1] = (s16)(data[2] + (data[3] << 8));
+		raw[2] = (s16)(data[4] + (data[5] << 8));
+	}
+	else
+	{
+		comres = mc3xxx_smbus_read_block(mc3xxx->client, MC3XXX_XOUT_REG, data, 3);
+		raw[0] = (s8)data[0];
+		raw[1] = (s8)data[1];
+		raw[2] = (s8)data[2];
+	}
+
+	if (comres)
+	{
+		MC_ERR_PRINT("%s: i2c error!\n", __func__);
+		return comres;
+	}
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s: %d, %d, %d\n",__func__, raw[0], raw[1], raw[2]);
+#endif
+
+	raw[0] = raw[0] * GRAVITY_1G_VALUE / mc3xxx_gain.x;
+	raw[1] = raw[1] * GRAVITY_1G_VALUE / mc3xxx_gain.y;
+	raw[2] = raw[2] * GRAVITY_1G_VALUE / mc3xxx_gain.z;
+
+	REMAP_IF_MC3250_READ(raw[0], raw[1]);
+	REMAP_IF_MC34XX_N(raw[0], raw[1]);
+	REMAP_IF_MC35XX(raw[0], raw[1]);
+
+	pCvt = &mc3xxx_cvt[orient];
+	acc->x = pCvt->sign[MC3XXX_AXIS_X] * raw[pCvt->map[MC3XXX_AXIS_X]];
+	acc->y = pCvt->sign[MC3XXX_AXIS_Y] * raw[pCvt->map[MC3XXX_AXIS_Y]];
+	acc->z = pCvt->sign[MC3XXX_AXIS_Z] * raw[pCvt->map[MC3XXX_AXIS_Z]];
+	
+	return comres;
+}
+
+static void mc3xxx_work_func(struct work_struct *work)
+{
+	static struct mc3xxxacc acc = { 0 };
+	struct mc3xxx_data *mc3xxx = container_of((struct delayed_work *)work, struct mc3xxx_data, work);
+	unsigned long delay = msecs_to_jiffies(atomic_read(&mc3xxx->delay));
+
+#ifdef MCUBE_DOT_CALIBRATION
+	mc3xxx_read_cali_file(mc3xxx);
+	mc3xxx_read_true_data(mc3xxx, &acc);
+#else
+	mc3xxx_read_accel_xyz(mc3xxx, &acc, mc3xxx_current_placement);
+#endif
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s: %d, %d, %d\n",__func__, acc.x, acc.y, acc.z);
+#endif
+/*add by yuweining for cts test fail 20161011 start*/
+	if(mc3xxx->value.x == acc.x && mc3xxx->value.y == acc.y && mc3xxx->value.z == acc.z )
+	{
+		acc.x++;
+		acc.y++;
+		acc.z++;
+	}
+/*add by yuweining for cts test fail 20161011 end*/
+	input_report_abs(mc3xxx->input, ABS_X, acc.x);
+	input_report_abs(mc3xxx->input, ABS_Y, acc.y);
+	input_report_abs(mc3xxx->input, ABS_Z, acc.z);
+	input_sync(mc3xxx->input);
+	
+	mutex_lock(&mc3xxx->value_mutex);
+	mc3xxx->value = acc;
+	mutex_unlock(&mc3xxx->value_mutex);
+	
+	schedule_delayed_work(&mc3xxx->work, delay);
+}
+
+static int mc3xxx_input_init(struct mc3xxx_data *mc3xxx)
+{
+	struct input_dev *dev = NULL;
+	int err = 0;
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	dev = input_allocate_device();
+	if (!dev) {
+		pr_err("%s: can't allocate device!\n", __func__);
+		return -ENOMEM;
+	}
+
+	dev->name = MC3XXX_INPUT_NAME;
+	dev->id.bustype = BUS_I2C;
+
+	input_set_capability(dev, EV_ABS, ABS_MISC);
+
+	if (true == mc3xxx_is_high_end(mc3xxx->product_code))
+	{
+		input_set_abs_params(dev, ABS_X, ABSMIN_8G, ABSMAX_8G, 0, 0);
+		input_set_abs_params(dev, ABS_Y, ABSMIN_8G, ABSMAX_8G, 0, 0);
+		input_set_abs_params(dev, ABS_Z, ABSMIN_8G, ABSMAX_8G, 0, 0);
+	}
+	else
+	{
+		input_set_abs_params(dev, ABS_X, ABSMIN_1_5G, ABSMAX_1_5G, 0, 0);
+		input_set_abs_params(dev, ABS_Y, ABSMIN_1_5G, ABSMAX_1_5G, 0, 0);
+		input_set_abs_params(dev, ABS_Z, ABSMIN_1_5G, ABSMAX_1_5G, 0, 0);
+	}
+	
+	input_set_drvdata(dev, mc3xxx);
+
+	err = input_register_device(dev);
+	if (err < 0) {
+		pr_err("%s: can't register device!\n", __func__);
+		input_free_device(dev);
+		return err;
+	}
+	
+	mc3xxx->input = dev;
+
+	return 0;
+}
+
+static void mc3xxx_input_deinit(struct mc3xxx_data *mc3xxx)
+{
+	struct input_dev *dev = mc3xxx->input;
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	input_unregister_device(dev);
+	input_free_device(dev);
+}
+
+static ssize_t mc3xxx_register_store(struct device *dev,
+		struct device_attribute *attr,
+		const char *buf, size_t count)
+{
+	int address = 0, value = 0;
+	struct i2c_client *client = to_i2c_client(dev);
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	sscanf(buf, "%d %d", &address, &value);
+	if (0 != mc3xxx_smbus_write_byte(mc3xxx->client, (unsigned char)address,
+				(unsigned char *)&value))
+		return -EINVAL;
+	return count;
+}
+
+static ssize_t mc3xxx_register_show(struct device *dev,
+		struct device_attribute *attr, char *buf)
+{
+
+	struct i2c_client *client = to_i2c_client(dev);
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+	size_t count = 0;
+	u8 reg[0x40] = { 0 };
+	int i = 0;
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	for (i = 0; i < 0x40; i++) {
+		mc3xxx_smbus_read_byte(mc3xxx->client, i, reg+i);
+
+		count += sprintf(&buf[count], "0x%x: %d\n", i, reg[i]);
+	}
+
+	return count;
+}
+
+static ssize_t mc3xxx_range_show(struct device *dev,
+		struct device_attribute *attr, char *buf)
+{
+	unsigned char data = 0;
+	struct i2c_client *client = to_i2c_client(dev);
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	if (mc3xxx_get_range(mc3xxx->client, &data) < 0)
+		return sprintf(buf, "Read error\n");
+
+	return sprintf(buf, "%d\n", data);
+}
+
+static ssize_t mc3xxx_range_store(struct device *dev,
+		struct device_attribute *attr,
+		const char *buf, size_t count)
+{
+	unsigned long data = 0;
+	int error = 0;
+	struct i2c_client *client = to_i2c_client(dev);
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	error = strict_strtoul(buf, 10, &data);
+	if (error)
+		return error;
+	if (mc3xxx_set_range(mc3xxx->client, (unsigned char) data) < 0)
+		return -EINVAL;
+
+	return count;
+}
+
+static ssize_t mc3xxx_bandwidth_show(struct device *dev,
+		struct device_attribute *attr, char *buf)
+{
+	unsigned char data = 0;
+	struct i2c_client *client = to_i2c_client(dev);
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	if (mc3xxx_get_bandwidth(mc3xxx->client, &data) < 0)
+		return sprintf(buf, "Read error\n");
+
+	return sprintf(buf, "%d\n", data);
+}
+
+static ssize_t mc3xxx_bandwidth_store(struct device *dev,
+		struct device_attribute *attr,
+		const char *buf, size_t count)
+{
+	unsigned long data = 0;
+	int error = 0;
+	struct i2c_client *client = to_i2c_client(dev);
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	error = strict_strtoul(buf, 10, &data);
+	if (error)
+		return error;
+
+	if (mc3xxx_set_bandwidth(mc3xxx->client,
+				(unsigned char) data) < 0)
+		return -EINVAL;
+
+	return count;
+}
+
+static ssize_t mc3xxx_position_show(struct device *dev,
+				    struct device_attribute *attr, char *buf)
+{
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	return sprintf(buf, "%d\n", mc3xxx_current_placement);
+}
+
+static ssize_t mc3xxx_position_store(struct device *dev,
+				     struct device_attribute *attr,
+				     const char *buf, size_t count)
+{
+	unsigned long position = 0;
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	position = simple_strtoul(buf, NULL,10);
+	if (position <= 7) {
+		mc3xxx_current_placement = position;
+	}
+
+	return count;
+}
+
+static ssize_t mc3xxx_mode_show(struct device *dev,
+		struct device_attribute *attr, char *buf)
+{
+	unsigned char data = 0;
+	struct i2c_client *client = to_i2c_client(dev);
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	if (mc3xxx_get_mode(mc3xxx->client, &data) < 0)
+		return sprintf(buf, "Read error\n");
+
+	return sprintf(buf, "%d\n", data);
+}
+
+static ssize_t mc3xxx_mode_store(struct device *dev,
+		struct device_attribute *attr,
+		const char *buf, size_t count)
+{
+	unsigned long data = 0;
+	int error = 0;
+	struct i2c_client *client = to_i2c_client(dev);
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	error = strict_strtoul(buf, 10, &data);
+	if (error)
+		return error;
+	if (mc3xxx_set_mode(mc3xxx->client, (unsigned char) data) < 0)
+		return -EINVAL;
+
+	return count;
+}
+
+static ssize_t mc3xxx_value_show(struct device *dev,
+		struct device_attribute *attr, char *buf)
+{
+	struct input_dev *input = to_input_dev(dev);
+	struct mc3xxx_data *mc3xxx = input_get_drvdata(input);
+	struct mc3xxxacc acc_value = { 0 };
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	mutex_lock(&mc3xxx->value_mutex);
+	acc_value = mc3xxx->value;
+	mutex_unlock(&mc3xxx->value_mutex);
+
+	return sprintf(buf, "%d %d %d\n", acc_value.x, acc_value.y,
+			acc_value.z);
+}
+
+static ssize_t mc3xxx_delay_show(struct device *dev,
+		struct device_attribute *attr, char *buf)
+{
+	struct i2c_client *client = to_i2c_client(dev);
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	return sprintf(buf, "%d\n", atomic_read(&mc3xxx->delay));
+}
+
+static ssize_t mc3xxx_version_show(struct device *dev,
+		struct device_attribute *attr, char *buf)
+{
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+    return sprintf(buf, "%s\n", MC3XXX_DEV_VERSION);
+}
+
+static ssize_t mc3xxx_chip_id_show(struct device *dev,
+		struct device_attribute *attr, char *buf)
+{
+	struct i2c_client *client = to_i2c_client(dev);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+    return mc3xxx_read_chip_id(client, buf);
+}
+
+static ssize_t mc3xxx_product_code_show(struct device *dev,
+		struct device_attribute *attr, char *buf)
+{
+	struct i2c_client *client = to_i2c_client(dev);
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	return sprintf(buf, "0x%02X\n", mc3xxx->product_code);
+}
+
+static int mc3xxx_get_enable(struct device *dev)
+{
+	struct i2c_client *client = to_i2c_client(dev);
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	return atomic_read(&mc3xxx->enable);
+}
+
+static void mc3xxx_set_enable(struct device *dev, int enable)
+{
+	struct i2c_client *client = to_i2c_client(dev);
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+	int pre_enable = atomic_read(&mc3xxx->enable);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called %d\n", __func__, enable);
+#endif
+
+	mutex_lock(&mc3xxx->enable_mutex);
+	if (enable) {
+		if (pre_enable == 0) {
+			mc3xxx_set_mode(mc3xxx->client,
+					MC3XXX_MODE_WAKE);
+			schedule_delayed_work(&mc3xxx->work,
+				msecs_to_jiffies(atomic_read(&mc3xxx->delay)));
+			atomic_set(&mc3xxx->enable, 1);
+		}
+
+	} else {
+		if (pre_enable == 1) {
+			mc3xxx_set_mode(mc3xxx->client,
+					MC3XXX_MODE_STANDBY);
+			cancel_delayed_work_sync(&mc3xxx->work);
+			atomic_set(&mc3xxx->enable, 0);
+		}
+	}
+	mutex_unlock(&mc3xxx->enable_mutex);
+}
+
+static ssize_t mc3xxx_enable_show(struct device *dev,
+		struct device_attribute *attr, char *buf)
+{
+	struct i2c_client *client = to_i2c_client(dev);
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n",__func__);
+#endif
+
+	return sprintf(buf, "%d\n", atomic_read(&mc3xxx->enable));
+}
+
+static ssize_t mc3xxx_enable_store(struct device *dev,
+		struct device_attribute *attr,
+		const char *buf, size_t count)
+{
+	unsigned int enable = simple_strtoul(buf, NULL, 10);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called %d\n", __func__, enable);
+#endif
+
+	if (enable)
+		mc3xxx_set_enable(dev, 1);
+	else
+		mc3xxx_set_enable(dev, 0);
+
+	return count;
+}
+
+static int mc3xxx_get_delay(struct device *dev)
+{
+	struct i2c_client *client = to_i2c_client(dev);
+	struct mc3xxx_data *mc32x0 = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n",__func__);
+#endif
+
+	return atomic_read(&mc32x0->delay);
+}
+
+static void mc3xxx_set_delay(struct device *dev, int delay)
+{
+	struct i2c_client *client = to_i2c_client(dev);
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called %d\n", __func__, delay);
+#endif
+	atomic_set(&mc3xxx->delay, delay);
+
+	mutex_lock(&mc3xxx->enable_mutex);
+
+	if (mc3xxx_get_enable(dev)) {
+		cancel_delayed_work_sync(&mc3xxx->work);
+		schedule_delayed_work(&mc3xxx->work, delay_to_jiffies(delay) + 1);
+	}
+
+	mutex_unlock(&mc3xxx->enable_mutex);
+}
+
+static ssize_t mc3xxx_delay_store(struct device *dev,
+		struct device_attribute *attr,
+		const char *buf, size_t count)
+{
+	struct i2c_client *client = to_i2c_client(dev);
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+	unsigned long delay = simple_strtoul(buf, NULL, 10);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	if (delay > MC3XXX_MAX_DELAY)
+		delay = MC3XXX_MAX_DELAY;
+	atomic_set(&mc3xxx->delay, delay);
+
+	return count;
+}
+
+static DEVICE_ATTR(enable      , 0666                           , mc3xxx_enable_show      , mc3xxx_enable_store   );
+static DEVICE_ATTR(delay       , 0666                           , mc3xxx_delay_show       , mc3xxx_delay_store    );
+static DEVICE_ATTR(value       , S_IRUGO                        , mc3xxx_value_show       , NULL                  );
+static DEVICE_ATTR(range       , S_IRUGO|S_IWUSR|S_IWGRP|S_IWOTH, mc3xxx_range_show       , mc3xxx_range_store    );
+static DEVICE_ATTR(bandwidth   , S_IRUGO|S_IWUSR|S_IWGRP|S_IWOTH, mc3xxx_bandwidth_show   , mc3xxx_bandwidth_store);
+static DEVICE_ATTR(position    , 0666                           , mc3xxx_position_show    , mc3xxx_position_store );
+static DEVICE_ATTR(mode        , S_IRUGO|S_IWUSR|S_IWGRP|S_IWOTH, mc3xxx_mode_show        , mc3xxx_mode_store     );
+static DEVICE_ATTR(reg         , S_IRUGO|S_IWUSR|S_IWGRP|S_IWOTH, mc3xxx_register_show    , mc3xxx_register_store );
+static DEVICE_ATTR(product_code, S_IRUGO                        , mc3xxx_product_code_show, NULL                  );
+static DEVICE_ATTR(chip_id     , S_IRUGO                        , mc3xxx_chip_id_show     , NULL                  );
+static DEVICE_ATTR(version     , S_IRUGO                        , mc3xxx_version_show     , NULL                  );
+
+static struct attribute *mc3xxx_attributes[] = {
+	&dev_attr_range.attr,
+	&dev_attr_bandwidth.attr,
+	&dev_attr_position.attr,
+	&dev_attr_mode.attr,
+	&dev_attr_value.attr,
+	&dev_attr_delay.attr,
+	&dev_attr_enable.attr,
+	&dev_attr_reg.attr,
+	&dev_attr_product_code.attr,
+	&dev_attr_chip_id.attr,
+	&dev_attr_version.attr,
+	NULL
+};
+
+static struct attribute_group mc3xxx_attribute_group = {
+	.attrs = mc3xxx_attributes
+};
+
+#ifdef MCUBE_DOT_CALIBRATION
+static struct file *openFile(char *path, int flag, int mode) 
+{ 
+	struct file *fp = NULL; 
+	 
+	fp=filp_open(path, flag, mode); 
+	if (IS_ERR(fp) || !fp->f_op) 
+	{
+		MC_ERR_PRINT("%s: open return NULL!\n", __func__);
+		return NULL; 
+	}
+	else 
+	{
+		return fp; 
+	}
+} 
+ 
+static int readFile(struct file *fp, char *buf, int readlen) 
+{ 
+	if (fp->f_op && fp->f_op->read) 
+		return fp->f_op->read(fp,buf,readlen, &fp->f_pos); 
+	else 
+		return -1; 
+} 
+
+static int writeFile(struct file *fp, char *buf, int writelen) 
+{ 
+	if (fp->f_op && fp->f_op->write) 
+		return fp->f_op->write(fp,buf,writelen, &fp->f_pos); 
+	else 
+		return -1; 
+}
+ 
+static int closeFile(struct file *fp) 
+{ 
+	filp_close(fp,NULL); 
+	return 0; 
+} 
+
+static void initKernelEnv(void) 
+{ 
+	oldfs = get_fs(); 
+	set_fs(KERNEL_DS);
+} 
+
+static int mc3xxx_read_rbm_xyz(struct mc3xxx_data *mc3xxx, struct mc3xxxacc *acc, int orient)
+{
+	int comres = -1;
+	unsigned char data[6] = { 0 };
+	//s16 tmp = 0;
+	s16 raw[3] = { 0 };
+	const struct mc3xxx_hwmsen_convert *pCvt = NULL;
+
+	if ((0 == gain_data.x) || (0 == gain_data.y) || (0 == gain_data.z))
+	{
+		acc->x = 0;
+		acc->y = 0;
+		acc->z = 0;
+		return 0;
+	}
+
+	comres = mc3xxx_smbus_read_block(mc3xxx->client, MC3XXX_XOUT_EX_L_REG, data, 6);
+	if (comres)
+	{
+		MC_ERR_PRINT("%s: i2c error!\n", __func__);
+		return comres;
+	}
+	
+	raw[0] = (s16)(data[0] + (data[1] << 8));
+	raw[1] = (s16)(data[2] + (data[3] << 8));
+	raw[2] = (s16)(data[4] + (data[5] << 8));
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called: %d, %d, %d\n", __func__, raw[0], raw[1], raw[2]);
+#endif
+
+	raw[0] = (raw[0] + offset_data.x / 2) * mc3xxx_gain.x / gain_data.x;
+	raw[1] = (raw[1] + offset_data.y / 2) * mc3xxx_gain.y / gain_data.y;
+	raw[2] = (raw[2] + offset_data.z / 2) * mc3xxx_gain.z / gain_data.z;
+	
+	raw[0] = raw[0] * GRAVITY_1G_VALUE / mc3xxx_gain.x;
+	raw[1] = raw[1] * GRAVITY_1G_VALUE / mc3xxx_gain.y;
+	raw[2] = raw[2] * GRAVITY_1G_VALUE / mc3xxx_gain.z;
+	
+#if 1
+	REMAP_IF_MC3250_READ(raw[0], raw[1]);
+	REMAP_IF_MC34XX_N(raw[0], raw[1]);
+	REMAP_IF_MC35XX(raw[0], raw[1]);
+#else
+	if (true == mc3xxx_is_new_2x2(mc3xxx->product_code))
+	{
+		raw[0] = -raw[0];
+		raw[1] = -raw[1];
+	}
+	else if  (true == mc3xxx_is_mc3250(mc3xxx->product_code))
+	{
+		tmp = raw[0];
+		raw[0] = raw[1];
+		raw[1] = -tmp;
+	}
+#endif
+
+	pCvt = &mc3xxx_cvt[orient];
+	acc->x = pCvt->sign[MC3XXX_AXIS_X] * raw[pCvt->map[MC3XXX_AXIS_X]];
+	acc->y = pCvt->sign[MC3XXX_AXIS_Y] * raw[pCvt->map[MC3XXX_AXIS_Y]];
+	acc->z = pCvt->sign[MC3XXX_AXIS_Z] * raw[pCvt->map[MC3XXX_AXIS_Z]];
+
+	return comres;
+}
+
+static int mc3xxx_read_true_data(struct mc3xxx_data *mc3xxx, struct mc3xxxacc *acc)
+{
+	int err = 0;
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called: %d\n", __func__, IsRbmMode);
+#endif
+	
+	if (true == IsRbmMode)
+	{
+		err = mc3xxx_read_rbm_xyz(mc3xxx, acc, mc3xxx_current_placement);
+	}
+	else
+	{
+		err = mc3xxx_read_accel_xyz(mc3xxx, acc, mc3xxx_current_placement);
+	}
+
+	if (err)
+	{
+		MC_ERR_PRINT("%s: read error!\n", __func__);
+		return err;
+	}
+
+	return err;
+}
+
+#ifdef SUPPORT_VPROXIMITY_SENSOR
+static int mc3xxx_read_psensor_data(struct mc3xxx_data *mc3xxx, char *buf)
+{
+	int err = 0;
+	struct mc3xxxacc acc = { 0 };
+    signed long psensor_data[3] = { 0 };
+	int pre_enable = atomic_read(&mc3xxx->enable);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	if (!buf)
+	{
+		printk("%s: invalid buffer pointer!\n", __func__);
+		return -EINVAL;
+	}
+	if (pre_enable == 0) {
+		mc3xxx_set_mode(mc3xxx->client,MC3XXX_MODE_WAKE);
+		atomic_set(&mc3xxx->enable, 1);	
+	}
+	err = mc3xxx_read_true_data(mc3xxx, &acc);
+
+	if (err)
+	{
+		printk("%s: read error!\n", __func__);
+		return err;
+	}
+
+	psensor_data[0] = acc.x*10;
+	psensor_data[1] = acc.y*10;
+	psensor_data[2] = acc.z*10;
+
+	sprintf(buf, "%04x %04x %04x", psensor_data[0], psensor_data[1], psensor_data[2]);
+
+	return err;
+}
+#endif
+
+static int mc3xxx_read_raw_data(struct mc3xxx_data *mc3xxx, char *buf)
+{
+	int err = 0;
+	struct mc3xxxacc acc = { 0 };
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+	
+	if (!buf)
+	{
+		MC_ERR_PRINT("%s: invalid buffer pointer!\n", __func__);
+		return -EINVAL;
+	}
+
+	err = mc3xxx_read_true_data(mc3xxx, &acc);
+
+	if (err)
+	{
+		MC_ERR_PRINT("%s: read error!\n", __func__);
+		return err;
+	}
+
+	acc.z -= GRAVITY_1G_VALUE;
+	sprintf(buf, "%04x %04x %04x", acc.x, acc.y, acc.z);
+
+	return err;
+}
+
+static int mc3xxx_read_rbm_data(struct mc3xxx_data *mc3xxx, char *buf)
+{
+	int err = 0;
+	struct mc3xxxacc acc = { 0 };
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+	
+	if (!buf)
+	{
+		MC_ERR_PRINT("%s: invalid buffer pointer!\n", __func__);
+		return -EINVAL;
+	}
+
+	err = mc3xxx_read_rbm_xyz(mc3xxx, &acc, mc3xxx_current_placement);
+
+	if (err)
+		MC_ERR_PRINT("%s: read error!\n", __func__);
+
+	sprintf(buf, "%04x %04x %04x", acc.x, acc.y, acc.z);
+
+	return err;
+}
+
+static void mc3xxx_get_offset_gain(u8 *buf, SENSOR_DATA *pOffset, SENSOR_DATA *pGain)
+{
+	s16 tmp = 0;
+	  u8  bMsbFilter       = 0x3F;
+    s16 wSignBitMask     = 0x2000;
+    s16 wSignPaddingBits = 0xC000;
+    s32 dwRangePosLimit  = 0x1FFF;
+    s32 dwRangeNegLimit  = -0x2000;
+    
+		if (IS_MC35XX()) 
+    {
+        bMsbFilter       = 0x7F;
+        wSignBitMask     = 0x4000;
+        wSignPaddingBits = 0x8000;
+        dwRangePosLimit  = 0x3FFF;
+        dwRangeNegLimit  = -0x4000;
+    }
+    
+	// get x,y,z offset
+	tmp = ((buf[1] & bMsbFilter) << 8) + buf[0];
+	if (tmp & wSignBitMask)
+		tmp |= wSignPaddingBits;
+	pOffset->x = tmp;
+					
+	tmp = ((buf[3] & bMsbFilter) << 8) + buf[2];
+	if (tmp & wSignBitMask)
+		tmp |= wSignPaddingBits;
+	pOffset->y = tmp;
+					
+	tmp = ((buf[5] & bMsbFilter) << 8) + buf[4];
+	if (tmp & wSignBitMask)
+		tmp |= wSignPaddingBits;
+	pOffset->z = tmp;
+					
+	// get x,y,z gain
+	pGain->x = ((buf[1] >> 7) << 8) + buf[6];
+	pGain->y = ((buf[3] >> 7) << 8) + buf[7];
+	pGain->z = ((buf[5] >> 7) << 8) + buf[8];
+}
+
+static int mc3xxx_write_calibration( struct mc3xxx_data *mc3xxx, const SENSOR_DATA *pSensorData)
+{
+	int err = 0;
+	u8 buf[9] = { 0 };
+	//int tmp = 0;
+	int raw[3] = { 0 };
+	SENSOR_DATA offset = { 0 }, gain = { 0 };
+	struct mc3xxxacc acc = { 0 };
+	const struct mc3xxx_hwmsen_convert *pCvt = NULL;
+	
+	  u8  bMsbFilter       = 0x3F;
+    s16 wSignBitMask     = 0x2000;
+    s16 wSignPaddingBits = 0xC000;
+    s32 dwRangePosLimit  = 0x1FFF;
+    s32 dwRangeNegLimit  = -0x2000;
+    
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called: %d, %d, %d\n", __func__, pSensorData->x, pSensorData->y, pSensorData->z);
+#endif
+
+	err = mc3xxx_smbus_read_block(mc3xxx->client, MC3XXX_XOFFL_REG, buf, 9);
+	if (err)
+	{
+		MC_ERR_PRINT("%s: read error!\n", __func__);
+		return err;
+	}
+
+	acc.x = pSensorData->x;
+	acc.y = pSensorData->y;
+	acc.z = pSensorData->z;
+
+	// get raw from dat
+	pCvt = &mc3xxx_cvt[mc3xxx_current_placement];
+	raw[pCvt->map[MC3XXX_AXIS_X]] = pCvt->sign[MC3XXX_AXIS_X] * acc.x;
+	raw[pCvt->map[MC3XXX_AXIS_Y]] = pCvt->sign[MC3XXX_AXIS_Y] * acc.y;
+	raw[pCvt->map[MC3XXX_AXIS_Z]] = pCvt->sign[MC3XXX_AXIS_Z] * acc.z;
+	raw[MC3XXX_AXIS_X] = raw[MC3XXX_AXIS_X] * mc3xxx_gain.x / GRAVITY_1G_VALUE;
+	raw[MC3XXX_AXIS_Y] = raw[MC3XXX_AXIS_Y] * mc3xxx_gain.y / GRAVITY_1G_VALUE;
+	raw[MC3XXX_AXIS_Z] = raw[MC3XXX_AXIS_Z] * mc3xxx_gain.z / GRAVITY_1G_VALUE;
+	MC_PRINT("mc3xxx_write_calibration gain: %d, %d, %d\n", mc3xxx_gain.x, mc3xxx_gain.y, mc3xxx_gain.z);
+
+	REMAP_IF_MC3250_WRITE(raw[0], raw[1]);
+	REMAP_IF_MC34XX_N(raw[0], raw[1]);
+	REMAP_IF_MC35XX(raw[0], raw[1]);
+	
+	if (IS_MC35XX()) 
+    {
+        bMsbFilter       = 0x7F;
+        wSignBitMask     = 0x4000;
+        wSignPaddingBits = 0x8000;
+        dwRangePosLimit  = 0x3FFF;
+        dwRangeNegLimit  = -0x4000;
+    }
+     
+	// get offset and gain
+	mc3xxx_get_offset_gain(buf, &offset, &gain);
+	MC_PRINT("mc3xxx_write_calibration og: %x, %x, %x, %x, %x, %x\n",
+			offset.x, offset.y, offset.z, gain.x, gain.y, gain.z);
+	
+	// prepare new offset
+	offset.x = offset.x + 16 * raw[MC3XXX_AXIS_X] * 256 * 128 / 3 / mc3xxx_gain.x / (40 + gain.x);
+	offset.y = offset.y + 16 * raw[MC3XXX_AXIS_Y] * 256 * 128 / 3 / mc3xxx_gain.y / (40 + gain.y);
+	offset.z = offset.z + 16 * raw[MC3XXX_AXIS_Z] * 256 * 128 / 3 / mc3xxx_gain.z / (40 + gain.z);
+	
+	//add for over range 
+	if( offset.x > dwRangePosLimit) 
+	{
+		offset.x = dwRangePosLimit;
+	}
+	else if( offset.x < dwRangeNegLimit)
+	{
+		offset.x = dwRangeNegLimit;
+	}
+
+	if( offset.y > dwRangePosLimit) 
+	{
+		offset.y = dwRangePosLimit;
+	}
+	else if( offset.y < dwRangeNegLimit)
+	{
+		offset.y = dwRangeNegLimit;
+	}
+
+	if( offset.z > dwRangePosLimit) 
+	{
+		offset.z = dwRangePosLimit;
+	}
+	else if( offset.z < dwRangeNegLimit)
+	{
+		offset.z = dwRangeNegLimit;
+	}
+
+	// write offset registers
+	err = mc3xxx_set_mode(mc3xxx->client, MC3XXX_MODE_STANDBY);
+	
+	buf[0] = offset.x & 0xff;
+	buf[1] = ((offset.x >> 8) & bMsbFilter) | (gain.x & 0x0100 ? 0x80 : 0);
+	buf[2] = offset.y & 0xff;
+	buf[3] = ((offset.y >> 8) & bMsbFilter) | (gain.y & 0x0100 ? 0x80 : 0);
+	buf[4] = offset.z & 0xff;
+	buf[5] = ((offset.z >> 8) & bMsbFilter) | (gain.z & 0x0100 ? 0x80 : 0);
+
+	err += mc3xxx_smbus_write_block(mc3xxx->client, MC3XXX_XOFFL_REG, buf, 6);
+
+	err += mc3xxx_set_mode(mc3xxx->client, MC3XXX_MODE_WAKE);
+
+	if (err)
+		MC_ERR_PRINT("%s: write error!\n", __func__);
+
+	// save offset and gain of DOT format for later use
+	offset_data.x = offset.x;
+	offset_data.y = offset.y;
+	offset_data.z = offset.z;
+
+	gain_data.x = 256 * 8 * 128 / 3 / (40 + gain.x);
+	gain_data.y = 256 * 8 * 128 / 3 / (40 + gain.y);
+	gain_data.z = 256 * 8 * 128 / 3 / (40 + gain.z);
+	
+	msleep(50);
+
+	return err;
+}
+
+static int mc3xxx_reset_calibration(struct mc3xxx_data *mc3xxx)
+{
+	int err = 0;
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	err = mc3xxx_set_mode(mc3xxx->client, MC3XXX_MODE_STANDBY);
+	
+	err += mc3xxx_smbus_write_block(mc3xxx->client, MC3XXX_XOFFL_REG, offset_buf, 6);
+
+	err += mc3xxx_set_mode(mc3xxx->client, MC3XXX_MODE_WAKE);
+
+	if (err)
+		MC_ERR_PRINT("%s: write error!\n", __func__);
+
+	// save offset and gain of DOT format for later use
+	mc3xxx_get_offset_gain(offset_buf, &offset_data, &gain_data);
+
+	gain_data.x = 256 * 8 * 128 / 3 / (40 + gain_data.x);
+	gain_data.y = 256 * 8 * 128 / 3 / (40 + gain_data.y);
+	gain_data.z = 256 * 8 * 128 / 3 / (40 + gain_data.z);
+	
+	return err;
+}
+
+static int mc3xxx_soft_reset (struct i2c_client *client) 
+{
+	int err = 0;
+	u8 tmp = 0;
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	tmp = 0x6d;
+	err = mc3xxx_smbus_write_byte(client, 0x1B, &tmp);
+
+	tmp = 0x43;
+  	err += mc3xxx_smbus_write_byte(client, 0x1B, &tmp);
+	msleep(5);
+
+	tmp = 0x43;
+  	err += mc3xxx_smbus_write_byte(client, 0x07, &tmp);
+
+	tmp = 0x80;
+  	err += mc3xxx_smbus_write_byte(client, 0x1C, &tmp);
+
+	tmp = 0x80;
+  	err += mc3xxx_smbus_write_byte(client, 0x17, &tmp);
+	msleep(5);
+
+	tmp = 0x00;
+  	err += mc3xxx_smbus_write_byte(client, 0x1C, &tmp);
+	
+	tmp = 0x00;
+  	err += mc3xxx_smbus_write_byte(client, 0x17, &tmp);
+	msleep(5);
+
+	memset(offset_buf, 0, sizeof(offset_buf));
+	err += mc3xxx_smbus_read_block(client, MC3XXX_XOFFL_REG, &offset_buf[0], 9);
+	if (err)
+	{
+		MC_ERR_PRINT("%s: read error!\n", __func__);
+		return err;
+	}
+
+	// save offset and gain of DOT format for later use
+	mc3xxx_get_offset_gain(offset_buf, &offset_data, &gain_data);
+
+//printk("mc3xxx_soft_reset: %x, %x, %x, %x, %x, %x, %x, %x, %x\n", offset_buf[0], offset_buf[1], offset_buf[2],
+//	offset_buf[3], offset_buf[4], offset_buf[5], offset_buf[6], offset_buf[7], offset_buf[8]);
+//printk("mc3xxx_soft_reset1: %x, %x, %x, %x, %x, %x
+	gain_data.x = 256 * 8 * 128 / 3 / (40 + gain_data.x);
+	gain_data.y = 256 * 8 * 128 / 3 / (40 + gain_data.y);
+	gain_data.z = 256 * 8 * 128 / 3 / (40 + gain_data.z);
+
+	// initial calibration data
+	mc3xxx_cali_data.x = 0;
+	mc3xxx_cali_data.y = 0;
+	mc3xxx_cali_data.z = 0;
+
+	return err;
+}
+
+static void mc3xxx_read_calibration(struct mc3xxx_data *mc3xxx, SENSOR_DATA *pSensorData)
+{
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	pSensorData->x = mc3xxx_cali_data.x;
+	pSensorData->y = mc3xxx_cali_data.y;
+	pSensorData->z = mc3xxx_cali_data.z;
+}
+
+static int mc3xxx_rbm_mode(struct mc3xxx_data *mc3xxx, bool enable)
+{
+	int rc = 0; 
+	unsigned char data = 0;
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called: %d\n", __func__, enable);
+#endif
+	return rc;
+	
+	rc = mc3xxx_set_mode(mc3xxx->client, MC3XXX_MODE_STANDBY);
+	rc += mc3xxx_smbus_read_byte(mc3xxx->client, 0x04, &data);
+	
+    if (0x00 == (data & 0x40))
+    {
+		data = 0x6D;
+		rc += mc3xxx_smbus_write_byte(mc3xxx->client, 0x1B, &data);
+        
+		data = 0x43;
+		rc += mc3xxx_smbus_write_byte(mc3xxx->client, 0x1B, &data);
+    }
+
+
+	if (true == enable)
+	{
+		data = 0; 
+		rc += mc3xxx_smbus_write_byte(mc3xxx->client, 0x3B, &data);
+
+		data = 0x02; 
+		rc += mc3xxx_smbus_write_byte(mc3xxx->client, 0x14, &data);
+
+		IsRbmMode = 1;
+	}
+	else
+	{
+		data = 0; 
+		rc += mc3xxx_smbus_write_byte(mc3xxx->client, 0x14, &data);
+
+		data = s_bPCODE; 
+		rc += mc3xxx_smbus_write_byte(mc3xxx->client, 0x3B, &data);
+
+		IsRbmMode = 0;
+	}
+
+	rc += mc3xxx_smbus_read_byte(mc3xxx->client, 0x04, &data);
+
+    if (data & 0x40)
+    {
+		data = 0x6D; 
+		rc += mc3xxx_smbus_write_byte(mc3xxx->client, 0x1B, &data);
+
+		data = 0x43; 
+		rc += mc3xxx_smbus_write_byte(mc3xxx->client, 0x1B, &data);
+    }
+
+	rc += mc3xxx_set_mode(mc3xxx->client, MC3XXX_MODE_WAKE);
+
+	msleep(220);
+	
+	return rc;
+}
+
+static void mc3xxx_read_cali_file(struct mc3xxx_data *mc3xxx)
+{
+	SENSOR_DATA cali_data = { 0 };
+	int err = 0;
+	char buf[64] = { 0 };
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	if (load_cali_cnt > 0)
+	{
+		load_cali_cnt --;
+	}
+	else
+	{
+		return;
+	}
+	
+	initKernelEnv();
+	fd_file = openFile(CALIB_PATH, O_RDONLY, 0); 
+	if (fd_file == NULL) 
+	{
+		MC_ERR_PRINT("%s: fail to open!\n", __func__);
+		cali_data.x = 0;
+		cali_data.y = 0;
+		cali_data.z = 0;
+		return;
+	}
+	else
+	{
+		memset(buf, 0, sizeof(buf)); 
+		if ((err = readFile(fd_file,buf,64)) <= 0) 
+		{
+			MC_ERR_PRINT("%s: read file error %d!\n", __func__, err);
+		}
+		else
+		{
+			MC_PRINT("%s: %s\n", __func__, buf);
+		}
+		
+		set_fs(oldfs); 
+		closeFile(fd_file); 
+
+		sscanf(buf, "%d %d %d", &cali_data.x, &cali_data.y, &cali_data.z);
+				
+		mc3xxx_write_calibration(mc3xxx, &cali_data);
+
+		load_cali_cnt = 0;
+
+		return;
+	}
+}
+
+static int mc3xxx_write_log_data(const unsigned char data[64])
+{
+	#define _WRT_LOG_DATA_BUFFER_SIZE    (66 * 50)
+
+	s16 rbm_data[3] = { 0 }, raw_data[3] = { 0 };
+	int err = 0;
+	char *_pszBuffer = NULL;
+	int n = 0, i = 0;
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	initKernelEnv();
+	fd_file = openFile(DATA_PATH, O_RDWR | O_CREAT, 0); 
+	if (fd_file == NULL) 
+	{
+		MC_ERR_PRINT("%s: can't create file!\n", __func__);
+		return -1;
+	}
+	else
+	{
+		rbm_data[0] = (s16)((data[0x0d]) | (data[0x0e] << 8));
+		rbm_data[1] = (s16)((data[0x0f]) | (data[0x10] << 8));
+		rbm_data[2] = (s16)((data[0x11]) | (data[0x12] << 8));
+
+		raw_data[0] = (rbm_data[0] + offset_data.x/2)*mc3xxx_gain.x/gain_data.x;
+		raw_data[1] = (rbm_data[1] + offset_data.y/2)*mc3xxx_gain.y/gain_data.y;
+		raw_data[2] = (rbm_data[2] + offset_data.z/2)*mc3xxx_gain.z/gain_data.z;
+
+		_pszBuffer = kzalloc(_WRT_LOG_DATA_BUFFER_SIZE, GFP_KERNEL);		
+		if (NULL == _pszBuffer)
+		{
+			MC_ERR_PRINT("%s: fail to allocate memory for buffer!\n", __func__);
+			return -1;
+		}
+		memset(_pszBuffer, 0, _WRT_LOG_DATA_BUFFER_SIZE); 
+
+		n += sprintf(_pszBuffer+n, "G-sensor RAW X = %d  Y = %d  Z = %d\n", raw_data[0] ,raw_data[1] ,raw_data[2]);
+		n += sprintf(_pszBuffer+n, "G-sensor RBM X = %d  Y = %d  Z = %d\n", rbm_data[0] ,rbm_data[1] ,rbm_data[2]);
+		for(i=0; i<64; i++)
+		{
+			n += sprintf(_pszBuffer+n, "mCube register map Register[%x] = 0x%x\n",i,data[i]);
+		}
+		msleep(50);		
+		if ((err = writeFile(fd_file,_pszBuffer,n)) <= 0) 
+		{
+ 			MC_ERR_PRINT("%s: write file error %d!\n", __func__, err); 
+ 		}
+
+		kfree(_pszBuffer);
+
+		set_fs(oldfs); 
+		closeFile(fd_file); 
+	}
+	
+	return 0;
+}
+
+static int mc3xxx_read_reg_map(struct mc3xxx_data *mc3xxx)
+{
+	u8 data[64] = { 0 };
+	int err = 0;
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	err = mc3xxx_smbus_read_block(mc3xxx->client, 0, data, 64);
+
+    if (err)
+    {
+		MC_ERR_PRINT("%s: read reg fail!\n", __func__); 
+        return err;
+    }
+	
+	msleep(50);	
+	
+	mc3xxx_write_log_data(data);
+
+	msleep(50);
+     	
+	return err;
+}
+#endif
+
+//static int mc3xxx_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)
+static long mc3xxx_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
+{
+	int err = 0;
+	void __user *argp = (void __user *)arg;
+	struct mc3xxx_data *mc3xxx = file->private_data;
+	int temp = 0;
+
+#ifdef MCUBE_DOT_CALIBRATION
+	char strbuf[256] = { 0 };
+	SENSOR_DATA sensor_data = { 0 };
+#endif
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s: %x\n",__func__, cmd);
+#endif
+
+	if(_IOC_DIR(cmd) & _IOC_READ)
+		err = !access_ok(VERIFY_WRITE,(void __user*)arg, _IOC_SIZE(cmd));
+	else if(_IOC_DIR(cmd) & _IOC_WRITE)
+		err = !access_ok(VERIFY_READ, (void __user*)arg, _IOC_SIZE(cmd));
+
+	if(err)
+	{
+		MC_ERR_PRINT("%s: access isn't ok!\n", __func__);
+		return -EFAULT;
+	}
+
+	if (NULL == mc3xxx_client)
+	{
+		MC_ERR_PRINT("%s: i2c client isn't exist!\n", __func__);
+		return -EFAULT;
+	}
+	
+	switch(cmd)
+	{
+	case MC3XXX_ACC_IOCTL_SET_DELAY:
+		if (copy_from_user(&temp, argp, sizeof(temp)))
+		{
+			MC_ERR_PRINT("%s: set delay copy error!\n", __func__);
+			return -EFAULT;
+		}
+		if (temp < 0 || temp > 1000)
+		{
+			MC_ERR_PRINT("%s: set delay over limit!\n", __func__);
+			return -EINVAL;
+		}
+		mc3xxx_set_delay(&(mc3xxx->client->dev),temp);
+		break;
+
+	case MC3XXX_ACC_IOCTL_GET_DELAY:
+		temp = mc3xxx_get_delay(&(mc3xxx->client->dev));
+		if (copy_to_user(argp, &temp, sizeof(temp)))
+		{
+			MC_ERR_PRINT("%s: get delay copy error!\n", __func__);
+			return -EFAULT;
+		}
+		break;
+
+	case MC3XXX_ACC_IOCTL_SET_ENABLE:
+		if (copy_from_user(&temp, argp, sizeof(temp)))
+		{
+			MC_ERR_PRINT("%s: set enable copy error!\n", __func__);
+			return -EFAULT;
+		}
+
+		if (1 == temp)
+			mc3xxx_set_enable(&(mc3xxx->client->dev), 1);
+		else if (0 == temp)
+			mc3xxx_set_enable(&(mc3xxx->client->dev), 0);
+		else
+		{
+			MC_ERR_PRINT("%s: set enable over limit!\n", __func__);
+			return -EINVAL;
+		}
+			
+		break;
+
+	case MC3XXX_ACC_IOCTL_GET_ENABLE:
+		temp = mc3xxx_get_enable(&(mc3xxx->client->dev));
+		if (copy_to_user(argp, &temp, sizeof(temp)))
+		{
+			MC_ERR_PRINT("%s: get enable copy error!\n", __func__);
+			return -EINVAL;
+		}
+		break;
+			
+	case MC3XXX_ACC_IOCTL_CALIBRATION:
+		MC_ERR_PRINT("%s: don't handle the command!\n", __func__);
+		return -EINVAL;
+		
+#ifdef MCUBE_DOT_CALIBRATION		
+	case GSENSOR_IOCTL_READ_SENSORDATA:	
+
+        #ifdef SUPPORT_VPROXIMITY_SENSOR
+            MC_PRINT("%s: GSENSOR_IOCTL_READ_SENSORDATA\n", __func__);
+            mc3xxx_read_psensor_data(mc3xxx, strbuf);
+            if (copy_to_user(argp, strbuf, strlen(strbuf)+1)) {
+                printk("%s: read rawdata fail to copy!\n", __func__);
+                return -EFAULT;
+            }
+            break;
+        #endif
+
+	case GSENSOR_IOCTL_READ_RAW_DATA:
+		MC_PRINT("%s: GSENSOR_IOCTL_READ_SENSORDATA\n", __func__);
+		mc3xxx_read_raw_data(mc3xxx, strbuf);
+		if (copy_to_user(argp, strbuf, strlen(strbuf)+1))
+		{
+			MC_ERR_PRINT("%s: read rawdata fail to copy!\n", __func__);
+			return -EFAULT;
+		}
+		break;
+
+	case GSENSOR_MCUBE_IOCTL_SET_CALI:
+		MC_PRINT("%s: GSENSOR_MCUBE_IOCTL_SET_CALI\n", __func__);
+		if (copy_from_user(&sensor_data, argp, sizeof(sensor_data)))
+		{
+			MC_ERR_PRINT("%s: set cali fail to copy!\n", __func__);
+			return -EFAULT;
+		}
+		else
+		{
+            mutex_lock(&mc3xxx->enable_mutex);
+			err = mc3xxx_write_calibration(mc3xxx, &sensor_data);			 
+            mutex_unlock(&mc3xxx->enable_mutex);
+		}
+		break;
+		
+	case GSENSOR_IOCTL_CLR_CALI:
+		MC_PRINT("%s: GSENSOR_IOCTL_CLR_CALI\n", __func__);
+        mutex_lock(&mc3xxx->enable_mutex);
+		err = mc3xxx_reset_calibration(mc3xxx);
+        mutex_unlock(&mc3xxx->enable_mutex);
+		break;
+
+	case GSENSOR_IOCTL_GET_CALI:
+		MC_PRINT("%s: GSENSOR_IOCTL_GET_CALI\n", __func__);
+		mc3xxx_read_calibration(mc3xxx, &sensor_data);
+		
+		if (copy_to_user(argp, &sensor_data, sizeof(sensor_data)))
+		{
+			MC_ERR_PRINT("%s: get cali fail to copy!\n", __func__);
+			err = -EFAULT;
+			return err;
+		}		
+		break;	
+
+	case GSENSOR_IOCTL_SET_CALI_MODE:
+		MC_PRINT("%s: GSENSOR_IOCTL_SET_CALI_MODE\n", __func__);
+		break;
+
+	case GSENSOR_MCUBE_IOCTL_READ_RBM_DATA:
+		MC_PRINT("%s: GSENSOR_MCUBE_IOCTL_READ_RBM_DATA\n", __func__);
+		mc3xxx_read_rbm_data(mc3xxx, strbuf);
+		if (copy_to_user(argp, &strbuf, strlen(strbuf)+1)) {
+			MC_ERR_PRINT("%s: read rawdata fail to copy!\n", __func__);
+			return -EFAULT;
+		}
+		break;
+
+	case GSENSOR_MCUBE_IOCTL_SET_RBM_MODE:
+		MC_PRINT("%s: GSENSOR_MCUBE_IOCTL_SET_RBM_MODE\n", __func__);
+        mutex_lock(&mc3xxx->enable_mutex);
+		err = mc3xxx_rbm_mode(mc3xxx, 1);
+        mutex_unlock(&mc3xxx->enable_mutex);
+		break;
+
+	case GSENSOR_MCUBE_IOCTL_CLEAR_RBM_MODE:
+		MC_PRINT("%s: GSENSOR_MCUBE_IOCTL_CLEAR_RBM_MODE\n", __func__);
+        mutex_lock(&mc3xxx->enable_mutex);
+		err = mc3xxx_rbm_mode(mc3xxx, 0);
+        mutex_unlock(&mc3xxx->enable_mutex);
+		break;
+
+	case GSENSOR_MCUBE_IOCTL_REGISTER_MAP:
+		MC_PRINT("%s: GSENSOR_MCUBE_IOCTL_REGISTER_MAP\n", __func__);
+		err = mc3xxx_read_reg_map(mc3xxx);
+		break;
+
+	case GSENSOR_MCUBE_IOCTL_READ_PRODUCT_ID:
+		MC_PRINT("%s: GSENSOR_MCUBE_IOCTL_READ_PRODUCT_ID\n", __func__);
+		temp = mc3xxx_detect_pcode(mc3xxx->client);
+		if (temp > 0)
+			temp = 0;
+		else
+			temp = -1;
+		if(copy_to_user(argp, &temp, sizeof(temp)))
+		{
+			MC_ERR_PRINT("%s: read pcode fail to copy!\n", __func__);
+			return -EFAULT;
+		}				 
+		break;
+
+	case GSENSOR_MCUBE_IOCTL_READ_CHIP_ID:
+		MC_PRINT("%s: GSENSOR_MCUBE_IOCTL_READ_CHIP_ID\n", __func__);
+        mc3xxx_read_chip_id(mc3xxx->client, strbuf);
+		if(copy_to_user(argp, &strbuf, strlen(strbuf)))
+		{
+			MC_ERR_PRINT("%s: read chip id fail to copy!\n", __func__);
+			return -EFAULT;
+		}				 
+		break;
+
+	
+#endif
+
+	default:
+		MC_ERR_PRINT("%s: can't recognize the cmd!\n", __func__);
+		return 0;
+	}
+	
+    return 0;
+}
+
+static ssize_t mc3xxx_read(struct file *file, char __user *buf, size_t count, loff_t *offset)
+{
+	int ret = 0;
+	struct mc3xxxacc acc = { 0 };
+	struct mc3xxx_data *mc3xxx = NULL;
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n",__func__);
+#endif
+
+	if (NULL == mc3xxx_client)
+	{
+		MC_ERR_PRINT("%s: I2C driver not install!", __func__);
+		return -1;
+	}
+
+	mc3xxx = i2c_get_clientdata(mc3xxx_client);
+
+#ifdef MCUBE_DOT_CALIBRATION
+	mc3xxx_read_cali_file(mc3xxx);
+	mc3xxx_read_true_data(mc3xxx, &acc);
+#else
+	mc3xxx_read_accel_xyz(mc3xxx, &acc, mc3xxx_current_placement);
+#endif
+
+	mutex_lock(&mc3xxx->value_mutex);
+	mc3xxx->value = acc;
+	mutex_unlock(&mc3xxx->value_mutex);
+
+	ret = copy_to_user(buf, &acc, sizeof(acc));
+	if (ret)
+	{
+		MC_ERR_PRINT("%s: fail to copy_to_user: %d\n", __func__, ret);
+		return 0;
+	}
+
+	return sizeof(acc);
+}
+
+static ssize_t mc3xxx_write(struct file *file, const char __user *buf, size_t count, loff_t *offset)
+{
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n",__func__);
+#endif
+
+	return 0;
+}
+
+static int mc3xxx_open(struct inode *inode, struct file *file)
+{
+	int err = 0;
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n",__func__);
+#endif
+
+	err = nonseekable_open(inode, file);
+	if (err < 0)
+	{
+		MC_ERR_PRINT("%s: open fail!\n", __func__);
+		return err;
+	}
+
+	file->private_data = i2c_get_clientdata(mc3xxx_client);
+
+	return 0;
+}
+
+static int mc3xxx_close(struct inode *inode, struct file *file)
+{
+#ifdef MCUBE_FUNC_DEBUG
+ 	printk("%s called\n",__func__);
+#endif
+
+	return 0;
+}
+
+static const struct file_operations mc3xxx_fops = {
+	.owner = THIS_MODULE,
+	.read = mc3xxx_read,
+	.write = mc3xxx_write,
+	.open = mc3xxx_open,
+	.release = mc3xxx_close,
+	.unlocked_ioctl = mc3xxx_ioctl,
+};
+
+static int mc3xxx_remove(struct i2c_client *client)
+{
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	mc3xxx_set_enable(&client->dev, 0);
+
+	sysfs_remove_group(&mc3xxx->input->dev.kobj, &mc3xxx_attribute_group);
+	mc3xxx_input_deinit(mc3xxx);
+	kfree(mc3xxx);
+
+	return 0;
+}
+
+static int mc3xxx_suspend(struct i2c_client *client, pm_message_t mesg)
+{
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	mutex_lock(&mc3xxx->enable_mutex);
+
+	if (mc3xxx_get_enable(&client->dev)) {
+		cancel_delayed_work_sync(&mc3xxx->work);
+		mc3xxx_set_mode(mc3xxx->client, MC3XXX_MODE_STANDBY);
+	}
+
+	mutex_unlock(&mc3xxx->enable_mutex);
+
+	return 0;
+}
+
+static int mc3xxx_resume(struct i2c_client *client)
+{
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+	int delay = mc3xxx_get_delay(&(client->dev));
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	mc3xxx_set_delay(&client->dev, delay);
+
+	mutex_lock(&mc3xxx->enable_mutex);
+
+	if (mc3xxx_get_enable(&client->dev)) {
+		mc3xxx_set_mode(mc3xxx->client, MC3XXX_MODE_WAKE);
+		schedule_delayed_work(&mc3xxx->work,
+				      delay_to_jiffies(delay) + 1);
+	}
+
+	mutex_unlock(&mc3xxx->enable_mutex);
+
+	return 0;
+}
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+
+static void mc3xxx_early_suspend (struct early_suspend* es)
+{
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	mc3xxx_suspend(mc3xxx_client,(pm_message_t){.event=0});
+}
+
+static void mc3xxx_early_resume (struct early_suspend* es)
+{
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	mc3xxx_resume(mc3xxx_client);
+}
+
+#endif /* CONFIG_HAS_EARLYSUSPEND */
+
+static int  mc3xxx_i2c_remove(struct i2c_client *client)
+{
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif	
+	return mc3xxx_remove(mc3xxx->client);
+}
+
+static int mc3xxx_i2c_suspend(struct i2c_client *client, pm_message_t mesg)
+{
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif	
+	mc3xxx_suspend(mc3xxx->client, mesg);
+
+	return 0;
+}
+
+static int mc3xxx_i2c_resume(struct i2c_client *client)
+{
+	struct mc3xxx_data *mc3xxx = i2c_get_clientdata(client);
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif	
+	mc3xxx_resume(mc3xxx->client);
+
+	return 0;
+}
+
+static struct miscdevice mc3xxx_device = {
+	.minor = MISC_DYNAMIC_MINOR,
+	.name = MC3XXX_DEV_NAME,
+	.fops = &mc3xxx_fops,
+};
+
+static int  mc3xxx_i2c_probe(struct i2c_client *client,
+				       const struct i2c_device_id *id)
+{
+	struct mc3xxx_data *mc3xxx = NULL;
+	unsigned char product_code = 0;
+	int err = 0;
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif	
+
+	err = mc3xxx_detect_pcode(client);
+	if (err < 0) {
+		MC_ERR_PRINT("%s: isn't mcube g-sensor!\n", __func__);
+		return -ENODEV;
+	}
+
+#ifdef MCUBE_DOT_CALIBRATION
+	mc3xxx_soft_reset(client);
+	err = mc3xxx_detect_pcode(client);
+	if (err < 0) {
+		MC_ERR_PRINT("%s: can't confirm mcube g-sensor!\n", __func__);
+		return -ENODEV;
+	}
+#endif
+
+	product_code = (unsigned char)err;
+
+	/* setup private data */
+	mc3xxx = kzalloc(sizeof(struct mc3xxx_data), GFP_KERNEL);
+	if (! mc3xxx) {
+		MC_ERR_PRINT("%s: can't allocate memory for mc3xxx_data!\n", __func__);
+		err = -ENOMEM;
+		return err;
+	}
+
+	mc3xxx->product_code = product_code;
+	
+	mutex_init(&mc3xxx->enable_mutex);
+	mutex_init(&mc3xxx->value_mutex);
+
+	/* setup i2c client */
+	if (!i2c_check_functionality(client->adapter, I2C_FUNC_I2C)) {
+		MC_ERR_PRINT("%s: i2c function not support!\n", __func__);
+		kfree(mc3xxx);
+		err = -ENODEV;
+		return err;
+	}
+
+	i2c_set_clientdata(client, mc3xxx);
+	mc3xxx->client = client;
+	mc3xxx_client = client;
+
+#ifdef CONFIG_HAS_EARLYSUSPEND
+	mc3xxx->early_suspend.suspend = mc3xxx_early_suspend;
+	mc3xxx->early_suspend.resume  = mc3xxx_early_resume;
+	mc3xxx->early_suspend.level   = EARLY_SUSPEND_LEVEL_BLANK_SCREEN;
+	register_early_suspend(&mc3xxx->early_suspend);
+#endif
+
+	dev_info(&client->dev, "%s found\n", id->name);
+
+	atomic_set(&mc3xxx->position, mc3xxx_current_placement);
+	atomic_set(&mc3xxx->delay, MC3XXX_MAX_DELAY);
+
+	mc3xxx_init(mc3xxx);
+
+	/* setup driver interfaces */
+	INIT_DELAYED_WORK(&mc3xxx->work, mc3xxx_work_func);
+
+	err = mc3xxx_input_init(mc3xxx);
+	if (err < 0) {
+		MC_ERR_PRINT("%s: input init fail!\n", __func__);
+		kfree(mc3xxx);
+		return err;
+	}
+
+	err = sysfs_create_group(&mc3xxx->input->dev.kobj, &mc3xxx_attribute_group);
+	if (err < 0) {
+		MC_ERR_PRINT("%s: create group fail!\n", __func__);
+		mc3xxx_input_deinit(mc3xxx);
+		kfree(mc3xxx);
+		return err;
+	}
+	
+	err = misc_register(&mc3xxx_device);
+	if (err) {
+		MC_ERR_PRINT("%s: create register fail!\n", __func__);
+    	sysfs_remove_group(&mc3xxx->input->dev.kobj, &mc3xxx_attribute_group);
+		mc3xxx_input_deinit(mc3xxx);
+		kfree(mc3xxx);
+		return err;
+	}
+
+	return 0;
+}
+
+static const struct i2c_device_id mc3xxx_id[] = {
+	{MC3XXX_DEV_NAME, 0},
+	{ }
+};
+
+MODULE_DEVICE_TABLE(i2c, mc3xxx_id);
+
+static struct i2c_driver mc3xxx_driver = {
+	.driver = {
+		.name = MC3XXX_DEV_NAME,
+		.owner = THIS_MODULE,
+	},
+	.probe    = mc3xxx_i2c_probe,
+	.remove   = mc3xxx_i2c_remove,
+	.suspend  = mc3xxx_i2c_suspend,
+	.resume   = mc3xxx_i2c_resume,
+	.id_table = mc3xxx_id,
+};
+
+#ifdef I2C_BUS_NUM_STATIC_ALLOC
+int i2c_static_add_device(struct i2c_board_info *info)
+{
+	struct i2c_adapter *adapter = NULL;
+	struct i2c_client *client = NULL;
+	int err = 0;
+
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+	adapter = i2c_get_adapter(I2C_STATIC_BUS_NUM);
+	if (!adapter) {
+		MC_ERR_PRINT("%s: can't get i2c adapter!\n", __func__);
+		err = -ENODEV;
+		return err;
+	}
+
+	client = i2c_new_device(adapter, info);
+	if (!client) {
+		MC_ERR_PRINT("%s: can't add i2c device at 0x%x!\n", __func__, (unsigned int)info->addr);
+		err = -ENODEV;
+		return err;
+	}
+
+	i2c_put_adapter(adapter);
+
+	return 0;
+}
+#endif // I2C_BUS_NUM_STATIC_ALLOC
+
+static int __init mc3xxx_i2c_init(void)
+{
+#ifdef I2C_BUS_NUM_STATIC_ALLOC
+	int ret = 0;
+#endif
+	
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif
+
+#ifdef I2C_BUS_NUM_STATIC_ALLOC
+	ret = i2c_static_add_device(&mc3xxx_i2c_boardinfo);
+	if (ret < 0) {
+	    MC_ERR_PRINT("%s: add i2c device error %d\n", __func__, ret);
+	    return ret;
+	}
+#endif 
+
+	return i2c_add_driver(&mc3xxx_driver);
+}
+
+static void __exit mc3xxx_i2c_exit(void)
+{
+#ifdef MCUBE_FUNC_DEBUG
+	printk("%s called\n", __func__);
+#endif	
+
+	i2c_del_driver(&mc3xxx_driver);
+
+#ifdef I2C_BUS_NUM_STATIC_ALLOC
+	i2c_unregister_device(mc3xxx_client);
+#endif
+}
+
+
+module_init(mc3xxx_i2c_init);
+module_exit(mc3xxx_i2c_exit);
+
+//MODULE_DESCRIPTION("mc3xxx accelerometer driver");
+//MODULE_AUTHOR("mCube-inc");
+//MODULE_LICENSE("GPL");
+//MODULE_VERSION(MC3XXX_DEV_VERSION);
+
Index: kernel/drivers/input/misc/ltr_558als.c
===================================================================
--- kernel/drivers/input/misc/ltr_558als.c	(revision 182224)
+++ kernel/drivers/input/misc/ltr_558als.c	(revision 182225)
@@ -1095,7 +1095,7 @@
         else
         {
 		LTR_PLS_MODE = LTR_PLS_558;
-		p_gainrange = PS_558_RANGE4;
+		p_gainrange = PS_558_RANGE8;
 		if (ALS_558_RANGE1_320==ParamGroup.thresh6 ||
 		ALS_558_RANGE2_64K==ParamGroup.thresh6) {
 			l_gainrange =ParamGroup.thresh6;
Index: kernel/drivers/input/misc/Makefile
===================================================================
--- kernel/drivers/input/misc/Makefile	(revision 182224)
+++ kernel/drivers/input/misc/Makefile	(revision 182225)
@@ -65,6 +65,8 @@
 obj-$(CONFIG_INPUT_LIS3DH_I2C)          += lis3dh.o
 obj-$(CONFIG_INPUT_LIS3DH_I2C_INTERRUPT)+= lis3dh_interrupt.o
 obj-$(CONFIG_INPUT_LIS3DH_ZT_I2C)          += lis3dh_zt.o
+obj-$(CONFIG_INPUT_COMPASS_AF8133I_I2C)    += af8133.o
+obj-$(CONFIG_INPUT_MC3XX0_I2C)          += mc3xx0.o
 obj-$(CONFIG_INPUT_LTR558_I2C)		+= ltr_558als.o
 obj-$(CONFIG_INPUT_EPL2182_I2C)         += epl2182_pls_v2.o
 obj-$(CONFIG_INPUT_EPL259X_I2C)         += epl259x.o
Index: kernel/drivers/input/misc/af8133.c
===================================================================
--- kernel/drivers/input/misc/af8133.c	(revision 0)
+++ kernel/drivers/input/misc/af8133.c	(revision 182225)
@@ -0,0 +1,728 @@
+/******************** (C) COPYRIGHT Voltafield 2014 ********************
+*
+* File Name          : af8133.c
+* Authors            : Production, CAE Team
+*                    : Gary Huang
+* Date               : 2015/Jul/10
+* Description        : AF7133E/AF8133i Magneto sensor Driver
+*
+************************************************************************
+*
+* This program is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License version 2 as
+* published by the Free Software Foundation.
+*
+* THE PRESENT SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES
+* OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, FOR THE SOLE
+* PURPOSE TO SUPPORT YOUR APPLICATION DEVELOPMENT.
+* AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
+* INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
+* CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
+* INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
+*
+*******************************************************************************/
+/*******************************************************************************
+Version History.
+
+20150710  1st version
+*******************************************************************************/
+
+#include <linux/i2c.h>
+#include <linux/device.h>
+#include <linux/mutex.h>
+#include <linux/input.h>
+#include <linux/workqueue.h> 
+#include <linux/slab.h>
+#include <linux/module.h>
+#include <linux/delay.h>
+#include <linux/miscdevice.h>
+
+//#include <linux/af8133.h>
+#include <linux/i2c/af8133.h>
+//#include <linux/sensors.h>
+
+#define AF8133_DEBUG 0
+#define AF8133_DRIVER_VERSION     "3.0.2"
+
+#define DELAY_TIME_DEFAULT         50   //ms, 20Hz
+#define DELAY_TIME_MIN             10   //ms, 100Hz
+#define DELAY_TIME_MAX            100   //ms, 10Hz
+
+#define AF8133_SET_RESET_NUM      5
+#define AF8133_OFFSET_INDEX       2   //(int)(AF8133_SET_RESET_NUM/2)
+
+static struct i2c_client *this_client;
+
+struct af8133_data {
+        struct i2c_client *client;
+        struct device *class_dev;
+        struct class *compass;
+        struct af8133_platform_data *pdata;
+        struct mutex lock;
+        struct input_dev *input;
+        struct delayed_work work;
+        atomic_t enabled;
+};
+
+static const struct af8133_platform_data default_af8133_pdata = {
+        .poll_interval = DELAY_TIME_DEFAULT,
+        .axis_map_x = 0,
+        .axis_map_y = 1,
+        .axis_map_z = 2,
+        .negate_x = 0,
+        .negate_y = 0,
+        .negate_z = 0,
+        .reg33 =0,
+};
+
+
+static int VTC_i2c_Rx(char *rxData, int length)
+{
+        uint8_t retry;
+        struct i2c_msg msgs[] = 
+        {
+                {
+                        .addr = this_client->addr,
+                        .flags = 0,
+                        .len = 1,
+                        .buf = rxData,
+                },
+                {
+                        .addr = this_client->addr,
+                        .flags = I2C_M_RD,
+                        .len = length,
+                        .buf = rxData,
+                },
+        };
+
+        for (retry = 0; retry < 3; retry++) 
+        {
+                if (i2c_transfer(this_client->adapter, msgs, 2) > 0)
+                        break;
+                else
+                        mdelay(10);
+        }
+
+        if (retry >= 3) 
+        {
+                printk(KERN_ERR "%s: retry over 3\n", __func__);
+                return -EIO;
+        } 
+        else
+                return 0;
+}
+
+static int VTC_i2c_Tx(char *txData, int length)
+{
+        int retry;
+        struct i2c_msg msg[] = 
+        {
+                {
+                        .addr = this_client->addr,
+                        .flags = 0,
+                        .len = length,
+                        .buf = txData,
+                },
+        };
+
+        for (retry = 0; retry <= 3; retry++) 
+        {
+                if (i2c_transfer(this_client->adapter, msg, 1) > 0)
+                        break;
+                else
+                        mdelay(10);
+        }
+
+        if (retry > 3) 
+        {
+                printk(KERN_ERR "%s: retry over 3\n", __func__);
+                return -EIO;
+        }
+        else
+                return 0;
+}
+
+
+static int af8133_measurement_setting(u8 reg14, u8 reg33)
+{
+  int err;
+  u8  data[2];
+
+  //full measurement, set/reset setting 
+  data[0]= 0x14;
+  data[1]= reg14;
+  err = VTC_i2c_Tx(data, 2);
+  if(err < 0) return -1;
+
+  //field range +/-1200uT
+  data[0]= 0x33;
+  data[1]= reg33;
+  err = VTC_i2c_Tx(data, 2);
+  if(err < 0) return -1;
+
+  //field range +/-1200uT
+  data[0]= 0x0B;
+  data[1]= 0x3C; 
+  err = VTC_i2c_Tx(data, 2);
+  if(err < 0) return -1;
+
+  //disable moving average
+  data[0]= 0x13;
+  data[1]= 0x00; 
+  err = VTC_i2c_Tx(data, 2);
+  if(err < 0) return -1;
+
+  return 0;
+}
+
+static int af8133_mag_get_data(struct af8133_data *mag)
+{
+  int err;
+  u8  data[6];
+  int i;
+  int xyz[3];
+  u8  report;
+
+  data[0] = 0x02;
+  err = VTC_i2c_Rx(data, 1);
+  if(err < 0) goto err_i2c_fail;
+  report = data[0];
+
+  data[0] = 0x03;
+  err = VTC_i2c_Rx(data, 6);
+  if(err < 0) goto err_i2c_fail;
+
+  xyz[0] = data[0] | (data[1] << 8); 
+  xyz[1] = data[2] | (data[3] << 8);
+  xyz[2] = data[4] | (data[5] << 8);
+
+  for(i=0;i<3;i++)
+  {
+  	if(xyz[i] != 0x8000)
+  	{
+  	  xyz[i] = (xyz[i] > 32767) ? (xyz[i] - 65536) : xyz[i];
+
+      xyz[i] -= mag->pdata->offset[i];
+    }
+  }  
+        
+//  err = af8133_measurement_setting(0x38, mag->pdata->reg33);
+//  if(err < 0) goto err_i2c_fail;      
+
+  //next read
+  data[0] = 0x0A;
+  data[1] = 0x01; 
+  err = VTC_i2c_Tx(data, 2);
+  if(err < 0) goto err_i2c_fail; 
+
+  if(report)
+  {
+    input_report_abs(mag->input, ABS_X, xyz[0]);
+    input_report_abs(mag->input, ABS_Y, xyz[1]);
+    input_report_abs(mag->input, ABS_Z, xyz[2]);
+    input_sync(mag->input);
+  }
+  return 0;
+
+err_i2c_fail:
+  printk(KERN_ERR "%s:failed\n", __func__);
+  return err;
+}
+
+static int af8133_i2c_init(struct af8133_data *mag)
+{
+  int err;
+  int i, j, k;
+  int mag_pos[3][5], mag_neg[3][5];
+  u8  data[6];
+
+  //*********************************
+  //Enable I2C
+  //*********************************
+  data[0]= 0x10;
+  data[1]= 0xAA; 
+  err = VTC_i2c_Tx(data, 2);
+  //ignore ACK   
+
+  //*********************************
+  //get calibration parameter
+  //*********************************
+  data[0]= 0x14;
+  data[1]= 0x3C; 
+  err = VTC_i2c_Tx(data, 2);
+  if(err < 0) return -1;    
+
+  data[0] = 0x1F;
+  err = VTC_i2c_Rx(data, 1);
+  if(err < 0) return -1;    
+
+  if(data[0] & 0x04) mag->pdata->reg33 = 0x14;
+  else if(data[0] & 0x02) mag->pdata->reg33 = 0x17;
+  else if(data[0] & 0x01) mag->pdata->reg33 = 0x15;
+  else mag->pdata->reg33 = 0x16; 
+
+  //*********************************
+  //check product code
+  //*********************************
+  data[0] = 0x00;
+  err = VTC_i2c_Rx(data, 1);
+  if(err < 0) return -1;
+
+  if(data[0] != 0x50) return -2;
+
+  //*********************************
+  //get offset by Set/Reset
+  //*********************************
+  err = af8133_measurement_setting(0x34, mag->pdata->reg33);
+  if(err < 0) return err; 
+
+  //full measurement, reset only 
+  for(i=0;i<AF8133_SET_RESET_NUM;i++)
+  {                   
+    data[0]= 0x0A;
+    data[1]= 0x01; 
+    err = VTC_i2c_Tx(data, 2);
+    if(err < 0) return -1;
+
+    mdelay(2);
+
+    data[0]= 0x03; 
+    err = VTC_i2c_Rx(data, 6);
+    if(err < 0) return -1;
+
+    mag_neg[0][i] = data[0] | (data[1] << 8); 
+    mag_neg[1][i] = data[2] | (data[3] << 8);
+    mag_neg[2][i] = data[4] | (data[5] << 8);
+
+    for(j=0;j<3;j++) mag_neg[j][i] = (mag_neg[j][i] > 32767) ? (mag_neg[j][i] - 65536) : mag_neg[j][i];
+  }
+
+  //full measurement, set only
+  err = af8133_measurement_setting(0x38, mag->pdata->reg33);
+  if(err < 0) return err; 
+
+  for(i=0;i<AF8133_SET_RESET_NUM;i++)
+  {                   
+    data[0]= 0x0A;
+    data[1]= 0x01; 
+    err = VTC_i2c_Tx(data, 2);
+    if(err < 0) return -1;
+
+    mdelay(2);
+
+    data[0]= 0x03; 
+    err = VTC_i2c_Rx(data, 6);
+    if(err < 0) return -1;
+
+    mag_pos[0][i] = data[0] | (data[1] << 8); 
+    mag_pos[1][i] = data[2] | (data[3] << 8);
+    mag_pos[2][i] = data[4] | (data[5] << 8);
+
+    for(j=0;j<3;j++) mag_pos[j][i] = (mag_pos[j][i] > 32767) ? (mag_pos[j][i] - 65536) : mag_pos[j][i];
+  }
+
+  //sort data
+  for(i=0;i<3;i++){    
+    for(j=0;j<4;j++){
+      for(k=0;k<4;k++){
+        if(mag_neg[i][k] < mag_neg[i][k+1]){
+          int tmp = mag_neg[i][k];
+          mag_neg[i][k] = mag_neg[i][k+1];
+          mag_neg[i][k+1] = tmp;
+         }
+        if(mag_pos[i][k] < mag_pos[i][k+1]){
+          int tmp = mag_pos[i][k];
+          mag_pos[i][k] = mag_pos[i][k+1];
+          mag_pos[i][k+1] = tmp;
+         } 
+       }
+     }
+   }
+
+  for(i=0;i<3;i++)
+    mag->pdata->offset[i] = (mag_pos[i][AF8133_OFFSET_INDEX]+mag_neg[i][AF8133_OFFSET_INDEX])/2; 
+
+  return 0;
+}
+
+static ssize_t attr_get_polling_rate(struct device *dev,
+                                     struct device_attribute *attr,
+                                     char *buf)
+{
+        struct af8133_data *mag = dev_get_drvdata(dev);
+       unsigned long interval_ms;
+       mutex_lock(&mag->lock);
+        interval_ms = mag->pdata->poll_interval;
+        mutex_unlock(&mag->lock);
+	return sprintf(buf, "%ld\n", interval_ms);
+}
+
+static ssize_t attr_set_polling_rate(struct device *dev,
+                                     struct device_attribute *attr,
+                                     const char *buf, size_t size)
+{
+        struct af8133_data *mag = dev_get_drvdata(dev);
+        unsigned long interval_ms;
+
+        if (strict_strtoul(buf, 10, &interval_ms))
+                return -EINVAL;
+        if (!interval_ms)
+                return -EINVAL;
+
+        if(interval_ms > DELAY_TIME_MAX)
+        	interval_ms = DELAY_TIME_MAX;
+        else if(interval_ms < DELAY_TIME_MIN)
+        	interval_ms = DELAY_TIME_MIN;
+
+        mutex_lock(&mag->lock);
+        mag->pdata->poll_interval = interval_ms;
+        mutex_unlock(&mag->lock);
+
+        if(atomic_read(&mag->enabled))
+         schedule_delayed_work(&mag->work, msecs_to_jiffies(mag->pdata->poll_interval));
+
+        return size;
+}
+
+static ssize_t attr_get_enable(struct device *dev,
+                               struct device_attribute *attr, char *buf)
+{
+        struct af8133_data *mag = dev_get_drvdata(dev);
+        int val = atomic_read(&mag->enabled);
+
+		//printk(KERN_ERR "lgf attr_get_enable val=%d\n",val);
+        return sprintf(buf, "%d\n", val);
+}
+
+static ssize_t attr_set_enable(struct device *dev,
+                               struct device_attribute *attr,
+                               const char *buf, size_t size)
+{
+       struct af8133_data *mag = dev_get_drvdata(dev);
+       unsigned int pre_en = atomic_read(&mag->enabled);
+       unsigned int new_en = 0;
+
+        //if (strict_strtoul(buf, 10, &new_en))
+        //  return -EINVAL;
+        if (sysfs_streq(buf, "1"))
+                new_en = 1;
+        else if (sysfs_streq(buf, "0"))
+                new_en = 0;
+		//printk(KERN_ERR "lgf attr_get_enable new_en=%d,pre_en=%d\n",new_en,pre_en);
+
+        if (new_en != pre_en)
+        {
+         if(new_en)
+          {
+           schedule_delayed_work(&mag->work, msecs_to_jiffies(mag->pdata->poll_interval));
+           atomic_set(&mag->enabled, 1);
+          }
+         else
+          {
+           cancel_delayed_work_sync(&mag->work);
+           atomic_set(&mag->enabled, 0);
+          }
+        }
+
+        return size;
+}
+
+
+static struct device_attribute attributes[] = {
+        __ATTR(pollrate_ms, 0777, attr_get_polling_rate, attr_set_polling_rate),
+        __ATTR(enable_device, 0777, attr_get_enable, attr_set_enable),
+};
+
+static int create_device_attributes(
+	struct device *dev,
+	struct device_attribute *attrs)
+{
+	int i;
+	int err = 0;
+
+	for (i = 0 ; NULL != attrs[i].attr.name ; ++i) {
+		err = device_create_file(dev, &attrs[i]);
+		if (err)
+			break;
+	}
+
+	if (err) {
+		for (--i; i >= 0 ; --i)
+			device_remove_file(dev, &attrs[i]);
+	}
+
+	return err;
+}
+
+static char const *const device_link_name = "i2c";
+static dev_t const af8133_device_dev_t = MKDEV(MISC_MAJOR, 240);
+
+static int create_sysfs_interfaces(struct af8133_data *af_mag)
+{
+        int err = 0;
+   
+        if (NULL == af_mag)
+          return -EINVAL;
+
+        af_mag->compass = class_create(THIS_MODULE, AF8133_SYS_CLS_NAME);
+	if(IS_ERR(af_mag->compass))
+	{
+                err = PTR_ERR(af_mag->compass);
+	        printk("%s, create class, error\n", __func__);
+		return err;
+	}
+
+	af_mag->class_dev = device_create(af_mag->compass,
+                                          NULL, 
+                                          af8133_device_dev_t,
+                                          af_mag,
+                                          AF8133_SYS_DEV_NAME);
+	if (IS_ERR(af_mag->class_dev)) {
+		err = PTR_ERR(af_mag->class_dev);
+                printk("%s, create class device, error\n", __func__);
+		return err;
+	}
+
+	err = create_device_attributes(af_mag->class_dev, attributes);
+	if (0 > err) {
+                printk("%s, create attributes, error\n", __func__);
+        }
+
+	return err;
+}
+
+static int remove_sysfs_interfaces(struct device *dev)
+{
+        int i;
+        for (i = 0; i < ARRAY_SIZE(attributes); i++)
+                device_remove_file(dev, attributes + i);
+        return 0;
+}
+
+static void af8133_work_func(struct work_struct *work)
+{
+        struct af8133_data *mag = container_of((struct delayed_work *)work, struct af8133_data, work);
+
+        int err = af8133_mag_get_data(mag);
+        if (err < 0)
+          dev_err(&mag->client->dev, "get magnetometer data failed\n");
+
+       schedule_delayed_work(&mag->work, msecs_to_jiffies(mag->pdata->poll_interval));
+}
+
+static int af8133_mag_input_init(struct af8133_data *mag)
+{
+       int err;
+       struct input_dev *dev;
+  
+        dev = input_allocate_device();
+
+        if (!dev) {
+          return -ENOMEM;
+        }
+
+        dev->id.bustype = BUS_I2C;
+        dev->name = AF8133_INPUT_DEV_NAME;
+
+        set_bit(EV_ABS, dev->evbit);
+        input_set_abs_params(dev, ABS_X, -32768, 32767, 0, 0);
+        input_set_abs_params(dev, ABS_Y, -32768, 32767, 0, 0);
+        input_set_abs_params(dev, ABS_Z, -32768, 32767, 0, 0);
+
+       input_set_drvdata(dev, mag);
+
+        err = input_register_device(dev);
+       if (err < 0) {
+         input_free_device(dev);
+         return err;
+        }
+
+       mag->input = dev;
+
+        return 0;
+}
+
+static int af8133_probe(struct i2c_client *client, const struct i2c_device_id *id)
+{
+        struct af8133_data *mag;
+        int err;
+
+        printk("%s: driver version is %s\n", __func__, AF8133_DRIVER_VERSION);
+
+        if (!i2c_check_functionality(client->adapter, I2C_FUNC_I2C)) 
+        {
+                dev_err(&client->dev, "i2c_check_functionality error\n");
+                err = -ENODEV;
+                goto err_check_func;
+        }
+
+	/* Allocate memory for driver data */
+        mag = kzalloc(sizeof(struct af8133_data), GFP_KERNEL);
+        if (!mag) {
+                dev_err(&client->dev, "failed to allocate memory for module data\n");
+                err = -ENOMEM;
+                goto err_alloc_mag_data;
+        }
+
+        mutex_init(&mag->lock);
+        mutex_lock(&mag->lock);
+        mag->client = client;
+
+        mag->pdata = kmalloc(sizeof(*mag->pdata), GFP_KERNEL);
+        if (!mag->pdata) 
+                goto err_alloc_mag_pdata;
+
+        if (client->dev.platform_data == NULL) {
+                memcpy(mag->pdata, &default_af8133_pdata, sizeof(*mag->pdata));
+        } else {
+                memcpy(mag->pdata, client->dev.platform_data, sizeof(*mag->pdata));
+        }
+
+	/***** I2C initialization *****/
+        i2c_set_clientdata(client, mag);
+        this_client = mag->client;
+
+        err = af8133_i2c_init(mag);
+        if (err < 0)
+          goto err_alloc_mag_pdata;               
+
+	/***** input *****/
+        err = af8133_mag_input_init(mag);
+        if (err < 0)
+          goto err_input_init;
+
+	/***** sysfs *****/
+        err = create_sysfs_interfaces(mag);
+        if (err < 0) {
+                dev_err(&client->dev, "%s create sysfs interfacce failed\n", AF8133_I2C_DEV_NAME);
+                goto err_clean_input;
+        }
+
+    /* workqueue init */
+       INIT_DELAYED_WORK(&mag->work, af8133_work_func);
+
+        mutex_unlock(&mag->lock);
+        dev_info(&client->dev, "af8133 probed successfully\n");
+        
+        atomic_set(&mag->enabled, 0);
+
+        return 0;
+
+err_clean_input:
+        input_unregister_device(mag->input);
+err_input_init:
+        kfree(mag->pdata);
+err_alloc_mag_pdata:
+        kfree(mag);
+err_alloc_mag_data:
+err_check_func:
+        pr_err("%s: AF8133 Driver Initialization failed\n", __func__);
+        i2c_set_clientdata(client, NULL);
+        return err;
+}
+
+static int af8133_remove(struct i2c_client *client)
+{
+        struct af8133_data *mag = i2c_get_clientdata(client);
+
+        if( mag == NULL )
+                return 0;
+
+       printk("%s: af8133 remove\n", __func__);
+ 
+        remove_sysfs_interfaces(mag->class_dev);
+       input_unregister_device(mag->input);
+
+       kfree(mag->pdata);
+        kfree(mag);
+
+        return 0;
+}
+
+static int af8133_suspend(struct device *dev)
+{
+       struct af8133_data *mag = dev_get_drvdata(dev);
+
+        if( mag == NULL )
+                return 0;
+
+       if (atomic_read(&mag->enabled))
+         cancel_delayed_work_sync(&mag->work);
+
+       printk("%s: af8133 suspend\n", __func__);
+        return 0;
+}
+
+static int af8133_resume(struct device *dev)
+{
+        struct af8133_data *mag = dev_get_drvdata(dev);
+
+        if( mag == NULL )
+                return 0;
+
+        af8133_measurement_setting(0x38, mag->pdata->reg33);
+
+        if (atomic_read(&mag->enabled))
+          schedule_delayed_work(&mag->work, msecs_to_jiffies(mag->pdata->poll_interval));
+
+        printk("%s: af8133 resume\n", __func__);
+        return 0;
+}
+
+static const struct i2c_device_id af8133_i2c_id[] = {
+        {AF8133_I2C_DEV_NAME, 0},
+        {},
+};
+
+//MODULE_DEVICE_TABLE(i2c, af8133_mag_id);
+
+static struct dev_pm_ops af8133_pm = {
+        .suspend = af8133_suspend,
+        .resume = af8133_resume,
+};
+
+static struct of_device_id af8133_match_table[] = {
+	{ .compatible = "vtc,af8133", },
+	{},
+};
+
+static struct i2c_driver af8133_driver = {
+        .driver = {
+                        .owner = THIS_MODULE,
+                        .name = AF8133_I2C_DEV_NAME,
+			.of_match_table = af8133_match_table,
+                        .pm = &af8133_pm,
+            },
+        .probe = af8133_probe,
+        .remove = af8133_remove,
+        .id_table = af8133_i2c_id,
+};
+
+//static struct i2c_board_info __initdata i2c_af8133={ I2C_BOARD_INFO(AF8133_I2C_DEV_NAME, 0x1c)};  
+static int __init af8133_init(void)
+{
+        printk("%s: af8133 3-axis megnetometer driver: init\n", __func__);
+                                    
+        //struct i2c_adapter *adapter;                                     
+        //struct i2c_client *client;                                       
+
+        //adapter = i2c_get_adapter(2);                                                        
+        //client = i2c_new_device(adapter, &i2c_af8133);                         
+
+        return i2c_add_driver(&af8133_driver);
+}
+
+static void __exit af8133_exit(void)
+{
+        printk("%s: af8133 3-axis megnetometer driver: exit\n", __func__);
+        i2c_del_driver(&af8133_driver);
+        return;
+}
+
+module_init(af8133_init);
+module_exit(af8133_exit);
+
+MODULE_DESCRIPTION("af8133 3-axis magnetometer driver");
+MODULE_AUTHOR("Voltafield CAE team");
+MODULE_LICENSE("GPL");
+MODULE_VERSION(AF8133_DRIVER_VERSION);
Index: kernel/drivers/input/misc/Kconfig
===================================================================
--- kernel/drivers/input/misc/Kconfig	(revision 182224)
+++ kernel/drivers/input/misc/Kconfig	(revision 182225)
@@ -767,6 +767,23 @@
 
 	  To compile this driver as a module, choose M here.
 
+config INPUT_MC3XX0_I2C
+       tristate "mCube mc3xx0 3-Axis accelerometer device with I2C bus"
+       depends on I2C
+       default n
+	help
+	  Say Y here if you have a mc3xx0 device on the board and use I2C
+	  communication, else say N.
+
+           To compile this driver as a module, choose M here.
+
+config INPUT_COMPASS_AF8133I_I2C
+	bool "AF7133E_AF8133I for spread SC9832"
+	default n
+	help
+	  It support different magnetometer sensor.
+          If this option is set,
+	  it will support AF7133E_AF8133I magnetometer.
 config INPUT_LTR558_I2C
 	tristate "LTR558 proximity and light sensor device with I2C bus"
 	depends on I2C
Index: kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_utility_adaption.c
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_utility_adaption.c	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_utility_adaption.c	(revision 182225)
@@ -0,0 +1,405 @@
+////////////////////////////////////////////////////////////////////////////////
+//
+// Copyright (c) 2006-2012 MStar Semiconductor, Inc.
+// All rights reserved.
+//
+// Unless otherwise stipulated in writing, any and all information contained
+// herein regardless in any format shall remain the sole proprietary of
+// MStar Semiconductor Inc. and be kept in strict confidence
+// (??MStar Confidential Information??) by the recipient.
+// Any unauthorized act including without limitation unauthorized disclosure,
+// copying, use, reproduction, sale, distribution, modification, disassembling,
+// reverse engineering and compiling of the contents of MStar Confidential
+// Information is unlawful and strictly prohibited. MStar hereby reserves the
+// rights to any and all damages, losses, costs and expenses resulting therefrom.
+//
+////////////////////////////////////////////////////////////////////////////////
+
+/**
+ *
+ * @file    mstar_drv_utility_adaption.c
+ *
+ * @brief   This file defines the interface of touch screen
+ *
+ * @version v2.2.0.0
+ *
+ */
+
+////////////////////////////////////////////////////////////
+/// Included Files
+////////////////////////////////////////////////////////////
+#include "mstar_drv_utility_adaption.h"
+
+////////////////////////////////////////////////////////////
+/// Data Types
+////////////////////////////////////////////////////////////
+
+
+////////////////////////////////////////////////////////////
+/// Constant
+////////////////////////////////////////////////////////////
+
+
+////////////////////////////////////////////////////////////
+/// Variables
+////////////////////////////////////////////////////////////
+extern struct i2c_client *g_I2cClient;
+
+////////////////////////////////////////////////////////////
+/// Macro
+////////////////////////////////////////////////////////////
+
+
+////////////////////////////////////////////////////////////
+/// Function Prototypes
+////////////////////////////////////////////////////////////
+
+
+////////////////////////////////////////////////////////////
+/// Function Implementation
+////////////////////////////////////////////////////////////
+
+
+#ifdef CONFIG_ENABLE_DMA_IIC
+#include <linux/dma-mapping.h>
+#include <linux/mm_types.h>
+#include <linux/mm.h>
+#include <asm/uaccess.h>
+#include <asm/page.h>
+#include <linux/vmalloc.h>
+
+static unsigned char *I2CDMABuf_va = NULL;
+static volatile unsigned int I2CDMABuf_pa = NULL;
+
+void DmaAlloc(void)
+{
+    if (NULL == I2CDMABuf_va)
+    {
+        I2CDMABuf_va = (u8 *)dma_alloc_coherent(NULL, 4096, &I2CDMABuf_pa, GFP_KERNEL);
+    }
+    
+    if (NULL == I2CDMABuf_va)
+    {
+        DBG("DrvCommonDmaAlloc FAILED!");
+    }
+    else
+    {
+        DBG("DrvCommonDmaAlloc SUCCESS!");
+    }
+}
+
+void DmaFree(void)
+{
+    if (NULL != I2CDMABuf_va)
+    {
+        dma_free_coherent(NULL, 4096, I2CDMABuf_va, I2CDMABuf_pa);
+	      I2CDMABuf_va = NULL;
+	      I2CDMABuf_pa = 0;
+    }
+}
+#endif //CONFIG_ENABLE_DMA_IIC
+
+//------------------------------------------------------------------------------//
+
+u16 RegGet16BitValue(u16 nAddr)
+{
+    u8 tx_data[3] = {0x10, (nAddr >> 8) & 0xFF, nAddr & 0xFF};
+    u8 rx_data[2] = {0};
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &tx_data[0], 3);
+    IicReadData(SLAVE_I2C_ID_DBBUS, &rx_data[0], 2);
+
+    return (rx_data[1] << 8 | rx_data[0]);
+}
+
+u8 RegGetLByteValue(u16 nAddr)
+{
+    u8 tx_data[3] = {0x10, (nAddr >> 8) & 0xFF, nAddr & 0xFF};
+    u8 rx_data = {0};
+
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &tx_data[0], 3);
+    IicReadData(SLAVE_I2C_ID_DBBUS, &rx_data, 1);
+
+    return (rx_data);
+}
+
+u8 RegGetHByteValue(u16 nAddr)
+{
+    u8 tx_data[3] = {0x10, (nAddr >> 8) & 0xFF, (nAddr & 0xFF) + 1};
+    u8 rx_data = {0};
+
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &tx_data[0], 3);
+    IicReadData(SLAVE_I2C_ID_DBBUS, &rx_data, 1);
+
+    return (rx_data);
+}
+
+void RegSet16BitValue(u16 nAddr, u16 nData)
+{
+    u8 tx_data[5] = {0x10, (nAddr >> 8) & 0xFF, nAddr & 0xFF, nData & 0xFF, nData >> 8};
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &tx_data[0], 5);
+}
+
+void RegSetLByteValue(u16 nAddr, u8 nData)
+{
+    u8 tx_data[4] = {0x10, (nAddr >> 8) & 0xFF, nAddr & 0xFF, nData};
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &tx_data[0], 4);
+}
+
+void RegSetHByteValue(u16 nAddr, u8 nData)
+{
+    u8 tx_data[4] = {0x10, (nAddr >> 8) & 0xFF, (nAddr & 0xFF) + 1, nData};
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &tx_data[0], 4);
+}
+
+void RegSet16BitValueOn(u16 nAddr, u16 nData) //Set bit on nData from 0 to 1
+{
+    u16 rData = RegGet16BitValue(nAddr);
+    rData |= nData;
+    RegSet16BitValue(nAddr, rData);
+}
+
+void RegSet16BitValueOff(u16 nAddr, u16 nData) //Set bit on nData from 1 to 0
+{
+    u16 rData = RegGet16BitValue(nAddr);
+    rData &= (~nData);
+    RegSet16BitValue(nAddr, rData);
+}
+
+void DbBusEnterSerialDebugMode(void)
+{
+    u8 data[5];
+
+    // Enter the Serial Debug Mode
+    data[0] = 0x53;
+    data[1] = 0x45;
+    data[2] = 0x52;
+    data[3] = 0x44;
+    data[4] = 0x42;
+
+    IicWriteData(SLAVE_I2C_ID_DBBUS, data, 5);
+}
+
+void DbBusExitSerialDebugMode(void)
+{
+    u8 data[1];
+
+    // Exit the Serial Debug Mode
+    data[0] = 0x45;
+
+    IicWriteData(SLAVE_I2C_ID_DBBUS, data, 1);
+    
+    // Delay some interval to guard the next transaction
+//    udelay(200);        // delay about 0.2ms
+}
+
+void DbBusIICUseBus(void)
+{
+    u8 data[1];
+
+    // IIC Use Bus
+    data[0] = 0x35;
+
+    IicWriteData(SLAVE_I2C_ID_DBBUS, data, 1);
+}
+
+void DbBusIICNotUseBus(void)
+{
+    u8 data[1];
+
+    // IIC Not Use Bus
+    data[0] = 0x34;
+
+    IicWriteData(SLAVE_I2C_ID_DBBUS, data, 1);
+}
+
+void DbBusIICReshape(void)
+{
+    u8 data[1];
+
+    // IIC Re-shape
+    data[0] = 0x71;
+
+    IicWriteData(SLAVE_I2C_ID_DBBUS, data, 1);
+}
+
+void DbBusStopMCU(void)
+{
+    u8 data[1];
+
+    // Stop the MCU
+    data[0] = 0x37;
+
+    IicWriteData(SLAVE_I2C_ID_DBBUS, data, 1);
+}
+
+void DbBusNotStopMCU(void)
+{
+    u8 data[1];
+
+    // Not Stop the MCU
+    data[0] = 0x36;
+
+    IicWriteData(SLAVE_I2C_ID_DBBUS, data, 1);
+}
+
+s32 IicWriteData(u8 nSlaveId, u8* pBuf, u16 nSize)
+{
+    s32 rc = 0;
+
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+    struct i2c_msg msgs[] =
+    {
+        {
+            .addr = nSlaveId,
+            .flags = 0, // if read flag is undefined, then it means write flag.
+            .len = nSize,
+            .buf = pBuf,
+        },
+    };
+
+    /* If everything went ok (i.e. 1 msg transmitted), return #bytes
+       transmitted, else error code. */
+    if (g_I2cClient != NULL)
+    {
+        rc = i2c_transfer(g_I2cClient->adapter, msgs, 1);
+        if (rc < 0)
+        {
+            PRINTF_ERR("IicWriteData() error %d\n", rc);
+        }
+    }
+    else
+    {
+        PRINTF_ERR("i2c client is NULL\n");
+    }
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+    if (g_I2cClient != NULL)
+    {
+        u8 nAddrBefore = g_I2cClient->addr;
+        g_I2cClient->addr = nSlaveId;
+//        g_I2cClient->addr = (g_I2cClient->addr & I2C_MASK_FLAG ) | (I2C_ENEXT_FLAG);
+
+#ifdef CONFIG_ENABLE_DMA_IIC
+        if (nSize > 8 && NULL != I2CDMABuf_va)
+        {
+            s32 i = 0;
+	          
+            for (i = 0; i < nSize; i ++)
+            {
+                I2CDMABuf_va[i] = pBuf[i];
+            }
+            g_I2cClient->ext_flag = g_I2cClient->ext_flag | I2C_DMA_FLAG;
+            rc = i2c_master_send(g_I2cClient, (unsigned char *)I2CDMABuf_pa, nSize);
+        }
+        else
+        {
+            g_I2cClient->ext_flag = g_I2cClient->ext_flag & (~I2C_DMA_FLAG);	
+            rc = i2c_master_send(g_I2cClient, pBuf, nSize);
+        }
+#else
+        rc = i2c_master_send(g_I2cClient, pBuf, nSize);
+#endif //CONFIG_ENABLE_DMA_IIC
+        g_I2cClient->addr = nAddrBefore;
+
+        if (rc < 0)
+        {
+            PRINTF_ERR("IicWriteData() error %d, nSlaveId=%d, nSize=%d\n", rc, nSlaveId, nSize);
+        }
+    }
+    else
+    {
+        PRINTF_ERR("i2c client is NULL\n");
+    }
+#endif
+    
+    return rc;
+}
+
+s32 IicReadData(u8 nSlaveId, u8* pBuf, u16 nSize)
+{
+    s32 rc = 0;
+
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+    struct i2c_msg msgs[] =
+    {
+        {
+            .addr = nSlaveId,
+            .flags = I2C_M_RD, // read flag
+            .len = nSize,
+            .buf = pBuf,
+        },
+    };
+
+    /* If everything went ok (i.e. 1 msg transmitted), return #bytes
+       transmitted, else error code. */
+    if (g_I2cClient != NULL)
+    {
+        rc = i2c_transfer(g_I2cClient->adapter, msgs, 1);
+        if (rc < 0)
+        {
+            PRINTF_ERR("IicReadData() error %d\n", rc);
+        }
+    }
+    else
+    {
+        PRINTF_ERR("i2c client is NULL\n");
+    }
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+    if (g_I2cClient != NULL)
+    {
+        u8 nAddrBefore = g_I2cClient->addr;
+        g_I2cClient->addr = nSlaveId;
+//        g_I2cClient->addr = (g_I2cClient->addr & I2C_MASK_FLAG) | (I2C_ENEXT_FLAG);
+
+#ifdef CONFIG_ENABLE_DMA_IIC
+        if (nSize > 8 && NULL != I2CDMABuf_va)
+        {
+            s32 i = 0;
+        
+            g_I2cClient->ext_flag = g_I2cClient->ext_flag | I2C_DMA_FLAG;
+            rc = i2c_master_recv(g_I2cClient, (unsigned char *)I2CDMABuf_pa, nSize);
+        
+            for (i = 0; i < nSize; i ++)
+            {
+                pBuf[i] = I2CDMABuf_va[i];
+            }
+        }
+        else
+        {
+            g_I2cClient->ext_flag = g_I2cClient->ext_flag & (~I2C_DMA_FLAG);	
+            rc = i2c_master_recv(g_I2cClient, pBuf, nSize);
+        }
+#else
+        rc = i2c_master_recv(g_I2cClient, pBuf, nSize);
+#endif //CONFIG_ENABLE_DMA_IIC
+        g_I2cClient->addr = nAddrBefore;
+
+        if (rc < 0)
+        {
+            PRINTF_ERR("IicReadData() error %d, nSlaveId=%d, nSize=%d\n", rc, nSlaveId, nSize);
+        }
+    }
+    else
+    {
+        PRINTF_ERR("i2c client is NULL\n");
+    }
+#endif
+    
+    return rc;
+}
+
+void mstpMemSet(void *pDst, s8 nVal, u32 nSize)
+{
+    memset(pDst, nVal, nSize);
+}
+
+void mstpMemCopy(void *pDst, void *pSource, u32 nSize)
+{
+    memcpy(pDst, pSource, nSize);
+}
+
+void mstpDelay(u32 nTime)
+{
+    mdelay(nTime);
+}
+
+//------------------------------------------------------------------------------//
Index: kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_platform_porting_layer.c
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_platform_porting_layer.c	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_platform_porting_layer.c	(revision 182225)
@@ -0,0 +1,605 @@
+////////////////////////////////////////////////////////////////////////////////
+//
+// Copyright (c) 2006-2012 MStar Semiconductor, Inc.
+// All rights reserved.
+//
+// Unless otherwise stipulated in writing, any and all information contained
+// herein regardless in any format shall remain the sole proprietary of
+// MStar Semiconductor Inc. and be kept in strict confidence
+// (??MStar Confidential Information??) by the recipient.
+// Any unauthorized act including without limitation unauthorized disclosure,
+// copying, use, reproduction, sale, distribution, modification, disassembling,
+// reverse engineering and compiling of the contents of MStar Confidential
+// Information is unlawful and strictly prohibited. MStar hereby reserves the
+// rights to any and all damages, losses, costs and expenses resulting therefrom.
+//
+////////////////////////////////////////////////////////////////////////////////
+
+/**
+ *
+ * @file    mstar_drv_platform_porting_layer.c
+ *
+ * @brief   This file defines the interface of touch screen
+ *
+ * @version v2.2.0.0
+ *
+ */
+ 
+/*=============================================================*/
+// INCLUDE FILE
+/*=============================================================*/
+#include <linux/kthread.h>
+#include <linux/err.h>
+
+#include "mstar_drv_platform_porting_layer.h"
+#include "mstar_drv_ic_fw_porting_layer.h"
+#include "mstar_drv_platform_interface.h"
+
+/*=============================================================*/
+// EXTREN VARIABLE DECLARATION
+/*=============================================================*/
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+extern struct kset *g_TouchKSet;
+extern struct kobject *g_TouchKObj;
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+
+#ifdef CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+extern struct tpd_device *tpd;
+#endif //CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+extern struct regulator *g_ReguVdd;
+#endif
+
+/*=============================================================*/
+// LOCAL VARIABLE DEFINITION
+/*=============================================================*/
+
+struct mutex g_Mutex;
+static struct work_struct _gFingerTouchWork;
+static struct workqueue_struct *gfingertouch_workqueue;
+
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+static struct early_suspend _gEarlySuspend;
+#endif
+
+#ifdef CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+#ifndef CONFIG_USE_IRQ_INTERRUPT_FOR_MTK_PLATFORM
+static DECLARE_WAIT_QUEUE_HEAD(_gWaiter);
+static struct task_struct *_gThread = NULL;
+static int _gTpdFlag = 0;
+#endif //CONFIG_USE_IRQ_INTERRUPT_FOR_MTK_PLATFORM
+#endif //CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+
+/*=============================================================*/
+// GLOBAL VARIABLE DEFINITION
+/*=============================================================*/
+
+struct input_dev *g_InputDevice = NULL;
+static int _gIrq = -1;
+
+static struct task_struct *thread = NULL;
+static DECLARE_WAIT_QUEUE_HEAD(waiter);
+static int tpd_flag = 0;
+
+/*=============================================================*/
+// LOCAL FUNCTION DEFINITION
+/*=============================================================*/
+
+/* read data through I2C then report data to input sub-system when interrupt occurred */
+static void _DrvPlatformLyrFingerTouchDoWork(struct work_struct *pWork)
+{
+    DBG("*** %s() ***\n", __func__);
+    mutex_lock(&g_Mutex);
+
+    DrvIcFwLyrHandleFingerTouch(NULL, 0);
+
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+//    enable_irq(MS_TS_MSG_IC_GPIO_INT);
+    enable_irq(_gIrq);
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+    mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM); 
+#endif
+
+    mutex_unlock(&g_Mutex);
+}
+
+static int touch_event_handler(void *unused)
+{
+	struct sched_param param = { .sched_priority = 5 };
+	sched_setscheduler(current, SCHED_RR, &param);
+
+	do {
+		set_current_state(TASK_INTERRUPTIBLE);
+		wait_event_interruptible(waiter, (0 != tpd_flag));
+		tpd_flag = 0;
+		set_current_state(TASK_RUNNING);
+		mutex_lock(&g_Mutex);
+		DrvIcFwLyrHandleFingerTouch(NULL, 0);
+		mutex_unlock(&g_Mutex);
+	} while (!kthread_should_stop());
+
+	return 0;
+}
+
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+/* The interrupt service routine will be triggered when interrupt occurred */
+static irqreturn_t _DrvPlatformLyrFingerTouchInterruptHandler(s32 nIrq, void *pDeviceId)
+{
+	DBG("*** %s() ***\n", __func__);
+	tpd_flag = 1;
+	wake_up_interruptible(&waiter);
+	return IRQ_HANDLED;
+
+	//disable_irq_nosync(MS_TS_MSG_IC_GPIO_INT);
+	//disable_irq_nosync(_gIrq);
+	//queue_work(gfingertouch_workqueue, &_gFingerTouchWork);
+
+	//return IRQ_HANDLED;
+	//return IRQ_WAKE_THREAD;
+}
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+static void _DrvPlatformLyrFingerTouchInterruptHandler(void)
+{
+#ifdef CONFIG_USE_IRQ_INTERRUPT_FOR_MTK_PLATFORM
+    mt_eint_mask(CUST_EINT_TOUCH_PANEL_NUM);
+    queue_work(gfingertouch_workqueue, &_gFingerTouchWork);
+#else    
+    mt_eint_mask(CUST_EINT_TOUCH_PANEL_NUM);
+
+    _gTpdFlag = 1;
+    wake_up_interruptible(&_gWaiter); 
+#endif //CONFIG_USE_IRQ_INTERRUPT_FOR_MTK_PLATFORM
+}
+
+static int _DrvPlatformLyrFingerTouchHandler(void *pUnUsed)
+{
+    struct sched_param param = { .sched_priority = RTPM_PRIO_TPD };
+    sched_setscheduler(current, SCHED_RR, &param);
+	
+    do
+    {
+        set_current_state(TASK_INTERRUPTIBLE);
+        wait_event_interruptible(_gWaiter, _gTpdFlag != 0);
+        _gTpdFlag = 0;
+        
+        set_current_state(TASK_RUNNING);
+
+        mutex_lock(&g_Mutex);
+
+        DrvIcFwLyrHandleFingerTouch(NULL, 0);
+
+        mutex_unlock(&g_Mutex);
+
+        mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM); 
+		
+    } while (!kthread_should_stop());
+	
+    return 0;
+}
+#endif
+
+/*=============================================================*/
+// GLOBAL FUNCTION DEFINITION
+/*=============================================================*/
+
+#ifdef CONFIG_ENABLE_REGULATOR_POWER_ON
+void DrvPlatformLyrTouchDeviceRegulatorPowerOn(void)
+{
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+    s32 nRetVal = 0;
+
+    DBG("*** %s() ***\n", __func__);
+    
+    nRetVal = regulator_set_voltage(g_ReguVdd, 2800000, 2800000); // For specific SPRD BB chip(ex. SC7715) or QCOM BB chip, need to enable this function call for correctly power on Touch IC.
+
+    if (nRetVal)
+    {
+        DBG("Could not set to 2800mv.\n");
+    }
+    regulator_enable(g_ReguVdd);
+
+//    mdelay(20); //mdelay(100);
+    msleep(20);
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+    hwPowerOn(MT6323_POWER_LDO_VGP1, VOL_2800, "TP"); // For specific MTK BB chip(ex. MT6582), need to enable this function call for correctly power on Touch IC.
+#endif
+}
+#endif //CONFIG_ENABLE_REGULATOR_POWER_ON
+
+void DrvPlatformLyrTouchDevicePowerOn(void)
+{
+    DBG("*** %s() ***\n", __func__);
+    
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+    gpio_direction_output(MS_TS_MSG_IC_GPIO_RST, 1);
+//    gpio_set_value(MS_TS_MSG_IC_GPIO_RST, 1); 
+//    mdelay(100);
+    gpio_set_value(MS_TS_MSG_IC_GPIO_RST, 0);
+//    mdelay(10);
+    msleep(10);
+    gpio_set_value(MS_TS_MSG_IC_GPIO_RST, 1);
+//    mdelay(50);
+    msleep(50);
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+    mt_set_gpio_mode(MS_TS_MSG_IC_GPIO_RST, GPIO_CTP_RST_PIN_M_GPIO);
+    mt_set_gpio_dir(MS_TS_MSG_IC_GPIO_RST, GPIO_DIR_OUT);
+    mt_set_gpio_out(MS_TS_MSG_IC_GPIO_RST, GPIO_OUT_ZERO);  
+
+#ifdef TPD_CLOSE_POWER_IN_SLEEP
+    hwPowerDown(TPD_POWER_SOURCE, "TP"); 
+//    mdelay(100);
+    msleep(100);
+    hwPowerOn(TPD_POWER_SOURCE, VOL_2800, "TP"); 
+//    mdelay(10);  // reset pulse
+    msleep(10);
+#endif //TPD_CLOSE_POWER_IN_SLEEP
+
+    mt_set_gpio_out(MS_TS_MSG_IC_GPIO_RST, GPIO_OUT_ONE);
+//    mdelay(180); // wait stable
+    msleep(180);
+#endif
+}
+
+void DrvPlatformLyrTouchDevicePowerOff(void)
+{
+    DBG("*** %s() ***\n", __func__);
+    
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+//    gpio_direction_output(MS_TS_MSG_IC_GPIO_RST, 0);
+    gpio_set_value(MS_TS_MSG_IC_GPIO_RST, 0);
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+    mt_set_gpio_mode(MS_TS_MSG_IC_GPIO_RST, GPIO_CTP_RST_PIN_M_GPIO);
+    mt_set_gpio_dir(MS_TS_MSG_IC_GPIO_RST, GPIO_DIR_OUT);
+    mt_set_gpio_out(MS_TS_MSG_IC_GPIO_RST, GPIO_OUT_ZERO);  
+#ifdef TPD_CLOSE_POWER_IN_SLEEP
+    hwPowerDown(TPD_POWER_SOURCE, "TP");
+#endif //TPD_CLOSE_POWER_IN_SLEEP
+#endif    
+}
+
+void DrvPlatformLyrTouchDeviceResetHw(void)
+{
+    DBG("*** %s() ***\n", __func__);
+    
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+    gpio_direction_output(MS_TS_MSG_IC_GPIO_RST, 1);
+//    gpio_set_value(MS_TS_MSG_IC_GPIO_RST, 1);
+    gpio_set_value(MS_TS_MSG_IC_GPIO_RST, 0);
+//    mdelay(10);
+    msleep(10);
+    gpio_set_value(MS_TS_MSG_IC_GPIO_RST, 1);
+//    mdelay(50);
+    msleep(50);
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+    mt_set_gpio_mode(MS_TS_MSG_IC_GPIO_RST, GPIO_CTP_RST_PIN_M_GPIO);
+    mt_set_gpio_dir(MS_TS_MSG_IC_GPIO_RST, GPIO_DIR_OUT);
+    mt_set_gpio_out(MS_TS_MSG_IC_GPIO_RST, GPIO_OUT_ONE);
+//    mdelay(10);
+    msleep(10);
+    mt_set_gpio_mode(MS_TS_MSG_IC_GPIO_RST, GPIO_CTP_RST_PIN_M_GPIO);
+    mt_set_gpio_dir(MS_TS_MSG_IC_GPIO_RST, GPIO_DIR_OUT);
+    mt_set_gpio_out(MS_TS_MSG_IC_GPIO_RST, GPIO_OUT_ZERO);  
+//    mdelay(50);
+    msleep(50);
+    mt_set_gpio_mode(MS_TS_MSG_IC_GPIO_RST, GPIO_CTP_RST_PIN_M_GPIO);
+    mt_set_gpio_dir(MS_TS_MSG_IC_GPIO_RST, GPIO_DIR_OUT);
+    mt_set_gpio_out(MS_TS_MSG_IC_GPIO_RST, GPIO_OUT_ONE);
+//    mdelay(50); 
+    msleep(50);
+#endif
+}
+
+void DrvPlatformLyrDisableFingerTouchReport(void)
+{
+    DBG("*** %s() ***\n", __func__);
+
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+//    disable_irq(MS_TS_MSG_IC_GPIO_RST);
+    disable_irq(_gIrq);
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+    mt_eint_mask(CUST_EINT_TOUCH_PANEL_NUM);
+#endif
+}
+
+void DrvPlatformLyrEnableFingerTouchReport(void)
+{
+    DBG("*** %s() ***\n", __func__);
+
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+//    enable_irq(MS_TS_MSG_IC_GPIO_RST);
+    enable_irq(_gIrq);
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+    mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+#endif
+}
+
+void DrvPlatformLyrFingerTouchPressed(s32 nX, s32 nY, s32 nPressure, s32 nId)
+{
+    DBG("*** %s() ***\n", __func__);
+    DBG("point touch pressed\n");
+
+    input_report_key(g_InputDevice, BTN_TOUCH, 1);
+#if defined(CONFIG_ENABLE_CHIP_MSG26XXM)
+    input_report_abs(g_InputDevice, ABS_MT_TRACKING_ID, nId);
+#endif //CONFIG_ENABLE_CHIP_MSG26XXM
+    input_report_abs(g_InputDevice, ABS_MT_TOUCH_MAJOR, 1);
+    input_report_abs(g_InputDevice, ABS_MT_WIDTH_MAJOR, 1);
+    input_report_abs(g_InputDevice, ABS_MT_POSITION_X, nX);
+    input_report_abs(g_InputDevice, ABS_MT_POSITION_Y, nY);
+
+    input_mt_sync(g_InputDevice);
+
+}
+
+void DrvPlatformLyrFingerTouchReleased(s32 nX, s32 nY)
+{
+    DBG("*** %s() ***\n", __func__);
+    DBG("point touch released\n");
+
+    input_report_key(g_InputDevice, BTN_TOUCH, 0);
+    input_mt_sync(g_InputDevice);
+
+}
+
+s32 DrvPlatformLyrInputDeviceInitialize(struct i2c_client *pClient)
+{
+    s32 nRetVal = 0;
+
+    DBG("*** %s() ***\n", __func__);
+
+    mutex_init(&g_Mutex);
+
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+    /* allocate an input device */
+    g_InputDevice = input_allocate_device();
+    if (g_InputDevice == NULL)
+    {
+        DBG("*** input device allocation failed ***\n");
+        return -ENOMEM;
+    }
+
+    g_InputDevice->name = MSG_TP_IC_NAME;
+    g_InputDevice->phys = "I2C";
+    g_InputDevice->dev.parent = &pClient->dev;
+    g_InputDevice->id.bustype = BUS_I2C;
+    
+    /* set the supported event type for input device */
+	__set_bit(EV_KEY, g_InputDevice->evbit);
+	__set_bit(EV_ABS, g_InputDevice->evbit);
+	__set_bit(EV_SYN, g_InputDevice->evbit);
+	//__set_bit(BTN_TOUCH, g_InputDevice->keybit);
+	__set_bit(ABS_MT_TOUCH_MAJOR, g_InputDevice->absbit);
+	__set_bit(ABS_MT_POSITION_X, g_InputDevice->absbit);
+	__set_bit(ABS_MT_POSITION_Y, g_InputDevice->absbit);
+	__set_bit(ABS_MT_WIDTH_MAJOR, g_InputDevice->absbit);
+
+	__set_bit(KEY_MENU,  g_InputDevice->keybit);
+	__set_bit(KEY_BACK,  g_InputDevice->keybit);
+	__set_bit(KEY_HOME,  g_InputDevice->keybit);
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+    input_set_capability(g_InputDevice, EV_KEY, KEY_POWER);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_UP);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_DOWN);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_LEFT);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_RIGHT);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_W);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_Z);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_V);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_O);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_M);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_C);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_E);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_S);
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+
+/*
+#ifdef CONFIG_TP_HAVE_KEY
+    set_bit(TOUCH_KEY_MENU, g_InputDevice->keybit); //Menu
+    set_bit(TOUCH_KEY_HOME, g_InputDevice->keybit); //Home
+    set_bit(TOUCH_KEY_BACK, g_InputDevice->keybit); //Back
+    set_bit(TOUCH_KEY_SEARCH, g_InputDevice->keybit); //Search
+#endif
+*/
+
+#if defined(CONFIG_ENABLE_CHIP_MSG26XXM)
+    input_set_abs_params(g_InputDevice, ABS_MT_TRACKING_ID, 0, 255, 0, 0);
+#endif //CONFIG_ENABLE_CHIP_MSG26XXM
+    input_set_abs_params(g_InputDevice, ABS_MT_TOUCH_MAJOR, 0, 255, 0, 0);
+    input_set_abs_params(g_InputDevice, ABS_MT_WIDTH_MAJOR, 0, 15, 0, 0);
+    input_set_abs_params(g_InputDevice, ABS_MT_POSITION_X, 0, TOUCH_SCREEN_X_MAX, 0, 0);
+    input_set_abs_params(g_InputDevice, ABS_MT_POSITION_Y, 0, TOUCH_SCREEN_Y_MAX, 0, 0);
+
+    /* register the input device to input sub-system */
+    nRetVal = input_register_device(g_InputDevice);
+    if (nRetVal < 0)
+    {
+        DBG("*** Unable to register touch input device ***\n");
+    }
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+    g_InputDevice = tpd->dev;
+
+//    g_InputDevice->name = pClient->name;
+    g_InputDevice->phys = "I2C";
+    g_InputDevice->dev.parent = &pClient->dev;
+    g_InputDevice->id.bustype = BUS_I2C;
+    
+    /* set the supported event type for input device */
+    set_bit(EV_ABS, g_InputDevice->evbit);
+    set_bit(EV_SYN, g_InputDevice->evbit);
+    set_bit(EV_KEY, g_InputDevice->evbit);
+    set_bit(BTN_TOUCH, g_InputDevice->keybit);
+    set_bit(INPUT_PROP_DIRECT, g_InputDevice->propbit);
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+    input_set_capability(g_InputDevice, EV_KEY, KEY_POWER);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_UP);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_DOWN);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_LEFT);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_RIGHT);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_W);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_Z);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_V);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_O);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_M);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_C);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_E);
+    input_set_capability(g_InputDevice, EV_KEY, KEY_S);
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+
+/*
+#ifdef CONFIG_TP_HAVE_KEY
+    set_bit(TOUCH_KEY_MENU, g_InputDevice->keybit); //Menu
+    set_bit(TOUCH_KEY_HOME, g_InputDevice->keybit); //Home
+    set_bit(TOUCH_KEY_BACK, g_InputDevice->keybit); //Back
+    set_bit(TOUCH_KEY_SEARCH, g_InputDevice->keybit); //Search
+#endif
+*/
+
+#if defined(CONFIG_ENABLE_CHIP_MSG26XXM)
+    input_set_abs_params(g_InputDevice, ABS_MT_TRACKING_ID, 0, 255, 0, 0);
+#endif //CONFIG_ENABLE_CHIP_MSG26XXM
+    input_set_abs_params(g_InputDevice, ABS_MT_TOUCH_MAJOR, 0, 255, 0, 0);
+    input_set_abs_params(g_InputDevice, ABS_MT_WIDTH_MAJOR, 0, 15, 0, 0);
+    input_set_abs_params(g_InputDevice, ABS_MT_POSITION_X, 0, TOUCH_SCREEN_X_MAX, 0, 0);
+    input_set_abs_params(g_InputDevice, ABS_MT_POSITION_Y, 0, TOUCH_SCREEN_Y_MAX, 0, 0);
+#endif
+
+    return nRetVal;    
+}
+
+s32 DrvPlatformLyrTouchDeviceRequestGPIO(void)
+{
+    s32 nRetVal = 0;
+
+    DBG("*** %s() ***\n", __func__);
+    
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+    nRetVal = gpio_request(MS_TS_MSG_IC_GPIO_RST, "C_TP_RST");     
+    if (nRetVal < 0)
+    {
+        DBG("*** Failed to request GPIO %d, error %d ***\n", MS_TS_MSG_IC_GPIO_RST, nRetVal);
+    }
+
+    nRetVal = gpio_request(MS_TS_MSG_IC_GPIO_INT, "C_TP_INT");    
+    if (nRetVal < 0)
+    {
+        DBG("*** Failed to request GPIO %d, error %d ***\n", MS_TS_MSG_IC_GPIO_INT, nRetVal);
+    }
+#endif
+
+    return nRetVal;    
+}
+
+s32 DrvPlatformLyrTouchDeviceRegisterFingerTouchInterruptHandler(void)
+{
+    s32 nRetVal = 0;
+
+    DBG("*** %s() ***\n", __func__);
+
+    if (DrvIcFwLyrIsRegisterFingerTouchInterruptHandler())
+    {    	
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+        /* initialize the finger touch work queue */ 
+        INIT_WORK(&_gFingerTouchWork, _DrvPlatformLyrFingerTouchDoWork);
+        gfingertouch_workqueue = create_singlethread_workqueue("msg2138");
+        if (!gfingertouch_workqueue) {
+		nRetVal = -ESRCH;
+		printk(KERN_ERR "msg2138: create_singlethread_workqueue\n");
+		return nRetVal;
+	}
+
+        _gIrq = gpio_to_irq(MS_TS_MSG_IC_GPIO_INT);
+
+        /* request an irq and register the isr */
+        nRetVal = request_irq(_gIrq/*MS_TS_MSG_IC_GPIO_INT*/, _DrvPlatformLyrFingerTouchInterruptHandler,
+                      IRQF_TRIGGER_RISING | IRQF_ONESHOT /* | IRQF_NO_SUSPEND *//* IRQF_TRIGGER_FALLING */,
+                      "msg2xxx", NULL);
+	if (nRetVal != 0)
+        {
+            DBG("*** Unable to claim irq %d; error %d ***\n", MS_TS_MSG_IC_GPIO_INT, nRetVal);
+        }
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+        mt_set_gpio_mode(MS_TS_MSG_IC_GPIO_INT, GPIO_CTP_EINT_PIN_M_EINT);
+        mt_set_gpio_dir(MS_TS_MSG_IC_GPIO_INT, GPIO_DIR_IN);
+        mt_set_gpio_pull_enable(MS_TS_MSG_IC_GPIO_INT, GPIO_PULL_ENABLE);
+        mt_set_gpio_pull_select(MS_TS_MSG_IC_GPIO_INT, GPIO_PULL_UP);
+
+        mt_eint_set_hw_debounce(CUST_EINT_TOUCH_PANEL_NUM, CUST_EINT_TOUCH_PANEL_DEBOUNCE_CN);
+        mt_eint_registration(CUST_EINT_TOUCH_PANEL_NUM, EINTF_TRIGGER_RISING, _DrvPlatformLyrFingerTouchInterruptHandler, 1);
+
+        mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+
+#ifdef CONFIG_USE_IRQ_INTERRUPT_FOR_MTK_PLATFORM
+        /* initialize the finger touch work queue */ 
+        INIT_WORK(&_gFingerTouchWork, _DrvPlatformLyrFingerTouchDoWork);
+#else
+        _gThread = kthread_run(_DrvPlatformLyrFingerTouchHandler, 0, TPD_DEVICE);
+        if (IS_ERR(_gThread))
+        { 
+            nRetVal = PTR_ERR(_gThread);
+            DBG("Failed to create kernel thread: %d\n", nRetVal);
+        }
+#endif //CONFIG_USE_IRQ_INTERRUPT_FOR_MTK_PLATFORM
+#endif
+    }
+    thread = kthread_run(touch_event_handler, 0, "msg2138-wait-queue");
+    if (IS_ERR(thread)) {
+	    nRetVal = PTR_ERR(thread);
+	    printk(KERN_ERR "failed to create kernel thread: %d\n", nRetVal);
+    }
+
+    return nRetVal;    
+}	
+
+void DrvPlatformLyrTouchDeviceRegisterEarlySuspend(void)
+{
+    DBG("*** %s() ***\n", __func__);
+
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+    _gEarlySuspend.level = EARLY_SUSPEND_LEVEL_BLANK_SCREEN;
+    _gEarlySuspend.suspend = MsDrvInterfaceTouchDeviceSuspend;
+    _gEarlySuspend.resume = MsDrvInterfaceTouchDeviceResume;
+    register_early_suspend(&_gEarlySuspend);
+#endif
+}
+
+/* remove function is triggered when the input device is removed from input sub-system */
+s32 DrvPlatformLyrTouchDeviceRemove(struct i2c_client *pClient)
+{
+    DBG("*** %s() ***\n", __func__);
+
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+//    free_irq(MS_TS_MSG_IC_GPIO_INT, g_InputDevice);
+    free_irq(_gIrq, g_InputDevice);
+    gpio_free(MS_TS_MSG_IC_GPIO_INT);
+    gpio_free(MS_TS_MSG_IC_GPIO_RST);
+    cancel_work_sync(&_gFingerTouchWork);
+    destroy_workqueue(gfingertouch_workqueue);
+    input_unregister_device(g_InputDevice);
+#endif    
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+    kset_unregister(g_TouchKSet);
+    kobject_put(g_TouchKObj);
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+    return 0;
+}
+
+void DrvPlatformLyrSetIicDataRate(struct i2c_client *pClient, u32 nIicDataRate)
+{
+    DBG("*** %s() nIicDataRate = %d ***\n", __func__, nIicDataRate);
+
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM)
+    // TODO : Please FAE colleague to confirm with customer device driver engineer for how to set i2c data rate on SPRD platform
+    //sprd_i2c_ctl_chg_clk(pClient->adapter->nr, nIicDataRate); 
+    //mdelay(100);
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+    // TODO : Please FAE colleague to confirm with customer device driver engineer for how to set i2c data rate on QCOM platform
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+    pClient->timing = nIicDataRate/1000;
+#endif
+}
Index: kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_main.c
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_main.c	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_main.c	(revision 182225)
@@ -0,0 +1,990 @@
+////////////////////////////////////////////////////////////////////////////////
+//
+// Copyright (c) 2006-2012 MStar Semiconductor, Inc.
+// All rights reserved.
+//
+// Unless otherwise stipulated in writing, any and all information contained
+// herein regardless in any format shall remain the sole proprietary of
+// MStar Semiconductor Inc. and be kept in strict confidence
+// (??MStar Confidential Information??) by the recipient.
+// Any unauthorized act including without limitation unauthorized disclosure,
+// copying, use, reproduction, sale, distribution, modification, disassembling,
+// reverse engineering and compiling of the contents of MStar Confidential
+// Information is unlawful and strictly prohibited. MStar hereby reserves the
+// rights to any and all damages, losses, costs and expenses resulting therefrom.
+//
+////////////////////////////////////////////////////////////////////////////////
+
+/**
+ *
+ * @file    mstar_drv_main.c
+ *
+ * @brief   This file defines the interface of touch screen
+ *
+ * @version v2.2.0.0
+ *
+ */
+
+/*=============================================================*/
+// INCLUDE FILE
+/*=============================================================*/
+
+#include "mstar_drv_main.h"
+#include "mstar_drv_utility_adaption.h"
+#include "mstar_drv_platform_porting_layer.h"
+#include "mstar_drv_ic_fw_porting_layer.h"
+
+/*=============================================================*/
+// CONSTANT VALUE DEFINITION
+/*=============================================================*/
+
+
+/*=============================================================*/
+// EXTERN VARIABLE DECLARATION
+/*=============================================================*/
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+extern FirmwareInfo_t g_FirmwareInfo;
+extern u8 *g_LogModePacket;
+extern u16 g_FirmwareMode;
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+extern u16 g_GestureWakeupMode;
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+
+extern u8 g_ChipType;
+
+/*=============================================================*/
+// LOCAL VARIABLE DEFINITION
+/*=============================================================*/
+
+static u16 _gDebugReg[MAX_DEBUG_REGISTER_NUM] = {0};
+static u32 _gDebugRegCount = 0;
+
+static u8 *_gPlatformFwVersion = NULL; // internal use firmware version for MStar
+
+#ifdef CONFIG_ENABLE_ITO_MP_TEST
+static ItoTestMode_e _gItoTestMode = 0;
+#endif //CONFIG_ENABLE_ITO_MP_TEST
+
+static u32 _gIsUpdateComplete = 0;
+
+static u8 *_gFwVersion = NULL; // customer firmware version
+
+static struct class *_gFirmwareClass = NULL;
+static struct device *_gFirmwareCmdDev = NULL;
+
+/*=============================================================*/
+// GLOBAL VARIABLE DEFINITION
+/*=============================================================*/
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+struct kset *g_TouchKSet = NULL;
+struct kobject *g_TouchKObj = NULL;
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+u8 g_FwData[94][1024];
+u32 g_FwDataCount = 0;
+
+/*=============================================================*/
+// LOCAL FUNCTION DEFINITION
+/*=============================================================*/
+
+
+/*=============================================================*/
+// GLOBAL FUNCTION DEFINITION
+/*=============================================================*/
+
+ssize_t DrvMainFirmwareChipTypeShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    return sprintf(pBuf, "%d", g_ChipType);
+}
+
+ssize_t DrvMainFirmwareChipTypeStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize)
+{
+    DBG("*** %s() ***\n", __func__);
+
+//    g_ChipType = DrvIcFwLyrGetChipType();
+
+    return nSize;
+}
+
+static DEVICE_ATTR(chip_type, SYSFS_AUTHORITY, DrvMainFirmwareChipTypeShow, DrvMainFirmwareChipTypeStore);
+
+ssize_t DrvMainFirmwareDriverVersionShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    return sprintf(pBuf, "%s", DEVICE_DRIVER_RELEASE_VERSION);
+}
+
+ssize_t DrvMainFirmwareDriverVersionStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    return nSize;
+}
+
+static DEVICE_ATTR(driver_version, SYSFS_AUTHORITY, DrvMainFirmwareDriverVersionShow, DrvMainFirmwareDriverVersionStore);
+
+/*--------------------------------------------------------------------------*/
+
+ssize_t DrvMainFirmwareUpdateShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf)
+{
+    DBG("*** %s() _gFwVersion = %s ***\n", __func__, _gFwVersion);
+
+    return sprintf(pBuf, "%s\n", _gFwVersion);
+}
+
+ssize_t DrvMainFirmwareUpdateStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize)
+{
+    DrvPlatformLyrDisableFingerTouchReport();
+
+    DBG("*** %s() g_FwDataCount = %d ***\n", __func__, g_FwDataCount);
+
+    if (0 != DrvIcFwLyrUpdateFirmware(g_FwData, EMEM_ALL))
+    {
+        _gIsUpdateComplete = 0;
+        DBG("Update FAILED\n");
+    }
+    else
+    {
+        _gIsUpdateComplete = 1;
+        DBG("Update SUCCESS\n");
+    }
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+    DrvIcFwLyrRestoreFirmwareModeToLogDataMode();    
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+    DrvPlatformLyrEnableFingerTouchReport();
+  
+    return nSize;
+}
+
+static DEVICE_ATTR(update, SYSFS_AUTHORITY, DrvMainFirmwareUpdateShow, DrvMainFirmwareUpdateStore);
+
+ssize_t DrvMainFirmwareVersionShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf)
+{
+    DBG("*** %s() _gFwVersion = %s ***\n", __func__, _gFwVersion);
+
+    return sprintf(pBuf, "%s\n", _gFwVersion);
+}
+
+ssize_t DrvMainFirmwareVersionStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize)
+{
+    u16 nMajor = 0, nMinor = 0;
+    
+    DrvIcFwLyrGetCustomerFirmwareVersion(&nMajor, &nMinor, &_gFwVersion);
+
+    DBG("*** %s() _gFwVersion = %s ***\n", __func__, _gFwVersion);
+
+    return nSize;
+}
+
+static DEVICE_ATTR(version, SYSFS_AUTHORITY, DrvMainFirmwareVersionShow, DrvMainFirmwareVersionStore);
+
+ssize_t DrvMainFirmwareDataShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf)
+{
+    DBG("*** %s() g_FwDataCount = %d ***\n", __func__, g_FwDataCount);
+    
+    return g_FwDataCount;
+}
+
+ssize_t DrvMainFirmwareDataStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize)
+{
+    u32 nCount = nSize / 1024;
+    u32 i;
+
+    DBG("*** %s() ***\n", __func__);
+
+    if (nCount > 0) // nSize >= 1024
+   	{
+        for (i = 0; i < nCount; i ++)
+        {
+            memcpy(g_FwData[g_FwDataCount], pBuf+(i*1024), 1024);
+
+            g_FwDataCount ++;
+        }
+    }
+    else // nSize < 1024
+    {
+    		if (nSize > 0)
+    		{
+            memcpy(g_FwData[g_FwDataCount], pBuf, nSize);
+
+            g_FwDataCount ++;
+    		}
+    }
+
+    DBG("*** g_FwDataCount = %d ***\n", g_FwDataCount);
+
+    if (pBuf != NULL)
+    {
+        DBG("*** buf[0] = %c ***\n", pBuf[0]);
+    }
+   
+    return nSize;
+}
+
+static DEVICE_ATTR(data, SYSFS_AUTHORITY, DrvMainFirmwareDataShow, DrvMainFirmwareDataStore);
+
+/*--------------------------------------------------------------------------*/
+
+#ifdef CONFIG_ENABLE_ITO_MP_TEST
+ssize_t DrvMainFirmwareTestShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf)
+{
+    DBG("*** %s() ***\n", __func__);
+    DBG("*** ctp mp test status = %d ***\n", DrvIcFwLyrGetMpTestResult());
+    
+    return sprintf(pBuf, "%d", DrvIcFwLyrGetMpTestResult());
+}
+
+ssize_t DrvMainFirmwareTestStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize)
+{
+    u32 nMode = 0;
+
+    DBG("*** %s() ***\n", __func__);
+    
+    if (pBuf != NULL)
+    {
+        sscanf(pBuf, "%x", &nMode);   
+
+        DBG("Mp Test Mode = 0x%x\n", nMode);
+
+        if (nMode == ITO_TEST_MODE_OPEN_TEST) //open test
+        {
+            _gItoTestMode = ITO_TEST_MODE_OPEN_TEST;
+            DrvIcFwLyrScheduleMpTestWork(ITO_TEST_MODE_OPEN_TEST);
+        }
+        else if (nMode == ITO_TEST_MODE_SHORT_TEST) //short test
+        {
+            _gItoTestMode = ITO_TEST_MODE_SHORT_TEST;
+            DrvIcFwLyrScheduleMpTestWork(ITO_TEST_MODE_SHORT_TEST);
+        }
+        else
+        {
+            DBG("*** Undefined MP Test Mode ***\n");
+        }
+    }
+
+    return nSize;
+}
+
+static DEVICE_ATTR(test, SYSFS_AUTHORITY, DrvMainFirmwareTestShow, DrvMainFirmwareTestStore);
+
+ssize_t DrvMainFirmwareTestLogShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf)
+{
+    u32 nLength = 0;
+    
+    DBG("*** %s() ***\n", __func__);
+    
+    DrvIcFwLyrGetMpTestDataLog(_gItoTestMode, pBuf, &nLength);
+    
+    return nLength;
+}
+
+ssize_t DrvMainFirmwareTestLogStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    return nSize;
+}
+
+static DEVICE_ATTR(test_log, SYSFS_AUTHORITY, DrvMainFirmwareTestLogShow, DrvMainFirmwareTestLogStore);
+
+ssize_t DrvMainFirmwareTestFailChannelShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf)
+{
+    u32 nCount = 0;
+
+    DBG("*** %s() ***\n", __func__);
+    
+    DrvIcFwLyrGetMpTestFailChannel(_gItoTestMode, pBuf, &nCount);
+    
+    return nCount;
+}
+
+ssize_t DrvMainFirmwareTestFailChannelStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    return nSize;
+}
+
+static DEVICE_ATTR(test_fail_channel, SYSFS_AUTHORITY, DrvMainFirmwareTestFailChannelShow, DrvMainFirmwareTestFailChannelStore);
+#endif //CONFIG_ENABLE_ITO_MP_TEST
+
+/*--------------------------------------------------------------------------*/
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+
+ssize_t DrvMainFirmwareGestureWakeupModeShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf)
+{
+    DBG("*** %s() ***\n", __func__);
+    DBG("g_GestureWakeupMode = 0x%x\n", g_GestureWakeupMode);
+
+    return sprintf(pBuf, "%x", g_GestureWakeupMode);
+}
+
+ssize_t DrvMainFirmwareGestureWakeupModeStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize)
+{
+    u32 nLength, nWakeupMode;
+    
+    DBG("*** %s() ***\n", __func__);
+
+    if (pBuf != NULL)
+    {
+        sscanf(pBuf, "%x", &nWakeupMode);   
+        DBG("nWakeupMode = 0x%x\n", nWakeupMode);
+
+        nLength = nSize;
+        DBG("nLength = %d\n", nLength);
+
+        if ((nWakeupMode & GESTURE_WAKEUP_MODE_DOUBLE_CLICK_FLAG) == GESTURE_WAKEUP_MODE_DOUBLE_CLICK_FLAG)
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode | GESTURE_WAKEUP_MODE_DOUBLE_CLICK_FLAG;
+        }
+        else
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode & (~GESTURE_WAKEUP_MODE_DOUBLE_CLICK_FLAG);
+        }
+        
+        if ((nWakeupMode & GESTURE_WAKEUP_MODE_UP_DIRECT_FLAG) == GESTURE_WAKEUP_MODE_UP_DIRECT_FLAG)
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode | GESTURE_WAKEUP_MODE_UP_DIRECT_FLAG;
+        }
+        else
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode & (~GESTURE_WAKEUP_MODE_UP_DIRECT_FLAG);
+        }
+
+        if ((nWakeupMode & GESTURE_WAKEUP_MODE_DOWN_DIRECT_FLAG) == GESTURE_WAKEUP_MODE_DOWN_DIRECT_FLAG)
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode | GESTURE_WAKEUP_MODE_DOWN_DIRECT_FLAG;
+        }
+        else
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode & (~GESTURE_WAKEUP_MODE_DOWN_DIRECT_FLAG);
+        }
+
+        if ((nWakeupMode & GESTURE_WAKEUP_MODE_LEFT_DIRECT_FLAG) == GESTURE_WAKEUP_MODE_LEFT_DIRECT_FLAG)
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode | GESTURE_WAKEUP_MODE_LEFT_DIRECT_FLAG;
+        }
+        else
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode & (~GESTURE_WAKEUP_MODE_LEFT_DIRECT_FLAG);
+        }
+
+        if ((nWakeupMode & GESTURE_WAKEUP_MODE_RIGHT_DIRECT_FLAG) == GESTURE_WAKEUP_MODE_RIGHT_DIRECT_FLAG)
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode | GESTURE_WAKEUP_MODE_RIGHT_DIRECT_FLAG;
+        }
+        else
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode & (~GESTURE_WAKEUP_MODE_RIGHT_DIRECT_FLAG);
+        }
+
+        if ((nWakeupMode & GESTURE_WAKEUP_MODE_m_CHARACTER_FLAG) == GESTURE_WAKEUP_MODE_m_CHARACTER_FLAG)
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode | GESTURE_WAKEUP_MODE_m_CHARACTER_FLAG;
+        }
+        else
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode & (~GESTURE_WAKEUP_MODE_m_CHARACTER_FLAG);
+        }
+
+        if ((nWakeupMode & GESTURE_WAKEUP_MODE_W_CHARACTER_FLAG) == GESTURE_WAKEUP_MODE_W_CHARACTER_FLAG)
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode | GESTURE_WAKEUP_MODE_W_CHARACTER_FLAG;
+        }
+        else
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode & (~GESTURE_WAKEUP_MODE_W_CHARACTER_FLAG);
+        }
+
+        if ((nWakeupMode & GESTURE_WAKEUP_MODE_C_CHARACTER_FLAG) == GESTURE_WAKEUP_MODE_C_CHARACTER_FLAG)
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode | GESTURE_WAKEUP_MODE_C_CHARACTER_FLAG;
+        }
+        else
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode & (~GESTURE_WAKEUP_MODE_C_CHARACTER_FLAG);
+        }
+       
+        if ((nWakeupMode & GESTURE_WAKEUP_MODE_e_CHARACTER_FLAG) == GESTURE_WAKEUP_MODE_e_CHARACTER_FLAG)
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode | GESTURE_WAKEUP_MODE_e_CHARACTER_FLAG;
+        }
+        else
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode & (~GESTURE_WAKEUP_MODE_e_CHARACTER_FLAG);
+        }
+
+        if ((nWakeupMode & GESTURE_WAKEUP_MODE_V_CHARACTER_FLAG) == GESTURE_WAKEUP_MODE_V_CHARACTER_FLAG)
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode | GESTURE_WAKEUP_MODE_V_CHARACTER_FLAG;
+        }
+        else
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode & (~GESTURE_WAKEUP_MODE_V_CHARACTER_FLAG);
+        }
+
+        if ((nWakeupMode & GESTURE_WAKEUP_MODE_O_CHARACTER_FLAG) == GESTURE_WAKEUP_MODE_O_CHARACTER_FLAG)
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode | GESTURE_WAKEUP_MODE_O_CHARACTER_FLAG;
+        }
+        else
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode & (~GESTURE_WAKEUP_MODE_O_CHARACTER_FLAG);
+        }
+
+        if ((nWakeupMode & GESTURE_WAKEUP_MODE_S_CHARACTER_FLAG) == GESTURE_WAKEUP_MODE_S_CHARACTER_FLAG)
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode | GESTURE_WAKEUP_MODE_S_CHARACTER_FLAG;
+        }
+        else
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode & (~GESTURE_WAKEUP_MODE_S_CHARACTER_FLAG);
+        }
+
+        if ((nWakeupMode & GESTURE_WAKEUP_MODE_Z_CHARACTER_FLAG) == GESTURE_WAKEUP_MODE_Z_CHARACTER_FLAG)
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode | GESTURE_WAKEUP_MODE_Z_CHARACTER_FLAG;
+        }
+        else
+        {
+            g_GestureWakeupMode = g_GestureWakeupMode & (~GESTURE_WAKEUP_MODE_Z_CHARACTER_FLAG);
+        }
+
+        DBG("g_GestureWakeupMode = 0x%x\n", g_GestureWakeupMode);
+    }
+        
+    return nSize;
+}
+
+static DEVICE_ATTR(gesture_wakeup_mode, SYSFS_AUTHORITY, DrvMainFirmwareGestureWakeupModeShow, DrvMainFirmwareGestureWakeupModeStore);
+
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+
+/*--------------------------------------------------------------------------*/
+
+ssize_t DrvMainFirmwareDebugShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf)
+{
+    u32 i;
+    u8 nBank, nAddr;
+    u16 szRegData[MAX_DEBUG_REGISTER_NUM] = {0};
+    u8 szOut[MAX_DEBUG_REGISTER_NUM*25] = {0}, szValue[10] = {0};
+
+    DBG("*** %s() ***\n", __func__);
+    
+    DbBusEnterSerialDebugMode();
+    DbBusStopMCU();
+    DbBusIICUseBus();
+    DbBusIICReshape();
+    //mdelay(300);
+    msleep(300);
+    
+    for (i = 0; i < _gDebugRegCount; i ++)
+    {
+        szRegData[i] = RegGet16BitValue(_gDebugReg[i]);
+    }
+
+    DbBusIICNotUseBus();
+    DbBusNotStopMCU();
+    DbBusExitSerialDebugMode();
+
+    for (i = 0; i < _gDebugRegCount; i ++)
+    {
+    	  nBank = (_gDebugReg[i] >> 8) & 0xFF;
+    	  nAddr = _gDebugReg[i] & 0xFF;
+    	  
+        DBG("reg(0x%X,0x%X)=0x%04X\n", nBank, nAddr, szRegData[i]);
+
+        strcat(szOut, "reg(");
+        sprintf(szValue, "0x%X", nBank);
+        strcat(szOut, szValue);
+        strcat(szOut, ",");
+        sprintf(szValue, "0x%X", nAddr);
+        strcat(szOut, szValue);
+        strcat(szOut, ")=");
+        sprintf(szValue, "0x%04X", szRegData[i]);
+        strcat(szOut, szValue);
+        strcat(szOut, "\n");
+    }
+
+    return sprintf(pBuf, "%s\n", szOut);
+}
+
+ssize_t DrvMainFirmwareDebugStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize)
+{
+    u32 i;
+    char *pCh;
+
+    DBG("*** %s() ***\n", __func__);
+
+    if (pBuf != NULL)
+    {
+        DBG("*** %s() pBuf[0] = %c ***\n", __func__, pBuf[0]);
+        DBG("*** %s() pBuf[1] = %c ***\n", __func__, pBuf[1]);
+        DBG("*** %s() pBuf[2] = %c ***\n", __func__, pBuf[2]);
+        DBG("*** %s() pBuf[3] = %c ***\n", __func__, pBuf[3]);
+        DBG("*** %s() pBuf[4] = %c ***\n", __func__, pBuf[4]);
+        DBG("*** %s() pBuf[5] = %c ***\n", __func__, pBuf[5]);
+
+        DBG("nSize = %d\n", nSize);
+       
+        i = 0;
+        while ((pCh = strsep((char **)&pBuf, " ,")) && (i < MAX_DEBUG_REGISTER_NUM))
+        {
+            DBG("pCh = %s\n", pCh);
+            
+            _gDebugReg[i] = DrvCommonConvertCharToHexDigit(pCh, strlen(pCh));
+
+            DBG("_gDebugReg[%d] = 0x%04X\n", i, _gDebugReg[i]);
+            i ++;
+        }
+        _gDebugRegCount = i;
+        
+        DBG("_gDebugRegCount = %d\n", _gDebugRegCount);
+    }
+
+    return nSize;
+}
+
+static DEVICE_ATTR(debug, SYSFS_AUTHORITY, DrvMainFirmwareDebugShow, DrvMainFirmwareDebugStore);
+
+/*--------------------------------------------------------------------------*/
+
+ssize_t DrvMainFirmwarePlatformVersionShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf)
+{
+    DBG("*** %s() _gPlatformFwVersion = %s ***\n", __func__, _gPlatformFwVersion);
+
+    return sprintf(pBuf, "%s\n", _gPlatformFwVersion);
+}
+
+ssize_t DrvMainFirmwarePlatformVersionStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize)
+{
+    DrvIcFwLyrGetPlatformFirmwareVersion(&_gPlatformFwVersion);
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+    DrvIcFwLyrRestoreFirmwareModeToLogDataMode();    
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+    DBG("*** %s() _gPlatformFwVersion = %s ***\n", __func__, _gPlatformFwVersion);
+
+    return nSize;
+}
+
+static DEVICE_ATTR(platform_version, SYSFS_AUTHORITY, DrvMainFirmwarePlatformVersionShow, DrvMainFirmwarePlatformVersionStore);
+
+/*--------------------------------------------------------------------------*/
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+ssize_t DrvMainFirmwareModeShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf)
+{
+#if defined(CONFIG_ENABLE_CHIP_MSG26XXM)
+    g_FirmwareMode = DrvIcFwLyrGetFirmwareMode();
+    
+    DBG("%s() firmware mode = 0x%x\n", __func__, g_FirmwareMode);
+
+    return sprintf(pBuf, "%x", g_FirmwareMode);
+#elif defined(CONFIG_ENABLE_CHIP_MSG21XXA) || defined(CONFIG_ENABLE_CHIP_MSG22XX)
+    DrvIcFwLyrGetFirmwareInfo(&g_FirmwareInfo);
+    g_FirmwareMode = g_FirmwareInfo.nFirmwareMode;
+
+    DBG("%s() firmware mode = 0x%x, can change firmware mode = %d\n", __func__, g_FirmwareInfo.nFirmwareMode, g_FirmwareInfo.nIsCanChangeFirmwareMode);
+
+    return sprintf(pBuf, "%x,%d", g_FirmwareInfo.nFirmwareMode, g_FirmwareInfo.nIsCanChangeFirmwareMode);
+#endif
+}
+
+ssize_t DrvMainFirmwareModeStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    u32 nMode;
+    
+    if (pBuf != NULL)
+    {
+        sscanf(pBuf, "%x", &nMode);   
+        DBG("firmware mode = 0x%x\n", nMode);
+
+        if (nMode == FIRMWARE_MODE_DEMO_MODE) //demo mode
+        {
+            g_FirmwareMode = DrvIcFwLyrChangeFirmwareMode(FIRMWARE_MODE_DEMO_MODE);
+        }
+        else if (nMode == FIRMWARE_MODE_DEBUG_MODE) //debug mode
+        {
+            g_FirmwareMode = DrvIcFwLyrChangeFirmwareMode(FIRMWARE_MODE_DEBUG_MODE);
+        }
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA) || defined(CONFIG_ENABLE_CHIP_MSG22XX)
+        else if (nMode == FIRMWARE_MODE_RAW_DATA_MODE) //raw data mode
+        {
+            g_FirmwareMode = DrvIcFwLyrChangeFirmwareMode(FIRMWARE_MODE_RAW_DATA_MODE);
+        }
+#endif
+        else
+        {
+            DBG("*** Undefined Firmware Mode ***\n");
+        }
+    }
+
+    DBG("*** g_FirmwareMode = 0x%x ***\n", g_FirmwareMode);
+
+    return nSize;
+}
+
+static DEVICE_ATTR(mode, SYSFS_AUTHORITY, DrvMainFirmwareModeShow, DrvMainFirmwareModeStore);
+/*
+ssize_t DrvMainFirmwarePacketShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf)
+{
+    u32 i = 0;
+    u32 nLength = 0;
+    
+    DBG("*** %s() ***\n", __func__);
+    
+    if (g_LogModePacket != NULL)
+    {
+        DBG("g_FirmwareMode=%x, g_LogModePacket[0]=%x, g_LogModePacket[1]=%x\n", g_FirmwareMode, g_LogModePacket[0], g_LogModePacket[1]);
+        DBG("g_LogModePacket[2]=%x, g_LogModePacket[3]=%x\n", g_LogModePacket[2], g_LogModePacket[3]);
+        DBG("g_LogModePacket[4]=%x, g_LogModePacket[5]=%x\n", g_LogModePacket[4], g_LogModePacket[5]);
+
+#if defined(CONFIG_ENABLE_CHIP_MSG26XXM)
+        if ((g_FirmwareMode == FIRMWARE_MODE_DEBUG_MODE) && (g_LogModePacket[0] == 0xA5 || g_LogModePacket[0] == 0xAB || g_LogModePacket[0] == 0xA7))
+#elif defined(CONFIG_ENABLE_CHIP_MSG21XXA) || defined(CONFIG_ENABLE_CHIP_MSG22XX)
+        if ((g_FirmwareMode == FIRMWARE_MODE_DEBUG_MODE || g_FirmwareMode == FIRMWARE_MODE_RAW_DATA_MODE) && (g_LogModePacket[0] == 0x62))
+#endif
+        {
+            for (i = 0; i < g_FirmwareInfo.nLogModePacketLength; i ++)
+            {
+                pBuf[i] = g_LogModePacket[i];
+            }
+
+            nLength = g_FirmwareInfo.nLogModePacketLength;
+            DBG("nLength = %d\n", nLength);
+        }
+        else
+        {
+            DBG("CURRENT MODE IS NOT DEBUG MODE/WRONG DEBUG MODE HEADER\n");
+//        nLength = 0;
+        }
+    }
+    else
+    {
+        DBG("g_LogModePacket is NULL\n");
+//        nLength = 0;
+    }
+
+    return nLength;
+}
+
+ssize_t DrvMainFirmwarePacketStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    return nSize;
+}
+
+static DEVICE_ATTR(packet, SYSFS_AUTHORITY, DrvMainFirmwarePacketShow, DrvMainFirmwarePacketStore);
+*/
+ssize_t DrvMainFirmwareSensorShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf)
+{
+    DBG("*** %s() ***\n", __func__);
+
+#if defined(CONFIG_ENABLE_CHIP_MSG26XXM)
+    if (g_FirmwareInfo.nLogModePacketHeader == 0xA5 || g_FirmwareInfo.nLogModePacketHeader == 0xAB)
+    {
+        return sprintf(pBuf, "%d,%d", g_FirmwareInfo.nMx, g_FirmwareInfo.nMy);
+    }
+    else if (g_FirmwareInfo.nLogModePacketHeader == 0xA7)
+    {
+        return sprintf(pBuf, "%d,%d,%d,%d", g_FirmwareInfo.nMx, g_FirmwareInfo.nMy, g_FirmwareInfo.nSs, g_FirmwareInfo.nSd);
+    }
+    else
+    {
+        DBG("Undefined debug mode packet format : 0x%x\n", g_FirmwareInfo.nLogModePacketHeader);
+        return 0;
+    }
+#elif defined(CONFIG_ENABLE_CHIP_MSG21XXA) || defined(CONFIG_ENABLE_CHIP_MSG22XX)
+    return sprintf(pBuf, "%d", g_FirmwareInfo.nLogModePacketLength);
+#endif
+}
+
+ssize_t DrvMainFirmwareSensorStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize)
+{
+    DBG("*** %s() ***\n", __func__);
+/*
+    DrvIcFwLyrGetFirmwareInfo(&g_FirmwareInfo);
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA) || defined(CONFIG_ENABLE_CHIP_MSG22XX)
+    g_FirmwareMode = g_FirmwareInfo.nFirmwareMode;
+#endif 
+*/    
+    return nSize;
+}
+
+static DEVICE_ATTR(sensor, SYSFS_AUTHORITY, DrvMainFirmwareSensorShow, DrvMainFirmwareSensorStore);
+
+ssize_t DrvMainFirmwareHeaderShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    return sprintf(pBuf, "%d", g_FirmwareInfo.nLogModePacketHeader);
+}
+
+ssize_t DrvMainFirmwareHeaderStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize)
+{
+    DBG("*** %s() ***\n", __func__);
+/*
+    DrvIcFwLyrGetFirmwareInfo(&g_FirmwareInfo);
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA) || defined(CONFIG_ENABLE_CHIP_MSG22XX)
+    g_FirmwareMode = g_FirmwareInfo.nFirmwareMode;
+#endif
+*/    
+    return nSize;
+}
+
+static DEVICE_ATTR(header, SYSFS_AUTHORITY, DrvMainFirmwareHeaderShow, DrvMainFirmwareHeaderStore);
+
+//------------------------------------------------------------------------------//
+
+ssize_t DrvMainKObjectPacketShow(struct kobject *pKObj, struct kobj_attribute *pAttr, char *pBuf)
+{
+    u32 i = 0;
+    u32 nLength = 0;
+
+    DBG("*** %s() ***\n", __func__);
+
+    if (strcmp(pAttr->attr.name, "packet") == 0)
+    {
+        if (g_LogModePacket != NULL)
+        {
+            DBG("g_FirmwareMode=%x, g_LogModePacket[0]=%x, g_LogModePacket[1]=%x\n", g_FirmwareMode, g_LogModePacket[0], g_LogModePacket[1]);
+            DBG("g_LogModePacket[2]=%x, g_LogModePacket[3]=%x\n", g_LogModePacket[2], g_LogModePacket[3]);
+            DBG("g_LogModePacket[4]=%x, g_LogModePacket[5]=%x\n", g_LogModePacket[4], g_LogModePacket[5]);
+
+#if defined(CONFIG_ENABLE_CHIP_MSG26XXM)
+            if ((g_FirmwareMode == FIRMWARE_MODE_DEBUG_MODE) && (g_LogModePacket[0] == 0xA5 || g_LogModePacket[0] == 0xAB || g_LogModePacket[0] == 0xA7))
+#elif defined(CONFIG_ENABLE_CHIP_MSG21XXA) || defined(CONFIG_ENABLE_CHIP_MSG22XX)
+            if ((g_FirmwareMode == FIRMWARE_MODE_DEBUG_MODE || g_FirmwareMode == FIRMWARE_MODE_RAW_DATA_MODE) && (g_LogModePacket[0] == 0x62))
+#endif
+            {
+                for (i = 0; i < g_FirmwareInfo.nLogModePacketLength; i ++)
+                {
+                    pBuf[i] = g_LogModePacket[i];
+                }
+
+                nLength = g_FirmwareInfo.nLogModePacketLength;
+                DBG("nLength = %d\n", nLength);
+            }
+            else
+            {
+                DBG("CURRENT MODE IS NOT DEBUG MODE/WRONG DEBUG MODE HEADER\n");
+//            nLength = 0;
+            }
+        }
+        else
+        {
+            DBG("g_LogModePacket is NULL\n");
+//            nLength = 0;
+        }
+    }
+    else
+    {
+        DBG("pAttr->attr.name = %s \n", pAttr->attr.name);
+//        nLength = 0;
+    }
+
+    return nLength;
+}
+
+ssize_t DrvMainKObjectPacketStore(struct kobject *pKObj, struct kobj_attribute *pAttr, const char *pBuf, size_t nCount)
+{
+    DBG("*** %s() ***\n", __func__);
+/*
+    if (strcmp(pAttr->attr.name, "packet") == 0)
+    {
+
+    }
+*/    	
+    return nCount;
+}
+
+static struct kobj_attribute packet_attr = __ATTR(packet, 0666, DrvMainKObjectPacketShow, DrvMainKObjectPacketStore);
+
+/* Create a group of attributes so that we can create and destroy them all at once. */
+static struct attribute *attrs[] = {
+    &packet_attr.attr,
+    NULL,	/* need to NULL terminate the list of attributes */
+};
+
+/*
+ * An unnamed attribute group will put all of the attributes directly in
+ * the kobject directory. If we specify a name, a subdirectory will be
+ * created for the attributes with the directory being the name of the
+ * attribute group.
+ */
+struct attribute_group attr_group = {
+    .attrs = attrs,
+};
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+//------------------------------------------------------------------------------//
+
+s32 DrvMainTouchDeviceInitialize(void)
+{
+    s32 nRetVal = 0;
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+    u8 *pDevicePath = NULL;
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+    DBG("*** %s() ***\n", __func__);
+
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+    /* set sysfs for firmware */
+    _gFirmwareClass = class_create(THIS_MODULE, "ms-touchscreen-msg20xx");
+    if (IS_ERR(_gFirmwareClass))
+        DBG("Failed to create class(firmware)!\n");
+
+    _gFirmwareCmdDev = device_create(_gFirmwareClass, NULL, 0, NULL, "device");
+    if (IS_ERR(_gFirmwareCmdDev))
+        DBG("Failed to create device(_gFirmwareCmdDev)!\n");
+
+    // version
+    if (device_create_file(_gFirmwareCmdDev, &dev_attr_version) < 0)
+        DBG("Failed to create device file(%s)!\n", dev_attr_version.attr.name);
+    // update
+    if (device_create_file(_gFirmwareCmdDev, &dev_attr_update) < 0)
+        DBG("Failed to create device file(%s)!\n", dev_attr_update.attr.name);
+    // data
+    if (device_create_file(_gFirmwareCmdDev, &dev_attr_data) < 0)
+        DBG("Failed to create device file(%s)!\n", dev_attr_data.attr.name);
+#ifdef CONFIG_ENABLE_ITO_MP_TEST
+    // test
+    if (device_create_file(_gFirmwareCmdDev, &dev_attr_test) < 0)
+        pr_err("Failed to create device file(%s)!\n", dev_attr_test.attr.name);
+    // test_log
+    if (device_create_file(_gFirmwareCmdDev, &dev_attr_test_log) < 0)
+        pr_err("Failed to create device file(%s)!\n", dev_attr_test_log.attr.name);
+    // test_fail_channel
+    if (device_create_file(_gFirmwareCmdDev, &dev_attr_test_fail_channel) < 0)
+        pr_err("Failed to create device file(%s)!\n", dev_attr_test_fail_channel.attr.name);
+#endif //CONFIG_ENABLE_ITO_MP_TEST
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+    // mode
+    if (device_create_file(_gFirmwareCmdDev, &dev_attr_mode) < 0)
+        DBG("Failed to create device file(%s)!\n", dev_attr_mode.attr.name);
+    // packet
+//    if (device_create_file(_gFirmwareCmdDev, &dev_attr_packet) < 0)
+//        DBG("Failed to create device file(%s)!\n", dev_attr_packet.attr.name);
+    // sensor
+    if (device_create_file(_gFirmwareCmdDev, &dev_attr_sensor) < 0)
+        DBG("Failed to create device file(%s)!\n", dev_attr_sensor.attr.name);
+    // header
+    if (device_create_file(_gFirmwareCmdDev, &dev_attr_header) < 0)
+        DBG("Failed to create device file(%s)!\n", dev_attr_header.attr.name);
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+    // debug
+    if (device_create_file(_gFirmwareCmdDev, &dev_attr_debug) < 0)
+        DBG("Failed to create device file(%s)!\n", dev_attr_debug.attr.name);
+    // platform version
+    if (device_create_file(_gFirmwareCmdDev, &dev_attr_platform_version) < 0)
+        DBG("Failed to create device file(%s)!\n", dev_attr_platform_version.attr.name);
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+    // gesture wakeup mode
+    if (device_create_file(_gFirmwareCmdDev, &dev_attr_gesture_wakeup_mode) < 0)
+        DBG("Failed to create device file(%s)!\n", dev_attr_gesture_wakeup_mode.attr.name);
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+    // chip type
+    if (device_create_file(_gFirmwareCmdDev, &dev_attr_chip_type) < 0)
+        DBG("Failed to create device file(%s)!\n", dev_attr_chip_type.attr.name);
+    // driver version
+    if (device_create_file(_gFirmwareCmdDev, &dev_attr_driver_version) < 0)
+        DBG("Failed to create device file(%s)!\n", dev_attr_driver_version.attr.name);
+
+    dev_set_drvdata(_gFirmwareCmdDev, NULL);
+#endif /*CONFIG_UPDATE_FIRMWARE_BY_SW_ID*/
+
+#ifdef CONFIG_ENABLE_ITO_MP_TEST
+    DrvIcFwLyrCreateMpTestWorkQueue();
+#endif //CONFIG_ENABLE_ITO_MP_TEST
+    
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+    /* create a kset with the name of "kset_example" which is located under /sys/kernel/ */
+    g_TouchKSet = kset_create_and_add("kset_example", NULL, kernel_kobj);
+    if (!g_TouchKSet)
+    {
+        DBG("*** kset_create_and_add() failed, nRetVal = %d ***\n", nRetVal);
+
+        nRetVal = -ENOMEM;
+    }
+
+    g_TouchKObj = kobject_create();
+    if (!g_TouchKObj)
+    {
+        DBG("*** kobject_create() failed, nRetVal = %d ***\n", nRetVal);
+
+        nRetVal = -ENOMEM;
+		    kset_unregister(g_TouchKSet);
+		    g_TouchKSet = NULL;
+    }
+
+    g_TouchKObj->kset = g_TouchKSet;
+
+    nRetVal = kobject_add(g_TouchKObj, NULL, "%s", "kobject_example");
+    if (nRetVal != 0)
+    {
+        DBG("*** kobject_add() failed, nRetVal = %d ***\n", nRetVal);
+
+		    kobject_put(g_TouchKObj);
+		    g_TouchKObj = NULL;
+		    kset_unregister(g_TouchKSet);
+		    g_TouchKSet = NULL;
+    }
+    
+    /* create the files associated with this kobject */
+    nRetVal = sysfs_create_group(g_TouchKObj, &attr_group);
+    if (nRetVal != 0)
+    {
+        DBG("*** sysfs_create_file() failed, nRetVal = %d ***\n", nRetVal);
+
+        kobject_put(g_TouchKObj);
+		    g_TouchKObj = NULL;
+		    kset_unregister(g_TouchKSet);
+		    g_TouchKSet = NULL;
+    }
+    
+    pDevicePath = kobject_get_path(g_TouchKObj, GFP_KERNEL);
+    DBG("DEVPATH = %s\n", pDevicePath);
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+    g_ChipType = DrvIcFwLyrGetChipType();
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+#if defined(CONFIG_ENABLE_CHIP_MSG26XXM)
+    // get firmware mode for parsing packet judgement.
+    g_FirmwareMode = DrvIcFwLyrGetFirmwareMode();
+#endif //CONFIG_ENABLE_CHIP_MSG26XXM
+
+    memset(&g_FirmwareInfo, 0x0, sizeof(FirmwareInfo_t));
+
+    DrvIcFwLyrGetFirmwareInfo(&g_FirmwareInfo);
+
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA) || defined(CONFIG_ENABLE_CHIP_MSG22XX)
+    g_FirmwareMode = g_FirmwareInfo.nFirmwareMode;
+#endif
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+    DrvIcFwLyrCheckFirmwareUpdateBySwId();
+#endif //CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+
+    return nRetVal;
+}
+
+//------------------------------------------------------------------------------//
Index: kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_self_mp_test.c
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_self_mp_test.c	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_self_mp_test.c	(revision 182225)
@@ -0,0 +1,2528 @@
+////////////////////////////////////////////////////////////////////////////////
+//
+// Copyright (c) 2006-2012 MStar Semiconductor, Inc.
+// All rights reserved.
+//
+// Unless otherwise stipulated in writing, any and all information contained
+// herein regardless in any format shall remain the sole proprietary of
+// MStar Semiconductor Inc. and be kept in strict confidence
+// (??MStar Confidential Information??) by the recipient.
+// Any unauthorized act including without limitation unauthorized disclosure,
+// copying, use, reproduction, sale, distribution, modification, disassembling,
+// reverse engineering and compiling of the contents of MStar Confidential
+// Information is unlawful and strictly prohibited. MStar hereby reserves the
+// rights to any and all damages, losses, costs and expenses resulting therefrom.
+//
+////////////////////////////////////////////////////////////////////////////////
+
+/**
+ *
+ * @file    mstar_drv_self_mp_test.c
+ *
+ * @brief   This file defines the interface of touch screen
+ *
+ * @version v2.2.0.0
+ *
+ */
+
+/*=============================================================*/
+// INCLUDE FILE
+/*=============================================================*/
+
+#include "mstar_drv_self_mp_test.h"
+#include "mstar_drv_utility_adaption.h"
+#include "mstar_drv_self_fw_control.h"
+#include "mstar_drv_platform_porting_layer.h"
+
+#ifdef CONFIG_ENABLE_ITO_MP_TEST
+
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+// Modify.
+#include "open_test_ANA1_X.h"
+#include "open_test_ANA2_X.h"
+#include "open_test_ANA1_B_X.h"
+#include "open_test_ANA2_B_X.h"
+#include "open_test_ANA3_X.h"
+
+#include "open_test_ANA1_Y.h"
+#include "open_test_ANA2_Y.h"
+#include "open_test_ANA1_B_Y.h"
+#include "open_test_ANA2_B_Y.h"
+#include "open_test_ANA3_Y.h"
+
+// Modify.
+#include "short_test_ANA1_X.h"
+#include "short_test_ANA2_X.h"
+#include "short_test_ANA3_X.h"
+#include "short_test_ANA4_X.h"
+
+#include "short_test_ANA1_Y.h"
+#include "short_test_ANA2_Y.h"
+#include "short_test_ANA3_Y.h"
+#include "short_test_ANA4_Y.h"
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+// Modify.
+#include "open_test_RIU1_X.h"
+#include "open_test_RIU2_X.h"
+#include "open_test_RIU3_X.h"
+
+#include "open_test_RIU1_Y.h"
+#include "open_test_RIU2_Y.h"
+#include "open_test_RIU3_Y.h"
+
+// Modify.
+#include "short_test_RIU1_X.h"
+#include "short_test_RIU2_X.h"
+#include "short_test_RIU3_X.h"
+#include "short_test_RIU4_X.h"
+
+#include "short_test_RIU1_Y.h"
+#include "short_test_RIU2_Y.h"
+#include "short_test_RIU3_Y.h"
+#include "short_test_RIU4_Y.h"
+#endif
+
+/*=============================================================*/
+// PREPROCESSOR CONSTANT DEFINITION
+/*=============================================================*/
+
+// Modify.
+#define TP_OF_X    (1) //(2)
+#define TP_OF_Y    (4)
+
+/*=============================================================*/
+// EXTERN VARIABLE DECLARATION
+/*=============================================================*/
+
+extern struct i2c_client *g_I2cClient;
+
+/*=============================================================*/
+// LOCAL VARIABLE DEFINITION
+/*=============================================================*/
+
+static u32 _gIsInMpTest = 0;
+static u32 _gTestRetryCount = CTP_MP_TEST_RETRY_COUNT;
+static ItoTestMode_e _gItoTestMode = 0;
+
+static s32 _gCtpMpTestStatus = ITO_TEST_UNDER_TESTING;
+static u8 _gTestFailChannel[MAX_CHANNEL_NUM] = {0};
+static u32 _gTestFailChannelCount = 0;
+
+static struct work_struct _gCtpItoTestWork;
+static struct workqueue_struct *_gCtpMpTestWorkQueue = NULL;
+
+static s16 _gRawData1[MAX_CHANNEL_NUM] = {0};
+static s16 _gRawData2[MAX_CHANNEL_NUM] = {0};
+static s16 _gRawData3[MAX_CHANNEL_NUM] = {0};
+static s16 _gRawData4[MAX_CHANNEL_NUM] = {0};
+static s8 _gDataFlag1[MAX_CHANNEL_NUM] = {0};
+static s8 _gDataFlag2[MAX_CHANNEL_NUM] = {0};
+static s8 _gDataFlag3[MAX_CHANNEL_NUM] = {0};
+static s8 _gDataFlag4[MAX_CHANNEL_NUM] = {0};
+
+static u8 _gItoTestKeyNum = 0;
+static u8 _gItoTestDummyNum = 0;
+static u8 _gItoTestTriangleNum = 0;
+static u8 _gIsEnable2R = 0;
+
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+
+static u8 _gLTP = 1;	
+
+// _gOpen1~_gOpen3 are for MSG21XXA
+static u16 *_gOpen1 = NULL;
+static u16 *_gOpen1B = NULL;
+static u16 *_gOpen2 = NULL;
+static u16 *_gOpen2B = NULL;
+static u16 *_gOpen3 = NULL;
+
+// _gShort_1~_gShort_4 are for MSG21XXA
+static u16 *_gShort_1 = NULL;
+static u16 *_gShort_2 = NULL;
+static u16 *_gShort_3 = NULL;
+static u16 *_gShort_4 = NULL;
+
+// _gShort_1_GPO~_gShort_4_GPO are for MSG21XXA
+static u16 *_gShort_1_GPO = NULL;
+static u16 *_gShort_2_GPO = NULL;
+static u16 *_gShort_3_GPO = NULL;
+static u16 *_gShort_4_GPO = NULL;
+
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+
+// _gOpenRIU1~_gOpenRIU3 are for MSG22XX
+static u32 *_gOpenRIU1 = NULL;
+static u32 *_gOpenRIU2 = NULL;
+static u32 *_gOpenRIU3 = NULL;
+
+// _gShort_RIU1~_gShort_RIU4 are for MSG22XX
+static u32 *_gShort_RIU1 = NULL;
+static u32 *_gShort_RIU2 = NULL;
+static u32 *_gShort_RIU3 = NULL;
+static u32 *_gShort_RIU4 = NULL;
+
+// _gOpenSubFrameNum1~_gShortSubFrameNum4 are for MSG22XX
+static u8 _gOpenSubFrameNum1 = 0;
+static u8 _gOpenSubFrameNum2 = 0;
+static u8 _gOpenSubFrameNum3 = 0;
+static u8 _gShortSubFrameNum1 = 0;
+static u8 _gShortSubFrameNum2 = 0;
+static u8 _gShortSubFrameNum3 = 0;
+static u8 _gShortSubFrameNum4 = 0;
+
+#endif
+
+static u8 *_gMAP1 = NULL;
+static u8 *_gMAP2 = NULL;
+static u8 *_gMAP3 = NULL;
+static u8 *_gMAP40_1 = NULL;
+static u8 *_gMAP40_2 = NULL;
+static u8 *_gMAP40_3 = NULL;
+static u8 *_gMAP40_4 = NULL;
+static u8 *_gMAP41_1 = NULL;
+static u8 *_gMAP41_2 = NULL;
+static u8 *_gMAP41_3 = NULL;
+static u8 *_gMAP41_4 = NULL;
+
+static u8 *_gSHORT_MAP1 = NULL;
+static u8 *_gSHORT_MAP2 = NULL;
+static u8 *_gSHORT_MAP3 = NULL;
+static u8 *_gSHORT_MAP4 = NULL;
+
+//static struct proc_dir_entry *_gMsgItoTest = NULL;
+//static struct proc_dir_entry *_gDebug = NULL;
+ItoTestResult_e _gItoTestResult = ITO_TEST_OK;
+ 
+/*=============================================================*/
+// EXTERN FUNCTION DECLARATION
+/*=============================================================*/
+
+
+/*=============================================================*/
+// LOCAL FUNCTION DEFINITION
+/*=============================================================*/
+
+static u16 _DrvMpTestItoTestGetTpType(void)
+{
+    u16 nMajor = 0, nMinor = 0;
+
+    DBG("*** %s() ***\n", __func__);
+        
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+    {
+        u8 szDbBusTxData[3] = {0};
+        u8 szDbBusRxData[4] = {0};
+
+        szDbBusTxData[0] = 0x53;
+        szDbBusTxData[1] = 0x00;
+        szDbBusTxData[2] = 0x2A;
+
+        IicWriteData(SLAVE_I2C_ID_DWI2C, &szDbBusTxData[0], 3);
+        IicReadData(SLAVE_I2C_ID_DWI2C, &szDbBusRxData[0], 4);
+
+        nMajor = (szDbBusRxData[1]<<8) + szDbBusRxData[0];
+        nMinor = (szDbBusRxData[3]<<8) + szDbBusRxData[2];
+    }
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+    {
+        u16 nRegData1, nRegData2;
+
+        DrvPlatformLyrTouchDeviceResetHw();
+    
+        DbBusEnterSerialDebugMode();
+        DbBusStopMCU();
+        DbBusIICUseBus();
+        DbBusIICReshape();
+//        mdelay(100);
+	msleep(100);
+        
+        // Stop mcu
+        RegSetLByteValue(0x0FE6, 0x01); 
+
+        // Stop watchdog
+        RegSet16BitValue(0x3C60, 0xAA55);
+
+        // RIU password
+        RegSet16BitValue(0x161A, 0xABBA); 
+
+        // Clear pce
+        RegSet16BitValue(0x1618, (RegGet16BitValue(0x1618) | 0x80));
+
+        RegSet16BitValue(0x1600, 0xBFF4); // Set start address for customer firmware version on main block
+    
+        // Enable burst mode
+//        RegSet16BitValue(0x160C, (RegGet16BitValue(0x160C) | 0x01));
+
+        // Set pce
+        RegSet16BitValue(0x1618, (RegGet16BitValue(0x1618) | 0x40)); 
+    
+        RegSetLByteValue(0x160E, 0x01); 
+
+        nRegData1 = RegGet16BitValue(0x1604);
+        nRegData2 = RegGet16BitValue(0x1606);
+
+        nMajor = (((nRegData1 >> 8) & 0xFF) << 8) + (nRegData1 & 0xFF);
+        nMinor = (((nRegData2 >> 8) & 0xFF) << 8) + (nRegData2 & 0xFF);
+
+        // Clear burst mode
+//        RegSet16BitValue(0x160C, RegGet16BitValue(0x160C) & (~0x01));      
+
+        RegSet16BitValue(0x1600, 0x0000); 
+
+        // Clear RIU password
+        RegSet16BitValue(0x161A, 0x0000); 
+
+        DbBusIICNotUseBus();
+        DbBusNotStopMCU();
+        DbBusExitSerialDebugMode();
+
+        DrvPlatformLyrTouchDeviceResetHw();
+//        mdelay(100);
+	msleep(100);
+    }
+#endif    
+
+    DBG("*** major = %d ***\n", nMajor);
+    DBG("*** minor = %d ***\n", nMinor);
+    
+    return nMajor;
+}
+
+static u16 _DrvMpTestItoTestChooseTpType(void)
+{
+    u16 nTpType = 0;
+    u32 i = 0;
+    
+    DBG("*** %s() ***\n", __func__);
+
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+    // _gOpen1~_gOpen3 are for MSG21XXA
+    _gOpen1 = NULL;
+    _gOpen1B = NULL;
+    _gOpen2 = NULL;
+    _gOpen2B = NULL;
+    _gOpen3 = NULL;
+
+    // _gShort_1~_gShort_4 are for MSG21XXA
+    _gShort_1 = NULL;
+    _gShort_2 = NULL;
+    _gShort_3 = NULL;
+    _gShort_4 = NULL;
+
+    _gShort_1_GPO = NULL;
+    _gShort_2_GPO = NULL;
+    _gShort_3_GPO = NULL;
+    _gShort_4_GPO = NULL;
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+    // _gOpenRIU1~_gOpenRIU3 are for MSG22XX
+    _gOpenRIU1 = NULL;
+    _gOpenRIU2 = NULL;
+    _gOpenRIU3 = NULL;
+
+    // _gShort_RIU1~_gShort_RIU4 are for MSG22XX
+    _gShort_RIU1 = NULL;
+    _gShort_RIU2 = NULL;
+    _gShort_RIU3 = NULL;
+    _gShort_RIU4 = NULL;
+
+    _gOpenSubFrameNum1 = 0;
+    _gOpenSubFrameNum2 = 0;
+    _gOpenSubFrameNum3 = 0;
+    _gShortSubFrameNum1 = 0;
+    _gShortSubFrameNum2 = 0;
+    _gShortSubFrameNum3 = 0;
+    _gShortSubFrameNum4 = 0;
+#endif
+
+    _gMAP1 = NULL;
+    _gMAP2 = NULL;
+    _gMAP3 = NULL;
+    _gMAP40_1 = NULL;
+    _gMAP40_2 = NULL;
+    _gMAP40_3 = NULL;
+    _gMAP40_4 = NULL;
+    _gMAP41_1 = NULL;
+    _gMAP41_2 = NULL;
+    _gMAP41_3 = NULL;
+    _gMAP41_4 = NULL;
+    
+    _gSHORT_MAP1 = NULL;
+    _gSHORT_MAP2 = NULL;
+    _gSHORT_MAP3 = NULL;
+    _gSHORT_MAP4 = NULL;
+    
+    _gItoTestKeyNum = 0;
+    _gItoTestDummyNum = 0;
+    _gItoTestTriangleNum = 0;
+    _gIsEnable2R = 0;
+
+    for (i = 0; i < 10; i ++)
+    {
+        nTpType = _DrvMpTestItoTestGetTpType();
+        DBG("nTpType = %d, i = %d\n", nTpType, i);
+
+        if (TP_OF_X == nTpType || TP_OF_Y == nTpType) // Modify.
+        {
+            break;
+        }
+        else if (i < 5)
+        {
+//            mdelay(100);  
+	      msleep(100);
+        }
+        else
+        {
+            DrvPlatformLyrTouchDeviceResetHw();
+        }
+    }
+    
+    if (TP_OF_X == nTpType) // Modify. 
+    {
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+        _gOpen1 = open_1_X;
+        _gOpen1B = open_1B_X;
+        _gOpen2 = open_2_X;
+        _gOpen2B = open_2B_X;
+        _gOpen3 = open_3_X;
+
+        _gShort_1 = short_1_X;
+        _gShort_2 = short_2_X;
+        _gShort_3 = short_3_X;
+        _gShort_4 = short_4_X;
+
+        _gShort_1_GPO = short_1_X_GPO;
+        _gShort_2_GPO = short_2_X_GPO;
+        _gShort_3_GPO = short_3_X_GPO;
+        _gShort_4_GPO = short_4_X_GPO;
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+        _gOpenRIU1 = open_1_X;
+        _gOpenRIU2 = open_2_X;
+        _gOpenRIU3 = open_3_X;
+
+        _gShort_RIU1 = short_1_X;
+        _gShort_RIU2 = short_2_X;
+        _gShort_RIU3 = short_3_X;
+        _gShort_RIU4 = short_4_X;
+
+        _gOpenSubFrameNum1 = NUM_OPEN_1_SENSOR_X;
+        _gOpenSubFrameNum2 = NUM_OPEN_2_SENSOR_X;
+        _gOpenSubFrameNum3 = NUM_OPEN_3_SENSOR_X;
+        _gShortSubFrameNum1 = NUM_SHORT_1_SENSOR_X;
+        _gShortSubFrameNum2 = NUM_SHORT_2_SENSOR_X;
+        _gShortSubFrameNum3 = NUM_SHORT_3_SENSOR_X;
+        _gShortSubFrameNum4 = NUM_SHORT_4_SENSOR_X;
+#endif
+
+        _gMAP1 = MAP1_X;
+        _gMAP2 = MAP2_X;
+        _gMAP3 = MAP3_X;
+        _gMAP40_1 = MAP40_1_X;
+        _gMAP40_2 = MAP40_2_X;
+        _gMAP40_3 = MAP40_3_X;
+        _gMAP40_4 = MAP40_4_X;
+        _gMAP41_1 = MAP41_1_X;
+        _gMAP41_2 = MAP41_2_X;
+        _gMAP41_3 = MAP41_3_X;
+        _gMAP41_4 = MAP41_4_X;
+
+        _gSHORT_MAP1 = SHORT_MAP1_X;
+        _gSHORT_MAP2 = SHORT_MAP2_X;
+        _gSHORT_MAP3 = SHORT_MAP3_X;
+        _gSHORT_MAP4 = SHORT_MAP4_X;
+        
+        _gItoTestKeyNum = NUM_KEY_X;
+        _gItoTestDummyNum = NUM_DUMMY_X;
+        _gItoTestTriangleNum = NUM_SENSOR_X;
+        _gIsEnable2R = ENABLE_2R_X;
+    }
+    else if (TP_OF_Y == nTpType) // Modify. 
+    {
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+        _gOpen1 = open_1_Y;
+        _gOpen1B = open_1B_Y;
+        _gOpen2 = open_2_Y;
+        _gOpen2B = open_2B_Y;
+        _gOpen3 = open_3_Y;
+
+        _gShort_1 = short_1_Y;
+        _gShort_2 = short_2_Y;
+        _gShort_3 = short_3_Y;
+        _gShort_4 = short_4_Y;
+
+        _gShort_1_GPO = short_1_Y_GPO;
+        _gShort_2_GPO = short_2_Y_GPO;
+        _gShort_3_GPO = short_3_Y_GPO;
+        _gShort_4_GPO = short_4_Y_GPO;
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+        _gOpenRIU1 = open_1_Y;
+        _gOpenRIU2 = open_2_Y;
+        _gOpenRIU3 = open_3_Y;
+
+        _gShort_RIU1 = short_1_Y;
+        _gShort_RIU2 = short_2_Y;
+        _gShort_RIU3 = short_3_Y;
+        _gShort_RIU4 = short_4_Y;
+
+        _gOpenSubFrameNum1 = NUM_OPEN_1_SENSOR_Y;
+        _gOpenSubFrameNum2 = NUM_OPEN_2_SENSOR_Y;
+        _gOpenSubFrameNum3 = NUM_OPEN_3_SENSOR_Y;
+        _gShortSubFrameNum1 = NUM_SHORT_1_SENSOR_Y;
+        _gShortSubFrameNum2 = NUM_SHORT_2_SENSOR_Y;
+        _gShortSubFrameNum3 = NUM_SHORT_3_SENSOR_Y;
+        _gShortSubFrameNum4 = NUM_SHORT_4_SENSOR_Y;
+#endif
+
+        _gMAP1 = MAP1_Y;
+        _gMAP2 = MAP2_Y;
+        _gMAP3 = MAP3_Y;
+        _gMAP40_1 = MAP40_1_Y;
+        _gMAP40_2 = MAP40_2_Y;
+        _gMAP40_3 = MAP40_3_Y;
+        _gMAP40_4 = MAP40_4_Y;
+        _gMAP41_1 = MAP41_1_Y;
+        _gMAP41_2 = MAP41_2_Y;
+        _gMAP41_3 = MAP41_3_Y;
+        _gMAP41_4 = MAP41_4_Y;
+
+        _gSHORT_MAP1 = SHORT_MAP1_Y;
+        _gSHORT_MAP2 = SHORT_MAP2_Y;
+        _gSHORT_MAP3 = SHORT_MAP3_Y;
+        _gSHORT_MAP4 = SHORT_MAP4_Y;
+        
+        _gItoTestKeyNum = NUM_KEY_Y;
+        _gItoTestDummyNum = NUM_DUMMY_Y;
+        _gItoTestTriangleNum = NUM_SENSOR_Y;
+        _gIsEnable2R = ENABLE_2R_Y;
+    }
+    else
+    {
+        nTpType = 0;
+    }
+    
+    return nTpType;
+}
+
+static void _DrvMpTestItoTestSwReset(void)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    RegSet16BitValue(0x1100, 0xFFFF); //bank:ana, addr:h0000
+    RegSet16BitValue(0x1100, 0x0000);
+//    mdelay(50); // mdelay(15)
+    msleep(50);
+}
+
+//------------------------------------------------------------------------------//
+
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+
+static u16 _DrvMpTestItoTestGetNum(void)
+{
+    u32 i;
+    u16 nSensorNum = 0;
+    u16 nRegVal1, nRegVal2;
+ 
+    DBG("*** %s() ***\n", __func__);
+
+    nRegVal1 = RegGet16BitValue(0x114A); //bank:ana, addr:h0025  
+    DBG("nRegValue1 = %d\n", nRegVal1);
+    
+    if ((nRegVal1 & BIT1) == BIT1)
+    {
+        nRegVal1 = RegGet16BitValue(0x120A); //bank:ana2, addr:h0005  			
+        nRegVal1 = nRegVal1 & 0x0F;
+    	
+        nRegVal2 = RegGet16BitValue(0x1216); //bank:ana2, addr:h000b    		
+        nRegVal2 = ((nRegVal2 >> 1) & 0x0F) + 1;
+    	
+        nSensorNum = nRegVal1 * nRegVal2;
+    }
+    else
+    {
+        for (i = 0; i < 4; i ++)
+        {
+            nSensorNum += (RegGet16BitValue(0x120A)>>(4*i))&0x0F; //bank:ana2, addr:h0005  
+        }
+    }
+    DBG("nSensorNum = %d\n", nSensorNum);
+
+    return nSensorNum;        
+}
+
+static void _DrvMpTestItoTestDisableFilterNoiseDetect(void)
+{
+    u16 nRegValue;
+
+    DBG("*** %s() ***\n", __func__);
+     
+    // Disable DIG/ANA drop
+    nRegValue = RegGet16BitValue(0x1302); 
+      
+    RegSet16BitValue(0x1302, nRegValue & (~(BIT2 | BIT1 | BIT0)));      
+}
+
+static void _DrvMpTestItoTestPolling(void)
+{
+    u16 nRegInt = 0x0000;
+    u16 nRegVal;
+
+    DBG("*** %s() ***\n", __func__);
+
+    RegSet16BitValue(0x130C, BIT15); //bank:fir, addr:h0006         
+    RegSet16BitValue(0x1214, (RegGet16BitValue(0x1214) | BIT0)); //bank:ana2, addr:h000a        
+            
+    DBG("polling start\n");
+
+    do
+    {
+        nRegInt = RegGet16BitValue(0x3D18); //bank:intr_ctrl, addr:h000c
+    } while(( nRegInt & FIQ_E_FRAME_READY_MASK ) == 0x0000);
+
+    DBG("polling end\n");
+    
+    nRegVal = RegGet16BitValue(0x3D18); 
+    RegSet16BitValue(0x3D18, nRegVal & (~FIQ_E_FRAME_READY_MASK));      
+}
+
+static void _DrvMpTestItoOpenTestSetV(u8 nEnable, u8 nPrs)	
+{
+    u16 nRegVal;        
+    
+    DBG("*** %s() nEnable = %d, nPrs = %d ***\n", __func__, nEnable, nPrs);
+    
+    nRegVal = RegGet16BitValue(0x1208); //bank:ana2, addr:h0004
+    nRegVal = nRegVal & 0xF1; 							
+    
+    if (nPrs == 0)
+    {
+        RegSet16BitValue(0x1208, nRegVal|0x0C); 		
+    }
+    else if (nPrs == 1)
+    {
+        RegSet16BitValue(0x1208, nRegVal|0x0E); 		     	
+    }
+    else
+    {
+        RegSet16BitValue(0x1208, nRegVal|0x02); 			
+    }    
+    
+    if (nEnable)
+    {
+        nRegVal = RegGet16BitValue(0x1106); //bank:ana, addr:h0003  
+        RegSet16BitValue(0x1106, nRegVal|0x03);   	
+    }
+    else
+    {
+        nRegVal = RegGet16BitValue(0x1106);    
+        nRegVal = nRegVal & 0xFC;					
+        RegSet16BitValue(0x1106, nRegVal);         
+    }
+}
+
+static u16 _DrvMpTestItoTestMsg21xxaGetDataOut(s16 *pRawData)
+{
+    u32 i;
+    u16 szRawData[MAX_CHANNEL_NUM] = {0};
+    u16 nSensorNum;
+    u16 nRegInt;
+    u8  szDbBusTxData[8] = {0};
+    u8  szDbBusRxData[MAX_CHANNEL_NUM*2] = {0};
+
+    DBG("*** %s() ***\n", __func__);
+
+    nSensorNum = _DrvMpTestItoTestGetNum();
+    
+    if ((nSensorNum*2) > (MAX_CHANNEL_NUM*2))
+    {
+        DBG("Danger. nSensorNum = %d\n", nSensorNum);
+        return nSensorNum;
+    }
+
+    nRegInt = RegGet16BitValue((0x3d<<8) | (REG_INTR_FIQ_MASK<<1)); 
+    RegSet16BitValue((0x3d<<8) | (REG_INTR_FIQ_MASK<<1), (nRegInt & (u16)(~FIQ_E_FRAME_READY_MASK))); 
+    
+    _DrvMpTestItoTestPolling();
+    
+    szDbBusTxData[0] = 0x10;
+    szDbBusTxData[1] = 0x13; //bank:fir, addr:h0020 
+    szDbBusTxData[2] = 0x40;
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 3);
+//    mdelay(20);
+    msleep(20);
+    IicReadData(SLAVE_I2C_ID_DBBUS, &szDbBusRxData[0], (nSensorNum * 2));
+//    mdelay(100);
+    msleep(100);
+    
+    for (i = 0; i < nSensorNum * 2; i ++)
+    {
+        DBG("szDbBusRxData[%d] = %d\n", i, szDbBusRxData[i]);
+    }
+ 
+    nRegInt = RegGet16BitValue((0x3d<<8) | (REG_INTR_FIQ_MASK<<1)); 
+    RegSet16BitValue((0x3d<<8) | (REG_INTR_FIQ_MASK<<1), (nRegInt | (u16)FIQ_E_FRAME_READY_MASK)); 
+
+    for (i = 0; i < nSensorNum; i ++)
+    {
+        szRawData[i] = (szDbBusRxData[2 * i + 1] << 8 ) | (szDbBusRxData[2 * i]);
+        pRawData[i] = (s16)szRawData[i];
+    }
+    
+    return nSensorNum;
+}
+
+static void _DrvMpTestItoTestMsg21xxaSendDataIn(u8 nStep)
+{
+    u32	i;
+    u16 *pType = NULL;        
+    u8 	szDbBusTxData[512] = {0};
+
+    DBG("*** %s() nStep = %d ***\n", __func__, nStep);
+
+    if (nStep == 0) //39-4 (2R)
+    {
+        pType = &_gShort_4[0];
+    }
+    else if (nStep == 1) //39-1
+    {
+        pType = &_gShort_1[0];      	
+    }
+    else if (nStep == 2) //39-2
+    {
+        pType = &_gShort_2[0];      	
+    }
+    else if (nStep == 3) //39-3
+    {
+        pType = &_gShort_3[0];        
+    }
+    else if (nStep == 4)
+    {
+        pType = &_gOpen1[0];        
+    }
+    else if (nStep == 5)
+    {
+        pType = &_gOpen2[0];      	
+    }
+    else if (nStep == 6)
+    {
+        pType = &_gOpen3[0];      	
+    }
+    else if (nStep == 9)
+    {
+        pType = &_gOpen1B[0];        
+    }
+    else if (nStep == 10)
+    {
+        pType = &_gOpen2B[0];      	
+    } 
+     
+    szDbBusTxData[0] = 0x10;
+    szDbBusTxData[1] = 0x11; //bank:ana, addr:h0000
+    szDbBusTxData[2] = 0x00;    
+    for (i = 0; i <= 0x3E ; i ++)
+    {
+        szDbBusTxData[3+2*i] = pType[i] & 0xFF;
+        szDbBusTxData[4+2*i] = (pType[i] >> 8) & 0xFF;    	
+    }
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 3+0x3F*2);
+
+    szDbBusTxData[2] = 0x7A * 2; //bank:ana, addr:h007a
+    for (i = 0x7A; i <= 0x7D ; i ++)
+    {
+        szDbBusTxData[3+2*(i-0x7A)] = 0;
+        szDbBusTxData[4+2*(i-0x7A)] = 0;    	    	
+    }
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 3+8);
+    
+    szDbBusTxData[0] = 0x10;
+    szDbBusTxData[1] = 0x12; //bank:ana2, addr:h0005
+      
+    szDbBusTxData[2] = 0x05 * 2; 
+    szDbBusTxData[3] = pType[128+0x05] & 0xFF;
+    szDbBusTxData[4] = (pType[128+0x05] >> 8) & 0xFF;
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 5);
+    
+    szDbBusTxData[2] = 0x0B * 2; //bank:ana2, addr:h000b
+    szDbBusTxData[3] = pType[128+0x0B] & 0xFF;
+    szDbBusTxData[4] = (pType[128+0x0B] >> 8) & 0xFF;
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 5);
+    
+    szDbBusTxData[2] = 0x12 * 2; //bank:ana2, addr:h0012
+    szDbBusTxData[3] = pType[128+0x12] & 0xFF;
+    szDbBusTxData[4] = (pType[128+0x12] >> 8) & 0xFF;
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 5);
+    
+    szDbBusTxData[2] = 0x15 * 2; //bank:ana2, addr:h0015
+    szDbBusTxData[3] = pType[128+0x15] & 0xFF;
+    szDbBusTxData[4] = (pType[128+0x15] >> 8) & 0xFF;
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 5);
+/*
+//#if 1 //for AC mod --showlo
+    szDbBusTxData[1] = 0x13;
+    szDbBusTxData[2] = 0x12 * 2;
+    szDbBusTxData[3] = 0x30;
+    szDbBusTxData[4] = 0x30;
+    IicWriteData(SLAVE_I2C_ID_DBBUS, szDbBusTxData, 5);        
+        
+    szDbBusTxData[2] = 0x14 * 2;
+    szDbBusTxData[3] = 0X30;
+    szDbBusTxData[4] = 0X30;
+    IicWriteData(SLAVE_I2C_ID_DBBUS, szDbBusTxData, 5);     
+        
+    szDbBusTxData[1] = 0x12;
+    for (i = 0x0D; i <= 0x10; i ++) //for AC noise(++)
+    {
+	      szDbBusTxData[2] = i * 2;
+	      szDbBusTxData[3] = pType[128+i] & 0xFF;
+	      szDbBusTxData[4] = (pType[128+i] >> 8) & 0xFF;
+	      IicWriteData(SLAVE_I2C_ID_DBBUS, szDbBusTxData, 5);  
+    }
+
+    for (i = 0x16; i <= 0x18; i ++) //for AC noise
+    {
+	      szDbBusTxData[2] = i * 2;
+	      szDbBusTxData[3] = pType[128+i] & 0xFF;
+	      szDbBusTxData[4] = (pType[128+i] >> 8) & 0xFF;
+	      IicWriteData(SLAVE_I2C_ID_DBBUS, szDbBusTxData, 5);  
+    }
+//#endif
+*/
+}
+
+static void _DrvMpTestItoOpenTestMsg21xxaSetC(u8 nCSubStep)
+{
+    u32 i;
+    u8 szDbBusTxData[MAX_CHANNEL_NUM+3];
+    u8 nHighLevelCSub = false;
+    u8 nCSubNew;
+     
+    DBG("*** %s() nCSubStep = %d ***\n", __func__, nCSubStep);
+
+    szDbBusTxData[0] = 0x10;
+    szDbBusTxData[1] = 0x11; //bank:ana, addr:h0042       
+    szDbBusTxData[2] = 0x84;        
+    
+    for (i = 0; i < MAX_CHANNEL_NUM; i ++)
+    {
+        nCSubNew = nCSubStep;        
+        nHighLevelCSub = false;   
+        
+        if (nCSubNew > 0x1F)
+        {
+            nCSubNew = nCSubNew - 0x14;
+            nHighLevelCSub = true;
+        }
+           
+        szDbBusTxData[3+i] = nCSubNew & 0x1F;        
+        if (nHighLevelCSub == true)
+        {
+            szDbBusTxData[3+i] |= BIT5;
+        }
+    }
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], MAX_CHANNEL_NUM+3);
+
+    szDbBusTxData[2] = 0xB4; //bank:ana, addr:h005a        
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], MAX_CHANNEL_NUM+3);
+}
+
+static void _DrvMpTestItoOpenTestMsg21xxaFirst(u8 nItemId, s16 *pRawData, s8 *pDataFlag)		
+{
+    u32 i, j;
+    s16 szTmpRawData[MAX_CHANNEL_NUM] = {0};
+    u16	nRegVal;
+    u8  nLoop;
+    u8  nSensorNum1 = 0, nSensorNum2 = 0, nTotalSensor = 0;
+    u8 	*pMapping = NULL;
+    
+//    nSensorNum1 = 0;
+//    nSensorNum2 = 0;	
+
+    DBG("*** %s() nItemId = %d ***\n", __func__, nItemId);
+	
+    // Stop cpu
+    RegSet16BitValue(0x0FE6, 0x0001); //bank:mheg5, addr:h0073
+
+    RegSet16BitValue(0x1E24, 0x0500); //bank:chip, addr:h0012
+    RegSet16BitValue(0x1E2A, 0x0000); //bank:chip, addr:h0015
+    RegSet16BitValue(0x1EE6, 0x6E00); //bank:chip, addr:h0073
+    RegSet16BitValue(0x1EE8, 0x0071); //bank:chip, addr:h0074
+	    
+    if (nItemId == 40)    			
+    {
+        pMapping = &_gMAP1[0];
+        if (_gIsEnable2R)
+        {
+            nTotalSensor = _gItoTestTriangleNum/2; 
+        }
+        else
+        {
+            nTotalSensor = _gItoTestTriangleNum/2 + _gItoTestKeyNum + _gItoTestDummyNum;
+        }
+    }
+    else if (nItemId == 41)    		
+    {
+        pMapping = &_gMAP2[0];
+        if (_gIsEnable2R)
+        {
+            nTotalSensor = _gItoTestTriangleNum/2; 
+        }
+        else
+        {
+            nTotalSensor = _gItoTestTriangleNum/2 + _gItoTestKeyNum + _gItoTestDummyNum;
+        }
+    }
+    else if (nItemId == 42)    		
+    {
+        pMapping = &_gMAP3[0];      
+        nTotalSensor = _gItoTestTriangleNum + _gItoTestKeyNum + _gItoTestDummyNum; 
+    }
+        	    
+    nLoop = 1;
+    if (nItemId != 42)
+    {
+        if (nTotalSensor > 11)
+        {
+            nLoop = 2;
+        }
+    }	
+    
+    DBG("nLoop = %d\n", nLoop);
+	
+    for (i = 0; i < nLoop; i ++)
+    {
+        if (i == 0)
+        {
+            _DrvMpTestItoTestMsg21xxaSendDataIn(nItemId - 36);
+        }
+        else
+        { 
+            if (nItemId == 40)
+            { 
+                _DrvMpTestItoTestMsg21xxaSendDataIn(9);
+            }
+            else
+            { 		
+                _DrvMpTestItoTestMsg21xxaSendDataIn(10);
+            }
+        }
+	
+        _DrvMpTestItoTestDisableFilterNoiseDetect();
+	
+        _DrvMpTestItoOpenTestSetV(1, 0);    
+        nRegVal = RegGet16BitValue(0x110E); //bank:ana, addr:h0007   			
+        RegSet16BitValue(0x110E, nRegVal | BIT11);				 		
+	
+        if (_gLTP == 1)
+        {
+            _DrvMpTestItoOpenTestMsg21xxaSetC(32);
+        }	    	
+        else
+        {	    	
+	    	_DrvMpTestItoOpenTestMsg21xxaSetC(0);
+        }
+        
+        _DrvMpTestItoTestSwReset();
+		
+        if (i == 0)	 
+        {      
+            nSensorNum1 = _DrvMpTestItoTestMsg21xxaGetDataOut(szTmpRawData);
+            DBG("nSensorNum1 = %d\n", nSensorNum1);
+        }
+        else	
+        {      
+            nSensorNum2 = _DrvMpTestItoTestMsg21xxaGetDataOut(&szTmpRawData[nSensorNum1]);
+            DBG("nSensorNum1 = %d, nSensorNum2 = %d\n", nSensorNum1, nSensorNum2);
+        }
+    }
+    
+    for (j = 0; j < nTotalSensor; j ++)
+    {
+        if (_gLTP == 1)
+        {
+            pRawData[pMapping[j]] = szTmpRawData[j] + 4096;
+            pDataFlag[pMapping[j]] = 1;
+        }
+        else
+        {
+            pRawData[pMapping[j]] = szTmpRawData[j];	
+            pDataFlag[pMapping[j]] = 1;
+        }
+    }	
+}
+
+static void _DrvMpTestItoShortTestChangeGPOSetting(u8 nItemId)
+{
+    u8 szDbBusTxData[3+GPO_SETTING_SIZE*2] = {0};
+    u16 szGPOSetting[3] = {0};
+    u32 i;
+    
+    DBG("*** %s() nItemId = %d ***\n", __func__, nItemId);
+    
+    if (nItemId == 0) // 39-4
+    {
+        szGPOSetting[0] = _gShort_4_GPO[0];		
+        szGPOSetting[1] = _gShort_4_GPO[1];		
+        szGPOSetting[2] = _gShort_4_GPO[2];		
+        szGPOSetting[2] |= (1 << (int)(PIN_GUARD_RING % 16));
+    }
+    else if (nItemId == 1) // 39-1
+    {
+        szGPOSetting[0] = _gShort_1_GPO[0];		
+        szGPOSetting[1] = _gShort_1_GPO[1];		
+        szGPOSetting[2] = _gShort_1_GPO[2];		
+        szGPOSetting[2] |= (1 << (int)(PIN_GUARD_RING % 16));
+    }
+    else if (nItemId == 2) // 39-2
+    {
+        szGPOSetting[0] = _gShort_2_GPO[0];		
+        szGPOSetting[1] = _gShort_2_GPO[1];		
+        szGPOSetting[2] = _gShort_2_GPO[2];		
+        szGPOSetting[2] |= (1 << (int)(PIN_GUARD_RING % 16));
+    }
+    else if (nItemId == 3) // 39-3
+    {
+        szGPOSetting[0] = _gShort_3_GPO[0];		
+        szGPOSetting[1] = _gShort_3_GPO[1];		
+        szGPOSetting[2] = _gShort_3_GPO[2];		
+        szGPOSetting[2] |= (1 << (int)(PIN_GUARD_RING % 16));
+    }
+    else
+    {
+        DBG("Invalid item id for changing GPIO setting of short test.\n");
+
+        return;
+    }
+
+    szDbBusTxData[0] = 0x10;
+    szDbBusTxData[1] = 0x12;
+    szDbBusTxData[2] = 0x48;
+
+    for (i = 0; i < GPO_SETTING_SIZE; i ++)
+    {
+        szDbBusTxData[3+2*i] = szGPOSetting[i] & 0xFF;
+        szDbBusTxData[4+2*i] = (szGPOSetting[i] >> 8) & 0xFF;    	
+    }
+
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 3+GPO_SETTING_SIZE*2);    
+}
+
+static void _DrvMpTestItoShortTestChangeRmodeSetting(u8 nMode)
+{
+    u8 szDbBusTxData[6] = {0};
+
+    DBG("*** %s() nMode = %d ***\n", __func__, nMode);
+
+    // AFE R-mode enable(Bit-12)
+    RegSetLByteValue(0x1103, 0x10);
+
+    // drv_mux_OV (Bit-8 1:enable)
+    RegSetLByteValue(0x1107, 0x55);
+    
+    if (nMode == 1) // P_CODE: 0V
+    {
+        RegSet16BitValue(0x110E, 0x073A);
+    }
+    else if (nMode == 0) // N_CODE: 2.4V
+    {
+        RegSet16BitValue(0x110E, 0x073B);
+    }
+
+    // SW2 rising & SW3 rising return to 0
+    RegSetLByteValue(0x1227, 0x01);
+    // turn off the chopping
+    RegSetLByteValue(0x1208, 0x0C);
+    // idle driver ov
+    RegSetLByteValue(0x1241, 0xC0);
+	  
+	  // AFE ov
+    szDbBusTxData[0] = 0x10;
+    szDbBusTxData[1] = 0x12;
+    szDbBusTxData[2] = 0x44;
+    szDbBusTxData[3] = 0xFF;
+    szDbBusTxData[4] = 0xFF;
+    szDbBusTxData[5] = 0xFF;
+
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 6);        
+}	
+
+static void _DrvMpTestItoShortTestMsg21xxaFirst(u8 nItemId, s16 *pRawData, s8 *pDataFlag)		
+{
+    u32 i;
+    s16 szTmpRawData[MAX_CHANNEL_NUM] = {0};
+    s16 szTmpRawData2[MAX_CHANNEL_NUM] = {0};
+    u8  nSensorNum, nSensorNum2, nNumOfSensorMapping1, nNumOfSensorMapping2, nSensorCount = 0;
+    u8 	*pMapping = NULL;
+    
+    DBG("*** %s() nItemId = %d ***\n", __func__, nItemId);
+
+    // Stop cpu
+    RegSet16BitValue(0x0FE6, 0x0001); //bank:mheg5, addr:h0073
+    // chip top op0
+    RegSet16BitValue(0x1E24, 0x0500); //bank:chip, addr:h0012
+    RegSet16BitValue(0x1E2A, 0x0000); //bank:chip, addr:h0015
+    RegSet16BitValue(0x1EE6, 0x6E00); //bank:chip, addr:h0073
+    RegSet16BitValue(0x1EE8, 0x0071); //bank:chip, addr:h0074
+	    
+    if ((_gItoTestTriangleNum + _gItoTestKeyNum + _gItoTestDummyNum) % 2 != 0)
+    {
+        nNumOfSensorMapping1 = (_gItoTestTriangleNum + _gItoTestKeyNum + _gItoTestDummyNum) / 2 + 1;
+        nNumOfSensorMapping2 = nNumOfSensorMapping1;
+    }
+    else
+    {
+        nNumOfSensorMapping1 = (_gItoTestTriangleNum + _gItoTestKeyNum + _gItoTestDummyNum) / 2;
+        nNumOfSensorMapping2 = nNumOfSensorMapping1;
+        if (nNumOfSensorMapping2 % 2 != 0)
+        {	
+            nNumOfSensorMapping2 ++;
+        }
+    }        
+
+    if (nItemId == 0) // 39-4 (2R)    			
+    {
+        pMapping = &_gSHORT_MAP4[0];
+        nSensorCount = _gItoTestTriangleNum/2; 
+    }
+    else if (nItemId == 1) // 39-1    			    		
+    {
+        pMapping = &_gSHORT_MAP1[0];
+        nSensorCount = nNumOfSensorMapping1; 
+    }
+    else if (nItemId == 2) // 39-2   		
+    {
+        pMapping = &_gSHORT_MAP2[0];      
+        nSensorCount = nNumOfSensorMapping2; 
+    }
+    else if (nItemId == 3) // 39-3    		
+    {
+        pMapping = &_gSHORT_MAP3[0];      
+        nSensorCount = _gItoTestTriangleNum; 
+    }
+    DBG("nSensorCount = %d\n", nSensorCount);
+        	    
+    _DrvMpTestItoTestMsg21xxaSendDataIn(nItemId);
+    
+    _DrvMpTestItoTestDisableFilterNoiseDetect();
+
+    _DrvMpTestItoShortTestChangeRmodeSetting(1);
+    _DrvMpTestItoShortTestChangeGPOSetting(nItemId);
+    _DrvMpTestItoTestSwReset();
+    nSensorNum = _DrvMpTestItoTestMsg21xxaGetDataOut(szTmpRawData);
+    DBG("nSensorNum = %d\n", nSensorNum);
+
+    _DrvMpTestItoShortTestChangeRmodeSetting(0);
+    _DrvMpTestItoShortTestChangeGPOSetting(nItemId);
+    _DrvMpTestItoTestSwReset();
+    nSensorNum2 = _DrvMpTestItoTestMsg21xxaGetDataOut(szTmpRawData2);
+    DBG("nSensorNum2 = %d\n", nSensorNum2);
+    
+    for (i = 0; i < nSensorCount; i ++)
+    {
+        pRawData[pMapping[i]] = szTmpRawData[i] - szTmpRawData2[i];	
+        pDataFlag[pMapping[i]] = 1;
+    }	
+}
+
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+
+static u16 _DrvMpTestItoTestMsg22xxGetDataOut(s16 *pRawData, u16 nSubFrameNum)
+{
+    u32 i;
+    u16 szRawData[MAX_CHANNEL_NUM*2] = {0};
+    u16 nRegInt = 0x0000;
+    u16 nSize = nSubFrameNum * 4;
+    u8  szDbBusTxData[8] = {0};
+    u8  szDbBusRxData[MAX_CHANNEL_NUM*4] = {0};
+
+    DBG("*** %s() ***\n", __func__);
+
+    RegSet16BitValueOff(0x120A, BIT1); //one-shot mode
+    RegSet16BitValueOff(0x3D08, BIT8); //FIQ_E_FRAME_READY_MASK
+    //RegSet16BitValueOn(0x130C, BIT15); //MCU read done
+    RegSet16BitValueOn(0x120A, BIT0); //trigger one-shot 
+
+    DBG("polling start\n");
+
+    do
+    {
+        nRegInt = RegGet16BitValue(0x3D18); //bank:intr_ctrl, addr:h000c
+    } while(( nRegInt & FIQ_E_FRAME_READY_MASK ) == 0x0000);
+
+    DBG("polling end\n");
+
+    RegSet16BitValueOff(0x3D18, BIT8); //Clear frame-ready interrupt status
+
+    //ReadRegBurst start   
+    szDbBusTxData[0] = 0x10;
+    szDbBusTxData[1] = 0x15; //bank:fir, addr:h0000 
+    szDbBusTxData[2] = 0x00;
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 3);
+//    mdelay(20);
+    msleep(20);
+//    IicReadData(SLAVE_I2C_ID_DBBUS, &szDbBusRxData[0], (MAX_CHANNEL_NUM * 4));
+    IicReadData(SLAVE_I2C_ID_DBBUS, &szDbBusRxData[0], (nSubFrameNum * 4 * 2));
+//    mdelay(100);
+    msleep(100);
+
+//    for (i = 0; i < (MAX_CHANNEL_NUM * 4); i ++)
+    for (i = 0; i < (nSubFrameNum * 4 * 2); i ++)
+    {
+        DBG("szDbBusRxData[%d] = %d\n", i, szDbBusRxData[i]);
+    }
+    //ReadRegBurst stop
+ 
+    RegSet16BitValueOn(0x3D08, BIT8); //FIQ_E_FRAME_READY_MASK
+
+//    for (i = 0; i < (MAX_CHANNEL_NUM * 2); i ++)
+    for (i = 0; i < nSize; i ++)
+    {
+        szRawData[i] = (szDbBusRxData[2 * i + 1] << 8 ) | (szDbBusRxData[2 * i]);
+        pRawData[i] = (s16)szRawData[i];
+    }
+    
+//    return (MAX_CHANNEL_NUM * 2);
+    return nSize;
+}
+
+static void _DrvMpTestItoTestMsg22xxSendDataIn(u8 nStep, u16 nSubFrameNum)
+{
+    u32	i;
+    u32 *pType = NULL;
+    u16 nRiuWriteLength = nSubFrameNum * 6;
+
+    DBG("*** %s() nStep = %d, nSubFrameNum = %d ***\n", __func__, nStep, nSubFrameNum);
+
+    if (nStep == 0) //39-4 (2R)
+    {
+        pType = &_gShort_RIU4[0];
+    }
+    else if (nStep == 1) //39-1
+    {
+        pType = &_gShort_RIU1[0];      	
+    }
+    else if (nStep == 2) //39-2
+    {
+        pType = &_gShort_RIU2[0];      	
+    }
+    else if (nStep == 3) //39-3
+    {
+        pType = &_gShort_RIU3[0];        
+    }
+    else if (nStep == 4)
+    {
+        pType = &_gOpenRIU1[0];        
+    }
+    else if (nStep == 5)
+    {
+        pType = &_gOpenRIU2[0];      	
+    }
+    else if (nStep == 6)
+    {
+        pType = &_gOpenRIU3[0];      	
+    }
+
+    RegSet16BitValueOn(0x1192, BIT4); // force on enable sensor mux and csub sel sram clock
+    RegSet16BitValueOff(0x1192, BIT5); // mem clk sel 
+    RegSet16BitValueOff(0x1100, BIT3); // tgen soft rst
+    RegSet16BitValue(0x1180, RIU_BASE_ADDR); // sensor mux sram read/write base address
+    RegSet16BitValue(0x1182, nRiuWriteLength); // sensor mux sram write length
+    RegSet16BitValueOn(0x1188, BIT0); // reg_mem0_w_start
+
+    for (i = RIU_BASE_ADDR; i < (RIU_BASE_ADDR + nRiuWriteLength); i ++)
+    {
+        RegSet16BitValue(0x118A, (u16)(pType[i]));
+        RegSet16BitValue(0x118C, (u16)(pType[i] >> 16));
+    }
+}
+
+static void _DrvMpTestItoTestMsg22xxSetC(u8 nCSubStep)
+{
+    u32 i;
+    u16 nCSubNew, nRegVal;
+     
+    DBG("*** %s() nCSubStep = %d ***\n", __func__, nCSubStep);
+    
+    nCSubNew = (nCSubStep > CSUB_REF_MAX) ? CSUB_REF_MAX : nCSubStep; // 6 bits
+    nCSubNew = (nCSubNew | (nCSubNew << 8));
+
+    nRegVal = RegGet16BitValue(0x11C8); // csub sel overwrite enable, will referance value of 11C0
+
+    if (nRegVal == 0x000F)
+    {
+        RegSet16BitValue(0x11C0, nCSubNew);
+    }
+    else
+    {
+        RegSet16BitValueOn(0x1192, BIT4);   // force on enable sensor mux  and csub sel sram clock
+        RegSet16BitValueOff(0x1192, BIT5);   // mem clk sel 
+        RegSet16BitValueOff(0x1100, BIT3);   // tgen soft rst
+        RegSet16BitValue(0x1184, 0);          // nAddr
+        RegSet16BitValue(0x1186, MAX_CHANNEL_NUM);         // nLen
+        RegSet16BitValueOn(0x1188, BIT2);   // reg_mem0_w_start
+
+        for (i = 0; i < MAX_CHANNEL_NUM; i ++)
+        {
+            RegSet16BitValue( 0x118E, nCSubNew);
+            RegSet16BitValue( 0x1190, nCSubNew);
+        }
+    }
+}
+
+static void _DrvMpTestItoTestMsg22xxRegReset(void)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    RegSet16BitValueOn(0x1102, (BIT3 | BIT4 | BIT5 | BIT6 | BIT7));
+    RegSet16BitValueOff(0x1130, (BIT0 | BIT1 | BIT2 | BIT3 | BIT8));
+
+    RegSet16BitValueOn(0x1112, BIT15);
+    RegSet16BitValueOff(0x1112, BIT13);
+
+    RegSet16BitValueOn(0x1250, ((5 << 0) & 0x007F));
+    RegSet16BitValueOn(0x1250, ((1 << 8) & 0x7F00));
+    RegSet16BitValueOff(0x1250, 0x8080);
+
+    RegSet16BitValueOff(0x1312, (BIT12 | BIT14));
+
+    RegSet16BitValueOn(0x1300, BIT15);
+    RegSet16BitValueOff(0x1300, (BIT10 | BIT11 | BIT12 | BIT13 | BIT14));
+
+    RegSet16BitValueOn(0x1130, BIT9);
+
+    RegSet16BitValueOn(0x1318, (BIT12 | BIT13));
+
+    //RegSet16BitValue(0x121A, ((8 - 1) & 0x01FF));       // sampling number group A
+    RegSet16BitValue(0x121C, ((8 - 1) & 0x01FF));       // sampling number group B
+    RegSet16BitValueOn(0x131A, 0x2000);
+    RegSet16BitValueOn(0x131C, BIT9);
+    RegSet16BitValueOff(0x131C, (BIT8 | BIT10));
+
+
+    RegSet16BitValueOff(0x1174, 0x0F00);
+
+    RegSet16BitValue(0x1240, 0x0000);       // mutual cap mode selection for total 24 subframes, 0: normal sense, 1: mutual cap sense
+    RegSet16BitValue(0x1242, 0x0000);       // mutual cap mode selection for total 24 subframes, 0: normal sense, 1: mutual cap sense
+
+    RegSet16BitValue(0x1212, 0xFFFF);       // timing group A/B selection for total 24 subframes, 0: group A, 1: group B
+    RegSet16BitValue(0x1214, 0x00FF);       // timing group A/B selection for total 24 subframes, 0: group A, 1: group B
+    //RegSet16BitValue( 0x1212, 0);       // timing group A/B selection for total 24 subframes, 0: group A, 1: group B
+    //RegSet16BitValue( 0x1214, 0);       // timing group A/B selection for total 24 subframes, 0: group A, 1: group B
+
+    RegSet16BitValue(0x121E, 0xFFFF);   //sample number group A/B selection for total 24 subframes, 0: group A, 1: group B       
+    RegSet16BitValue(0x1220, 0x00FF);   //sample number group A/B selection for total 24 subframes, 0: group A, 1: group B    
+    //RegSet16BitValue( 0x121E, 0);   //sample number group A/B selection for total 24 subframes, 0: group A, 1: group B       
+    //RegSet16BitValue( 0x1220, 0);   //sample number group A/B selection for total 24 subframes, 0: group A, 1: group B    
+
+    RegSet16BitValue(0x120E, 0x0);  // noise sense mode selection for total 24 subframes
+    RegSet16BitValue(0x1210, 0x0);  // noise sense mode selection for total 24 subframes
+
+    RegSet16BitValue(0x128C, 0x0F);  // ADC afe gain correction bypass
+//    mdelay(50);
+    msleep(50);
+}
+
+static void _DrvMpTestItoTestMsg22xxGetChargeDumpTime(u16 nMode, u16 *pChargeTime, u16 *pDumpTime)
+{
+    u16 nChargeTime = 0, nDumpTime = 0;
+    u16 nMinChargeTime = 0xFFFF, nMinDumpTime = 0xFFFF, nMaxChargeTime = 0x0000, nMaxDumpTime = 0x0000;
+    
+    DBG("*** %s() ***\n", __func__);
+
+    nChargeTime = RegGet16BitValue(0x1226);
+    nDumpTime = RegGet16BitValue(0x122A);
+
+    if (nMinChargeTime > nChargeTime)
+    {
+        nMinChargeTime = nChargeTime;
+    }
+
+    if (nMaxChargeTime < nChargeTime)
+    {
+        nMaxChargeTime = nChargeTime;
+    }
+
+    if (nMinDumpTime > nDumpTime)
+    {
+        nMinDumpTime = nDumpTime;
+    }
+
+    if (nMaxDumpTime < nDumpTime)
+    {
+        nMaxDumpTime = nDumpTime;
+    }
+
+    DBG("nChargeTime = %d, nDumpTime = %d\n", nChargeTime, nDumpTime);
+    
+    if (nMode == 1)
+    {
+        *pChargeTime = nMaxChargeTime;
+        *pDumpTime = nMaxDumpTime;
+    }
+    else
+    {
+        *pChargeTime = nMinChargeTime;
+        *pDumpTime = nMinDumpTime;
+    }
+}
+
+static void _DrvMpTestItoOpenTestMsg22xxFirst(u8 nItemId, s16 *pRawData, s8 *pDataFlag)		
+{
+    u32 i;
+    s16 szTmpRawData[MAX_CHANNEL_NUM*2] = {0};
+    u16 nSubFrameNum = 0;
+    u16 nChargeTime, nDumpTime;
+    u8 	*pMapping = NULL;
+    
+    DBG("*** %s() nItemId = %d ***\n", __func__, nItemId);
+	
+    // Stop cpu
+    RegSet16BitValue(0x0FE6, 0x0001); //bank:mheg5, addr:h0073
+
+    _DrvMpTestItoTestMsg22xxRegReset();
+
+    switch (nItemId)
+    {
+        case 40:
+            pMapping = &_gMAP1[0];
+            nSubFrameNum = _gOpenSubFrameNum1;
+            break;
+        case 41:
+            pMapping = &_gMAP2[0];
+            nSubFrameNum = _gOpenSubFrameNum2;
+            break;
+        case 42:
+            pMapping = &_gMAP3[0];
+            nSubFrameNum = _gOpenSubFrameNum3;
+            break;
+    }
+
+    if (nSubFrameNum > 24) // MAX_CHANNEL_NUM/2
+    {
+        nSubFrameNum = 24;
+    }
+
+
+    _DrvMpTestItoTestMsg22xxSendDataIn(nItemId - 36, nSubFrameNum * 6);
+
+    if (true)
+    {
+        RegSet16BitValue(0x1110, 0x0060); //2.4V -> 1.2V    
+    }
+    else
+    {
+        RegSet16BitValue(0x1110, 0x0020); //3.0V -> 0.6V
+    }
+    
+    RegSet16BitValue(0x11C8, 0x000F); //csub sel overwrite enable, will referance value of 11C0
+    RegSet16BitValue(0x1174, 0x0F06); // 1 : sel idel driver for sensor pad that connected to AFE
+    RegSet16BitValue(0x1208, 0x0006); //PRS1
+    RegSet16BitValue(0x1240, 0xFFFF); //mutual cap mode selection for total 24 subframes, 0: normal sense, 1: mutual cap sense
+    RegSet16BitValue(0x1242, 0x00FF); //mutual cap mode selection for total 24 subframes, 0: normal sense, 1: mutual cap sense
+    RegSet16BitValue(0x1216, (nSubFrameNum - 1) << 1); // subframe numbers, 0:1subframe, 1:2subframe  
+
+    _DrvMpTestItoTestMsg22xxGetChargeDumpTime(1, &nChargeTime, &nDumpTime);
+
+    RegSet16BitValue(0x1226, nChargeTime);
+    RegSet16BitValue(0x122A, nDumpTime);
+
+    _DrvMpTestItoTestMsg22xxSetC(CSUB_REF);
+    _DrvMpTestItoTestSwReset();
+    _DrvMpTestItoTestMsg22xxGetDataOut(szTmpRawData, nSubFrameNum);
+
+//    for (i = 0; i < (MAX_CHANNEL_NUM/2) ; i ++)
+    for (i = 0; i < nSubFrameNum ; i ++)
+    {
+//        DBG("szTmpRawData[%d * 4] >> 3 = %d\n", i, szTmpRawData[i * 4] >> 3); // add for debug
+//        DBG("pMapping[%d] = %d\n", i, pMapping[i]); // add for debug
+
+        pRawData[pMapping[i]] = (szTmpRawData[i * 4] >> 3);  // Filter to ADC 
+        pDataFlag[pMapping[i]] = 1;
+    }
+}
+
+static void _DrvMpTestItoShortTestMsg22xxFirst(u8 nItemId, s16 *pRawData, s8 *pDataFlag)		
+{
+    u32 i, j;
+    s16 szRawData[MAX_CHANNEL_NUM*2] = {0};
+    s16 szTmpRawData[MAX_CHANNEL_NUM*2] = {0};
+    u16 nSensorNum = 0, nSubFrameNum = 0;
+    u8 	*pMapping = NULL;
+    
+    DBG("*** %s() nItemId = %d ***\n", __func__, nItemId);
+
+    // Stop cpu
+    RegSet16BitValue(0x0FE6, 0x0001); //bank:mheg5, addr:h0073
+
+    _DrvMpTestItoTestMsg22xxRegReset();
+
+    switch(nItemId)
+    {
+        case 0: // 39-4 (2R)
+            pMapping = &_gSHORT_MAP4[0];
+            nSensorNum = _gShortSubFrameNum4;
+            break;
+        case 1: // 39-1
+            pMapping = &_gSHORT_MAP1[0];
+            nSensorNum = _gShortSubFrameNum1;
+            break;
+        case 2: // 39-2
+            pMapping = &_gSHORT_MAP2[0];
+            nSensorNum = _gShortSubFrameNum2;
+            break;
+        case 3: // 39-3
+            pMapping = &_gSHORT_MAP3[0];
+            nSensorNum = _gShortSubFrameNum3;
+            break;            
+    }
+    
+    if (nSensorNum > 24) // MAX_CHANNEL_NUM/2
+    {
+        nSubFrameNum = 24;
+    }
+    else
+    {
+        nSubFrameNum = nSensorNum;
+    }
+
+    _DrvMpTestItoTestMsg22xxSendDataIn(nItemId, nSubFrameNum * 6);
+
+
+    //RegSet16BitValue(0x1110, 0x0030); // [6:4}  011 : 2.1V -> 1.5V
+    RegSet16BitValue(0x1110, 0x0060); // 2.4V -> 1.2V
+    RegSet16BitValue(0x11C8, 0x000F); // csub sel overwrite enable, will referance value of 11C0
+    RegSet16BitValue(0x1174, 0x0006); // [11:8] 000 : sel active driver for sensor pad that connected to AFE
+    RegSet16BitValue(0x1208, 0x0006); // PRS1
+    RegSet16BitValueOn(0x1104, BIT14); // R mode 
+    RegSet16BitValue(0x1216, (nSubFrameNum - 1) << 1); // subframe numbers, 0:1subframe, 1:2subframe
+    RegSet16BitValue(0x1176, 0x0000); // CFB 10p
+    RegSet16BitValue(0x1226, 0x000B); // Charge 4ns
+    RegSet16BitValue(0x122A, 0x000B); // Dump 4ns     
+
+
+    _DrvMpTestItoTestMsg22xxSetC(CSUB_REF);
+    _DrvMpTestItoTestSwReset();
+    _DrvMpTestItoTestMsg22xxGetDataOut(szTmpRawData, nSubFrameNum);
+    
+    if (nSensorNum > 24)
+    {
+        j = 0;
+
+//        for (i = 0; i < (MAX_CHANNEL_NUM/2); i ++)
+        for (i = 0; i < nSubFrameNum; i ++)
+        {
+            szRawData[j] = (szTmpRawData[i * 4] >> 2);
+            j ++;
+            
+            if ((nSensorNum - 24) > i)
+            {
+                szRawData[j] = (szTmpRawData[i * 4 + 1] >> 2);
+                j ++;
+            }    
+        }
+
+//        for (i = 0; i < (MAX_CHANNEL_NUM/2); i ++)
+        for (i = 0; i < nSubFrameNum; i ++)
+        {
+//            DBG("szRawData[%d] = %d\n", i, szRawData[i]); // add for debug
+//            DBG("pMapping[%d] = %d\n", i, pMapping[i]); // add for debug
+
+            pRawData[pMapping[i]] = szRawData[i];
+            pDataFlag[pMapping[i]] = 1;
+        }
+    }
+    else
+    {
+//        for (i = 0; i < (MAX_CHANNEL_NUM/2); i ++)
+        for (i = 0; i < nSubFrameNum; i ++)
+        {
+//            DBG("szTmpRawData[%d * 4] >> 2 = %d\n", i, szTmpRawData[i * 4] >> 2); // add for debug
+//            DBG("pMapping[%d] = %d\n", i, pMapping[i]); // add for debug
+
+            pRawData[pMapping[i]] = (szTmpRawData[i * 4] >> 2);    
+            pDataFlag[pMapping[i]] = 1;
+        }
+    }
+}
+
+#endif
+
+//------------------------------------------------------------------------------//
+
+static ItoTestResult_e _DrvMpTestItoOpenTestSecond(u8 nItemId)
+{
+    ItoTestResult_e nRetVal = ITO_TEST_OK;
+    u32 i;
+    s32 nTmpRawDataJg1 = 0;
+    s32 nTmpRawDataJg2 = 0;
+    s32 nTmpJgAvgThMax1 = 0;
+    s32 nTmpJgAvgThMin1 = 0;
+    s32 nTmpJgAvgThMax2 = 0;
+    s32 nTmpJgAvgThMin2 = 0;
+
+    DBG("*** %s() nItemId = %d ***\n", __func__, nItemId);
+
+    if (nItemId == 40)    			
+    {
+        for (i = 0; i < (_gItoTestTriangleNum/2)-2; i ++)
+        {
+            nTmpRawDataJg1 += _gRawData1[_gMAP40_1[i]];
+        }
+
+        for (i = 0; i < 2; i ++)
+        {
+            nTmpRawDataJg2 += _gRawData1[_gMAP40_2[i]];
+        }
+    }
+    else if (nItemId == 41)    		
+    {
+        for (i = 0; i < (_gItoTestTriangleNum/2)-2; i ++)
+        {
+            nTmpRawDataJg1 += _gRawData2[_gMAP41_1[i]];
+        }
+		
+        for (i = 0; i < 2; i ++)
+        {
+            nTmpRawDataJg2 += _gRawData2[_gMAP41_2[i]];
+        }
+    }
+
+    nTmpJgAvgThMax1 = (nTmpRawDataJg1 / ((_gItoTestTriangleNum/2)-2)) * ( 100 + OPEN_TEST_NON_BORDER_AREA_THRESHOLD) / 100;
+    nTmpJgAvgThMin1 = (nTmpRawDataJg1 / ((_gItoTestTriangleNum/2)-2)) * ( 100 - OPEN_TEST_NON_BORDER_AREA_THRESHOLD) / 100;
+    nTmpJgAvgThMax2 = (nTmpRawDataJg2 / 2) * ( 100 + OPEN_TEST_BORDER_AREA_THRESHOLD) / 100;
+    nTmpJgAvgThMin2 = (nTmpRawDataJg2 / 2 ) * ( 100 - OPEN_TEST_BORDER_AREA_THRESHOLD) / 100;
+	
+    DBG("nItemId = %d, nTmpRawDataJg1 = %d, nTmpJgAvgThMax1 = %d, nTmpJgAvgThMin1 = %d, nTmpRawDataJg2 = %d, nTmpJgAvgThMax2 = %d, nTmpJgAvgThMin2 = %d\n", nItemId, nTmpRawDataJg1, nTmpJgAvgThMax1, nTmpJgAvgThMin1, nTmpRawDataJg2, nTmpJgAvgThMax2, nTmpJgAvgThMin2);
+
+    if (nItemId == 40) 
+    {
+        for (i = 0; i < (_gItoTestTriangleNum/2)-2; i ++)
+        {
+            if (_gRawData1[_gMAP40_1[i]] > nTmpJgAvgThMax1 || _gRawData1[_gMAP40_1[i]] < nTmpJgAvgThMin1)
+            { 
+                _gTestFailChannel[_gTestFailChannelCount] = _gMAP40_1[i];
+                _gTestFailChannelCount ++; 
+                nRetVal = ITO_TEST_FAIL;
+            }
+        }
+		
+        for (i = 0; i < 2; i ++)
+        {
+            if (_gRawData1[_gMAP40_2[i]] > nTmpJgAvgThMax2 || _gRawData1[_gMAP40_2[i]] < nTmpJgAvgThMin2)
+            { 
+                _gTestFailChannel[_gTestFailChannelCount] = _gMAP40_2[i];
+                _gTestFailChannelCount ++; 
+                nRetVal = ITO_TEST_FAIL;
+            }
+        } 
+    }
+    else if (nItemId == 41) 
+    {
+        for (i = 0; i < (_gItoTestTriangleNum/2)-2; i ++)
+        {
+            if (_gRawData2[_gMAP41_1[i]] > nTmpJgAvgThMax1 || _gRawData2[_gMAP41_1[i]] < nTmpJgAvgThMin1) 
+            { 
+                _gTestFailChannel[_gTestFailChannelCount] = _gMAP41_1[i];
+                _gTestFailChannelCount ++; 
+                nRetVal = ITO_TEST_FAIL;
+            }
+        }
+        
+        for (i = 0; i < 2; i ++)
+        {
+            if (_gRawData2[_gMAP41_2[i]] > nTmpJgAvgThMax2 || _gRawData2[_gMAP41_2[i]] < nTmpJgAvgThMin2) 
+            { 
+                _gTestFailChannel[_gTestFailChannelCount] = _gMAP41_2[i];
+                _gTestFailChannelCount ++; 
+                nRetVal = ITO_TEST_FAIL;
+            }
+        }
+    }
+
+    return nRetVal;
+}
+
+static ItoTestResult_e _DrvMpTestItoOpenTestSecond2r(u8 nItemId)
+{
+    ItoTestResult_e nRetVal = ITO_TEST_OK;
+    u32 i;
+    s32 nTmpRawDataJg1 = 0;
+    s32 nTmpRawDataJg2 = 0;
+    s32 nTmpRawDataJg3 = 0;
+    s32 nTmpRawDataJg4 = 0;
+    s32 nTmpJgAvgThMax1 = 0;
+    s32 nTmpJgAvgThMin1 = 0;
+    s32 nTmpJgAvgThMax2 = 0;
+    s32 nTmpJgAvgThMin2 = 0;
+    s32 nTmpJgAvgThMax3 = 0;
+    s32 nTmpJgAvgThMin3 = 0;
+    s32 nTmpJgAvgThMax4 = 0;
+    s32 nTmpJgAvgThMin4 = 0;
+
+    DBG("*** %s() nItemId = %d ***\n", __func__, nItemId);
+
+    if (nItemId == 40)    			
+    {
+        for (i = 0; i < (_gItoTestTriangleNum/4)-2; i ++)
+        {
+            nTmpRawDataJg1 += _gRawData1[_gMAP40_1[i]];  //first region: non-border 
+        }
+		
+        for (i = 0; i < 2; i ++)
+        {
+            nTmpRawDataJg2 += _gRawData1[_gMAP40_2[i]];  //first region: border
+        }
+
+        for (i = 0; i < (_gItoTestTriangleNum/4)-2; i ++)
+        {
+            nTmpRawDataJg3 += _gRawData1[_gMAP40_3[i]];  //second region: non-border
+        }
+		
+        for (i = 0; i < 2; i ++)
+        {
+            nTmpRawDataJg4 += _gRawData1[_gMAP40_4[i]];  //second region: border
+        }
+    }
+    else if (nItemId == 41)    		
+    {
+        for (i = 0; i < (_gItoTestTriangleNum/4)-2; i ++)
+        {
+            nTmpRawDataJg1 += _gRawData2[_gMAP41_1[i]];  //first region: non-border
+        }
+		
+        for (i = 0; i < 2; i ++)
+        {
+            nTmpRawDataJg2 += _gRawData2[_gMAP41_2[i]];  //first region: border
+        }
+		
+        for (i = 0; i < (_gItoTestTriangleNum/4)-2; i ++)
+        {
+            nTmpRawDataJg3 += _gRawData2[_gMAP41_3[i]];  //second region: non-border
+        }
+		
+        for (i = 0; i < 2; i ++)
+        {
+            nTmpRawDataJg4 += _gRawData2[_gMAP41_4[i]];  //second region: border
+        }
+    }
+
+    nTmpJgAvgThMax1 = (nTmpRawDataJg1 / ((_gItoTestTriangleNum/4)-2)) * ( 100 + OPEN_TEST_NON_BORDER_AREA_THRESHOLD) / 100;
+    nTmpJgAvgThMin1 = (nTmpRawDataJg1 / ((_gItoTestTriangleNum/4)-2)) * ( 100 - OPEN_TEST_NON_BORDER_AREA_THRESHOLD) / 100;
+    nTmpJgAvgThMax2 = (nTmpRawDataJg2 / 2) * ( 100 + OPEN_TEST_BORDER_AREA_THRESHOLD) / 100;
+    nTmpJgAvgThMin2 = (nTmpRawDataJg2 / 2) * ( 100 - OPEN_TEST_BORDER_AREA_THRESHOLD) / 100;
+    nTmpJgAvgThMax3 = (nTmpRawDataJg3 / ((_gItoTestTriangleNum/4)-2)) * ( 100 + OPEN_TEST_NON_BORDER_AREA_THRESHOLD) / 100;
+    nTmpJgAvgThMin3 = (nTmpRawDataJg3 / ((_gItoTestTriangleNum/4)-2)) * ( 100 - OPEN_TEST_NON_BORDER_AREA_THRESHOLD) / 100;
+    nTmpJgAvgThMax4 = (nTmpRawDataJg4 / 2) * ( 100 + OPEN_TEST_BORDER_AREA_THRESHOLD) / 100;
+    nTmpJgAvgThMin4 = (nTmpRawDataJg4 / 2) * ( 100 - OPEN_TEST_BORDER_AREA_THRESHOLD) / 100;
+		
+    DBG("nItemId = %d, nTmpRawDataJg1 = %d, nTmpJgAvgThMax1 = %d, nTmpJgAvgThMin1 = %d, nTmpRawDataJg2 = %d, nTmpJgAvgThMax2 = %d, nTmpJgAvgThMin2 = %d\n", nItemId, nTmpRawDataJg1, nTmpJgAvgThMax1, nTmpJgAvgThMin1, nTmpRawDataJg2, nTmpJgAvgThMax2, nTmpJgAvgThMin2);
+    DBG("nTmpRawDataJg3 = %d, nTmpJgAvgThMax3 = %d, nTmpJgAvgThMin3 = %d, nTmpRawDataJg4 = %d, nTmpJgAvgThMax4 = %d, nTmpJgAvgThMin4 = %d\n", nTmpRawDataJg3, nTmpJgAvgThMax3, nTmpJgAvgThMin3, nTmpRawDataJg4, nTmpJgAvgThMax4, nTmpJgAvgThMin4);
+
+    if (nItemId == 40) 
+    {
+        for (i = 0; i < (_gItoTestTriangleNum/4)-2; i ++)
+        {
+            if (_gRawData1[_gMAP40_1[i]] > nTmpJgAvgThMax1 || _gRawData1[_gMAP40_1[i]] < nTmpJgAvgThMin1) 
+            {
+                _gTestFailChannel[_gTestFailChannelCount] = _gMAP40_1[i];
+                _gTestFailChannelCount ++; 
+                nRetVal = ITO_TEST_FAIL;
+            }
+        }
+		
+        for (i = 0; i < 2; i ++)
+        {
+            if (_gRawData1[_gMAP40_2[i]] > nTmpJgAvgThMax2 || _gRawData1[_gMAP40_2[i]] < nTmpJgAvgThMin2) 
+            {
+                _gTestFailChannel[_gTestFailChannelCount] = _gMAP40_2[i];
+                _gTestFailChannelCount ++; 
+                nRetVal = ITO_TEST_FAIL;
+            }
+        } 
+		
+        for (i = 0; i < (_gItoTestTriangleNum/4)-2; i ++)
+        {
+            if (_gRawData1[_gMAP40_3[i]] > nTmpJgAvgThMax3 || _gRawData1[_gMAP40_3[i]] < nTmpJgAvgThMin3) 
+            {
+                _gTestFailChannel[_gTestFailChannelCount] = _gMAP40_3[i];
+                _gTestFailChannelCount ++; 
+                nRetVal = ITO_TEST_FAIL;
+            }
+        }
+		
+        for (i = 0; i < 2; i ++)
+        {
+            if (_gRawData1[_gMAP40_4[i]] > nTmpJgAvgThMax4 || _gRawData1[_gMAP40_4[i]] < nTmpJgAvgThMin4) 
+            {
+                _gTestFailChannel[_gTestFailChannelCount] = _gMAP40_4[i];
+                _gTestFailChannelCount ++; 
+                nRetVal = ITO_TEST_FAIL;
+            }
+        } 
+    }
+    else if (nItemId == 41) 
+    {
+        for (i = 0; i < (_gItoTestTriangleNum/4)-2; i ++)
+        {
+            if (_gRawData2[_gMAP41_1[i]] > nTmpJgAvgThMax1 || _gRawData2[_gMAP41_1[i]] < nTmpJgAvgThMin1) 
+            {
+                _gTestFailChannel[_gTestFailChannelCount] = _gMAP41_1[i];
+                _gTestFailChannelCount ++; 
+                nRetVal = ITO_TEST_FAIL;
+            }
+        }
+		
+        for (i = 0; i < 2; i ++)
+        {
+            if (_gRawData2[_gMAP41_2[i]] > nTmpJgAvgThMax2 || _gRawData2[_gMAP41_2[i]] < nTmpJgAvgThMin2) 
+            {
+                _gTestFailChannel[_gTestFailChannelCount] = _gMAP41_2[i];
+                _gTestFailChannelCount ++; 
+                nRetVal = ITO_TEST_FAIL;
+            }
+        }
+		
+        for (i = 0; i < (_gItoTestTriangleNum/4)-2; i ++)
+        {
+            if (_gRawData2[_gMAP41_3[i]] > nTmpJgAvgThMax3 || _gRawData2[_gMAP41_3[i]] < nTmpJgAvgThMin3) 
+            {
+                _gTestFailChannel[_gTestFailChannelCount] = _gMAP41_3[i];
+                _gTestFailChannelCount ++; 
+                nRetVal = ITO_TEST_FAIL;
+            }
+        }
+		
+        for (i = 0; i < 2; i ++)
+        {
+            if (_gRawData2[_gMAP41_4[i]] > nTmpJgAvgThMax4 || _gRawData2[_gMAP41_4[i]] < nTmpJgAvgThMin4) 
+            {
+                _gTestFailChannel[_gTestFailChannelCount] = _gMAP41_4[i];
+                _gTestFailChannelCount ++; 
+                nRetVal = ITO_TEST_FAIL;
+            }
+        } 
+    }
+
+    return nRetVal;
+}
+
+static ItoTestResult_e _DrvMpTestItoShortTestSecond(u8 nItemId)
+{
+    ItoTestResult_e nRetVal = ITO_TEST_OK;
+    u32 i;
+    u8 nSensorCount = 0;
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+    u8 nNumOfSensorMapping1, nNumOfSensorMapping2;
+#endif //CONFIG_ENABLE_CHIP_MSG21XXA
+	
+    DBG("*** %s() nItemId = %d ***\n", __func__, nItemId);
+
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+    if ((_gItoTestTriangleNum + _gItoTestKeyNum + _gItoTestDummyNum) % 2 != 0)
+    {
+        nNumOfSensorMapping1 = (_gItoTestTriangleNum + _gItoTestKeyNum + _gItoTestDummyNum) / 2 + 1;
+        nNumOfSensorMapping2 = nNumOfSensorMapping1;
+    }
+    else
+    {
+        nNumOfSensorMapping1 = (_gItoTestTriangleNum + _gItoTestKeyNum + _gItoTestDummyNum) / 2;
+        nNumOfSensorMapping2 = nNumOfSensorMapping1;
+        if (nNumOfSensorMapping2 % 2 != 0)
+        {	
+            nNumOfSensorMapping2 ++;
+        }
+    }        
+#endif //CONFIG_ENABLE_CHIP_MSG21XXA
+
+    if (nItemId == 0) // 39-4 (2R)   
+    {
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+        nSensorCount = _gItoTestTriangleNum/2;
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+        nSensorCount = _gShortSubFrameNum4;
+#endif        
+        for (i = 0; i < nSensorCount; i ++)
+        {
+            if (_gRawData4[_gSHORT_MAP4[i]] > SHORT_TEST_THRESHOLD)
+            {
+                _gTestFailChannel[_gTestFailChannelCount] = _gSHORT_MAP4[i];
+                _gTestFailChannelCount ++; 
+                nRetVal = ITO_TEST_FAIL;
+            }
+        }
+    }
+    else if (nItemId == 1) // 39-1
+    {
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+        nSensorCount = nNumOfSensorMapping1;
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+        nSensorCount = _gShortSubFrameNum1;
+#endif        
+        for (i = 0; i < nSensorCount; i ++)
+        {
+            if (_gRawData1[_gSHORT_MAP1[i]] > SHORT_TEST_THRESHOLD)
+            {
+                _gTestFailChannel[_gTestFailChannelCount] = _gSHORT_MAP1[i];
+                _gTestFailChannelCount ++; 
+                nRetVal = ITO_TEST_FAIL;
+            }
+        }
+    }
+    else if (nItemId == 2) // 39-2
+    {
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+        nSensorCount = nNumOfSensorMapping2;
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+        nSensorCount = _gShortSubFrameNum2;
+#endif        
+        for (i = 0; i < nSensorCount; i ++)
+        {
+            if (_gRawData2[_gSHORT_MAP2[i]] > SHORT_TEST_THRESHOLD)
+            {
+                _gTestFailChannel[_gTestFailChannelCount] = _gSHORT_MAP2[i];
+                _gTestFailChannelCount ++; 
+                nRetVal = ITO_TEST_FAIL;
+            }
+        }
+    }
+    else if (nItemId == 3) // 39-3
+    {
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+        nSensorCount = _gItoTestTriangleNum;
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+        nSensorCount = _gShortSubFrameNum3;
+#endif        
+        for (i = 0; i < nSensorCount; i ++)
+        {
+            if (_gRawData3[_gSHORT_MAP3[i]] > SHORT_TEST_THRESHOLD)
+            {
+                _gTestFailChannel[_gTestFailChannelCount] = _gSHORT_MAP3[i];
+                _gTestFailChannelCount ++; 
+                nRetVal = ITO_TEST_FAIL;
+            }
+        }
+    }
+    DBG("nSensorCount = %d\n", nSensorCount);
+
+    return nRetVal;
+}
+
+s32 _DrvMpTestItoOpenTest(void)
+{
+    ItoTestResult_e nRetVal1 = ITO_TEST_OK, nRetVal2 = ITO_TEST_OK, nRetVal3 = ITO_TEST_OK;
+    u32 i;
+
+    DBG("*** %s() ***\n", __func__);
+
+#ifdef CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+#ifdef CONFIG_ENABLE_DMA_IIC
+    DmaAlloc();
+#endif //CONFIG_ENABLE_DMA_IIC
+#endif //CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+
+    DBG("open test start\n");
+
+    DrvPlatformLyrSetIicDataRate(g_I2cClient, 50000); //50 KHZ
+  
+    DrvPlatformLyrDisableFingerTouchReport();
+    DrvPlatformLyrTouchDeviceResetHw();
+    
+    if (!_DrvMpTestItoTestChooseTpType())
+    {
+        DBG("Choose Tp Type failed\n");
+        nRetVal1 = ITO_TEST_GET_TP_TYPE_ERROR;
+        goto ITO_TEST_END;
+    }
+    
+    DbBusEnterSerialDebugMode();
+    DbBusStopMCU();
+    DbBusIICUseBus();
+    DbBusIICReshape();
+//    mdelay(100);
+    msleep(100);
+
+    // Stop cpu
+    RegSet16BitValue(0x0FE6, 0x0001); //bank:mheg5, addr:h0073
+
+    // Stop watchdog
+    RegSet16BitValue(0x3C60, 0xAA55); //bank:reg_PIU_MISC_0, addr:h0030
+
+//    mdelay(50);
+    msleep(50);
+    
+    for (i = 0; i < MAX_CHANNEL_NUM; i ++)
+    {
+        _gRawData1[i] = 0;
+        _gRawData2[i] = 0;
+        _gRawData3[i] = 0;
+        _gDataFlag1[i] = 0;
+        _gDataFlag2[i] = 0;
+        _gDataFlag3[i] = 0;
+    }	
+	
+    _gTestFailChannelCount = 0; // Reset _gTestFailChannelCount to 0 before test start
+
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+    _DrvMpTestItoOpenTestMsg21xxaFirst(40, _gRawData1, _gDataFlag1);
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+    _DrvMpTestItoOpenTestMsg22xxFirst(40, _gRawData1, _gDataFlag1);
+#endif
+
+    if (_gIsEnable2R)
+    {
+        nRetVal2 = _DrvMpTestItoOpenTestSecond2r(40);
+    }
+    else
+    {
+        nRetVal2 = _DrvMpTestItoOpenTestSecond(40);
+    }
+    
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+    _DrvMpTestItoOpenTestMsg21xxaFirst(41, _gRawData2, _gDataFlag2);
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+    _DrvMpTestItoOpenTestMsg22xxFirst(41, _gRawData2, _gDataFlag2);
+#endif
+
+    if (_gIsEnable2R)
+    {
+        nRetVal3 = _DrvMpTestItoOpenTestSecond2r(41);
+    }
+    else
+    {
+        nRetVal3 = _DrvMpTestItoOpenTestSecond(41);
+    }
+/*    
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+    _DrvMpTestItoOpenTestMsg21xxaFirst(42, _gRawData3, _gDataFlag3);
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+    _DrvMpTestItoOpenTestMsg22xxFirst(42, _gRawData3, _gDataFlag3);
+#endif
+*/
+    
+    ITO_TEST_END:
+#ifdef CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+#ifdef CONFIG_ENABLE_DMA_IIC
+    DmaFree();
+#endif //CONFIG_ENABLE_DMA_IIC
+#endif //CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+
+    DrvPlatformLyrSetIicDataRate(g_I2cClient, 100000); //100 KHZ
+    
+    DrvPlatformLyrTouchDeviceResetHw();
+    DrvPlatformLyrEnableFingerTouchReport();
+
+    DBG("open test end\n");
+
+    if ((nRetVal1 != ITO_TEST_OK) && (nRetVal2 == ITO_TEST_OK) && (nRetVal3 == ITO_TEST_OK))
+    {
+        return ITO_TEST_GET_TP_TYPE_ERROR;		
+    }
+    else if ((nRetVal1 == ITO_TEST_OK) && ((nRetVal2 != ITO_TEST_OK) || (nRetVal3 != ITO_TEST_OK)))
+    {
+        return ITO_TEST_FAIL;	
+    }
+    else
+    {
+        return ITO_TEST_OK;	
+    }
+}
+
+static ItoTestResult_e _DrvMpTestItoShortTest(void)
+{
+    ItoTestResult_e nRetVal1 = ITO_TEST_OK, nRetVal2 = ITO_TEST_OK, nRetVal3 = ITO_TEST_OK, nRetVal4 = ITO_TEST_OK, nRetVal5 = ITO_TEST_OK;
+    u32 i = 0;
+
+    DBG("*** %s() ***\n", __func__);
+
+#ifdef CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+#ifdef CONFIG_ENABLE_DMA_IIC
+    DmaAlloc();
+#endif //CONFIG_ENABLE_DMA_IIC
+#endif //CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+
+    DBG("short test start\n");
+
+    DrvPlatformLyrSetIicDataRate(g_I2cClient, 50000); //50 KHZ
+  
+    DrvPlatformLyrDisableFingerTouchReport();
+    DrvPlatformLyrTouchDeviceResetHw(); 
+    
+    if (!_DrvMpTestItoTestChooseTpType())
+    {
+        DBG("Choose Tp Type failed\n");
+        nRetVal1 = ITO_TEST_GET_TP_TYPE_ERROR;
+        goto ITO_TEST_END;
+    }
+    
+    DbBusEnterSerialDebugMode();
+    DbBusStopMCU();
+    DbBusIICUseBus();
+    DbBusIICReshape();
+//    mdelay(100);
+    msleep(100);
+
+    // Stop cpu
+    RegSet16BitValue(0x0FE6, 0x0001); //bank:mheg5, addr:h0073
+
+    // Stop watchdog
+    RegSet16BitValue(0x3C60, 0xAA55); //bank:reg_PIU_MISC_0, addr:h0030
+
+//    mdelay(50);
+    msleep(50);
+    
+    for (i = 0; i < MAX_CHANNEL_NUM; i ++)
+    {
+        _gRawData1[i] = 0;
+        _gRawData2[i] = 0;
+        _gRawData3[i] = 0;
+        _gRawData4[i] = 0;
+        _gDataFlag1[i] = 0;
+        _gDataFlag2[i] = 0;
+        _gDataFlag3[i] = 0;
+        _gDataFlag4[i] = 0;
+    }	
+	
+    _gTestFailChannelCount = 0; // Reset _gTestFailChannelCount to 0 before test start
+	
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+    _DrvMpTestItoShortTestMsg21xxaFirst(1, _gRawData1, _gDataFlag1);
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+    _DrvMpTestItoShortTestMsg22xxFirst(1, _gRawData1, _gDataFlag1);
+#endif
+
+    nRetVal2 = _DrvMpTestItoShortTestSecond(1);
+
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+    _DrvMpTestItoShortTestMsg21xxaFirst(2, _gRawData2, _gDataFlag2);
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+    _DrvMpTestItoShortTestMsg22xxFirst(2, _gRawData2, _gDataFlag2);
+#endif
+
+    nRetVal3 = _DrvMpTestItoShortTestSecond(2);
+
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+    _DrvMpTestItoShortTestMsg21xxaFirst(3, _gRawData3, _gDataFlag3);
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+    _DrvMpTestItoShortTestMsg22xxFirst(3, _gRawData3, _gDataFlag3);
+#endif
+
+    nRetVal4 = _DrvMpTestItoShortTestSecond(3);
+    
+    if (_gIsEnable2R)
+    {
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+        _DrvMpTestItoShortTestMsg21xxaFirst(0, _gRawData4, _gDataFlag4);
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+        _DrvMpTestItoShortTestMsg22xxFirst(0, _gRawData4, _gDataFlag4);
+#endif
+        
+        nRetVal5 = _DrvMpTestItoShortTestSecond(0);
+    }
+
+    ITO_TEST_END:
+#ifdef CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+#ifdef CONFIG_ENABLE_DMA_IIC
+    DmaFree();
+#endif //CONFIG_ENABLE_DMA_IIC
+#endif //CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+
+    DrvPlatformLyrSetIicDataRate(g_I2cClient, 100000); //100 KHZ
+    
+    DrvPlatformLyrTouchDeviceResetHw();
+    DrvPlatformLyrEnableFingerTouchReport();
+
+    DBG("short test end\n");
+    
+    if ((nRetVal1 != ITO_TEST_OK) && (nRetVal2 == ITO_TEST_OK) && (nRetVal3 == ITO_TEST_OK) && (nRetVal4 == ITO_TEST_OK) && (nRetVal5 == ITO_TEST_OK))
+    {
+        return ITO_TEST_GET_TP_TYPE_ERROR;		
+    }
+    else if ((nRetVal1 == ITO_TEST_OK) && ((nRetVal2 != ITO_TEST_OK) || (nRetVal3 != ITO_TEST_OK) || (nRetVal4 != ITO_TEST_OK) || (nRetVal5 != ITO_TEST_OK)))
+    {
+        return ITO_TEST_FAIL;	
+    }
+    else
+    {
+        return ITO_TEST_OK;	
+    }
+}
+
+/*
+static s32 DrvMpTestProcReadDebug(char *page, char **start, off_t off, int count, int *eof, void *data)
+{
+    s32 nCount = 0;
+    
+    DBG("*** %s() ***\n", __func__);
+
+    _gItoTestResult = _DrvMpTestItoOpenTest();
+    
+    if (ITO_TEST_OK == _gItoTestResult)
+    {
+        DBG("ITO_TEST_OK");
+    }
+    else if (ITO_TEST_FAIL == _gItoTestResult)
+    {
+        DBG("ITO_TEST_FAIL");
+    }
+    else if (ITO_TEST_GET_TP_TYPE_ERROR == _gItoTestResult)
+    {
+        DBG("ITO_TEST_GET_TP_TYPE_ERROR");
+    }
+    
+    *eof = 1;
+    
+    return nCount;
+}
+
+static s32 DrvMpTestProcWriteDebug(struct file *file, const char *buffer, unsigned long count, void *data)
+{    
+    u32 i;
+    
+    DBG("*** %s() ***\n", __func__);
+
+    DBG("ito test result : %d", _gItoTestResult);
+
+    for (i = 0; i < MAX_CHANNEL_NUM; i ++)
+    {
+        DBG("_gRawData1[%d]=%d\n", i, _gRawData1[i]);
+    }
+    mdelay(5);
+
+    for (i = 0; i < MAX_CHANNEL_NUM; i ++)
+    {
+        DBG("_gRawData2[%d]=%d\n", i, _gRawData2[i]);
+    }
+    mdelay(5);
+
+    for (i = 0; i < MAX_CHANNEL_NUM; i ++)
+    {
+        DBG("_gRawData3[%d]=%d;\n",i , _gRawData3[i]);
+    }
+    mdelay(5);
+    
+    return count;
+}
+*/
+
+static void _DrvMpTestItoTestDoWork(struct work_struct *pWork)
+{
+    s32 nRetVal = ITO_TEST_OK;
+    
+    DBG("*** %s() _gIsInMpTest = %d, _gTestRetryCount = %d ***\n", __func__, _gIsInMpTest, _gTestRetryCount);
+
+    if (_gItoTestMode == ITO_TEST_MODE_OPEN_TEST)
+    {
+        nRetVal = _DrvMpTestItoOpenTest();
+    }
+    else if (_gItoTestMode == ITO_TEST_MODE_SHORT_TEST)
+    {
+        nRetVal = _DrvMpTestItoShortTest();
+    }
+    else
+    {
+        DBG("*** Undefined Mp Test Mode = %d ***\n", _gItoTestMode);
+        return;
+    }
+
+    DBG("*** ctp mp test result = %d ***\n", nRetVal);
+    
+    if (nRetVal == ITO_TEST_OK)
+    {
+        _gCtpMpTestStatus = ITO_TEST_OK;
+        _gIsInMpTest = 0;
+        DBG("mp test success\n");
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+        DrvFwCtrlRestoreFirmwareModeToLogDataMode();    
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+    }
+    else
+    {
+        _gTestRetryCount --;
+        if (_gTestRetryCount > 0)
+        {
+            DBG("_gTestRetryCount = %d\n", _gTestRetryCount);
+            queue_work(_gCtpMpTestWorkQueue, &_gCtpItoTestWork);
+        }
+        else
+        {
+            if (nRetVal == ITO_TEST_FAIL)
+            {
+                _gCtpMpTestStatus = ITO_TEST_FAIL;
+            }
+            else if (nRetVal == ITO_TEST_GET_TP_TYPE_ERROR)
+            {
+                _gCtpMpTestStatus = ITO_TEST_GET_TP_TYPE_ERROR;
+            }
+            else
+            {
+                _gCtpMpTestStatus = ITO_TEST_UNDEFINED_ERROR;
+            }
+              
+            _gIsInMpTest = 0;
+            DBG("mp test failed\n");
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+            DrvFwCtrlRestoreFirmwareModeToLogDataMode();    
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+        }
+    }
+}
+
+/*=============================================================*/
+// GLOBAL FUNCTION DEFINITION
+/*=============================================================*/
+
+/*
+void DrvMpTestCreateProcEntry(void)
+{
+    _gMsgItoTest = proc_mkdir(PROC_MSG_ITO_TEST, NULL);
+    _gDebug = create_proc_entry(PROC_ITO_TEST_DEBUG, 0777, _gMsgItoTest);
+
+    if (NULL == _gDebug) 
+    {
+        DBG("create_proc_entry PROC_ITO_TEST_DEBUG FAIL\n");
+    } 
+    else 
+    {
+        _gDebug->read_proc = DrvMpTestProcReadDebug;
+        _gDebug->write_proc = DrvMpTestProcWriteDebug;
+        DBG("create_proc_entry PROC_ITO_TEST_DEBUG OK\n");
+    }
+}
+*/
+
+s32 DrvMpTestGetTestResult(void)
+{
+    DBG("*** %s() ***\n", __func__);
+    DBG("_gCtpMpTestStatus = %d\n", _gCtpMpTestStatus);
+
+    return _gCtpMpTestStatus;
+}
+
+void DrvMpTestGetTestFailChannel(ItoTestMode_e eItoTestMode, u8 *pFailChannel, u32 *pFailChannelCount)
+{
+    u32 i;
+    
+    DBG("*** %s() ***\n", __func__);
+    DBG("_gTestFailChannelCount = %d\n", _gTestFailChannelCount);
+    
+    for (i = 0; i < _gTestFailChannelCount; i ++)
+    {
+    	  pFailChannel[i] = _gTestFailChannel[i];
+    }
+    
+    *pFailChannelCount = _gTestFailChannelCount;
+}
+
+void DrvMpTestGetTestDataLog(ItoTestMode_e eItoTestMode, u8 *pDataLog, u32 *pLength)
+{
+    u32 i;
+    u8 nHighByte, nLowByte;
+    
+    DBG("*** %s() ***\n", __func__);
+    
+    if (eItoTestMode == ITO_TEST_MODE_OPEN_TEST)
+    {
+        for (i = 0; i < MAX_CHANNEL_NUM; i ++)
+        {
+            nHighByte = (_gRawData1[i] >> 8) & 0xFF;
+            nLowByte = (_gRawData1[i]) & 0xFF;
+    	  
+            if (_gDataFlag1[i] == 1)
+            {
+                pDataLog[i*4] = 1; // indicate it is a on-use channel number
+            }
+            else
+            {
+                pDataLog[i*4] = 0; // indicate it is a non-use channel number
+            }
+            
+            if (_gRawData1[i] >= 0)
+            {
+                pDataLog[i*4+1] = 0; // + : a positive number
+            }
+            else
+            {
+                pDataLog[i*4+1] = 1; // - : a negative number
+            }
+
+            pDataLog[i*4+2] = nHighByte;
+            pDataLog[i*4+3] = nLowByte;
+        }
+
+        for (i = 0; i < MAX_CHANNEL_NUM; i ++)
+        {
+            nHighByte = (_gRawData2[i] >> 8) & 0xFF;
+            nLowByte = (_gRawData2[i]) & 0xFF;
+        
+            if (_gDataFlag2[i] == 1)
+            {
+                pDataLog[i*4+MAX_CHANNEL_NUM*4] = 1; // indicate it is a on-use channel number
+            }
+            else
+            {
+                pDataLog[i*4+MAX_CHANNEL_NUM*4] = 0; // indicate it is a non-use channel number
+            }
+
+            if (_gRawData2[i] >= 0)
+            {
+                pDataLog[(i*4+1)+MAX_CHANNEL_NUM*4] = 0; // + : a positive number
+            }
+            else
+            {
+                pDataLog[(i*4+1)+MAX_CHANNEL_NUM*4] = 1; // - : a negative number
+            }
+
+            pDataLog[(i*4+2)+MAX_CHANNEL_NUM*4] = nHighByte;
+            pDataLog[(i*4+3)+MAX_CHANNEL_NUM*4] = nLowByte;
+        }
+
+        *pLength = MAX_CHANNEL_NUM*8;
+    }
+    else if (eItoTestMode == ITO_TEST_MODE_SHORT_TEST)
+    {
+        for (i = 0; i < MAX_CHANNEL_NUM; i ++)
+        {
+            nHighByte = (_gRawData1[i] >> 8) & 0xFF;
+            nLowByte = (_gRawData1[i]) & 0xFF;
+
+            if (_gDataFlag1[i] == 1)
+            {
+                pDataLog[i*4] = 1; // indicate it is a on-use channel number
+            }
+            else
+            {
+                pDataLog[i*4] = 0; // indicate it is a non-use channel number
+            }
+
+            if (_gRawData1[i] >= 0)
+            {
+                pDataLog[i*4+1] = 0; // + : a positive number
+            }
+            else
+            {
+                pDataLog[i*4+1] = 1; // - : a negative number
+            }
+
+            pDataLog[i*4+2] = nHighByte;
+            pDataLog[i*4+3] = nLowByte;
+        }
+
+        for (i = 0; i < MAX_CHANNEL_NUM; i ++)
+        {
+            nHighByte = (_gRawData2[i] >> 8) & 0xFF;
+            nLowByte = (_gRawData2[i]) & 0xFF;
+        
+            if (_gDataFlag2[i] == 1)
+            {
+                pDataLog[i*4+MAX_CHANNEL_NUM*4] = 1; // indicate it is a on-use channel number
+            }
+            else
+            {
+                pDataLog[i*4+MAX_CHANNEL_NUM*4] = 0; // indicate it is a non-use channel number
+            }
+
+            if (_gRawData2[i] >= 0)
+            {
+                pDataLog[(i*4+1)+MAX_CHANNEL_NUM*4] = 0; // + : a positive number
+            }
+            else
+            {
+                pDataLog[(i*4+1)+MAX_CHANNEL_NUM*4] = 1; // - : a negative number
+            }
+
+            pDataLog[i*4+2+MAX_CHANNEL_NUM*4] = nHighByte;
+            pDataLog[i*4+3+MAX_CHANNEL_NUM*4] = nLowByte;
+        }
+
+        for (i = 0; i < MAX_CHANNEL_NUM; i ++)
+        {
+            nHighByte = (_gRawData3[i] >> 8) & 0xFF;
+            nLowByte = (_gRawData3[i]) & 0xFF;
+        
+            if (_gDataFlag3[i] == 1)
+            {
+                pDataLog[i*4+MAX_CHANNEL_NUM*8] = 1; // indicate it is a on-use channel number
+            }
+            else
+            {
+                pDataLog[i*4+MAX_CHANNEL_NUM*8] = 0; // indicate it is a non-use channel number
+            }
+
+            if (_gRawData3[i] >= 0)
+            {
+                pDataLog[(i*4+1)+MAX_CHANNEL_NUM*8] = 0; // + : a positive number
+            }
+            else
+            {
+                pDataLog[(i*4+1)+MAX_CHANNEL_NUM*8] = 1; // - : a negative number
+            }
+
+            pDataLog[(i*4+2)+MAX_CHANNEL_NUM*8] = nHighByte;
+            pDataLog[(i*4+3)+MAX_CHANNEL_NUM*8] = nLowByte;
+        }
+
+        if (_gIsEnable2R)
+        {
+            for (i = 0; i < MAX_CHANNEL_NUM; i ++)
+            {
+                nHighByte = (_gRawData4[i] >> 8) & 0xFF;
+                nLowByte = (_gRawData4[i]) & 0xFF;
+        
+                if (_gDataFlag4[i] == 1)
+                {
+                    pDataLog[i*4+MAX_CHANNEL_NUM*12] = 1; // indicate it is a on-use channel number
+                }
+                else
+                {
+                    pDataLog[i*4+MAX_CHANNEL_NUM*12] = 0; // indicate it is a non-use channel number
+                }
+
+                if (_gRawData4[i] >= 0)
+                {
+                    pDataLog[(i*4+1)+MAX_CHANNEL_NUM*12] = 0; // + : a positive number
+                }
+                else
+                {
+                    pDataLog[(i*4+1)+MAX_CHANNEL_NUM*12] = 1; // - : a negative number
+                }
+
+                pDataLog[(i*4+2)+MAX_CHANNEL_NUM*12] = nHighByte;
+                pDataLog[(i*4+3)+MAX_CHANNEL_NUM*12] = nLowByte;
+            }
+        }
+        
+        *pLength = MAX_CHANNEL_NUM*16;
+    }
+    else 
+    {
+        DBG("*** Undefined MP Test Mode ***\n");
+    }
+}
+
+void DrvMpTestScheduleMpTestWork(ItoTestMode_e eItoTestMode)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    if (_gIsInMpTest == 0)
+    {
+        DBG("ctp mp test start\n");
+        
+        _gItoTestMode = eItoTestMode;
+        _gIsInMpTest = 1;
+        _gTestRetryCount = CTP_MP_TEST_RETRY_COUNT;
+        _gCtpMpTestStatus = ITO_TEST_UNDER_TESTING;
+        
+        queue_work(_gCtpMpTestWorkQueue, &_gCtpItoTestWork);
+    }
+}
+
+void DrvMpTestCreateMpTestWorkQueue(void)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    _gCtpMpTestWorkQueue = create_singlethread_workqueue("ctp_mp_test");
+    INIT_WORK(&_gCtpItoTestWork, _DrvMpTestItoTestDoWork);
+}
+
+#endif //CONFIG_ENABLE_ITO_MP_TEST
+
Index: kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_ic_fw_porting_layer.c
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_ic_fw_porting_layer.c	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_ic_fw_porting_layer.c	(revision 182225)
@@ -0,0 +1,195 @@
+////////////////////////////////////////////////////////////////////////////////
+//
+// Copyright (c) 2006-2012 MStar Semiconductor, Inc.
+// All rights reserved.
+//
+// Unless otherwise stipulated in writing, any and all information contained
+// herein regardless in any format shall remain the sole proprietary of
+// MStar Semiconductor Inc. and be kept in strict confidence
+// (??MStar Confidential Information??) by the recipient.
+// Any unauthorized act including without limitation unauthorized disclosure,
+// copying, use, reproduction, sale, distribution, modification, disassembling,
+// reverse engineering and compiling of the contents of MStar Confidential
+// Information is unlawful and strictly prohibited. MStar hereby reserves the
+// rights to any and all damages, losses, costs and expenses resulting therefrom.
+//
+////////////////////////////////////////////////////////////////////////////////
+
+/**
+ *
+ * @file    mstar_drv_ic_fw_porting_layer.c
+ *
+ * @brief   This file defines the interface of touch screen
+ *
+ * @version v2.2.0.0
+ *
+ */
+ 
+/*=============================================================*/
+// INCLUDE FILE
+/*=============================================================*/
+
+#include "mstar_drv_ic_fw_porting_layer.h"
+
+
+/*=============================================================*/
+// EXTERN VARIABLE DECLARATION
+/*=============================================================*/
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+extern u16 g_GestureWakeupMode;
+extern u8 g_GestureWakeupFlag;
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+
+/*=============================================================*/
+// GLOBAL FUNCTION DEFINITION
+/*=============================================================*/
+
+u8 DrvIcFwLyrGetChipType(void)
+{
+//    DBG("*** %s() ***\n", __func__);
+
+    return DrvFwCtrlGetChipType();
+}
+
+void DrvIcFwLyrGetCustomerFirmwareVersion(u16 *pMajor, u16 *pMinor, u8 **ppVersion)
+{
+//    DBG("*** %s() ***\n", __func__);
+
+    DrvFwCtrlGetCustomerFirmwareVersion(pMajor, pMinor, ppVersion);
+}
+
+void DrvIcFwLyrGetPlatformFirmwareVersion(u8 **ppVersion)
+{
+//    DBG("*** %s() ***\n", __func__);
+
+    DrvFwCtrlGetPlatformFirmwareVersion(ppVersion);
+}
+
+s32 DrvIcFwLyrUpdateFirmware(u8 szFwData[][1024], EmemType_e eEmemType)
+{
+//    DBG("*** %s() ***\n", __func__);
+
+    return DrvFwCtrlUpdateFirmware(szFwData, eEmemType);
+}	
+
+u32 DrvIcFwLyrIsRegisterFingerTouchInterruptHandler(void)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    return 1; // Indicate that it is necessary to register interrupt handler with GPIO INT pin when firmware is running on IC
+}
+
+void DrvIcFwLyrHandleFingerTouch(u8 *pPacket, u16 nLength)
+{
+//    DBG("*** %s() ***\n", __func__);
+
+    DrvFwCtrlHandleFingerTouch();
+}
+
+//------------------------------------------------------------------------------//
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+
+void DrvIcFwLyrOpenGestureWakeup(u16 nWakeupMode)
+{
+//    DBG("*** %s() ***\n", __func__);
+
+    DrvFwCtrlOpenGestureWakeup(nWakeupMode);
+}	
+
+void DrvIcFwLyrCloseGestureWakeup(void)
+{
+//    DBG("*** %s() ***\n", __func__);
+
+    DrvFwCtrlCloseGestureWakeup();
+}	
+
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+
+//------------------------------------------------------------------------------//
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+#if defined(CONFIG_ENABLE_CHIP_MSG26XXM)
+u16 DrvIcFwLyrGetFirmwareMode(void)
+{
+//    DBG("*** %s() ***\n", __func__);
+
+    return DrvFwCtrlGetFirmwareMode();
+}
+#endif //CONFIG_ENABLE_CHIP_MSG26XXM
+
+u16 DrvIcFwLyrChangeFirmwareMode(u16 nMode)
+{
+//    DBG("*** %s() ***\n", __func__);
+
+    return DrvFwCtrlChangeFirmwareMode(nMode); 
+}
+
+void DrvIcFwLyrGetFirmwareInfo(FirmwareInfo_t *pInfo)
+{
+//    DBG("*** %s() ***\n", __func__);
+
+    DrvFwCtrlGetFirmwareInfo(pInfo);
+}
+
+void DrvIcFwLyrRestoreFirmwareModeToLogDataMode(void)
+{
+//    DBG("*** %s() ***\n", __func__);
+
+    DrvFwCtrlRestoreFirmwareModeToLogDataMode();
+}	
+
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+//------------------------------------------------------------------------------//
+
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+void DrvIcFwLyrCheckFirmwareUpdateBySwId(void)
+{
+//    DBG("*** %s() ***\n", __func__);
+
+    DrvFwCtrlCheckFirmwareUpdateBySwId();
+}
+#endif //CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+
+//------------------------------------------------------------------------------//
+
+#ifdef CONFIG_ENABLE_ITO_MP_TEST
+
+void DrvIcFwLyrCreateMpTestWorkQueue(void)
+{
+//    DBG("*** %s() ***\n", __func__);
+	
+    DrvMpTestCreateMpTestWorkQueue();
+}
+
+void DrvIcFwLyrScheduleMpTestWork(ItoTestMode_e eItoTestMode)
+{
+//    DBG("*** %s() ***\n", __func__);
+	
+    DrvMpTestScheduleMpTestWork(eItoTestMode);
+}
+
+s32 DrvIcFwLyrGetMpTestResult(void)
+{
+//    DBG("*** %s() ***\n", __func__);
+	
+    return DrvMpTestGetTestResult();
+}
+
+void DrvIcFwLyrGetMpTestFailChannel(ItoTestMode_e eItoTestMode, u8 *pFailChannel, u32 *pFailChannelCount)
+{
+//    DBG("*** %s() ***\n", __func__);
+	
+    return DrvMpTestGetTestFailChannel(eItoTestMode, pFailChannel, pFailChannelCount);
+}
+
+void DrvIcFwLyrGetMpTestDataLog(ItoTestMode_e eItoTestMode, u8 *pDataLog, u32 *pLength)
+{
+//    DBG("*** %s() ***\n", __func__);
+
+    return DrvMpTestGetTestDataLog(eItoTestMode, pDataLog, pLength);
+}
+#endif //CONFIG_ENABLE_ITO_MP_TEST		
\ No newline at end of file
Index: kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_self_fw_control.c
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_self_fw_control.c	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_self_fw_control.c	(revision 182225)
@@ -0,0 +1,4032 @@
+////////////////////////////////////////////////////////////////////////////////
+//
+// Copyright (c) 2006-2012 MStar Semiconductor, Inc.
+// All rights reserved.
+//
+// Unless otherwise stipulated in writing, any and all information contained
+// herein regardless in any format shall remain the sole proprietary of
+// MStar Semiconductor Inc. and be kept in strict confidence
+// (??MStar Confidential Information??) by the recipient.
+// Any unauthorized act including without limitation unauthorized disclosure,
+// copying, use, reproduction, sale, distribution, modification, disassembling,
+// reverse engineering and compiling of the contents of MStar Confidential
+// Information is unlawful and strictly prohibited. MStar hereby reserves the
+// rights to any and all damages, losses, costs and expenses resulting therefrom.
+//
+////////////////////////////////////////////////////////////////////////////////
+
+/**
+ *
+ * @file    mstar_drv_self_fw_control.c
+ *
+ * @brief   This file defines the interface of touch screen
+ *
+ * @version v2.2.0.0
+ *
+ */
+ 
+/*=============================================================*/
+// INCLUDE FILE
+/*=============================================================*/
+
+#include "mstar_drv_self_fw_control.h"
+#include "mstar_drv_utility_adaption.h"
+#include "mstar_drv_platform_porting_layer.h"
+
+/*=============================================================*/
+// EXTERN VARIABLE DECLARATION
+/*=============================================================*/
+static const int g_TpVirtualKeyDimLocal[3][4] = { {580,1350,70,70},    // virtualkey 1 MENU
+                                                                                {360,1350,70,70},    // virtualkey 4  HOME
+                                                                                {160,1350,70,70} }; // virtualkey 2  BACK
+
+struct point_node_t point_slot[MAX_FINGER_NUM*2];
+static int keycode;
+
+extern struct input_dev *g_InputDevice;
+
+extern u8 g_FwData[94][1024];
+extern u32 g_FwDataCount;
+
+extern struct mutex g_Mutex;
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+extern struct kobject *g_TouchKObj;
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+/*=============================================================*/
+// LOCAL VARIABLE DEFINITION
+/*=============================================================*/
+
+static u8 _gTpVendorCode[3] = {0};
+
+static u8 _gDwIicInfoData[1024];
+static u8 _gOneDimenFwData[MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE*1024+MSG22XX_FIRMWARE_INFO_BLOCK_SIZE] = {0}; // used for MSG22XX
+
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+/*
+ * Note.
+ * Please modify the name of the below .h depends on the vendor TP that you are using.
+ */
+static unsigned char msg2xxx_yyyy_update_bin[] = {
+#include "msg2xxx_yyyy_update_bin.h"
+};
+static unsigned char msg2xxx_xxxx_update_bin[] = {
+#include "msg2xxx_xxxx_update_bin.h"
+};
+
+static u32 _gUpdateRetryCount = UPDATE_FIRMWARE_RETRY_COUNT;
+static struct work_struct _gUpdateFirmwareBySwIdWork;
+static struct workqueue_struct *_gUpdateFirmwareBySwIdWorkQueue = NULL;
+
+static u32 _gIsUpdateInfoBlockFirst = 0;
+static u8 _gIsUpdateFirmware = 0x00;
+
+#endif //CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+static u16 _gGestureWakeupValue = 0;
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+
+
+/*=============================================================*/
+// GLOBAL VARIABLE DEFINITION
+/*=============================================================*/
+
+u8 g_ChipType = 0;
+u8 g_DemoModePacket[DEMO_MODE_PACKET_LENGTH] = {0};
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+FirmwareInfo_t g_FirmwareInfo;
+
+u8 *g_LogModePacket = NULL;
+u16 g_FirmwareMode = FIRMWARE_MODE_DEMO_MODE; 
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+u8 *_gGestureWakeupPacket = NULL;
+
+u16 g_GestureWakeupMode = 0x0000;
+u8 g_GestureWakeupFlag = 0;
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+
+/*=============================================================*/
+// LOCAL FUNCTION DECLARATION
+/*=============================================================*/
+
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+static void _DrvFwCtrlUpdateFirmwareBySwIdDoWork(struct work_struct *pWork);
+#endif //CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+
+/*=============================================================*/
+// LOCAL FUNCTION DEFINITION
+/*=============================================================*/
+
+unsigned char tpd_check_sum(unsigned char *pval)
+{
+    int i, sum = 0;
+    for(i = 0; i < 7; i++)
+        sum += pval[i];
+    return (unsigned char)((-sum) & 0xFF);
+}
+
+static void _DrvFwCtrlEraseEmemC32(void)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    /////////////////////////
+    //Erase  all
+    /////////////////////////
+    
+    // Enter gpio mode
+    RegSet16BitValue(0x161E, 0xBEAF);
+
+    // Before gpio mode, set the control pin as the orginal status
+    RegSet16BitValue(0x1608, 0x0000);
+    RegSetLByteValue(0x160E, 0x10);
+//    mdelay(10); 
+    msleep(10);
+
+    // ptrim = 1, h'04[2]
+    RegSetLByteValue(0x1608, 0x04);
+    RegSetLByteValue(0x160E, 0x10);
+//    mdelay(10); 
+    msleep(10);
+
+    // ptm = 6, h'04[12:14] = b'110
+    RegSetLByteValue(0x1609, 0x60);
+    RegSetLByteValue(0x160E, 0x10);
+
+    // pmasi = 1, h'04[6]
+    RegSetLByteValue(0x1608, 0x44);
+    // pce = 1, h'04[11]
+    RegSetLByteValue(0x1609, 0x68);
+    // perase = 1, h'04[7]
+    RegSetLByteValue(0x1608, 0xC4);
+    // pnvstr = 1, h'04[5]
+    RegSetLByteValue(0x1608, 0xE4);
+    // pwe = 1, h'04[9]
+    RegSetLByteValue(0x1609, 0x6A);
+    // trigger gpio load
+    RegSetLByteValue(0x160E, 0x10);
+}
+
+static void _DrvFwCtrlEraseEmemC33(EmemType_e eEmemType)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    // Stop mcu
+    RegSet16BitValue(0x0FE6, 0x0001);
+
+    // Disable watchdog
+    RegSetLByteValue(0x3C60, 0x55);
+    RegSetLByteValue(0x3C61, 0xAA);
+
+    // Set PROGRAM password
+    RegSetLByteValue(0x161A, 0xBA);
+    RegSetLByteValue(0x161B, 0xAB);
+
+    // Clear pce
+    RegSetLByteValue(0x1618, 0x80);
+
+    if (eEmemType == EMEM_ALL)
+    {
+        RegSetLByteValue(0x1608, 0x10); //mark
+    }
+
+    RegSetLByteValue(0x1618, 0x40);
+//    mdelay(10);
+    msleep(10);
+
+    RegSetLByteValue(0x1618, 0x80);
+
+    // erase trigger
+    if (eEmemType == EMEM_MAIN)
+    {
+        RegSetLByteValue(0x160E, 0x04); //erase main
+    }
+    else
+    {
+        RegSetLByteValue(0x160E, 0x08); //erase all block
+    }
+}
+
+static void _DrvFwCtrlMsg22xxGetTpVendorCode(u8 *pTpVendorCode)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    if (g_ChipType == CHIP_TYPE_MSG22XX)
+    {
+        u16 nRegData1, nRegData2;
+
+        DrvPlatformLyrTouchDeviceResetHw();
+    
+        DbBusEnterSerialDebugMode();
+        DbBusStopMCU();
+        DbBusIICUseBus();
+        DbBusIICReshape();
+//        mdelay(100);
+	msleep(100);
+        
+        // Stop mcu
+        RegSetLByteValue(0x0FE6, 0x01); 
+
+        // Stop watchdog
+        RegSet16BitValue(0x3C60, 0xAA55);
+
+        // RIU password
+        RegSet16BitValue(0x161A, 0xABBA); 
+
+        // Clear pce
+        RegSet16BitValue(0x1618, (RegGet16BitValue(0x1618) | 0x80));
+
+        RegSet16BitValue(0x1600, 0xC1E9); // Set start address for tp vendor code on info block(Actually, start reading from 0xC1E8)
+    
+        // Enable burst mode
+//        RegSet16BitValue(0x160C, (RegGet16BitValue(0x160C) | 0x01));
+
+        // Set pce
+        RegSet16BitValue(0x1618, (RegGet16BitValue(0x1618) | 0x40)); 
+    
+        RegSetLByteValue(0x160E, 0x01); 
+
+        nRegData1 = RegGet16BitValue(0x1604);
+        nRegData2 = RegGet16BitValue(0x1606);
+
+        pTpVendorCode[0] = ((nRegData1 >> 8) & 0xFF);
+        pTpVendorCode[1] = (nRegData2 & 0xFF);
+        pTpVendorCode[2] = ((nRegData2 >> 8) & 0xFF);
+
+        DBG("pTpVendorCode[0] = 0x%x , %c \n", pTpVendorCode[0], pTpVendorCode[0]); 
+        DBG("pTpVendorCode[1] = 0x%x , %c \n", pTpVendorCode[1], pTpVendorCode[1]); 
+        DBG("pTpVendorCode[2] = 0x%x , %c \n", pTpVendorCode[2], pTpVendorCode[2]); 
+        
+        // Clear burst mode
+//        RegSet16BitValue(0x160C, RegGet16BitValue(0x160C) & (~0x01));      
+
+        RegSet16BitValue(0x1600, 0x0000); 
+
+        // Clear RIU password
+        RegSet16BitValue(0x161A, 0x0000); 
+
+        DbBusIICNotUseBus();
+        DbBusNotStopMCU();
+        DbBusExitSerialDebugMode();
+
+        DrvPlatformLyrTouchDeviceResetHw();
+//        mdelay(100);
+	msleep(100);
+    }
+}
+
+static void _DrvFwCtrlMsg22xxEraseEmem(EmemType_e eEmemType)
+{
+    u32 i;
+    u16 nRegData = 0;
+    
+    DBG("*** %s() eEmemType = %d ***\n", __func__, eEmemType);
+
+    DbBusEnterSerialDebugMode();
+    DbBusStopMCU();
+    DbBusIICUseBus();
+    DbBusIICReshape();
+
+    DBG("Erase start\n");
+
+    // Stop mcu
+    RegSet16BitValue(0x0FE6, 0x0001);
+
+    // Disable watchdog
+    RegSetLByteValue(0x3C60, 0x55);
+    RegSetLByteValue(0x3C61, 0xAA);
+
+    // Set PROGRAM password
+    RegSetLByteValue(0x161A, 0xBA);
+    RegSetLByteValue(0x161B, 0xAB);
+
+    if (eEmemType == EMEM_ALL) // 48KB + 512Byte
+    {
+        DBG("Erase all block\n");
+
+        // Clear pce
+        RegSetLByteValue(0x1618, 0x80);
+//        mdelay(100);
+	msleep(100);
+
+        // Chip erase
+        RegSet16BitValue(0x160E, BIT3);
+
+        DBG("Wait erase done flag\n");
+
+        do // Wait erase done flag
+        {
+            nRegData = RegGet16BitValue(0x1610); // Memory status
+//            mdelay(50);
+	    msleep(50);
+        } while((nRegData & BIT1) != BIT1);
+    }
+    else if (eEmemType == EMEM_MAIN) // 48KB (32+8+8)
+    {
+        DBG("Erase main block\n");
+
+        for (i = 0; i < 3; i ++)
+        {
+            // Clear pce
+            RegSetLByteValue(0x1618, 0x80);
+//            mdelay(10);
+	    msleep(10);
+
+            if (i == 0)
+            {
+                RegSet16BitValue(0x1600, 0x0000);
+            }
+            else if (i == 1)
+            {
+                RegSet16BitValue(0x1600, 0x8000);
+            }
+            else if (i == 2)
+            {
+                RegSet16BitValue(0x1600, 0xA000);
+            }
+
+            // Sector erase
+            RegSet16BitValue(0x160E, (RegGet16BitValue(0x160E) | BIT2));
+
+            DBG("Wait erase done flag\n");
+
+            do // Wait erase done flag
+            {
+                nRegData = RegGet16BitValue(0x1610); // Memory status
+//                mdelay(50);
+		msleep(50);
+            } while((nRegData & BIT1) != BIT1);
+        }   
+    }
+    else if (eEmemType == EMEM_INFO) // 512Byte
+    {
+        DBG("Erase info block\n");
+
+        // Clear pce
+        RegSetLByteValue(0x1618, 0x80);
+//        mdelay(10);
+	msleep(10);
+
+        RegSet16BitValue(0x1600, 0xC000);
+        
+        // Sector erase
+        RegSet16BitValue(0x160E, (RegGet16BitValue(0x160E) | BIT2));
+
+        DBG("Wait erase done flag\n");
+
+        do // Wait erase done flag
+        {
+            nRegData = RegGet16BitValue(0x1610); // Memory status
+//            mdelay(50);
+	    msleep(50);
+        } while((nRegData & BIT1) != BIT1);
+    }
+    
+    DBG("Erase end\n");
+    
+    DbBusIICNotUseBus();
+    DbBusNotStopMCU();
+    DbBusExitSerialDebugMode();
+}
+
+static void _DrvFwCtrlMsg22xxProgramEmem(EmemType_e eEmemType) // For MSG22XX
+{
+    u32 i, j; 
+    u32 nRemainSize = 0, nBlockSize = 0, nSize = 0, index = 0;
+    u16 nRegData;
+    u8 szDbBusTxData[1024] = {0};
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+    u32 nSizePerWrite = 125;
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM)
+    u32 nSizePerWrite = 1021;
+#endif
+
+    DBG("*** %s() eEmemType = %d ***\n", __func__, eEmemType);
+
+#ifdef CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+#ifdef CONFIG_ENABLE_DMA_IIC
+    DmaAlloc();
+#endif //CONFIG_ENABLE_DMA_IIC
+#endif //CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+
+    DbBusEnterSerialDebugMode();
+    DbBusStopMCU();
+    DbBusIICUseBus();
+    DbBusIICReshape();
+
+    // Hold reset pin before program
+    RegSetLByteValue(0x1E06, 0x00);
+
+    DBG("Program start\n");
+
+    RegSet16BitValue(0x161A, 0xABBA);
+    RegSet16BitValue(0x1618, (RegGet16BitValue(0x1618) | 0x80));
+
+    if (eEmemType == EMEM_MAIN)
+    {
+        DBG("Program main block\n");
+
+        RegSet16BitValue(0x1600, 0x0000); // Set start address of main block
+        nRemainSize = MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE * 1024; //48KB
+        index = 0;
+    }
+    else if (eEmemType == EMEM_INFO)
+    {
+        DBG("Program info block\n");
+
+        RegSet16BitValue(0x1600, 0xC000); // Set start address of info block
+        nRemainSize = MSG22XX_FIRMWARE_INFO_BLOCK_SIZE; //512Byte
+        index = MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE * 1024;
+    }
+    else
+    {
+        DBG("eEmemType = %d is not supported for program e-memory.\n", eEmemType);
+        return;
+    }
+
+    RegSet16BitValue(0x160C, (RegGet16BitValue(0x160C) | 0x01)); // Enable burst mode
+
+    // Program start
+    szDbBusTxData[0] = 0x10;
+    szDbBusTxData[1] = 0x16;
+    szDbBusTxData[2] = 0x02;
+
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 3);    
+
+    szDbBusTxData[0] = 0x20;
+
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 1);    
+
+    i = 0;
+    
+    while (nRemainSize > 0)
+    {
+        if (nRemainSize > nSizePerWrite)
+        {
+            nBlockSize = nSizePerWrite;
+        }
+        else
+        {
+            nBlockSize = nRemainSize;
+        }
+
+        szDbBusTxData[0] = 0x10;
+        szDbBusTxData[1] = 0x16;
+        szDbBusTxData[2] = 0x02;
+
+        nSize = 3;
+
+        for (j = 0; j < nBlockSize; j ++)
+        {
+            szDbBusTxData[3+j] = _gOneDimenFwData[index+(i*nSizePerWrite)+j];
+            nSize ++; 
+        }
+        i ++;
+
+        IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], nSize);
+
+        nRemainSize = nRemainSize - nBlockSize;
+    }
+
+    // Program end
+    szDbBusTxData[0] = 0x21;
+
+    IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 1);    
+
+    nRegData = RegGet16BitValue(0x160C); 
+    RegSet16BitValue(0x160C, nRegData & (~0x01));      
+
+    DBG("Wait write done flag\n");
+
+    // Polling 0x1610 is 0x0002
+    do
+    {
+        nRegData = RegGet16BitValue(0x1610);
+        nRegData = nRegData & BIT1;
+//        mdelay(10);
+	msleep(10);
+
+    } while (nRegData != BIT1); // Wait write done flag
+
+    DBG("Program end\n");
+
+    DbBusIICNotUseBus();
+    DbBusNotStopMCU();
+    DbBusExitSerialDebugMode();
+
+#ifdef CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+#ifdef CONFIG_ENABLE_DMA_IIC
+    DmaFree();
+#endif //CONFIG_ENABLE_DMA_IIC
+#endif //CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+}
+
+static u32 _DrvFwCtrlMsg22xxGetFirmwareCrcByHardware(EmemType_e eEmemType) // For MSG22XX
+{
+    u16 nCrcDown = 0;
+    u32 nRetVal = 0; 
+
+    DBG("*** %s() eEmemType = %d ***\n", __func__, eEmemType);
+
+    DbBusEnterSerialDebugMode();
+    DbBusStopMCU();
+    DbBusIICUseBus();
+    DbBusIICReshape();
+//    mdelay(100);
+    msleep(100);
+
+    // RIU password
+    RegSet16BitValue(0x161A, 0xABBA);      
+
+    // Set PCE high
+    RegSetLByteValue(0x1618, 0x40);      
+
+    if (eEmemType == EMEM_MAIN)
+    {
+        // Set start address and end address for main block
+        RegSet16BitValue(0x1600, 0x0000);      
+        RegSet16BitValue(0x1640, 0xBFF8);      
+    }
+    else if (eEmemType == EMEM_INFO)
+    {
+        // Set start address and end address for info block
+        RegSet16BitValue(0x1600, 0xC000);      
+        RegSet16BitValue(0x1640, 0xC1F8);      
+    }
+
+    // CRC reset
+    RegSet16BitValue(0x164E, 0x0001);      
+
+    RegSet16BitValue(0x164E, 0x0000);   
+    
+    // Trigger CRC check
+    RegSetLByteValue(0x160E, 0x20);   
+//    mdelay(10);
+    msleep(10);
+       
+    nCrcDown = RegGet16BitValue(0x164E);
+    
+    while (nCrcDown != 2)
+    {
+        DBG("Wait CRC down\n");
+//        mdelay(10);
+	msleep(10);
+        nCrcDown = RegGet16BitValue(0x164E);
+    }
+
+    nRetVal = RegGet16BitValue(0x1652);
+    nRetVal = (nRetVal << 16) | RegGet16BitValue(0x1650);
+
+    DBG("Hardware CRC = 0x%x\n", nRetVal);
+
+    DbBusIICNotUseBus();
+    DbBusNotStopMCU();
+    DbBusExitSerialDebugMode();
+
+    return nRetVal;	
+}
+
+static void _DrvFwCtrlMsg22xxConvertFwDataTwoDimenToOneDimen(u8 szTwoDimenFwData[][1024], u8* pOneDimenFwData)
+{
+    u32 i, j;
+
+    DBG("*** %s() ***\n", __func__);
+
+    for (i = 0; i < (MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE+1); i ++)
+    {
+        if (i < MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE) // i < 48
+        {
+            for (j = 0; j < 1024; j ++)
+            {
+                pOneDimenFwData[i*1024+j] = szTwoDimenFwData[i][j];
+            }
+        }
+        else // i == 48
+        {
+            for (j = 0; j < 512; j ++)
+            {
+                pOneDimenFwData[i*1024+j] = szTwoDimenFwData[i][j];
+            }
+        }
+    }
+}
+
+static s32 _DrvFwCtrlParsePacket(u8 *pPacket, u16 nLength, TouchInfo_t *pInfo)
+{
+    u8 nCheckSum = 0;
+    u32 nDeltaX = 0, nDeltaY = 0;
+    u32 nX = 0;
+    u32 nY = 0;
+#ifdef CONFIG_SWAP_X_Y
+    u32 nTempX;
+    u32 nTempY;
+#endif
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+    u8 nCheckSumIndex = 0;
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+    DBG("*** %s() ***\n", __func__);
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+    if (g_FirmwareMode == FIRMWARE_MODE_DEMO_MODE)
+    {
+        nCheckSumIndex = 7;
+    }
+    else if (g_FirmwareMode == FIRMWARE_MODE_DEBUG_MODE || g_FirmwareMode == FIRMWARE_MODE_RAW_DATA_MODE)
+    {
+        nCheckSumIndex = 31;
+    }
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+    if (g_GestureWakeupFlag == 1)
+    {
+        nCheckSumIndex = nLength-1;
+    }
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+    
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+    nCheckSum = DrvCommonCalculateCheckSum(&pPacket[0], nCheckSumIndex);
+    DBG("check sum : [%x] == [%x]? \n", pPacket[nCheckSumIndex], nCheckSum);
+#else
+    nCheckSum = DrvCommonCalculateCheckSum(&pPacket[0], (nLength-1));
+    DBG("check ksum : [%x] == [%x]? \n", pPacket[nLength-1], nCheckSum);
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+    if (g_GestureWakeupFlag == 1)
+    {
+        u8 nWakeupMode = 0;
+        u8 bIsCorrectFormat = 0;
+
+        DBG("received raw data from touch panel as following:\n");
+        DBG("pPacket[0]=%x \n pPacket[1]=%x pPacket[2]=%x pPacket[3]=%x pPacket[4]=%x pPacket[5]=%x \n", \
+            pPacket[0], pPacket[1], pPacket[2], pPacket[3], pPacket[4], pPacket[5]);
+
+        if (g_ChipType == CHIP_TYPE_MSG22XX && pPacket[0] == 0xA7 && pPacket[1] == 0x00 && pPacket[2] == 0x06 && pPacket[3] == 0x50)
+        {
+            nWakeupMode = pPacket[4];
+            bIsCorrectFormat = 1;
+        } 
+        else if (g_ChipType == CHIP_TYPE_MSG21XXA && pPacket[0] == 0x52 && pPacket[1] == 0xFF && pPacket[2] == 0xFF && pPacket[3] == 0xFF && pPacket[4] == 0xFF && pPacket[6] == 0xFF)
+        {
+            nWakeupMode = pPacket[5];
+            bIsCorrectFormat = 1;
+        }
+        
+        if (bIsCorrectFormat) 
+        {
+            DBG("nWakeupMode = 0x%x\n", nWakeupMode);
+
+            switch (nWakeupMode)
+            {
+                case 0x58:
+                    _gGestureWakeupValue = GESTURE_WAKEUP_MODE_DOUBLE_CLICK_FLAG;
+
+                    DBG("Light up screen by DOUBLE_CLICK gesture wakeup.\n");
+
+                    input_report_key(g_InputDevice, KEY_POWER, 1);
+                    input_sync(g_InputDevice);
+                    input_report_key(g_InputDevice, KEY_POWER, 0);
+                    input_sync(g_InputDevice);
+                    break;		
+                case 0x60:
+                    _gGestureWakeupValue = GESTURE_WAKEUP_MODE_UP_DIRECT_FLAG;
+                    
+                    DBG("Light up screen by UP_DIRECT gesture wakeup.\n");
+
+//                    input_report_key(g_InputDevice, KEY_UP, 1);
+                    input_report_key(g_InputDevice, KEY_POWER, 1);
+                    input_sync(g_InputDevice);
+//                    input_report_key(g_InputDevice, KEY_UP, 0);
+                    input_report_key(g_InputDevice, KEY_POWER, 0);
+                    input_sync(g_InputDevice);
+                    break;		
+                case 0x61:
+                    _gGestureWakeupValue = GESTURE_WAKEUP_MODE_DOWN_DIRECT_FLAG;
+
+                    DBG("Light up screen by DOWN_DIRECT gesture wakeup.\n");
+
+//                    input_report_key(g_InputDevice, KEY_DOWN, 1);
+                    input_report_key(g_InputDevice, KEY_POWER, 1);
+                    input_sync(g_InputDevice);
+//                    input_report_key(g_InputDevice, KEY_DOWN, 0);
+                    input_report_key(g_InputDevice, KEY_POWER, 0);
+                    input_sync(g_InputDevice);
+                    break;		
+                case 0x62:
+                    _gGestureWakeupValue = GESTURE_WAKEUP_MODE_LEFT_DIRECT_FLAG;
+
+                    DBG("Light up screen by LEFT_DIRECT gesture wakeup.\n");
+
+//                  input_report_key(g_InputDevice, KEY_LEFT, 1);
+                    input_report_key(g_InputDevice, KEY_POWER, 1);
+                    input_sync(g_InputDevice);
+//                    input_report_key(g_InputDevice, KEY_LEFT, 0);
+                    input_report_key(g_InputDevice, KEY_POWER, 0);
+                    input_sync(g_InputDevice);
+                    break;		
+                case 0x63:
+                    _gGestureWakeupValue = GESTURE_WAKEUP_MODE_RIGHT_DIRECT_FLAG;
+
+                    DBG("Light up screen by RIGHT_DIRECT gesture wakeup.\n");
+
+//                    input_report_key(g_InputDevice, KEY_RIGHT, 1);
+                    input_report_key(g_InputDevice, KEY_POWER, 1);
+                    input_sync(g_InputDevice);
+//                    input_report_key(g_InputDevice, KEY_RIGHT, 0);
+                    input_report_key(g_InputDevice, KEY_POWER, 0);
+                    input_sync(g_InputDevice);
+                    break;		
+                case 0x64:
+                    _gGestureWakeupValue = GESTURE_WAKEUP_MODE_m_CHARACTER_FLAG;
+
+                    DBG("Light up screen by m_CHARACTER gesture wakeup.\n");
+
+//                    input_report_key(g_InputDevice, KEY_M, 1);
+                    input_report_key(g_InputDevice, KEY_POWER, 1);
+                    input_sync(g_InputDevice);
+//                    input_report_key(g_InputDevice, KEY_M, 0);
+                    input_report_key(g_InputDevice, KEY_POWER, 0);
+                    input_sync(g_InputDevice);
+                    break;		
+                case 0x65:
+                    _gGestureWakeupValue = GESTURE_WAKEUP_MODE_W_CHARACTER_FLAG;
+
+                    DBG("Light up screen by W_CHARACTER gesture wakeup.\n");
+
+//                    input_report_key(g_InputDevice, KEY_W, 1);
+                    input_report_key(g_InputDevice, KEY_POWER, 1);
+                    input_sync(g_InputDevice);
+//                    input_report_key(g_InputDevice, KEY_W, 0);
+                    input_report_key(g_InputDevice, KEY_POWER, 0);
+                    input_sync(g_InputDevice);
+                    break;		
+                case 0x66:
+                    _gGestureWakeupValue = GESTURE_WAKEUP_MODE_C_CHARACTER_FLAG;
+
+                    DBG("Light up screen by C_CHARACTER gesture wakeup.\n");
+
+//                    input_report_key(g_InputDevice, KEY_C, 1);
+                    input_report_key(g_InputDevice, KEY_POWER, 1);
+                    input_sync(g_InputDevice);
+//                    input_report_key(g_InputDevice, KEY_C, 0);
+                    input_report_key(g_InputDevice, KEY_POWER, 0);
+                    input_sync(g_InputDevice);
+                    break;
+                case 0x67:
+                    _gGestureWakeupValue = GESTURE_WAKEUP_MODE_e_CHARACTER_FLAG;
+
+                    DBG("Light up screen by e_CHARACTER gesture wakeup.\n");
+
+//                    input_report_key(g_InputDevice, KEY_E, 1);
+                    input_report_key(g_InputDevice, KEY_POWER, 1);
+                    input_sync(g_InputDevice);
+//                    input_report_key(g_InputDevice, KEY_E, 0);
+                    input_report_key(g_InputDevice, KEY_POWER, 0);
+                    input_sync(g_InputDevice);
+                    break;
+                case 0x68:
+                    _gGestureWakeupValue = GESTURE_WAKEUP_MODE_V_CHARACTER_FLAG;
+
+                    DBG("Light up screen by V_CHARACTER gesture wakeup.\n");
+
+//                    input_report_key(g_InputDevice, KEY_V, 1);
+                    input_report_key(g_InputDevice, KEY_POWER, 1);
+                    input_sync(g_InputDevice);
+//                    input_report_key(g_InputDevice, KEY_V, 0);
+                    input_report_key(g_InputDevice, KEY_POWER, 0);
+                    input_sync(g_InputDevice);
+                    break;
+                case 0x69:
+                    _gGestureWakeupValue = GESTURE_WAKEUP_MODE_O_CHARACTER_FLAG;
+
+                    DBG("Light up screen by O_CHARACTER gesture wakeup.\n");
+
+//                    input_report_key(g_InputDevice, KEY_O, 1);
+                    input_report_key(g_InputDevice, KEY_POWER, 1);
+                    input_sync(g_InputDevice);
+//                    input_report_key(g_InputDevice, KEY_O, 0);
+                    input_report_key(g_InputDevice, KEY_POWER, 0);
+                    input_sync(g_InputDevice);
+                    break;
+                case 0x6A:
+                    _gGestureWakeupValue = GESTURE_WAKEUP_MODE_S_CHARACTER_FLAG;
+
+                    DBG("Light up screen by S_CHARACTER gesture wakeup.\n");
+
+//                    input_report_key(g_InputDevice, KEY_S, 1);
+                    input_report_key(g_InputDevice, KEY_POWER, 1);
+                    input_sync(g_InputDevice);
+//                    input_report_key(g_InputDevice, KEY_S, 0);
+                    input_report_key(g_InputDevice, KEY_POWER, 0);
+                    input_sync(g_InputDevice);
+                    break;
+                case 0x6B:
+                    _gGestureWakeupValue = GESTURE_WAKEUP_MODE_Z_CHARACTER_FLAG;
+
+                    DBG("Light up screen by Z_CHARACTER gesture wakeup.\n");
+
+//                    input_report_key(g_InputDevice, KEY_Z, 1);
+                    input_report_key(g_InputDevice, KEY_POWER, 1);
+                    input_sync(g_InputDevice);
+//                    input_report_key(g_InputDevice, KEY_Z, 0);
+                    input_report_key(g_InputDevice, KEY_POWER, 0);
+                    input_sync(g_InputDevice);
+                    break;
+                default:
+                    _gGestureWakeupValue = 0;
+                    break;		
+            }
+
+            DBG("_gGestureWakeupValue = 0x%x\n", _gGestureWakeupValue);
+        }
+        else
+        {
+            DBG("gesture wakeup packet format is incorrect.\n");
+        }
+        
+        return -1;
+    }
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+
+    DBG("received raw data from touch panel as following:\n");
+    DBG("pPacket[0]=%x \n pPacket[1]=%x pPacket[2]=%x pPacket[3]=%x pPacket[4]=%x \n pPacket[5]=%x pPacket[6]=%x pPacket[7]=%x \n", \
+                pPacket[0], pPacket[1], pPacket[2], pPacket[3], pPacket[4], pPacket[5], pPacket[6], pPacket[7]);
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+    if ((pPacket[nCheckSumIndex] == nCheckSum) && (pPacket[0] == 0x52))   // check the checksum of packet
+#else
+    if ((pPacket[nLength-1] == nCheckSum) && (pPacket[0] == 0x52))   // check the checksum of packet
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+    {
+        nX = (((pPacket[1] & 0xF0) << 4) | pPacket[2]);         // parse the packet to coordinate
+        nY = (((pPacket[1] & 0x0F) << 8) | pPacket[3]);
+
+        nDeltaX = (((pPacket[4] & 0xF0) << 4) | pPacket[5]);
+        nDeltaY = (((pPacket[4] & 0x0F) << 8) | pPacket[6]);
+
+        DBG("[x,y]=[%d,%d]\n", nX, nY);
+        DBG("[delta_x,delta_y]=[%d,%d]\n", nDeltaX, nDeltaY);
+
+#ifdef CONFIG_SWAP_X_Y
+        nTempY = nX;
+        nTempX = nY;
+        nX = nTempX;
+        nY = nTempY;
+        
+        nTempY = nDeltaX;
+        nTempX = nDeltaY;
+        nDeltaX = nTempX;
+        nDeltaY = nTempY;
+#endif
+
+#ifdef CONFIG_REVERSE_X
+        nX = 2047 - nX;
+        nDeltaX = 4095 - nDeltaX;
+#endif
+
+#ifdef CONFIG_REVERSE_Y
+        nY = 2047 - nY;
+        nDeltaY = 4095 - nDeltaY;
+#endif
+
+        /*
+         * pPacket[0]:id, pPacket[1]~pPacket[3]:the first point abs, pPacket[4]~pPacket[6]:the relative distance between the first point abs and the second point abs
+         * when pPacket[1]~pPacket[4], pPacket[6] is 0xFF, keyevent, pPacket[5] to judge which key press.
+         * pPacket[1]~pPacket[6] all are 0xFF, release touch
+        */
+        if ((pPacket[1] == 0xFF) && (pPacket[2] == 0xFF) && (pPacket[3] == 0xFF) && (pPacket[4] == 0xFF) && (pPacket[6] == 0xFF))
+        {
+            pInfo->tPoint[0].nX = 0; // final X coordinate
+            pInfo->tPoint[0].nY = 0; // final Y coordinate
+
+            if ((pPacket[5] != 0x00) && (pPacket[5] != 0xFF)) /* pPacket[5] is key value */
+            {   /* 0x00 is key up, 0xff is touch screen up */
+                DBG("touch key down pPacket[5]=%d\n", pPacket[5]);
+                pInfo->nFingerNum = 1;
+                pInfo->nTouchKeyCode = pPacket[5];
+                pInfo->nTouchKeyMode = 1;
+
+#if  1
+                pInfo->nFingerNum = 1;
+                pInfo->nTouchKeyCode = 0;
+                pInfo->nTouchKeyMode = 0;
+
+                if (pPacket[5] == 1) // TOUCH_KEY_MENU
+                {
+                    pInfo->tPoint[0].nX = g_TpVirtualKeyDimLocal[0][0];
+                    pInfo->tPoint[0].nY = g_TpVirtualKeyDimLocal[0][1];
+                }
+                else if (pPacket[5] == 2) // TOUCH_KEY_BACK
+                {
+                    pInfo->tPoint[0].nX = g_TpVirtualKeyDimLocal[2][0];
+                    pInfo->tPoint[0].nY = g_TpVirtualKeyDimLocal[2][1];
+                }
+                else if (pPacket[5] == 4) // TOUCH_KEY_HOME
+                {
+                    pInfo->tPoint[0].nX = g_TpVirtualKeyDimLocal[1][0];
+                    pInfo->tPoint[0].nY = g_TpVirtualKeyDimLocal[1][1];
+                }
+                else
+                {
+                    DBG("multi-key is pressed.\n");
+                    return -1;
+                }
+#endif //CONFIG_ENABLE_REPORT_KEY_WITH_COORDINATE
+            }
+            else
+            {   /* key up or touch up */
+                DBG("touch end\n");
+                pInfo->nFingerNum = 0; //touch end
+                pInfo->nTouchKeyCode = 0;
+                pInfo->nTouchKeyMode = 0;    
+            }
+        }
+        else
+        {
+            pInfo->nTouchKeyMode = 0; //Touch on screen...
+
+//            if ((nDeltaX == 0) && (nDeltaY == 0))
+          if(
+#ifdef CONFIG_REVERSE_X
+                (nDeltaX == 4095)
+#else
+                (nDeltaX == 0)
+#endif
+                &&
+#ifdef CONFIG_REVERSE_Y
+                (nDeltaY == 4095)
+#else
+                (nDeltaY == 0)
+#endif
+            )
+            {   /* one touch point */
+                pInfo->nFingerNum = 1; // one touch
+                pInfo->tPoint[0].nX = (nX * TOUCH_SCREEN_X_MAX) / TPD_WIDTH;
+                pInfo->tPoint[0].nY = (nY * TOUCH_SCREEN_Y_MAX) / TPD_HEIGHT;
+                DBG("[%s]: [x,y]=[%d,%d]\n", __func__, nX, nY);
+                DBG("[%s]: point[x,y]=[%d,%d]\n", __func__, pInfo->tPoint[0].nX, pInfo->tPoint[0].nY);
+            }
+            else
+            {   /* two touch points */
+                u32 nX2, nY2;
+                
+                pInfo->nFingerNum = 2; // two touch
+                /* Finger 1 */
+                pInfo->tPoint[0].nX = (nX * TOUCH_SCREEN_X_MAX) / TPD_WIDTH;
+                pInfo->tPoint[0].nY = (nY * TOUCH_SCREEN_Y_MAX) / TPD_HEIGHT;
+                DBG("[%s]: point1[x,y]=[%d,%d]\n", __func__, pInfo->tPoint[0].nX, pInfo->tPoint[0].nY);
+                /* Finger 2 */
+                if (nDeltaX > 2048)     // transform the unsigned value to signed value
+                {
+                    nDeltaX -= 4096;
+                }
+                
+                if (nDeltaY > 2048)
+                {
+                    nDeltaY -= 4096;
+                }
+
+                nX2 = (u32)(nX + nDeltaX);
+                nY2 = (u32)(nY + nDeltaY);
+
+                pInfo->tPoint[1].nX = (nX2 * TOUCH_SCREEN_X_MAX) / TPD_WIDTH; 
+                pInfo->tPoint[1].nY = (nY2 * TOUCH_SCREEN_Y_MAX) / TPD_HEIGHT;
+                DBG("[%s]: point2[x,y]=[%d,%d]\n", __func__, pInfo->tPoint[1].nX, pInfo->tPoint[1].nY);
+            }
+        }
+    }
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+    else if (pPacket[nCheckSumIndex] == nCheckSum && pPacket[0] == 0x62)
+    {
+        nX = ((pPacket[1] << 8) | pPacket[2]);  // Position_X
+        nY = ((pPacket[3] << 8) | pPacket[4]);  // Position_Y
+
+        nDeltaX = ((pPacket[13] << 8) | pPacket[14]); // Distance_X
+        nDeltaY = ((pPacket[15] << 8) | pPacket[16]); // Distance_Y
+
+        DBG("[x,y]=[%d,%d]\n", nX, nY);
+        DBG("[delta_x,delta_y]=[%d,%d]\n", nDeltaX, nDeltaY);
+
+#ifdef CONFIG_SWAP_X_Y
+        nTempY = nX;
+        nTempX = nY;
+        nX = nTempX;
+        nY = nTempY;
+        
+        nTempY = nDeltaX;
+        nTempX = nDeltaY;
+        nDeltaX = nTempX;
+        nDeltaY = nTempY;
+#endif
+
+#ifdef CONFIG_REVERSE_X
+        nX = 2047 - nX;
+        nDeltaX = 4095 - nDeltaX;
+#endif
+
+#ifdef CONFIG_REVERSE_Y
+        nY = 2047 - nY;
+        nDeltaY = 4095 - nDeltaY;
+#endif
+
+        /*
+         * pPacket[0]:id, pPacket[1]~pPacket[4]:the first point abs, pPacket[13]~pPacket[16]:the relative distance between the first point abs and the second point abs
+         * when pPacket[1]~pPacket[7] is 0xFF, keyevent, pPacket[8] to judge which key press.
+         * pPacket[1]~pPacket[8] all are 0xFF, release touch
+         */
+        if ((pPacket[1] == 0xFF) && (pPacket[2] == 0xFF) && (pPacket[3] == 0xFF) && (pPacket[4] == 0xFF) && (pPacket[5] == 0xFF) && (pPacket[6] == 0xFF) && (pPacket[7] == 0xFF))
+        {
+            pInfo->tPoint[0].nX = 0; // final X coordinate
+            pInfo->tPoint[0].nY = 0; // final Y coordinate
+
+            if ((pPacket[8] != 0x00) && (pPacket[8] != 0xFF)) /* pPacket[8] is key value */
+            {   /* 0x00 is key up, 0xff is touch screen up */
+                DBG("touch key down pPacket[8]=%d\n", pPacket[8]);
+                pInfo->nFingerNum = 1;
+                pInfo->nTouchKeyCode = pPacket[8];
+                pInfo->nTouchKeyMode = 1;
+
+#if  1
+                pInfo->nFingerNum = 1;
+                pInfo->nTouchKeyCode = 0;
+                pInfo->nTouchKeyMode = 0;
+
+                if (pPacket[8] == 1) // TOUCH_KEY_MENU
+                {
+                    pInfo->tPoint[0].nX = g_TpVirtualKeyDimLocal[0][0];
+                    pInfo->tPoint[0].nY = g_TpVirtualKeyDimLocal[0][1];
+                }           
+                else if (pPacket[8] == 2) // TOUCH_KEY_BACK
+                {
+                    pInfo->tPoint[0].nX = g_TpVirtualKeyDimLocal[2][0];
+                    pInfo->tPoint[0].nY = g_TpVirtualKeyDimLocal[2][1];
+                }
+                else if (pPacket[8] == 4) // TOUCH_KEY_HOME
+                {
+                    pInfo->tPoint[0].nX = g_TpVirtualKeyDimLocal[1][0];
+                    pInfo->tPoint[0].nY = g_TpVirtualKeyDimLocal[1][1];
+                }
+                else
+                {
+                    DBG("multi-key is pressed.\n");
+                    return -1;
+                }
+#endif //CONFIG_ENABLE_REPORT_KEY_WITH_COORDINATE
+            }
+            else
+            {   /* key up or touch up */
+                DBG("touch end\n");
+                pInfo->nFingerNum = 0; //touch end
+                pInfo->nTouchKeyCode = 0;
+                pInfo->nTouchKeyMode = 0;    
+            }
+        }
+        else
+        {
+            pInfo->nTouchKeyMode = 0; //Touch on screen...
+
+//            if ((nDeltaX == 0) && (nDeltaY == 0))
+            if (
+#ifdef CONFIG_REVERSE_X
+                (nDeltaX == 4095)
+#else
+                (nDeltaX == 0)
+#endif
+                &&
+#ifdef CONFIG_REVERSE_Y
+                (nDeltaY == 4095)
+#else
+                (nDeltaY == 0)
+#endif
+                )
+            {   /* one touch point */
+                pInfo->nFingerNum = 1; // one touch
+                pInfo->tPoint[0].nX = (nX * TOUCH_SCREEN_X_MAX) / TPD_WIDTH;
+                pInfo->tPoint[0].nY = (nY * TOUCH_SCREEN_Y_MAX) / TPD_HEIGHT;
+                DBG("[%s]: [x,y]=[%d,%d]\n", __func__, nX, nY);
+                DBG("[%s]: point[x,y]=[%d,%d]\n", __func__, pInfo->tPoint[0].nX, pInfo->tPoint[0].nY);
+            }
+            else
+            {   /* two touch points */
+                u32 nX2, nY2;
+                
+                pInfo->nFingerNum = 2; // two touch
+                /* Finger 1 */
+                pInfo->tPoint[0].nX = (nX * TOUCH_SCREEN_X_MAX) / TPD_WIDTH;
+                pInfo->tPoint[0].nY = (nY * TOUCH_SCREEN_Y_MAX) / TPD_HEIGHT;
+                DBG("[%s]: point1[x,y]=[%d,%d]\n", __func__, pInfo->tPoint[0].nX, pInfo->tPoint[0].nY);
+                /* Finger 2 */
+                if (nDeltaX > 2048)     // transform the unsigned value to signed value
+                {
+                    nDeltaX -= 4096;
+                }
+                
+                if (nDeltaY > 2048)
+                {
+                    nDeltaY -= 4096;
+                }
+
+                nX2 = (u32)(nX + nDeltaX);
+                nY2 = (u32)(nY + nDeltaY);
+
+                pInfo->tPoint[1].nX = (nX2 * TOUCH_SCREEN_X_MAX) / TPD_WIDTH; 
+                pInfo->tPoint[1].nY = (nY2 * TOUCH_SCREEN_Y_MAX) / TPD_HEIGHT;
+                DBG("[%s]: point2[x,y]=[%d,%d]\n", __func__, pInfo->tPoint[1].nX, pInfo->tPoint[1].nY);
+            }
+
+            // Notify android application to retrieve log data mode packet from device driver by sysfs.   
+            if (g_TouchKObj != NULL)
+            {
+                char *pEnvp[2];
+                s32 nRetVal = 0; 
+
+                pEnvp[0] = "STATUS=GET_PACKET";  
+                pEnvp[1] = NULL;  
+    
+                nRetVal = kobject_uevent_env(g_TouchKObj, KOBJ_CHANGE, pEnvp); 
+                DBG("kobject_uevent_env() nRetVal = %d\n", nRetVal);
+            }
+        }
+    }
+    else
+    {
+        if (pPacket[nCheckSumIndex] != nCheckSum)
+        {
+            DBG("WRONG CHECKSUM\n");
+            return -1;
+        }
+
+        if (g_FirmwareMode == FIRMWARE_MODE_DEMO_MODE && pPacket[0] != 0x52)
+        {
+            DBG("WRONG DEMO MODE HEADER\n");
+            return -1;
+        }
+        else if (g_FirmwareMode == FIRMWARE_MODE_DEBUG_MODE && pPacket[0] != 0x62)
+        {
+            DBG("WRONG DEBUG MODE HEADER\n");
+            return -1;
+        }
+        else if (g_FirmwareMode == FIRMWARE_MODE_RAW_DATA_MODE && pPacket[0] != 0x62)
+        {
+            DBG("WRONG RAW DATA MODE HEADER\n");
+            return -1;
+        }
+    }
+#else    
+    else
+    {
+        DBG("pPacket[0]=0x%x, pPacket[7]=0x%x, nCheckSum=0x%x\n", pPacket[0], pPacket[7], nCheckSum);
+
+        if (pPacket[nLength-1] != nCheckSum)
+        {
+            DBG("WRONG CHECKSUM\n");
+            return -1;
+        }
+
+        if (pPacket[0] != 0x52)
+        {
+            DBG("WRONG DEMO MODE HEADER\n");
+            return -1;
+        }
+    }
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+    return 0;
+}
+
+//------------------------------------------------------------------------------//
+
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+
+static void _DrvFwCtrlStoreFirmwareData(u8 *pBuf, u32 nSize)
+{
+    u32 nCount = nSize / 1024;
+    u32 i;
+
+    DBG("*** %s() ***\n", __func__);
+
+    if (nCount > 0) // nSize >= 1024
+   	{
+        for (i = 0; i < nCount; i ++)
+        {
+            memcpy(g_FwData[g_FwDataCount], pBuf+(i*1024), 1024);
+
+            g_FwDataCount ++;
+        }
+    }
+    else // nSize < 1024
+    {
+        if (nSize > 0)
+        {
+            memcpy(g_FwData[g_FwDataCount], pBuf, nSize);
+
+            g_FwDataCount ++;
+        }
+    }
+
+    DBG("*** g_FwDataCount = %d ***\n", g_FwDataCount);
+
+    if (pBuf != NULL)
+    {
+        DBG("*** buf[0] = %c ***\n", pBuf[0]);
+    }
+}
+
+//-------------------------Start of SW ID for MSG22XX----------------------------//
+
+static u32 _DrvFwCtrlMsg22xxRetrieveFirmwareCrcFromEFlash(EmemType_e eEmemType) // For MSG22XX
+{
+    u32 nRetVal = 0; 
+    u16 nRegData1 = 0, nRegData2 = 0;
+
+    DBG("*** %s() eEmemType = %d ***\n", __func__, eEmemType);
+
+    DbBusEnterSerialDebugMode();
+    DbBusStopMCU();
+    DbBusIICUseBus();
+    DbBusIICReshape();
+//    mdelay(100);
+    msleep(100);
+
+    // Stop mcu
+    RegSetLByteValue(0x0FE6, 0x01); 
+
+    // Stop watchdog
+    RegSet16BitValue(0x3C60, 0xAA55);
+
+    // RIU password
+    RegSet16BitValue(0x161A, 0xABBA); 
+
+    // Clear pce
+    RegSet16BitValue(0x1618, (RegGet16BitValue(0x1618) | 0x80));
+
+    if (eEmemType == EMEM_MAIN) // Read main block CRC(48KB-4) from main block
+    {
+        RegSet16BitValue(0x1600, 0xBFFC); // Set start address for main block CRC
+    }
+    else if (eEmemType == EMEM_INFO) // Read info block CRC(512Byte-4) from info block
+    {
+        RegSet16BitValue(0x1600, 0xC1FC); // Set start address for info block CRC
+    }
+    
+    // Enable burst mode
+    RegSet16BitValue(0x160C, (RegGet16BitValue(0x160C) | 0x01));
+
+    // Set pce
+    RegSet16BitValue(0x1618, (RegGet16BitValue(0x1618) | 0x40)); 
+    
+    RegSetLByteValue(0x160E, 0x01); 
+
+    nRegData1 = RegGet16BitValue(0x1604);
+    nRegData2 = RegGet16BitValue(0x1606);
+
+    nRetVal  = ((nRegData2 >> 8) & 0xFF) << 24;
+    nRetVal |= (nRegData2 & 0xFF) << 16;
+    nRetVal |= ((nRegData1 >> 8) & 0xFF) << 8;
+    nRetVal |= (nRegData1 & 0xFF);
+    
+    DBG("CRC = 0x%x\n", nRetVal);
+
+    // Clear burst mode
+    RegSet16BitValue(0x160C, RegGet16BitValue(0x160C) & (~0x01));      
+
+    RegSet16BitValue(0x1600, 0x0000); 
+
+    // Clear RIU password
+    RegSet16BitValue(0x161A, 0x0000); 
+
+    DbBusIICNotUseBus();
+    DbBusNotStopMCU();
+    DbBusExitSerialDebugMode();
+
+    return nRetVal;	
+}
+
+static u32 _DrvFwCtrlMsg22xxRetrieveFrimwareCrcFromBinFile(u8 szTmpBuf[], EmemType_e eEmemType) // For MSG22XX
+{
+    u32 nRetVal = 0; 
+    
+    DBG("*** %s() eEmemType = %d ***\n", __func__, eEmemType);
+    
+    if (szTmpBuf != NULL)
+    {
+        if (eEmemType == EMEM_MAIN) // Read main block CRC(48KB-4) from bin file
+        {
+            nRetVal  = szTmpBuf[0xBFFF] << 24;
+            nRetVal |= szTmpBuf[0xBFFE] << 16;
+            nRetVal |= szTmpBuf[0xBFFD] << 8;
+            nRetVal |= szTmpBuf[0xBFFC];
+        }
+        else if (eEmemType == EMEM_INFO) // Read info block CRC(512Byte-4) from bin file
+        {
+            nRetVal  = szTmpBuf[0xC1FF] << 24;
+            nRetVal |= szTmpBuf[0xC1FE] << 16;
+            nRetVal |= szTmpBuf[0xC1FD] << 8;
+            nRetVal |= szTmpBuf[0xC1FC];
+        }
+    }
+
+    return nRetVal;
+}
+
+static u16 _DrvFwCtrlMsg22xxGetSwId(EmemType_e eEmemType) // For MSG22XX
+{
+    u16 nRetVal = 0; 
+    u16 nRegData1 = 0;
+
+    DBG("*** %s() eEmemType = %d ***\n", __func__, eEmemType);
+
+    DbBusEnterSerialDebugMode();
+    DbBusStopMCU();
+    DbBusIICUseBus();
+    DbBusIICReshape();
+//    mdelay(100);
+    msleep(100);
+
+    // Stop mcu
+    RegSetLByteValue(0x0FE6, 0x01); 
+
+    // Stop watchdog
+    RegSet16BitValue(0x3C60, 0xAA55);
+
+    // RIU password
+    RegSet16BitValue(0x161A, 0xABBA); 
+
+    // Clear pce
+    RegSet16BitValue(0x1618, (RegGet16BitValue(0x1618) | 0x80));
+
+    if (eEmemType == EMEM_MAIN) // Read SW ID from main block
+    {
+        RegSet16BitValue(0x1600, 0xBFF4); // Set start address for main block SW ID
+    }
+    else if (eEmemType == EMEM_INFO) // Read SW ID from info block
+    {
+        RegSet16BitValue(0x1600, 0xC1EC); // Set start address for info block SW ID
+    }
+
+    /*
+      Ex. SW ID in Main Block :
+          Major low byte at address 0xBFF4
+          Major high byte at address 0xBFF5
+          
+          SW ID in Info Block :
+          Major low byte at address 0xC1EC
+          Major high byte at address 0xC1ED
+    */
+    
+    // Enable burst mode
+//    RegSet16BitValue(0x160C, (RegGet16BitValue(0x160C) | 0x01));
+
+    // Set pce
+    RegSet16BitValue(0x1618, (RegGet16BitValue(0x1618) | 0x40)); 
+    
+    RegSetLByteValue(0x160E, 0x01); 
+
+    nRegData1 = RegGet16BitValue(0x1604);
+//    nRegData2 = RegGet16BitValue(0x1606);
+
+    nRetVal = ((nRegData1 >> 8) & 0xFF) << 8;
+    nRetVal |= (nRegData1 & 0xFF);
+    
+    // Clear burst mode
+//    RegSet16BitValue(0x160C, RegGet16BitValue(0x160C) & (~0x01));      
+
+    RegSet16BitValue(0x1600, 0x0000); 
+
+    // Clear RIU password
+    RegSet16BitValue(0x161A, 0x0000); 
+    
+    DBG("SW ID = 0x%x\n", nRetVal);
+
+    DbBusIICNotUseBus();
+    DbBusNotStopMCU();
+    DbBusExitSerialDebugMode();
+
+    return nRetVal;		
+}
+
+static s32 _DrvFwCtrlMsg22xxUpdateFirmwareBySwId(void) // For MSG22XX
+{
+    s32 nRetVal = -1;
+    u32 nCrcInfoA = 0, nCrcInfoB = 0, nCrcMainA = 0, nCrcMainB = 0;
+    
+    DBG("*** %s() ***\n", __func__);
+    
+    DBG("_gIsUpdateInfoBlockFirst = %d, _gIsUpdateFirmware = 0x%x\n", _gIsUpdateInfoBlockFirst, _gIsUpdateFirmware);
+
+    _DrvFwCtrlMsg22xxConvertFwDataTwoDimenToOneDimen(g_FwData, _gOneDimenFwData);
+    
+    if (_gIsUpdateInfoBlockFirst == 1)
+    {
+        if ((_gIsUpdateFirmware & 0x10) == 0x10)
+        {
+            _DrvFwCtrlMsg22xxEraseEmem(EMEM_INFO);
+            _DrvFwCtrlMsg22xxProgramEmem(EMEM_INFO);
+ 
+            nCrcInfoA = _DrvFwCtrlMsg22xxRetrieveFrimwareCrcFromBinFile(_gOneDimenFwData, EMEM_INFO);
+            nCrcInfoB = _DrvFwCtrlMsg22xxGetFirmwareCrcByHardware(EMEM_INFO);
+
+            DBG("nCrcInfoA = 0x%x, nCrcInfoB = 0x%x\n", nCrcInfoA, nCrcInfoB);
+        
+            if (nCrcInfoA == nCrcInfoB)
+            {
+                _DrvFwCtrlMsg22xxEraseEmem(EMEM_MAIN);
+                _DrvFwCtrlMsg22xxProgramEmem(EMEM_MAIN);
+
+                nCrcMainA = _DrvFwCtrlMsg22xxRetrieveFrimwareCrcFromBinFile(_gOneDimenFwData, EMEM_MAIN);
+                nCrcMainB = _DrvFwCtrlMsg22xxGetFirmwareCrcByHardware(EMEM_MAIN);
+
+                DBG("nCrcMainA = 0x%x, nCrcMainB = 0x%x\n", nCrcMainA, nCrcMainB);
+        		
+                if (nCrcMainA == nCrcMainB)
+                {
+                    _gIsUpdateFirmware = 0x00;
+                    nRetVal = 0;
+                }
+                else
+                {
+                    _gIsUpdateFirmware = 0x01;
+                }
+            }
+            else
+            {
+                _gIsUpdateFirmware = 0x11;
+            }
+        }
+        else if ((_gIsUpdateFirmware & 0x01) == 0x01)
+        {
+            _DrvFwCtrlMsg22xxEraseEmem(EMEM_MAIN);
+            _DrvFwCtrlMsg22xxProgramEmem(EMEM_MAIN);
+
+            nCrcMainA = _DrvFwCtrlMsg22xxRetrieveFrimwareCrcFromBinFile(_gOneDimenFwData, EMEM_MAIN);
+            nCrcMainB = _DrvFwCtrlMsg22xxGetFirmwareCrcByHardware(EMEM_MAIN);
+
+            DBG("nCrcMainA=0x%x, nCrcMainB=0x%x\n", nCrcMainA, nCrcMainB);
+    		
+            if (nCrcMainA == nCrcMainB)
+            {
+                _gIsUpdateFirmware = 0x00;
+                nRetVal = 0;
+            }
+            else
+            {
+                _gIsUpdateFirmware = 0x01;
+            }
+        }
+    }
+    else //_gIsUpdateInfoBlockFirst == 0
+    {
+        if ((_gIsUpdateFirmware & 0x10) == 0x10)
+        {
+            _DrvFwCtrlMsg22xxEraseEmem(EMEM_MAIN);
+            _DrvFwCtrlMsg22xxProgramEmem(EMEM_MAIN);
+
+            nCrcMainA = _DrvFwCtrlMsg22xxRetrieveFrimwareCrcFromBinFile(_gOneDimenFwData, EMEM_MAIN);
+            nCrcMainB = _DrvFwCtrlMsg22xxGetFirmwareCrcByHardware(EMEM_MAIN);
+
+            DBG("nCrcMainA=0x%x, nCrcMainB=0x%x\n", nCrcMainA, nCrcMainB);
+
+            if (nCrcMainA == nCrcMainB)
+            {
+                _DrvFwCtrlMsg22xxEraseEmem(EMEM_INFO);
+                _DrvFwCtrlMsg22xxProgramEmem(EMEM_INFO);
+
+                nCrcInfoA = _DrvFwCtrlMsg22xxRetrieveFrimwareCrcFromBinFile(_gOneDimenFwData, EMEM_INFO);
+                nCrcInfoB = _DrvFwCtrlMsg22xxGetFirmwareCrcByHardware(EMEM_INFO);
+                
+                DBG("nCrcInfoA=0x%x, nCrcInfoB=0x%x\n", nCrcInfoA, nCrcInfoB);
+
+                if (nCrcInfoA == nCrcInfoB)
+                {
+                    _gIsUpdateFirmware = 0x00;
+                    nRetVal = 0;
+                }
+                else
+                {
+                    _gIsUpdateFirmware = 0x01;
+                }
+            }
+            else
+            {
+                _gIsUpdateFirmware = 0x11;
+            }
+        }
+        else if ((_gIsUpdateFirmware & 0x01) == 0x01)
+        {
+            _DrvFwCtrlMsg22xxEraseEmem(EMEM_INFO);
+            _DrvFwCtrlMsg22xxProgramEmem(EMEM_INFO);
+
+            nCrcInfoA = _DrvFwCtrlMsg22xxRetrieveFrimwareCrcFromBinFile(_gOneDimenFwData, EMEM_INFO);
+            nCrcInfoB = _DrvFwCtrlMsg22xxGetFirmwareCrcByHardware(EMEM_INFO);
+
+            DBG("nCrcInfoA=0x%x, nCrcInfoB=0x%x\n", nCrcInfoA, nCrcInfoB);
+
+            if (nCrcInfoA == nCrcInfoB)
+            {
+                _gIsUpdateFirmware = 0x00;
+                nRetVal = 0;
+            }
+            else
+            {
+                _gIsUpdateFirmware = 0x01;
+            }
+        }    		
+    }
+    
+    return nRetVal;	
+}
+
+void _DrvFwCtrlMsg22xxCheckFirmwareUpdateBySwId(void) // For MSG22XX
+{
+    u32 nCrcMainA, nCrcInfoA, nCrcMainB, nCrcInfoB;
+    u32 i;
+    u16 nUpdateBinMajor = 0, nUpdateBinMinor = 0;
+    u16 nMajor = 0, nMinor = 0;
+    u8 *pVersion = NULL;
+    Msg22xxSwId_e eSwId = MSG22XX_SW_ID_UNDEFINED;
+    
+    DBG("*** %s() ***\n", __func__);
+
+    DrvPlatformLyrDisableFingerTouchReport();
+
+    DrvFwCtrlGetCustomerFirmwareVersion(&nMajor, &nMinor, &pVersion);
+
+    nCrcMainA = _DrvFwCtrlMsg22xxGetFirmwareCrcByHardware(EMEM_MAIN);
+    nCrcMainB = _DrvFwCtrlMsg22xxRetrieveFirmwareCrcFromEFlash(EMEM_MAIN);
+
+    nCrcInfoA = _DrvFwCtrlMsg22xxGetFirmwareCrcByHardware(EMEM_INFO);
+    nCrcInfoB = _DrvFwCtrlMsg22xxRetrieveFirmwareCrcFromEFlash(EMEM_INFO);
+    
+    _gUpdateFirmwareBySwIdWorkQueue = create_singlethread_workqueue("update_firmware_by_sw_id");
+    INIT_WORK(&_gUpdateFirmwareBySwIdWork, _DrvFwCtrlUpdateFirmwareBySwIdDoWork);
+
+    DBG("nCrcMainA=0x%x, nCrcInfoA=0x%x, nCrcMainB=0x%x, nCrcInfoB=0x%x\n", nCrcMainA, nCrcInfoA, nCrcMainB, nCrcInfoB);
+               
+    if (nCrcMainA == nCrcMainB && nCrcInfoA == nCrcInfoB) // Case 1. Main Block:OK, Info Block:OK
+    {
+        eSwId = _DrvFwCtrlMsg22xxGetSwId(EMEM_MAIN);
+    		
+        if (eSwId == MSG22XX_SW_ID_XXXX)
+        {
+            nUpdateBinMajor = msg2xxx_xxxx_update_bin[0xBFF5]<<8 | msg2xxx_xxxx_update_bin[0xBFF4];
+            nUpdateBinMinor = msg2xxx_xxxx_update_bin[0xBFF7]<<8 | msg2xxx_xxxx_update_bin[0xBFF6];
+        }
+        else if (eSwId == MSG22XX_SW_ID_YYYY)
+        {
+            nUpdateBinMajor = msg2xxx_yyyy_update_bin[0xBFF5]<<8 | msg2xxx_yyyy_update_bin[0xBFF4];
+            nUpdateBinMinor = msg2xxx_yyyy_update_bin[0xBFF7]<<8 | msg2xxx_yyyy_update_bin[0xBFF6];
+        }
+        else //eSwId == MSG22XX_SW_ID_UNDEFINED
+        {
+            DBG("eSwId = 0x%x is an undefined SW ID.\n", eSwId);
+
+            eSwId = MSG22XX_SW_ID_UNDEFINED;
+            nUpdateBinMajor = 0;
+            nUpdateBinMinor = 0;    		        						
+        }
+    		
+        DBG("eSwId=0x%x, nMajor=%d, nMinor=%d, nUpdateBinMajor=%d, nUpdateBinMinor=%d\n", eSwId, nMajor, nMinor, nUpdateBinMajor, nUpdateBinMinor);
+
+        if (nUpdateBinMinor > nMinor)
+        {
+            if (eSwId < MSG22XX_SW_ID_UNDEFINED && eSwId != 0x0000 && eSwId != 0xFFFF)
+            {
+                if (eSwId == MSG22XX_SW_ID_XXXX)
+                {
+                    for (i = 0; i < (MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE+1); i ++)
+                    {
+                        if (i < MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE) // i < 48
+                        {
+                            _DrvFwCtrlStoreFirmwareData(&(msg2xxx_xxxx_update_bin[i*1024]), 1024);
+                        }
+                        else // i == 48
+                        {
+                            _DrvFwCtrlStoreFirmwareData(&(msg2xxx_xxxx_update_bin[i*1024]), 512);
+                        }
+                    }
+                }
+                else if (eSwId == MSG22XX_SW_ID_YYYY)
+                {
+                    for (i = 0; i < (MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE+1); i ++)
+                    {
+                        if (i < MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE) // i < 48
+                        {
+                            _DrvFwCtrlStoreFirmwareData(&(msg2xxx_yyyy_update_bin[i*1024]), 1024);
+                        }
+                        else // i == 48
+                        {
+                            _DrvFwCtrlStoreFirmwareData(&(msg2xxx_yyyy_update_bin[i*1024]), 512);
+                        }
+                    }
+                }
+
+                g_FwDataCount = 0; // Reset g_FwDataCount to 0 after copying update firmware data to temp buffer
+
+                _gUpdateRetryCount = UPDATE_FIRMWARE_RETRY_COUNT;
+                _gIsUpdateInfoBlockFirst = 1; // Set 1 for indicating main block is complete 
+                _gIsUpdateFirmware = 0x11;
+                queue_work(_gUpdateFirmwareBySwIdWorkQueue, &_gUpdateFirmwareBySwIdWork);
+                return;
+            }
+            else
+            {
+                DBG("The sw id is invalid.\n");
+                DBG("Go to normal boot up process.\n");
+            }
+        }
+        else
+        {
+            DBG("The update bin version is older than or equal to the current firmware version on e-flash.\n");
+            DBG("Go to normal boot up process.\n");
+        }
+    }
+    else if (nCrcMainA == nCrcMainB && nCrcInfoA != nCrcInfoB) // Case 2. Main Block:OK, Info Block:FAIL
+    {
+        eSwId = _DrvFwCtrlMsg22xxGetSwId(EMEM_MAIN);
+    		
+        DBG("eSwId=0x%x\n", eSwId);
+
+        if (eSwId < MSG22XX_SW_ID_UNDEFINED && eSwId != 0x0000 && eSwId != 0xFFFF)
+        {
+            if (eSwId == MSG22XX_SW_ID_XXXX)
+            {
+                for (i = 0; i < (MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE+1); i ++)
+                {
+                    if (i < MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE) // i < 48
+                    {
+                        _DrvFwCtrlStoreFirmwareData(&(msg2xxx_xxxx_update_bin[i*1024]), 1024);
+                    }
+                    else // i == 48
+                    {
+                        _DrvFwCtrlStoreFirmwareData(&(msg2xxx_xxxx_update_bin[i*1024]), 512);
+                    }
+                }
+            }
+            else if (eSwId == MSG22XX_SW_ID_YYYY)
+            {
+                for (i = 0; i < (MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE+1); i ++)
+                {
+                    if (i < MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE) // i < 48
+                    {
+                        _DrvFwCtrlStoreFirmwareData(&(msg2xxx_yyyy_update_bin[i*1024]), 1024);
+                    }
+                    else // i == 48
+                    {
+                        _DrvFwCtrlStoreFirmwareData(&(msg2xxx_yyyy_update_bin[i*1024]), 512);
+                    }
+                }
+            }
+
+            g_FwDataCount = 0; // Reset g_FwDataCount to 0 after copying update firmware data to temp buffer
+
+            _gUpdateRetryCount = UPDATE_FIRMWARE_RETRY_COUNT;
+            _gIsUpdateInfoBlockFirst = 1; // Set 1 for indicating main block is complete 
+            _gIsUpdateFirmware = 0x11;
+            queue_work(_gUpdateFirmwareBySwIdWorkQueue, &_gUpdateFirmwareBySwIdWork);
+            return;
+        }
+        else
+        {
+            DBG("The sw id is invalid.\n");
+            DBG("Go to normal boot up process.\n");
+        }
+    }
+    else if (nCrcMainA != nCrcMainB && nCrcInfoA == nCrcInfoB) // Case 3. Main Block:FAIL, Info Block:OK
+    {
+        eSwId = _DrvFwCtrlMsg22xxGetSwId(EMEM_INFO);
+		
+        DBG("eSwId=0x%x\n", eSwId);
+
+        if (eSwId < MSG22XX_SW_ID_UNDEFINED && eSwId != 0x0000 && eSwId != 0xFFFF)
+        {
+            if (eSwId == MSG22XX_SW_ID_XXXX)
+            {
+                for (i = 0; i < (MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE+1); i ++)
+                {
+                    if (i < MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE) // i < 48
+                    {
+                        _DrvFwCtrlStoreFirmwareData(&(msg2xxx_xxxx_update_bin[i*1024]), 1024);
+                    }
+                    else // i == 48
+                    {
+                        _DrvFwCtrlStoreFirmwareData(&(msg2xxx_xxxx_update_bin[i*1024]), 512);
+                    }
+                }
+            }
+            else if (eSwId == MSG22XX_SW_ID_YYYY)
+            {
+                for (i = 0; i < (MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE+1); i ++)
+                {
+                    if (i < MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE) // i < 48
+                    {
+                        _DrvFwCtrlStoreFirmwareData(&(msg2xxx_yyyy_update_bin[i*1024]), 1024);
+                    }
+                    else // i == 48
+                    {
+                        _DrvFwCtrlStoreFirmwareData(&(msg2xxx_yyyy_update_bin[i*1024]), 512);
+                    }
+                }
+            }
+
+            g_FwDataCount = 0; // Reset g_FwDataCount to 0 after copying update firmware data to temp buffer
+
+            _gUpdateRetryCount = UPDATE_FIRMWARE_RETRY_COUNT;
+            _gIsUpdateInfoBlockFirst = 0; // Set 0 for indicating main block is broken 
+            _gIsUpdateFirmware = 0x11;
+            queue_work(_gUpdateFirmwareBySwIdWorkQueue, &_gUpdateFirmwareBySwIdWork);
+            return;
+        }
+        else
+        {
+            DBG("The sw id is invalid.\n");
+            DBG("Go to normal boot up process.\n");
+        }
+    }
+    else // Case 4. Main Block:FAIL, Info Block:FAIL
+    {
+        DBG("Main block and Info block are broken.\n");
+        DBG("Go to normal boot up process.\n");
+    }
+
+    DrvPlatformLyrTouchDeviceResetHw();
+
+    DrvPlatformLyrEnableFingerTouchReport();
+}
+
+//-------------------------End of SW ID for MSG22XX----------------------------//
+
+//-------------------------Start of SW ID for MSG21XXA----------------------------//
+
+static u32 _DrvFwCtrlMsg21xxaCalculateMainCrcFromEFlash(void) // For MSG21XXA
+{
+    u32 nRetVal = 0; 
+    u16 nRegData = 0;
+
+    DBG("*** %s() ***\n", __func__);
+
+    DrvPlatformLyrTouchDeviceResetHw();
+    DbBusEnterSerialDebugMode();
+    DbBusStopMCU();
+    DbBusIICUseBus();
+    DbBusIICReshape();
+//    mdelay(20);
+    msleep(20);
+
+    // Stop mcu
+    RegSetLByteValue(0x0FE6, 0x01); //bank:mheg5, addr:h0073
+
+    // Stop Watchdog
+    RegSet16BitValue(0x3C60, 0xAA55); //bank:reg_PIU_MISC_0, addr:h0030
+
+    // cmd
+    RegSet16BitValue(0x3CE4, 0xDF4C); //bank:reg_PIU_MISC_0, addr:h0072
+
+    // TP SW reset
+    RegSet16BitValue(0x1E04, 0x7d60); //bank:chip, addr:h0002
+    RegSet16BitValue(0x1E04, 0x829F);
+
+    // Start mcu
+    RegSetLByteValue(0x0FE6, 0x00); //bank:mheg5, addr:h0073
+    
+//    mdelay(20);
+    msleep(20);
+
+    // Polling 0x3CE4 is 0x9432
+    do
+    {
+        nRegData = RegGet16BitValue(0x3CE4); //bank:reg_PIU_MISC_0, addr:h0072
+    } while (nRegData != 0x9432);
+
+    // Read calculated main block CRC from register
+    nRetVal = RegGet16BitValue(0x3C80);
+    nRetVal = (nRetVal << 16) | RegGet16BitValue(0x3C82);
+        
+    DBG("Main Block CRC = 0x%x\n", nRetVal);
+
+    return nRetVal;	
+}
+
+static u32 _DrvFwCtrlMsg21xxaRetrieveMainCrcFromMainBlock(void) // For MSG21XXA
+{
+    u32 nRetVal = 0; 
+    u16 nRegData = 0;
+    u8 szDbBusTxData[5] = {0};
+    u8 szDbBusRxData[4] = {0};
+
+    DBG("*** %s() ***\n", __func__);
+
+    DrvPlatformLyrTouchDeviceResetHw();
+    DbBusEnterSerialDebugMode();
+    DbBusStopMCU();
+    DbBusIICUseBus();
+    DbBusIICReshape();
+//    mdelay(20);
+    msleep(20);
+
+    // Stop mcu
+    RegSetLByteValue(0x0FE6, 0x01); //bank:mheg5, addr:h0073
+
+    // Stop watchdog
+    RegSet16BitValue(0x3C60, 0xAA55); //bank:reg_PIU_MISC_0, addr:h0030
+
+    // cmd
+    RegSet16BitValue(0x3CE4, 0xA4AB); //bank:reg_PIU_MISC_0, addr:h0072
+
+    // TP SW reset
+    RegSet16BitValue(0x1E04, 0x7d60); //bank:chip, addr:h0002
+    RegSet16BitValue(0x1E04, 0x829F);
+
+    // Start mcu
+    RegSetLByteValue(0x0FE6, 0x00); //bank:mheg5, addr:h0073
+    
+//    mdelay(20);
+    msleep(20);
+
+    // Polling 0x3CE4 is 0x5B58
+    do
+    {
+        nRegData = RegGet16BitValue(0x3CE4); //bank:reg_PIU_MISC_0, addr:h0072
+    } while (nRegData != 0x5B58);
+
+     // Read main block CRC from main block
+    szDbBusTxData[0] = 0x72;
+    szDbBusTxData[1] = 0x7F;
+    szDbBusTxData[2] = 0xFC;
+    szDbBusTxData[3] = 0x00;
+    szDbBusTxData[4] = 0x04;
+    
+    IicWriteData(SLAVE_I2C_ID_DWI2C, &szDbBusTxData[0], 5);
+    IicReadData(SLAVE_I2C_ID_DWI2C, &szDbBusRxData[0], 4);
+
+    nRetVal = szDbBusRxData[0];
+    nRetVal = (nRetVal << 8) | szDbBusRxData[1];
+    nRetVal = (nRetVal << 8) | szDbBusRxData[2];
+    nRetVal = (nRetVal << 8) | szDbBusRxData[3];
+   
+    DBG("CRC = 0x%x\n", nRetVal);
+
+    return nRetVal;	
+}
+
+static u16 _DrvFwCtrlMsg21xxaGetSwId(EmemType_e eEmemType) // For MSG21XXA
+{
+    u16 nRetVal = 0; 
+    u16 nRegData = 0;
+    u8 szDbBusTxData[5] = {0};
+    u8 szDbBusRxData[4] = {0};
+
+    DBG("*** %s() eEmemType = %d ***\n", __func__, eEmemType);
+
+    DrvPlatformLyrTouchDeviceResetHw();
+    DbBusEnterSerialDebugMode();
+    DbBusStopMCU();
+    DbBusIICUseBus();
+    DbBusIICReshape();
+//    mdelay(20);
+    msleep(10);
+
+    // Stop mcu
+    RegSetLByteValue(0x0FE6, 0x01); //bank:mheg5, addr:h0073
+
+    // Stop watchdog
+    RegSet16BitValue(0x3C60, 0xAA55); //bank:reg_PIU_MISC_0, addr:h0030
+
+    // cmd
+    RegSet16BitValue(0x3CE4, 0xA4AB); //bank:reg_PIU_MISC_0, addr:h0072
+
+    // TP SW reset
+    RegSet16BitValue(0x1E04, 0x7d60); //bank:chip, addr:h0002
+    RegSet16BitValue(0x1E04, 0x829F);
+
+    // Start mcu
+    RegSetLByteValue(0x0FE6, 0x00); //bank:mheg5, addr:h0073
+
+//    mdelay(20);
+    msleep(20);
+
+    // Polling 0x3CE4 is 0x5B58
+    do
+    {
+        nRegData = RegGet16BitValue(0x3CE4); //bank:reg_PIU_MISC_0, addr:h0072
+    } while (nRegData != 0x5B58);
+
+    szDbBusTxData[0] = 0x72;
+    if (eEmemType == EMEM_MAIN) // Read SW ID from main block
+    {
+        szDbBusTxData[1] = 0x7F;
+        szDbBusTxData[2] = 0x55;
+    }
+    else if (eEmemType == EMEM_INFO) // Read SW ID from info block
+    {
+        szDbBusTxData[1] = 0x83;
+        szDbBusTxData[2] = 0x00;
+    }
+    szDbBusTxData[3] = 0x00;
+    szDbBusTxData[4] = 0x04;
+
+    IicWriteData(SLAVE_I2C_ID_DWI2C, &szDbBusTxData[0], 5);
+    IicReadData(SLAVE_I2C_ID_DWI2C, &szDbBusRxData[0], 4);
+
+    DBG("szDbBusRxData[0,1,2,3] = 0x%x,0x%x,0x%x,0x%x\n", szDbBusRxData[0], szDbBusRxData[1], szDbBusRxData[2], szDbBusRxData[3]);
+
+    if ((szDbBusRxData[0] >= 0x30 && szDbBusRxData[0] <= 0x39)
+        &&(szDbBusRxData[1] >= 0x30 && szDbBusRxData[1] <= 0x39)
+        &&(szDbBusRxData[2] >= 0x31 && szDbBusRxData[2] <= 0x39))  
+    {
+        nRetVal = (szDbBusRxData[0]-0x30)*100+(szDbBusRxData[1]-0x30)*10+(szDbBusRxData[2]-0x30);
+    }
+
+    DBG("SW ID = 0x%x\n", nRetVal);
+
+    return nRetVal;		
+}		
+
+static s32 _DrvFwCtrlMsg21xxaUpdateFirmwareBySwId(u8 szFwData[][1024], EmemType_e eEmemType) // For MSG21XXA
+{
+    u32 i, j, nCalculateCrcSize;
+    u32 nCrcMain = 0, nCrcMainTp = 0;
+    u32 nCrcInfo = 0, nCrcInfoTp = 0;
+    u32 nCrcTemp = 0;
+    u16 nRegData = 0;
+
+    DBG("*** %s() ***\n", __func__);
+
+    nCrcMain = 0xffffffff;
+    nCrcInfo = 0xffffffff;
+
+#ifdef CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+#ifdef CONFIG_ENABLE_DMA_IIC
+    DmaAlloc();
+#endif //CONFIG_ENABLE_DMA_IIC
+#endif //CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+
+    // erase main
+    _DrvFwCtrlEraseEmemC33(EMEM_MAIN);
+//    mdelay(1000);
+    msleep(1000);
+
+    DrvPlatformLyrTouchDeviceResetHw();
+
+    DbBusEnterSerialDebugMode();
+    DbBusStopMCU();
+    DbBusIICUseBus();
+    DbBusIICReshape();
+//    mdelay(300);
+    msleep(300);
+
+    /////////////////////////
+    // Program
+    /////////////////////////
+
+    // Polling 0x3CE4 is 0x1C70
+    if ((eEmemType == EMEM_ALL) || (eEmemType == EMEM_MAIN))
+    {
+        do
+        {
+            nRegData = RegGet16BitValue(0x3CE4);
+        } while (nRegData != 0x1C70);
+    }
+
+    switch (eEmemType)
+    {
+        case EMEM_ALL:
+            RegSet16BitValue(0x3CE4, 0xE38F);  // for all blocks
+            break;
+        case EMEM_MAIN:
+            RegSet16BitValue(0x3CE4, 0x7731);  // for main block
+            break;
+        case EMEM_INFO:
+            RegSet16BitValue(0x3CE4, 0x7731);  // for info block
+
+            RegSetLByteValue(0x0FE6, 0x01);
+
+            RegSetLByteValue(0x3CE4, 0xC5); 
+            RegSetLByteValue(0x3CE5, 0x78); 
+
+            RegSetLByteValue(0x1E04, 0x9F);
+            RegSetLByteValue(0x1E05, 0x82);
+
+            RegSetLByteValue(0x0FE6, 0x00);
+//            mdelay(100);
+	    msleep(100);
+            break;
+    }
+
+    // Polling 0x3CE4 is 0x2F43
+    do
+    {
+        nRegData = RegGet16BitValue(0x3CE4);
+    } while (nRegData != 0x2F43);
+
+    // Calculate CRC 32
+    DrvCommonCrcInitTable();
+
+    if (eEmemType == EMEM_ALL)
+    {
+        nCalculateCrcSize = MSG21XXA_FIRMWARE_WHOLE_SIZE;
+    }
+    else if (eEmemType == EMEM_MAIN)
+    {
+        nCalculateCrcSize = MSG21XXA_FIRMWARE_MAIN_BLOCK_SIZE;
+    }
+    else if (eEmemType == EMEM_INFO)
+    {
+        nCalculateCrcSize = MSG21XXA_FIRMWARE_INFO_BLOCK_SIZE;
+    }
+    else
+    {
+        nCalculateCrcSize = 0;
+    }
+		
+    for (i = 0; i < nCalculateCrcSize; i ++)
+    {
+        if (eEmemType == EMEM_INFO)
+        {
+            i = 32;
+        }
+
+        if (i < 32)   // emem_main
+        {
+            if (i == 31)
+            {
+                szFwData[i][1014] = 0x5A;
+                szFwData[i][1015] = 0xA5;
+
+                for (j = 0; j < 1016; j ++)
+                {
+                    nCrcMain = DrvCommonCrcGetValue(szFwData[i][j], nCrcMain);
+                }
+
+                nCrcTemp = nCrcMain;
+                nCrcTemp = nCrcTemp ^ 0xffffffff;
+
+                DBG("nCrcTemp=%x\n", nCrcTemp); // add for debug
+
+                for (j = 0; j < 4; j ++)
+                {
+                    szFwData[i][1023-j] = ((nCrcTemp>>(8*j)) & 0xFF);
+
+                    DBG("((nCrcTemp>>(8*%d)) & 0xFF)=%x\n", j, ((nCrcTemp>>(8*j)) & 0xFF)); // add for debug
+                    DBG("Update main clock crc32 into bin buffer szFwData[%d][%d]=%x\n", i, (1020+j), szFwData[i][1020+j]);
+                }
+            }
+            else
+            {
+                for (j = 0; j < 1024; j ++)
+                {
+                    nCrcMain = DrvCommonCrcGetValue(szFwData[i][j], nCrcMain);
+                }
+            }
+        }
+        else  // emem_info
+        {
+            for (j = 0; j < 1024; j ++)
+            {
+                nCrcInfo = DrvCommonCrcGetValue(szFwData[i][j], nCrcInfo);
+            }
+            
+            if (eEmemType == EMEM_MAIN)
+            {
+                break;
+            }
+        }
+
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+        for (j = 0; j < 8; j ++)
+        {
+            IicWriteData(SLAVE_I2C_ID_DWI2C, &szFwData[i][j*128], 128);
+        }
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM)
+        IicWriteData(SLAVE_I2C_ID_DWI2C, szFwData[i], 1024);
+#endif
+
+        // Polling 0x3CE4 is 0xD0BC
+        do
+        {
+            nRegData = RegGet16BitValue(0x3CE4);
+        } while (nRegData != 0xD0BC);
+
+        RegSet16BitValue(0x3CE4, 0x2F43);
+    }
+
+    if ((eEmemType == EMEM_ALL) || (eEmemType == EMEM_MAIN))
+    {
+        // write file done and check crc
+        RegSet16BitValue(0x3CE4, 0x1380);
+    }
+//    mdelay(10);
+    msleep(10);
+
+    if ((eEmemType == EMEM_ALL) || (eEmemType == EMEM_MAIN))
+    {
+        // Polling 0x3CE4 is 0x9432
+        do
+        {
+            nRegData = RegGet16BitValue(0x3CE4);
+        } while (nRegData != 0x9432);
+    }
+
+    nCrcMain = nCrcMain ^ 0xffffffff;
+    nCrcInfo = nCrcInfo ^ 0xffffffff;
+
+    if ((eEmemType == EMEM_ALL) || (eEmemType == EMEM_MAIN))
+    {
+        // CRC Main from TP
+        nCrcMainTp = RegGet16BitValue(0x3C80);
+        nCrcMainTp = (nCrcMainTp << 16) | RegGet16BitValue(0x3C82);
+    }
+
+    if (eEmemType == EMEM_ALL)
+    {
+        // CRC Info from TP
+        nCrcInfoTp = RegGet16BitValue(0x3CA0);
+        nCrcInfoTp = (nCrcInfoTp << 16) | RegGet16BitValue(0x3CA2);
+    }
+
+    DBG("nCrcMain=0x%x, nCrcInfo=0x%x, nCrcMainTp=0x%x, nCrcInfoTp=0x%x\n", nCrcMain, nCrcInfo, nCrcMainTp, nCrcInfoTp);
+
+    g_FwDataCount = 0; // Reset g_FwDataCount to 0 after update firmware
+
+    DrvPlatformLyrTouchDeviceResetHw();
+    
+#ifdef CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+#ifdef CONFIG_ENABLE_DMA_IIC
+    DmaFree();
+#endif //CONFIG_ENABLE_DMA_IIC
+#endif //CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+
+    if ((eEmemType == EMEM_ALL) || (eEmemType == EMEM_MAIN))
+    {
+        if (nCrcMainTp != nCrcMain)
+        {
+            DBG("Update FAILED\n");
+
+            return -1;
+        }
+    }
+
+    if (eEmemType == EMEM_ALL)
+    {
+        if (nCrcInfoTp != nCrcInfo)
+        {
+            DBG("Update FAILED\n");
+
+            return -1;
+        }
+    }
+
+    DBG("Update SUCCESS\n");
+
+    return 0;
+} 
+
+void _DrvFwCtrlMsg21xxaCheckFirmwareUpdateBySwId(void) // For MSG21XXA
+{
+    u32 nCrcMainA, nCrcMainB;
+    u32 i;
+    u16 nUpdateBinMajor = 0, nUpdateBinMinor = 0;
+    u16 nMajor = 0, nMinor = 0;
+    u8 nIsCompareVersion = 0;
+    u8 *pVersion = NULL; 
+    Msg21xxaSwId_e eMainSwId = MSG21XXA_SW_ID_UNDEFINED, eInfoSwId = MSG21XXA_SW_ID_UNDEFINED, eSwId = MSG21XXA_SW_ID_UNDEFINED;
+
+    DBG("*** %s() ***\n", __func__);
+
+    DrvPlatformLyrDisableFingerTouchReport();
+    msleep(100);
+    DrvFwCtrlGetCustomerFirmwareVersion(&nMajor, &nMinor, &pVersion);
+
+    nCrcMainA = _DrvFwCtrlMsg21xxaCalculateMainCrcFromEFlash();
+    nCrcMainB = _DrvFwCtrlMsg21xxaRetrieveMainCrcFromMainBlock();
+
+    _gUpdateFirmwareBySwIdWorkQueue = create_singlethread_workqueue("update_firmware_by_sw_id");
+    INIT_WORK(&_gUpdateFirmwareBySwIdWork, _DrvFwCtrlUpdateFirmwareBySwIdDoWork);
+
+    DBG("nCrcMainA=0x%x, nCrcMainB=0x%x\n", nCrcMainA, nCrcMainB);
+
+    if (nCrcMainA == nCrcMainB) 
+    {
+        eMainSwId = _DrvFwCtrlMsg21xxaGetSwId(EMEM_MAIN);
+        eInfoSwId = _DrvFwCtrlMsg21xxaGetSwId(EMEM_INFO);
+    		
+        DBG("Check firmware integrity success\n");
+        DBG("eMainSwId=0x%x, eInfoSwId=0x%x\n", eMainSwId, eInfoSwId);
+
+        if (eMainSwId == eInfoSwId)
+        {
+        		eSwId = eMainSwId;
+        		nIsCompareVersion = 1;
+        }
+        else
+        {
+        		eSwId = eInfoSwId;
+        		nIsCompareVersion = 0;
+        }
+        
+        if (eSwId == MSG21XXA_SW_ID_XXXX)
+        {
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_TWO_DIMENSIONAL_ARRAY // By two dimensional array
+            nUpdateBinMajor = msg2xxx_xxxx_update_bin[31][0x34F]<<8 | msg2xxx_xxxx_update_bin[31][0x34E];
+            nUpdateBinMinor = msg2xxx_xxxx_update_bin[31][0x351]<<8 | msg2xxx_xxxx_update_bin[31][0x350];
+#else // By one dimensional array
+            nUpdateBinMajor = msg2xxx_xxxx_update_bin[0x7F4F]<<8 | msg2xxx_xxxx_update_bin[0x7F4E];
+            nUpdateBinMinor = msg2xxx_xxxx_update_bin[0x7F51]<<8 | msg2xxx_xxxx_update_bin[0x7F50];
+#endif
+        }
+        else if (eSwId == MSG21XXA_SW_ID_YYYY)
+        {
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_TWO_DIMENSIONAL_ARRAY // By two dimensional array
+            nUpdateBinMajor = msg2xxx_yyyy_update_bin[31][0x34F]<<8 | msg2xxx_yyyy_update_bin[31][0x34E];
+            nUpdateBinMinor = msg2xxx_yyyy_update_bin[31][0x351]<<8 | msg2xxx_yyyy_update_bin[31][0x350];
+#else // By one dimensional array
+            nUpdateBinMajor = msg2xxx_yyyy_update_bin[0x7F4F]<<8 | msg2xxx_yyyy_update_bin[0x7F4E];
+            nUpdateBinMinor = msg2xxx_yyyy_update_bin[0x7F51]<<8 | msg2xxx_yyyy_update_bin[0x7F50];
+#endif
+        }
+        else //eSwId == MSG21XXA_SW_ID_UNDEFINED
+        {
+            DBG("eSwId = 0x%x is an undefined SW ID.\n", eSwId);
+
+            eSwId = MSG21XXA_SW_ID_UNDEFINED;
+            nUpdateBinMajor = 0;
+            nUpdateBinMinor = 0;    		        						
+        }
+    		        
+        DBG("eSwId=0x%x, nMajor=%d, nMinor=%d, nUpdateBinMajor=%d, nUpdateBinMinor=%d\n", eSwId, nMajor, nMinor, nUpdateBinMajor, nUpdateBinMinor);
+
+        if ((nUpdateBinMinor > nMinor && nIsCompareVersion == 1) || (nIsCompareVersion == 0))
+        {
+            if (eSwId < MSG21XXA_SW_ID_UNDEFINED && eSwId != 0xFFFF)
+            {
+                if (eSwId == MSG21XXA_SW_ID_XXXX)
+                {
+                    for (i = 0; i < MSG21XXA_FIRMWARE_MAIN_BLOCK_SIZE; i ++)
+                    {
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_TWO_DIMENSIONAL_ARRAY // By two dimensional array
+                        _DrvFwCtrlStoreFirmwareData(msg2xxx_xxxx_update_bin[i], 1024);
+#else // By one dimensional array
+                        _DrvFwCtrlStoreFirmwareData(&(msg2xxx_xxxx_update_bin[i*1024]), 1024);
+#endif
+                    }
+                }
+                else if (eSwId == MSG21XXA_SW_ID_YYYY)
+                {
+                    for (i = 0; i < MSG21XXA_FIRMWARE_MAIN_BLOCK_SIZE; i ++)
+                    {
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_TWO_DIMENSIONAL_ARRAY // By two dimensional array
+                        _DrvFwCtrlStoreFirmwareData(msg2xxx_yyyy_update_bin[i], 1024);
+#else // By one dimensional array
+                        _DrvFwCtrlStoreFirmwareData(&(msg2xxx_yyyy_update_bin[i*1024]), 1024);
+#endif
+                    }
+                }
+
+                g_FwDataCount = 0; // Reset g_FwDataCount to 0 after copying update firmware data to temp buffer
+
+                _gUpdateRetryCount = UPDATE_FIRMWARE_RETRY_COUNT;
+                queue_work(_gUpdateFirmwareBySwIdWorkQueue, &_gUpdateFirmwareBySwIdWork);
+                return;
+            }
+            else
+            {
+                DBG("The sw id is invalid.\n");
+                DBG("Go to normal boot up process.\n");
+            }
+        }
+        else
+        {
+            DBG("The update bin version is older than or equal to the current firmware version on e-flash.\n");
+            DBG("Go to normal boot up process.\n");
+        }
+    }
+    else
+    {
+        eSwId = _DrvFwCtrlMsg21xxaGetSwId(EMEM_INFO);
+    		
+        DBG("Check firmware integrity failed\n");
+        DBG("eSwId=0x%x\n", eSwId);
+
+        if (eSwId < MSG21XXA_SW_ID_UNDEFINED && eSwId != 0xFFFF)
+        {
+            if (eSwId == MSG21XXA_SW_ID_XXXX)
+            {
+                for (i = 0; i < MSG21XXA_FIRMWARE_MAIN_BLOCK_SIZE; i ++)
+                {
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_TWO_DIMENSIONAL_ARRAY // By two dimensional array
+                    _DrvFwCtrlStoreFirmwareData(msg2xxx_xxxx_update_bin[i], 1024);
+#else // By one dimensional array
+                    _DrvFwCtrlStoreFirmwareData(&(msg2xxx_xxxx_update_bin[i*1024]), 1024);
+#endif
+                }
+            }
+            else if (eSwId == MSG21XXA_SW_ID_YYYY)
+            {
+                for (i = 0; i < MSG21XXA_FIRMWARE_MAIN_BLOCK_SIZE; i ++)
+                {
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_TWO_DIMENSIONAL_ARRAY // By two dimensional array
+                    _DrvFwCtrlStoreFirmwareData(msg2xxx_yyyy_update_bin[i], 1024);
+#else // By one dimensional array
+                    _DrvFwCtrlStoreFirmwareData(&(msg2xxx_yyyy_update_bin[i*1024]), 1024);
+#endif
+                }
+            }
+
+            g_FwDataCount = 0; // Reset g_FwDataCount to 0 after copying update firmware data to temp buffer
+
+            _gUpdateRetryCount = UPDATE_FIRMWARE_RETRY_COUNT;
+            queue_work(_gUpdateFirmwareBySwIdWorkQueue, &_gUpdateFirmwareBySwIdWork);
+            return;
+        }
+        else
+        {
+            DBG("The sw id is invalid.\n");
+            DBG("Go to normal boot up process.\n");
+        }
+    }
+
+    DrvPlatformLyrTouchDeviceResetHw();
+    
+    DrvPlatformLyrEnableFingerTouchReport();
+}
+
+//-------------------------End of SW ID for MSG21XXA----------------------------//
+
+static void _DrvFwCtrlUpdateFirmwareBySwIdDoWork(struct work_struct *pWork)
+{
+    s32 nRetVal = 0;
+    
+    DBG("*** %s() _gUpdateRetryCount = %d ***\n", __func__, _gUpdateRetryCount);
+
+    if (g_ChipType == CHIP_TYPE_MSG21XXA)   
+    {
+        nRetVal = _DrvFwCtrlMsg21xxaUpdateFirmwareBySwId(g_FwData, EMEM_MAIN);
+    }
+    else if (g_ChipType == CHIP_TYPE_MSG22XX)    
+    {
+        nRetVal = _DrvFwCtrlMsg22xxUpdateFirmwareBySwId();
+    }
+    else
+    {
+        DBG("This chip type (%d) does not support update firmware by sw id\n", g_ChipType);
+
+        DrvPlatformLyrTouchDeviceResetHw(); 
+
+        DrvPlatformLyrEnableFingerTouchReport();
+
+        nRetVal = -1;
+        return;
+    }
+    
+    DBG("*** update firmware by sw id result = %d ***\n", nRetVal);
+    
+    if (nRetVal == 0)
+    {
+        DBG("update firmware by sw id success\n");
+
+        DrvPlatformLyrTouchDeviceResetHw();
+
+        DrvPlatformLyrEnableFingerTouchReport();
+
+        if (g_ChipType == CHIP_TYPE_MSG22XX)    
+        {
+            _gIsUpdateInfoBlockFirst = 0;
+            _gIsUpdateFirmware = 0x00;
+        }
+    }
+    else //nRetVal == -1
+    {
+        _gUpdateRetryCount --;
+        if (_gUpdateRetryCount > 0)
+        {
+            DBG("_gUpdateRetryCount = %d\n", _gUpdateRetryCount);
+            queue_work(_gUpdateFirmwareBySwIdWorkQueue, &_gUpdateFirmwareBySwIdWork);
+        }
+        else
+        {
+            DBG("update firmware by sw id failed\n");
+
+            DrvPlatformLyrTouchDeviceResetHw();
+
+            DrvPlatformLyrEnableFingerTouchReport();
+
+            if (g_ChipType == CHIP_TYPE_MSG22XX)    
+            {
+                _gIsUpdateInfoBlockFirst = 0;
+                _gIsUpdateFirmware = 0x00;
+            }
+        }
+    }
+}
+
+#endif //CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+
+//------------------------------------------------------------------------------//
+
+static void _DrvFwCtrlReadInfoC33(void)
+{
+    u8 szDbBusTxData[5] = {0};
+    u16 nRegData = 0;
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+    u32 i;
+#endif 
+
+    DBG("*** %s() ***\n", __func__);
+    
+//    mdelay(300);
+    msleep(300);
+
+    // Stop Watchdog
+    RegSetLByteValue(0x3C60, 0x55);
+    RegSetLByteValue(0x3C61, 0xAA);
+
+    RegSet16BitValue(0x3CE4, 0xA4AB);
+
+    RegSet16BitValue(0x1E04, 0x7d60);
+
+    // TP SW reset
+    RegSet16BitValue(0x1E04, 0x829F);
+    mdelay(1);
+    
+    szDbBusTxData[0] = 0x10;
+    szDbBusTxData[1] = 0x0F;
+    szDbBusTxData[2] = 0xE6;
+    szDbBusTxData[3] = 0x00;
+    IicWriteData(SLAVE_I2C_ID_DBBUS, szDbBusTxData, 4);    
+//    mdelay(100);
+    msleep(100);
+
+    do
+    {
+        nRegData = RegGet16BitValue(0x3CE4);
+    } while (nRegData != 0x5B58);
+
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+    szDbBusTxData[0] = 0x72;
+    szDbBusTxData[3] = 0x00;
+    szDbBusTxData[4] = 0x80; // read 128 bytes
+
+    for (i = 0; i < 8; i ++)
+    {
+        szDbBusTxData[1] = 0x80 + (((i*128)&0xff00)>>8);
+        szDbBusTxData[2] = (i*128)&0x00ff;
+
+        IicWriteData(SLAVE_I2C_ID_DWI2C, &szDbBusTxData[0], 5);
+
+//        mdelay(50);
+	msleep(50);
+
+        // Receive info data
+        IicReadData(SLAVE_I2C_ID_DWI2C, &_gDwIicInfoData[i*128], 128);
+    }
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM)
+    szDbBusTxData[0] = 0x72;
+    szDbBusTxData[1] = 0x80;
+    szDbBusTxData[2] = 0x00;
+    szDbBusTxData[3] = 0x04; // read 1024 bytes
+    szDbBusTxData[4] = 0x00;
+    
+    IicWriteData(SLAVE_I2C_ID_DWI2C, szDbBusTxData, 5);
+
+//    mdelay(50);
+    msleep(50);
+
+    // Receive info data
+    IicReadData(SLAVE_I2C_ID_DWI2C, &_gDwIicInfoData[0], 1024);
+#endif
+}
+
+static s32 _DrvFwCtrlUpdateFirmwareC32(u8 szFwData[][1024], EmemType_e eEmemType)
+{
+    u32 i, j;
+    u32 nCrcMain, nCrcMainTp;
+    u32 nCrcInfo, nCrcInfoTp;
+    u32 nCrcTemp;
+    u16 nRegData = 0;
+
+    DBG("*** %s() ***\n", __func__);
+
+    nCrcMain = 0xffffffff;
+    nCrcInfo = 0xffffffff;
+
+#ifdef CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+#ifdef CONFIG_ENABLE_DMA_IIC
+    DmaAlloc();
+#endif //CONFIG_ENABLE_DMA_IIC
+#endif //CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+
+    /////////////////////////
+    // Erase  all
+    /////////////////////////
+    _DrvFwCtrlEraseEmemC32();
+//    mdelay(1000); 
+    msleep(1000);
+
+    DrvPlatformLyrTouchDeviceResetHw();
+
+    DbBusEnterSerialDebugMode();
+    DbBusStopMCU();
+    DbBusIICUseBus();
+    DbBusIICReshape();
+//    mdelay(300);
+    msleep(300);
+
+    // Reset watch dog
+    RegSetLByteValue(0x3C60, 0x55);
+    RegSetLByteValue(0x3C61, 0xAA);
+
+    /////////////////////////
+    // Program
+    /////////////////////////
+
+    // Polling 0x3CE4 is 0x1C70
+    do
+    {
+        nRegData = RegGet16BitValue(0x3CE4);
+    } while (nRegData != 0x1C70);
+
+    RegSet16BitValue(0x3CE4, 0xE38F);  // for all-blocks
+
+    // Polling 0x3CE4 is 0x2F43
+    do
+    {
+        nRegData = RegGet16BitValue(0x3CE4);
+    } while (nRegData != 0x2F43);
+
+    // Calculate CRC 32
+    DrvCommonCrcInitTable();
+
+    for (i = 0; i < 33; i ++) // total  33 KB : 2 byte per R/W
+    {
+        if (i < 32)   // emem_main
+        {
+            if (i == 31)
+            {
+                szFwData[i][1014] = 0x5A;
+                szFwData[i][1015] = 0xA5;
+
+                for (j = 0; j < 1016; j ++)
+                {
+                    nCrcMain = DrvCommonCrcGetValue(szFwData[i][j], nCrcMain);
+                }
+
+                nCrcTemp = nCrcMain;
+                nCrcTemp = nCrcTemp ^ 0xffffffff;
+
+                DBG("nCrcTemp=%x\n", nCrcTemp); // add for debug
+
+                for (j = 0; j < 4; j ++)
+                {
+                    szFwData[i][1023-j] = ((nCrcTemp>>(8*j)) & 0xFF);
+
+                    DBG("((nCrcTemp>>(8*%d)) & 0xFF)=%x\n", j, ((nCrcTemp>>(8*j)) & 0xFF)); // add for debug
+                    DBG("Update main clock crc32 into bin buffer szFwData[%d][%d]=%x\n", i, (1020+j), szFwData[i][1020+j]);
+                }
+            }
+            else
+            {
+                for (j = 0; j < 1024; j ++)
+                {
+                    nCrcMain = DrvCommonCrcGetValue(szFwData[i][j], nCrcMain);
+                }
+            }
+        }
+        else  // emem_info
+        {
+            for (j = 0; j < 1024; j ++)
+            {
+                nCrcInfo = DrvCommonCrcGetValue(szFwData[i][j], nCrcInfo);
+            }
+        }
+
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+        for (j = 0; j < 8; j ++)
+        {
+            IicWriteData(SLAVE_I2C_ID_DWI2C, &szFwData[i][j*128], 128);
+        }
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM)
+        IicWriteData(SLAVE_I2C_ID_DWI2C, szFwData[i], 1024);
+#endif
+
+        // Polling 0x3CE4 is 0xD0BC
+        do
+        {
+            nRegData = RegGet16BitValue(0x3CE4);
+        } while (nRegData != 0xD0BC);
+
+        RegSet16BitValue(0x3CE4, 0x2F43);
+    }
+
+    // Write file done
+    RegSet16BitValue(0x3CE4, 0x1380);
+
+//    mdelay(10); 
+    msleep(10);
+    // Polling 0x3CE4 is 0x9432
+    do
+    {
+        nRegData = RegGet16BitValue(0x3CE4);
+    } while (nRegData != 0x9432);
+
+    nCrcMain = nCrcMain ^ 0xffffffff;
+    nCrcInfo = nCrcInfo ^ 0xffffffff;
+
+    // CRC Main from TP
+    nCrcMainTp = RegGet16BitValue(0x3C80);
+    nCrcMainTp = (nCrcMainTp << 16) | RegGet16BitValue(0x3C82);
+ 
+    // CRC Info from TP
+    nCrcInfoTp = RegGet16BitValue(0x3CA0);
+    nCrcInfoTp = (nCrcInfoTp << 16) | RegGet16BitValue(0x3CA2);
+
+    DBG("nCrcMain=0x%x, nCrcInfo=0x%x, nCrcMainTp=0x%x, nCrcInfoTp=0x%x\n",
+               nCrcMain, nCrcInfo, nCrcMainTp, nCrcInfoTp);
+
+    g_FwDataCount = 0; // Reset g_FwDataCount to 0 after update firmware
+
+    DrvPlatformLyrTouchDeviceResetHw();
+
+#ifdef CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+#ifdef CONFIG_ENABLE_DMA_IIC
+    DmaFree();
+#endif //CONFIG_ENABLE_DMA_IIC
+#endif //CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+
+    if ((nCrcMainTp != nCrcMain) || (nCrcInfoTp != nCrcInfo))
+    {
+        DBG("Update FAILED\n");
+
+        return -1;
+    }
+
+    DBG("Update SUCCESS\n");
+
+    return 0;
+}
+
+static s32 _DrvFwCtrlUpdateFirmwareC33(u8 szFwData[][1024], EmemType_e eEmemType)
+{
+    u8 szLifeCounter[2];
+    u32 i, j;
+    u32 nCrcMain, nCrcMainTp;
+    u32 nCrcInfo, nCrcInfoTp;
+    u32 nCrcTemp;
+    u16 nRegData = 0;
+
+    DBG("*** %s() ***\n", __func__);
+
+    nCrcMain = 0xffffffff;
+    nCrcInfo = 0xffffffff;
+
+#ifdef CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+#ifdef CONFIG_ENABLE_DMA_IIC
+    DmaAlloc();
+#endif //CONFIG_ENABLE_DMA_IIC
+#endif //CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+
+    _DrvFwCtrlReadInfoC33();
+
+    if (_gDwIicInfoData[0] == 'M' && _gDwIicInfoData[1] == 'S' && _gDwIicInfoData[2] == 'T' && _gDwIicInfoData[3] == 'A' && _gDwIicInfoData[4] == 'R' && _gDwIicInfoData[5] == 'T' && _gDwIicInfoData[6] == 'P' && _gDwIicInfoData[7] == 'C')
+    {
+        _gDwIicInfoData[8] = szFwData[32][8];
+        _gDwIicInfoData[9] = szFwData[32][9];
+        _gDwIicInfoData[10] = szFwData[32][10];
+        _gDwIicInfoData[11] = szFwData[32][11];
+        // updata life counter
+        szLifeCounter[1] = ((((_gDwIicInfoData[13] << 8) | _gDwIicInfoData[12]) + 1) >> 8) & 0xFF;
+        szLifeCounter[0] = (((_gDwIicInfoData[13] << 8) | _gDwIicInfoData[12]) + 1) & 0xFF;
+        _gDwIicInfoData[12] = szLifeCounter[0];
+        _gDwIicInfoData[13] = szLifeCounter[1];
+        
+        RegSet16BitValue(0x3CE4, 0x78C5);
+        RegSet16BitValue(0x1E04, 0x7d60);
+        // TP SW reset
+        RegSet16BitValue(0x1E04, 0x829F);
+
+//        mdelay(50);
+	msleep(50);
+
+        // Polling 0x3CE4 is 0x2F43
+        do
+        {
+            nRegData = RegGet16BitValue(0x3CE4);
+        } while (nRegData != 0x2F43);
+
+        // Transmit lk info data
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+        for (j = 0; j < 8; j ++)
+        {
+            IicWriteData(SLAVE_I2C_ID_DWI2C, &_gDwIicInfoData[j*128], 128);
+        }
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM)
+        IicWriteData(SLAVE_I2C_ID_DWI2C, &_gDwIicInfoData[0], 1024);
+#endif
+
+        // Polling 0x3CE4 is 0xD0BC
+        do
+        {
+            nRegData = RegGet16BitValue(0x3CE4);
+        } while (nRegData != 0xD0BC);
+    }
+
+    // erase main
+    _DrvFwCtrlEraseEmemC33(EMEM_MAIN);
+//    mdelay(1000);
+    msleep(1000);
+
+    DrvPlatformLyrTouchDeviceResetHw();
+
+    DbBusEnterSerialDebugMode();
+    DbBusStopMCU();
+    DbBusIICUseBus();
+    DbBusIICReshape();
+//    mdelay(300);
+    msleep(300);
+
+    /////////////////////////
+    // Program
+    /////////////////////////
+
+    // Polling 0x3CE4 is 0x1C70
+    if ((eEmemType == EMEM_ALL) || (eEmemType == EMEM_MAIN))
+    {
+        do
+        {
+            nRegData = RegGet16BitValue(0x3CE4);
+        } while (nRegData != 0x1C70);
+    }
+
+    switch (eEmemType)
+    {
+        case EMEM_ALL:
+            RegSet16BitValue(0x3CE4, 0xE38F);  // for all blocks
+            break;
+        case EMEM_MAIN:
+            RegSet16BitValue(0x3CE4, 0x7731);  // for main block
+            break;
+        case EMEM_INFO:
+            RegSet16BitValue(0x3CE4, 0x7731);  // for info block
+
+            RegSetLByteValue(0x0FE6, 0x01);
+
+            RegSetLByteValue(0x3CE4, 0xC5); 
+            RegSetLByteValue(0x3CE5, 0x78); 
+
+            RegSetLByteValue(0x1E04, 0x9F);
+            RegSetLByteValue(0x1E05, 0x82);
+
+            RegSetLByteValue(0x0FE6, 0x00);
+//            mdelay(100);
+	    msleep(100);
+            break;
+    }
+
+    // Polling 0x3CE4 is 0x2F43
+    do
+    {
+        nRegData = RegGet16BitValue(0x3CE4);
+    } while (nRegData != 0x2F43);
+
+    // Calculate CRC 32
+    DrvCommonCrcInitTable();
+
+    for (i = 0; i < 33; i ++) // total 33 KB : 2 byte per R/W
+    {
+        if (eEmemType == EMEM_INFO)
+        {
+            i = 32;
+        }
+
+        if (i < 32)   // emem_main
+        {
+            if (i == 31)
+            {
+                szFwData[i][1014] = 0x5A;
+                szFwData[i][1015] = 0xA5;
+
+                for (j = 0; j < 1016; j ++)
+                {
+                    nCrcMain = DrvCommonCrcGetValue(szFwData[i][j], nCrcMain);
+                }
+
+                nCrcTemp = nCrcMain;
+                nCrcTemp = nCrcTemp ^ 0xffffffff;
+
+                DBG("nCrcTemp=%x\n", nCrcTemp); // add for debug
+
+                for (j = 0; j < 4; j ++)
+                {
+                    szFwData[i][1023-j] = ((nCrcTemp>>(8*j)) & 0xFF);
+
+                    DBG("((nCrcTemp>>(8*%d)) & 0xFF)=%x\n", j, ((nCrcTemp>>(8*j)) & 0xFF)); // add for debug
+                    DBG("Update main clock crc32 into bin buffer szFwData[%d][%d]=%x\n", i, (1020+j), szFwData[i][1020+j]); // add for debug
+                }
+            }
+            else
+            {
+                for (j = 0; j < 1024; j ++)
+                {
+                    nCrcMain = DrvCommonCrcGetValue(szFwData[i][j], nCrcMain);
+                }
+            }
+        }
+        else  // emem_info
+        {
+            for (j = 0; j < 1024; j ++)
+            {
+                nCrcInfo = DrvCommonCrcGetValue(_gDwIicInfoData[j], nCrcInfo);
+            }
+            
+            if (eEmemType == EMEM_MAIN)
+            {
+                break;
+            }
+        }
+
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+        for (j = 0; j < 8; j ++)
+        {
+            IicWriteData(SLAVE_I2C_ID_DWI2C, &szFwData[i][j*128], 128);
+        }
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM)
+        IicWriteData(SLAVE_I2C_ID_DWI2C, szFwData[i], 1024);
+#endif
+
+        // Polling 0x3CE4 is 0xD0BC
+        do
+        {
+            nRegData = RegGet16BitValue(0x3CE4);
+        } while (nRegData != 0xD0BC);
+
+        RegSet16BitValue(0x3CE4, 0x2F43);
+    }
+
+    if ((eEmemType == EMEM_ALL) || (eEmemType == EMEM_MAIN))
+    {
+        // write file done and check crc
+        RegSet16BitValue(0x3CE4, 0x1380);
+    }
+//    mdelay(10);
+    msleep(10);
+
+    if ((eEmemType == EMEM_ALL) || (eEmemType == EMEM_MAIN))
+    {
+        // Polling 0x3CE4 is 0x9432
+        do
+        {
+            nRegData = RegGet16BitValue(0x3CE4);
+        } while (nRegData != 0x9432);
+    }
+
+    nCrcMain = nCrcMain ^ 0xffffffff;
+    nCrcInfo = nCrcInfo ^ 0xffffffff;
+
+    if ((eEmemType == EMEM_ALL) || (eEmemType == EMEM_MAIN))
+    {
+        // CRC Main from TP
+        nCrcMainTp = RegGet16BitValue(0x3C80);
+        nCrcMainTp = (nCrcMainTp << 16) | RegGet16BitValue(0x3C82);
+
+        // CRC Info from TP
+        nCrcInfoTp = RegGet16BitValue(0x3CA0);
+        nCrcInfoTp = (nCrcInfoTp << 16) | RegGet16BitValue(0x3CA2);
+    }
+    DBG("nCrcMain=0x%x, nCrcInfo=0x%x, nCrcMainTp=0x%x, nCrcInfoTp=0x%x\n", nCrcMain, nCrcInfo, nCrcMainTp, nCrcInfoTp);
+
+    g_FwDataCount = 0; // Reset g_FwDataCount to 0 after update firmware
+
+    DrvPlatformLyrTouchDeviceResetHw();
+
+#ifdef CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+#ifdef CONFIG_ENABLE_DMA_IIC
+    DmaFree();
+#endif //CONFIG_ENABLE_DMA_IIC
+#endif //CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+
+    if ((eEmemType == EMEM_ALL) || (eEmemType == EMEM_MAIN))
+    {
+        if ((nCrcMainTp != nCrcMain) || (nCrcInfoTp != nCrcInfo))
+        {
+            DBG("Update FAILED\n");
+
+            return -1;
+        }
+    }
+    
+    DBG("Update SUCCESS\n");
+
+    return 0;
+}
+
+static s32 _DrvFwCtrlMsg22xxUpdateFirmware(u8 szFwData[][1024], EmemType_e eEmemType)
+{
+    u32 i, index;
+    u32 nCrcMain, nCrcMainTp;
+    u32 nCrcInfo, nCrcInfoTp;
+    u32 nRemainSize, nBlockSize, nSize;
+    u16 nRegData = 0;
+    u8 szDbBusTxData[1024] = {0};
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM) || defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+    u32 nSizePerWrite = 125;
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM)
+    u32 nSizePerWrite = 1021;
+#endif
+
+    DBG("*** %s() ***\n", __func__);
+
+#ifdef CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+#ifdef CONFIG_ENABLE_DMA_IIC
+    DmaAlloc();
+#endif //CONFIG_ENABLE_DMA_IIC
+#endif //CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+
+    _DrvFwCtrlMsg22xxConvertFwDataTwoDimenToOneDimen(szFwData, _gOneDimenFwData);
+
+    DrvPlatformLyrTouchDeviceResetHw();
+
+    DbBusEnterSerialDebugMode();
+    DbBusStopMCU();
+    DbBusIICUseBus();
+    DbBusIICReshape();
+    
+    DBG("Erase start\n");
+
+    // Stop mcu
+    RegSet16BitValue(0x0FE6, 0x0001);
+
+    // Disable watchdog
+    RegSetLByteValue(0x3C60, 0x55);
+    RegSetLByteValue(0x3C61, 0xAA);
+
+    // Set PROGRAM password
+    RegSetLByteValue(0x161A, 0xBA);
+    RegSetLByteValue(0x161B, 0xAB);
+
+    if (eEmemType == EMEM_ALL) // 48KB + 512Byte
+    {
+        DBG("Erase all block\n");
+
+        // Clear pce
+        RegSetLByteValue(0x1618, 0x80);
+//        mdelay(100);
+	msleep(100);
+
+        // Chip erase
+        RegSet16BitValue(0x160E, BIT3);
+
+        DBG("Wait erase done flag\n");
+
+        do // Wait erase done flag
+        {
+            nRegData = RegGet16BitValue(0x1610); // Memory status
+//            mdelay(50);
+	    msleep(50);
+        } while((nRegData & BIT1) != BIT1);
+    }
+    else if (eEmemType == EMEM_MAIN) // 48KB (32+8+8)
+    {
+        DBG("Erase main block\n");
+
+        for (i = 0; i < 3; i ++)
+        {
+            // Clear pce
+            RegSetLByteValue(0x1618, 0x80);
+//            mdelay(10);
+	    msleep(10);
+
+            if (i == 0)
+            {
+                RegSet16BitValue(0x1600, 0x0000);
+            }
+            else if (i == 1)
+            {
+                RegSet16BitValue(0x1600, 0x8000);
+            }
+            else if (i == 2)
+            {
+                RegSet16BitValue(0x1600, 0xA000);
+            }
+
+            // Sector erase
+            RegSet16BitValue(0x160E, (RegGet16BitValue(0x160E) | BIT2));
+
+            DBG("Wait erase done flag\n");
+
+            do // Wait erase done flag
+            {
+                nRegData = RegGet16BitValue(0x1610); // Memory status
+//                mdelay(50);
+		msleep(50);
+            } while((nRegData & BIT1) != BIT1);
+        }   
+    }
+    else if (eEmemType == EMEM_INFO) // 512Byte
+    {
+        DBG("Erase info block\n");
+
+        // Clear pce
+        RegSetLByteValue(0x1618, 0x80);
+//        mdelay(10);
+	msleep(10);
+
+        RegSet16BitValue(0x1600, 0xC000);
+        
+        // Sector erase
+        RegSet16BitValue(0x160E, (RegGet16BitValue(0x160E) | BIT2));
+
+        DBG("Wait erase done flag\n");
+
+        do // Wait erase done flag
+        {
+            nRegData = RegGet16BitValue(0x1610); // Memory status
+//            mdelay(50);
+	    msleep(50);
+        } while((nRegData & BIT1) != BIT1);
+    }
+    
+    DBG("Erase end\n");
+    
+    // Hold reset pin before program
+    RegSetLByteValue(0x1E06, 0x00);
+
+    /////////////////////////
+    // Program
+    /////////////////////////
+
+    if (eEmemType == EMEM_ALL || eEmemType == EMEM_MAIN) // 48KB
+    {
+        DBG("Program main block start\n");
+		
+        // Program main block
+        RegSet16BitValue(0x161A, 0xABBA);
+        RegSet16BitValue(0x1618, (RegGet16BitValue(0x1618) | 0x80));
+		
+        RegSet16BitValue(0x1600, 0x0000); // Set start address of main block
+        RegSet16BitValue(0x160C, (RegGet16BitValue(0x160C) | 0x01)); // Enable burst mode
+		
+        // Program start
+        szDbBusTxData[0] = 0x10;
+        szDbBusTxData[1] = 0x16;
+        szDbBusTxData[2] = 0x02;
+		
+        IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 3);    
+		
+        szDbBusTxData[0] = 0x20;
+		
+        IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 1);    
+		
+        nRemainSize = MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE * 1024; //48KB
+        index = 0;
+		    
+        while (nRemainSize > 0)
+        {
+            if (nRemainSize > nSizePerWrite)
+            {
+                nBlockSize = nSizePerWrite;
+            }
+            else
+            {
+                nBlockSize = nRemainSize;
+            }
+		
+            szDbBusTxData[0] = 0x10;
+            szDbBusTxData[1] = 0x16;
+            szDbBusTxData[2] = 0x02;
+		
+            nSize = 3;
+		
+            for (i = 0; i < nBlockSize; i ++)
+            {
+                szDbBusTxData[3+i] = _gOneDimenFwData[index*nSizePerWrite+i];
+                nSize ++; 
+            }
+            index ++;
+		
+            IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], nSize);
+		        
+            nRemainSize = nRemainSize - nBlockSize;
+        }
+		
+        // Program end
+        szDbBusTxData[0] = 0x21;
+		
+        IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 1);    
+		
+        nRegData = RegGet16BitValue(0x160C); 
+        RegSet16BitValue(0x160C, nRegData & (~0x01));      
+		
+        DBG("Wait main block write done flag\n");
+		
+        // Polling 0x1610 is 0x0002
+        do
+        {
+            nRegData = RegGet16BitValue(0x1610);
+            nRegData = nRegData & BIT1;
+//            mdelay(10);
+	    msleep(10);
+		
+        } while (nRegData != BIT1); // Wait write done flag
+		
+        DBG("Program main block end\n");
+    }
+    
+    if (eEmemType == EMEM_ALL || eEmemType == EMEM_INFO) // 512 Byte
+    {
+        DBG("Program info block start\n");
+
+        // Program info block
+        RegSet16BitValue(0x161A, 0xABBA);
+        RegSet16BitValue(0x1618, (RegGet16BitValue(0x1618) | 0x80));
+
+        RegSet16BitValue(0x1600, 0xC000); // Set start address of info block
+        RegSet16BitValue(0x160C, (RegGet16BitValue(0x160C) | 0x01)); // Enable burst mode
+
+        // Program start
+        szDbBusTxData[0] = 0x10;
+        szDbBusTxData[1] = 0x16;
+        szDbBusTxData[2] = 0x02;
+
+        IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 3);    
+
+        szDbBusTxData[0] = 0x20;
+
+        IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 1);    
+
+        nRemainSize = MSG22XX_FIRMWARE_INFO_BLOCK_SIZE; //512Byte
+        index = 0;
+    
+        while (nRemainSize > 0)
+        {
+            if (nRemainSize > nSizePerWrite)
+            {
+                nBlockSize = nSizePerWrite;
+            }
+            else
+            {
+                nBlockSize = nRemainSize;
+            }
+
+            szDbBusTxData[0] = 0x10;
+            szDbBusTxData[1] = 0x16;
+            szDbBusTxData[2] = 0x02;
+
+            nSize = 3;
+
+            for (i = 0; i < nBlockSize; i ++)
+            {
+                szDbBusTxData[3+i] = _gOneDimenFwData[(MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE*1024)+(index*nSizePerWrite)+i];
+                nSize ++; 
+            }
+            index ++;
+
+            IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], nSize);
+        
+            nRemainSize = nRemainSize - nBlockSize;
+        }
+
+        // Program end
+        szDbBusTxData[0] = 0x21;
+
+        IicWriteData(SLAVE_I2C_ID_DBBUS, &szDbBusTxData[0], 1);    
+
+        nRegData = RegGet16BitValue(0x160C); 
+        RegSet16BitValue(0x160C, nRegData & (~0x01));      
+
+        DBG("Wait info block write done flag\n");
+
+        // Polling 0x1610 is 0x0002
+        do
+        {
+            nRegData = RegGet16BitValue(0x1610);
+            nRegData = nRegData & BIT1;
+//            mdelay(10);
+	    msleep(10);
+
+        } while (nRegData != BIT1); // Wait write done flag
+
+        DBG("Program info block end\n");
+    }
+
+    if (eEmemType == EMEM_ALL || eEmemType == EMEM_MAIN)
+    {
+        // Get CRC 32 from updated firmware bin file
+        nCrcMain  = _gOneDimenFwData[0xBFFF] << 24;
+        nCrcMain |= _gOneDimenFwData[0xBFFE] << 16;
+        nCrcMain |= _gOneDimenFwData[0xBFFD] << 8;
+        nCrcMain |= _gOneDimenFwData[0xBFFC];
+
+        // CRC Main from TP
+        DBG("Get Main CRC from TP\n");
+
+        nCrcMainTp = _DrvFwCtrlMsg22xxGetFirmwareCrcByHardware(EMEM_MAIN);
+    
+        DBG("nCrcMain=0x%x, nCrcMainTp=0x%x\n", nCrcMain, nCrcMainTp);
+    }
+
+    if (eEmemType == EMEM_ALL || eEmemType == EMEM_INFO)
+    {
+        nCrcInfo  = _gOneDimenFwData[0xC1FF] << 24;
+        nCrcInfo |= _gOneDimenFwData[0xC1FE] << 16;
+        nCrcInfo |= _gOneDimenFwData[0xC1FD] << 8;
+        nCrcInfo |= _gOneDimenFwData[0xC1FC];
+
+        // CRC Info from TP
+        DBG("Get Info CRC from TP\n");
+
+        nCrcInfoTp = _DrvFwCtrlMsg22xxGetFirmwareCrcByHardware(EMEM_INFO);
+
+        DBG("nCrcInfo=0x%x, nCrcInfoTp=0x%x\n", nCrcInfo, nCrcInfoTp);
+    }
+
+    g_FwDataCount = 0; // Reset g_FwDataCount to 0 after update firmware
+
+    DbBusIICNotUseBus();
+    DbBusNotStopMCU();
+    DbBusExitSerialDebugMode();
+
+    DrvPlatformLyrTouchDeviceResetHw();
+
+#ifdef CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+#ifdef CONFIG_ENABLE_DMA_IIC
+    DmaFree();
+#endif //CONFIG_ENABLE_DMA_IIC
+#endif //CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+
+    if (eEmemType == EMEM_ALL)
+    {
+        if ((nCrcMainTp != nCrcMain) || (nCrcInfoTp != nCrcInfo))
+        {
+            DBG("Update FAILED\n");
+          
+            return -1;
+        } 
+    }
+    else if (eEmemType == EMEM_MAIN)
+    {
+        if (nCrcMainTp != nCrcMain)
+        {
+            DBG("Update FAILED\n");
+          
+            return -1;
+        } 
+    }
+    else if (eEmemType == EMEM_INFO)
+    {
+        if (nCrcInfoTp != nCrcInfo)
+        {
+            DBG("Update FAILED\n");
+          
+            return -1;
+        } 
+    }
+    
+    DBG("Update SUCCESS\n");
+
+    return 0;
+}
+
+static s32 _DrvFwCtrlUpdateFirmwareCash(u8 szFwData[][1024])
+{
+    DBG("*** %s() ***\n", __func__);
+
+    DBG("chip type = 0x%x\n", g_ChipType);
+    
+    if (g_ChipType == CHIP_TYPE_MSG21XXA) // (0x02)
+    {
+//        u16 nChipType;
+        u8 nChipVersion = 0;
+
+        DrvPlatformLyrTouchDeviceResetHw();
+
+        // Erase TP Flash first
+        DbBusEnterSerialDebugMode();
+        DbBusStopMCU();
+        DbBusIICUseBus();
+        DbBusIICReshape();
+//        mdelay(300);
+	msleep(300);
+    
+        // Stop MCU
+        RegSetLByteValue(0x0FE6, 0x01);
+
+        // Disable watchdog
+        RegSet16BitValue(0x3C60, 0xAA55);
+    
+        /////////////////////////
+        // Difference between C2 and C3
+        /////////////////////////
+        // c2:MSG2133(1) c32:MSG2133A(2) c33:MSG2138A(2)
+        // check ic type
+//        nChipType = RegGet16BitValue(0x1ECC) & 0xFF;
+            
+        // check ic version
+        nChipVersion = RegGet16BitValue(0x3CEA) & 0xFF;
+
+        DBG("chip version = 0x%x\n", nChipVersion);
+
+        if (nChipVersion == 3)
+        {
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+            return _DrvFwCtrlMsg21xxaUpdateFirmwareBySwId(szFwData, EMEM_MAIN);
+#else
+            return _DrvFwCtrlUpdateFirmwareC33(szFwData, EMEM_MAIN);
+#endif        
+        }
+        else
+        {
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+            return _DrvFwCtrlMsg21xxaUpdateFirmwareBySwId(szFwData, EMEM_MAIN);
+#else
+            return _DrvFwCtrlUpdateFirmwareC32(szFwData, EMEM_ALL);
+#endif        
+        }
+    }
+    else if (g_ChipType == CHIP_TYPE_MSG22XX) // (0x7A)
+    {
+//        _DrvFwCtrlMsg22xxGetTpVendorCode(_gTpVendorCode);
+        
+//        if (_gTpVendorCode[0] == 'C' && _gTpVendorCode[1] == 'N' && _gTpVendorCode[2] == 'T') // for specific TP vendor which store some important information in info block, only update firmware for main block, do not update firmware for info block.
+//        {
+//            return _DrvFwCtrlMsg22xxUpdateFirmware(szFwData, EMEM_MAIN);
+//        }
+//        else
+//        {
+            return _DrvFwCtrlMsg22xxUpdateFirmware(szFwData, EMEM_ALL);
+//        }
+    }
+    else // CHIP_TYPE_MSG21XX (0x01)
+    {
+        DBG("Can not update firmware. Catch-2 is no need to be maintained now.\n");
+        g_FwDataCount = 0; // Reset g_FwDataCount to 0 after update firmware
+
+        return -1;
+    }
+}
+
+/*=============================================================*/
+// GLOBAL FUNCTION DEFINITION
+/*=============================================================*/
+
+u8 DrvFwCtrlGetChipType(void)
+{
+    u8 nChipType = 0;
+
+    DBG("*** %s() ***\n", __func__);
+
+    DrvPlatformLyrTouchDeviceResetHw();
+
+    // Erase TP Flash first
+    DbBusEnterSerialDebugMode();
+    DbBusStopMCU();
+    DbBusIICUseBus();
+    DbBusIICReshape();
+//    mdelay(20);
+    msleep(20);
+
+    // Stop MCU
+    RegSetLByteValue(0x0FE6, 0x01);
+
+    // Disable watchdog
+    RegSet16BitValue(0x3C60, 0xAA55);
+    
+    /////////////////////////
+    // Difference between C2 and C3
+    /////////////////////////
+    // c2:MSG2133(1) c32:MSG2133A(2) c33:MSG2138A(2)
+    // check ic type
+    nChipType = RegGet16BitValue(0x1ECC) & 0xFF;
+
+    if (nChipType != CHIP_TYPE_MSG21XX &&   // (0x01) 
+        nChipType != CHIP_TYPE_MSG21XXA &&  // (0x02) 
+        nChipType != CHIP_TYPE_MSG26XXM &&  // (0x03) 
+        nChipType != CHIP_TYPE_MSG22XX)     // (0x7A) 
+    {
+        nChipType = 0;
+    }
+
+    DBG("*** Chip Type = 0x%x ***\n", nChipType);
+
+    DrvPlatformLyrTouchDeviceResetHw();
+
+    return nChipType;
+}
+
+void DrvFwCtrlGetCustomerFirmwareVersion(u16 *pMajor, u16 *pMinor, u8 **ppVersion)
+{
+    DBG("*** %s() ***\n", __func__);
+    
+    if (g_ChipType == CHIP_TYPE_MSG21XXA || g_ChipType == CHIP_TYPE_MSG21XX)
+    {
+        u8 szDbBusTxData[3] = {0};
+        u8 szDbBusRxData[4] = {0};
+
+        szDbBusTxData[0] = 0x53;
+        szDbBusTxData[1] = 0x00;
+
+        if (g_ChipType == CHIP_TYPE_MSG21XXA)
+        {    
+            szDbBusTxData[2] = 0x2A;
+        }
+        else if (g_ChipType == CHIP_TYPE_MSG21XX)
+        {
+            szDbBusTxData[2] = 0x74;
+        }
+        else
+        {
+            szDbBusTxData[2] = 0x2A;
+        }
+
+        mutex_lock(&g_Mutex);
+
+        IicWriteData(SLAVE_I2C_ID_DWI2C, &szDbBusTxData[0], 3);
+        IicReadData(SLAVE_I2C_ID_DWI2C, &szDbBusRxData[0], 4);
+
+        mutex_unlock(&g_Mutex);
+
+        *pMajor = (szDbBusRxData[1]<<8) + szDbBusRxData[0];
+        *pMinor = (szDbBusRxData[3]<<8) + szDbBusRxData[2];
+    }
+    else if (g_ChipType == CHIP_TYPE_MSG22XX)
+    {
+        u16 nRegData1, nRegData2;
+
+        mutex_lock(&g_Mutex);
+
+        DrvPlatformLyrTouchDeviceResetHw();
+    
+        DbBusEnterSerialDebugMode();
+        DbBusStopMCU();
+        DbBusIICUseBus();
+        DbBusIICReshape();
+//        mdelay(100);
+	msleep(100);
+        
+        // Stop mcu
+        RegSetLByteValue(0x0FE6, 0x01); 
+
+        // Stop watchdog
+        RegSet16BitValue(0x3C60, 0xAA55);
+
+        // RIU password
+        RegSet16BitValue(0x161A, 0xABBA); 
+
+        // Clear pce
+        RegSet16BitValue(0x1618, (RegGet16BitValue(0x1618) | 0x80));
+
+        RegSet16BitValue(0x1600, 0xBFF4); // Set start address for customer firmware version on main block
+    
+        // Enable burst mode
+//        RegSet16BitValue(0x160C, (RegGet16BitValue(0x160C) | 0x01));
+
+        // Set pce
+        RegSet16BitValue(0x1618, (RegGet16BitValue(0x1618) | 0x40)); 
+    
+        RegSetLByteValue(0x160E, 0x01); 
+
+        nRegData1 = RegGet16BitValue(0x1604);
+        nRegData2 = RegGet16BitValue(0x1606);
+
+        *pMajor = (((nRegData1 >> 8) & 0xFF) << 8) + (nRegData1 & 0xFF);
+        *pMinor = (((nRegData2 >> 8) & 0xFF) << 8) + (nRegData2 & 0xFF);
+
+        // Clear burst mode
+//        RegSet16BitValue(0x160C, RegGet16BitValue(0x160C) & (~0x01));      
+
+        RegSet16BitValue(0x1600, 0x0000); 
+
+        // Clear RIU password
+        RegSet16BitValue(0x161A, 0x0000); 
+
+        DbBusIICNotUseBus();
+        DbBusNotStopMCU();
+        DbBusExitSerialDebugMode();
+
+        DrvPlatformLyrTouchDeviceResetHw();
+//        mdelay(100);
+	msleep(100);
+
+        mutex_unlock(&g_Mutex);
+    }
+
+    DBG("*** major = %d ***\n", *pMajor);
+    DBG("*** minor = %d ***\n", *pMinor);
+
+    if (*ppVersion == NULL)
+    {
+        *ppVersion = kzalloc(sizeof(u8)*6, GFP_KERNEL);
+    }
+    
+    sprintf(*ppVersion, "%03d%03d", *pMajor, *pMinor);
+}
+
+void DrvFwCtrlGetPlatformFirmwareVersion(u8 **ppVersion)
+{
+    u32 i;
+    u16 nRegData1, nRegData2;
+    u8 szDbBusRxData[12] = {0};
+
+    DBG("*** %s() ***\n", __func__);
+
+    mutex_lock(&g_Mutex);
+
+    DrvPlatformLyrTouchDeviceResetHw();
+    
+    DbBusEnterSerialDebugMode();
+    DbBusStopMCU();
+    DbBusIICUseBus();
+    DbBusIICReshape();
+//    mdelay(100);
+    msleep(100);
+
+    if (g_ChipType == CHIP_TYPE_MSG22XX) // Only MSG22XX support platform firmware version
+    {
+        // Stop mcu
+        RegSetLByteValue(0x0FE6, 0x01); 
+
+        // Stop watchdog
+        RegSet16BitValue(0x3C60, 0xAA55);
+
+        // RIU password
+        RegSet16BitValue(0x161A, 0xABBA); 
+
+        // Clear pce
+        RegSet16BitValue(0x1618, (RegGet16BitValue(0x1618) | 0x80));
+
+        RegSet16BitValue(0x1600, 0xC1F2); // Set start address for platform firmware version on info block(Actually, start reading from 0xC1F0)
+    
+        // Enable burst mode
+        RegSet16BitValue(0x160C, (RegGet16BitValue(0x160C) | 0x01));
+
+        // Set pce
+        RegSet16BitValue(0x1618, (RegGet16BitValue(0x1618) | 0x40)); 
+    
+        for (i = 0; i < 3; i ++)
+        {
+            RegSetLByteValue(0x160E, 0x01); 
+
+            nRegData1 = RegGet16BitValue(0x1604);
+            nRegData2 = RegGet16BitValue(0x1606);
+
+            szDbBusRxData[i*4+0] = (nRegData1 & 0xFF);
+            szDbBusRxData[i*4+1] = ((nRegData1 >> 8 ) & 0xFF);
+            
+//            DBG("szDbBusRxData[%d] = 0x%x , %c \n", i*4+0, szDbBusRxData[i*4+0], szDbBusRxData[i*4+0]); // add for debug
+//            DBG("szDbBusRxData[%d] = 0x%x , %c \n", i*4+1, szDbBusRxData[i*4+1], szDbBusRxData[i*4+1]); // add for debug
+            
+            szDbBusRxData[i*4+2] = (nRegData2 & 0xFF);
+            szDbBusRxData[i*4+3] = ((nRegData2 >> 8 ) & 0xFF);
+
+//            DBG("szDbBusRxData[%d] = 0x%x , %c \n", i*4+2, szDbBusRxData[i*4+2], szDbBusRxData[i*4+2]); // add for debug
+//            DBG("szDbBusRxData[%d] = 0x%x , %c \n", i*4+3, szDbBusRxData[i*4+3], szDbBusRxData[i*4+3]); // add for debug
+        }
+
+        // Clear burst mode
+        RegSet16BitValue(0x160C, RegGet16BitValue(0x160C) & (~0x01));      
+
+        RegSet16BitValue(0x1600, 0x0000); 
+
+        // Clear RIU password
+        RegSet16BitValue(0x161A, 0x0000); 
+
+        if (*ppVersion == NULL)
+        {
+            *ppVersion = kzalloc(sizeof(u8)*10, GFP_KERNEL);
+        }
+    
+        sprintf(*ppVersion, "%c%c%c%c%c%c%c%c%c%c", szDbBusRxData[2], szDbBusRxData[3], szDbBusRxData[4],
+            szDbBusRxData[5], szDbBusRxData[6], szDbBusRxData[7], szDbBusRxData[8], szDbBusRxData[9], szDbBusRxData[10], szDbBusRxData[11]);
+    }
+    else
+    {
+        if (*ppVersion == NULL)
+        {
+            *ppVersion = kzalloc(sizeof(u8)*10, GFP_KERNEL);
+        }
+    
+        sprintf(*ppVersion, "%s", "N/A");
+    }
+
+    DbBusIICNotUseBus();
+    DbBusNotStopMCU();
+    DbBusExitSerialDebugMode();
+
+    DrvPlatformLyrTouchDeviceResetHw();
+//    mdelay(100);
+    msleep(100);
+
+    mutex_unlock(&g_Mutex);
+    
+    DBG("*** platform firmware version = %s ***\n", *ppVersion);
+}
+
+s32 DrvFwCtrlUpdateFirmware(u8 szFwData[][1024], EmemType_e eEmemType)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    return _DrvFwCtrlUpdateFirmwareCash(szFwData);
+}
+
+void DrvFwCtrlHandleFingerTouch(void)
+{
+    TouchInfo_t tInfo;
+    u32 i;
+    u8 nTouchKeyCode = 0;
+    static u32 nLastKeyCode = 0;
+    u8 *pPacket = NULL;
+    u16 nReportPacketLength = 0;
+
+//    DBG("*** %s() ***\n", __func__);
+    
+    memset(&tInfo, 0x0, sizeof(tInfo));
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+    if (g_FirmwareMode == FIRMWARE_MODE_DEMO_MODE)
+    {
+        DBG("FIRMWARE_MODE_DEMO_MODE\n");
+
+        nReportPacketLength = DEMO_MODE_PACKET_LENGTH;
+        pPacket = g_DemoModePacket;
+    }
+    else if (g_FirmwareMode == FIRMWARE_MODE_DEBUG_MODE)
+    {
+        DBG("FIRMWARE_MODE_DEBUG_MODE\n");
+
+        if (g_FirmwareInfo.nLogModePacketHeader != 0x62)
+        {
+            DBG("WRONG DEBUG MODE HEADER : 0x%x\n", g_FirmwareInfo.nLogModePacketHeader);
+            return;
+        }
+
+        if (g_LogModePacket == NULL)
+        {
+            g_LogModePacket = kzalloc(sizeof(u8)*g_FirmwareInfo.nLogModePacketLength, GFP_KERNEL);
+        }
+        
+        nReportPacketLength = g_FirmwareInfo.nLogModePacketLength;
+        pPacket = g_LogModePacket;
+    }
+    else if (g_FirmwareMode == FIRMWARE_MODE_RAW_DATA_MODE)
+    {
+        DBG("FIRMWARE_MODE_RAW_DATA_MODE\n");
+
+        if (g_FirmwareInfo.nLogModePacketHeader != 0x62)
+        {
+            DBG("WRONG RAW DATA MODE HEADER : 0x%x\n", g_FirmwareInfo.nLogModePacketHeader);
+            return;
+        }
+
+        if (g_LogModePacket == NULL)
+        {
+            g_LogModePacket = kzalloc(sizeof(u8)*g_FirmwareInfo.nLogModePacketLength, GFP_KERNEL);
+        }
+        
+        nReportPacketLength = g_FirmwareInfo.nLogModePacketLength;
+        pPacket = g_LogModePacket;
+    }
+    else
+    {
+        DBG("WRONG FIRMWARE MODE : 0x%x\n", g_FirmwareMode);
+        return;
+    }
+#else
+    DBG("FIRMWARE_MODE_DEMO_MODE\n");
+
+    nReportPacketLength = DEMO_MODE_PACKET_LENGTH;
+    pPacket = g_DemoModePacket;
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+    if (g_GestureWakeupFlag == 1)
+    {
+        DBG("Set gesture wakeup packet length, g_ChipType=%d\n", g_ChipType);
+        
+        if (g_ChipType == CHIP_TYPE_MSG22XX)
+        {
+            if (_gGestureWakeupPacket == NULL)
+            {
+                _gGestureWakeupPacket = kzalloc(sizeof(u8)*GESTURE_WAKEUP_PACKET_LENGTH, GFP_KERNEL);
+            }
+
+            nReportPacketLength = GESTURE_WAKEUP_PACKET_LENGTH;
+            pPacket = _gGestureWakeupPacket;
+        } 
+        else if (g_ChipType == CHIP_TYPE_MSG21XXA)
+        {
+            if (_gGestureWakeupPacket == NULL)
+            {
+                _gGestureWakeupPacket = kzalloc(sizeof(u8)*DEMO_MODE_PACKET_LENGTH, GFP_KERNEL);
+            }
+
+        		nReportPacketLength = DEMO_MODE_PACKET_LENGTH;
+            pPacket = _gGestureWakeupPacket;
+        }
+        else
+        {
+            DBG("This chip type does not support gesture wakeup.\n");
+            return;
+        }
+    }
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM)
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+    if (g_GestureWakeupFlag == 1)
+    {
+        u32 i = 0, rc;
+        
+        while (i < 5)
+        {
+//            mdelay(50);
+	      msleep(50);
+
+            rc = IicReadData(SLAVE_I2C_ID_DWI2C, &pPacket[0], nReportPacketLength);
+            
+            if (rc > 0)
+            {
+                break;
+            }
+            
+            i ++;
+        }
+    }
+    else
+    {
+        IicReadData(SLAVE_I2C_ID_DWI2C, &pPacket[0], nReportPacketLength);
+    }
+#else
+    IicReadData(SLAVE_I2C_ID_DWI2C, &pPacket[0], nReportPacketLength);
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP   
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+    IicReadData(SLAVE_I2C_ID_DWI2C, &pPacket[0], nReportPacketLength);
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+#ifdef CONFIG_ENABLE_DMA_IIC
+    DmaAlloc();
+#endif //CONFIG_ENABLE_DMA_IIC
+    IicReadData(SLAVE_I2C_ID_DWI2C, &pPacket[0], nReportPacketLength);
+#ifdef CONFIG_ENABLE_DMA_IIC
+    DmaFree();
+#endif //CONFIG_ENABLE_DMA_IIC
+#endif
+    
+    if (0 == _DrvFwCtrlParsePacket(pPacket, nReportPacketLength, &tInfo))
+    {
+        //report...
+        if ((tInfo.nFingerNum) == 0)   //touch end
+        {
+            if (nLastKeyCode != 0)
+            {
+                DBG("key touch released\n");
+
+                input_report_key(g_InputDevice, BTN_TOUCH, 0);
+                input_report_key(g_InputDevice, nLastKeyCode, 0);
+                    
+                nLastKeyCode = 0; //clear key status..
+            }
+            else
+            {
+                DrvPlatformLyrFingerTouchReleased(0, 0);
+            }
+        }
+        else //touch on screen
+        {
+            if (tInfo.nTouchKeyCode != 0)
+            {
+#ifdef CONFIG_TP_HAVE_KEY
+                if (tInfo.nTouchKeyCode == 4) // TOUCH_KEY_HOME
+                {
+                    nTouchKeyCode = g_TpVirtualKey[1];           
+                }
+                else if (tInfo.nTouchKeyCode == 1) // TOUCH_KEY_MENU
+                {
+                    nTouchKeyCode = g_TpVirtualKey[0];
+                }           
+                else if (tInfo.nTouchKeyCode == 2) // TOUCH_KEY_BACK
+                {
+                    nTouchKeyCode = g_TpVirtualKey[2];
+                }           
+                else if (tInfo.nTouchKeyCode == 8) // TOUCH_KEY_SEARCH 
+                {	
+                    nTouchKeyCode = g_TpVirtualKey[3];           
+                }
+
+                if (nLastKeyCode != nTouchKeyCode)
+                {
+                    DBG("key touch pressed\n");
+                    DBG("nTouchKeyCode = %d, nLastKeyCode = %d\n", nTouchKeyCode, nLastKeyCode);
+                    
+                    nLastKeyCode = nTouchKeyCode;
+
+                    input_report_key(g_InputDevice, BTN_TOUCH, 1);
+                    input_report_key(g_InputDevice, nTouchKeyCode, 1);
+                }
+#endif //CONFIG_TP_HAVE_KEY
+            }
+            else
+            {
+                DBG("tInfo->nFingerNum = %d...............\n", tInfo.nFingerNum);
+                
+                for (i = 0; i < tInfo.nFingerNum; i ++) 
+                {
+                    DrvPlatformLyrFingerTouchPressed(tInfo.tPoint[i].nX, tInfo.tPoint[i].nY, 0, 0);
+                }
+            }
+        }
+        
+        input_sync(g_InputDevice);
+    }
+}
+
+//------------------------------------------------------------------------------//
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+
+void DrvFwCtrlOpenGestureWakeup(u16 nMode)
+{
+    u8 szDbBusTxData[3] = {0};
+    u32 i = 0;
+    s32 rc;
+
+    DBG("*** %s() ***\n", __func__);
+
+    DBG("wakeup mode = 0x%x\n", nMode);
+
+    szDbBusTxData[0] = 0x58;
+    szDbBusTxData[1] = (nMode >> 8) & 0xFF;
+    szDbBusTxData[2] = nMode & 0xFF;
+
+    while (i < 5)
+    {
+        rc = IicWriteData(SLAVE_I2C_ID_DWI2C, &szDbBusTxData[0], 3);
+        
+        if (rc > 0)
+        {
+            DBG("Enable gesture wakeup success\n");
+            break;
+        }
+        
+        i ++;
+    }
+    
+    if (i == 5)
+    {
+        DBG("Enable gesture wakeup failed\n");		
+    }
+/*
+    rc = IicWriteData(SLAVE_I2C_ID_DWI2C, &szDbBusTxData[0], 3);
+    if (rc < 0)
+    {
+        DBG("Enable gesture wakeup failed\n");
+    }
+    else
+    {
+        DBG("Enable gesture wakeup success\n");
+    }
+*/    
+    g_GestureWakeupFlag = 1; // gesture wakeup is enabled
+}
+
+void DrvFwCtrlCloseGestureWakeup(void)
+{
+//    u8 szDbBusTxData[3] = {0};
+//    s32 rc;
+
+    DBG("*** %s() ***\n", __func__);
+/*   
+    szDbBusTxData[0] = 0x58;
+    szDbBusTxData[1] = 0x00;
+    szDbBusTxData[2] = 0x00;
+
+    rc = IicWriteData(SLAVE_I2C_ID_DWI2C, &szDbBusTxData[0], 3);
+    if (rc < 0)
+    {
+        DBG("Disable gesture wakeup failed\n");
+    }
+    else
+    {
+        DBG("Disable gesture wakeup success\n");
+    }
+*/
+    g_GestureWakeupFlag = 0; // gesture wakeup is disabled
+}
+
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+
+//------------------------------------------------------------------------------//
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+u16 DrvFwCtrlChangeFirmwareMode(u16 nMode)
+{
+    u8 szDbBusTxData[2] = {0};
+
+    DBG("*** %s() ***\n", __func__);
+
+    szDbBusTxData[0] = 0x02;
+    szDbBusTxData[1] = (u8)nMode;
+
+//    mdelay(20);
+    msleep(20);
+    
+    mutex_lock(&g_Mutex);
+
+    IicWriteData(SLAVE_I2C_ID_DWI2C, &szDbBusTxData[0], 2);
+
+    mutex_unlock(&g_Mutex);
+
+    return nMode;
+}
+
+void DrvFwCtrlGetFirmwareInfo(FirmwareInfo_t *pInfo)
+{
+    u8 szDbBusTxData[1] = {0};
+    u8 szDbBusRxData[8] = {0};
+    
+    DBG("*** %s() ***\n", __func__);
+
+    szDbBusTxData[0] = 0x01;
+
+    mutex_lock(&g_Mutex);
+    
+//    mdelay(300);
+    msleep(300);
+    IicWriteData(SLAVE_I2C_ID_DWI2C, &szDbBusTxData[0], 1);
+//    mdelay(20);
+    msleep(20);
+    IicReadData(SLAVE_I2C_ID_DWI2C, &szDbBusRxData[0], 8);
+
+    mutex_unlock(&g_Mutex);
+    
+    if ((szDbBusRxData[1] & 0x80) == 0x80)
+    {
+        pInfo->nIsCanChangeFirmwareMode = 0;	
+    }
+    else
+    {
+        pInfo->nIsCanChangeFirmwareMode = 1;	
+    }
+    
+    pInfo->nFirmwareMode = szDbBusRxData[1] & 0x7F;
+    pInfo->nLogModePacketHeader = szDbBusRxData[2];
+    pInfo->nLogModePacketLength = (szDbBusRxData[3]<<8) + szDbBusRxData[4];
+
+    DBG("pInfo->nFirmwareMode=0x%x, pInfo->nLogModePacketHeader=0x%x, pInfo->nLogModePacketLength=%d, pInfo->nIsCanChangeFirmwareMode=%d\n", pInfo->nFirmwareMode, pInfo->nLogModePacketHeader, pInfo->nLogModePacketLength, pInfo->nIsCanChangeFirmwareMode);
+}
+
+void DrvFwCtrlRestoreFirmwareModeToLogDataMode(void)
+{
+    FirmwareInfo_t tInfo;
+    
+    DBG("*** %s() ***\n", __func__);
+
+    memset(&tInfo, 0x0, sizeof(FirmwareInfo_t));
+
+    DrvFwCtrlGetFirmwareInfo(&tInfo);
+
+    DBG("g_FirmwareMode = 0x%x, tInfo.nFirmwareMode = 0x%x\n", g_FirmwareMode, tInfo.nFirmwareMode);
+
+    // Since reset_hw() will reset the firmware mode to demo mode, we must reset the firmware mode again after reset_hw().
+    if (g_FirmwareMode == FIRMWARE_MODE_DEBUG_MODE && FIRMWARE_MODE_DEBUG_MODE != tInfo.nFirmwareMode)
+    {
+        g_FirmwareMode = DrvFwCtrlChangeFirmwareMode(FIRMWARE_MODE_DEBUG_MODE);
+    }
+    else if (g_FirmwareMode == FIRMWARE_MODE_RAW_DATA_MODE && FIRMWARE_MODE_RAW_DATA_MODE != tInfo.nFirmwareMode)
+    {
+        g_FirmwareMode = DrvFwCtrlChangeFirmwareMode(FIRMWARE_MODE_RAW_DATA_MODE);
+    }
+    else
+    {
+        DBG("firmware mode is not restored\n");
+    }
+}
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+//------------------------------------------------------------------------------//
+
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+
+void DrvFwCtrlCheckFirmwareUpdateBySwId(void)
+{
+    if (g_ChipType == CHIP_TYPE_MSG21XXA)   
+    {
+        _DrvFwCtrlMsg21xxaCheckFirmwareUpdateBySwId();
+    }
+    else if (g_ChipType == CHIP_TYPE_MSG22XX)    
+    {
+        _DrvFwCtrlMsg22xxCheckFirmwareUpdateBySwId();
+    }
+    else
+    {
+        DBG("This chip type (%d) does not support update firmware by sw id\n", g_ChipType);
+    }
+}	
+
+#endif //CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+
+//------------------------------------------------------------------------------//
Index: kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_utility_adaption.h
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_utility_adaption.h	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_utility_adaption.h	(revision 182225)
@@ -0,0 +1,101 @@
+////////////////////////////////////////////////////////////////////////////////
+//
+// Copyright (c) 2006-2012 MStar Semiconductor, Inc.
+// All rights reserved.
+//
+// Unless otherwise stipulated in writing, any and all information contained
+// herein regardless in any format shall remain the sole proprietary of
+// MStar Semiconductor Inc. and be kept in strict confidence
+// (??MStar Confidential Information??) by the recipient.
+// Any unauthorized act including without limitation unauthorized disclosure,
+// copying, use, reproduction, sale, distribution, modification, disassembling,
+// reverse engineering and compiling of the contents of MStar Confidential
+// Information is unlawful and strictly prohibited. MStar hereby reserves the
+// rights to any and all damages, losses, costs and expenses resulting therefrom.
+//
+////////////////////////////////////////////////////////////////////////////////
+
+/**
+ *
+ * @file    mstar_drv_utility_adaption.h
+ *
+ * @brief   This file defines the interface of touch screen
+ *
+ * @version v2.2.0.0
+ *
+ */
+
+#ifndef __MSTAR_DRV_UTILITY_ADAPTION_H__
+#define __MSTAR_DRV_UTILITY_ADAPTION_H__ (1)
+
+
+////////////////////////////////////////////////////////////
+/// Included Files
+////////////////////////////////////////////////////////////
+
+#include "mstar_drv_common.h"
+
+////////////////////////////////////////////////////////////
+/// Constant
+////////////////////////////////////////////////////////////
+
+
+////////////////////////////////////////////////////////////
+/// Data Types
+////////////////////////////////////////////////////////////
+
+
+////////////////////////////////////////////////////////////
+/// Variables
+////////////////////////////////////////////////////////////
+
+
+////////////////////////////////////////////////////////////
+/// Macro
+////////////////////////////////////////////////////////////
+#define BK_REG8_WL(addr,val)    ( RegSetLByteValue( addr, val ) )
+#define BK_REG8_WH(addr,val)    ( RegSetHByteValue( addr, val ) )
+#define BK_REG16_W(addr,val)    ( RegSet16BitValue( addr, val ) )
+#define BK_REG8_RL(addr)        ( RegGetLByteValue( addr ) )
+#define BK_REG8_RH(addr)        ( RegGetHByteValue( addr ) )
+#define BK_REG16_R(addr)        ( RegGet16BitValue( addr ) )
+
+#define PRINTF_EMERG(fmt, ...)  printk(KERN_EMERG pr_fmt(fmt), ##__VA_ARGS__)
+#define PRINTF_ALERT(fmt, ...)  printk(KERN_ALERT pr_fmt(fmt), ##__VA_ARGS__)
+#define PRINTF_CRIT(fmt, ...)   printk(KERN_CRIT pr_fmt(fmt), ##__VA_ARGS__) 
+#define PRINTF_ERR(fmt, ...)    printk(KERN_ERR pr_fmt(fmt), ##__VA_ARGS__)
+#define PRINTF_WARN(fmt, ...)   printk(KERN_WARNING pr_fmt(fmt), ##__VA_ARGS__)
+#define PRINTF_NOTICE(fmt, ...) printk(KERN_NOTICE pr_fmt(fmt), ##__VA_ARGS__)
+#define PRINTF_INFO(fmt, ...)   printk(KERN_INFO pr_fmt(fmt), ##__VA_ARGS__)
+#define PRINTF_DEBUG(fmt, ...)  printk(KERN_DEBUG pr_fmt(fmt), ##__VA_ARGS__) 
+
+////////////////////////////////////////////////////////////
+/// Function Prototypes
+////////////////////////////////////////////////////////////
+
+#ifdef CONFIG_ENABLE_DMA_IIC
+extern void DmaAlloc(void);
+extern void DmaFree(void);
+#endif //CONFIG_ENABLE_DMA_IIC
+extern u16  RegGet16BitValue(u16 nAddr);
+extern u8   RegGetLByteValue(u16 nAddr);
+extern u8   RegGetHByteValue(u16 nAddr);
+extern void RegSet16BitValue(u16 nAddr, u16 nData);
+extern void RegSetLByteValue(u16 nAddr, u8 nData);
+extern void RegSetHByteValue(u16 nAddr, u8 nData);
+extern void RegSet16BitValueOn(u16 nAddr, u16 nData);
+extern void RegSet16BitValueOff(u16 nAddr, u16 nData);
+extern void DbBusEnterSerialDebugMode(void);
+extern void DbBusExitSerialDebugMode(void);
+extern void DbBusIICUseBus(void);
+extern void DbBusIICNotUseBus(void);
+extern void DbBusIICReshape(void);
+extern void DbBusStopMCU(void);
+extern void DbBusNotStopMCU(void);
+extern s32 IicWriteData(u8 nSlaveId, u8* pBuf, u16 nSize);
+extern s32 IicReadData(u8 nSlaveId, u8* pBuf, u16 nSize);
+extern void mstpMemSet(void *pDst, s8 nVal, u32 nSize);
+extern void mstpMemCopy(void *pDst, void *pSource, u32 nSize);
+extern void mstpDelay(u32 nTime);
+
+#endif // __MSTAR_DRV_UTILITY_ADAPTION_H__
Index: kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_platform_porting_layer.h
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_platform_porting_layer.h	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_platform_porting_layer.h	(revision 182225)
@@ -0,0 +1,125 @@
+////////////////////////////////////////////////////////////////////////////////
+//
+// Copyright (c) 2006-2012 MStar Semiconductor, Inc.
+// All rights reserved.
+//
+// Unless otherwise stipulated in writing, any and all information contained
+// herein regardless in any format shall remain the sole proprietary of
+// MStar Semiconductor Inc. and be kept in strict confidence
+// (??MStar Confidential Information??) by the recipient.
+// Any unauthorized act including without limitation unauthorized disclosure,
+// copying, use, reproduction, sale, distribution, modification, disassembling,
+// reverse engineering and compiling of the contents of MStar Confidential
+// Information is unlawful and strictly prohibited. MStar hereby reserves the
+// rights to any and all damages, losses, costs and expenses resulting therefrom.
+//
+////////////////////////////////////////////////////////////////////////////////
+
+/**
+ *
+ * @file    mstar_drv_platform_porting_layer.h
+ *
+ * @brief   This file defines the interface of touch screen
+ *
+ * @version v2.2.0.0
+ *
+ */
+
+#ifndef __MSTAR_DRV_PLATFORM_PORTING_LAYER_H__
+#define __MSTAR_DRV_PLATFORM_PORTING_LAYER_H__
+
+/*--------------------------------------------------------------------------*/
+/* INCLUDE FILE                                                             */
+/*--------------------------------------------------------------------------*/
+
+#include "mstar_drv_common.h"
+
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM)
+
+#include <soc/sprd/board.h>
+#include <soc/sprd/gpio.h>
+
+#ifdef CONFIG_ENABLE_REGULATOR_POWER_ON
+#include <soc/sprd/regulator.h>
+#include <linux/regulator/consumer.h>
+#endif //CONFIG_ENABLE_REGULATOR_POWER_ON
+
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+
+#ifdef CONFIG_ENABLE_REGULATOR_POWER_ON
+#include <linux/regulator/consumer.h>
+#endif //CONFIG_ENABLE_REGULATOR_POWER_ON
+
+
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+
+#include <linux/sched.h>
+#include <linux/kthread.h>
+#include <linux/rtpm_prio.h>
+#include <linux/wait.h>
+#include <linux/time.h>
+#include <linux/hwmsen_helper.h>
+//#include <linux/hw_module_info.h>
+
+#include <linux/fs.h>
+#include <asm/uaccess.h>
+#include <linux/namei.h>
+#include <linux/vmalloc.h>
+
+#include <mach/mt_pm_ldo.h>
+#include <mach/mt_typedefs.h>
+#include <mach/mt_boot.h>
+#include <mach/mt_gpio.h>
+
+#include <cust_eint.h>
+#include "tpd.h"
+#include "cust_gpio_usage.h"
+
+#endif
+
+/*--------------------------------------------------------------------------*/
+/* PREPROCESSOR CONSTANT DEFINITION                                         */
+/*--------------------------------------------------------------------------*/
+
+/*
+ * Note.
+ * Please change the below GPIO pin setting to follow the platform that you are using(EX. MediaTek, Spreadtrum, Qualcomm).
+ */
+#if defined(CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM)
+
+// TODO : Please FAE colleague to confirm with customer device driver engineer about the value of RST and INT GPIO setting
+//#define MS_TS_MSG_IC_GPIO_RST   GPIO_TOUCH_RESET //53 //35
+//#define MS_TS_MSG_IC_GPIO_INT   GPIO_TOUCH_IRQ   //52 //37
+
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM)
+
+// TODO : Please FAE colleague to confirm with customer device driver engineer about the value of RST and INT GPIO setting
+#define MS_TS_MSG_IC_GPIO_RST   0
+#define MS_TS_MSG_IC_GPIO_INT   1
+#elif defined(CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM)
+#define MS_TS_MSG_IC_GPIO_RST   (GPIO_CTP_RST_PIN)
+#define MS_TS_MSG_IC_GPIO_INT   (GPIO_CTP_EINT_PIN)
+#endif
+
+/*--------------------------------------------------------------------------*/
+/* GLOBAL FUNCTION DECLARATION                                              */
+/*--------------------------------------------------------------------------*/
+
+extern void DrvPlatformLyrDisableFingerTouchReport(void);
+extern void DrvPlatformLyrEnableFingerTouchReport(void);
+extern void DrvPlatformLyrFingerTouchPressed(s32 nX, s32 nY, s32 nPressure, s32 nId);
+extern void DrvPlatformLyrFingerTouchReleased(s32 nX, s32 nY);
+extern s32 DrvPlatformLyrInputDeviceInitialize(struct i2c_client *pClient);
+extern void DrvPlatformLyrSetIicDataRate(struct i2c_client *pClient, u32 nIicDataRate);
+extern void DrvPlatformLyrTouchDevicePowerOff(void);
+extern void DrvPlatformLyrTouchDevicePowerOn(void);
+#ifdef CONFIG_ENABLE_REGULATOR_POWER_ON
+extern void DrvPlatformLyrTouchDeviceRegulatorPowerOn(void);
+#endif //CONFIG_ENABLE_REGULATOR_POWER_ON
+extern void DrvPlatformLyrTouchDeviceRegisterEarlySuspend(void);
+extern s32 DrvPlatformLyrTouchDeviceRegisterFingerTouchInterruptHandler(void);
+extern s32 DrvPlatformLyrTouchDeviceRemove(struct i2c_client *pClient);
+extern s32 DrvPlatformLyrTouchDeviceRequestGPIO(void);        
+extern void DrvPlatformLyrTouchDeviceResetHw(void);
+        
+#endif  /* __MSTAR_DRV_PLATFORM_PORTING_LAYER_H__ */
Index: kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_common.c
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_common.c	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_common.c	(revision 182225)
@@ -0,0 +1,152 @@
+////////////////////////////////////////////////////////////////////////////////
+//
+// Copyright (c) 2006-2012 MStar Semiconductor, Inc.
+// All rights reserved.
+//
+// Unless otherwise stipulated in writing, any and all information contained
+// herein regardless in any format shall remain the sole proprietary of
+// MStar Semiconductor Inc. and be kept in strict confidence
+// (??MStar Confidential Information??) by the recipient.
+// Any unauthorized act including without limitation unauthorized disclosure,
+// copying, use, reproduction, sale, distribution, modification, disassembling,
+// reverse engineering and compiling of the contents of MStar Confidential
+// Information is unlawful and strictly prohibited. MStar hereby reserves the
+// rights to any and all damages, losses, costs and expenses resulting therefrom.
+//
+////////////////////////////////////////////////////////////////////////////////
+
+/**
+ *
+ * @file    mstar_drv_common.c
+ *
+ * @brief   This file defines the interface of touch screen
+ *
+ * @version v2.2.0.0
+ *
+ */
+
+/*=============================================================*/
+// INCLUDE FILE
+/*=============================================================*/
+
+#include "mstar_drv_common.h"
+
+/*=============================================================*/
+// MACRO DEFINITION
+/*=============================================================*/
+
+/*=============================================================*/
+// CONSTANT VALUE DEFINITION
+/*=============================================================*/
+
+
+/*=============================================================*/
+// VARIABLE DEFINITION
+/*=============================================================*/
+
+static u32 _gCrc32Table[256]; 
+
+/*=============================================================*/
+// DATA TYPE DEFINITION
+/*=============================================================*/
+
+/*=============================================================*/
+// GLOBAL FUNCTION DEFINITION
+/*=============================================================*/
+
+/// CRC
+u32 DrvCommonCrcDoReflect(u32 nRef, s8 nCh)
+{
+    u32 nValue = 0;
+    u32 i = 0;
+
+    for (i = 1; i < (nCh + 1); i ++)
+    {
+        if (nRef & 1)
+        {
+            nValue |= 1 << (nCh - i);
+        }
+        nRef >>= 1;
+    }
+
+    return nValue;
+}
+
+u32 DrvCommonCrcGetValue(u32 nText, u32 nPrevCRC)
+{
+    u32 nCRC = nPrevCRC;
+
+    nCRC = (nCRC >> 8) ^ _gCrc32Table[(nCRC & 0xFF) ^ nText];
+
+    return nCRC;
+}
+
+void DrvCommonCrcInitTable(void)
+{
+    u32 nMagicNumber = 0x04c11db7;
+    u32 i, j;
+
+    for (i = 0; i <= 0xFF; i ++)
+    {
+        _gCrc32Table[i] = DrvCommonCrcDoReflect(i, 8) << 24;
+        for (j = 0; j < 8; j ++)
+        {
+            _gCrc32Table[i] = (_gCrc32Table[i] << 1) ^ (_gCrc32Table[i] & (0x80000000L) ? nMagicNumber : 0);
+        }
+        _gCrc32Table[i] = DrvCommonCrcDoReflect(_gCrc32Table[i], 32);
+    }
+}
+
+u8 DrvCommonCalculateCheckSum(u8 *pMsg, u32 nLength)
+{
+    s32 nCheckSum = 0;
+    u32 i;
+
+    for (i = 0; i < nLength; i ++)
+    {
+        nCheckSum += pMsg[i];
+    }
+
+    return (u8)((-nCheckSum) & 0xFF);
+}
+
+u32 DrvCommonConvertCharToHexDigit(char *pCh, u32 nLength)
+{
+    u32 nRetVal = 0;
+    u32 i;
+    
+    DBG("nLength = %d\n", nLength);
+
+    for (i = 0; i < nLength; i ++)
+    {
+        char ch = *pCh++;
+        u32 n = 0;
+        
+        if ((i == 0 && ch == '0') || (i == 1 && ch == 'x'))
+        {
+            continue;		
+        }
+        
+        if ('0' <= ch && ch <= '9')
+        {
+            n = ch-'0';
+        }
+        else if ('a' <= ch && ch <= 'f')
+        {
+            n = 10 + ch-'a';
+        }
+        else if ('A' <= ch && ch <= 'F')
+        {
+            n = 10 + ch-'A';
+        }
+        
+        if (i < 6)
+        {
+            nRetVal = n + nRetVal*16;
+        }
+    }
+    
+    return nRetVal;
+}
+
+//------------------------------------------------------------------------------//
\ No newline at end of file
Index: kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_self_mp_test.h
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_self_mp_test.h	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_self_mp_test.h	(revision 182225)
@@ -0,0 +1,99 @@
+////////////////////////////////////////////////////////////////////////////////
+//
+// Copyright (c) 2006-2012 MStar Semiconductor, Inc.
+// All rights reserved.
+//
+// Unless otherwise stipulated in writing, any and all information contained
+// herein regardless in any format shall remain the sole proprietary of
+// MStar Semiconductor Inc. and be kept in strict confidence
+// (??MStar Confidential Information??) by the recipient.
+// Any unauthorized act including without limitation unauthorized disclosure,
+// copying, use, reproduction, sale, distribution, modification, disassembling,
+// reverse engineering and compiling of the contents of MStar Confidential
+// Information is unlawful and strictly prohibited. MStar hereby reserves the
+// rights to any and all damages, losses, costs and expenses resulting therefrom.
+//
+////////////////////////////////////////////////////////////////////////////////
+
+/**
+ *
+ * @file    mstar_drv_self_mp_test.h
+ *
+ * @brief   This file defines the interface of touch screen
+ *
+ * @version v2.2.0.0
+ *
+ */
+
+#ifndef __MSTAR_DRV_SELF_MP_TEST_H__
+#define __MSTAR_DRV_SELF_MP_TEST_H__
+
+/*--------------------------------------------------------------------------*/
+/* INCLUDE FILE                                                             */
+/*--------------------------------------------------------------------------*/
+
+#include "mstar_drv_common.h"
+
+#ifdef CONFIG_ENABLE_ITO_MP_TEST
+
+/*--------------------------------------------------------------------------*/
+/* PREPROCESSOR CONSTANT DEFINITION                                         */
+/*--------------------------------------------------------------------------*/
+
+#define CTP_MP_TEST_RETRY_COUNT (3)
+
+
+#define OPEN_TEST_NON_BORDER_AREA_THRESHOLD (35) // range : 25~60
+#define OPEN_TEST_BORDER_AREA_THRESHOLD     (40) // range : 25~60
+
+#define	SHORT_TEST_THRESHOLD                (3500)
+
+#define	MP_TEST_MODE_OPEN_TEST              (0x01)
+#define	MP_TEST_MODE_SHORT_TEST             (0x02)
+
+#define MAX_CHANNEL_NUM   (48)
+
+#if defined(CONFIG_ENABLE_CHIP_MSG21XXA)
+#define PIN_GUARD_RING    (46) // For MSG21XXA
+#define GPO_SETTING_SIZE  (3)  // For MSG21XXA
+#elif defined(CONFIG_ENABLE_CHIP_MSG22XX)
+#define RIU_BASE_ADDR       (0)    // For MSG22XX
+#define RIU_WRITE_LENGTH    (144)  // For MSG22XX
+#define CSUB_REF            (0) //(18)   // For MSG22XX
+#define CSUB_REF_MAX        (0x3F) // For MSG22XX
+#endif
+
+#define REG_INTR_FIQ_MASK           (0x04)          
+#define FIQ_E_FRAME_READY_MASK      (1 << 8)
+
+
+//#define PROC_MSG_ITO_TEST     "msg-ito-test"
+//#define PROC_ITO_TEST_DEBUG   "debug"
+
+/*--------------------------------------------------------------------------*/
+/* PREPROCESSOR MACRO DEFINITION                                            */
+/*--------------------------------------------------------------------------*/
+
+/*--------------------------------------------------------------------------*/
+/* DATA TYPE DEFINITION                                                     */
+/*--------------------------------------------------------------------------*/
+
+
+/*--------------------------------------------------------------------------*/
+/* GLOBAL VARIABLE DEFINITION                                               */
+/*--------------------------------------------------------------------------*/
+
+
+/*--------------------------------------------------------------------------*/
+/* GLOBAL FUNCTION DECLARATION                                              */
+/*--------------------------------------------------------------------------*/
+
+extern void DrvMpTestCreateMpTestWorkQueue(void);
+extern void DrvMpTestGetTestDataLog(ItoTestMode_e eItoTestMode, u8 *pDataLog, u32 *pLength);
+extern void DrvMpTestGetTestFailChannel(ItoTestMode_e eItoTestMode, u8 *pFailChannel, u32 *pFailChannelCount);
+extern s32 DrvMpTestGetTestResult(void);
+extern void DrvMpTestScheduleMpTestWork(ItoTestMode_e eItoTestMode);
+
+#endif //CONFIG_ENABLE_ITO_MP_TEST
+
+#endif  /* __MSTAR_DRV_SELF_MP_TEST_H__ */
\ No newline at end of file
Index: kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_main.h
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_main.h	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_main.h	(revision 182225)
@@ -0,0 +1,89 @@
+////////////////////////////////////////////////////////////////////////////////
+//
+// Copyright (c) 2006-2012 MStar Semiconductor, Inc.
+// All rights reserved.
+//
+// Unless otherwise stipulated in writing, any and all information contained
+// herein regardless in any format shall remain the sole proprietary of
+// MStar Semiconductor Inc. and be kept in strict confidence
+// (??MStar Confidential Information??) by the recipient.
+// Any unauthorized act including without limitation unauthorized disclosure,
+// copying, use, reproduction, sale, distribution, modification, disassembling,
+// reverse engineering and compiling of the contents of MStar Confidential
+// Information is unlawful and strictly prohibited. MStar hereby reserves the
+// rights to any and all damages, losses, costs and expenses resulting therefrom.
+//
+////////////////////////////////////////////////////////////////////////////////
+
+/**
+ *
+ * @file    mstar_drv_main.h
+ *
+ * @brief   This file defines the interface of touch screen
+ *
+ * @version v2.2.0.0
+ *
+ */
+
+#ifndef __MSTAR_DRV_MAIN_H__
+#define __MSTAR_DRV_MAIN_H__
+
+/*--------------------------------------------------------------------------*/
+/* INCLUDE FILE                                                             */
+/*--------------------------------------------------------------------------*/
+
+#include "mstar_drv_common.h"
+
+/*--------------------------------------------------------------------------*/
+/* PREPROCESSOR CONSTANT DEFINITION                                         */
+/*--------------------------------------------------------------------------*/
+
+
+/*--------------------------------------------------------------------------*/
+/* PREPROCESSOR MACRO DEFINITION                                            */
+/*--------------------------------------------------------------------------*/
+
+/*--------------------------------------------------------------------------*/
+/* DATA TYPE DEFINITION                                                     */
+/*--------------------------------------------------------------------------*/
+
+/*--------------------------------------------------------------------------*/
+/* GLOBAL FUNCTION DECLARATION                                              */
+/*--------------------------------------------------------------------------*/
+
+extern ssize_t DrvMainFirmwareDataShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf);
+extern ssize_t DrvMainFirmwareDataStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize);
+extern ssize_t DrvMainFirmwareUpdateShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf);
+extern ssize_t DrvMainFirmwareUpdateStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize);
+extern ssize_t DrvMainFirmwareVersionShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf);
+extern ssize_t DrvMainFirmwareVersionStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize);
+
+#ifdef CONFIG_ENABLE_ITO_MP_TEST
+extern ssize_t DrvMainFirmwareTestShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf);
+extern ssize_t DrvMainFirmwareTestStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize);
+#endif //CONFIG_ENABLE_ITO_MP_TEST
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+extern ssize_t DrvMainFirmwareGestureWakeupModeShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf);
+extern ssize_t DrvMainFirmwareGestureWakeupModeStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize);
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+
+extern ssize_t DrvMainFirmwareDebugShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf);
+extern ssize_t DrvMainFirmwareDebugStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize);
+extern ssize_t DrvMainFirmwarePlatformVersionShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf);
+extern ssize_t DrvMainFirmwarePlatformVersionStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize);
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+extern ssize_t DrvMainFirmwareHeaderShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf);
+extern ssize_t DrvMainFirmwareHeaderStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize);
+extern ssize_t DrvMainFirmwareModeShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf);
+extern ssize_t DrvMainFirmwareModeStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize);
+//extern ssize_t DrvMainFirmwarePacketShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf);
+//extern ssize_t DrvMainFirmwarePacketStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize);
+extern ssize_t DrvMainFirmwareSensorShow(struct device *pDevice, struct device_attribute *pAttr, char *pBuf);
+extern ssize_t DrvMainFirmwareSensorStore(struct device *pDevice, struct device_attribute *pAttr, const char *pBuf, size_t nSize);
+extern ssize_t DrvMainKObjectPacketShow(struct kobject *pKObj, struct kobj_attribute *pAttr, char *pBuf);
+extern ssize_t DrvMainKObjectPacketStore(struct kobject *pKObj, struct kobj_attribute *pAttr, const char *pBuf, size_t nCount);
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+extern s32 DrvMainTouchDeviceInitialize(void);
+
+#endif  /* __MSTAR_DRV_MAIN_H__ */
Index: kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_ic_fw_porting_layer.h
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_ic_fw_porting_layer.h	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_ic_fw_porting_layer.h	(revision 182225)
@@ -0,0 +1,90 @@
+////////////////////////////////////////////////////////////////////////////////
+//
+// Copyright (c) 2006-2012 MStar Semiconductor, Inc.
+// All rights reserved.
+//
+// Unless otherwise stipulated in writing, any and all information contained
+// herein regardless in any format shall remain the sole proprietary of
+// MStar Semiconductor Inc. and be kept in strict confidence
+// (??MStar Confidential Information??) by the recipient.
+// Any unauthorized act including without limitation unauthorized disclosure,
+// copying, use, reproduction, sale, distribution, modification, disassembling,
+// reverse engineering and compiling of the contents of MStar Confidential
+// Information is unlawful and strictly prohibited. MStar hereby reserves the
+// rights to any and all damages, losses, costs and expenses resulting therefrom.
+//
+////////////////////////////////////////////////////////////////////////////////
+
+/**
+ *
+ * @file    mstar_drv_ic_fw_porting_layer.h
+ *
+ * @brief   This file defines the interface of touch screen
+ *
+ * @version v2.2.0.0
+ *
+ */
+
+#ifndef __MSTAR_DRV_IC_FW_PORTING_LAYER_H__
+#define __MSTAR_DRV_IC_FW_PORTING_LAYER_H__
+
+/*--------------------------------------------------------------------------*/
+/* INCLUDE FILE                                                             */
+/*--------------------------------------------------------------------------*/
+
+#include "mstar_drv_common.h"
+#if defined(CONFIG_ENABLE_CHIP_MSG26XXM)
+#include "mstar_drv_mutual_fw_control.h"
+#ifdef CONFIG_ENABLE_ITO_MP_TEST
+#include "mstar_drv_mutual_mp_test.h"
+#endif //CONFIG_ENABLE_ITO_MP_TEST
+#elif defined(CONFIG_ENABLE_CHIP_MSG21XXA) || defined(CONFIG_ENABLE_CHIP_MSG22XX)
+#include "mstar_drv_self_fw_control.h"
+#ifdef CONFIG_ENABLE_ITO_MP_TEST
+#include "mstar_drv_self_mp_test.h"
+#endif //CONFIG_ENABLE_ITO_MP_TEST
+#endif
+
+/*--------------------------------------------------------------------------*/
+/* PREPROCESSOR CONSTANT DEFINITION                                         */
+/*--------------------------------------------------------------------------*/
+
+
+/*--------------------------------------------------------------------------*/
+/* GLOBAL FUNCTION DECLARATION                                              */
+/*--------------------------------------------------------------------------*/
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+extern void DrvIcFwLyrOpenGestureWakeup(u16 nWakeupMode);
+extern void DrvIcFwLyrCloseGestureWakeup(void);
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+extern u16 DrvIcFwLyrChangeFirmwareMode(u16 nMode);
+extern void DrvIcFwLyrGetFirmwareInfo(FirmwareInfo_t *pInfo);
+#if defined(CONFIG_ENABLE_CHIP_MSG26XXM)
+extern u16 DrvIcFwLyrGetFirmwareMode(void);
+#endif //CONFIG_ENABLE_CHIP_MSG26XXM
+extern void DrvIcFwLyrRestoreFirmwareModeToLogDataMode(void);
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+extern void DrvIcFwLyrCheckFirmwareUpdateBySwId(void);
+#endif //CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+
+extern u8 DrvIcFwLyrGetChipType(void);
+extern void DrvIcFwLyrGetCustomerFirmwareVersion(u16 *pMajor, u16 *pMinor, u8 **ppVersion);
+extern void DrvIcFwLyrGetPlatformFirmwareVersion(u8 **ppVersion);
+extern void DrvIcFwLyrHandleFingerTouch(u8 *pPacket, u16 nLength);
+extern u32 DrvIcFwLyrIsRegisterFingerTouchInterruptHandler(void);
+extern s32 DrvIcFwLyrUpdateFirmware(u8 szFwData[][1024], EmemType_e eEmemType);
+
+#ifdef CONFIG_ENABLE_ITO_MP_TEST
+extern void DrvIcFwLyrCreateMpTestWorkQueue(void);
+extern void DrvIcFwLyrScheduleMpTestWork(ItoTestMode_e eItoTestMode);
+extern void DrvIcFwLyrGetMpTestDataLog(ItoTestMode_e eItoTestMode, u8 *pDataLog, u32 *pLength);
+extern void DrvIcFwLyrGetMpTestFailChannel(ItoTestMode_e eItoTestMode, u8 *pFailChannel, u32 *pFailChannelCount);
+extern s32 DrvIcFwLyrGetMpTestResult(void);
+#endif //CONFIG_ENABLE_ITO_MP_TEST
+        
+#endif  /* __MSTAR_DRV_IC_FW_PORTING_LAYER_H__ */
Index: kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_self_fw_control.h
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_self_fw_control.h	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_self_fw_control.h	(revision 182225)
@@ -0,0 +1,154 @@
+////////////////////////////////////////////////////////////////////////////////
+//
+// Copyright (c) 2006-2012 MStar Semiconductor, Inc.
+// All rights reserved.
+//
+// Unless otherwise stipulated in writing, any and all information contained
+// herein regardless in any format shall remain the sole proprietary of
+// MStar Semiconductor Inc. and be kept in strict confidence
+// (??MStar Confidential Information??) by the recipient.
+// Any unauthorized act including without limitation unauthorized disclosure,
+// copying, use, reproduction, sale, distribution, modification, disassembling,
+// reverse engineering and compiling of the contents of MStar Confidential
+// Information is unlawful and strictly prohibited. MStar hereby reserves the
+// rights to any and all damages, losses, costs and expenses resulting therefrom.
+//
+////////////////////////////////////////////////////////////////////////////////
+
+/**
+ *
+ * @file    mstar_drv_self_fw_control.h
+ *
+ * @brief   This file defines the interface of touch screen
+ *
+ * @version v2.2.0.0
+ *
+ */
+
+#ifndef __MSTAR_DRV_SELF_FW_CONTROL_H__
+#define __MSTAR_DRV_SELF_FW_CONTROL_H__
+
+/*--------------------------------------------------------------------------*/
+/* INCLUDE FILE                                                             */
+/*--------------------------------------------------------------------------*/
+
+#include "mstar_drv_common.h"
+
+/*--------------------------------------------------------------------------*/
+/* COMPILE OPTION DEFINITION                                                */
+/*--------------------------------------------------------------------------*/
+
+//#define CONFIG_SWAP_X_Y
+
+//#define CONFIG_REVERSE_X
+//#define CONFIG_REVERSE_Y
+
+/*--------------------------------------------------------------------------*/
+/* PREPROCESSOR CONSTANT DEFINITION                                         */
+/*--------------------------------------------------------------------------*/
+
+#define DEMO_MODE_PACKET_LENGTH    (8)
+#define MAX_TOUCH_NUM           (2)     
+
+#define MSG21XXA_FIRMWARE_MAIN_BLOCK_SIZE (32) //32K
+#define MSG21XXA_FIRMWARE_INFO_BLOCK_SIZE (1)  //1K
+#define MSG21XXA_FIRMWARE_WHOLE_SIZE (MSG21XXA_FIRMWARE_MAIN_BLOCK_SIZE+MSG21XXA_FIRMWARE_INFO_BLOCK_SIZE) //33K
+
+#define MSG22XX_FIRMWARE_MAIN_BLOCK_SIZE (48)  //48K
+#define MSG22XX_FIRMWARE_INFO_BLOCK_SIZE (512) //512Byte
+
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+#define FIRMWARE_MODE_DEMO_MODE      (0x00)
+#define FIRMWARE_MODE_DEBUG_MODE     (0x01)
+#define FIRMWARE_MODE_RAW_DATA_MODE  (0x02)
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+#define UPDATE_FIRMWARE_RETRY_COUNT (2)
+#endif //CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+
+/*--------------------------------------------------------------------------*/
+/* DATA TYPE DEFINITION                                                     */
+/*--------------------------------------------------------------------------*/
+
+typedef struct
+{
+    u16 nX;
+    u16 nY;
+} TouchPoint_t;
+
+typedef struct
+{
+    u8 nTouchKeyMode;
+    u8 nTouchKeyCode;
+    u8 nFingerNum;
+    TouchPoint_t tPoint[MAX_TOUCH_NUM];
+} TouchInfo_t;
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+typedef struct
+{
+    u8 nFirmwareMode;
+    u8 nLogModePacketHeader;
+    u16 nLogModePacketLength;
+    u8 nIsCanChangeFirmwareMode;
+} FirmwareInfo_t;
+
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+/*
+ * Note.
+ * The following is sw id enum definition for MSG22XX.
+ * 0x0000 and 0xFFFF are not allowed to be defined as SW ID.
+ * SW_ID_UNDEFINED is a reserved enum value, do not delete it or modify it.
+ * Please modify the SW ID of the below enum value depends on the TP vendor that you are using.
+ */
+typedef enum {
+    MSG22XX_SW_ID_XXXX = 0x0001,
+    MSG22XX_SW_ID_YYYY = 0x0002,
+    MSG22XX_SW_ID_UNDEFINED
+} Msg22xxSwId_e;
+
+
+/*
+ * Note.
+ * The following is sw id enum definition for MSG21XXA.
+ * SW_ID_UNDEFINED is a reserved enum value, do not delete it or modify it.
+ * Please modify the SW ID of the below enum value depends on the TP vendor that you are using.
+ */
+typedef enum {
+    MSG21XXA_SW_ID_XXXX = 0x0C,
+    MSG21XXA_SW_ID_YYYY,
+    MSG21XXA_SW_ID_UNDEFINED
+} Msg21xxaSwId_e;
+#endif //CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+
+/*--------------------------------------------------------------------------*/
+/* GLOBAL FUNCTION DECLARATION                                              */
+/*--------------------------------------------------------------------------*/
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+extern void DrvFwCtrlOpenGestureWakeup(u16 nMode);
+extern void DrvFwCtrlCloseGestureWakeup(void);
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+extern u16 DrvFwCtrlChangeFirmwareMode(u16 nMode);        
+extern void DrvFwCtrlGetFirmwareInfo(FirmwareInfo_t *pInfo);
+extern void DrvFwCtrlRestoreFirmwareModeToLogDataMode(void);
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+#ifdef CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+extern void DrvFwCtrlCheckFirmwareUpdateBySwId(void);
+#endif //CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+
+extern u8 DrvFwCtrlGetChipType(void);
+extern void DrvFwCtrlGetCustomerFirmwareVersion(u16 *pMajor, u16 *pMinor, u8 **ppVersion);
+extern void DrvFwCtrlGetPlatformFirmwareVersion(u8 **ppVersion);
+extern void DrvFwCtrlHandleFingerTouch(void);
+extern s32 DrvFwCtrlUpdateFirmware(u8 szFwData[][1024], EmemType_e eEmemType);
+        
+#endif  /* __MSTAR_DRV_SELF_FW_CONTROL_H__ */
Index: kernel/drivers/input/touchscreen/msg2138_1/msg2xxx_xxxx_update_bin.h
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/msg2xxx_xxxx_update_bin.h	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/msg2xxx_xxxx_update_bin.h	(revision 182225)
@@ -0,0 +1,3104 @@
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x90,0xF2,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x91,0x52,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x91,0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x91,0x36,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x91,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x91,0x1A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x91,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x90,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x90,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x91,0x19,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x91,0x0B,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x90,0xFD,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x90,0xEF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x90,0xE1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x90,0xD3,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x90,0xC5,0x80,0x01,0x80,0x01,0x80,0x01,0x80,0x01,0x80,0x01,0x1C,0x40,0x00,0x1C,
+0x60,0x00,0x1C,0x80,0x00,0x1C,0xA0,0x00,0x1C,0xC0,0x00,0x1C,0xE0,0x00,0x1D,0x00,
+0x00,0x1D,0x20,0x00,0x1D,0x40,0x00,0x1D,0x60,0x00,0x1D,0x80,0x00,0x1D,0xA0,0x00,
+0x1D,0xC0,0x00,0x1D,0xE0,0x00,0x1E,0x00,0x00,0x1E,0x20,0x00,0x1E,0x40,0x00,0x1E,
+0x60,0x00,0x1E,0x80,0x00,0x1E,0xA0,0x00,0x1E,0xC0,0x00,0x1E,0xE0,0x00,0x1F,0x00,
+0x00,0x1F,0x20,0x00,0x1F,0x40,0x00,0x1F,0x60,0x00,0x1F,0x80,0x00,0x1F,0xA0,0x00,
+0x1F,0xC0,0x00,0x1F,0xE0,0x00,0xC0,0x60,0x00,0x01,0xC8,0x63,0xA8,0x24,0x84,0x69,
+0x80,0x01,0x90,0x00,0x90,0x00,0x90,0x00,0x90,0x00,0x90,0x00,0x90,0x00,0x90,0x00,
+0xFC,0x21,0xFF,0x60,0xEF,0xE1,0x00,0x80,0xFF,0xE1,0x00,0xA0,0x0F,0xE1,0x08,0xC3,
+0xE0,0x02,0x0F,0x0F,0xE1,0x00,0xC3,0xE0,0x04,0x0F,0x0F,0xE1,0x04,0xC3,0xE0,0x03,
+0x0F,0xEF,0xE1,0x00,0x84,0xC3,0xE0,0x05,0x0F,0xEF,0xE1,0x00,0x88,0xC3,0xE0,0x05,
+0x1F,0xEF,0xE1,0x00,0x8C,0xE4,0x01,0x4B,0x81,0x90,0x00,0x90,0x00,0x90,0x00,0x90,
+0x00,0x90,0x00,0x90,0x00,0x90,0x00,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x30,0x44,0x0B,
+0x17,0x01,0x98,0x60,0x56,0xF8,0x01,0x4F,0x18,0x79,0x22,0xE0,0x14,0x98,0x62,0x23,
+0x00,0x18,0x58,0x77,0x01,0x85,0x29,0x1C,0x21,0xE0,0x0D,0x41,0x18,0x0D,0x81,0x10,
+0xC1,0x40,0x10,0x01,0x99,0x9E,0xFD,0x4A,0x03,0x7C,0x12,0xEA,0x00,0x46,0xEC,0xBC,
+0x0D,0x61,0x14,0x0D,0xA1,0x0C,0x0C,0x81,0x04,0x0C,0xC1,0x00,0x0D,0x21,0x1C,0x5D,
+0x63,0x00,0x89,0xA5,0x1A,0xEA,0x00,0xE7,0xFF,0xFF,0x60,0x0C,0x81,0x06,0x5C,0x63,
+0x00,0x0C,0xC1,0x02,0x20,0x60,0xD6,0x9A,0xE0,0x21,0x60,0x30,0x21,0x64,0x24,0x5D,
+0x60,0x41,0x4A,0xE1,0x01,0x5C,0x80,0x29,0x4A,0xF7,0x0A,0xD1,0xA1,0x05,0x9E,0xD0,
+0xC1,0x07,0xE6,0xC3,0x14,0x00,0x01,0xCB,0x18,0x3D,0x9C,0x0B,0x18,0x01,0xC3,0x00,
+0x5F,0xEE,0x20,0x03,0xA7,0xE4,0x00,0x01,0xB3,0xE7,0xFF,0xFE,0xDC,0x5C,0x63,0x00,
+0x20,0x64,0x62,0x9A,0xE0,0x21,0x60,0x30,0x21,0x64,0x24,0x5D,0x60,0x41,0x4A,0xE1,
+0x01,0x21,0xA5,0xF6,0xE4,0x00,0x01,0x75,0xE7,0xFF,0xFE,0x9E,0x5C,0x63,0x00,0xD0,
+0x62,0x06,0x4E,0x9A,0xE1,0x21,0x60,0x24,0x5D,0x60,0x21,0x4A,0xE1,0x01,0x21,0xA4,
+0x32,0x13,0x0A,0x00,0x53,0x18,0x01,0x1B,0x0A,0x00,0xC3,0x14,0x00,0x01,0xFD,0x8C,
+0x80,0x02,0xCB,0x38,0x23,0x78,0x0B,0x59,0x01,0x47,0x4C,0xD5,0x5F,0x5A,0x04,0x0F,
+0x59,0x01,0xCB,0x38,0x23,0x6C,0x0B,0x59,0x01,0xC7,0x5A,0x8F,0xFF,0x0F,0x59,0x01,
+0xCB,0x38,0x3C,0xD4,0x0B,0x59,0x01,0x47,0x4C,0xD5,0x5F,0x5A,0x04,0x0F,0x59,0x01,
+0xCB,0x38,0x3C,0xE0,0x0B,0x59,0x01,0xC7,0x5A,0x7F,0xFF,0x0F,0x59,0x01,0xCB,0x18,
+0x3C,0xEC,0x0B,0x38,0x01,0x45,0x8C,0xCD,0x5D,0x8C,0x04,0x0D,0x98,0x01,0x22,0xE5,
+0x6A,0xC2,0xF4,0x00,0x01,0xCB,0x17,0x3C,0x68,0x0B,0x38,0x01,0xFF,0x20,0x11,0x11,
+0x0F,0x38,0x01,0xCB,0x17,0x3C,0x6C,0x0B,0x38,0x01,0xFF,0x20,0x22,0x22,0x0F,0x38,
+0x01,0xCB,0x17,0x3C,0x70,0x0B,0x38,0x01,0xFF,0x20,0x33,0x33,0x0F,0x38,0x01,0xCA,
+0xF7,0x78,0xC0,0xFF,0x00,0xAA,0x55,0x0F,0x17,0x01,0xE4,0x00,0x00,0x01,0x13,0x0A,
+0x00,0x53,0x18,0x01,0x1B,0x0A,0x00,0xE7,0xFF,0xFF,0x6F,0x13,0x0A,0x00,0x45,0x8C,
+0xC4,0x19,0x8A,0x00,0xE7,0xFF,0xFF,0x55,0x0D,0xA1,0x0E,0x0D,0x81,0x12,0x0D,0x61,
+0x16,0x0D,0x41,0x1A,0x0D,0x21,0x1E,0x1C,0x21,0x20,0x85,0x29,0xC2,0xE0,0x10,0x01,
+0xEC,0x77,0x03,0xA0,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x03,0x98,0xC2,0xE0,0x10,0x01,
+0xEC,0xB7,0x03,0x9C,0xC2,0xE0,0x10,0x01,0xEC,0xD7,0x03,0xB4,0xC2,0xE0,0x10,0x01,
+0xEC,0xF7,0x03,0xAC,0xC2,0xE0,0x10,0x01,0x0F,0x01,0x02,0xED,0x17,0x03,0xB0,0xC2,
+0xE0,0x10,0x01,0xEF,0x17,0x03,0xC0,0xC2,0xE0,0x10,0x01,0x0F,0x01,0x06,0xEF,0x17,
+0x03,0x84,0xC2,0xE0,0x10,0x01,0x0F,0x01,0x0A,0xEF,0x17,0x03,0xA4,0x85,0x29,0x5C,
+0x84,0x00,0xC2,0xE0,0x10,0x01,0x4C,0x84,0x10,0xFE,0xF7,0x03,0xB8,0x8E,0xE4,0x0C,
+0x77,0x00,0x85,0x29,0x5C,0x63,0x00,0x9B,0x00,0x24,0x68,0x25,0x1F,0x03,0xFE,0x5F,
+0x18,0x00,0xC2,0xE0,0x10,0x01,0xF3,0x57,0x0A,0x50,0x1E,0xE3,0x01,0x1F,0x9A,0xFF,
+0x5F,0x3C,0x00,0xD7,0x97,0x00,0x50,0x1F,0x23,0x02,0x5F,0x39,0x00,0xC2,0xEF,0xFF,
+0xE1,0xCA,0xF7,0xFF,0xFF,0xE4,0x00,0x00,0x2F,0x4F,0x78,0x10,0x9F,0x01,0x8F,0x64,
+0x5F,0x18,0x00,0x0F,0x7B,0x02,0x5E,0xFB,0x15,0x4A,0xF7,0xD8,0xD7,0x19,0xFF,0x69,
+0x4F,0x03,0x10,0xC3,0x20,0x10,0x01,0x8F,0x04,0xEF,0x39,0x03,0xA6,0x0F,0x18,0x02,
+0xD7,0x38,0x01,0x41,0xC3,0x20,0x10,0x01,0xEF,0x79,0x03,0xA2,0xC3,0x20,0x10,0x01,
+0xEF,0xB9,0x03,0x9A,0xC3,0x20,0x10,0x01,0xEF,0xD9,0x03,0x9E,0xC3,0x20,0x10,0x01,
+0xEF,0x39,0x03,0xB6,0xE4,0x00,0x00,0x49,0xC3,0x20,0x10,0x01,0xEF,0x79,0x03,0xAE,
+0xC3,0x20,0x10,0x01,0xEF,0xB9,0x03,0xB2,0xC3,0x20,0x10,0x01,0xEF,0xD9,0x03,0xC2,
+0xC3,0x20,0x10,0x01,0xEF,0x39,0x03,0x86,0x20,0x60,0xDE,0x0F,0x44,0x02,0x0F,0x84,
+0x06,0xCF,0x5A,0x00,0x32,0x40,0xE7,0xE3,0xD7,0x47,0x05,0xDC,0x42,0xF7,0x2D,0x40,
+0xA5,0xCB,0x43,0x77,0xDB,0x43,0x3B,0x2C,0xCC,0xC6,0x00,0x0A,0x9B,0x4A,0x8C,0xD9,
+0x98,0x61,0x40,0xC6,0xD0,0xD7,0x06,0x04,0xF4,0x98,0x60,0xE4,0x00,0x01,0x31,0x20,
+0x64,0x6A,0x0F,0x44,0x02,0x0F,0x64,0x06,0xCF,0x5A,0x00,0x32,0x40,0xE7,0xDB,0x98,
+0x60,0xD7,0x47,0x04,0x14,0xE4,0x00,0x00,0x55,0x1C,0xFA,0xFE,0xD4,0x67,0x01,0x9E,
+0x4C,0x63,0x10,0x9F,0x5F,0x4F,0x5A,0x10,0x8F,0x44,0x8C,0x83,0x0F,0x5A,0x02,0x0F,
+0x64,0x02,0xCF,0x5A,0x00,0x32,0x41,0x08,0xDB,0x98,0x60,0xD7,0x48,0x02,0xC4,0x42,
+0xF7,0x2D,0x40,0xA5,0xCB,0x43,0xB7,0xEB,0x43,0x3D,0x2C,0xE7,0xFF,0xFF,0x3B,0xD4,
+0x7C,0x01,0x3E,0x9F,0x5F,0x4C,0xE7,0x10,0x4F,0x5A,0x10,0x98,0x60,0x8F,0x44,0x8C,
+0x87,0x0F,0x5A,0x02,0x0F,0x84,0x02,0xCF,0x5A,0x00,0x32,0x41,0x08,0xE3,0xD7,0x48,
+0x01,0x2C,0xE7,0xFF,0xFE,0xD5,0x42,0xF7,0x2D,0xCC,0xC6,0x00,0x0A,0x43,0xD7,0xF3,
+0x40,0xA5,0xCB,0x9B,0x4A,0x43,0x3E,0x2C,0x8C,0xD9,0x40,0xC6,0xD0,0xD7,0x06,0xFB,
+0x60,0x98,0x61,0x85,0x29,0x5C,0xE7,0x00,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x0A,0x50,
+0x42,0xE7,0xBB,0x5E,0xF7,0x00,0x9B,0x00,0x8C,0xB7,0x8C,0xD7,0xC3,0x80,0x10,0x01,
+0xC3,0x40,0x10,0x01,0x5C,0xC6,0x00,0x5C,0xA5,0x00,0x8B,0x38,0x9A,0xE0,0xFF,0x9C,
+0x07,0x38,0xFF,0x5A,0x0C,0xB6,0xE4,0x00,0x00,0x49,0x4F,0x65,0x10,0x43,0xBB,0xE4,
+0x0F,0xBD,0x02,0x9C,0xA1,0x8E,0xFD,0x5C,0xA5,0x00,0x8B,0xBB,0x8F,0x7A,0x8F,0xBA,
+0x0B,0x7B,0x00,0x0B,0xBD,0x02,0x8F,0x1B,0x8F,0x3D,0xD4,0xA6,0xFF,0x01,0x26,0xE0,
+0xE8,0x27,0x20,0xDC,0x27,0x00,0xD0,0xC3,0x40,0x10,0x01,0xFF,0x5A,0x03,0xB8,0x4C,
+0xE7,0x10,0xCF,0x18,0xFF,0xF6,0x8C,0xFA,0x0F,0x47,0x02,0x43,0x3A,0xCB,0x9F,0x56,
+0x8F,0x19,0x43,0x58,0xD0,0xCF,0x5A,0x07,0xFF,0x43,0x5A,0xB8,0x0F,0x43,0x01,0x0E,
+0xE4,0x00,0x98,0x61,0xE4,0x00,0x00,0x0D,0x98,0x60,0x85,0x29,0x9A,0xE3,0x9B,0x01,
+0xE4,0x00,0x00,0x11,0x8F,0x17,0x9E,0xE2,0xD7,0x03,0xFF,0xE1,0x4C,0x77,0x09,0x9C,
+0x7F,0x85,0x29,0xFF,0x00,0x7F,0xFF,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x03,0x88,0x0F,
+0x17,0x01,0x0F,0x17,0x03,0x0F,0x17,0x05,0x0F,0x17,0x07,0x0F,0x17,0x09,0x0F,0x17,
+0x0B,0x85,0x29,0xC3,0x00,0x10,0x01,0xFE,0xF8,0x03,0x88,0xC3,0x00,0x10,0x01,0x0B,
+0x37,0x08,0xFF,0x18,0x0B,0x94,0xC3,0x2F,0xFF,0xE0,0x20,0x00,0x41,0x0B,0x37,0x05,
+0x0F,0x37,0x09,0x0B,0x37,0x07,0xE4,0x00,0x00,0x1B,0x0B,0x38,0x17,0x0F,0x37,0x09,
+0x0B,0x38,0x19,0x0F,0x37,0x0B,0x0B,0x37,0x04,0xC3,0x2F,0xFF,0xE0,0x20,0x00,0x41,
+0x0B,0x37,0x01,0x0F,0x37,0x05,0x0B,0x37,0x03,0xE4,0x00,0x00,0x1B,0x0B,0x38,0x17,
+0x0F,0x37,0x05,0x0B,0x38,0x19,0x0F,0x37,0x07,0x0B,0x38,0x17,0x0B,0x18,0x19,0x0F,
+0x37,0x01,0x0F,0x17,0x03,0x85,0x29,0x1C,0x21,0xD8,0xC2,0xE0,0x10,0x01,0x0D,0x21,
+0x24,0x0D,0x41,0x20,0x0D,0x61,0x1C,0xFD,0x57,0x03,0x88,0x0D,0x81,0x18,0x0D,0xA1,
+0x14,0x0D,0xC1,0x10,0x09,0xAA,0x07,0x0B,0x0A,0x03,0x43,0x18,0x6D,0x5F,0x18,0x06,
+0x0F,0x01,0x0B,0x43,0x18,0xC3,0xE9,0x97,0x03,0x89,0x09,0xCA,0x05,0x41,0x8C,0x75,
+0x5D,0x8C,0x06,0x40,0x6C,0x63,0x8C,0x78,0xE7,0xFF,0xFE,0x48,0x0A,0xEA,0x09,0x41,
+0xCE,0xBD,0x0A,0xEA,0x0B,0x42,0xED,0xBD,0x5E,0xF7,0x06,0x0E,0xE1,0x0F,0x42,0xF7,
+0xBB,0x5D,0x63,0x06,0x5D,0x4E,0x06,0x40,0x6A,0x53,0x8C,0x77,0xE7,0xFF,0xFE,0x00,
+0x5E,0xE3,0x06,0x98,0x61,0x21,0x60,0xAC,0x22,0xE0,0xA0,0x43,0x0B,0xB8,0xD3,0x05,
+0x01,0x14,0x41,0x4C,0x53,0x0B,0x01,0x0E,0x09,0x81,0x0A,0x41,0x6B,0xBB,0x43,0x0C,
+0xC3,0x8D,0x58,0xCD,0x4A,0x00,0x64,0x42,0xEA,0x58,0x5E,0xE8,0xB1,0x48,0x61,0x01,
+0x0D,0xC1,0x12,0x0D,0xA1,0x16,0x0D,0x81,0x1A,0x0D,0x61,0x1E,0x0D,0x41,0x22,0x0D,
+0x21,0x26,0x1C,0x21,0x28,0x85,0x29,0x1C,0x21,0xE8,0xC2,0xE0,0x10,0x01,0x0D,0x41,
+0x10,0x0D,0x61,0x0C,0x0D,0x81,0x08,0x0D,0xC1,0x00,0xF1,0x97,0x09,0x98,0xC1,0x40,
+0x10,0x01,0x1D,0x6C,0xFF,0x0D,0x21,0x14,0x0D,0xA1,0x04,0x5D,0xC3,0x00,0x5D,0x6B,
+0x00,0xFD,0x4A,0x0B,0x94,0x4E,0xEE,0x5D,0x56,0xF7,0x01,0x22,0xE0,0xD4,0x8A,0xEB,
+0xE4,0x00,0x00,0x43,0xCC,0x77,0x00,0x30,0x1D,0xB7,0x01,0x8C,0x6A,0xCC,0x8D,0x00,
+0x30,0x9C,0x64,0x8C,0x8A,0x50,0xA0,0x30,0x9C,0x84,0xE4,0x00,0x5E,0x26,0x5E,0xED,
+0x00,0xD5,0x97,0xFF,0x1D,0x12,0xEA,0x00,0x22,0xE0,0x20,0x9E,0xFF,0x1A,0xEA,0x00,
+0x21,0x60,0x30,0x9D,0x7F,0x5D,0x6B,0x00,0xE7,0xFF,0xFF,0x7B,0x12,0xEA,0x00,0x22,
+0xE0,0x52,0xC2,0xE0,0x10,0x01,0x9B,0x37,0xEB,0x17,0x06,0x45,0x47,0x18,0xCC,0xEF,
+0x17,0x06,0x45,0x0D,0xC1,0x02,0x0D,0xA1,0x06,0x0D,0x81,0x0A,0x0D,0x61,0x0E,0x0D,
+0x41,0x12,0x0D,0x21,0x16,0x1C,0x21,0x18,0x85,0x29,0xC2,0xE0,0x10,0x01,0xC3,0x00,
+0x10,0x01,0xEB,0x37,0x01,0x46,0xFF,0x18,0x03,0xCC,0xC2,0xE0,0x10,0x01,0xFE,0xF7,
+0x0A,0x4C,0x23,0x24,0xA6,0x13,0x37,0x04,0x9A,0xE0,0x9F,0x21,0xE4,0x00,0x00,0x2F,
+0x4F,0x57,0x08,0x1F,0x77,0xFF,0x8F,0x58,0x4F,0x7B,0x10,0x9E,0xE1,0x0F,0x7A,0x01,
+0x5E,0xF7,0x00,0xD6,0xF9,0xFF,0x68,0xE4,0x00,0x00,0x9D,0x23,0x28,0x38,0x13,0x37,
+0x04,0x9A,0xE0,0x9F,0x21,0xE4,0x00,0x00,0x79,0x13,0x37,0x04,0x9A,0xE0,0x9F,0x21,
+0xE4,0x00,0x00,0x2F,0x4F,0x57,0x08,0xCF,0x77,0x00,0x06,0x8F,0x58,0x9F,0x79,0x9E,
+0xE1,0x0F,0x7A,0x01,0x5E,0xF7,0x00,0xD6,0xF9,0xFF,0x68,0xE4,0x00,0x00,0x35,0x4F,
+0x57,0x08,0x4F,0x77,0x08,0x8F,0x58,0x9F,0x7F,0x9E,0xE1,0x0F,0x7A,0x01,0x5E,0xF7,
+0x00,0xD6,0xF9,0xFF,0x70,0x85,0x29,0x9C,0x30,0x5C,0xC6,0x00,0x0D,0x61,0x08,0x0D,
+0x81,0x04,0x0D,0xA1,0x00,0x0D,0x41,0x0C,0xC3,0x00,0x10,0x01,0xFF,0x18,0x0A,0x4C,
+0x13,0xD8,0x04,0x40,0xC6,0xF3,0x5E,0xE6,0x00,0x5F,0xA3,0x06,0x8C,0x97,0x8C,0xB7,
+0x5F,0x7D,0x04,0x0A,0xF8,0x0B,0x11,0x58,0x0C,0x40,0xFB,0xBC,0x41,0x9B,0xBD,0xC1,
+0xA0,0x10,0x01,0xC3,0x00,0x10,0x01,0x5C,0xA5,0x00,0x4D,0x77,0x08,0x5C,0xE7,0x04,
+0x5D,0x8C,0x04,0x5C,0x84,0x00,0xFD,0xAD,0x03,0xCC,0xFF,0x18,0x0C,0xB6,0x53,0x20,
+0x64,0xE4,0x00,0x01,0x21,0x43,0x44,0x35,0x9F,0x41,0x4F,0x5A,0x08,0x8F,0x4D,0x09,
+0x1A,0x00,0x41,0x08,0xBB,0x41,0x08,0x50,0x5F,0x88,0x04,0x43,0x5C,0xDD,0x5F,0x5A,
+0x06,0x4C,0x7A,0xFA,0x47,0x43,0xD6,0x43,0x5A,0x1D,0xD6,0xFA,0x03,0x14,0xD5,0x7A,
+0x02,0x70,0x5D,0x08,0x06,0xD5,0x1D,0x00,0x58,0x43,0x9C,0x3D,0xE4,0x00,0x00,0x0F,
+0x43,0x8C,0xE5,0x5F,0x9C,0x06,0x4F,0x44,0x10,0x43,0x97,0xE5,0x8F,0x58,0xCF,0x9C,
+0x00,0x64,0x09,0x1A,0x00,0x43,0x9C,0xB8,0xC7,0x9C,0xFF,0xFF,0x41,0x1C,0x43,0x41,
+0x08,0xC8,0x0D,0x1A,0x01,0x4F,0x44,0x10,0x9F,0x42,0x8F,0x58,0x09,0x1A,0x00,0x43,
+0x9C,0x43,0x43,0x9C,0xC8,0x0F,0x9A,0x01,0xE4,0x00,0x00,0x29,0x4F,0x44,0x10,0x8F,
+0x58,0x0C,0x1A,0x01,0x4F,0x44,0x10,0x8F,0x58,0x0C,0x1A,0x03,0x9C,0x81,0x5C,0x84,
+0x00,0xD4,0x85,0xFB,0xA0,0xC2,0xE0,0x10,0x01,0x0D,0xA1,0x02,0xF0,0x77,0x0A,0x4D,
+0x0D,0x81,0x06,0x0D,0x61,0x0A,0x0D,0x41,0x0E,0x40,0x7E,0x1B,0x98,0x80,0x1C,0x21,
+0x10,0xE4,0x00,0xB0,0x11,0x5C,0x63,0x00,0x5C,0x84,0x00,0xC2,0xE0,0x10,0x01,0x43,
+0x64,0x1D,0xF2,0xF7,0x0A,0x50,0x9F,0x61,0x40,0xA5,0xBB,0x5F,0x7B,0x00,0x5C,0xA5,
+0x00,0x20,0xE4,0x3E,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x0A,0x5C,0xE4,0x00,0x00,0x19,
+0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x0C,0xB6,0x43,0x23,0x2C,0x9B,0x00,0x4F,0x39,0x10,
+0x9F,0x22,0x8F,0x37,0xC2,0xEF,0xFF,0xE1,0xCA,0xF7,0xFF,0xFF,0xE4,0x00,0x00,0x3D,
+0x0B,0x99,0xFE,0x0B,0x59,0x00,0x9F,0x24,0x8F,0x5C,0x4F,0x98,0x10,0x5E,0xFA,0x15,
+0x8F,0x86,0x4A,0xF7,0xD0,0x0F,0x5C,0x00,0x9F,0x01,0x5F,0x58,0x00,0xD7,0x7A,0xFF,
+0x1D,0x9B,0x00,0xE4,0x00,0x00,0x29,0x0F,0x26,0x02,0x9F,0x01,0x43,0x39,0xBD,0x5F,
+0x18,0x00,0x0F,0x26,0x00,0x9C,0xC4,0xD7,0x78,0xFF,0x85,0x85,0x29,0x1C,0x21,0x88,
+0x0D,0x41,0x70,0x0D,0x61,0x6C,0x5D,0x44,0x00,0x0D,0x81,0x68,0x5C,0x85,0x00,0x0D,
+0xA1,0x64,0x88,0xA6,0x41,0xA4,0x55,0x0D,0x21,0x74,0x89,0x83,0x88,0xC1,0x88,0x6A,
+0xE7,0xFF,0xFE,0xAA,0xC2,0xE0,0x10,0x01,0x9D,0xA1,0xEB,0x57,0x01,0x46,0x9B,0x20,
+0x5D,0xAD,0x00,0x8B,0x19,0x9A,0xE0,0x89,0x61,0xE4,0x00,0x00,0x5B,0x4F,0x79,0x10,
+0x43,0x99,0x54,0x8F,0x6B,0x0F,0x7B,0x02,0x8E,0xFB,0x23,0x44,0x54,0x23,0x48,0x36,
+0xCF,0x9C,0x00,0x06,0x9F,0x9F,0xE4,0x00,0x00,0x13,0x4F,0x9C,0x08,0x9F,0x81,0x43,
+0x7C,0xDB,0x9F,0x21,0x8F,0x1B,0x5F,0x79,0x00,0xD5,0xBB,0xFE,0xA5,0x26,0xE1,0x34,
+0xC3,0x20,0x10,0x01,0xEB,0x39,0x0A,0x57,0x43,0x18,0xCB,0x23,0x44,0x32,0x4F,0x37,
+0x0A,0x8F,0x19,0xE4,0x00,0x00,0x35,0x23,0x48,0x46,0xCF,0x37,0x00,0x03,0xCE,0xF7,
+0x00,0x06,0x8F,0x19,0xE4,0x00,0x00,0x13,0x8F,0x17,0x4E,0xF7,0x08,0x42,0xF8,0xB8,
+0xC2,0xE0,0xFF,0xE8,0xCB,0x00,0x07,0xFF,0x98,0x61,0x4A,0xF7,0xC0,0x5E,0xFF,0xF9,
+0x4A,0xF7,0x00,0x0E,0xEC,0x01,0xE4,0x00,0x00,0x0D,0x98,0x60,0x0D,0xA1,0x66,0x0D,
+0x81,0x6A,0x0D,0x61,0x6E,0x0D,0x41,0x72,0x0D,0x21,0x76,0x1C,0x21,0x78,0x85,0x29,
+0xFC,0x21,0xFF,0x78,0xED,0x41,0x00,0x80,0x0D,0x81,0x78,0x0D,0xA1,0x74,0x0D,0xC1,
+0x70,0x0D,0xE1,0x6C,0x0E,0x01,0x68,0x0E,0xC1,0x64,0xED,0x21,0x00,0x84,0x0D,0x61,
+0x7C,0xC1,0x40,0x10,0x01,0xFD,0x4A,0x0A,0x4C,0x11,0x6A,0x04,0x4E,0xEB,0x08,0x9E,
+0xE8,0xC6,0xF7,0x03,0xF8,0xFE,0xC1,0x00,0x88,0x5D,0xC4,0x00,0x5D,0xA5,0x00,0x8A,
+0x03,0x5C,0xA6,0x00,0x89,0xE1,0x41,0x65,0x5B,0x40,0x21,0xBD,0x88,0x6E,0x88,0x8D,
+0xFC,0xD6,0xFF,0x78,0xE7,0xFF,0xFC,0xA2,0xC3,0x40,0x10,0x01,0x89,0x81,0x5D,0x6B,
+0x00,0x13,0x2A,0x04,0x9A,0xE0,0xFF,0x5A,0x03,0xCC,0xE4,0x00,0x00,0x29,0x4F,0x17,
+0x08,0x9E,0xE1,0x43,0x6C,0xC4,0x8F,0x1A,0x0B,0x18,0x03,0x0F,0x1B,0x01,0x5F,0x17,
+0x00,0xD7,0x38,0xFF,0x6D,0x43,0x4B,0x74,0x8D,0xAB,0x5F,0x5A,0x00,0x5D,0xAD,0x00,
+0x9A,0xE0,0x1F,0x2D,0x01,0x43,0x39,0xD5,0x5F,0x39,0x00,0xE4,0x00,0x00,0x33,0x4F,
+0x77,0x10,0xFF,0x96,0xFF,0x78,0x8F,0x7C,0x0F,0x7B,0x02,0x27,0x60,0x4A,0xD5,0xB8,
+0x03,0x19,0x9E,0xE1,0x5F,0x17,0x00,0xD7,0x38,0xFF,0x45,0x8B,0x1A,0x1F,0x36,0xD8,
+0x1F,0x76,0xD8,0x4E,0xF8,0x10,0x8E,0xF9,0x0F,0x37,0xA2,0x1E,0xF8,0x01,0x43,0x39,
+0xCB,0x4E,0xF7,0x10,0x8E,0xFB,0x0E,0xF7,0xA2,0x42,0xF7,0xBB,0x5F,0x37,0x15,0x4B,
+0x77,0xC8,0x27,0x60,0xBC,0x8F,0x1A,0x0B,0x6A,0x0B,0x41,0x78,0x5D,0x13,0x4A,0x0C,
+0x4D,0x6B,0x08,0x98,0x61,0x8D,0x8B,0x0B,0x0C,0x00,0x43,0x18,0xDB,0x43,0x77,0xDB,
+0x43,0x18,0xD0,0x8E,0xF9,0x42,0xFB,0xB8,0x8E,0xF8,0x0E,0xF0,0x01,0xE4,0x00,0x00,
+0x0D,0x98,0x60,0x88,0x2F,0x0E,0xC1,0x66,0x0E,0x01,0x6A,0x0D,0xE1,0x6E,0x0D,0xC1,
+0x72,0x0D,0xA1,0x76,0x0D,0x81,0x7A,0x0D,0x61,0x7E,0xED,0x41,0x00,0x82,0xED,0x21,
+0x00,0x86,0xFC,0x21,0x00,0x88,0x85,0x29,0x1C,0x21,0xB8,0x0D,0x41,0x40,0xC1,0x40,
+0x10,0x01,0x0D,0x61,0x3C,0x0D,0x81,0x38,0x0D,0xC1,0x30,0x0E,0x41,0x20,0x0E,0x61,
+0x1C,0x0E,0x81,0x18,0x0E,0xA1,0x14,0x0E,0xC1,0x10,0x0D,0x21,0x44,0x0D,0xA1,0x34,
+0x0D,0xE1,0x2C,0x0E,0x01,0x28,0x0E,0x21,0x24,0x5E,0x63,0x00,0x5E,0x44,0x00,0xC1,
+0xC0,0x10,0x01,0xF0,0x8A,0x0A,0x4C,0xFD,0xCE,0x08,0x76,0x98,0xA0,0x88,0x6E,0x99,
+0x80,0x8A,0xCA,0xE4,0x00,0xB0,0x30,0xC1,0x40,0x10,0x01,0x89,0x6C,0xC2,0xA0,0x10,
+0x01,0x9A,0x81,0xFD,0x4A,0x0B,0x94,0xE4,0x00,0x01,0x19,0xCC,0x6B,0x00,0x30,0xEA,
+0xF5,0x06,0x3F,0x41,0xA3,0x54,0x56,0xF7,0x02,0x12,0x2D,0x04,0x12,0x0D,0x05,0x11,
+0xED,0x07,0x22,0xE1,0x0C,0x1C,0x61,0x04,0x88,0x91,0x88,0xB0,0x88,0xCF,0x98,0xE0,
+0xE7,0xFF,0xFA,0xDA,0x20,0x61,0x14,0x1C,0x61,0x06,0x88,0x91,0x88,0xB0,0x88,0xCF,
+0x98,0xE0,0xE7,0xFF,0xFC,0x5C,0x20,0x60,0xCC,0x0B,0x01,0x04,0xCF,0x18,0x00,0x07,
+0x0A,0xE1,0x06,0xCE,0xF7,0x00,0x03,0x8E,0xF8,0x9B,0x0A,0x42,0xF7,0xC0,0x0E,0xED,
+0x17,0xE4,0x00,0x00,0x43,0x8C,0x6A,0x88,0x91,0x1C,0x63,0x16,0x88,0xB0,0x88,0xCF,
+0x98,0xE0,0xE7,0xFF,0xFA,0x56,0x20,0x60,0x32,0x4E,0xF4,0x5C,0x45,0x8C,0xBD,0x5D,
+0x8C,0x00,0x88,0x6E,0xF0,0x96,0x0A,0x4C,0x98,0xA1,0x9D,0x61,0xE4,0x00,0xAE,0xFE,
+0x5D,0x6B,0x00,0x12,0xEA,0x00,0xD6,0xEB,0xFB,0xAD,0x88,0x6C,0xE7,0xFF,0xF4,0x76,
+0x12,0xEA,0x00,0x22,0xE0,0x6C,0xC2,0xE0,0x10,0x01,0xEA,0xF7,0x07,0xB3,0x56,0xF7,
+0x40,0x22,0xE0,0x34,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x03,0x96,0x86,0xE8,0xC2,0xE0,
+0x10,0x01,0x88,0x6E,0xF0,0x97,0x0A,0x4C,0x98,0xA1,0xE4,0x00,0xAE,0x82,0xC2,0xE0,
+0x10,0x01,0x99,0x80,0xEA,0xF7,0x07,0xB3,0x89,0x6C,0x56,0xF7,0x80,0x99,0xA1,0x22,
+0xE0,0xFC,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x03,0xAA,0x86,0xE8,0xE4,0x00,0x00,0x7F,
+0xCE,0xEB,0x00,0x30,0x40,0x6A,0xBC,0x8A,0xE3,0x88,0x83,0x10,0xB7,0x04,0x1C,0x63,
+0x18,0x9C,0x8C,0x10,0xD7,0x05,0x10,0xF7,0x07,0xE7,0xFF,0xEF,0xD8,0x20,0x60,0x32,
+0x4E,0xED,0x5C,0x45,0x8C,0xBD,0x5D,0x8C,0x00,0x9D,0x61,0x5D,0x6B,0x00,0x12,0xEA,
+0x00,0xD6,0xEB,0xFE,0x7D,0x88,0x6C,0xE7,0xFF,0xF3,0x60,0x22,0x61,0x5C,0x22,0x40,
+0xFE,0xE4,0x00,0x00,0xA3,0xCD,0x6C,0x00,0x30,0x8D,0x6A,0x0A,0xEB,0x16,0x0E,0xE1,
+0x08,0x0A,0xEB,0x18,0x1C,0x61,0x08,0x0E,0xE1,0x0C,0x1C,0x81,0x0C,0xEE,0xED,0x03,
+0xCA,0x0C,0xAB,0x0E,0x88,0xCE,0x86,0xE8,0x0E,0xE1,0x0A,0x9D,0x81,0x0E,0xEB,0x17,
+0x5D,0x8C,0x00,0x0E,0xE1,0x0E,0x0E,0xEB,0x19,0xE4,0x00,0x00,0x25,0xC1,0xC0,0x10,
+0x01,0x99,0x80,0xC1,0xA0,0x10,0x01,0xFD,0xCE,0x01,0x2E,0x12,0xEA,0x00,0xD6,0xEC,
+0xFD,0xBD,0xC2,0xE0,0x10,0x01,0x13,0x6A,0x00,0xEB,0x97,0x06,0x3F,0x9B,0x20,0xC2,
+0xE0,0x10,0x01,0x57,0x9C,0x01,0xFE,0xF7,0x0B,0xAC,0xCB,0xA0,0x07,0xFF,0xE4,0x00,
+0x00,0x89,0x0B,0x57,0x01,0x13,0xD7,0xEF,0x5F,0x1A,0x06,0x47,0x18,0xC7,0x4F,0x18,
+0xFA,0x47,0x1A,0xC4,0x5F,0x58,0x06,0xC3,0x40,0xFF,0xE8,0x20,0x00,0x1D,0xFF,0x00,
+0x07,0xFF,0x0F,0x17,0x01,0x5F,0x58,0x06,0x23,0x80,0x48,0xCF,0x1A,0x03,0xFF,0x4F,
+0x5E,0x50,0x43,0x18,0xE8,0x8F,0x1A,0x0F,0x17,0x01,0x9F,0x21,0x1E,0xF7,0x30,0x5F,
+0x39,0x00,0xD7,0x3B,0xFE,0x06,0x0E,0xC1,0x12,0x0E,0xA1,0x16,0x0E,0x81,0x1A,0x0E,
+0x61,0x1E,0x0E,0x41,0x22,0x0E,0x21,0x26,0x0E,0x01,0x2A,0x0D,0xE1,0x2E,0x0D,0xC1,
+0x32,0x0D,0xA1,0x36,0x0D,0x81,0x3A,0x0D,0x61,0x3E,0x0D,0x41,0x42,0x0D,0x21,0x46,
+0x1C,0x21,0x48,0x85,0x29,0x1C,0x21,0xB0,0x0D,0x61,0x44,0x0D,0xC1,0x38,0x0D,0xE1,
+0x34,0x0E,0x61,0x24,0x0E,0xC1,0x18,0x0D,0x21,0x4C,0x0D,0x41,0x48,0x0D,0x81,0x40,
+0x0D,0xA1,0x3C,0x0E,0x01,0x30,0x0E,0x21,0x2C,0x0E,0x41,0x28,0x0E,0x81,0x20,0x0E,
+0xA1,0x1C,0x1E,0xC1,0x50,0xC2,0xE0,0x10,0x01,0x5C,0xC6,0x00,0x0C,0x36,0xC4,0x0C,
+0xD6,0xC0,0xF3,0xD7,0x0A,0x50,0x8B,0x03,0x4F,0xBE,0x10,0x5E,0x64,0x00,0x1E,0xFD,
+0x0A,0x89,0xC5,0xC6,0xF7,0x07,0xF8,0x5D,0xE7,0x00,0x40,0x21,0xBD,0x89,0x61,0x20,
+0xA8,0x3E,0xC2,0xE0,0x10,0x01,0xEA,0xB7,0x04,0x04,0xE4,0x00,0x00,0x0F,0x0A,0xA3,
+0x1C,0xC3,0x40,0x10,0x01,0x8A,0xEB,0xFF,0x5A,0x07,0x38,0xCB,0x60,0x20,0x00,0x9B,
+0x80,0xE4,0x00,0x00,0x7D,0x21,0xC8,0x4A,0x41,0x1A,0xEC,0x0D,0x5A,0x02,0x0D,0x08,
+0x02,0x8D,0x0A,0xE4,0x00,0x00,0x29,0x22,0x60,0x2A,0x0D,0x1A,0x02,0xE4,0x00,0x00,
+0x15,0x41,0x1A,0xEC,0x0D,0x08,0x02,0x0D,0x17,0x00,0x9F,0x81,0x0D,0xB7,0x02,0x5F,
+0x9C,0x00,0x5D,0xBB,0x15,0x9E,0xE4,0x4B,0x6D,0xD8,0x9F,0x44,0x5F,0x7B,0x06,0xD7,
+0x9E,0xFE,0x36,0x45,0xBB,0xDF,0x99,0x40,0x4D,0xAD,0xFA,0xC2,0xE0,0x10,0x01,0xC2,
+0x40,0x10,0x01,0xFE,0x97,0x0B,0x94,0x45,0xAD,0xDC,0x8A,0x2A,0x99,0x80,0x8A,0x14,
+0xFE,0x52,0x0A,0x4C,0xE4,0x00,0x06,0x43,0x21,0xC8,0xBA,0xC2,0xE0,0x10,0x01,0x13,
+0xB4,0x00,0xFF,0x77,0x0B,0x99,0x9B,0x80,0xE4,0x00,0x00,0x35,0x13,0xDB,0xFF,0xD7,
+0xCA,0x00,0x5D,0x13,0xDB,0x00,0xD5,0x5E,0x13,0xA1,0x9F,0x81,0x1F,0x7B,0x30,0x5F,
+0x9C,0x00,0xD7,0x9D,0xFF,0x56,0x21,0x41,0x52,0x0F,0x4B,0x02,0xD6,0xBA,0x12,0xF4,
+0x0F,0x6B,0x06,0xD7,0x5B,0x00,0x7C,0xD7,0x5B,0x12,0x9E,0x0F,0x6B,0x0A,0xD7,0x5B,
+0x12,0x60,0x08,0xF8,0x20,0x09,0x18,0x22,0x98,0x60,0x0F,0x16,0xB4,0x88,0x8B,0x88,
+0xAD,0x88,0xD5,0xE7,0xFF,0xE8,0x62,0x0F,0x16,0xB6,0xD0,0x60,0x11,0x82,0x13,0x54,
+0x00,0x9B,0x62,0x8F,0x4C,0x99,0x41,0xCF,0x5A,0x00,0x30,0x8F,0x54,0x18,0x1A,0x04,
+0x18,0x1A,0x06,0x1B,0x7A,0x05,0xE4,0x00,0x04,0x41,0x21,0x45,0x86,0x0F,0x4B,0x06,
+0xD6,0xBA,0x10,0x54,0x0F,0x6B,0x02,0xD7,0x7A,0x10,0x1C,0x0F,0x6B,0x0A,0xD7,0x5B,
+0x00,0x7C,0xD7,0x5B,0x0F,0xC6,0x0F,0x6B,0x0E,0xD7,0x5B,0x0F,0x88,0x08,0xF8,0x20,
+0x09,0x18,0x22,0x98,0x61,0x0F,0x16,0xB4,0x88,0x8B,0x88,0xAD,0x88,0xD5,0xE7,0xFF,
+0xE7,0xAC,0x0F,0x16,0xB6,0xD0,0x60,0x0E,0xAA,0x9B,0x61,0x13,0x54,0x00,0x5D,0xE0,
+0x21,0x8F,0x4C,0x99,0x42,0xCF,0x5A,0x00,0x30,0x8F,0x54,0x1B,0x7A,0x06,0x18,0x1A,
+0x04,0x4B,0x63,0x13,0x1B,0x7A,0x05,0xE4,0x00,0x03,0x7F,0xD1,0x41,0x06,0x41,0x1F,
+0x7A,0xFE,0xD7,0x6A,0x06,0x08,0x4F,0x4A,0x10,0x8F,0x4B,0x0F,0x5A,0x02,0xD6,0xBA,
+0x0C,0xE4,0x1F,0x6A,0xFF,0x4F,0x7B,0x10,0x8F,0x6B,0x0F,0x7B,0x02,0xD7,0x5B,0x01,
+0x34,0xD7,0x5B,0x0C,0x4E,0x1F,0x8A,0xFE,0x4F,0x9C,0x10,0x8F,0x8B,0x0F,0x9C,0x02,
+0xD7,0x5C,0x0B,0xD0,0x1F,0xAA,0x01,0x4F,0xBD,0x10,0x8F,0xAB,0x0F,0xBD,0x02,0xD7,
+0xBC,0x0B,0x58,0x1F,0x8A,0x01,0x4F,0x9C,0x10,0x8F,0x8B,0x0F,0x9C,0x02,0xD7,0x5C,
+0x00,0xDC,0xD7,0x5C,0x0A,0xC6,0x1F,0x8A,0x02,0x4F,0x9C,0x10,0x8F,0x8B,0x0F,0x9C,
+0x02,0xD7,0x5C,0x0A,0x48,0xD7,0x9B,0x0A,0x2C,0x08,0xF8,0x20,0x09,0x18,0x22,0x88,
+0x6A,0x0F,0x16,0xB4,0x88,0x8B,0x88,0xAD,0x88,0xD5,0xE7,0xFF,0xE6,0x54,0x0F,0x16,
+0xB6,0xD0,0x60,0x09,0x4A,0x13,0x74,0x00,0x1F,0x8A,0xFF,0x8F,0x6C,0x5F,0x9C,0x00,
+0x21,0xE4,0x26,0x1F,0x8A,0xFE,0x5F,0x9C,0x00,0xCF,0x7B,0x00,0x30,0x43,0x5B,0x84,
+0x1B,0x9A,0x04,0x19,0x5A,0x06,0x1F,0x4A,0x01,0x5F,0x5A,0x00,0x21,0xE4,0x26,0x1F,
+0x4A,0x02,0x5F,0x5A,0x00,0x8F,0x74,0x9D,0x41,0x1B,0x5B,0x05,0x5D,0x4A,0x00,0xE4,
+0x00,0x01,0xEF,0x4F,0x6A,0x10,0x1F,0x9A,0xFE,0x8F,0x6B,0xD5,0x5C,0x04,0x06,0x0F,
+0x7B,0x02,0xD6,0xBB,0x06,0xC4,0x1F,0x9A,0xFF,0x4F,0x9C,0x10,0x8F,0x8B,0x0F,0x9C,
+0x02,0xD7,0x9B,0x06,0x4C,0x1F,0x9A,0xFD,0x4F,0x9C,0x10,0x8F,0x8B,0x0F,0x9C,0x02,
+0xD7,0x7C,0x00,0xB4,0xD7,0x7C,0x05,0xB6,0x9F,0x5C,0x4F,0x5A,0x10,0x8F,0x4B,0x0F,
+0x5A,0x02,0xD7,0x7A,0x05,0x40,0x08,0xF8,0x20,0x09,0x18,0x22,0x88,0x6A,0x0F,0x16,
+0xB4,0x88,0x8B,0x88,0xAD,0x88,0xD5,0xE7,0xFF,0xE5,0x1A,0x0F,0x16,0xB6,0xD0,0x60,
+0x04,0x62,0x13,0x54,0x00,0x1F,0x6A,0xFF,0x8F,0x4C,0x5F,0x7B,0x00,0x21,0xE4,0x26,
+0x1F,0x6A,0xFE,0x5F,0x7B,0x00,0xCF,0x5A,0x00,0x30,0x8F,0x50,0x19,0x5A,0x06,0x1B,
+0x7A,0x04,0x9D,0x41,0x5D,0x4A,0x00,0xE4,0x00,0x00,0xB9,0x0F,0x5B,0x02,0xD6,0xBA,
+0x02,0xE4,0x1F,0x6A,0xFF,0x4F,0x7B,0x10,0x8F,0x6B,0x0F,0x7B,0x02,0xD7,0x5B,0x00,
+0xBC,0xD7,0x5B,0x02,0x4E,0x1F,0x6A,0xFE,0x4F,0x7B,0x10,0x8F,0x6B,0x0F,0x7B,0x02,
+0xD7,0x5B,0x01,0xD0,0x08,0xF8,0x20,0x09,0x18,0x22,0x88,0x6A,0x0F,0x16,0xB4,0x88,
+0x8B,0x88,0xAD,0x88,0xD5,0xE7,0xFF,0xE4,0x3E,0x0F,0x16,0xB6,0x20,0x60,0x78,0x13,
+0x54,0x00,0x1F,0x6A,0xFE,0x8F,0x4C,0xCF,0x5A,0x00,0x30,0x8F,0x54,0x1B,0x7A,0x04,
+0x19,0x5A,0x06,0x19,0x5A,0x05,0xE4,0x00,0x00,0x21,0x9D,0x41,0x5D,0x4A,0x00,0x13,
+0x52,0x04,0xD7,0x4A,0xEB,0x35,0x13,0x52,0x04,0xD7,0x4A,0x03,0xE1,0x13,0x74,0x00,
+0x43,0x5B,0x64,0xCF,0xBA,0x00,0x30,0x8F,0xB4,0x13,0x9D,0x05,0xD5,0x5C,0x00,0x95,
+0x1D,0x5C,0x01,0x21,0xE0,0x20,0x11,0x5D,0x06,0x9D,0x42,0x5D,0x4A,0x00,0xCF,0x5A,
+0x00,0x30,0x8F,0x50,0x1A,0x7A,0x07,0x0D,0xDA,0x08,0x1F,0x4C,0x01,0x5F,0x5A,0x00,
+0x8A,0x3A,0x21,0xC9,0x06,0x8F,0x7A,0x1F,0x5B,0xFF,0xCF,0x7B,0x00,0x30,0xCF,0x5A,
+0x00,0x30,0x8F,0x50,0x42,0x3B,0x84,0x1C,0x9A,0x04,0x1C,0x71,0x04,0x0F,0x16,0xB4,
+0x0F,0x56,0xBC,0x50,0xA0,0x30,0xE4,0x00,0x48,0x8E,0x0F,0x56,0xBE,0x9B,0x61,0x13,
+0x5A,0x07,0x43,0x5B,0xD5,0x9D,0x82,0x1B,0x51,0x07,0x5F,0x4C,0x00,0x0F,0x16,0xB6,
+0x4E,0x3A,0x09,0x89,0x9A,0x13,0x52,0x04,0xD7,0x4A,0x00,0x69,0x0F,0x56,0xC2,0x8F,
+0x51,0xD3,0x41,0xFB,0x70,0x13,0x14,0x00,0x8D,0x98,0x88,0x71,0x19,0x94,0x00,0x0C,
+0x36,0xC6,0x0E,0xC1,0x1A,0x0E,0xA1,0x1E,0x0E,0x81,0x22,0x0E,0x61,0x26,0x0E,0x41,
+0x2A,0x0E,0x21,0x2E,0x0E,0x01,0x32,0x0D,0xE1,0x36,0x0D,0xC1,0x3A,0x0D,0xA1,0x3E,
+0x0D,0x81,0x42,0x0D,0x61,0x46,0x0D,0x41,0x4A,0x0D,0x21,0x4E,0x1C,0x21,0x50,0x85,
+0x29,0xC2,0xE0,0x10,0x01,0xEC,0x77,0x04,0x03,0x85,0x29,0xC2,0xE0,0x10,0x01,0xEC,
+0x77,0x04,0x05,0x85,0x29,0xC2,0xE0,0x10,0x01,0xEC,0x77,0x04,0x07,0x85,0x29,0xC2,
+0xE0,0x10,0x01,0xEC,0x77,0x04,0x09,0x85,0x29,0xC2,0xE0,0x10,0x01,0xEC,0x77,0x04,
+0x0B,0x85,0x29,0xC2,0xE0,0x10,0x01,0xF8,0x77,0x04,0x0C,0x85,0x29,0xC2,0xE0,0x10,
+0x01,0x1C,0x21,0xD0,0x0D,0x41,0x28,0x0D,0x61,0x24,0x0D,0xA1,0x1C,0x0D,0xE1,0x14,
+0x0E,0x21,0x0C,0x0E,0x41,0x08,0x0E,0x61,0x04,0x0E,0xC1,0x00,0x0D,0x21,0x2C,0x0D,
+0x81,0x20,0x0D,0xC1,0x18,0x0E,0x01,0x10,0xF3,0x37,0x0A,0x4D,0x1E,0xF9,0x07,0xC6,
+0xF7,0x01,0xF8,0x1E,0xC1,0x30,0x8A,0x21,0xC1,0xE0,0x10,0x01,0x40,0x21,0xBD,0xFD,
+0xEF,0x0A,0xB4,0xC2,0x60,0x10,0x01,0x0A,0xEF,0x01,0x89,0xA3,0x8A,0x44,0x89,0x61,
+0x56,0xF7,0x10,0xFD,0x53,0x04,0x00,0x22,0xE0,0x20,0x9A,0xE1,0x1A,0xEA,0x00,0xC2,
+0xE0,0x10,0x01,0xC1,0xC0,0x10,0x01,0xF3,0x77,0x09,0x98,0xFD,0xCE,0x0B,0x94,0xC1,
+0x80,0x10,0x01,0x18,0x0E,0x00,0xFD,0x8C,0x0B,0x9C,0x9B,0x00,0x8A,0xEC,0x9B,0x5F,
+0xE4,0x00,0x00,0x2B,0x0C,0x17,0x00,0x1B,0x57,0xFE,0x1B,0x57,0xFF,0x9F,0x01,0x1E,
+0xF7,0x30,0x5F,0x18,0x00,0xD7,0x1B,0xFF,0x7E,0xC2,0xE0,0x10,0x01,0x98,0x80,0xF0,
+0x77,0x0A,0x50,0x40,0x79,0x1B,0xE4,0x00,0x9B,0xA6,0x98,0x80,0x98,0xA1,0x98,0xC0,
+0x10,0xEA,0x00,0x88,0x6D,0xE7,0xFF,0xF5,0x80,0x98,0x81,0x18,0x6B,0x00,0x5E,0x03,
+0x00,0x98,0xA1,0x88,0x6D,0x98,0xC0,0x10,0xEA,0x00,0xE7,0xFF,0xF5,0x56,0x18,0x6B,
+0x01,0x0B,0x0F,0x01,0x5E,0xE3,0x00,0x57,0x18,0x10,0x23,0x01,0xC8,0x26,0x04,0x33,
+0x26,0xE4,0x27,0x43,0x10,0xBC,0x23,0x09,0x9A,0x18,0x0A,0x00,0xC3,0x00,0x10,0x01,
+0xF3,0x18,0x07,0xAD,0x23,0x04,0x32,0x22,0x04,0x26,0x22,0xE4,0x1A,0x18,0x6A,0x00,
+0xC2,0xE0,0x10,0x01,0x18,0x0E,0x00,0xF3,0x37,0x09,0x98,0x9B,0x1F,0x9A,0xE0,0xE4,
+0x00,0x00,0x2B,0x0C,0x0C,0x00,0x1B,0x0C,0xFE,0x1B,0x0C,0xFF,0x9E,0xE1,0x1D,0x8C,
+0x30,0x5E,0xF7,0x00,0xD6,0xF9,0xFF,0x7E,0x98,0x80,0x98,0xA1,0x98,0xC0,0x10,0xEA,
+0x00,0x88,0x6D,0xE7,0xFF,0xF4,0x84,0x98,0x81,0x18,0x6B,0x00,0x98,0xA1,0x88,0x6D,
+0x98,0xC0,0x10,0xEA,0x00,0xE7,0xFF,0xF4,0x60,0x18,0x6B,0x01,0x0A,0xEF,0x01,0x56,
+0xF7,0x04,0xD2,0xE0,0x04,0xCA,0x13,0x0E,0x00,0xD3,0x01,0x04,0x91,0xC2,0xE0,0x10,
+0x01,0x98,0x60,0xF1,0xF7,0x0A,0x50,0x1D,0x98,0xFF,0x8A,0xE3,0xC3,0x00,0x10,0x01,
+0x9A,0x01,0xFF,0x18,0x07,0x38,0xE4,0x00,0x00,0xDB,0xCF,0x37,0x00,0x30,0x8F,0x2E,
+0x11,0x19,0x07,0x13,0xB9,0x06,0x43,0x6F,0x43,0x5F,0x7B,0x00,0x43,0x9D,0xDC,0x4F,
+0x3C,0x10,0x8F,0x38,0x0A,0x72,0x00,0x0F,0x59,0x02,0x1F,0x37,0x01,0xCF,0xD9,0x00,
+0x30,0x8F,0xCE,0x10,0x9E,0x07,0xD4,0x88,0x01,0xC6,0x9F,0xA2,0x13,0xDE,0x06,0xD7,
+0xBE,0x01,0x7E,0x8F,0x7D,0x4F,0x7B,0x10,0x8F,0x78,0x0F,0x7B,0x02,0xD7,0x7A,0x01,
+0x0C,0x9F,0x81,0x43,0x5A,0x98,0x4F,0x9C,0x10,0x8F,0x98,0x0F,0x9C,0x02,0x43,0x7B,
+0xE5,0xD7,0x5B,0x00,0x68,0x4F,0x30,0xCC,0x44,0x63,0xCD,0x5C,0x63,0x00,0x9E,0xE1,
+0x5E,0xF7,0x00,0xD5,0x97,0xFC,0xBC,0xE7,0xFF,0xE4,0xA0,0xC2,0xE0,0x10,0x01,0xF2,
+0xF7,0x0A,0x4D,0x26,0xE4,0x89,0x13,0x0B,0x00,0x27,0x04,0x73,0x12,0xEB,0x01,0x26,
+0xE4,0x5B,0x5F,0x17,0x17,0x88,0x6D,0x48,0xD7,0xC0,0x98,0x80,0x98,0xA2,0x10,0xEA,
+0x00,0xE7,0xFF,0xF2,0xC8,0x88,0x31,0x0E,0xC1,0x02,0x0E,0x61,0x06,0x0E,0x41,0x0A,
+0x0E,0x21,0x0E,0x0E,0x01,0x12,0x0D,0xE1,0x16,0x0D,0xC1,0x1A,0x0D,0xA1,0x1E,0x0D,
+0x81,0x22,0x0D,0x61,0x26,0x0D,0x41,0x2A,0x0D,0x21,0x2E,0x1C,0x21,0x30,0x85,0x29,
+0x1C,0x21,0x90,0x5C,0x63,0x00,0x0D,0x41,0x68,0x0D,0x61,0x64,0x0D,0x81,0x60,0x0D,
+0xA1,0x5C,0x0D,0xC1,0x58,0x0D,0xE1,0x54,0x0E,0x81,0x40,0x5D,0xE8,0x00,0x5C,0x84,
+0x00,0x5D,0xE1,0x3B,0xC2,0xE0,0x10,0x01,0xC1,0xA0,0x10,0x01,0xC1,0x80,0x10,0x01,
+0x0D,0x21,0x6C,0x0E,0x01,0x50,0x0E,0x21,0x4C,0x0E,0x41,0x48,0x0E,0x61,0x44,0x0E,
+0xA1,0x3C,0x0E,0xC1,0x38,0x0C,0x61,0x0C,0x0C,0x81,0x10,0x0C,0xC1,0x08,0x0C,0xE1,
+0x14,0x49,0xEF,0x52,0x99,0xC1,0x99,0x40,0x51,0x60,0xFF,0xFE,0x97,0x0B,0x94,0xFD,
+0xAD,0x0A,0x4C,0xFD,0x8C,0x04,0x02,0xE4,0x00,0x0A,0x13,0xE4,0x00,0x9D,0x80,0xCF,
+0x15,0x00,0x30,0x8F,0x14,0x0B,0x38,0x18,0x0B,0x58,0x16,0x0F,0x21,0x30,0x0F,0x41,
+0x28,0x0F,0x38,0x0E,0x0C,0x01,0x2C,0x0F,0x21,0x20,0x0C,0x01,0x34,0x0C,0x01,0x24,
+0x12,0x58,0x04,0x12,0x38,0x05,0x12,0x78,0x07,0x0F,0x38,0x0A,0xD3,0x20,0x2D,0x1A,
+0x23,0x25,0x3E,0x9B,0x0A,0x09,0x0D,0x0B,0x13,0xD4,0x00,0x41,0x0F,0x43,0x9A,0x01,
+0x41,0x08,0xC0,0x8B,0x0E,0xE4,0x00,0x00,0x65,0xCF,0x38,0x00,0x30,0x8F,0x34,0x13,
+0xB9,0x07,0x43,0xB0,0xED,0xD6,0x7D,0x00,0xEE,0x0F,0xB9,0x0A,0x23,0xA4,0x5A,0x0B,
+0xB9,0x16,0x43,0xBA,0xED,0x4F,0x3D,0xFA,0x47,0xB9,0xEE,0x43,0x3D,0xCD,0xD5,0x19,
+0x26,0x5C,0x9F,0x01,0x5F,0x18,0x00,0xD7,0xD8,0xFE,0x95,0xE4,0x00,0x0A,0x25,0x9A,
+0x00,0xD3,0x22,0x0B,0x7E,0x13,0xB4,0x00,0x8B,0x2E,0x9B,0xC1,0xE4,0x00,0x00,0x63,
+0xCF,0x59,0x00,0x30,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x0B,0x94,0x8F,0x57,0x11,0x1A,
+0x07,0x41,0x1E,0x45,0xD6,0x68,0x00,0xA6,0x0D,0x1A,0x0A,0x21,0x08,0x36,0x11,0x18,
+0x06,0x13,0x5A,0x06,0xD5,0x1A,0x24,0x5A,0x9F,0x21,0x5F,0x39,0x00,0xD7,0xB9,0xFE,
+0x9D,0xE4,0x00,0x09,0xFB,0xEB,0x18,0x07,0xB3,0x57,0x18,0x80,0xD3,0x00,0x05,0x02,
+0xC3,0x00,0x10,0x01,0x1C,0x61,0x1C,0xEF,0x18,0x03,0x82,0x08,0x81,0x19,0x88,0xB2,
+0x88,0xD1,0x88,0xF0,0x87,0x08,0xD0,0x60,0x07,0xEA,0xC2,0xF8,0x00,0x21,0xFE,0xF7,
+0xB7,0x4C,0x0C,0x77,0x02,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x01,0x2E,0x98,0xA0,0x10,
+0x97,0x24,0xE4,0x00,0x9C,0x52,0x13,0x0D,0x04,0x10,0x6D,0x01,0x98,0x81,0x40,0x63,
+0xC3,0xE4,0x00,0x95,0x70,0x0E,0xE1,0x16,0x9E,0xC3,0x4E,0xD6,0x18,0x8E,0xD7,0x0B,
+0x16,0x04,0x0C,0x96,0x0A,0x40,0x84,0xC5,0x5C,0x9F,0xF9,0x0C,0x61,0x1E,0x48,0x84,
+0x00,0x88,0xB2,0x88,0xD1,0x88,0xF0,0xC3,0x00,0x10,0x01,0xEF,0x18,0x03,0xC6,0x87,
+0x08,0xC2,0xF8,0x00,0x21,0xFE,0xF7,0xB7,0x4C,0x0C,0x77,0x02,0xC2,0xE0,0x10,0x01,
+0xFE,0xF7,0x01,0x2E,0x98,0xA1,0x10,0x97,0x24,0xE4,0x00,0x9B,0xA4,0x13,0x0D,0x04,
+0x10,0x6D,0x01,0x98,0x81,0x40,0x63,0xC3,0xE4,0x00,0x94,0xC2,0x1C,0x61,0x1A,0x1C,
+0x81,0x24,0x88,0xB2,0x88,0xD1,0x88,0xF0,0xE7,0xFF,0xDC,0x5A,0x20,0x61,0x9C,0x0B,
+0x01,0x18,0x0F,0x01,0x2C,0x0B,0x01,0x1A,0x0F,0x01,0x34,0x0E,0xE1,0x0E,0x22,0xE0,
+0x9C,0x0E,0xE1,0x12,0x22,0xE0,0x84,0xC2,0xF8,0x00,0x21,0xFE,0xF7,0xB7,0x50,0xC3,
+0x00,0x10,0x01,0x1C,0x61,0x2C,0xEF,0x18,0x03,0xCA,0x1C,0x81,0x34,0x0C,0xA1,0x26,
+0x0C,0xD7,0x02,0x87,0x08,0x0F,0x21,0x36,0x5F,0x3F,0xF9,0xCB,0x00,0x07,0xFF,0x4B,
+0x39,0x00,0xCF,0x53,0xFC,0x00,0xC3,0x20,0xFF,0xE8,0xFF,0x5A,0x04,0x00,0x4B,0x39,
+0xC0,0x9A,0x00,0xCF,0x39,0x03,0xFF,0x43,0x19,0xC0,0x8F,0x1A,0x0F,0x01,0x34,0xE4,
+0x00,0x00,0x23,0x0C,0x01,0x2C,0x0C,0x01,0x34,0x0C,0x01,0x24,0xE4,0x00,0x06,0x1F,
+0xC3,0x00,0x10,0x01,0x0F,0xA1,0x26,0xEA,0x38,0x0A,0xB5,0x0E,0x41,0x22,0x57,0x11,
+0x02,0x23,0x00,0xE8,0x0E,0xE1,0x0A,0x0B,0x17,0x02,0xD6,0x58,0x00,0x44,0xD7,0xB8,
+0x01,0x38,0x53,0x00,0x64,0xD7,0xB2,0x00,0x5C,0x43,0x12,0xC0,0xE4,0x00,0x00,0x0F,
+0x43,0x1D,0xC0,0x0E,0xE1,0x0A,0x0B,0x37,0x05,0x43,0x18,0xCB,0x0B,0x2C,0x09,0x8F,
+0x19,0xE4,0x00,0x00,0x0F,0x0B,0x0C,0x09,0x0F,0x0C,0x07,0x0F,0x01,0x32,0x0F,0xC1,
+0x36,0x08,0x6C,0x07,0x42,0xD8,0xF5,0x8B,0x52,0x5E,0xD6,0x06,0x8B,0x3D,0x4D,0x16,
+0xFA,0x4C,0x63,0x08,0x46,0xC8,0xB6,0x41,0x16,0x45,0xD4,0x68,0x19,0x10,0xD6,0x5D,
+0x00,0x90,0x11,0x0C,0x0A,0x41,0x08,0xEB,0xD5,0x12,0x18,0xA0,0xE4,0x00,0x05,0xE7,
+0xD7,0xB2,0x18,0x60,0x11,0x0C,0x0A,0x41,0x08,0x93,0xD5,0x1D,0x18,0x10,0xE4,0x00,
+0x05,0xC3,0x89,0x16,0xD7,0xB2,0x00,0xD0,0x9B,0x21,0x43,0x99,0x9D,0x8B,0x38,0x89,
+0x11,0x8B,0x1E,0x5E,0x7C,0x00,0x8B,0xD9,0x8A,0x36,0x8B,0x5D,0x8B,0x32,0x40,0xBA,
+0xCC,0x40,0x68,0x8D,0x42,0x5A,0xCD,0x5C,0x7F,0xF9,0x4F,0xB2,0xFA,0x4A,0xDA,0xC8,
+0x46,0x5D,0x96,0x48,0x99,0xD0,0x42,0x52,0xED,0x9E,0x41,0x42,0x52,0x28,0x4C,0xA3,
+0xFA,0xCE,0x52,0xFF,0xF6,0x44,0x65,0x1E,0x9E,0x4A,0x40,0xA3,0x2D,0x26,0x44,0x17,
+0x9A,0x42,0x5F,0xB2,0x00,0x52,0x40,0x14,0x43,0xA5,0xE8,0x5F,0xBD,0x06,0x5F,0xA2,
+0x79,0x4B,0xBD,0x90,0x42,0x44,0xB4,0x26,0x41,0x10,0x8E,0x28,0x4C,0x71,0xFA,0x46,
+0x23,0x8E,0x42,0x31,0x1D,0x4E,0x31,0x0A,0x5C,0x71,0x06,0x40,0xA3,0xED,0x8C,0x7D,
+0x40,0x85,0x23,0x42,0xC3,0xB3,0x8E,0xC4,0x42,0x56,0x90,0x42,0x32,0x8D,0x5E,0x52,
+0x06,0x5E,0x31,0x06,0x4E,0xD1,0xFA,0x46,0x36,0x8E,0x42,0x31,0xB5,0x41,0x08,0x8B,
+0x42,0x3D,0x8D,0x42,0x52,0x8B,0x8D,0x12,0x41,0x08,0xE8,0xCF,0xB5,0x00,0x30,0x8F,
+0xB4,0x0D,0x1D,0x17,0xC3,0xA0,0x10,0x01,0xF3,0xBD,0x04,0x0C,0x41,0x19,0xEB,0xD7,
+0x48,0x01,0x34,0x4D,0x19,0x08,0xD5,0x1A,0x01,0x0C,0x4D,0x1D,0x08,0xCE,0x3A,0xFF,
+0xFE,0x41,0x08,0xCB,0x9F,0xBE,0x8D,0x11,0x43,0xBD,0xD3,0x43,0x28,0xCB,0x43,0x39,
+0xE8,0xE4,0x00,0x00,0x0D,0x9B,0x20,0x22,0x60,0x26,0x8B,0x99,0x8B,0x3A,0x8B,0x5C,
+0x43,0xB8,0xF4,0x42,0x39,0xD4,0x4F,0x9D,0xFA,0x47,0xBC,0xEE,0x43,0xBD,0xE5,0x4F,
+0xBD,0x0A,0x5D,0x1D,0x06,0x26,0x21,0x54,0x43,0x98,0x45,0xFF,0x9C,0x01,0x2B,0xC3,
+0x80,0x4A,0xCE,0x20,0x01,0x1D,0x43,0xD8,0xF5,0x4F,0x9E,0xFA,0x47,0xDC,0xF6,0x43,
+0x9E,0xE5,0x4F,0x9C,0x0A,0x9F,0x81,0x5F,0x9C,0x06,0x43,0xC8,0xE5,0x8D,0x1C,0x43,
+0x48,0xD3,0x43,0x3E,0xCB,0x8F,0x3A,0x43,0x39,0x88,0x43,0xB9,0xED,0x5F,0x39,0x06,
+0x5F,0xBD,0x06,0x4F,0x5D,0xFA,0x47,0xBA,0xEE,0x43,0xBD,0xD5,0x43,0x18,0xEB,0x43,
+0xBC,0xED,0x43,0x39,0xEB,0x8F,0x19,0x43,0x18,0xE0,0xCF,0x35,0x00,0x30,0x8F,0x34,
+0x0F,0x19,0x19,0xE4,0x00,0x01,0x91,0xD7,0xB2,0x00,0xB0,0x9B,0x01,0x8B,0x32,0x43,
+0x98,0x9D,0x8B,0x5D,0x5E,0x7C,0x00,0x8B,0x1E,0xE4,0x00,0x00,0x11,0x8B,0x3D,0x8B,
+0x52,0xC3,0xC0,0x10,0x01,0xF3,0xDE,0x04,0x0C,0x40,0x79,0xF3,0xD7,0x43,0x01,0x34,
+0x4C,0x79,0x08,0xD4,0x7A,0x01,0x0C,0x4C,0x7E,0x08,0xCC,0x9A,0xFF,0xFE,0x40,0x63,
+0xCB,0x9F,0xDE,0x8C,0x64,0x43,0xDE,0xD3,0x43,0x23,0xCB,0x43,0x39,0xF0,0xE4,0x00,
+0x00,0x0D,0x9B,0x20,0x22,0x60,0x26,0x8B,0x99,0x8B,0x3A,0x8B,0x5C,0x43,0x99,0xD4,
+0x27,0x81,0x50,0xC3,0x00,0x7F,0xEC,0x20,0x00,0x49,0xCB,0xC0,0x04,0x00,0x43,0xDE,
+0xC5,0xC3,0xC0,0x25,0x68,0xE4,0x00,0x00,0x11,0xC3,0x00,0xA5,0x68,0x4B,0xC1,0x01,
+0x23,0xC0,0xD0,0xCF,0x5A,0x04,0x50,0x53,0xC0,0x50,0xCF,0x39,0x03,0xB0,0x8F,0x3A,
+0x43,0x39,0xE0,0xFF,0x99,0xFC,0x00,0x5F,0x39,0x06,0x5F,0x9C,0x06,0x4F,0x5C,0xFA,
+0x47,0x9A,0xE6,0x43,0x9C,0xD5,0x43,0x18,0xE3,0x43,0x9E,0xE5,0x43,0x39,0xE3,0x8F,
+0x19,0x43,0x18,0xF0,0xCF,0x35,0x00,0x30,0x42,0x52,0xB3,0x8F,0x34,0x42,0x3D,0x8B,
+0x0F,0x19,0x19,0x8E,0x32,0x41,0x11,0x40,0x0D,0x19,0x17,0xCF,0x75,0x00,0x30,0x8F,
+0x74,0x0F,0x1B,0x0A,0x23,0x04,0x62,0x9B,0x22,0x0F,0x3B,0x08,0x22,0x00,0xFC,0xCF,
+0x2B,0x00,0x30,0x8F,0x34,0x0C,0x19,0x08,0xE4,0x00,0x00,0x55,0x23,0x08,0xBE,0xCF,
+0x0B,0x00,0x30,0x8F,0x14,0x0C,0x18,0x08,0x9B,0x01,0xE4,0x00,0x00,0x31,0x0C,0x18,
+0x08,0xCF,0x0B,0x00,0x30,0x8F,0x14,0x0C,0x18,0x08,0x9B,0x01,0x4F,0x78,0xAC,0x45,
+0x4A,0xDD,0x4F,0x18,0x5C,0x45,0x58,0x55,0x5D,0x4A,0x00,0x9D,0xC1,0x5D,0xCE,0x00,
+0x1F,0x6E,0xFF,0xC2,0xF8,0x00,0x21,0x5E,0xBB,0x00,0xFE,0xF7,0xB7,0x48,0x13,0x14,
+0x00,0x0C,0x77,0x02,0x10,0x8D,0x00,0x98,0xA1,0xD7,0x15,0xD7,0x15,0xE4,0x00,0x93,
+0x3C,0x88,0x6A,0xE7,0xFF,0xD8,0xC8,0x13,0x14,0x00,0x5F,0x38,0x00,0x27,0x28,0x15,
+0x9B,0x02,0x1B,0x14,0x00,0xE4,0x00,0x01,0x4D,0x89,0x78,0xE4,0x00,0x00,0x0D,0x89,
+0x79,0xCF,0x0B,0x00,0x30,0x8F,0x14,0x0B,0x38,0x16,0x9A,0x01,0x0F,0x21,0x2C,0x0B,
+0x38,0x18,0x0F,0x18,0x0E,0x0F,0x21,0x34,0x0F,0x01,0x24,0xE7,0xFF,0xF9,0x2B,0x41,
+0x12,0xEC,0xCE,0xD5,0x00,0x30,0x8E,0xD4,0x0D,0x16,0x0C,0x54,0x71,0x08,0x0E,0xC1,
+0x2A,0x0E,0x21,0x2E,0xD0,0x60,0xF3,0x9A,0xE7,0xFF,0xFA,0x15,0xCF,0x15,0x00,0x30,
+0x8F,0x14,0x0F,0x38,0x0A,0xD3,0x22,0xFB,0xB6,0xE7,0xFF,0xFE,0xAB,0xC3,0x00,0x10,
+0x01,0x9A,0xC1,0xE8,0xF8,0x07,0xB3,0x0F,0x01,0x04,0x42,0xD6,0x9D,0x54,0xE7,0x40,
+0x5E,0x16,0x00,0x1C,0x61,0x18,0x88,0x92,0x88,0xB1,0x88,0xD0,0x4C,0xE7,0x31,0xE7,
+0xFF,0xDD,0x3C,0x0F,0x01,0x06,0xD0,0x60,0xD8,0x7E,0xE7,0xFF,0xF8,0x53,0xCF,0x15,
+0x00,0x30,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x0B,0x94,0x8F,0x17,0x0C,0x18,0x08,0x9B,
+0x01,0x4F,0x78,0xAC,0x45,0x4A,0xDD,0xE7,0xFF,0xFE,0x43,0x0E,0xC1,0x3A,0x0E,0xA1,
+0x3E,0x0E,0x81,0x42,0x0E,0x61,0x46,0x0E,0x41,0x4A,0x0E,0x21,0x4E,0x0E,0x01,0x52,
+0x0D,0xE1,0x56,0x0D,0xC1,0x5A,0x0D,0xA1,0x5E,0x0D,0x81,0x62,0x0D,0x61,0x66,0x0D,
+0x41,0x6A,0x0D,0x21,0x6E,0x1C,0x21,0x70,0x85,0x29,0xC2,0xE0,0x10,0x01,0xC3,0x00,
+0x10,0x01,0xF8,0x77,0x04,0x34,0xC2,0xE0,0x10,0x01,0xEA,0xF7,0x0A,0x57,0xEE,0xF8,
+0x04,0x1D,0xC3,0x00,0x10,0x01,0xCF,0x37,0x00,0x05,0x4E,0xF7,0x10,0xEF,0x38,0x04,
+0x1B,0xC3,0x00,0x10,0x01,0xEE,0xF8,0x04,0x19,0x85,0x29,0x5E,0xE3,0x06,0x20,0x84,
+0x5A,0x0B,0x25,0x00,0x0B,0x45,0x02,0x0B,0x65,0x04,0x0B,0xC5,0x06,0x0B,0x85,0x08,
+0xE4,0x00,0x00,0x27,0x0B,0x25,0x0A,0x0B,0x45,0x0C,0x0B,0x65,0x0E,0x0B,0xC5,0x10,
+0x0B,0x85,0x12,0xC3,0x00,0x10,0x01,0x99,0x02,0xEB,0x18,0x0A,0x57,0x43,0xDE,0xC3,
+0x43,0xBE,0x40,0x43,0xA0,0xED,0xFF,0xBD,0x03,0xFF,0xD6,0xFD,0x00,0xC8,0x43,0xBC,
+0xC3,0x5C,0x79,0x04,0x41,0x1D,0x40,0xFD,0x08,0x03,0xFF,0xD5,0x17,0x04,0x34,0xE4,
+0x00,0x00,0x49,0x26,0xFC,0x80,0x5C,0x79,0x04,0xC3,0xC0,0xFF,0xAC,0x20,0x01,0xD1,
+0x43,0x37,0xCB,0x42,0xFD,0xBD,0x43,0x77,0xDB,0x40,0x79,0xDC,0x40,0x63,0xE8,0xE4,
+0x00,0x00,0xBF,0x43,0x9C,0xC3,0x9B,0xA2,0x43,0xBC,0xE8,0xFF,0xDD,0x03,0xFF,0xD7,
+0xD7,0x01,0xCC,0xC2,0xE0,0xFF,0xEC,0x20,0x00,0xE9,0x5C,0x79,0x04,0xC3,0x80,0xFF,
+0xEC,0x20,0x01,0x01,0x43,0x60,0xED,0xFC,0x7B,0xFC,0x01,0x8C,0x77,0x43,0x43,0xD3,
+0xC8,0x60,0x07,0xFF,0xFF,0x7B,0x04,0x00,0x42,0xE3,0xBD,0x43,0x37,0xCB,0x40,0x7A,
+0xCC,0x40,0x63,0xD8,0xE4,0x00,0x00,0x35,0x40,0x77,0xC4,0x40,0x63,0xDB,0x26,0xFC,
+0x34,0xFC,0x78,0x07,0xFF,0x40,0x63,0xBD,0x40,0x63,0xD3,0x40,0x63,0xC0,0x5C,0x63,
+0x04,0x85,0x29,0x9C,0x38,0x0C,0x01,0x04,0xC3,0x00,0x10,0x01,0xC3,0x40,0x10,0x01,
+0xFF,0x18,0x0A,0x4C,0xFF,0x9A,0x03,0xCC,0x0B,0x38,0x0B,0x0B,0xBC,0x00,0x13,0x18,
+0x0C,0x5F,0x79,0x06,0x5E,0xE3,0x06,0x43,0x7D,0xDB,0x43,0x7B,0xC0,0xD6,0xFB,0x00,
+0x4C,0x9B,0x41,0x0F,0x41,0x04,0x0F,0x41,0x06,0x98,0x7F,0x23,0x40,0x5E,0x0B,0x5C,
+0x02,0x43,0x5A,0xCB,0x43,0x5A,0xC0,0xD7,0x57,0x00,0x58,0x9B,0x41,0x98,0x60,0x0F,
+0x41,0x04,0x0F,0x41,0x06,0x23,0x41,0x1E,0xC3,0x40,0x10,0x01,0xC3,0x60,0x10,0x01,
+0xF3,0xBA,0x0A,0x50,0xFF,0x7B,0x03,0xD0,0x9B,0x41,0xE4,0x00,0x00,0x57,0x0B,0xDB,
+0xFE,0x43,0xDE,0xCB,0x43,0xDE,0xC0,0xD7,0xD7,0x00,0xD4,0x0B,0xDB,0x00,0x43,0xDE,
+0xCB,0x43,0xDE,0xC0,0xD7,0xD7,0x00,0x68,0x9B,0x41,0x0F,0x41,0x04,0xE4,0x00,0x00,
+0x1F,0x9F,0x41,0x9F,0x62,0x5C,0x7A,0x02,0xD7,0x5D,0xFE,0xB0,0x0F,0x41,0x06,0x23,
+0x40,0x9E,0xC3,0x40,0x10,0x01,0xF3,0x5A,0x0A,0x50,0x9F,0x41,0x4F,0x7A,0x08,0x8F,
+0x9B,0x0B,0x7C,0x00,0x43,0x3B,0xCB,0x43,0x19,0xC0,0xD7,0x17,0x00,0x64,0x9A,0xE1,
+0x5C,0x7A,0x02,0x0E,0xE1,0x04,0x9C,0x28,0x85,0x29,0xC3,0x20,0x10,0x01,0x5C,0x63,
+0x06,0x5C,0xC6,0x02,0x5C,0xE7,0x00,0xFF,0x39,0x0C,0xB6,0x24,0xC0,0x98,0xC2,0xE0,
+0x10,0x01,0xF3,0x17,0x0A,0x50,0xD4,0xD8,0x00,0xDC,0x43,0x18,0x3B,0x1E,0xE6,0xFF,
+0x8E,0xF8,0x4F,0x17,0x10,0x8F,0x19,0x0B,0x78,0x02,0x0B,0x58,0x00,0xE4,0x00,0x00,
+0x11,0x9B,0x40,0x8B,0x7A,0xC2,0xE0,0x10,0x01,0xF3,0x97,0x0A,0x50,0xD7,0x86,0x01,
+0x08,0xD0,0xDF,0x04,0x28,0x42,0xFC,0x3B,0x8E,0xE6,0x4F,0x17,0x10,0x4E,0xF7,0x10,
+0x8F,0x19,0x8F,0x37,0x0B,0x18,0x02,0x0B,0xD9,0x00,0xE4,0x00,0x00,0x17,0x24,0xDD,
+0xA0,0x9B,0xC0,0x8B,0x1E,0xD4,0xDC,0x03,0x0C,0x4E,0xE6,0x08,0xC0,0xE0,0x10,0x01,
+0xFC,0xE7,0x03,0xCC,0x8E,0xE7,0x9C,0xC1,0x09,0x17,0x00,0x4C,0xC6,0x08,0xC2,0xE0,
+0x10,0x01,0xFE,0xF7,0x0A,0x4C,0x8C,0xE6,0x0B,0x97,0x0B,0x13,0x37,0x0C,0x0A,0xE7,
+0x00,0x40,0xD7,0xE3,0x42,0xF7,0x45,0x43,0xA8,0xE3,0x40,0xC6,0xC8,0x43,0xBD,0xC8,
+0x43,0x97,0xE3,0x43,0xA3,0xED,0x43,0x3C,0xC8,0x40,0x66,0x1D,0x43,0x18,0xEB,0x43,
+0x7B,0x1B,0x42,0xFE,0xEB,0x8F,0x1B,0x40,0x7A,0x1B,0x43,0x18,0xC8,0x8E,0xE3,0x42,
+0xF7,0xC8,0xE4,0x00,0x00,0x11,0x9A,0xE0,0x8B,0x17,0x0F,0x04,0x01,0x0E,0xE5,0x01,
+0x85,0x29,0x1C,0x21,0xD8,0x0D,0x41,0x20,0x0D,0x61,0x1C,0x0D,0x81,0x18,0x0D,0xA1,
+0x14,0x5D,0x84,0x00,0x0D,0xC1,0x10,0x0D,0xE1,0x0C,0x0E,0x01,0x08,0x5D,0xA5,0x00,
+0x5D,0x63,0x04,0x0C,0xC1,0x04,0x0D,0x21,0x24,0x89,0xE8,0x0D,0xC1,0x2A,0xC1,0x40,
+0x10,0x01,0x9A,0x02,0xFD,0x4A,0x0A,0x4C,0x0C,0xE1,0x00,0x08,0x6A,0x0B,0x40,0x6C,
+0x1B,0x40,0x63,0x80,0x40,0x6B,0x1D,0xE7,0xFF,0xFC,0x38,0x0C,0x81,0x06,0x88,0xC3,
+0x5E,0xE3,0x02,0x0C,0xA1,0x02,0x26,0xFC,0x36,0x0C,0x04,0x01,0x0C,0x05,0x01,0xE4,
+0x00,0x00,0x2D,0x0A,0xEA,0x0B,0x42,0xEC,0xBB,0x88,0xED,0x40,0x77,0x80,0x40,0x6B,
+0x1D,0xE7,0xFF,0xFD,0x72,0x08,0x6A,0x0B,0x40,0x6C,0x1B,0x4C,0x63,0x0A,0x8C,0x6B,
+0xE7,0xFF,0xFB,0xC6,0x12,0xEA,0x04,0x88,0xC3,0x5F,0x03,0x02,0xD7,0x17,0x00,0x70,
+0x0C,0x0F,0x01,0x0C,0x0E,0x01,0xE4,0x00,0x00,0x69,0x08,0x6A,0x0B,0x41,0x8C,0x1B,
+0x88,0x8F,0x4C,0x6C,0x0A,0x88,0xAE,0x8C,0x6B,0x88,0xED,0x0E,0x01,0x0A,0x0D,0xE1,
+0x0E,0x0D,0xC1,0x12,0x0D,0xA1,0x16,0x0D,0x81,0x1A,0x0D,0x61,0x1E,0x0D,0x41,0x22,
+0x0D,0x21,0x26,0x1C,0x21,0x28,0xE7,0xFF,0xFC,0xC9,0x0E,0x01,0x0A,0x0D,0xE1,0x0E,
+0x0D,0xC1,0x12,0x0D,0xA1,0x16,0x0D,0x81,0x1A,0x0D,0x61,0x1E,0x0D,0x41,0x22,0x0D,
+0x21,0x26,0x1C,0x21,0x28,0x85,0x29,0x1C,0x21,0x90,0x0D,0x41,0x68,0x0D,0x81,0x60,
+0x0D,0xA1,0x5C,0x0D,0xE1,0x54,0x0E,0x01,0x50,0x0E,0x21,0x4C,0x0D,0x21,0x6C,0xC2,
+0x20,0x10,0x01,0x0D,0x61,0x64,0x0D,0xC1,0x58,0x0E,0x41,0x48,0x0E,0x61,0x44,0x0E,
+0x81,0x40,0x0E,0xA1,0x3C,0x0E,0xC1,0x38,0x89,0xA3,0x8A,0x04,0x89,0x85,0x5D,0xE6,
+0x00,0x99,0x40,0xFE,0x31,0x0B,0x94,0xE4,0x00,0x00,0xA1,0xCF,0x0A,0x00,0x30,0x8F,
+0x11,0x1E,0xE1,0x20,0x10,0xB8,0x07,0x0B,0x98,0x17,0x43,0x2D,0x2C,0x4D,0x05,0x08,
+0x13,0x59,0x00,0x1F,0x61,0x38,0x8D,0x1A,0x9F,0x41,0x4D,0x08,0x08,0x1B,0x59,0x00,
+0x8F,0x68,0x08,0x78,0x17,0x0F,0x9B,0xD9,0x1F,0x01,0x30,0x8F,0x08,0x88,0x8F,0x0F,
+0x01,0x00,0x1C,0xC1,0x18,0x1C,0xE1,0x28,0x8C,0xC8,0x8C,0xE8,0x9D,0x41,0x8D,0x17,
+0x5D,0x4A,0x00,0xE7,0xFF,0xFD,0x1E,0x12,0xF1,0x00,0xD6,0xEA,0xFD,0x8D,0xC2,0xE0,
+0x10,0x01,0x8B,0x10,0xF2,0x57,0x04,0x34,0x9B,0x41,0x8A,0xED,0xE4,0x00,0x00,0x23,
+0x13,0x37,0x00,0x27,0x24,0x19,0x0F,0x58,0x00,0x9E,0xE1,0x9F,0x04,0x43,0x37,0x6D,
+0x5F,0x39,0x00,0xD6,0x59,0xFF,0x6D,0x99,0x60,0xC2,0x60,0x10,0x01,0x89,0x4B,0xC2,
+0x80,0x10,0x01,0xE4,0x00,0x03,0x07,0x42,0xF0,0x5C,0x0E,0xF7,0x02,0x22,0xE0,0x48,
+0x1E,0xE1,0x10,0x8E,0xEB,0x0B,0x57,0x00,0x0B,0x77,0x02,0xE4,0x00,0x01,0x5D,0x42,
+0xED,0x54,0x12,0xF7,0x00,0x22,0xE1,0xE0,0x1E,0xE1,0x18,0x8E,0xEB,0x0B,0x17,0x00,
+0x1E,0xE1,0x28,0x8E,0xEB,0x0A,0xF7,0x00,0x8E,0xF8,0x1F,0x01,0x30,0x8F,0x0B,0x0B,
+0x18,0x00,0x8E,0xF8,0x1F,0x01,0x20,0x8F,0x0B,0x0B,0x18,0x00,0x8E,0xF8,0x9B,0x04,
+0x42,0xF7,0xC0,0x0E,0xEC,0x00,0xE4,0x00,0x02,0x55,0xCE,0xEE,0x00,0x30,0x8E,0xF1,
+0x41,0x0E,0xCC,0x08,0x77,0x17,0x4D,0x08,0x08,0x1E,0xE1,0x30,0x8E,0xE8,0x0E,0xE1,
+0x00,0x1E,0xE1,0x20,0x0F,0x01,0x0C,0x0F,0x21,0x08,0x88,0x8F,0x88,0xB5,0x1C,0xC1,
+0x18,0x1C,0xE1,0x28,0x8C,0xC8,0x8C,0xE8,0x8D,0x17,0xE7,0xFF,0xFB,0x90,0x9D,0xC1,
+0x0F,0x01,0x0E,0x5D,0xCE,0x00,0x0F,0x21,0x0A,0xE4,0x00,0x00,0x23,0x9A,0xC1,0x99,
+0xC0,0x42,0xD6,0x55,0x4F,0x2A,0x08,0x43,0x0D,0xB4,0x12,0xF8,0x00,0xD6,0xEE,0xFD,
+0x6D,0x4E,0xD6,0x10,0x43,0x10,0xB4,0x0F,0x18,0x02,0xD3,0x00,0x05,0x0A,0x1F,0x01,
+0x38,0x8E,0xD8,0x0B,0x56,0xD8,0x0B,0x76,0xDA,0x43,0x3A,0xDD,0x5F,0x39,0x06,0x4E,
+0xF9,0xFA,0xEB,0x93,0x04,0x1B,0x47,0x37,0xCE,0x43,0x39,0xBD,0x52,0xE0,0x64,0x5F,
+0x39,0x06,0xD7,0x3C,0x00,0xF4,0xEB,0x14,0x04,0x19,0x9A,0xE0,0xD7,0x19,0x00,0xA4,
+0x42,0xF9,0xC5,0x43,0x1C,0xC5,0xCE,0xF7,0x00,0x64,0x42,0xF7,0xC0,0x5E,0xF7,0x00,
+0x5F,0x7A,0x15,0x4B,0x81,0x01,0x4F,0x2A,0x08,0x4B,0x00,0x0A,0x8F,0x19,0x8F,0x3C,
+0x1F,0x81,0x38,0x1F,0x41,0x38,0x53,0x60,0xC8,0x4F,0x39,0x08,0x43,0x7B,0xBD,0x8F,
+0x3C,0x0B,0x99,0xE0,0x4F,0x18,0x08,0x8F,0x1A,0x0B,0xB8,0xE8,0x0B,0x58,0xF8,0x8F,
+0x5D,0x8F,0x5C,0x0B,0x99,0xF0,0x8F,0x5C,0x43,0x5B,0xD3,0x0B,0x79,0xE8,0x0B,0x39,
+0xF8,0x8F,0x79,0x0B,0x38,0xE0,0x8F,0x79,0x0B,0x38,0xF0,0x43,0x1B,0xCC,0x42,0xF7,
+0xC3,0xCB,0x00,0x03,0x20,0x8E,0xFA,0xE7,0xFF,0xFD,0xF3,0x22,0xE0,0x88,0x1F,0x01,
+0x38,0x4E,0xEA,0x10,0x8E,0xF8,0x0B,0x17,0xF0,0x0B,0x37,0xE0,0x8F,0x38,0x0B,0x17,
+0xF8,0x8F,0x38,0x0B,0x17,0xE8,0x42,0xF9,0xC4,0xE7,0xFF,0xFD,0xAB,0x0C,0x0C,0x00,
+0x9D,0x41,0x9D,0x84,0x9D,0x64,0x5E,0xAA,0x00,0xD6,0x55,0xF3,0xF5,0x0E,0xC1,0x3A,
+0x0E,0xA1,0x3E,0x0E,0x81,0x42,0x0E,0x61,0x46,0x0E,0x41,0x4A,0x0E,0x21,0x4E,0x0E,
+0x01,0x52,0x0D,0xE1,0x56,0x0D,0xC1,0x5A,0x0D,0xA1,0x5E,0x0D,0x81,0x62,0x0D,0x61,
+0x66,0x0D,0x41,0x6A,0x0D,0x21,0x6E,0x1C,0x21,0x70,0x85,0x29,0x1C,0x21,0xE8,0x0D,
+0x41,0x10,0x0D,0x61,0x0C,0x0D,0x81,0x08,0x0D,0xA1,0x04,0x0D,0x21,0x14,0x89,0xA3,
+0xC2,0xE0,0x10,0x01,0x5C,0x64,0x06,0xEA,0xF7,0x06,0x3F,0x5D,0x85,0x00,0x5D,0x66,
+0x00,0x5D,0x47,0x00,0x56,0xF7,0x04,0x22,0xE0,0x34,0x88,0x8C,0x88,0xAB,0x88,0xCA,
+0xE7,0xFF,0xCC,0xCE,0xC2,0xE0,0x10,0x01,0xF3,0x17,0x0A,0x50,0x43,0x0A,0xC3,0x5F,
+0x18,0x00,0x9B,0x20,0x42,0xF8,0x64,0x8D,0x78,0xC3,0x40,0x10,0x01,0x5D,0x6B,0x00,
+0x5E,0xF7,0x00,0x8B,0x19,0xFF,0x5A,0x0C,0xB6,0xE4,0x00,0x00,0x3B,0x4F,0x77,0x10,
+0x8F,0x7A,0x0B,0x7B,0x02,0x8F,0x1B,0x4F,0x77,0x10,0x9E,0xE1,0x8F,0x7A,0x5E,0xF7,
+0x00,0x0B,0x7B,0x00,0x8F,0x3B,0xD6,0xEB,0xFF,0x38,0x27,0x21,0x14,0x27,0x01,0x08,
+0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x01,0x68,0x4F,0x39,0x40,0x9D,0x44,0x4D,0x4A,0x10,
+0x8D,0x57,0x0A,0xEA,0x06,0x43,0x19,0xC0,0x9B,0x4A,0xFF,0x18,0xFF,0x00,0x53,0x20,
+0x64,0x43,0x18,0xBB,0x0A,0xEA,0x04,0x43,0x18,0xD0,0x4E,0xF7,0x40,0x42,0xF7,0xC8,
+0x8E,0xF8,0x5E,0xE0,0x09,0x0E,0xED,0x00,0x48,0x61,0x01,0xE4,0x00,0x00,0x0D,0x98,
+0x60,0x0D,0xA1,0x06,0x0D,0x81,0x0A,0x0D,0x61,0x0E,0x0D,0x41,0x12,0x0D,0x21,0x16,
+0x1C,0x21,0x18,0x85,0x29,0xCA,0xE0,0x01,0x00,0xFC,0x21,0xFF,0x80,0x5C,0xE7,0x00,
+0x0D,0x41,0x78,0x0D,0x61,0x74,0x0D,0x81,0x70,0x0E,0x21,0x5C,0x0E,0x41,0x58,0x0E,
+0x61,0x54,0x0E,0x81,0x50,0x0E,0xA1,0x4C,0x0E,0xC1,0x48,0x0D,0x21,0x7C,0x0D,0xA1,
+0x6C,0x0D,0xC1,0x68,0x0D,0xE1,0x64,0x0E,0x01,0x60,0xCE,0x44,0x00,0x0A,0x42,0x52,
+0x1B,0x42,0x52,0xB8,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x0A,0x4C,0x11,0xD7,0x04,0x41,
+0x87,0x73,0x5F,0x0C,0x00,0xCC,0x84,0x0A,0x00,0x8C,0xB8,0x8C,0xD8,0xC2,0xA0,0x10,
+0x01,0xC2,0x20,0x10,0x01,0xC1,0x60,0x10,0x01,0xC3,0x00,0x10,0x01,0xFD,0x6B,0x0C,
+0xB6,0x42,0x64,0x18,0x5E,0x86,0x00,0x09,0xF7,0x0B,0x12,0x17,0x0C,0x5D,0x45,0x00,
+0xFE,0xB5,0x01,0x68,0xFE,0x31,0x03,0xCC,0x8A,0xCB,0xFF,0x18,0x07,0x38,0xE4,0x00,
+0x01,0x61,0x0F,0x01,0x04,0x88,0x95,0x50,0xA0,0x3C,0x1C,0x61,0x08,0xE4,0x00,0x26,
+0xC0,0x41,0xAA,0x65,0x1E,0xED,0x01,0x4E,0xF7,0x08,0x8E,0xF1,0x98,0x82,0x08,0x77,
+0x00,0x1C,0xA1,0x08,0x40,0x63,0x7B,0x40,0x63,0x80,0xE7,0xFF,0xF1,0x22,0x0F,0x01,
+0x06,0x5C,0x63,0x04,0xD5,0x4C,0x00,0x5E,0x1E,0xEE,0xFF,0xD5,0xB7,0x01,0x92,0xCB,
+0x20,0x03,0xE8,0x43,0x43,0x9B,0x4E,0xEA,0x10,0x43,0x63,0x93,0x9E,0xE2,0x43,0x7B,
+0xC8,0x8E,0xEB,0x0B,0x97,0x01,0x43,0x7C,0xDD,0x0F,0x77,0x01,0x43,0x3A,0xC8,0x4E,
+0xEA,0x10,0x8E,0xEB,0x0B,0x57,0x01,0x43,0x3A,0xCD,0x0F,0x37,0x01,0x4E,0xEA,0x08,
+0x1F,0x37,0x01,0x4F,0x59,0x08,0x8F,0x4B,0x0B,0x7A,0x00,0x27,0x7C,0x1A,0x0C,0x1A,
+0x01,0x4F,0x57,0x08,0x8F,0x56,0x0B,0x7A,0x00,0x27,0x7C,0x1A,0x0C,0x1A,0x01,0x4E,
+0xF7,0x08,0x8E,0xEB,0x4F,0x4A,0x10,0x0B,0x77,0x00,0x8F,0x58,0x4F,0x39,0x08,0x9D,
+0x41,0x8F,0x2B,0x5D,0x4A,0x00,0x0A,0xF9,0x00,0x8E,0xFB,0x0E,0xFA,0x00,0xD5,0x54,
+0xFA,0xA0,0x0E,0xC1,0x4A,0x0E,0xA1,0x4E,0x0E,0x81,0x52,0x0E,0x61,0x56,0x0E,0x41,
+0x5A,0x0E,0x21,0x5E,0x0E,0x01,0x62,0x0D,0xE1,0x66,0x0D,0xC1,0x6A,0x0D,0xA1,0x6E,
+0x0D,0x81,0x72,0x0D,0x61,0x76,0x0D,0x41,0x7A,0x0D,0x21,0x7E,0xFC,0x21,0x00,0x80,
+0x85,0x29,0xC2,0xE0,0x10,0x01,0x1C,0x21,0xB0,0xF0,0x97,0x01,0x52,0x0D,0x21,0x4C,
+0x98,0xA0,0x0D,0x41,0x48,0x0D,0xA1,0x3C,0x0D,0xC1,0x38,0x0D,0x61,0x44,0x0D,0x81,
+0x40,0x0D,0xE1,0x34,0x0E,0x01,0x30,0x0E,0x21,0x2C,0x0E,0x41,0x28,0x0E,0x61,0x24,
+0x0E,0x81,0x20,0x0E,0xA1,0x1C,0x0E,0xC1,0x18,0x0C,0x01,0x08,0x0C,0x01,0x0C,0x18,
+0x01,0x02,0x18,0x01,0x03,0x0C,0x01,0x10,0x0C,0x01,0x14,0xC1,0xA0,0x10,0x01,0xFD,
+0xAD,0x0C,0xB6,0x88,0x6D,0xE4,0x00,0x80,0xEC,0xC1,0xC0,0x10,0x01,0xFD,0x4E,0x0A,
+0x4C,0x12,0xEA,0x04,0x10,0x6A,0x01,0x98,0x81,0x40,0x63,0xBB,0xE4,0x00,0x79,0xFA,
+0x1C,0x61,0x02,0x1C,0x81,0x10,0x1C,0xA1,0x08,0x98,0xC4,0xE7,0xFF,0xF5,0x78,0xC2,
+0xE0,0x10,0x01,0xF3,0x97,0x04,0x34,0xC2,0xE0,0x10,0x01,0xEB,0xB7,0x0A,0xB5,0xC2,
+0xE0,0x10,0x01,0xEF,0x77,0x04,0x12,0xC2,0xE0,0x10,0x01,0x57,0xBD,0x20,0xEF,0xD7,
+0x04,0x32,0xC3,0x20,0x10,0x01,0x4F,0xBD,0x29,0x1E,0xE1,0x08,0xFF,0x39,0x01,0x88,
+0x9B,0x40,0xE4,0x00,0x00,0x63,0x0F,0x17,0x02,0x09,0x19,0xFC,0x0F,0x19,0x00,0x43,
+0x18,0x45,0x5F,0x1F,0xF9,0x4B,0x18,0x00,0x0F,0x17,0x00,0x23,0xA0,0x3C,0x23,0x60,
+0x30,0x43,0x18,0xF3,0x43,0x18,0xD8,0x0F,0x17,0x00,0x9F,0x41,0x9E,0xE4,0x5F,0x5A,
+0x00,0x9F,0x28,0xD7,0x5C,0xFE,0x9E,0xC2,0x80,0x10,0x01,0xFE,0xF4,0x01,0x2E,0x88,
+0x6D,0x10,0x97,0x24,0x98,0xA1,0xE4,0x00,0x7F,0xAA,0x12,0xEA,0x04,0x10,0x6A,0x01,
+0x98,0x81,0x40,0x63,0xBB,0x99,0x80,0xC2,0x60,0x10,0x01,0xC2,0xA0,0x10,0x01,0xE4,
+0x00,0x78,0xB4,0x89,0x6C,0xFD,0xF3,0x0B,0x94,0xFE,0xB5,0x08,0x76,0xE4,0x00,0x01,
+0x53,0xCE,0x4B,0x00,0x30,0x42,0xF2,0x7C,0x1C,0x61,0x04,0x12,0x37,0x04,0x12,0x17,
+0x05,0x11,0xD7,0x07,0x08,0x97,0x17,0x88,0xB1,0x88,0xD0,0x88,0xEE,0xE7,0xFF,0xF8,
+0xFE,0x20,0x61,0xA8,0x98,0xA0,0xFE,0xD4,0x01,0x2E,0x88,0x6D,0x10,0x96,0x24,0xE4,
+0x00,0x7E,0xF8,0x12,0xEA,0x04,0x10,0x6A,0x01,0x98,0x81,0x40,0x63,0xBB,0xE4,0x00,
+0x78,0x16,0x1F,0x01,0x18,0x4E,0xEE,0x10,0x8E,0xF8,0x88,0xD0,0x0C,0x97,0xF2,0x88,
+0xEE,0x0C,0x61,0x06,0x88,0xB1,0xE7,0xFF,0xFA,0x3E,0x98,0xA1,0x88,0x6D,0x10,0x96,
+0x24,0xE4,0x00,0x7E,0x94,0x12,0xEA,0x04,0x10,0x6A,0x01,0x98,0x81,0x40,0x63,0xBB,
+0xE4,0x00,0x77,0xB2,0x40,0x6F,0x94,0x88,0xB1,0x88,0x83,0x88,0xD0,0x1C,0x63,0x18,
+0x9C,0x8C,0x88,0xEE,0xE7,0xFF,0xBF,0x42,0x20,0x60,0x3A,0x9A,0xE1,0x4E,0xF7,0x5C,
+0x45,0x8C,0xBD,0x5D,0x8C,0x00,0x88,0x75,0x10,0x8A,0x00,0x98,0xA1,0x9D,0x61,0xE4,
+0x00,0x7D,0x38,0x5D,0x6B,0x00,0xF2,0xF3,0x0B,0x94,0xD6,0xEB,0xFA,0xBD,0x88,0x6C,
+0xE7,0xFF,0xC2,0xAE,0x0D,0x21,0x4E,0x0E,0xC1,0x1A,0x0E,0xA1,0x1E,0x0E,0x81,0x22,
+0x0E,0x61,0x26,0x0E,0x41,0x2A,0x0E,0x21,0x2E,0x0E,0x01,0x32,0x0D,0xE1,0x36,0x0D,
+0xC1,0x3A,0x0D,0xA1,0x3E,0x0D,0x81,0x42,0x0D,0x61,0x46,0x0D,0x41,0x4A,0x1C,0x21,
+0x50,0x85,0x29,0xFC,0x21,0xFE,0xF8,0x98,0xA0,0xED,0x41,0x01,0x00,0xED,0x61,0x00,
+0xFC,0xED,0x81,0x00,0xF8,0xED,0xE1,0x00,0xEC,0xEE,0x01,0x00,0xE8,0xEE,0x21,0x00,
+0xE4,0xEE,0x41,0x00,0xE0,0xEE,0x61,0x00,0xDC,0xEE,0x81,0x00,0xD8,0xED,0x21,0x01,
+0x04,0xED,0xA1,0x00,0xF4,0xED,0xC1,0x00,0xF0,0xEE,0xA1,0x00,0xD4,0xEE,0xC1,0x00,
+0xD0,0xC2,0x20,0x10,0x01,0xC2,0x80,0x10,0x01,0xFE,0x31,0x08,0x76,0xFD,0x74,0x0A,
+0x4C,0x88,0x71,0x10,0x8B,0x00,0xE4,0x00,0x7C,0x0A,0xC2,0xE0,0x10,0x01,0xEA,0xF7,
+0x07,0xB3,0xC6,0xF7,0x02,0x00,0xC1,0x80,0x10,0x01,0x5E,0xE0,0x01,0xC2,0x40,0x10,
+0x01,0x4A,0xE1,0x13,0xC1,0x40,0x10,0x01,0xC2,0x60,0x10,0x01,0xC1,0xE0,0x10,0x01,
+0x0E,0xE1,0x10,0x9A,0x00,0xFD,0x8C,0x0C,0xB6,0xFE,0x52,0x01,0x68,0xFD,0x4A,0x07,
+0x38,0xFE,0x73,0x0A,0x5C,0xFD,0xEF,0x0B,0x94,0xC2,0xE0,0x10,0x01,0x98,0xA0,0xF0,
+0x97,0x01,0x52,0x88,0x6C,0x0C,0x01,0x60,0x0C,0x01,0x64,0x18,0x01,0x5E,0x18,0x01,
+0x5F,0x0C,0x01,0x68,0x0C,0x01,0x6C,0xE4,0x00,0x7C,0x28,0x12,0xEB,0x04,0x10,0x6B,
+0x01,0x98,0x81,0x40,0x63,0xBB,0xE4,0x00,0x75,0x46,0x1C,0x61,0x5E,0x1C,0x81,0x68,
+0x1C,0xA1,0x60,0x98,0xC3,0xE7,0xFF,0xF0,0xC4,0xC2,0xE0,0x10,0x01,0xF3,0x57,0x04,
+0x34,0xC2,0xE0,0x10,0x01,0xEB,0x97,0x0A,0xB5,0xC2,0xE0,0x10,0x01,0xEF,0x77,0x04,
+0x12,0xC2,0xE0,0x10,0x01,0x57,0x9C,0x20,0xEF,0xB7,0x04,0x32,0x4F,0x9C,0x29,0x1E,
+0xE1,0x60,0x9B,0x20,0xE4,0x00,0x00,0x5D,0x0F,0xD7,0x02,0x4F,0x19,0x18,0x8F,0x12,
+0x0B,0x18,0x1C,0x43,0x1E,0xC5,0x5F,0x1F,0xF9,0x4B,0x18,0x00,0x0F,0x17,0x00,0x23,
+0x80,0x3C,0x23,0x60,0x30,0x43,0x18,0xEB,0x43,0x18,0xD8,0x0F,0x17,0x00,0x9F,0x21,
+0x9E,0xE4,0x5F,0x19,0x00,0xD7,0x58,0xFE,0x9D,0x0B,0x0B,0x0B,0x13,0x2B,0x04,0x0F,
+0x01,0x14,0x12,0xAB,0x0C,0x9A,0xC0,0xE4,0x00,0x01,0xA9,0xFE,0xE1,0x00,0xD0,0x8E,
+0xF6,0x12,0xF7,0x8E,0x22,0xE0,0x72,0xFF,0x61,0x00,0xD0,0x9A,0xE1,0x42,0xF7,0xB5,
+0x4E,0xF7,0x10,0x8E,0xFB,0x0F,0x17,0x92,0x4E,0xF6,0x10,0x8E,0xFB,0x0F,0x17,0x90,
+0x41,0xB6,0xCB,0x1F,0xD6,0x01,0x5D,0xCD,0x00,0x43,0xDE,0xCB,0xE4,0x00,0x01,0x2D,
+0x0F,0x21,0x04,0x0F,0x41,0x08,0x0F,0xC1,0x0C,0x88,0x92,0x50,0xA0,0x3C,0x1C,0x61,
+0x18,0xE4,0x00,0x1D,0xF8,0x0E,0xE1,0x16,0x43,0x0E,0x6D,0xC3,0x80,0x10,0x01,0x9F,
+0x01,0xFF,0x9C,0x03,0xCC,0x4F,0x18,0x08,0x8F,0x1C,0x98,0x81,0x08,0x78,0x00,0x1C,
+0xA1,0x18,0x40,0x63,0xBB,0x40,0x63,0xA8,0xE7,0xFF,0xE8,0x46,0xFF,0x81,0x00,0xD0,
+0x4F,0x76,0x10,0x8F,0x7C,0x53,0x80,0x64,0x4F,0x0E,0x10,0x5C,0x63,0x04,0x0F,0x7B,
+0x92,0x9F,0x02,0x43,0x63,0xDB,0x8F,0x0C,0x43,0x7B,0xE0,0x0B,0x98,0x01,0x5F,0x7B,
+0x04,0x43,0x9C,0xDD,0x0F,0x98,0x01,0x1E,0xEE,0x01,0x4F,0x8E,0x10,0x0F,0xC1,0x0E,
+0x43,0xBC,0x64,0x5D,0xD7,0x00,0x09,0x1D,0x01,0x8F,0x8A,0x43,0x68,0xDD,0x0F,0x41,
+0x0A,0x5F,0x7B,0x06,0x0F,0x21,0x06,0x0F,0x7D,0x01,0x0B,0x18,0x00,0x8F,0x78,0x0F,
+0x7C,0x00,0xD7,0xCE,0xFB,0x74,0x9E,0xC1,0x5E,0xD6,0x00,0xD7,0x56,0xF9,0x85,0xC2,
+0xE0,0x10,0x01,0x88,0x6C,0xF0,0x97,0x01,0x52,0x98,0xA1,0xE4,0x00,0x79,0x40,0x12,
+0xEB,0x04,0x10,0x6B,0x01,0x98,0x81,0x40,0x63,0xBB,0xE4,0x00,0x72,0x5E,0x13,0x6B,
+0x04,0x13,0x2B,0x01,0x9A,0xE0,0x43,0x39,0xDB,0xE4,0x00,0x00,0x4F,0x4F,0x17,0x10,
+0x43,0x58,0x9C,0x8F,0x0C,0x0B,0x18,0x01,0x0F,0x1A,0x01,0x4F,0x17,0x10,0x9E,0xE1,
+0x9F,0x02,0x5E,0xF7,0x00,0x43,0x58,0x9C,0x8F,0x0C,0x0B,0x18,0x01,0x0F,0x1A,0x01,
+0xD7,0x37,0xFE,0xEC,0xC3,0x20,0x10,0x01,0x12,0xAF,0x00,0xFF,0x39,0x0B,0x9A,0x9B,
+0xA0,0x8B,0x19,0x8B,0xCA,0xE4,0x00,0x01,0x3D,0x1D,0x38,0x02,0x12,0xF8,0xFE,0x12,
+0xD8,0xFF,0x11,0xB8,0x01,0x13,0x58,0x00,0x0D,0x09,0x02,0x21,0x04,0x5E,0x43,0x8D,
+0xDB,0x8F,0x9A,0x4F,0x9C,0x10,0x8F,0x8A,0x0F,0x9C,0x02,0x41,0xAD,0xDB,0xE4,0x00,
+0x00,0xCD,0x4D,0xDA,0x10,0x43,0x9A,0xDC,0x8D,0xCA,0x4F,0x9C,0x10,0x0D,0xCE,0x02,
+0x8F,0x8A,0x0F,0x9C,0x02,0x8F,0x8E,0xE7,0xFF,0xFF,0xC9,0x21,0x04,0x5A,0x41,0xD7,
+0x6C,0x4D,0xCE,0x10,0x8D,0xCA,0x0D,0xCE,0x02,0xD5,0xDC,0x01,0x94,0xE4,0x00,0x00,
+0x65,0x4D,0xD7,0x10,0x40,0x77,0xDC,0x8D,0xDE,0x4C,0x63,0x10,0x0D,0xCE,0x02,0x8C,
+0x7E,0x0C,0x63,0x02,0x8C,0x6E,0xD4,0x7C,0x00,0xC8,0x43,0x57,0x6C,0x4F,0x5A,0x10,
+0x8F,0x5E,0x0F,0x9A,0x02,0x8F,0x8E,0xE4,0x00,0x00,0x0D,0x8B,0x8E,0x8B,0x57,0x9E,
+0xE1,0x5E,0xF7,0x00,0xD6,0xF6,0xFD,0xB8,0x1B,0x58,0x00,0x9F,0xA1,0x1F,0x18,0x30,
+0x5F,0xBD,0x00,0xD7,0xB5,0xFB,0x36,0xC2,0xE0,0x10,0x01,0xF3,0x17,0x0A,0x50,0xC2,
+0xE0,0x10,0x01,0x1F,0x98,0xFF,0xF3,0x57,0x04,0x00,0x1F,0xB8,0xFD,0xC2,0xE0,0x10,
+0x01,0x1E,0xD8,0xFC,0x11,0xAF,0x00,0x5D,0x1C,0x00,0x1D,0xD8,0xFE,0xFE,0xF7,0x0B,
+0x99,0x9B,0x60,0x8A,0xBC,0x5F,0xBD,0x00,0x5E,0xD6,0x00,0x98,0x62,0x1C,0x98,0xFD,
+0xE4,0x00,0x00,0xEB,0x13,0x17,0x01,0xD7,0x1C,0x00,0x76,0x19,0x17,0x00,0x18,0x97,
+0xFF,0xE4,0x00,0x00,0xB9,0x23,0x00,0x36,0x18,0x77,0x00,0x18,0x17,0xFF,0xE4,0x00,
+0x00,0x9F,0x23,0x04,0x56,0x5F,0x40,0x29,0x9F,0x1F,0x4B,0xC2,0x1B,0x1B,0x17,0xFF,
+0x1B,0xD7,0x00,0xE4,0x00,0x00,0x75,0xD7,0x0E,0x00,0x8E,0x5F,0x40,0x29,0x1A,0xB7,
+0x00,0x4B,0xDD,0xB0,0xE4,0x00,0x00,0x4D,0x1F,0xD8,0x01,0x5F,0xDE,0x00,0x23,0x44,
+0x22,0x9F,0x02,0x5F,0xD8,0x00,0x1B,0xD7,0x00,0x13,0xD7,0x01,0x23,0x44,0x26,0x9F,
+0xDE,0xE4,0x00,0x00,0x0D,0x9F,0xDF,0x5F,0xDE,0x00,0x1B,0xD7,0xFF,0x9F,0x61,0x1E,
+0xF7,0x30,0x5F,0x7B,0x00,0xD7,0x6D,0xFC,0x7E,0xC2,0xE0,0x10,0x01,0xEA,0xF7,0x07,
+0xB3,0x56,0xF7,0x08,0xD2,0xE0,0x08,0x6A,0xC2,0xE0,0x10,0x01,0x9B,0x00,0xF3,0x57,
+0x0A,0x50,0x9B,0xA0,0xC2,0xE0,0x10,0x01,0x1C,0x9A,0xFE,0xEA,0xB7,0x01,0x4C,0x8B,
+0x78,0x8B,0x9D,0x98,0x60,0x9A,0xC1,0xE4,0x00,0x01,0xBF,0x12,0xF9,0x00,0xD2,0xE1,
+0x06,0x99,0xD4,0x97,0x06,0x78,0x1D,0x17,0xFF,0x1D,0xD7,0x01,0x1D,0x39,0x02,0x5D,
+0x08,0x00,0x5D,0xCE,0x00,0x0F,0xC9,0x02,0x23,0xC4,0xDE,0x13,0x79,0x01,0x43,0x7A,
+0xDB,0x5F,0x7B,0x00,0x8D,0xDB,0x8D,0x1B,0x8E,0xFB,0x4D,0xCE,0x10,0x4D,0x08,0x10,
+0x8D,0xCA,0x8D,0x0A,0x0F,0xAE,0x02,0x0F,0x88,0x02,0x4E,0xF7,0x10,0x5F,0xBC,0x15,
+0x8E,0xEA,0x4B,0x9D,0xE0,0x0F,0x77,0x02,0x5F,0x9C,0x06,0xE4,0x00,0x00,0xCD,0x23,
+0xC9,0xA2,0x13,0x79,0x01,0x43,0xBB,0xD3,0x5F,0xBD,0x00,0x43,0x8E,0xEC,0x4F,0x9C,
+0x10,0x8F,0x8A,0x43,0x76,0xDD,0x0F,0xDC,0x02,0x43,0x7A,0xDB,0x5F,0x7B,0x00,0x8D,
+0xDB,0x4D,0xCE,0x10,0x8D,0xCA,0x0F,0x8E,0x02,0x8F,0xDC,0x43,0x88,0xEC,0x4F,0x9C,
+0x10,0x8F,0x8A,0x8D,0x1B,0x0D,0xDC,0x02,0x8F,0xB7,0x4D,0x08,0x10,0x8E,0xFB,0x8D,
+0x0A,0x4F,0xBD,0x10,0x0F,0x88,0x02,0x8F,0xAA,0x8F,0x8E,0x4E,0xF7,0x10,0x5F,0xDC,
+0x15,0x8E,0xEA,0x4B,0x9E,0xE0,0x0F,0x7D,0x02,0x0E,0xF7,0x02,0x5F,0x9C,0x06,0x8F,
+0x77,0x8B,0xB5,0xE4,0x00,0x00,0x0F,0x23,0xC0,0x68,0xC3,0x60,0x7C,0xEC,0x20,0x00,
+0x4D,0x42,0xFB,0xE5,0xD7,0xB7,0x00,0x68,0x4E,0xF6,0xC4,0x44,0x63,0xBD,0x5C,0x63,
+0x00,0x9F,0x01,0x1F,0x39,0x30,0x5E,0xF8,0x00,0xD5,0xB7,0xF9,0x15,0xE7,0xFF,0xB8,
+0x74,0x1E,0xC1,0x70,0x10,0x8B,0x00,0x88,0x76,0x98,0xA0,0x99,0xC0,0xE4,0x00,0x72,
+0xBC,0x89,0xAE,0xC2,0xA0,0x10,0x01,0xE4,0x00,0x01,0x41,0xCC,0x6D,0x00,0x30,0xEB,
+0x75,0x06,0x3F,0x42,0xC3,0x7C,0x57,0x7B,0x02,0x13,0x56,0x04,0x13,0x36,0x05,0x13,
+0x16,0x07,0x23,0x61,0x54,0x88,0x9A,0x88,0xB9,0x88,0xD8,0x0F,0x01,0x0C,0x0F,0x21,
+0x04,0x0F,0x41,0x08,0x1C,0x61,0x5A,0x98,0xE1,0xE7,0xFF,0xBD,0x68,0x0F,0x01,0x0E,
+0x0F,0x21,0x06,0x0F,0x41,0x0A,0x20,0x61,0x14,0x1C,0x61,0x5C,0x88,0x9A,0x88,0xB9,
+0x88,0xD8,0x98,0xE1,0xE7,0xFF,0xBE,0xD8,0x20,0x60,0xCC,0x0B,0x21,0x5A,0x0B,0x01,
+0x5C,0xCF,0x39,0x00,0x07,0xCF,0x18,0x00,0x03,0x9A,0xEA,0x8F,0x19,0x43,0x18,0xB8,
+0x0F,0x16,0x17,0xE4,0x00,0x00,0x47,0x8C,0x6F,0x88,0x9A,0x1C,0x63,0x16,0x88,0xB9,
+0x88,0xD8,0x98,0xE1,0xE7,0xFF,0xBC,0xD2,0x20,0x60,0x3A,0x9A,0xE1,0x4E,0xF7,0x6C,
+0x45,0xCE,0xBD,0x5D,0xCE,0x00,0x1C,0x61,0x70,0x10,0x8B,0x00,0x98,0xA1,0x9D,0xA1,
+0xE4,0x00,0x71,0x76,0x5D,0xAD,0x00,0x12,0xEF,0x00,0xD6,0xED,0xFB,0x0D,0x88,0x6E,
+0xE7,0xFF,0xB6,0xEE,0x9E,0x01,0x0F,0x01,0x12,0x5E,0x10,0x00,0xD7,0x10,0xD6,0xED,
+0x88,0x71,0x10,0x8B,0x00,0x98,0xA1,0xE4,0x00,0x71,0x28,0xED,0x21,0x01,0x06,0xEE,
+0xC1,0x00,0xD2,0xEE,0xA1,0x00,0xD6,0xEE,0x81,0x00,0xDA,0xEE,0x61,0x00,0xDE,0xEE,
+0x41,0x00,0xE2,0xEE,0x21,0x00,0xE6,0xEE,0x01,0x00,0xEA,0xED,0xE1,0x00,0xEE,0xED,
+0xC1,0x00,0xF2,0xED,0xA1,0x00,0xF6,0xED,0x81,0x00,0xFA,0xED,0x61,0x00,0xFE,0xED,
+0x41,0x01,0x02,0xFC,0x21,0x01,0x08,0x85,0x29,0xC2,0xE0,0x10,0x01,0x9C,0x38,0xF3,
+0x97,0x04,0x34,0x0C,0x01,0x05,0x9A,0xE0,0x0C,0x01,0x07,0x8B,0x17,0xE4,0x00,0x00,
+0x61,0x4F,0x37,0x18,0x8F,0x24,0x0F,0x39,0x22,0x27,0x3C,0x88,0x1F,0xC1,0x04,0x0B,
+0x64,0x2D,0x0B,0x44,0x2F,0x4F,0xB7,0x08,0x5F,0x3A,0x15,0x8F,0xBE,0x4B,0x18,0x0A,
+0x43,0xDB,0xCB,0x43,0xDE,0xD0,0x8F,0x7E,0x0F,0x7D,0x01,0x9E,0xE1,0x5F,0x37,0x00,
+0xD7,0x99,0xFE,0x8D,0x23,0x04,0xB6,0x0A,0xE1,0x07,0x0B,0x01,0x05,0x5F,0x37,0x06,
+0x5F,0x58,0x06,0xD7,0x3A,0x00,0x30,0x8B,0x17,0x0A,0xE4,0x2D,0x5F,0x38,0x06,0x5F,
+0x18,0x04,0x5F,0x37,0x1D,0x4A,0xF8,0xB8,0x0E,0xE3,0x01,0x98,0x61,0xE4,0x00,0x00,
+0x19,0x0A,0xE4,0x2D,0x0E,0xE3,0x01,0x98,0x60,0x9C,0x28,0x85,0x29,0x1C,0x21,0xD0,
+0x0D,0x81,0x20,0x0D,0xC1,0x18,0x0D,0xE1,0x14,0x0E,0x01,0x10,0x0D,0x21,0x2C,0x0D,
+0x41,0x28,0x0D,0x61,0x24,0x0D,0xA1,0x1C,0x0E,0x21,0x0C,0x0E,0x41,0x08,0x0E,0x61,
+0x04,0xC2,0xE0,0x10,0x01,0xC1,0x80,0x10,0x01,0xC1,0xC0,0x10,0x01,0xC2,0x00,0x10,
+0x01,0xC1,0xE0,0x10,0x01,0xEF,0x17,0x04,0x16,0xFD,0x8C,0x0B,0x94,0xFD,0xCE,0x04,
+0x3C,0xFE,0x10,0x04,0x20,0xFD,0xEF,0x04,0x28,0xD3,0x02,0x04,0x4E,0xC3,0x00,0x10,
+0x01,0xEF,0x18,0x04,0x3A,0x23,0x00,0x24,0x9B,0x03,0xEF,0x17,0x04,0x14,0xC3,0x20,
+0x10,0x01,0xC3,0x40,0x10,0x01,0x13,0xAC,0x00,0xFF,0x39,0x0B,0xAA,0x8A,0xEE,0xFF,
+0x5A,0x0C,0x98,0x9B,0x00,0xE4,0x00,0x00,0x85,0x0B,0x9A,0xFE,0xC3,0x8F,0xFF,0xE0,
+0x20,0x00,0x35,0x0B,0x7A,0x00,0xC3,0x6F,0xFF,0xE4,0x20,0x00,0x41,0x0B,0x79,0x01,
+0x0F,0x77,0x01,0x0B,0x79,0x03,0xE4,0x00,0x00,0x0F,0x0F,0x97,0x01,0x0F,0x77,0x03,
+0x1F,0x39,0x30,0x4F,0x78,0x10,0x9E,0xE4,0x43,0x90,0xDC,0x9F,0x01,0x8F,0x6F,0x0C,
+0x1C,0x00,0x0C,0x1B,0x00,0x9F,0x48,0x5F,0x78,0x00,0xD7,0xBB,0xFD,0xFD,0xC2,0xE0,
+0x10,0x01,0x99,0x40,0xE9,0x77,0x04,0x1F,0x41,0xAB,0x5B,0x5E,0x2B,0x06,0xE4,0x00,
+0x04,0x67,0x23,0x0F,0xB2,0xC3,0x00,0x10,0x01,0xEF,0x18,0x04,0x3A,0x23,0x00,0x26,
+0x9B,0x02,0xEF,0x17,0x04,0x14,0xC3,0x20,0x10,0x01,0xC3,0x40,0x10,0x01,0x13,0xAC,
+0x00,0x1E,0xEE,0x02,0xFF,0x39,0x0B,0xAC,0xFF,0x5A,0x0C,0x98,0x9B,0x00,0xE4,0x00,
+0x00,0x83,0x4F,0x78,0x10,0x43,0x90,0xDC,0x0F,0x9C,0x02,0x23,0x84,0x4E,0x0B,0x9A,
+0xFE,0xC3,0x8F,0xFF,0xE0,0x20,0x00,0x1B,0x0B,0x99,0xFF,0x0F,0x97,0xFF,0x8F,0x6F,
+0x0F,0x7B,0x02,0x23,0x64,0x4E,0x0B,0x7A,0x00,0xC3,0x6F,0xFF,0xE0,0x20,0x00,0x1B,
+0x0B,0x79,0x01,0x0F,0x77,0x01,0x9F,0x01,0x9E,0xE4,0x1F,0x39,0x30,0x9F,0x48,0x5F,
+0x78,0x00,0xD7,0xBB,0xFE,0x05,0xE7,0xFF,0xFE,0xF1,0x4E,0xEA,0x10,0xCE,0x6A,0x00,
+0x30,0x42,0x4E,0xBC,0x8E,0x6C,0x0B,0x32,0x02,0x0B,0x53,0x18,0x43,0x19,0xD5,0x5F,
+0x98,0x06,0x4F,0x7C,0xFA,0x47,0x9B,0xE6,0x43,0x7C,0xDD,0xD5,0x7B,0x05,0x88,0x43,
+0x3A,0xCD,0x40,0x79,0xC3,0x8C,0x6D,0xE7,0xFF,0xAF,0xAA,0x5C,0x63,0x06,0x40,0x6B,
+0x1D,0x24,0x7C,0xCA,0xCE,0x6A,0x00,0x30,0x4E,0x4A,0x10,0x8E,0x6C,0x8E,0x4E,0x0A,
+0xF3,0x18,0x0B,0x12,0x02,0x40,0x77,0xC5,0x42,0xF8,0xBD,0x40,0x63,0xBB,0x8C,0x6D,
+0xE7,0xFF,0xAF,0x58,0x5C,0x63,0x06,0x40,0x6B,0x1D,0x24,0x7C,0xB2,0x98,0x60,0xE4,
+0x00,0x00,0x91,0x0A,0xF3,0x18,0x0B,0x12,0x02,0x40,0x77,0xC5,0x42,0xF8,0xBD,0x40,
+0x63,0xBB,0x8C,0x6D,0xE7,0xFF,0xAF,0x10,0x5C,0x63,0x06,0x40,0x6B,0x1D,0xD5,0x63,
+0x01,0x38,0xE7,0xFF,0xFF,0x65,0x0A,0xF3,0x18,0x0B,0x12,0x02,0x40,0x77,0xC5,0x42,
+0xF8,0xBD,0x40,0x63,0xBB,0x8C,0x6D,0xE7,0xFF,0xAE,0xCA,0x40,0x6B,0x1D,0x5C,0x63,
+0x06,0xE4,0x00,0x00,0x0D,0x88,0x71,0x4E,0xEA,0x10,0x8E,0xEE,0x0B,0x17,0x02,0xCE,
+0xEA,0x00,0x30,0x8E,0xEC,0x0B,0x37,0x18,0xD7,0x19,0x00,0x58,0x40,0x78,0x1D,0xE4,
+0x00,0x00,0x0D,0x8C,0x78,0x0C,0x77,0x19,0xE4,0x00,0x00,0x17,0x8E,0xEF,0x9B,0x01,
+0x0F,0x17,0x00,0x4E,0xEA,0x10,0xCE,0x6A,0x00,0x30,0x42,0x4E,0xBC,0x8E,0x6C,0x0B,
+0x32,0x00,0x0B,0x53,0x16,0x43,0x19,0xD5,0x5F,0x98,0x06,0x4F,0x7C,0xFA,0x47,0x9B,
+0xE6,0x43,0x7C,0xDD,0xD5,0x7B,0x05,0x88,0x43,0x3A,0xCD,0x40,0x79,0xC3,0x8C,0x6D,
+0xE7,0xFF,0xAD,0xF8,0x5C,0x63,0x06,0x40,0x6B,0x1D,0x24,0x7C,0xCA,0xCE,0x6A,0x00,
+0x30,0x4E,0x4A,0x10,0x8E,0x6C,0x8E,0x4E,0x0A,0xF3,0x16,0x0B,0x12,0x00,0x40,0x77,
+0xC5,0x42,0xF8,0xBD,0x40,0x63,0xBB,0x8C,0x6D,0xE7,0xFF,0xAD,0xA6,0x5C,0x63,0x06,
+0x40,0x6B,0x1D,0x24,0x7C,0xB2,0x98,0x60,0xE4,0x00,0x00,0x91,0x0A,0xF3,0x16,0x0B,
+0x12,0x00,0x40,0x77,0xC5,0x42,0xF8,0xBD,0x40,0x63,0xBB,0x8C,0x6D,0xE7,0xFF,0xAD,
+0x5E,0x5C,0x63,0x06,0x40,0x6B,0x1D,0xD5,0x63,0x01,0x38,0xE7,0xFF,0xFF,0x65,0x0A,
+0xF3,0x16,0x0B,0x12,0x00,0x40,0x77,0xC5,0x42,0xF8,0xBD,0x40,0x63,0xBB,0x8C,0x6D,
+0xE7,0xFF,0xAD,0x18,0x40,0x6B,0x1D,0x5C,0x63,0x06,0xE4,0x00,0x00,0x0D,0x88,0x71,
+0x4E,0xEA,0x10,0x8E,0xEE,0x0B,0x17,0x00,0xCE,0xEA,0x00,0x30,0x8E,0xEC,0x0B,0x37,
+0x16,0xD7,0x19,0x00,0x58,0x40,0x78,0x1D,0xE4,0x00,0x00,0x0D,0x8C,0x78,0x0C,0x77,
+0x17,0xE4,0x00,0x00,0x17,0x8E,0xF0,0x9B,0x01,0x0F,0x17,0x00,0x9D,0x41,0x5D,0x4A,
+0x00,0x12,0xEC,0x00,0xD6,0xEA,0xF2,0x35,0x0E,0x61,0x06,0x0E,0x41,0x0A,0x0E,0x21,
+0x0E,0x0E,0x01,0x12,0x0D,0xE1,0x16,0x0D,0xC1,0x1A,0x0D,0xA1,0x1E,0x0D,0x81,0x22,
+0x0D,0x61,0x26,0x0D,0x41,0x2A,0x0D,0x21,0x2E,0x1C,0x21,0x30,0x85,0x29,0x20,0x60,
+0x2E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x01,0x24,0x85,0x29,0x20,0x60,0x4E,0xC2,0xE0,
+0x10,0x01,0xEC,0x97,0x00,0xE8,0xC2,0xE0,0x10,0x01,0xEC,0xB7,0x01,0x20,0x85,0x29,
+0x20,0x60,0x5E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x04,0x48,0xC2,0xE0,0x10,0x01,0xEC,
+0xB7,0x04,0x4C,0xE4,0x00,0x00,0x5D,0x20,0x64,0x5E,0xC2,0xE0,0x10,0x01,0xEC,0x97,
+0x04,0x7C,0xC2,0xE0,0x10,0x01,0xEC,0xB7,0x04,0x70,0xE4,0x00,0x00,0x2F,0x20,0x68,
+0x4E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x04,0x68,0xC2,0xE0,0x10,0x01,0xEC,0xB7,0x04,
+0x44,0x85,0x29,0x20,0x68,0x2E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x04,0x64,0x85,0x29,
+0x5C,0x84,0x04,0x20,0x60,0x3E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x01,0x2B,0xE4,0x00,
+0x00,0x3D,0x20,0x64,0x3E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x01,0x0D,0xE4,0x00,0x00,
+0x1F,0x20,0x68,0x2E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x01,0x2D,0x85,0x29,0x5C,0x84,
+0x04,0x20,0x60,0x3E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x00,0xED,0xE4,0x00,0x00,0x3D,
+0x20,0x64,0x3E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x01,0x29,0xE4,0x00,0x00,0x1F,0x20,
+0x68,0x2E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x01,0x05,0x85,0x29,0x5C,0x84,0x04,0x20,
+0x68,0x2E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x01,0x07,0x85,0x29,0x1C,0x21,0xC8,0x0D,
+0x21,0x34,0x0D,0x41,0x30,0x0D,0x61,0x2C,0x0D,0x81,0x28,0x0D,0xA1,0x24,0x0D,0xC1,
+0x20,0x0D,0xE1,0x1C,0x0E,0x01,0x18,0x0E,0x21,0x14,0x0E,0x41,0x10,0x0E,0x61,0x0C,
+0x0E,0x81,0x08,0x0E,0xA1,0x04,0x0E,0xC1,0x00,0x20,0x65,0x70,0x20,0x60,0x4C,0xD0,
+0x62,0x04,0x42,0x99,0xC0,0x89,0xEE,0xD0,0x63,0x06,0x66,0xE4,0x00,0x01,0x71,0xC2,
+0xE0,0x10,0x01,0xEE,0xD7,0x00,0xEA,0xC2,0xE0,0x10,0x01,0xEE,0xB7,0x01,0x22,0xC2,
+0xE0,0x10,0x01,0xEE,0x97,0x04,0x4A,0xC2,0xE0,0x10,0x01,0xEE,0x77,0x04,0x4E,0xC2,
+0xE0,0x10,0x01,0xE9,0xF7,0x01,0x2B,0xC2,0xE0,0x10,0x01,0x9A,0x00,0xE9,0xD7,0x00,
+0xED,0x99,0xA0,0xC2,0xE0,0x10,0x01,0x9A,0x21,0xED,0x77,0x01,0x26,0x9A,0x45,0x89,
+0x90,0xE4,0x00,0x00,0xD9,0xC2,0xE0,0x10,0x01,0xEE,0x97,0x04,0x7E,0xC2,0xE0,0x10,
+0x01,0xEE,0x77,0x04,0x72,0xC2,0xE0,0x10,0x01,0x99,0xA0,0xE9,0xF7,0x01,0x0D,0x9A,
+0x00,0xC2,0xE0,0x10,0x01,0x8A,0x2D,0xE9,0xD7,0x01,0x29,0x9A,0x40,0x99,0x61,0x89,
+0x90,0x9A,0xA0,0xE4,0x00,0x00,0x71,0xC2,0xE0,0x10,0x01,0xEE,0x97,0x04,0x6A,0xC2,
+0xE0,0x10,0x01,0xEE,0x17,0x04,0x66,0xC2,0xE0,0x10,0x01,0xE9,0xF7,0x01,0x2D,0xC2,
+0xE0,0x10,0x01,0x99,0x81,0xE9,0xD7,0x01,0x05,0x9A,0x21,0xC2,0xE0,0x10,0x01,0x9A,
+0x40,0xE9,0xB7,0x01,0x07,0x99,0x61,0x9A,0x60,0x8A,0xAC,0x9A,0xC1,0x99,0x41,0xE4,
+0x00,0x00,0x55,0xC2,0xE0,0x10,0x01,0xE9,0xF7,0x01,0x2B,0xC2,0xE0,0x10,0x01,0xE9,
+0xD7,0x00,0xED,0x99,0xA0,0x9A,0x40,0x9A,0x00,0x9A,0x80,0x9A,0xA0,0x8A,0x2D,0x89,
+0x72,0x8A,0x70,0x89,0x94,0x8A,0xD5,0x99,0x40,0x88,0x6A,0xE4,0x00,0xC3,0xCC,0x88,
+0x6A,0xE4,0x00,0xC4,0x4E,0x88,0x76,0xE4,0x00,0xD3,0xA8,0x88,0x75,0xE4,0x00,0xD4,
+0x02,0x88,0x74,0xE4,0x00,0xC5,0xAE,0x88,0x73,0xE4,0x00,0xC5,0xFA,0x88,0x72,0xE4,
+0x00,0xC4,0xFC,0x88,0x71,0xE4,0x00,0xC5,0x28,0x88,0x6A,0xE4,0x00,0xD5,0x24,0x88,
+0x70,0xE4,0x00,0xD5,0x7E,0x98,0x60,0xE4,0x00,0xD5,0xCC,0x98,0x60,0xE4,0x00,0xD6,
+0x1A,0x98,0x60,0xE4,0x00,0xD6,0x68,0x98,0x60,0xE4,0x00,0xD6,0xB6,0x88,0x6F,0xE4,
+0x00,0xC5,0xF4,0x88,0x6E,0xE4,0x00,0xC6,0x22,0x88,0x6D,0xE4,0x00,0xC6,0x56,0x88,
+0x6C,0xE4,0x00,0xC6,0x70,0x88,0x6B,0x0E,0xC1,0x02,0x0E,0xA1,0x06,0x0E,0x81,0x0A,
+0x0E,0x61,0x0E,0x0E,0x41,0x12,0x0E,0x21,0x16,0x0E,0x01,0x1A,0x0D,0xE1,0x1E,0x0D,
+0xC1,0x22,0x0D,0xA1,0x26,0x0D,0x81,0x2A,0x0D,0x61,0x2E,0x0D,0x41,0x32,0x0D,0x21,
+0x36,0x1C,0x21,0x38,0xE4,0x00,0xC3,0xB9,0xC2,0xE0,0x10,0x01,0xF0,0x77,0x04,0x60,
+0x85,0x29,0xC2,0xE0,0x10,0x01,0xF8,0x77,0x04,0x60,0x85,0x29,0xC2,0xE0,0x10,0x01,
+0xF3,0x17,0x04,0x60,0x9F,0x01,0xFB,0x17,0x04,0x60,0x85,0x29,0xC2,0xE0,0x10,0x01,
+0xF0,0x77,0x04,0x80,0x85,0x29,0xC2,0xE0,0x10,0x01,0xF8,0x77,0x04,0x80,0x85,0x29,
+0xC2,0xE0,0x10,0x01,0xF3,0x17,0x04,0x80,0x9F,0x01,0xFB,0x17,0x04,0x80,0x85,0x29,
+0xC2,0xE0,0x10,0x01,0xEC,0x77,0x01,0x00,0x85,0x29,0xC3,0x40,0x10,0x01,0xFF,0x5A,
+0x00,0xF0,0x0C,0x1A,0x00,0x9A,0xE1,0xC3,0x20,0x10,0x01,0xFF,0x39,0x01,0x10,0x0E,
+0xF9,0x00,0xC3,0x00,0x10,0x01,0xFF,0x18,0x04,0x50,0x0C,0x18,0x00,0x0C,0x1A,0x04,
+0x0E,0xF9,0x04,0x0C,0x18,0x04,0x0C,0x1A,0x08,0x0E,0xF9,0x08,0x0C,0x18,0x08,0x0C,
+0x1A,0x0C,0x0E,0xF9,0x0C,0x0C,0x18,0x0C,0xC3,0x00,0x10,0x01,0xEE,0xF8,0x01,0x08,
+0x85,0x29,0x9C,0x38,0x0D,0x41,0x04,0xC2,0xE0,0x10,0x01,0xC3,0x00,0x10,0x01,0x5C,
+0xA5,0x00,0x5C,0xC6,0x00,0xF3,0x37,0x04,0x78,0xFF,0x18,0x01,0x08,0xD7,0x25,0x00,
+0x6A,0xF8,0xB7,0x04,0x78,0x9A,0xE1,0x0E,0xF8,0x00,0xC3,0x80,0x10,0x01,0xC2,0xE0,
+0x10,0x01,0x0F,0x38,0x02,0xFF,0x9C,0x01,0x10,0xFE,0xF7,0x00,0xF0,0x23,0x24,0x9A,
+0x0B,0xA3,0x00,0x4F,0x46,0x18,0x43,0x77,0xD4,0x0F,0xBB,0x00,0x0B,0xA4,0x00,0x0F,
+0xBB,0x04,0x8F,0x5C,0x0F,0x3A,0x00,0x0F,0x3A,0x04,0x40,0xA5,0x35,0x20,0xA4,0x1A,
+0x0C,0x18,0x00,0x4F,0x46,0x18,0x8F,0x57,0x0F,0x3A,0x02,0x0F,0x5A,0x02,0x0B,0x03,
+0x00,0x8B,0x77,0x43,0x39,0xC5,0x27,0x3C,0x2A,0x43,0x58,0xD5,0xE4,0x00,0x00,0x0F,
+0x43,0x5A,0xC5,0x4F,0x26,0x18,0x8F,0x3B,0x0F,0x79,0x02,0x0F,0x39,0x02,0x43,0x7B,
+0xC5,0x27,0x7C,0x2A,0x43,0x18,0xCD,0xE4,0x00,0x00,0x0F,0x43,0x19,0xC5,0x43,0x7A,
+0xC3,0x4F,0x46,0x18,0x8F,0x57,0x0F,0x3A,0x06,0x0F,0x5A,0x06,0x0B,0x04,0x00,0x8B,
+0xB7,0x43,0x39,0xC5,0x27,0x3C,0x2A,0x43,0x58,0xD5,0xE4,0x00,0x00,0x0F,0x43,0x5A,
+0xC5,0x4F,0x26,0x18,0x8F,0x3D,0x0F,0xB9,0x06,0x0F,0x39,0x06,0x43,0xBD,0xC5,0x27,
+0xBC,0x2A,0x43,0x18,0xCD,0xE4,0x00,0x00,0x0F,0x43,0x19,0xC5,0x43,0x1A,0xC3,0x9B,
+0x23,0x8F,0x1B,0x9B,0x41,0xE4,0x00,0x00,0x11,0x8F,0x59,0x9F,0x22,0xD7,0x58,0xFF,
+0xE1,0x4F,0x19,0x09,0xC3,0x20,0x10,0x01,0x9F,0x1F,0x53,0x40,0x1E,0x5F,0x18,0x06,
+0xEF,0x19,0x04,0x74,0xC3,0x20,0x10,0x01,0x43,0x18,0xD1,0xEF,0x39,0x01,0x02,0x43,
+0x18,0xC3,0x43,0x39,0xC5,0xC3,0x00,0x10,0x01,0x5F,0x23,0x11,0x20,0x00,0x1B,0x53,
+0x20,0x19,0xEF,0x38,0x04,0x6C,0xC3,0xA0,0x10,0x01,0xEC,0xB8,0x04,0x6E,0x4C,0xC6,
+0x08,0x9B,0x00,0xFF,0xBD,0x04,0x50,0xCB,0x40,0x10,0x00,0x43,0x26,0xC4,0x4F,0x39,
+0x10,0x43,0x7C,0xCC,0xC9,0x40,0xA0,0x00,0x0D,0x1B,0x02,0x0F,0xDB,0x02,0x43,0x68,
+0x53,0xCF,0xDE,0x00,0x0A,0x8F,0xC5,0x43,0xDB,0xF0,0x43,0x7D,0xCC,0x0F,0xDB,0x00,
+0x5F,0xD8,0x00,0x23,0xC0,0x92,0x43,0xD7,0xCC,0x0D,0x1E,0x02,0x0F,0x7B,0x02,0x0F,
+0x3E,0x02,0x0B,0xC3,0x00,0x43,0x3E,0xCD,0x43,0x3B,0xCB,0x43,0x39,0xD0,0x8F,0x28,
+0x0F,0x23,0x01,0xE4,0x00,0x00,0x43,0x43,0xD7,0xCC,0x0D,0x1E,0x02,0x0F,0x7B,0x02,
+0x0F,0x3E,0x02,0x0B,0xC4,0x00,0x43,0x3E,0xCD,0x43,0x3B,0xCB,0x43,0x39,0xD0,0x8F,
+0x28,0x0F,0x24,0x01,0x43,0x66,0xC4,0x4F,0x7B,0x10,0x43,0xD7,0xDC,0x0F,0x3E,0x00,
+0x43,0x3C,0xDC,0x8F,0x7D,0x0F,0xD9,0x02,0x0D,0x1B,0x02,0x0F,0x79,0x02,0x43,0x68,
+0xDB,0x43,0x7B,0xD0,0x43,0x7E,0xDD,0x0F,0x79,0x00,0x9F,0x01,0xD3,0x02,0xFB,0x7E,
+0x0D,0x41,0x06,0x9C,0x28,0x85,0x29,0x9C,0x30,0x5C,0x63,0x00,0x0D,0x41,0x08,0x0D,
+0x61,0x04,0x4C,0x63,0x08,0xC2,0xF8,0x00,0x21,0x0D,0x21,0x0C,0xFE,0xF7,0xB7,0x54,
+0x99,0x40,0x8E,0xE3,0x09,0x77,0x01,0x88,0x6A,0x88,0x8B,0x9D,0x41,0xE4,0x00,0xC2,
+0x54,0x5D,0x4A,0x00,0xD1,0x44,0xFF,0x9E,0x0D,0x61,0x06,0x0D,0x41,0x0A,0x0D,0x21,
+0x0E,0x1C,0x21,0x10,0x85,0x29,0xC2,0xE0,0x10,0x01,0xEC,0x77,0x04,0x83,0xC2,0xE0,
+0x10,0x01,0xF8,0x17,0x04,0x88,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x04,0x81,0xC2,0xE0,
+0x10,0x01,0xF8,0x17,0x04,0x84,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x04,0x8B,0xC2,0xE0,
+0x10,0x01,0xEC,0x17,0x04,0x87,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x04,0x8C,0x85,0x29,
+0xC2,0xE0,0x10,0x01,0xEC,0x77,0x04,0x83,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x04,0x81,
+0xC2,0xE0,0x10,0x01,0xF0,0x77,0x04,0x88,0xC2,0xE0,0x10,0x01,0xF8,0x77,0x04,0x84,
+0xC2,0xE0,0x10,0x01,0xEC,0x17,0x04,0x8B,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x04,0x87,
+0xC2,0xE0,0x10,0x01,0xEC,0x17,0x04,0x8C,0x24,0x6C,0x1F,0xE7,0xFF,0xFE,0x99,0x85,
+0x29,0xC2,0xE0,0x10,0x01,0xC3,0x00,0x10,0x01,0x5C,0x63,0x04,0xEC,0x77,0x04,0x87,
+0xC2,0xE0,0x10,0x01,0xEC,0x17,0x04,0x8C,0xF3,0x78,0x04,0x81,0xC3,0x40,0x10,0x01,
+0xC3,0x20,0x10,0x01,0xC3,0x00,0x10,0x01,0xFF,0x5A,0x04,0x88,0xFF,0x39,0x04,0x84,
+0x23,0x60,0x2C,0xEB,0x78,0x04,0x8B,0xD7,0x63,0x00,0xA1,0x13,0x5A,0x00,0xEC,0x78,
+0x04,0x8B,0x1B,0x59,0x00,0x9B,0x01,0xEF,0x17,0x04,0x8C,0x85,0x29,0xC2,0xE0,0x10,
+0x01,0xEB,0x17,0x04,0x87,0xC2,0xE0,0x10,0x01,0xEA,0xF7,0x04,0x83,0x5E,0xF8,0x1F,
+0x48,0x61,0x01,0x85,0x29,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x04,0x81,0x5E,0xE0,0x5B,
+0x48,0x61,0x01,0x85,0x29,0xC2,0xE0,0x10,0x01,0xF3,0x17,0x04,0x81,0x27,0x08,0x7B,
+0x9F,0x01,0xFB,0x17,0x04,0x81,0xC2,0xE0,0x10,0x01,0xF0,0x77,0x04,0x88,0x9C,0x61,
+0x54,0x63,0x03,0xF8,0x77,0x04,0x88,0xE7,0xFF,0xFD,0x61,0x85,0x29,0x8B,0x03,0x56,
+0xE3,0x03,0x22,0xE0,0x98,0x9B,0x04,0x42,0xF8,0xBD,0x5F,0x44,0x00,0x5E,0xE5,0x17,
+0x4B,0x37,0x28,0x9A,0xE0,0xE4,0x00,0x00,0x13,0x1B,0x58,0x00,0x9E,0xE1,0x43,0x03,
+0xBC,0xD6,0xF9,0xFF,0xC6,0x40,0xA5,0xBD,0x4E,0xE4,0x80,0x4F,0x64,0xC0,0x47,0x7B,
+0xBD,0x4E,0xE4,0x40,0x47,0x7B,0x25,0x4F,0x45,0x11,0x47,0x7B,0xBD,0x9A,0xE0,0xE4,
+0x00,0x00,0x17,0x8F,0x38,0x9E,0xE1,0x0F,0x79,0x00,0x4F,0x37,0x10,0xD6,0xFA,0xFF,
+0xB6,0x8F,0x19,0x9A,0xE0,0x54,0xA5,0x03,0x5C,0x84,0x00,0xE4,0x00,0x00,0x19,0x43,
+0x37,0xC4,0x9E,0xE1,0x18,0x99,0x00,0xD4,0xB7,0xFF,0xC5,0x85,0x29,0x46,0xE4,0x1D,
+0x56,0xF7,0x03,0x22,0xE0,0x82,0x9A,0xFC,0x47,0x45,0xBC,0x9A,0xE0,0xE4,0x00,0x00,
+0x51,0x43,0x03,0xBC,0x43,0x24,0xBC,0x9E,0xE1,0x13,0x39,0x00,0x1B,0x38,0x00,0xE4,
+0x00,0x00,0x0D,0x9A,0xE0,0xD6,0xE5,0xFF,0x66,0xE4,0x00,0x00,0x63,0x0F,0x39,0x02,
+0x9E,0xE4,0x0F,0x38,0x00,0x43,0x03,0xBC,0x43,0x24,0xBC,0xD6,0xFA,0xFF,0x96,0x9A,
+0xE0,0x54,0xA5,0x03,0xE4,0x00,0x00,0x25,0x43,0x57,0xC4,0x43,0x77,0xCC,0x9E,0xE1,
+0x13,0x7B,0x00,0x1B,0x7A,0x00,0xD4,0xB7,0xFF,0x95,0x85,0x29,0x1C,0x21,0xE0,0x0D,
+0x21,0x1C,0x0D,0x41,0x18,0x0D,0x61,0x14,0x0D,0x81,0x10,0x0D,0xA1,0x0C,0x0D,0xC1,
+0x08,0x0D,0xE1,0x04,0x0E,0x01,0x00,0xE4,0x00,0x65,0xEC,0xC1,0x60,0x10,0x01,0xC0,
+0x60,0x00,0x21,0xFD,0x4B,0x00,0xBC,0xFC,0x63,0xB1,0x68,0xC0,0x80,0x10,0x01,0xC0,
+0xA0,0x10,0x01,0xFC,0x84,0x00,0x00,0xFC,0xA5,0x01,0xB0,0x40,0xA5,0x25,0xE4,0x00,
+0x60,0xBC,0x0C,0x0A,0x01,0x0C,0x0A,0x03,0x0C,0x0A,0x05,0x0C,0x0A,0x08,0xC2,0xE0,
+0x10,0x01,0xEC,0x17,0x00,0xAB,0x0C,0x0A,0x0C,0x9A,0xE9,0xC1,0xA0,0x10,0x01,0x0E,
+0xEA,0x11,0xEC,0x0D,0x04,0x94,0x50,0x60,0x26,0xE4,0x00,0x1F,0xB8,0xC8,0x80,0xE1,
+0x00,0x98,0x60,0xE4,0x00,0x26,0xB6,0x98,0x63,0xE4,0x00,0x25,0xD2,0xE4,0x00,0x03,
+0x5C,0xC2,0xE0,0x10,0x01,0x9B,0x3C,0xF3,0x17,0x0C,0x64,0x47,0x18,0xCC,0xFC,0x60,
+0x0B,0xB8,0xFB,0x17,0x0C,0x64,0x04,0x80,0x5B,0xC8,0x84,0x8D,0x80,0xE4,0x00,0x26,
+0x06,0x98,0x61,0xC1,0x80,0x10,0x01,0xE4,0x00,0x25,0xFA,0x99,0xC1,0xC1,0x60,0x10,
+0x01,0xC1,0xE0,0x10,0x01,0xC2,0x00,0x10,0x01,0xE4,0x00,0x25,0xC6,0x0E,0xEA,0x0E,
+0x22,0xE0,0x2C,0xD2,0xE1,0x0A,0x6E,0xE4,0x00,0x00,0xC5,0xE4,0x00,0x5F,0xAA,0xE4,
+0x00,0x25,0xDA,0x0C,0x6A,0x13,0xE4,0x00,0x25,0xCC,0x0C,0x6A,0x17,0xE4,0x00,0x25,
+0xBE,0x0C,0x6A,0x1B,0xE4,0x00,0x25,0xB0,0x0C,0x6A,0x19,0xEA,0xEC,0x04,0x93,0xC6,
+0xF7,0xFF,0xDF,0xEE,0xEC,0x04,0x93,0xEA,0xEC,0x04,0x93,0xC6,0xF7,0xFF,0x7F,0xEE,
+0xEC,0x04,0x93,0x0D,0xCA,0x0C,0xEA,0xEB,0x06,0x45,0x52,0xF7,0x80,0xEC,0x0D,0x04,
+0x94,0xEE,0xEB,0x06,0x45,0x98,0x61,0xE4,0x00,0x1A,0x34,0x98,0x60,0xE4,0x00,0x2C,
+0xB4,0xE4,0x00,0x27,0x14,0xE4,0x00,0x01,0xD7,0xEE,0xED,0x04,0x96,0x22,0xE0,0x2C,
+0xD2,0xE1,0x07,0x06,0xE4,0x00,0x00,0x9B,0x98,0x61,0xE4,0x00,0x1A,0x6C,0xD0,0x61,
+0x06,0x96,0xE4,0x00,0x1C,0xC2,0x20,0x64,0xAA,0xE4,0x00,0x1C,0xA0,0xEA,0xEB,0x06,
+0x45,0xFF,0x00,0xFF,0x7F,0x46,0xF7,0xC4,0xEC,0x0F,0x0D,0xB0,0xEE,0xEB,0x06,0x45,
+0xED,0xCD,0x04,0x94,0xE4,0x00,0x67,0x56,0xE4,0x00,0x66,0xF6,0xE4,0x00,0x01,0x49,
+0xE4,0x00,0x1C,0xA2,0x20,0x67,0x54,0x98,0x61,0xE4,0x00,0x1C,0x02,0xE4,0x00,0x01,
+0x27,0x0A,0xEA,0x01,0xC6,0xF7,0x01,0x00,0xD2,0xE0,0x04,0x42,0xE4,0x00,0x24,0x60,
+0x0A,0xEA,0x13,0x0B,0x0A,0x11,0x40,0x63,0xBD,0x5E,0xE3,0x04,0xD7,0x17,0x03,0xA5,
+0xE4,0x00,0x24,0x38,0x0C,0x6A,0x13,0x0A,0xEA,0x01,0xC6,0xF7,0xFE,0xFF,0x0E,0xEA,
+0x01,0xE4,0x00,0x61,0x08,0xE4,0x00,0x67,0x14,0xE4,0x00,0x66,0x54,0xEE,0xEF,0x0D,
+0xB2,0xEE,0xF0,0x07,0xA0,0xE4,0x00,0x62,0x00,0x98,0x61,0xE4,0x00,0xA2,0xF8,0xE4,
+0x00,0x62,0x84,0x98,0x61,0xE4,0x00,0x62,0xC4,0xE4,0x00,0x63,0xE8,0xE4,0x00,0x99,
+0x1A,0xE4,0x00,0x89,0x12,0xEA,0xEB,0x06,0x45,0x56,0xF7,0x80,0x22,0xE0,0x90,0x0A,
+0xEA,0x01,0xC6,0xF7,0x01,0x00,0x22,0xE3,0xE4,0x0A,0xEA,0x01,0xC6,0xF7,0xFE,0xFF,
+0x0E,0xEA,0x01,0x0D,0xCA,0x0C,0xEC,0x0D,0x04,0x94,0x98,0x61,0xE4,0x00,0x18,0x4A,
+0x0E,0xEA,0x0A,0xFC,0x60,0x1E,0x7F,0x9E,0xE1,0x0E,0xEA,0x08,0x0C,0x8A,0x0A,0xE4,
+0x00,0x24,0x8E,0xE4,0x00,0x23,0x5E,0xE7,0xFF,0xFD,0x25,0xE4,0x00,0xBA,0xE9,0x9C,
+0x38,0x0D,0x21,0x04,0x0D,0x41,0x00,0xE4,0x00,0xBC,0x44,0x98,0x6B,0xE4,0x00,0xAC,
+0xBE,0x98,0x60,0xFC,0x80,0x32,0x0B,0xE4,0x00,0xAF,0x02,0x98,0x61,0xFC,0x80,0x32,
+0x0B,0xE4,0x00,0xAE,0xEE,0x98,0x60,0x50,0x80,0x14,0xE4,0x00,0xB3,0xE8,0x98,0x60,
+0x98,0x8C,0xE4,0x00,0xB3,0x0A,0x98,0x61,0x50,0x80,0x14,0xE4,0x00,0xB3,0xC6,0x98,
+0x61,0x98,0x8C,0x99,0x40,0xE4,0x00,0xB2,0xE4,0x88,0x6A,0x98,0x82,0x9D,0x41,0xE4,
+0x00,0xB9,0x50,0x5D,0x4A,0x00,0xD1,0x44,0xFF,0x9E,0x98,0x60,0x05,0x40,0xFF,0xC9,
+0x4A,0xFF,0xFF,0x88,0x8A,0xE4,0x00,0xB1,0x3E,0x88,0x8A,0x98,0x60,0xE4,0x00,0xAE,
+0xC6,0x88,0x8A,0x0D,0x21,0x06,0x0D,0x41,0x02,0x98,0x60,0x9C,0x28,0xE4,0x00,0xAF,
+0xA7,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x04,0xBB,0x1C,0x21,0xB0,0x0E,0xE1,0x10,0xC2,
+0xE0,0x10,0x01,0xEA,0xF7,0x04,0x98,0x0D,0x41,0x4C,0x0D,0x61,0x48,0x0D,0x81,0x44,
+0x0D,0xE1,0x38,0x0E,0x01,0x34,0x0E,0x21,0x30,0x0E,0x41,0x2C,0x0E,0x61,0x28,0x0E,
+0x81,0x24,0x0D,0xA1,0x40,0x0D,0xC1,0x3C,0x0E,0xA1,0x20,0x0E,0xC1,0x1C,0x0E,0xE1,
+0x0C,0xC2,0x60,0x10,0x01,0xC2,0x40,0x10,0x01,0xFE,0x73,0x04,0xB8,0xFE,0x52,0x04,
+0xA0,0xC2,0x20,0x10,0x01,0xC2,0x00,0x10,0x01,0xFE,0x31,0x04,0xA4,0xFE,0x10,0x04,
+0xA8,0xC1,0xE0,0x10,0x01,0xC1,0x8F,0xFF,0xE1,0xFD,0xEF,0x04,0xB4,0x9B,0x80,0xC2,
+0x98,0x00,0x21,0xC0,0xD8,0x00,0x21,0x13,0x53,0x00,0x0E,0xF2,0x02,0x0D,0x51,0x02,
+0x0F,0xB0,0x02,0x0F,0x6F,0x02,0x99,0x60,0xC9,0x8C,0xFF,0xFF,0x88,0xFC,0x53,0x20,
+0xFF,0xFE,0x94,0xB7,0x78,0xFC,0xC6,0xB8,0xC8,0xE4,0x00,0x01,0xC5,0x41,0x14,0xC4,
+0x9F,0x01,0x11,0x08,0x00,0x8D,0xA8,0x5D,0xAD,0x00,0xE4,0x00,0x00,0x11,0x9B,0x00,
+0x89,0xB8,0x5D,0x18,0x00,0xD7,0xC8,0xFF,0x45,0xC3,0x18,0x00,0x21,0xFF,0x18,0xB7,
+0x78,0x8F,0x0B,0x99,0x00,0x12,0xB8,0x00,0xCF,0x0D,0x00,0x0A,0x1E,0xD5,0xFF,0x8F,
+0x06,0x0E,0xC1,0x08,0x0F,0x01,0x14,0xE4,0x00,0x01,0x37,0x0F,0x01,0x16,0xCD,0xE8,
+0x00,0x0A,0x8D,0xF8,0x0A,0xCF,0x00,0x0E,0xC1,0x04,0x0F,0x01,0x0E,0x0E,0xC1,0x0A,
+0xD5,0x16,0x00,0x3A,0x0B,0x0F,0x0A,0x0D,0xE1,0x06,0xD5,0xE4,0x03,0xB4,0xD4,0x98,
+0x03,0x94,0x8D,0xCD,0x5D,0xCE,0x00,0xCF,0x0E,0x00,0x0A,0x8F,0x06,0x09,0xF8,0x06,
+0x0B,0x18,0x08,0x4F,0x18,0x50,0x41,0xEF,0x23,0x8D,0xF8,0xFD,0xEF,0x02,0x00,0x4D,
+0xEF,0x52,0x5D,0xEF,0x06,0x41,0xEF,0x7B,0x43,0x03,0x7D,0x4E,0xD8,0xFA,0x47,0x16,
+0xC6,0x43,0x18,0xB5,0xD7,0x0C,0x01,0x4C,0xC3,0x20,0x1F,0xE4,0x20,0x00,0x2D,0x89,
+0x5D,0x89,0x97,0x8B,0x3A,0x88,0xFC,0x8B,0xAA,0x8A,0xEC,0x8B,0x59,0x8B,0x87,0x8B,
+0x78,0x89,0x4F,0x89,0x98,0x88,0xEE,0x8B,0x3E,0xE4,0x00,0x00,0x2F,0xC3,0x40,0x1F,
+0xE0,0x20,0x00,0x1D,0xD6,0xF8,0x00,0x60,0x8B,0xAF,0x8A,0xF8,0x8B,0x5E,0x8B,0x8E,
+0x9D,0x01,0x5D,0xC8,0x00,0xD6,0xAE,0xFB,0x35,0x9D,0x61,0x5F,0xCB,0x00,0x0E,0xC1,
+0x12,0xD6,0xDE,0xF9,0x6D,0xC3,0x00,0x10,0x01,0x1B,0x53,0x00,0xFF,0x18,0x04,0xB4,
+0x0E,0xF2,0x00,0x0D,0x51,0x00,0x0F,0xB0,0x00,0x0F,0x78,0x00,0xC3,0x20,0x1F,0xE0,
+0x20,0x01,0x55,0xCF,0x9C,0x00,0x0A,0xCC,0xE7,0x00,0x0A,0x8C,0xE6,0x0B,0x07,0x04,
+0x4F,0x18,0x50,0x8C,0xDC,0x08,0x67,0x02,0x0B,0x86,0x02,0x40,0x63,0x23,0x0B,0x46,
+0x04,0x8C,0x78,0x43,0x1B,0xBC,0xFC,0x63,0x02,0x00,0x4C,0x63,0x52,0x23,0x00,0xA8,
+0xC2,0xE0,0x1F,0xE0,0x20,0x00,0x8D,0x40,0x63,0xBB,0x40,0x9C,0x23,0x4E,0xFA,0x50,
+0x8E,0xE4,0xFE,0xF7,0x02,0x00,0x4E,0xF7,0x52,0x43,0x77,0xDB,0x8C,0x7B,0x40,0x63,
+0xC0,0xE4,0x00,0x00,0x0D,0x88,0x64,0x0E,0xC1,0x1E,0x0E,0xA1,0x22,0x0E,0x81,0x26,
+0x0E,0x61,0x2A,0x0E,0x41,0x2E,0x0E,0x21,0x32,0x0E,0x01,0x36,0x0D,0xE1,0x3A,0x0D,
+0xC1,0x3E,0x0D,0xA1,0x42,0x0D,0x81,0x46,0x0D,0x61,0x4A,0x0D,0x41,0x4E,0x1B,0x25,
+0x00,0x1C,0x21,0x50,0x85,0x29,0x8B,0x23,0xC2,0xE0,0x10,0x01,0x5C,0xA5,0x00,0xF2,
+0xF7,0x04,0xBB,0x98,0x60,0xD6,0xE5,0x0C,0xB9,0xD3,0x3F,0x0C,0x98,0xC2,0xE0,0x10,
+0x01,0xC3,0x00,0x10,0x01,0xC3,0x60,0x10,0x01,0xF2,0xF7,0x04,0xBA,0xFF,0x18,0x04,
+0x9A,0xFF,0x7B,0x04,0xB9,0x22,0xE8,0x42,0x13,0x18,0x00,0x5F,0x08,0x9B,0x20,0x00,
+0x51,0xE4,0x00,0x01,0x3B,0xD2,0xE1,0x04,0xCE,0x13,0x18,0x00,0x5F,0x05,0x93,0x20,
+0x02,0x3D,0x24,0xA4,0x4B,0x9B,0x43,0x43,0x5A,0x2D,0x4F,0x5A,0x08,0x5F,0x5A,0x00,
+0xE4,0x00,0x00,0x37,0x20,0xA8,0x54,0x9B,0x44,0x43,0x5A,0x2D,0x4F,0x5A,0x08,0x5F,
+0x5A,0x00,0x20,0xAC,0xEE,0xE4,0x00,0x00,0x51,0x9B,0x43,0x9A,0xE0,0x13,0x9B,0x00,
+0x8B,0x17,0xE4,0x00,0x00,0x27,0x4F,0xB8,0x08,0x9F,0x01,0x8F,0xBC,0x5F,0x18,0x00,
+0x8E,0xFD,0x5E,0xF7,0x00,0xD7,0x05,0xFF,0x8E,0xE4,0x00,0x00,0x49,0x5E,0xE0,0x21,
+0x53,0x00,0x1D,0x52,0xE0,0x2F,0x4A,0xF8,0xB8,0xE4,0x00,0x00,0x4B,0x5E,0xE0,0x29,
+0x53,0x00,0x41,0x52,0xE0,0x29,0x4A,0xF8,0xB8,0xE4,0x00,0x00,0x2B,0x27,0x04,0x33,
+0x9F,0x9F,0x4F,0x18,0x08,0xE4,0x00,0x00,0x8B,0x9B,0x0A,0x20,0xA9,0x10,0x13,0x1B,
+0x00,0x9C,0xBF,0x9F,0x1F,0x4C,0xA5,0x08,0x8F,0x05,0xE4,0x00,0x00,0x65,0x9B,0x43,
+0x13,0xBB,0x00,0x43,0x5A,0x2D,0x9A,0xE0,0x4F,0x5A,0x08,0x8B,0x77,0x5F,0x5A,0x00,
+0xE4,0x00,0x00,0x21,0x8F,0x9D,0x9F,0x61,0x8E,0xFC,0x5F,0x7B,0x00,0x5E,0xF7,0x00,
+0x4F,0x9B,0x08,0xD7,0x65,0xFF,0x8E,0x1F,0x1D,0xFF,0x8F,0x1C,0x5F,0x18,0x00,0x4F,
+0x5A,0x08,0xC3,0xB8,0x00,0x21,0xFF,0xBD,0xB7,0x5C,0x8F,0xBA,0x9B,0x40,0xE4,0x00,
+0x01,0x0B,0x4F,0x7A,0x08,0x8F,0x7D,0x0B,0x9B,0x00,0xD7,0x3C,0x03,0xBC,0x0B,0x7B,
+0x02,0xD7,0x79,0x03,0x84,0x8E,0xFA,0xC3,0xB8,0x00,0x21,0xCF,0x17,0x00,0x06,0xFF,
+0xBD,0xB7,0x7E,0x8F,0x1D,0x1F,0x57,0x01,0x14,0xD8,0x00,0xCF,0x5A,0x00,0x06,0x09,
+0x18,0x02,0x8F,0x5D,0x98,0x60,0x0B,0xB8,0x04,0x14,0xBA,0x00,0x0B,0xDA,0x02,0x0B,
+0x1A,0x04,0xD7,0x9B,0x02,0x52,0x42,0xF9,0xDD,0x40,0x77,0x33,0x43,0x3C,0xCD,0x43,
+0x59,0x2B,0x43,0xD9,0xF3,0x8F,0x43,0x40,0x77,0x43,0x43,0x5A,0x23,0x8C,0x7E,0x8C,
+0x7A,0x42,0xF7,0xEB,0x40,0x83,0x23,0x97,0x41,0x43,0x39,0xC3,0xCB,0x5A,0x86,0xA0,
+0x8F,0x37,0x40,0x64,0xD0,0x43,0x7C,0xDD,0x8C,0x79,0x40,0x63,0xD8,0xE4,0x00,0x00,
+0x1F,0x9F,0x41,0x5F,0x7A,0x00,0xD7,0x1B,0xFB,0xE5,0x98,0x60,0x85,0x29,0xC2,0xE0,
+0x10,0x01,0xF8,0x77,0x04,0xBA,0xC2,0xE0,0x10,0x01,0xF8,0x97,0x04,0xB0,0xC2,0xE0,
+0x10,0x01,0xF8,0xB7,0x04,0x9A,0xC2,0xE0,0x10,0x01,0xF8,0xD7,0x04,0xB9,0xC2,0xE0,
+0x10,0x01,0xEC,0xF7,0x04,0x99,0x85,0x29,0x9A,0xFF,0x1C,0x21,0xD8,0x0D,0xE1,0x0C,
+0x1A,0xE1,0x07,0xC1,0xE0,0x10,0x01,0xFD,0xEF,0x04,0xB8,0x1A,0xEF,0x00,0x52,0xE0,
+0xFF,0xC3,0x00,0x10,0x01,0x0D,0x41,0x20,0x0D,0x61,0x1C,0x0D,0xA1,0x14,0x0D,0xC1,
+0x10,0xCB,0x20,0xFF,0xFF,0xC1,0xC0,0x10,0x01,0xEF,0x38,0x04,0x9C,0xFD,0xCE,0x04,
+0xB4,0xC1,0xA0,0x10,0x01,0x0E,0xEE,0x00,0xFD,0xAD,0x04,0xA0,0x0D,0x21,0x24,0x0E,
+0xED,0x00,0x0D,0x81,0x18,0xC2,0xE0,0x10,0x01,0x0E,0x01,0x08,0x89,0x63,0xF3,0x17,
+0x04,0xBA,0x89,0x44,0x88,0x65,0xC2,0xE0,0x10,0x01,0x23,0x08,0x56,0xC3,0x00,0x10,
+0x01,0xF3,0x18,0x04,0x9A,0x5F,0x08,0x9B,0x20,0x00,0x61,0xE4,0x00,0x00,0x37,0x23,
+0x04,0x5E,0xC3,0x00,0x10,0x01,0xF3,0x18,0x04,0x9A,0x5F,0x05,0x93,0x20,0x00,0x25,
+0x9B,0x05,0xE4,0x00,0x00,0x0D,0x9B,0x04,0xFB,0x17,0x04,0xBB,0xC2,0x00,0x10,0x01,
+0x0E,0xEB,0x02,0xEE,0xF0,0x04,0x9C,0x0A,0xE6,0x0A,0x0C,0x8B,0x02,0xD4,0x97,0x04,
+0xCC,0xC2,0xE0,0x10,0x01,0xEB,0x17,0x0C,0x8B,0x53,0x18,0x01,0x1C,0xA1,0x07,0xEF,
+0x17,0x0C,0x8B,0xE7,0xFF,0xF6,0x9C,0x0C,0x6B,0x00,0x0C,0x8A,0x02,0xED,0x90,0x04,
+0x9E,0x10,0xAF,0x00,0x88,0x6C,0xE7,0xFF,0xFA,0xC0,0xC2,0xE0,0x10,0x01,0x89,0x63,
+0xEC,0x77,0x04,0xAC,0x10,0xA1,0x07,0x0C,0x8A,0x02,0x88,0x6C,0xE7,0xFF,0xFA,0x94,
+0xC3,0x00,0x10,0x01,0xEC,0x78,0x04,0xBC,0x0F,0x6E,0x02,0x0F,0x2D,0x02,0x0F,0x4A,
+0x02,0x43,0x1B,0xCC,0x23,0x00,0xEC,0xC3,0x20,0x1F,0xE0,0x20,0x00,0xD1,0xC3,0x80,
+0x10,0x01,0xEF,0xBC,0x04,0xA6,0xC3,0x80,0x10,0x01,0xEF,0x9C,0x04,0xAA,0x43,0xBD,
+0xE5,0x4F,0x9D,0xFA,0x47,0xBC,0xEE,0x43,0x9D,0xE5,0xD7,0x1C,0x00,0xAC,0x41,0x6B,
+0xDB,0x42,0xE3,0xCB,0x8E,0xEB,0x43,0x17,0xC0,0x8F,0x58,0xE4,0x00,0x01,0x55,0x42,
+0xFA,0x1C,0xE4,0x00,0x01,0x5B,0xC9,0x80,0x07,0xFF,0x42,0xEC,0xBD,0xD6,0xE4,0x05,
+0x2C,0xC2,0xE0,0x10,0x01,0xEB,0x17,0x0C,0x8B,0x53,0x18,0x01,0x40,0x8C,0x25,0xEF,
+0x17,0x0C,0x8B,0x1C,0xA1,0x07,0xE7,0xFF,0xF5,0x56,0x40,0x6C,0x1D,0x0C,0x6B,0x00,
+0xEE,0xF0,0x04,0x9E,0x0C,0x8A,0x02,0x41,0x8C,0xBD,0x10,0xAF,0x00,0x88,0x6C,0xE7,
+0xFF,0xF9,0x6E,0xC2,0xE0,0x10,0x01,0x89,0x63,0xEC,0x77,0x04,0xAC,0x10,0xA1,0x07,
+0x0C,0x8A,0x02,0x88,0x6C,0xE7,0xFF,0xF9,0x42,0xC3,0x00,0x10,0x01,0xEC,0x78,0x04,
+0xBC,0x0F,0x6E,0x02,0x0F,0x2D,0x02,0x0F,0x4A,0x02,0x43,0x1B,0xCC,0x23,0x00,0xFC,
+0xC3,0x20,0x1F,0xE0,0x20,0x00,0xE1,0xC3,0x80,0x10,0x01,0xEF,0xBC,0x04,0xA6,0xC3,
+0x80,0x10,0x01,0xEF,0x9C,0x04,0xAA,0x43,0xBD,0xE5,0x4F,0x9D,0xFA,0x47,0xBC,0xEE,
+0x43,0x9D,0xE5,0xD7,0x1C,0x00,0xCC,0x41,0x6B,0xDB,0x42,0xE3,0xCB,0x8E,0xEB,0x43,
+0x17,0xC0,0x43,0x5A,0xC5,0x0F,0x4A,0x00,0xE4,0x00,0x00,0x15,0x42,0xFA,0x1D,0x0E,
+0xEA,0x00,0x0E,0x01,0x0A,0x0D,0xE1,0x0E,0x0D,0xC1,0x12,0x0D,0xA1,0x16,0x0D,0x81,
+0x1A,0x0D,0x61,0x1E,0x0D,0x41,0x22,0x0D,0x21,0x26,0x1C,0x21,0x28,0x85,0x29,0x1C,
+0x21,0xD0,0x0D,0x41,0x28,0x0D,0x61,0x24,0x0D,0x81,0x20,0x0D,0xA1,0x1C,0x0D,0xC1,
+0x18,0x0D,0xE1,0x14,0x0E,0x01,0x10,0x0E,0x21,0x0C,0x0E,0x41,0x08,0x5E,0x23,0x00,
+0x0E,0x61,0x04,0x56,0x11,0x03,0x4E,0xF1,0x11,0x5E,0x00,0x09,0x99,0xC0,0x4A,0x41,
+0x01,0x99,0x80,0x9A,0x64,0x0D,0x21,0x2C,0x8E,0x57,0x89,0x44,0x89,0xAE,0x89,0x6C,
+0x99,0xE0,0x42,0x73,0x25,0xE4,0x00,0x00,0xF3,0x42,0xF3,0x54,0xD6,0xF1,0x01,0xD8,
+0x22,0x04,0x4A,0x51,0xC0,0x10,0x11,0x6A,0x00,0x89,0xAE,0x51,0x80,0x10,0xE4,0x00,
+0x00,0x6B,0x22,0x08,0x4A,0x51,0xC0,0x10,0x11,0x6A,0x00,0x11,0x8A,0x01,0x89,0xAE,
+0xE4,0x00,0x00,0x47,0x22,0x0C,0x7E,0x11,0x6A,0x00,0x11,0x8A,0x01,0x11,0xAA,0x02,
+0x51,0xC0,0x10,0xE4,0x00,0x00,0x21,0x11,0x6A,0x00,0x11,0x8A,0x01,0x11,0xAA,0x02,
+0x11,0xCA,0x03,0x4E,0xEC,0x80,0x4C,0x8C,0xC0,0x8C,0x97,0x4E,0xEE,0x80,0x4F,0x0B,
+0x40,0x4C,0xAE,0xC0,0x8C,0xB7,0x4E,0xED,0x40,0x88,0x6F,0x8C,0x8B,0x8C,0xAD,0x8C,
+0x98,0x8C,0xB7,0x9D,0xE1,0xE4,0x00,0x9F,0x7E,0x5D,0xEF,0x00,0x9D,0x44,0xD5,0xF2,
+0xFC,0x5E,0x0E,0x61,0x06,0x0E,0x41,0x0A,0x0E,0x21,0x0E,0x0E,0x01,0x12,0x0D,0xE1,
+0x16,0x0D,0xC1,0x1A,0x0D,0xA1,0x1E,0x0D,0x81,0x22,0x0D,0x61,0x26,0x0D,0x41,0x2A,
+0x0D,0x21,0x2E,0x1C,0x21,0x30,0x85,0x29,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x00,0xCA,
+0x5E,0xE0,0x41,0x1C,0x21,0xE8,0x0D,0x61,0x0C,0x0D,0x81,0x08,0x0D,0xA1,0x04,0x0D,
+0x21,0x14,0x0D,0x41,0x10,0x89,0x63,0x5D,0x84,0x00,0x49,0xA1,0x01,0xE4,0x00,0x56,
+0x78,0xC3,0x14,0x00,0x01,0xCB,0x18,0x7A,0x30,0x0A,0xF8,0x01,0xC6,0xF7,0x01,0x00,
+0x5E,0xF7,0x04,0x22,0xE3,0xD8,0xFC,0x60,0x01,0x00,0x99,0x40,0xE4,0x00,0x13,0x78,
+0xE4,0x00,0x00,0x31,0x88,0x6A,0x98,0x81,0x88,0xAD,0x9D,0x41,0xE4,0x00,0xAF,0xF8,
+0x5D,0x4A,0x00,0x0C,0x6B,0x01,0x9D,0x62,0xD5,0x4C,0xFF,0x66,0x0D,0xA1,0x06,0x0D,
+0x81,0x0A,0x0D,0x61,0x0E,0x0D,0x41,0x12,0x0D,0x21,0x16,0x1C,0x21,0x18,0x85,0x29,
+0xFC,0x21,0xFD,0xF0,0xED,0x41,0x02,0x08,0xED,0xC1,0x01,0xF8,0xED,0xE1,0x01,0xF4,
+0xEE,0x01,0x01,0xF0,0xED,0x21,0x02,0x0C,0xED,0x61,0x02,0x04,0xED,0x81,0x02,0x00,
+0xED,0xA1,0x01,0xFC,0xEE,0x21,0x01,0xEC,0xEE,0x41,0x01,0xE8,0xEE,0x61,0x01,0xE4,
+0xEE,0x81,0x01,0xE0,0xC2,0x00,0x10,0x01,0xC1,0xC0,0x10,0x01,0xC1,0xE0,0x10,0x01,
+0x89,0x43,0xFE,0x10,0x06,0x10,0xFD,0xCE,0x05,0xB6,0xFD,0xEF,0x05,0xC4,0x20,0x60,
+0x30,0x20,0x68,0x98,0x20,0x64,0x30,0x24,0x64,0x63,0x99,0x80,0xE4,0x00,0x00,0x0D,
+0x99,0x81,0xCD,0x8C,0x00,0x16,0x51,0x60,0x16,0x8D,0x90,0xE4,0x00,0x00,0x41,0xD0,
+0x64,0x00,0x82,0xD0,0x65,0x00,0xA2,0x99,0x80,0x89,0x6C,0xE4,0x00,0x00,0x21,0x89,
+0x8F,0x99,0x63,0xE4,0x00,0x00,0x11,0x89,0x8E,0x99,0x68,0x9A,0xE0,0x8A,0x81,0x53,
+0x20,0x10,0xE4,0x00,0x00,0x19,0x43,0x14,0xBC,0x9E,0xE1,0x1B,0x38,0x00,0x5F,0x17,
+0x00,0xD5,0x78,0xFF,0xAD,0x88,0x6B,0x88,0x81,0x99,0xA3,0xE7,0xFF,0xFB,0xE8,0x8A,
+0x81,0xFE,0x20,0xFE,0xB0,0xCA,0x40,0x01,0x50,0x52,0x60,0x3F,0x1C,0x61,0x60,0x88,
+0x8B,0xE7,0xFF,0xFD,0x8E,0x1F,0x21,0x60,0x8B,0x01,0x9B,0x41,0xE4,0x00,0x00,0x93,
+0x0A,0xF9,0x00,0xC2,0xFF,0xD5,0xEC,0x20,0x00,0x39,0x43,0x71,0xBD,0xC3,0x60,0x2A,
+0x0C,0xE4,0x00,0x00,0x0F,0x5E,0xE0,0x19,0x4B,0x61,0x01,0x23,0x60,0x98,0xFE,0xF7,
+0x01,0x50,0x13,0x58,0x00,0x42,0xF7,0x90,0x8E,0xFA,0x5E,0xF7,0x06,0x26,0xFC,0x34,
+0x5E,0xE7,0xF1,0x4A,0xF7,0x98,0xE4,0x00,0x00,0x0D,0x9A,0xE0,0x1A,0xF8,0x00,0x9B,
+0x40,0x9F,0x01,0x9F,0x22,0x42,0xF8,0xA5,0x5E,0xF7,0x00,0xD5,0x77,0xFD,0xAD,0x23,
+0x40,0x24,0x9A,0xE0,0xE4,0x00,0x00,0x51,0x88,0x6B,0x88,0x81,0x9D,0xBF,0xE7,0xFF,
+0xFA,0xE2,0x5D,0xAD,0x00,0x21,0xA2,0x1E,0xE7,0xFF,0xFF,0xD5,0x43,0x0C,0xBC,0x1F,
+0x21,0x00,0x8F,0x37,0x9E,0xE1,0x13,0x39,0x00,0x1B,0x38,0x00,0x5F,0x17,0x00,0xD5,
+0x78,0xFF,0x6D,0x21,0x40,0x74,0x21,0x48,0x38,0x21,0x44,0x9C,0xD1,0x44,0x01,0xEA,
+0xD1,0x45,0x02,0x5A,0x99,0x60,0x99,0x80,0x88,0x8B,0x89,0x4C,0xE4,0x00,0x00,0x9B,
+0xC1,0x80,0x10,0x01,0x99,0x60,0x88,0x90,0xFD,0x8C,0x09,0x9C,0xE4,0x00,0x00,0x2D,
+0xC0,0x80,0x10,0x01,0xC1,0x80,0x10,0x01,0x99,0x61,0xFC,0x84,0x06,0x26,0xFD,0x8C,
+0x09,0xF4,0x51,0x40,0x16,0xE4,0x00,0x00,0x49,0xC1,0x80,0x10,0x01,0x99,0x68,0x88,
+0x8F,0xFD,0x8C,0x0C,0x58,0x99,0x43,0xE4,0x00,0x00,0x25,0xC1,0x80,0x10,0x01,0x99,
+0x6D,0x88,0x8E,0xFD,0x8C,0x0B,0x74,0x99,0x48,0x88,0x6A,0xE7,0xFF,0xF9,0xC8,0xFD,
+0xA1,0x01,0x20,0x88,0x8A,0x88,0x6D,0xE7,0xFF,0xFB,0x82,0x9A,0xE0,0xE4,0x00,0x00,
+0x33,0x4F,0x17,0x10,0x4F,0x37,0x08,0x8F,0x0C,0x8F,0x2D,0x9E,0xE1,0x0B,0x39,0x00,
+0x4F,0x39,0x40,0x0F,0x38,0x00,0x5F,0x17,0x00,0xD5,0x58,0xFF,0x45,0x88,0x6B,0xE4,
+0x00,0x53,0x6A,0xED,0x21,0x02,0x0E,0xEE,0x81,0x01,0xE2,0xEE,0x61,0x01,0xE6,0xEE,
+0x41,0x01,0xEA,0xEE,0x21,0x01,0xEE,0xEE,0x01,0x01,0xF2,0xED,0xE1,0x01,0xF6,0xED,
+0xC1,0x01,0xFA,0xED,0xA1,0x01,0xFE,0xED,0x81,0x02,0x02,0xED,0x61,0x02,0x06,0xED,
+0x41,0x02,0x0A,0xFC,0x21,0x02,0x10,0x85,0x29,0x9C,0x38,0xC2,0xE0,0x10,0x01,0x0D,
+0x21,0x04,0xFE,0xF7,0x06,0x10,0x9B,0x00,0x13,0x37,0x00,0x13,0x57,0x16,0x8F,0x3A,
+0x4F,0x39,0x08,0x9E,0xE1,0x8F,0x19,0xC3,0x20,0x10,0x01,0xFF,0x39,0x06,0x26,0xD6,
+0xF9,0xFF,0x4E,0xC2,0xE0,0x10,0x01,0xF3,0x57,0x05,0xC4,0xFE,0xF7,0x05,0xC4,0x13,
+0x37,0x02,0x13,0x77,0x01,0x98,0x60,0x42,0xFB,0xD4,0x98,0x80,0x8E,0xF9,0x53,0x20,
+0x5B,0x4E,0xF7,0x08,0x8E,0xF8,0x97,0x03,0x4E,0xF7,0x09,0xCB,0x18,0xD0,0x8F,0xCE,
+0xF7,0x03,0x5B,0x42,0xF7,0xC9,0xCE,0xF7,0x00,0x2F,0xD6,0xF8,0x00,0xA1,0x97,0x2F,
+0x98,0x60,0xCB,0x39,0x42,0x3F,0x98,0x82,0xD6,0xF9,0x00,0x31,0x98,0x87,0xE4,0x00,
+0xA7,0x98,0x0D,0x21,0x06,0x98,0x61,0x98,0x80,0x9C,0x28,0xE4,0x00,0xA7,0x7F,0x9C,
+0x38,0x98,0x80,0x0D,0x21,0x04,0x98,0x66,0xE4,0x00,0x2C,0xD2,0x98,0x60,0xE7,0xFF,
+0xFA,0x84,0x98,0x81,0x98,0x66,0xE4,0x00,0x2C,0xB6,0x98,0x61,0xE7,0xFF,0xFA,0x68,
+0x98,0x87,0x98,0x66,0xE4,0x00,0x2C,0x9A,0x98,0x64,0xE7,0xFF,0xFA,0x4C,0x98,0x66,
+0x98,0x88,0xE4,0x00,0x2C,0x7E,0x0D,0x21,0x06,0x98,0x65,0x9C,0x28,0xE7,0xFF,0xFA,
+0x27,0xC2,0xE0,0x10,0x01,0x5C,0xA0,0x29,0xF3,0x37,0x0A,0x4C,0x53,0x40,0x50,0x52,
+0xE0,0x28,0xC3,0x60,0x10,0x01,0x4B,0x5A,0xB8,0xFF,0x7B,0x0C,0xB6,0x20,0x60,0x6C,
+0xE4,0x00,0x00,0x55,0x4F,0x17,0x08,0x9E,0xE1,0x8F,0x1B,0x0B,0x18,0x00,0xD7,0x58,
+0x00,0x78,0x98,0x61,0xE4,0x00,0x00,0xD9,0x9A,0xE0,0x43,0x40,0xD5,0x5F,0x17,0x00,
+0xD7,0x38,0xFF,0x25,0x98,0x60,0xE4,0x00,0x00,0xB5,0x20,0x67,0xEA,0x9A,0xE0,0x20,
+0x80,0xA6,0x9A,0xE0,0x43,0x80,0xD5,0xE4,0x00,0x00,0x7D,0x4F,0x17,0x08,0x8F,0x1B,
+0x0B,0x18,0x00,0x4F,0x98,0xFA,0x47,0x1C,0xC6,0x43,0x18,0xE5,0x0B,0x84,0x00,0xD7,
+0x1C,0x00,0x38,0x0F,0x04,0x01,0x9E,0xE1,0x5F,0x17,0x00,0xD7,0x38,0xFF,0x05,0xE7,
+0xFF,0xFF,0xA7,0x4F,0x17,0x08,0x8F,0x1B,0x0B,0x18,0x00,0xD7,0x98,0xFD,0x3C,0x9E,
+0xE1,0xD7,0x1A,0xFD,0x0C,0x5F,0x17,0x00,0xD7,0x38,0xFF,0x5D,0xE7,0xFF,0xFF,0x51,
+0x85,0x29,0xC2,0xE0,0x10,0x01,0xC3,0x00,0x10,0x01,0xF3,0xB7,0x0A,0x4C,0xC3,0xC0,
+0x10,0x01,0x9A,0xE0,0xFF,0x18,0x04,0xC4,0x8B,0x37,0xFF,0xDE,0x0C,0xB6,0xE4,0x00,
+0x00,0x5B,0x4F,0x57,0x08,0x0B,0x98,0x00,0x8F,0x5E,0x0B,0x5A,0x00,0x43,0x9A,0xE5,
+0x4F,0x7C,0xFA,0x47,0x9B,0xE6,0x43,0x7C,0xDD,0x5F,0x67,0x91,0x20,0x00,0x21,0x9F,
+0x21,0x5F,0x39,0x00,0x0F,0x58,0x01,0x9E,0xE1,0x9F,0x02,0x5F,0x57,0x00,0xD7,0xBA,
+0xFE,0xA5,0x5F,0x21,0x13,0x48,0x61,0x01,0x85,0x29,0xC2,0xE0,0x10,0x01,0xC3,0x40,
+0x10,0x01,0xF3,0x37,0x0A,0x4C,0xC3,0x60,0x10,0x01,0x9A,0xE0,0xFF,0x5A,0x04,0xC4,
+0xFF,0x7B,0x0C,0xB6,0xE4,0x00,0x00,0x29,0x4F,0x17,0x08,0x9E,0xE1,0x43,0x9A,0xC4,
+0x8F,0x1B,0x0B,0x18,0x01,0x0F,0x1C,0x01,0x5F,0x17,0x00,0xD7,0x38,0xFF,0x6D,0x85,
+0x29,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0A,0x5A,0xC2,0xE0,0x10,0x01,0x9C,0x38,0xF8,
+0x17,0x07,0xC0,0x0D,0x21,0x04,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x06,0x3C,0x20,0x64,
+0x26,0x98,0x60,0xE4,0x00,0x00,0x0D,0x98,0x64,0x98,0x80,0xE4,0x00,0x2E,0x0C,0xC2,
+0xE0,0x10,0x01,0x0D,0x21,0x06,0xEC,0x17,0x04,0xC0,0x9C,0x28,0xE4,0x00,0x4C,0xEF,
+0x1C,0x21,0xE8,0xC2,0xE0,0x10,0x01,0x0D,0x41,0x10,0xEB,0x17,0x00,0xBD,0x0D,0x21,
+0x14,0x0D,0x61,0x0C,0x0D,0x81,0x08,0x0C,0x01,0x07,0x89,0x43,0xC7,0x18,0x01,0x00,
+0x98,0x60,0xD3,0x00,0x06,0xBA,0xEB,0x17,0x00,0xBD,0xC7,0x18,0xFE,0xFF,0xEF,0x17,
+0x00,0xBD,0xE4,0x00,0x47,0x26,0xE4,0x00,0x48,0x3E,0x21,0x44,0x36,0x98,0x61,0xE4,
+0x00,0x89,0x30,0xE4,0x00,0x00,0x11,0xE4,0x00,0x89,0x9A,0xC1,0x60,0x10,0x01,0xEE,
+0xEB,0x04,0xC2,0x5E,0xE0,0x01,0x98,0x6A,0x98,0x83,0x0C,0x01,0x07,0x1D,0x81,0x06,
+0x49,0x8C,0x00,0xE4,0x00,0x51,0x8C,0x98,0x61,0x88,0x8C,0x98,0xA1,0x88,0xCA,0xE7,
+0xFF,0xFC,0x44,0xC2,0xE0,0x10,0x01,0x20,0x60,0xEE,0xF3,0x17,0x0A,0x5A,0x9F,0x01,
+0xFB,0x17,0x0A,0x5A,0x0A,0xE1,0x06,0x5E,0xE2,0x79,0x20,0x00,0x45,0xC2,0xE0,0x10,
+0x01,0xF3,0x17,0x07,0xC0,0x9F,0x01,0xFB,0x17,0x07,0xC0,0x98,0x63,0x21,0x44,0x36,
+0x98,0x81,0xE4,0x00,0x84,0xA0,0xE4,0x00,0x00,0x73,0xE4,0x00,0x85,0x16,0xE4,0x00,
+0x00,0x63,0xF8,0x17,0x0A,0x5A,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x07,0xC0,0xEE,0xEB,
+0x04,0xC2,0x22,0xE3,0x66,0x0A,0xE1,0x06,0x5E,0xEF,0x11,0x23,0xFF,0x41,0x21,0x44,
+0x36,0x98,0x61,0xE4,0x00,0x50,0x12,0xE4,0x00,0x00,0x11,0xE4,0x00,0x50,0x64,0x9B,
+0x01,0xC2,0xE0,0x10,0x01,0x98,0x61,0xEF,0x17,0x04,0xC0,0xC2,0xE0,0x10,0x01,0xF3,
+0x17,0x06,0x3C,0x9F,0x01,0xFB,0x17,0x06,0x3C,0x0D,0x81,0x0A,0x0D,0x61,0x0E,0x0D,
+0x41,0x12,0x0D,0x21,0x16,0x1C,0x21,0x18,0x85,0x29,0x9C,0x38,0x0D,0x21,0x04,0x20,
+0x64,0x26,0x98,0x60,0xE4,0x00,0x00,0x0D,0x98,0x64,0x98,0x80,0xE4,0x00,0x2B,0xAA,
+0x0D,0x21,0x06,0x9C,0x28,0xE4,0x00,0x4A,0x9D,0x98,0x81,0x98,0x60,0x88,0xA4,0xE7,
+0xFF,0xD2,0x79,0xC2,0xE0,0x10,0x01,0x98,0x61,0xF2,0xF7,0x0A,0x5A,0xD2,0xEA,0x00,
+0x95,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x07,0xC0,0x5E,0xE0,0xBB,0x48,0x61,0x01,0x85,
+0x29,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x06,0x3C,0x5E,0xE1,0xDB,0x48,0x61,0x01,0x85,
+0x29,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x00,0x00,0x0C,0x17,0x00,0x0C,0x17,0x19,0x0C,
+0x17,0x1B,0xEC,0x17,0x00,0xA1,0xEC,0x17,0x00,0xA3,0xEC,0x17,0x00,0xA4,0x1F,0x17,
+0x08,0xEC,0x17,0x00,0xA1,0x0F,0x17,0x04,0x1F,0x17,0x20,0x0F,0x17,0x1C,0xC2,0xE0,
+0x10,0x01,0xEB,0x17,0x00,0xC1,0x53,0x18,0x02,0xEF,0x17,0x00,0xC1,0x85,0x29,0xC3,
+0x20,0x10,0x01,0xFF,0x19,0x00,0x00,0x1E,0xF8,0x20,0x5C,0x63,0x04,0x0E,0xF8,0x1C,
+0x9A,0xE0,0xE4,0x00,0x00,0x29,0x0F,0x38,0x1E,0x43,0x44,0xBC,0x8F,0x37,0x13,0x5A,
+0x00,0x9E,0xE1,0x1B,0x59,0x00,0x5F,0x37,0x04,0xD4,0x79,0xFF,0x6D,0x9A,0xE1,0xEE,
+0xF8,0x00,0xA4,0x85,0x29,0x9C,0x38,0x0D,0x21,0x04,0x0D,0x41,0x00,0x5D,0x43,0x00,
+0xE7,0xFF,0xFF,0x02,0x88,0x6A,0xE4,0x00,0xA0,0xB0,0x0D,0x21,0x06,0x0D,0x41,0x02,
+0x9C,0x28,0x85,0x29,0x1C,0x21,0xE8,0x0D,0x41,0x10,0x0D,0x61,0x0C,0x0D,0x81,0x08,
+0x0D,0x21,0x14,0x0D,0xA1,0x04,0xC1,0x60,0x10,0x01,0xE4,0x00,0xA2,0x0E,0xC1,0x80,
+0x10,0x01,0x5C,0x63,0x00,0xFD,0x6B,0x00,0xB0,0xFD,0x4C,0x00,0x00,0xD0,0x60,0x0B,
+0x0A,0xE4,0x00,0xA2,0x06,0x5C,0x63,0x00,0x20,0x60,0xBC,0x0C,0x0A,0x19,0xE4,0x00,
+0xA2,0x46,0xE4,0x00,0x00,0x4B,0x0E,0xEA,0x06,0x09,0xAA,0x19,0x8D,0xB7,0xE4,0x00,
+0xA2,0x5A,0x18,0x6D,0x00,0x0A,0xEA,0x19,0xD2,0xEE,0x00,0x8D,0x0A,0xEA,0x19,0x9E,
+0xE1,0x5E,0xF7,0x04,0x0E,0xEA,0x19,0x99,0x80,0xE4,0x00,0xA1,0x4A,0x5C,0x63,0x00,
+0x20,0x63,0x5A,0x0E,0xEA,0x06,0x13,0x17,0x00,0x5F,0x0A,0x09,0x20,0x00,0x61,0x0A,
+0xEA,0x19,0xD2,0xE4,0x01,0xE6,0xE4,0x00,0xA1,0x82,0x0A,0xEA,0x19,0x22,0xE1,0x12,
+0xE4,0x00,0x04,0x3B,0x13,0x17,0x00,0x5F,0x0A,0x29,0x20,0x00,0x7B,0x13,0x17,0x00,
+0x5F,0x0A,0x49,0x23,0xFF,0x73,0x13,0x17,0x00,0x5F,0x04,0x09,0x20,0x00,0x33,0x12,
+0xF7,0x00,0x5E,0xE4,0x29,0x20,0x00,0x25,0x0A,0xEA,0x19,0x22,0xEF,0x2C,0x98,0x61,
+0xE4,0x00,0xB2,0x52,0x9D,0x81,0xC1,0x84,0xE2,0x0E,0x23,0xFE,0x7F,0xE7,0xFF,0xFF,
+0x73,0x0E,0xEA,0x06,0x13,0x17,0x00,0xD3,0x00,0x0E,0xB2,0x13,0x17,0x00,0x5F,0x0B,
+0x9B,0x20,0x07,0x31,0x13,0x17,0x00,0x5F,0x0A,0x49,0x20,0x00,0xB1,0x0B,0x0A,0x19,
+0xD3,0x04,0x04,0xA6,0x13,0x17,0x01,0x13,0x37,0x02,0x12,0xF7,0x03,0x4F,0x18,0x40,
+0x47,0x18,0xCD,0xC3,0x02,0x7F,0xEE,0x20,0x01,0xF5,0x07,0x20,0x80,0x8F,0x19,0x1A,
+0xF8,0x00,0xE4,0x00,0x00,0xE5,0x13,0x17,0x00,0x5F,0x04,0x09,0x20,0x00,0x99,0x0B,
+0x0A,0x19,0x23,0x0D,0x8A,0x13,0x37,0x01,0x13,0x17,0x02,0x4E,0xF9,0x40,0x46,0xF7,
+0xC5,0xC2,0xEB,0x54,0xA4,0x20,0x01,0x3D,0x12,0xEB,0x00,0x52,0xF7,0x03,0xE4,0x00,
+0x00,0x87,0x13,0x17,0x00,0x5F,0x04,0x29,0x20,0x05,0x95,0x0B,0x0A,0x19,0x23,0x0C,
+0xDA,0x13,0x37,0x01,0x13,0x17,0x02,0x4E,0xF9,0x40,0x46,0xF7,0xC5,0xC3,0x00,0x10,
+0x01,0xEE,0xF8,0x00,0xB4,0x12,0xEB,0x00,0x57,0x37,0x01,0x23,0x20,0x64,0xEF,0x18,
+0x00,0xB6,0x23,0x00,0x32,0x9B,0x1B,0x46,0xF7,0xC4,0xE4,0x00,0x00,0x0F,0x52,0xF7,
+0x04,0x1A,0xEB,0x00,0x0C,0x0A,0x00,0x0C,0x0A,0x19,0xE4,0x00,0x02,0x47,0xE4,0x00,
+0x9E,0xDA,0x5C,0x63,0x00,0xD0,0x60,0x08,0xC2,0xE4,0x00,0x9F,0xAA,0xE4,0x00,0x9F,
+0x6E,0x50,0x60,0x20,0xE4,0x00,0x03,0x10,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x3D,0xF9,
+0x13,0x17,0x00,0xC2,0xE0,0x10,0x01,0xFB,0x17,0x00,0xA8,0xF3,0x17,0x00,0xA8,0x23,
+0x00,0x4E,0x12,0xEB,0x00,0x56,0xF7,0x01,0x5E,0xE0,0x09,0x49,0x64,0x43,0xE4,0x00,
+0x00,0x49,0xF3,0x17,0x00,0xA8,0x23,0x04,0x2A,0x51,0x60,0x80,0xE4,0x00,0x00,0x2D,
+0xF3,0x17,0x00,0xA8,0x23,0x0B,0xD4,0xF2,0xF7,0x00,0xA8,0x22,0xEF,0xB8,0xC9,0x60,
+0xFF,0xFF,0xEE,0xEA,0x00,0xA6,0x22,0xE4,0x2E,0xED,0x6A,0x00,0xA1,0xEC,0x0A,0x00,
+0xA4,0xE4,0x00,0x9E,0xA6,0xEA,0xEA,0x00,0xA1,0xD5,0x77,0x04,0x1D,0xC2,0xE0,0x10,
+0x01,0xF3,0x17,0x0D,0x79,0x23,0x00,0x24,0x9F,0x1F,0xFB,0x17,0x0D,0x79,0xEC,0x0A,
+0x00,0xA3,0xC1,0x80,0x10,0x01,0xE9,0x6A,0x00,0xA1,0xE4,0x00,0x00,0x75,0xF2,0xEC,
+0x00,0xA8,0x22,0xE0,0x92,0xEA,0xEA,0x00,0xA3,0x0F,0x0A,0x1E,0x8E,0xF8,0x10,0x77,
+0x00,0xE4,0x00,0x9D,0x1A,0xEA,0xEA,0x00,0xA3,0x9E,0xE1,0x5E,0xF7,0x04,0xEE,0xEA,
+0x00,0xA3,0xE4,0x00,0x00,0x25,0xE4,0x00,0x9D,0x24,0x5C,0x63,0x00,0x20,0x63,0xE4,
+0xE7,0xFF,0xFF,0xAB,0xEA,0xEA,0x00,0xA3,0xD6,0xEB,0xFE,0x36,0xE4,0x00,0x9E,0x04,
+0xE4,0x00,0x9D,0xC8,0xEC,0x0A,0x00,0xA1,0xEC,0x0A,0x00,0xA3,0xE4,0x00,0x00,0x45,
+0x98,0x60,0x9D,0x81,0xE4,0x00,0x9C,0x94,0xE4,0x00,0x00,0x0D,0x99,0x80,0xD5,0x6C,
+0xFF,0x95,0xE4,0x00,0x9D,0xB8,0xE4,0x00,0x9D,0x7C,0xEC,0x0A,0x00,0xA1,0xC2,0xE0,
+0x10,0x01,0xEB,0x17,0x00,0xC1,0x53,0x18,0x02,0xEF,0x17,0x00,0xC1,0x0D,0xA1,0x06,
+0x0D,0x81,0x0A,0x0D,0x61,0x0E,0x0D,0x41,0x12,0x0D,0x21,0x16,0x1C,0x21,0x18,0x85,
+0x29,0x9C,0x38,0x0D,0x21,0x04,0xE4,0x00,0xA4,0x7E,0x98,0x60,0x88,0x83,0xE4,0x00,
+0xA1,0xB0,0x98,0x61,0x98,0x82,0xE4,0x00,0xA1,0xA0,0x98,0x60,0xFC,0x80,0x32,0x0B,
+0xE4,0x00,0x9D,0x8C,0x98,0x61,0xFC,0x80,0x32,0x0B,0xE4,0x00,0x9E,0xF2,0x0D,0x21,
+0x06,0x9C,0x28,0xE4,0x00,0xA7,0x49,0x20,0x64,0x1E,0xE4,0x00,0xA8,0x73,0xE4,0x00,
+0xA8,0x91,0x9C,0x38,0x0D,0x21,0x04,0xE4,0x00,0xA8,0xA6,0x0D,0x21,0x06,0x9C,0x28,
+0xE4,0x00,0xA8,0x6D,0xE4,0x00,0xAA,0x65,0xE4,0x00,0xAA,0xCD,0xE4,0x00,0xAB,0x29,
+0xE4,0x00,0xAF,0x07,0xE4,0x00,0xAC,0x71,0xE4,0x00,0xAB,0x75,0xE4,0x00,0xAB,0xAB,
+0xE4,0x00,0xAB,0xE1,0xE4,0x00,0xAC,0x05,0xE4,0x00,0xAC,0x29,0xE4,0x00,0xAA,0x5F,
+0xE4,0x00,0xAC,0x57,0x20,0x60,0x28,0x20,0x64,0x3E,0xE4,0x00,0x00,0x11,0xE4,0x00,
+0xAC,0xF3,0xE4,0x00,0xAD,0x0D,0x85,0x29,0xE4,0x00,0xAD,0x23,0xC2,0xE0,0x10,0x01,
+0xE8,0x77,0x00,0xAB,0xEB,0x17,0x00,0xAB,0xD4,0x78,0xFF,0xC6,0x85,0x29,0xE4,0x00,
+0xB0,0x1D,0xC3,0x34,0x00,0x01,0xCA,0xF9,0x23,0xFC,0x0A,0xF7,0x00,0xD2,0xFF,0x04,
+0x3C,0xC3,0x00,0x10,0x01,0xF2,0xF8,0x05,0x22,0x9E,0xE1,0x5E,0xF7,0x00,0xFA,0xF8,
+0x05,0x22,0x22,0xE1,0xCA,0xC3,0x00,0x10,0x01,0xC3,0x60,0x10,0x01,0xFF,0x18,0x01,
+0x5A,0xCA,0xE0,0x11,0x7D,0xCB,0x39,0x22,0x00,0xFF,0x7B,0x0C,0xB6,0x1F,0x57,0xFD,
+0x57,0x5A,0xFF,0x4F,0x5A,0x10,0x8F,0x59,0x0B,0x9A,0x01,0x4F,0x97,0x08,0x8F,0x9B,
+0xEB,0x9C,0xDD,0x5F,0x0F,0x9A,0x01,0x5F,0x57,0x00,0x5F,0x4F,0xE9,0x57,0x57,0xFF,
+0x4F,0x5A,0x10,0x8F,0x59,0x0B,0x9A,0x01,0x20,0x00,0x6D,0xFF,0xA0,0x80,0x00,0x5F,
+0x9C,0x04,0x47,0x9C,0xEC,0x0B,0xB8,0x01,0xC7,0xBD,0x7F,0xFF,0x47,0x9C,0xED,0xE4,
+0x00,0x00,0x0F,0x0B,0x98,0x01,0x0F,0x9A,0x01,0x9E,0xE1,0x9F,0x02,0xC2,0xE2,0x30,
+0x04,0x23,0xFE,0xB1,0x85,0x29,0x5C,0x63,0x04,0xE4,0x00,0xAE,0xEF,0x9A,0xE0,0x8B,
+0x17,0xE4,0x00,0x00,0x1D,0x43,0x23,0xBC,0x9E,0xE1,0x13,0x39,0x00,0x8F,0x19,0xD4,
+0x97,0xFF,0xB4,0x40,0x60,0xC5,0x85,0x29,0x9C,0x38,0x98,0x60,0x0D,0x21,0x04,0xE7,
+0xFF,0xFD,0x90,0x98,0x61,0xE7,0xFF,0xFD,0x84,0x50,0x60,0x19,0xE7,0xFF,0xFE,0x38,
+0x0D,0x21,0x06,0x98,0x60,0x9C,0x28,0xE7,0xFF,0xFD,0x61,0x9C,0x38,0xC2,0xE0,0x10,
+0x01,0x0D,0x21,0x04,0xEC,0x17,0x0D,0x83,0x0D,0x41,0x00,0xC2,0xE0,0x10,0x01,0x50,
+0x60,0x80,0xF2,0xF7,0x00,0xA8,0x22,0xE0,0x52,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x00,
+0xB0,0x56,0xF7,0x01,0x5E,0xE0,0x09,0x48,0x64,0x43,0xC1,0x40,0x10,0x01,0xEA,0xEA,
+0x00,0xC1,0x56,0xF7,0x02,0x22,0xE0,0x6C,0xC0,0x80,0x10,0x01,0xFC,0x84,0x05,0x2C,
+0xE7,0xFF,0xF6,0x3E,0xEA,0xEA,0x00,0xC1,0xC6,0xF7,0xFF,0xFD,0xEE,0xEA,0x00,0xC1,
+0x0D,0x41,0x02,0x0D,0x21,0x06,0x9C,0x28,0xE7,0xFF,0xFF,0x01,0x9C,0x30,0xC3,0x00,
+0x10,0x01,0x0D,0x21,0x0C,0xFC,0x98,0x05,0x2C,0x0D,0x41,0x08,0x8A,0xE4,0x8B,0x24,
+0x18,0x17,0x00,0xC3,0x00,0x10,0x01,0x9E,0xE1,0xFF,0x18,0x05,0xAE,0xD6,0xF8,0xFF,
+0x9E,0x52,0xE0,0x62,0x1F,0x19,0x1F,0x1A,0xE4,0x00,0x1E,0xE4,0x01,0x18,0x17,0x00,
+0x9E,0xE1,0xD7,0x17,0xFF,0xDE,0x1E,0xE0,0x9E,0xC3,0xA0,0x10,0x01,0x1A,0xE4,0x1F,
+0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x3D,0xF8,0x12,0xF7,0x00,0xFA,0xFD,0x05,0xAE,0xC3,
+0x20,0x10,0x01,0xF2,0xFD,0x05,0xAE,0xFF,0x39,0x0D,0x96,0x22,0xEC,0xB8,0xC2,0xE0,
+0x10,0x01,0xC3,0x80,0x10,0x01,0xF3,0x17,0x0A,0x4C,0x9B,0x40,0xC1,0x00,0x10,0x01,
+0xC1,0x40,0x10,0x01,0x1E,0xE4,0x20,0xFF,0x9C,0x08,0xD4,0x8B,0x7A,0xFD,0x08,0x0A,
+0xBC,0xFD,0x4A,0x0C,0xB6,0xE4,0x00,0x00,0xC7,0x9A,0xE0,0x8B,0x84,0x43,0x17,0xCC,
+0x0B,0x58,0x00,0x43,0x1C,0xBC,0x4F,0x7A,0x42,0x1B,0x58,0x21,0x1B,0x78,0x20,0x9E,
+0xE2,0x5E,0xE2,0x09,0x23,0xFF,0xA5,0x9B,0x08,0xE4,0x00,0x00,0x87,0xF3,0xDD,0x05,
+0xAE,0x23,0xC4,0x34,0x23,0xC8,0x68,0x43,0xDA,0x54,0xE4,0x00,0x00,0x0F,0x43,0xDA,
+0x44,0x14,0x7E,0x01,0x18,0x77,0x00,0x0B,0xDE,0x01,0xE4,0x00,0x00,0x21,0x0F,0xDC,
+0x02,0x4C,0x7E,0x82,0x4F,0xDE,0x42,0x18,0x77,0x00,0x1B,0xD7,0x01,0x9F,0x61,0x9F,
+0x42,0x5F,0x7B,0x04,0x9E,0xE2,0x9F,0x84,0xD7,0x1B,0xFE,0x2D,0x1E,0xF8,0x12,0x4E,
+0xF7,0x08,0x8E,0xE4,0x0B,0x59,0x00,0x4F,0x7A,0x42,0x1B,0x77,0x00,0x1E,0xF8,0x10,
+0x4E,0xF7,0x08,0x8E,0xE4,0x1B,0x57,0x05,0x1F,0x78,0x13,0x0B,0x59,0x02,0x4F,0x7B,
+0x08,0x4F,0x9A,0x42,0x8F,0x64,0x1B,0x9B,0x00,0x1B,0x57,0x07,0x1F,0x78,0x14,0x0B,
+0x59,0x04,0x4F,0x7B,0x08,0x4F,0x9A,0x42,0x8F,0x64,0x1B,0x9B,0x00,0x1B,0x57,0x09,
+0x0B,0x39,0x06,0x1F,0x18,0x15,0x4F,0x59,0x42,0x4F,0x18,0x08,0x8F,0x04,0x1B,0x58,
+0x00,0x1B,0x37,0x0B,0x0C,0x81,0x04,0x50,0x60,0x20,0xE7,0xFF,0xFA,0x74,0xC1,0x40,
+0x10,0x01,0xEA,0xEA,0x00,0xC1,0x0C,0x81,0x06,0x56,0xF7,0x02,0x22,0xE0,0x58,0x50,
+0x60,0x80,0xE7,0xFF,0xF3,0x3A,0xEA,0xEA,0x00,0xC1,0xC6,0xF7,0xFF,0xFD,0xEE,0xEA,
+0x00,0xC1,0x0D,0x41,0x0A,0x0D,0x21,0x0E,0x1C,0x21,0x10,0xE7,0xFF,0xFB,0xFB,0xC2,
+0xE0,0x10,0x01,0xC3,0x00,0x10,0x01,0xF0,0x77,0x0B,0x94,0xC3,0x20,0x10,0x01,0xC2,
+0xE0,0x10,0x01,0xFF,0x18,0x0B,0xA6,0xFE,0xF7,0x05,0x24,0xFF,0x39,0x05,0xB4,0x9B,
+0x60,0x98,0x81,0xE4,0x00,0x01,0x7D,0x0B,0x57,0x01,0xC3,0x4F,0xFF,0xE0,0x20,0x00,
+0x35,0x0B,0x57,0x03,0xC3,0x4F,0xFF,0xE4,0x20,0x00,0x49,0x0B,0x58,0x01,0x18,0x19,
+0x00,0x0F,0x57,0x01,0x0B,0x58,0x03,0x0F,0x57,0x03,0x13,0x59,0x00,0x23,0x41,0x22,
+0x0B,0x98,0x03,0x0B,0x57,0x03,0x43,0x5C,0xD5,0x5F,0x5A,0x06,0x4F,0xDA,0xFA,0x0B,
+0xB8,0x01,0x47,0x5E,0xD6,0x09,0x17,0x01,0x43,0x5A,0xF5,0x41,0x1D,0x45,0x5D,0x08,
+0x06,0x4F,0xC8,0xFA,0x45,0x1E,0x46,0x43,0xC8,0xF5,0x8F,0xDA,0x5F,0xC6,0x59,0x20,
+0x00,0x25,0x5F,0x43,0x31,0x20,0x01,0x11,0x18,0x99,0x00,0x0F,0xB7,0x01,0x0F,0x97,
+0x03,0xE4,0x00,0x00,0x71,0x0B,0x98,0x01,0x0B,0xD7,0x01,0x43,0xDC,0xF5,0x5F,0xDE,
+0x06,0x4F,0xBE,0xFA,0x47,0xDD,0xF6,0x0B,0x58,0x03,0x41,0x1E,0xED,0x0B,0xD7,0x03,
+0x43,0xDA,0xF5,0x5F,0xDE,0x06,0x4F,0xBE,0xFA,0x47,0xDD,0xF6,0x43,0xBD,0xF5,0xD7,
+0xA8,0x00,0x52,0x0F,0x97,0x01,0x0F,0x57,0x03,0x0B,0x57,0x01,0x9F,0x61,0x0F,0x58,
+0x01,0x5F,0x7B,0x00,0x0B,0x57,0x03,0x9F,0x21,0x0F,0x58,0x03,0x9E,0xE4,0x1F,0x18,
+0x30,0xD7,0x63,0xFA,0x36,0x85,0x29,0x1C,0x21,0xE0,0xC2,0xF4,0x00,0x01,0x0D,0x41,
+0x18,0x0D,0x61,0x14,0x0D,0x81,0x10,0x0D,0xA1,0x0C,0x0D,0xC1,0x08,0x0D,0xE1,0x04,
+0x0E,0x01,0x00,0x0D,0x21,0x1C,0xCB,0x17,0x3D,0xF9,0xC1,0x80,0x10,0x01,0xCA,0xF7,
+0x3D,0xF8,0xFD,0x8C,0x06,0x44,0xC3,0x20,0x10,0x01,0x0A,0x0C,0x01,0xC6,0x10,0x7F,
+0xFF,0x0E,0x0C,0x01,0x13,0x18,0x00,0xFB,0x19,0x00,0xA8,0x13,0x17,0x00,0xC2,0xE0,
+0x10,0x01,0xFB,0x17,0x05,0xAE,0xC1,0xA0,0x10,0x01,0xC1,0xC0,0x10,0x01,0xC3,0x40,
+0x10,0x01,0xC3,0x00,0x10,0x01,0x5C,0x63,0x00,0xFD,0xAD,0x05,0xB0,0xFD,0xCE,0x0C,
+0xB6,0xFD,0xE0,0x80,0x00,0xFD,0x5A,0x05,0x2C,0xFD,0x78,0x0B,0x94,0xD0,0x61,0x15,
+0x96,0x0B,0x6B,0x19,0x45,0xF0,0x7D,0xCA,0xE0,0x07,0xFF,0x0D,0xEC,0x01,0x43,0x77,
+0xDD,0x5F,0x7B,0x04,0x5F,0x3B,0x06,0x0F,0x2B,0x19,0x13,0x4B,0x00,0xD3,0x41,0x20,
+0x51,0x0B,0x2B,0x49,0x42,0xF7,0xCD,0x0E,0xEB,0x49,0x0A,0xEB,0x1D,0x42,0xE0,0xBD,
+0x0E,0xEB,0x1D,0x0A,0xEB,0x46,0x0B,0x2B,0x16,0x5E,0xF9,0x15,0x4B,0x61,0x01,0xCE,
+0xFB,0x00,0x30,0x8E,0xEB,0x4B,0x40,0x0A,0x0B,0x37,0x16,0x9A,0xE0,0x27,0x3C,0x50,
+0xC2,0xE0,0x10,0x01,0x5F,0x99,0x04,0xEA,0xF7,0x0A,0x53,0x5F,0x37,0x15,0x4A,0xFC,
+0xB8,0x0E,0xEB,0x13,0xCF,0x7B,0x00,0x30,0x9A,0xE0,0x8F,0x6B,0x0B,0x3B,0x18,0x27,
+0x3C,0x50,0xC2,0xE0,0x10,0x01,0x5F,0x79,0x04,0xEA,0xF7,0x0A,0x55,0x5F,0x37,0x15,
+0x4A,0xFB,0xB8,0x0E,0xEB,0x15,0xCE,0xFA,0x00,0x30,0x8E,0xEB,0x0B,0x37,0x16,0x9A,
+0xE0,0x27,0x3C,0x50,0xC2,0xE0,0x10,0x01,0x5F,0x19,0x04,0xEA,0xF7,0x0A,0x53,0x5F,
+0x37,0x15,0x4A,0xF8,0xB8,0x0E,0xEB,0x43,0xCF,0x5A,0x00,0x30,0x9A,0xE0,0x8F,0x4B,
+0x0B,0x1A,0x18,0x27,0x1C,0x50,0xC2,0xE0,0x10,0x01,0x5F,0x38,0x04,0xEA,0xF7,0x0A,
+0x55,0x5F,0x17,0x15,0x4A,0xF9,0xB8,0xC3,0x00,0x10,0x01,0xEE,0xF8,0x0B,0xD9,0xE4,
+0x00,0x00,0x5D,0xC2,0xE0,0x10,0x01,0x5F,0x9A,0x04,0xEA,0xF7,0x0A,0x53,0x5F,0x57,
+0x15,0x4A,0xFC,0xB8,0x0E,0xEB,0x13,0x9A,0xE0,0x27,0x3C,0x44,0xC2,0xE0,0x10,0x01,
+0xEA,0xF7,0x0A,0x55,0x5F,0x37,0x1D,0x4A,0xF7,0xD8,0x0E,0xEB,0x15,0xE7,0xFF,0xFB,
+0x44,0xC2,0xE0,0x10,0x01,0x13,0x0B,0x00,0xFE,0xF7,0x0B,0xA8,0x9B,0x20,0x9B,0x4A,
+0xFF,0x60,0x07,0xF5,0xE4,0x00,0x00,0x75,0x0B,0x97,0xFF,0xD3,0x89,0x00,0x3D,0x0F,
+0x57,0xFF,0x0B,0x97,0xFF,0xC3,0x80,0xFE,0xAA,0x20,0x00,0x19,0x0F,0x77,0xFF,0x0B,
+0x97,0x01,0xD3,0x89,0x00,0x3D,0x0F,0x57,0x01,0x0B,0x97,0x01,0xC3,0x80,0xFE,0xAA,
+0x20,0x00,0x19,0x0F,0x77,0x01,0x9F,0x21,0x1E,0xF7,0x30,0x5F,0x39,0x04,0xD7,0x19,
+0xFE,0x55,0x27,0x04,0x7D,0x0B,0x2B,0x43,0x0A,0xEB,0x13,0x42,0xF9,0xBD,0x0B,0x2B,
+0x45,0x0E,0xEB,0x1B,0x0A,0xEB,0x15,0x42,0xF9,0xBD,0x0E,0xEB,0x1D,0xE4,0x00,0x00,
+0x15,0x0C,0x0B,0x1B,0x0C,0x0B,0x1D,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x00,0xA8,0x22,
+0xE1,0x9E,0x52,0xE0,0x52,0x0B,0x2B,0x13,0x1A,0xEA,0x00,0x4F,0x79,0x41,0x0A,0xEB,
+0x15,0x4F,0x7B,0x20,0x4F,0x57,0x41,0x1B,0x2A,0x02,0x57,0x5A,0x0F,0x1A,0xEA,0x03,
+0x47,0x5B,0xD5,0x1B,0x4A,0x01,0x27,0x04,0xA1,0x0B,0x0B,0x1A,0x0A,0xEB,0x1C,0x4F,
+0x38,0x42,0x4F,0x57,0x42,0x5F,0x39,0x04,0x57,0x5A,0x0F,0x4F,0x39,0x20,0x1B,0x0A,
+0x05,0x47,0x39,0xD5,0x1A,0xEA,0x06,0x1B,0x2A,0x04,0xE4,0x00,0x00,0x1B,0x18,0x0A,
+0x04,0x18,0x0A,0x05,0x18,0x0A,0x06,0x88,0x6A,0x98,0x87,0xE7,0xFF,0xF5,0x44,0x18,
+0x6A,0x07,0xE4,0x00,0x01,0x81,0x8A,0xEA,0x18,0x17,0x00,0xC3,0x20,0x10,0x01,0x9E,
+0xE1,0xFF,0x39,0x05,0xAE,0xD6,0xF9,0xFF,0x9E,0x52,0xE0,0x62,0x1A,0xEA,0x00,0x0A,
+0xEB,0x13,0x4F,0x37,0x41,0x1A,0xEA,0x02,0x0A,0xEB,0x15,0x1B,0x2A,0x01,0x1A,0xEA,
+0x04,0x4F,0x37,0x41,0x56,0xF8,0x01,0x4F,0x18,0x20,0x52,0xF7,0x20,0x53,0x18,0x02,
+0x1A,0xEA,0x11,0x1B,0x0A,0x12,0x0A,0xEB,0x1A,0x4F,0x17,0x42,0x1A,0xEA,0x0E,0x1B,
+0x0A,0x0D,0x0A,0xEB,0x1C,0x4F,0x17,0x42,0x1A,0xEA,0x10,0x1B,0x0A,0x0F,0x1B,0x2A,
+0x03,0x88,0x6A,0x50,0x80,0x1F,0xE7,0xFF,0xF4,0x6E,0xC3,0x00,0x10,0x01,0x18,0x6A,
+0x1F,0xC3,0x60,0x10,0x01,0x1D,0x4A,0x20,0xFF,0x18,0x08,0xD4,0x9A,0xE0,0xC3,0x40,
+0x10,0x01,0xFF,0x7B,0x0A,0xBC,0xF3,0x3A,0x05,0xAE,0x23,0x24,0x34,0x23,0x28,0x68,
+0x43,0x37,0x74,0xE4,0x00,0x00,0x0F,0x43,0x37,0xDC,0x17,0x99,0x01,0x1B,0x8A,0x00,
+0x0B,0x39,0x01,0xE4,0x00,0x00,0x21,0x0F,0x38,0x02,0x4F,0x99,0x82,0x4F,0x39,0x42,
+0x1B,0x8A,0x00,0x1B,0x2A,0x01,0x9E,0xE2,0x9D,0x42,0x9F,0x04,0x5E,0xEB,0xC9,0x23,
+0xFF,0x1D,0x0A,0xEC,0x00,0xD2,0xFF,0x0C,0x7C,0x9A,0xE1,0xE4,0x00,0x02,0xEB,0xD0,
+0x60,0x05,0x3E,0xC3,0x60,0x10,0x01,0xFE,0xE0,0x7F,0xFF,0xFF,0x1B,0x05,0x24,0xEE,
+0xFB,0x05,0x25,0x0E,0xF8,0x03,0xC3,0x60,0x10,0x01,0x0E,0xF8,0x05,0xFF,0x9B,0x05,
+0xB4,0x0E,0xF8,0x07,0xF8,0x1B,0x05,0xB4,0x18,0x1C,0x01,0xF2,0xF9,0x00,0xA8,0x22,
+0xE0,0xB2,0x52,0xE0,0x52,0x1A,0xEA,0x00,0x9A,0xFF,0x88,0x6A,0x1A,0xEA,0x01,0x1A,
+0xEA,0x02,0x1A,0xEA,0x03,0x1A,0xEA,0x04,0x1A,0xEA,0x05,0x1A,0xEA,0x06,0x98,0x87,
+0xE7,0xFF,0xF2,0xFA,0x18,0x6A,0x07,0xE4,0x00,0x00,0x7F,0x8A,0xEA,0x18,0x17,0x00,
+0xC3,0x00,0x10,0x01,0x9E,0xE1,0xFF,0x18,0x05,0xAE,0xD6,0xF8,0xFF,0x9E,0x52,0xE0,
+0x62,0x9B,0x1F,0x1A,0xEA,0x00,0x1E,0xEA,0x01,0x1B,0x17,0x00,0xC3,0x20,0x10,0x01,
+0x9E,0xE1,0xFF,0x39,0x05,0x4B,0xD6,0xF9,0xFF,0x9E,0x88,0x6A,0x50,0x80,0x1F,0xE7,
+0xFF,0xF2,0x7C,0x18,0x6A,0x1F,0x0A,0xEC,0x01,0x0C,0x0D,0x00,0x45,0xEF,0xBD,0x0D,
+0xEC,0x01,0xE4,0x00,0x01,0xC5,0xD0,0x62,0x06,0xF6,0xF2,0xF9,0x00,0xA8,0x22,0xE0,
+0xD2,0x52,0xE0,0x52,0xC3,0x00,0x10,0x01,0x1A,0xEA,0x00,0xEB,0x18,0x0D,0x83,0x9A,
+0xFF,0x1B,0x0A,0x05,0x1A,0xEA,0x01,0x1A,0xEA,0x02,0x1A,0xEA,0x03,0x1A,0xEA,0x04,
+0x1A,0xEA,0x06,0x88,0x6A,0x98,0x87,0xE7,0xFF,0xF1,0xEC,0x18,0x6A,0x07,0xE4,0x00,
+0x01,0x15,0x8A,0xEA,0x18,0x17,0x00,0xC3,0x00,0x10,0x01,0x9E,0xE1,0xFF,0x18,0x05,
+0xAE,0xD6,0xF8,0xFF,0x9E,0x52,0xE0,0x62,0x1A,0xEA,0x00,0x0A,0xEB,0x13,0x4F,0x17,
+0x41,0x1A,0xEA,0x02,0x1B,0x0A,0x01,0x0A,0xEB,0x15,0x4F,0x17,0x41,0x1A,0xEA,0x04,
+0x1B,0x0A,0x03,0x12,0xEB,0x00,0x57,0x17,0x01,0x4E,0xF7,0x20,0x53,0x18,0x20,0x52,
+0xF7,0x02,0x1B,0x0A,0x11,0x1A,0xEA,0x12,0x0A,0xEB,0x1A,0x4F,0x17,0x42,0x1A,0xEA,
+0x0E,0x1B,0x0A,0x0D,0x0A,0xEB,0x1C,0x4F,0x17,0x42,0x1A,0xEA,0x10,0x1B,0x0A,0x0F,
+0x88,0x6A,0x50,0x80,0x1F,0xE7,0xFF,0xF1,0x10,0x9A,0xE0,0x18,0x6A,0x1F,0x43,0x17,
+0x74,0x0B,0x38,0x00,0x43,0x0A,0xBC,0x4F,0x59,0x42,0x1B,0x38,0x21,0x1B,0x58,0x20,
+0x9E,0xE2,0x5E,0xEB,0xC9,0x23,0xFF,0xA5,0x45,0xF0,0x7D,0x9A,0xE2,0x0D,0xEC,0x01,
+0x0E,0xED,0x00,0xE4,0x00,0x00,0x23,0x0B,0x4B,0x16,0x9A,0xE0,0xD3,0x5F,0xE5,0xC0,
+0xE7,0xFF,0xF9,0x47,0x0E,0x01,0x02,0x0D,0xE1,0x06,0x0D,0xC1,0x0A,0x0D,0xA1,0x0E,
+0x0D,0x81,0x12,0x0D,0x61,0x16,0x0D,0x41,0x1A,0x0D,0x21,0x1E,0x1C,0x21,0x20,0x85,
+0x29,0x1C,0x21,0xD0,0x0D,0x41,0x28,0x0D,0x81,0x20,0x5D,0x43,0x00,0x5D,0x84,0x00,
+0x42,0xEC,0x55,0x9E,0xE1,0x5E,0xF7,0x00,0x57,0x17,0x03,0x4E,0xF7,0x11,0x5F,0x00,
+0x09,0x0D,0x61,0x24,0x0D,0xA1,0x1C,0x0D,0xC1,0x18,0x49,0xA1,0x01,0x0D,0x21,0x2C,
+0x8D,0xB7,0xC1,0xD8,0x00,0x21,0xE4,0x00,0x76,0xD8,0x99,0x60,0xFD,0xCE,0xBA,0x17,
+0xE4,0x00,0x00,0xE3,0x88,0x61,0x50,0x80,0x22,0x50,0xA0,0x18,0xE7,0xFF,0xC5,0x42,
+0x9A,0xE4,0x43,0x0E,0x54,0x13,0x58,0x00,0x1F,0x01,0x18,0x4F,0x3A,0x09,0x57,0x5A,
+0x01,0x8F,0x19,0x17,0x18,0xE8,0x5F,0x40,0x01,0x4B,0x50,0x7B,0x47,0x5A,0xC4,0x5F,
+0x17,0x02,0x20,0x00,0x25,0x4F,0x17,0x20,0x5F,0x18,0x02,0x1F,0x61,0x18,0x47,0x18,
+0xD5,0x8F,0x3B,0x1B,0x19,0xE8,0x9D,0x41,0x5D,0x4A,0x00,0xD5,0x4C,0x00,0xE1,0x06,
+0xE0,0x81,0xCC,0x6B,0x00,0x18,0x88,0x81,0x8C,0x77,0x50,0xA0,0x18,0x9D,0x61,0xE7,
+0xFF,0xC5,0x7C,0xE4,0x00,0x00,0x1D,0x9E,0xE1,0xD2,0xE8,0xFD,0x4E,0xE7,0xFF,0xFF,
+0xC5,0x5E,0xEB,0x00,0xD5,0xB7,0xFC,0x85,0xE4,0x00,0x75,0xFA,0x0D,0x21,0x2E,0x0D,
+0xC1,0x1A,0x0D,0xA1,0x1E,0x0D,0x81,0x22,0x0D,0x61,0x26,0x0D,0x41,0x2A,0x1C,0x21,
+0x30,0x85,0x29,0xC2,0xE0,0x10,0x01,0xEC,0x77,0x01,0x56,0x85,0x29,0xC2,0xE0,0x10,
+0x01,0xEC,0x77,0x06,0x0E,0x85,0x29,0x1C,0x21,0xB8,0x0D,0x21,0x44,0x0D,0x41,0x40,
+0x0D,0x61,0x3C,0x0D,0x81,0x38,0x0D,0xA1,0x34,0x0D,0xC1,0x30,0x0D,0xE1,0x2C,0x0E,
+0x01,0x28,0x0E,0x21,0x24,0xD0,0x69,0x14,0x1D,0x4F,0x03,0x10,0xC2,0xF8,0x00,0x21,
+0xC1,0x78,0x00,0x21,0xFE,0xF7,0xB9,0x88,0x05,0x80,0x81,0x8E,0xF8,0xFD,0x6B,0xBA,
+0x17,0x0E,0xF7,0x02,0x86,0xE9,0x1C,0x83,0x01,0xCC,0x63,0x00,0x16,0xCC,0x84,0x00,
+0x16,0x9C,0x9F,0xE7,0xFF,0xFD,0x9C,0xE4,0x00,0x04,0xA3,0x0C,0x61,0x04,0xE4,0x00,
+0x74,0xC8,0x0C,0x61,0x06,0xC3,0x00,0x10,0x01,0x9C,0x7E,0xFF,0x18,0x06,0x5A,0x5C,
+0x63,0x00,0xC3,0x20,0x10,0x01,0xCE,0x23,0x00,0x0B,0xCE,0xE3,0x00,0x16,0x8F,0x03,
+0xFF,0x39,0x06,0x46,0x13,0x18,0x00,0x8C,0x79,0x41,0xB8,0x8C,0x11,0xE3,0x00,0x4D,
+0xAD,0x08,0x8E,0x2F,0x4F,0x18,0x08,0x4E,0x31,0x08,0x9F,0x01,0x8E,0x2B,0x8F,0x17,
+0x4D,0xEF,0x08,0x8D,0xAB,0x8D,0xF7,0x99,0x40,0x8D,0xEB,0x52,0x00,0x40,0x51,0xC0,
+0x50,0x8D,0x78,0x50,0x80,0x22,0x50,0xA0,0x18,0x1C,0x61,0x08,0xE7,0xFF,0xC2,0xA2,
+0x42,0xF1,0x54,0x1F,0x21,0x20,0x13,0x17,0xFE,0x4E,0xF8,0x09,0x57,0x18,0x01,0x8E,
+0xF9,0x17,0x37,0xE8,0x5F,0x00,0x01,0x4B,0x10,0x7B,0x47,0x18,0xCC,0x4B,0x24,0x81,
+0x47,0x19,0xC5,0x1B,0x17,0xE8,0x42,0xEF,0x54,0x1F,0x61,0x20,0x13,0x17,0xFF,0x4E,
+0xF8,0x09,0x57,0x18,0x01,0x8E,0xFB,0x17,0x37,0xE8,0x5F,0x00,0x01,0x4B,0x10,0x7B,
+0x47,0x18,0xCC,0x4B,0x25,0x71,0x47,0x19,0xC5,0x1B,0x17,0xE8,0x13,0x0D,0x00,0x4E,
+0xF8,0x09,0x57,0x18,0x01,0x5F,0x00,0x01,0x4B,0x10,0x7B,0x8E,0xFB,0x17,0x37,0xE8,
+0x47,0x38,0xCC,0x53,0x00,0x60,0x4B,0x06,0xC1,0x47,0x18,0xCD,0x1B,0x17,0xE8,0x13,
+0x0B,0x00,0x4E,0xF8,0x09,0x57,0x18,0x01,0x5F,0x00,0x01,0x4B,0x10,0x7B,0x8E,0xFB,
+0x17,0x37,0xE8,0x47,0x38,0xCC,0x53,0x00,0x70,0x4B,0x07,0xC1,0x47,0x18,0xCD,0xCC,
+0x6A,0x00,0x0C,0x1B,0x17,0xE8,0x8C,0x6C,0x1C,0x81,0x08,0x50,0xA0,0x18,0x9D,0x42,
+0xE7,0xFF,0xC2,0x3A,0xD1,0x46,0xFA,0x7E,0xE4,0x00,0x01,0xA9,0xE4,0x00,0x72,0xAC,
+0x1C,0x61,0x08,0x50,0x80,0x22,0x50,0xA0,0x18,0xE7,0xFF,0xC1,0x28,0xC3,0x78,0x00,
+0x21,0x9A,0xE4,0xFF,0x7B,0xBA,0x14,0xD2,0xE7,0x01,0xC2,0x43,0x1B,0xBC,0x13,0x58,
+0xFC,0x1F,0x01,0x20,0x4F,0x3A,0x09,0x57,0x5A,0x01,0x8F,0x19,0x17,0x18,0xE8,0x5F,
+0x40,0x01,0x4B,0x50,0x7B,0x47,0x5A,0xC4,0x5F,0x17,0x02,0x20,0x00,0x25,0x4F,0x17,
+0x20,0x5F,0x18,0x02,0x1F,0x81,0x20,0x47,0x18,0xD5,0x8F,0x3C,0x1B,0x19,0xE8,0x9E,
+0xE1,0xD2,0xE8,0xFE,0x36,0xE4,0x00,0x00,0xD5,0xE4,0x00,0x71,0xF2,0x1C,0x61,0x08,
+0x50,0x80,0x22,0x50,0xA0,0x18,0xE7,0xFF,0xC0,0x6E,0xE4,0x00,0x00,0x9F,0x43,0x0B,
+0xBC,0x13,0x58,0xFC,0x1F,0x01,0x20,0x4F,0x3A,0x09,0x57,0x5A,0x01,0x8F,0x19,0x13,
+0x18,0xE8,0x5F,0x40,0x01,0x4B,0x50,0x7B,0x47,0x5A,0xC4,0x5F,0x17,0x02,0x5F,0x5A,
+0x02,0x20,0x00,0x25,0x4F,0x17,0x20,0x5F,0x18,0x02,0x1F,0x61,0x20,0x47,0x18,0xD5,
+0x8F,0x3B,0x1B,0x19,0xE8,0x9E,0xE1,0xD2,0xE8,0xFE,0x3E,0xC3,0x98,0x00,0x21,0x9D,
+0x64,0xFF,0x9C,0xBA,0x43,0xD5,0x7C,0x00,0x52,0x9A,0xE4,0xE7,0xFF,0xFF,0x67,0x04,
+0x60,0x81,0x1C,0x81,0x08,0x50,0xA0,0x18,0xE7,0xFF,0xC0,0x8A,0xE4,0x00,0x71,0x32,
+0xE4,0x00,0x00,0xD1,0xE4,0x00,0x70,0xFC,0x99,0x40,0x1C,0x61,0x08,0x50,0x80,0x22,
+0x50,0xA0,0x18,0xE7,0xFF,0xBF,0x74,0x5E,0xEA,0x00,0x22,0xE0,0xD6,0x12,0xE1,0x0C,
+0x56,0xF7,0x0F,0x52,0xF7,0x40,0x13,0x01,0x15,0x1A,0xE1,0x0C,0x9A,0xF0,0x47,0x17,
+0xC4,0x53,0x18,0x05,0x1B,0x01,0x15,0x13,0x01,0x10,0x46,0xF7,0xC4,0x52,0xF7,0x06,
+0x1A,0xE1,0x10,0x12,0xE1,0x12,0x56,0xF7,0x0F,0x52,0xF7,0x70,0x1A,0xE1,0x12,0xCC,
+0x6A,0x00,0x18,0x1C,0x81,0x08,0x8C,0x6C,0x50,0xA0,0x18,0x9D,0x41,0xE7,0xFF,0xBF,
+0xC0,0x21,0x4A,0x6C,0xE7,0xFF,0xFF,0x4D,0x0E,0x21,0x26,0x0E,0x01,0x2A,0x0D,0xE1,
+0x2E,0x0D,0xC1,0x32,0x0D,0xA1,0x36,0x0D,0x81,0x3A,0x0D,0x61,0x3E,0x0D,0x41,0x42,
+0x0D,0x21,0x46,0x1C,0x21,0x48,0x85,0x29,0x1C,0x21,0xE8,0x0D,0x61,0x0C,0x0D,0x21,
+0x14,0x0D,0x41,0x10,0x0D,0x81,0x08,0x0D,0xA1,0x04,0x89,0x63,0xD0,0x69,0x0C,0xF5,
+0x4F,0x03,0x10,0xC2,0xF8,0x00,0x21,0xFE,0xF7,0xB9,0xB0,0x8E,0xF8,0x0E,0xF7,0x02,
+0x86,0xE9,0xCD,0x43,0x00,0x16,0xC1,0xA0,0x10,0x01,0x99,0x80,0xFD,0xAD,0x06,0x10,
+0x8D,0x4D,0x13,0x4A,0x01,0x13,0x2A,0x00,0x13,0x0A,0x03,0x12,0xEA,0x02,0x4C,0x9A,
+0xC0,0x4C,0xB8,0xC0,0x4F,0x5A,0x80,0x4F,0x18,0x80,0x8C,0x9A,0x8C,0xB8,0x8C,0x99,
+0x8C,0xB7,0x4F,0x39,0x40,0x4E,0xF7,0x40,0x88,0x6C,0x8C,0x99,0x8C,0xB7,0x9D,0x81,
+0xE4,0x00,0x71,0xA8,0x5D,0x8C,0x00,0x9D,0x44,0xD1,0x85,0xFE,0x4E,0x98,0x65,0x98,
+0x80,0x98,0xA0,0xCD,0x4B,0x00,0x16,0x8D,0x4D,0x10,0xCA,0x14,0xE4,0x00,0x71,0xD8,
+0x98,0x65,0x98,0x80,0x98,0xA1,0x10,0xCA,0x14,0xE4,0x00,0x71,0xBE,0x98,0x65,0x98,
+0x81,0x98,0xA0,0x10,0xCA,0x15,0xE4,0x00,0x71,0xA4,0x98,0x65,0x98,0x81,0x98,0xA1,
+0x10,0xCA,0x15,0xE4,0x00,0x71,0x8A,0x98,0x65,0x98,0x82,0x98,0xA0,0x98,0xC0,0xE4,
+0x00,0x71,0x72,0x98,0x65,0x98,0x82,0x98,0xA1,0x98,0xC0,0xE4,0x00,0x71,0x5A,0x98,
+0x65,0x98,0x83,0x98,0xA0,0x98,0xC0,0xE4,0x00,0x71,0x42,0x98,0x65,0xE4,0x00,0x00,
+0x83,0xC1,0xA0,0x10,0x01,0x99,0x40,0xFD,0xAD,0x05,0xC4,0x5D,0x8A,0x00,0x41,0x6D,
+0x54,0x98,0x60,0x88,0x8C,0x98,0xA0,0x10,0xCB,0x00,0xE4,0x00,0x70,0xFC,0x98,0x60,
+0x88,0x8C,0x98,0xA1,0x10,0xCB,0x00,0x9D,0x41,0xE4,0x00,0x70,0xDE,0x21,0x4F,0x7A,
+0x98,0x60,0x98,0x83,0x98,0xA0,0x98,0xC0,0xE4,0x00,0x70,0xC0,0x98,0x60,0x0D,0xA1,
+0x06,0x0D,0x81,0x0A,0x0D,0x61,0x0E,0x0D,0x41,0x12,0x0D,0x21,0x16,0x98,0x83,0x98,
+0xA1,0x98,0xC0,0x1C,0x21,0x18,0xE4,0x00,0x70,0x85,0xC3,0x00,0x10,0x01,0x0D,0xA1,
+0x06,0xFE,0xF8,0x06,0x04,0xF3,0x38,0x06,0x04,0x13,0x57,0x01,0x13,0x17,0x03,0x4C,
+0x9A,0xC0,0x12,0xF7,0x02,0x4C,0xB8,0xC0,0x4F,0x5A,0x80,0x4F,0x18,0x80,0x8C,0x9A,
+0x8C,0xB8,0x8C,0x99,0x8C,0xB7,0x4F,0x39,0x40,0x4E,0xF7,0x40,0x0D,0x81,0x0A,0x0D,
+0x61,0x0E,0x0D,0x41,0x12,0x0D,0x21,0x16,0x98,0x60,0x8C,0x99,0x8C,0xB7,0x1C,0x21,
+0x18,0xE4,0x00,0x6F,0x87,0xC1,0x60,0x10,0x01,0x99,0x40,0xFD,0x6B,0x05,0xB6,0x4D,
+0xAA,0x11,0x55,0x8A,0x03,0x10,0xCB,0x00,0x88,0x6D,0x88,0x8C,0x98,0xA0,0xE4,0x00,
+0x6F,0xB4,0x10,0xCB,0x00,0x88,0x6D,0x88,0x8C,0x98,0xA1,0x9D,0x41,0xE4,0x00,0x6F,
+0x96,0x5D,0x4A,0x00,0x9D,0x61,0xD1,0x48,0xFE,0xCE,0x0D,0xA1,0x06,0x0D,0x81,0x0A,
+0x0D,0x61,0x0E,0x0D,0x41,0x12,0x0D,0x21,0x16,0x1C,0x21,0x18,0x85,0x29,0x1C,0x21,
+0x88,0x9A,0xE0,0x1F,0x01,0x07,0x8F,0x17,0x9E,0xE1,0x1A,0xF8,0x00,0xD2,0xE9,0xFF,
+0xB6,0x9A,0xE0,0x0B,0x43,0x03,0x0B,0x23,0x01,0x1F,0x01,0x36,0x8F,0x3A,0x8F,0x17,
+0x0F,0x38,0x01,0x9E,0xE2,0x9C,0x64,0x5E,0xE2,0xC9,0x23,0xFF,0xA5,0x0A,0xE1,0x37,
+0x4E,0xF7,0x08,0x0E,0xE1,0x37,0x0A,0xE1,0x4B,0x4E,0xF7,0x08,0x0E,0xE1,0x4B,0x9A,
+0xE0,0x1F,0x01,0x36,0x1F,0x21,0x22,0x8F,0x17,0x8F,0x37,0x0B,0x58,0x03,0x0B,0x18,
+0x01,0x43,0x1A,0xC5,0x0F,0x19,0x01,0x9E,0xE2,0x5E,0xE2,0x89,0x23,0xFF,0x95,0x9A,
+0xE0,0x1F,0x41,0x22,0x8F,0x57,0x0B,0x3A,0x02,0x4F,0x19,0xFA,0x47,0x38,0xCE,0x1F,
+0x61,0x10,0x43,0x99,0xC5,0x8F,0x77,0x0B,0x3A,0x00,0x4F,0x19,0xFA,0x47,0x38,0xCE,
+0x43,0x19,0xC5,0x8F,0x1C,0x0F,0x1B,0x01,0x9E,0xE2,0x5E,0xE2,0x49,0x23,0xFF,0x51,
+0xE4,0x00,0x00,0x85,0x1F,0xA1,0x78,0x4F,0x78,0x08,0x0B,0x99,0x00,0x8F,0x7D,0x0B,
+0xBB,0x98,0xD7,0x9D,0x00,0xD8,0x0F,0xB9,0x01,0x0F,0x9B,0x99,0x13,0x9A,0x00,0x1F,
+0x61,0x78,0x8F,0x78,0x13,0xBB,0x8F,0x1B,0xBA,0x00,0x1B,0x9B,0x8F,0x9F,0x01,0x5F,
+0x18,0x00,0xD3,0x09,0xFE,0x96,0x9E,0xE1,0x9F,0x22,0xD2,0xE9,0x00,0x6E,0xE4,0x00,
+0x00,0x2B,0x1F,0x21,0x10,0x9A,0xE0,0x1F,0x41,0x07,0x5F,0x17,0x00,0x8F,0x57,0xE7,
+0xFF,0xFF,0x6B,0x9B,0x21,0x1E,0xE1,0x36,0x1F,0x41,0x50,0x8B,0x19,0x0B,0x97,0x00,
+0x0B,0x77,0x02,0x8F,0x7C,0x0B,0x97,0x04,0x8F,0x7C,0x0F,0x7A,0x00,0x4F,0x98,0x10,
+0x1F,0xA1,0x78,0x9E,0xE2,0x8F,0x9D,0x9F,0x44,0x0F,0x9C,0xD6,0x5F,0x9B,0x15,0x4B,
+0x18,0xC8,0x9F,0x21,0x5F,0x39,0x00,0xD3,0x2A,0xFE,0xB6,0x1B,0x04,0x00,0x12,0xE1,
+0x0F,0x1C,0x21,0x78,0x1A,0xE5,0x00,0x85,0x29,0x1C,0x21,0xC8,0x0D,0x41,0x30,0x5D,
+0x43,0x00,0xCF,0x0A,0x00,0x2C,0xCE,0xEA,0x00,0x58,0x0D,0x21,0x34,0x1C,0x61,0x04,
+0x50,0xC0,0x16,0xC0,0x80,0x10,0x01,0xC0,0xA0,0x10,0x01,0xFC,0x84,0x0B,0x1A,0xFC,
+0xA5,0x09,0x9C,0x8C,0x98,0x8C,0xB7,0xE4,0x00,0x23,0x58,0x1C,0x61,0x04,0xC0,0x80,
+0x10,0x01,0xC0,0xA0,0x10,0x01,0xFC,0x84,0x06,0x5A,0xFC,0xA5,0x06,0x46,0x8C,0x8A,
+0x8C,0xAA,0xE7,0xFF,0xFD,0x18,0x0D,0x21,0x36,0x0D,0x41,0x32,0x1C,0x21,0x38,0x85,
+0x29,0x1C,0x21,0xE0,0x0D,0xC1,0x08,0x0D,0x21,0x1C,0x0D,0x41,0x18,0x0D,0x61,0x14,
+0x0D,0x81,0x10,0x0D,0xA1,0x0C,0x0D,0xE1,0x04,0x89,0xC4,0xD0,0x66,0x00,0xB5,0xC2,
+0xF8,0x00,0x21,0xFE,0xF7,0xB9,0xD8,0x4C,0x63,0x10,0x8C,0x77,0x0E,0xE3,0x02,0x86,
+0xE9,0x99,0xEB,0xC9,0x80,0x32,0x0B,0xE4,0x00,0x02,0x05,0xD0,0x81,0x04,0x61,0x1E,
+0xE4,0xFE,0xD2,0xE1,0x04,0x79,0xD0,0x87,0x04,0xDA,0x5C,0x81,0x01,0xCA,0xE0,0x32,
+0x0B,0x49,0xE2,0x5B,0xC9,0x80,0x10,0x06,0xE4,0x00,0x00,0xB7,0xD0,0x81,0x04,0xB9,
+0x1E,0xE4,0xFE,0xD2,0xE1,0x04,0xD1,0xD0,0x87,0x05,0x32,0x5C,0x81,0x01,0xCA,0xE0,
+0x32,0x0B,0xC9,0x80,0x10,0x06,0x99,0xA0,0x49,0xE2,0x5B,0x49,0x8C,0xB8,0x89,0x4D,
+0xE4,0x00,0x00,0x75,0xD0,0x81,0x04,0xD9,0x5C,0x80,0xE1,0xCA,0xE0,0x32,0x0B,0xC9,
+0x80,0x08,0x03,0x49,0xE1,0x5B,0x49,0x8C,0xB8,0xE4,0x00,0x01,0x19,0xD0,0x81,0x04,
+0x81,0xD0,0x87,0x04,0x92,0x5C,0x81,0x01,0xCA,0xE0,0x32,0x0B,0x49,0xE2,0x5B,0xC9,
+0x80,0x20,0x09,0x49,0x8C,0xB8,0x99,0xA2,0x99,0x41,0x49,0x61,0x01,0xE4,0x00,0x01,
+0x05,0x99,0xE1,0xE4,0x00,0x00,0xBD,0x99,0xE6,0xC9,0x80,0x32,0x0B,0xE4,0x00,0x00,
+0x35,0x99,0xE3,0xC9,0x80,0x20,0x09,0x99,0xA2,0x99,0x41,0x99,0x63,0xE4,0x00,0x00,
+0x21,0x99,0xE1,0xC9,0x80,0x10,0x06,0x99,0xA2,0x99,0x41,0x99,0x60,0x98,0x60,0xE4,
+0x00,0x00,0xA5,0x99,0xE6,0xC9,0x80,0x32,0x0B,0xE4,0x00,0x00,0x35,0x99,0xA0,0x99,
+0xE3,0xC9,0x80,0x20,0x09,0x89,0x4D,0x99,0x63,0xE4,0x00,0x00,0x21,0x99,0xE1,0xC9,
+0x80,0x10,0x06,0x99,0xA0,0x99,0x60,0x89,0x4D,0x98,0x61,0xE4,0x00,0x00,0x4D,0x99,
+0xE6,0xC9,0x80,0x08,0x03,0x99,0xA0,0x89,0x4D,0xE4,0x00,0x00,0x29,0x99,0xE6,0xE4,
+0x00,0x00,0x0D,0x99,0xE1,0xC9,0x80,0x10,0x06,0x99,0xA2,0x99,0x41,0x99,0x60,0x98,
+0x63,0xE7,0xFF,0xAA,0x76,0x88,0x6A,0x88,0x8D,0xE4,0x00,0x7F,0x1A,0x88,0x6A,0x88,
+0x8C,0xE4,0x00,0x6A,0x8E,0x21,0xA0,0x3E,0x88,0x6A,0x88,0x8C,0xE4,0x00,0x7A,0xF4,
+0xE4,0x00,0x00,0x1F,0x21,0xA0,0x2C,0x88,0x6A,0x88,0x8C,0xE4,0x00,0x7C,0x50,0x88,
+0x6A,0x05,0x80,0xFF,0xC9,0x8C,0xFF,0xFF,0x88,0x8C,0xE4,0x00,0x6D,0x14,0x88,0x8C,
+0x88,0x6A,0xE4,0x00,0x6A,0x9C,0x98,0x62,0xE4,0x00,0x68,0x1C,0xC2,0xE0,0x10,0x01,
+0x98,0x60,0xEC,0x17,0x05,0xCC,0xC1,0xA0,0x10,0x01,0xEC,0x0D,0x06,0x08,0xE4,0x00,
+0x74,0x58,0x98,0x60,0xE4,0x00,0x6C,0x58,0x98,0x60,0x88,0x8C,0xE4,0x00,0x6B,0x48,
+0x88,0x6F,0xE4,0x00,0x67,0x74,0x98,0x60,0xE4,0x00,0x6D,0x98,0x21,0x64,0x5E,0xED,
+0x6D,0x06,0x08,0x98,0x61,0xE4,0x00,0x74,0x0A,0x98,0x63,0xE4,0x00,0x6C,0x0A,0xE4,
+0x00,0x00,0x2B,0x21,0x6C,0x46,0x98,0x61,0x88,0x8C,0xE4,0x00,0x6A,0xEC,0x98,0x61,
+0xE4,0x00,0x6D,0x48,0xE4,0x00,0x71,0x2C,0x1C,0x63,0x13,0x5C,0x83,0x00,0x88,0x6A,
+0x5C,0x82,0x93,0x20,0x00,0x1B,0x50,0x80,0x14,0xE4,0x00,0x6E,0x4A,0x88,0x6A,0x98,
+0x8C,0xE4,0x00,0x6D,0x6C,0xC2,0xE0,0x10,0x01,0x88,0x6E,0xED,0xD7,0x06,0x0C,0xE7,
+0xFF,0xEF,0xD0,0x88,0x6E,0x0D,0xE1,0x06,0x0D,0xC1,0x0A,0x0D,0xA1,0x0E,0x0D,0x81,
+0x12,0x0D,0x61,0x16,0x0D,0x41,0x1A,0x0D,0x21,0x1E,0x1C,0x21,0x20,0xE7,0xFF,0xF5,
+0x17,0xC2,0xE0,0x10,0x01,0x9C,0x38,0xEC,0x77,0x01,0x54,0x0D,0x41,0x00,0x0D,0x21,
+0x04,0x89,0x43,0xE7,0xFF,0xFB,0x7C,0x25,0x44,0xD3,0x99,0x40,0x88,0x6A,0x98,0x82,
+0x9D,0x41,0xE4,0x00,0x73,0x4A,0x5D,0x4A,0x00,0xD1,0x44,0xFF,0x9E,0xE7,0xFF,0xDC,
+0x5E,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x00,0xCE,0x0C,0x77,0x0B,0xC2,0xE0,0x10,0x01,
+0xEB,0x17,0x04,0x93,0x53,0x18,0x20,0xEF,0x17,0x04,0x93,0x0D,0x41,0x02,0x0D,0x21,
+0x06,0x9C,0x28,0x85,0x29,0x1C,0x21,0xD0,0xC2,0xE0,0x10,0x01,0x0D,0x41,0x28,0x0D,
+0xC1,0x18,0xEE,0xF7,0x00,0xCA,0x0D,0x21,0x2C,0x0D,0x61,0x24,0x0D,0x81,0x20,0x0D,
+0xA1,0x1C,0x0D,0xE1,0x14,0x0E,0x01,0x10,0x0E,0x21,0x0C,0x0E,0x41,0x08,0x0E,0x61,
+0x04,0x5E,0xE0,0x41,0x89,0x43,0x49,0xC1,0x01,0x24,0x64,0x7D,0x1E,0xE3,0xFE,0xD2,
+0xE1,0x04,0xF1,0xD0,0x67,0x05,0x02,0xD0,0x69,0x05,0x12,0x51,0x60,0x2C,0xD0,0x68,
+0x05,0x0E,0x99,0x68,0xE4,0x00,0x00,0x3D,0x51,0x60,0x16,0x9A,0xE0,0x20,0x60,0x5C,
+0x9A,0xE0,0xD1,0x45,0x00,0x92,0x9A,0xE1,0x21,0x44,0x30,0x21,0x4C,0x24,0xD1,0x46,
+0x00,0x32,0x9A,0xE0,0xCF,0x17,0x00,0x2C,0xC1,0xE0,0x10,0x01,0xCE,0xF7,0x00,0x18,
+0xFD,0xEF,0x0B,0x1A,0xC2,0x00,0x10,0x01,0x99,0x80,0xFE,0x10,0x05,0xD0,0xC2,0x40,
+0x10,0x01,0xC2,0x60,0x10,0x01,0x8D,0xF8,0x8E,0x17,0x89,0xAC,0x1E,0x2A,0xFE,0xFE,
+0x52,0x06,0x4A,0xFE,0x73,0x07,0xA6,0x88,0x6D,0x98,0x81,0x88,0xAE,0xE4,0x00,0x77,
+0x16,0x42,0xEF,0x64,0x25,0x44,0x5D,0x42,0xF0,0x64,0x26,0x24,0x45,0x42,0xEC,0x9C,
+0xD1,0x47,0x00,0x5A,0xD1,0x48,0x00,0x56,0x42,0xEC,0x94,0x0C,0x77,0x01,0x9D,0xA1,
+0x9D,0x82,0x5D,0xAD,0x00,0xD5,0x6D,0xFE,0x95,0xE4,0x00,0x00,0x41,0x99,0x6C,0xE4,
+0x00,0x00,0x21,0x99,0x63,0xE7,0xFF,0xFF,0x1B,0x99,0x64,0xE7,0xFF,0xFF,0x0F,0x9A,
+0xE0,0xD1,0x42,0xFB,0x7E,0xE7,0xFF,0xFE,0xFF,0x0E,0x61,0x06,0x0E,0x41,0x0A,0x0E,
+0x21,0x0E,0x0E,0x01,0x12,0x0D,0xE1,0x16,0x0D,0xC1,0x1A,0x0D,0xA1,0x1E,0x0D,0x81,
+0x22,0x0D,0x61,0x26,0x0D,0x41,0x2A,0x0D,0x21,0x2E,0x1C,0x21,0x30,0x85,0x29,0x9C,
+0x38,0x0D,0x41,0x00,0x0D,0x21,0x04,0x89,0x44,0xD0,0x67,0x04,0x15,0xC2,0xF8,0x00,
+0x21,0xFE,0xF7,0xB9,0xF4,0x4C,0x63,0x10,0x8C,0x77,0x0E,0xE3,0x02,0x86,0xE9,0xC2,
+0xE0,0x10,0x01,0xEB,0x17,0x04,0x93,0xC7,0x18,0xFF,0xDF,0xEF,0x17,0x04,0x93,0xD0,
+0x88,0x02,0xE5,0x9A,0xE1,0x4E,0xF7,0x24,0xC6,0xF7,0x01,0x83,0x22,0xE1,0x3C,0xE4,
+0x00,0x00,0x7D,0xC2,0xE0,0x10,0x01,0xEB,0x17,0x04,0x93,0xC7,0x18,0xFF,0xDF,0xEF,
+0x17,0x04,0x93,0xD1,0x48,0x01,0xC5,0x9A,0xE1,0x4E,0xF7,0x54,0xC7,0x17,0x01,0x8C,
+0x23,0x00,0x76,0x56,0xF7,0x03,0x22,0xE0,0x94,0x88,0x6A,0xE7,0xFF,0xFC,0xF4,0x88,
+0x6A,0x0D,0x21,0x06,0x0D,0x41,0x02,0x9C,0x28,0xE7,0xFF,0xF7,0x21,0x88,0x6A,0x0D,
+0x21,0x06,0x0D,0x41,0x02,0x9C,0x28,0xE7,0xFF,0xFC,0xBD,0x0D,0x41,0x02,0x0D,0x21,
+0x06,0x9C,0x28,0x85,0x29,0xC3,0x00,0x10,0x01,0x98,0x60,0xFF,0x18,0x05,0xD0,0xCB,
+0x80,0xFF,0xFE,0xE4,0x00,0x00,0x95,0x43,0x78,0xBC,0x0B,0x5B,0x02,0x4F,0x3A,0xFA,
+0x47,0x59,0xD6,0x43,0xBA,0xCD,0x0B,0x5B,0x00,0x4F,0x3A,0xFA,0x47,0x59,0xD6,0x43,
+0x3A,0xCD,0xCB,0x40,0xFF,0xFE,0x8F,0x3D,0x5F,0x39,0x04,0x8C,0x79,0x5C,0x7A,0x17,
+0x5F,0x23,0x04,0x9E,0xE8,0x48,0x79,0xE0,0x5E,0xE3,0x09,0x23,0xFF,0x31,0xC2,0xE0,
+0x10,0x01,0x1F,0x18,0x18,0xFE,0xF7,0x06,0x00,0xD7,0x17,0x00,0x52,0x9A,0xE0,0xE7,
+0xFF,0xFF,0x71,0x85,0x29,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x05,0xC8,0xC2,0xE0,0x10,
+0x01,0xEC,0x17,0x05,0xC0,0xC2,0xE0,0x10,0x01,0x9B,0x04,0xEC,0x17,0x06,0x00,0x98,
+0x64,0xC2,0xE0,0x10,0x01,0x98,0x80,0xEF,0x17,0x01,0x54,0xE7,0xFF,0xF6,0x8D,0x20,
+0x64,0x3E,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x05,0xCA,0xE4,0x00,0x00,0x41,0x20,0x68,
+0x3E,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x05,0xC2,0xE4,0x00,0x00,0x23,0x9A,0xE0,0x20,
+0x6C,0x2E,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x06,0x02,0x88,0x77,0x85,0x29,0x20,0x64,
+0x3E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x05,0xC8,0xE4,0x00,0x00,0x3D,0x20,0x68,0x3E,
+0xC2,0xE0,0x10,0x01,0xEC,0x97,0x05,0xC0,0xE4,0x00,0x00,0x1F,0x20,0x6C,0x2E,0xC2,
+0xE0,0x10,0x01,0xEC,0x97,0x06,0x00,0x85,0x29,0xC3,0x80,0x10,0x01,0xC3,0x60,0x10,
+0x01,0xC3,0x40,0x10,0x01,0xC3,0x20,0x10,0x01,0xC3,0x00,0x10,0x01,0xFF,0x9C,0x0D,
+0x14,0xFF,0x7B,0x09,0x92,0xFF,0x5A,0x0C,0x64,0xFF,0x39,0x0C,0x96,0xFF,0x18,0x0C,
+0x8E,0x20,0x69,0x7E,0x0A,0xFC,0x04,0x0B,0xD9,0x09,0x43,0xD7,0xF5,0x5F,0xDE,0x06,
+0x4F,0xBE,0xFA,0x47,0xDD,0xF6,0x43,0xBE,0xED,0xC3,0xA0,0x19,0x0C,0x20,0x00,0x7D,
+0x0B,0xBC,0x07,0x0B,0x99,0x0B,0x43,0xBD,0xE5,0x5F,0xBD,0x06,0x4F,0x9D,0xFA,0x47,
+0xBC,0xEE,0x43,0x9D,0xE5,0xC3,0x80,0x21,0xC8,0x20,0x05,0x1D,0x0E,0xF8,0x01,0xC2,
+0xE0,0x10,0x01,0xEA,0xF7,0x0D,0x1B,0x0B,0x99,0x0B,0x0E,0xF8,0x03,0x0B,0x39,0x0F,
+0x12,0xFA,0x00,0x0F,0x9B,0x01,0x0F,0x3B,0x03,0x52,0xF7,0x02,0xE4,0x00,0x01,0x59,
+0xC3,0xA0,0x10,0x01,0xC2,0xE0,0x10,0x01,0xFF,0xBD,0x07,0xAC,0xFE,0xF7,0x0B,0x94,
+0x20,0x6D,0x96,0x0B,0x79,0x01,0x0B,0xDC,0x01,0x43,0xDE,0xDD,0x5F,0xDE,0x06,0x4F,
+0x7E,0xFA,0x47,0xDB,0xF6,0x43,0x7E,0xDD,0xC3,0x60,0x19,0x0C,0x20,0x00,0x7D,0x0B,
+0x39,0x03,0x0B,0x7C,0x03,0x43,0x7B,0xCD,0x5F,0x7B,0x06,0x4F,0x3B,0xFA,0x47,0x79,
+0xDE,0x43,0x3B,0xCD,0xC3,0x20,0x21,0xC8,0x20,0x03,0x61,0x0B,0x37,0x17,0x0F,0x38,
+0x01,0x0B,0x37,0x19,0x0F,0x38,0x03,0x0B,0x37,0x47,0x0A,0xF7,0x49,0x0E,0xF8,0x07,
+0x12,0xFA,0x00,0x52,0xF7,0x01,0x0F,0x38,0x05,0x1A,0xFA,0x00,0x9A,0xE2,0x1A,0xFD,
+0x00,0xE4,0x00,0x01,0x5F,0xD0,0x64,0x01,0xD6,0x0B,0x3B,0x00,0x0B,0x7B,0x02,0x43,
+0x79,0xDD,0x9F,0x6E,0x5F,0x63,0x9B,0x20,0x00,0x2F,0xC3,0x20,0x10,0x01,0xEB,0x39,
+0x0C,0x91,0x0B,0x18,0x01,0x0F,0x17,0x47,0x9B,0x02,0x0F,0x37,0x49,0x1B,0x17,0x00,
+0x12,0xFA,0x00,0x9B,0x1D,0x46,0xF7,0xC4,0x1A,0xFA,0x00,0xE4,0x00,0x00,0xEB,0xD0,
+0x65,0x03,0x8E,0x13,0x7D,0x00,0x23,0x68,0xFE,0x0B,0x98,0x00,0x0B,0x59,0x00,0x8F,
+0x5C,0x43,0x5A,0xD8,0x0B,0x98,0x02,0x0F,0x57,0x17,0x0B,0x59,0x02,0x8F,0x5C,0x43,
+0x5A,0xD8,0x0B,0x98,0x04,0x0F,0x57,0x19,0x0B,0x59,0x08,0x8F,0x5C,0x43,0x5A,0xD8,
+0x0F,0x57,0x47,0x0B,0x58,0x06,0x0B,0x19,0x0A,0x8F,0x1A,0x43,0x78,0xD8,0x0F,0x77,
+0x49,0xE4,0x00,0x00,0x55,0x23,0x64,0x9A,0x0B,0x38,0x01,0x0F,0x37,0x17,0x0B,0x38,
+0x03,0x0F,0x37,0x19,0x0B,0x38,0x05,0x0B,0x18,0x07,0x0F,0x37,0x47,0x0F,0x17,0x49,
+0x9B,0x3E,0x13,0x1A,0x00,0x47,0x18,0xCC,0x1B,0x1A,0x00,0x9B,0x02,0x1B,0x17,0x00,
+0x85,0x29,0xC3,0x00,0x10,0x01,0xFF,0x18,0x0D,0x14,0xFE,0xE0,0x7F,0xFF,0x0E,0xF8,
+0x01,0x0E,0xF8,0x03,0x0E,0xF8,0x05,0x0E,0xF8,0x07,0x9B,0x01,0xC3,0x20,0x10,0x01,
+0xFF,0x39,0x01,0xA4,0x1B,0x19,0x01,0xC3,0x00,0x10,0x01,0xFF,0x18,0x07,0xB4,0x0E,
+0xF8,0x01,0x0E,0xF8,0x03,0x0E,0xF8,0x05,0x0E,0xF8,0x07,0xC3,0x00,0x10,0x01,0xF8,
+0x18,0x07,0xAD,0xC3,0x00,0x10,0x01,0xFF,0x18,0x0C,0x96,0x0E,0xF8,0x01,0x0E,0xF8,
+0x03,0x0E,0xF8,0x05,0x0E,0xF8,0x07,0x0E,0xF8,0x09,0x0E,0xF8,0x0B,0x0E,0xF8,0x0D,
+0x0E,0xF8,0x0F,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x09,0x96,0xC2,0xE0,0x10,0x01,0x18,
+0x19,0x00,0xF3,0x17,0x0C,0x64,0x9B,0x3C,0x47,0x18,0xCC,0xFB,0x17,0x0C,0x64,0xC2,
+0xE0,0x10,0x01,0xF8,0x17,0x07,0xAC,0x85,0x29,0xC2,0xE0,0x10,0x01,0xC3,0x00,0x10,
+0x01,0x5C,0x63,0x00,0xFE,0xF7,0x0C,0xB6,0xFF,0x18,0x07,0x38,0x9B,0x20,0x20,0x80,
+0x6C,0xE4,0x00,0x00,0x47,0x4F,0x59,0x10,0x0B,0x97,0x00,0x0B,0x77,0x02,0x8F,0x58,
+0x8F,0x7C,0x9F,0x21,0x0F,0x7A,0x00,0x9E,0xE4,0x5F,0x59,0x00,0xD4,0x7A,0xFF,0x4D,
+0xE4,0x00,0x00,0xF7,0x0B,0x57,0x00,0x0B,0x37,0x02,0x8F,0x3A,0xC3,0x80,0x10,0x01,
+0x0F,0x38,0x00,0xFF,0x9C,0x0A,0x4C,0x13,0x3C,0x04,0x1F,0xB9,0xFF,0x4F,0xBD,0x10,
+0x43,0xD8,0xEC,0x8F,0xB7,0x4F,0x79,0x08,0x09,0x1D,0x00,0x1F,0x5B,0xFF,0x4F,0xBA,
+0x08,0x8F,0xB7,0x0B,0xBD,0x00,0x8F,0xA8,0x0F,0xBE,0x00,0x13,0x9C,0x01,0x27,0x84,
+0xF5,0x4F,0x39,0x10,0x4F,0x5A,0x10,0x43,0x98,0xCC,0x43,0xB7,0xCC,0x9F,0x61,0x0B,
+0xBD,0x00,0x4F,0x7B,0x08,0x8F,0x77,0x0B,0x7B,0x00,0x8F,0x7D,0x0F,0x7C,0x00,0x8F,
+0x1A,0x1F,0x59,0xFE,0x9F,0x3F,0x4F,0x5A,0x08,0x4F,0x39,0x08,0x8F,0x57,0x8E,0xF9,
+0x0B,0x5A,0x00,0x0A,0xF7,0x00,0x8E,0xFA,0x0E,0xF8,0x00,0x85,0x29,0x1C,0x21,0xD0,
+0x50,0x60,0x16,0x0D,0x41,0x28,0x0D,0x61,0x24,0x0D,0x81,0x20,0x0D,0xA1,0x1C,0x0D,
+0xC1,0x18,0x0D,0xE1,0x14,0x0E,0x01,0x10,0x0E,0x21,0x0C,0x98,0x80,0x0D,0x21,0x2C,
+0x0E,0x41,0x08,0x0E,0x61,0x04,0xE7,0xFF,0xFE,0x46,0xC2,0xE0,0x10,0x01,0xC3,0x00,
+0x10,0x01,0xF2,0x37,0x0B,0x94,0xFF,0x18,0x07,0x38,0x9B,0x60,0x98,0xA0,0x98,0x60,
+0xC3,0x20,0x10,0x01,0x0C,0xF8,0x0A,0x0D,0x58,0x0E,0x0D,0x78,0x22,0x0D,0x98,0x1E,
+0x0D,0xB8,0x36,0x0D,0xD8,0x3A,0x0D,0xF8,0x4E,0x0E,0x18,0x4A,0x88,0xDB,0x88,0x85,
+0x8B,0xA3,0x9B,0x80,0x52,0xE0,0xFF,0x99,0x00,0xFF,0x39,0x07,0x35,0x4F,0x5B,0x10,
+0x5F,0xDB,0x00,0x8F,0x58,0x0F,0x5A,0x02,0xD7,0x48,0x00,0x48,0x5D,0x1A,0x06,0x8A,
+0xFE,0x27,0xC4,0x23,0x8C,0x7A,0x5C,0x63,0x06,0x1E,0x5E,0xF7,0x26,0x44,0x23,0x8C,
+0x9A,0x5C,0x84,0x06,0x1E,0x5E,0xF5,0x26,0x44,0x23,0x8C,0xBA,0x5C,0xA5,0x06,0x1F,
+0xDE,0xEC,0x27,0xC4,0x23,0x8C,0xDA,0x5C,0xC6,0x06,0xD2,0x21,0x0B,0x06,0xC1,0x00,
+0x22,0x68,0x20,0x05,0x61,0xD2,0xEA,0x05,0x05,0x22,0xE0,0x6E,0xC0,0x61,0xF3,0xEC,
+0x20,0x00,0x1D,0xD5,0x47,0x09,0xF4,0x5C,0xE3,0xB9,0x20,0x05,0x01,0x5D,0x42,0x71,
+0xE4,0x00,0x01,0x85,0xD2,0xEA,0x00,0xE6,0xC0,0x81,0xF3,0xEC,0x20,0x00,0x1D,0xD5,
+0x8B,0x09,0x14,0x5D,0x63,0xB9,0x20,0x04,0x91,0x5D,0x82,0x71,0xE4,0x00,0x01,0x4D,
+0x1E,0x57,0x01,0x1F,0xD7,0xFF,0x4E,0x72,0x10,0x4F,0x5E,0x10,0x8E,0x78,0x8F,0x58,
+0x0E,0x73,0x02,0x0F,0x5A,0x02,0xD6,0x7A,0x01,0x40,0x9B,0x42,0xD7,0x52,0x00,0xC2,
+0x5F,0xDA,0x00,0xD7,0xD7,0x00,0x8A,0x4F,0xDA,0x10,0x8F,0xD8,0x0F,0xDE,0x02,0x8F,
+0x9E,0x5F,0x9C,0x06,0x9F,0x41,0xD3,0x49,0xFF,0x36,0xE4,0x00,0x00,0x49,0x9B,0x42,
+0xD7,0x5E,0x00,0xC2,0x5E,0x5A,0x00,0xD6,0x57,0x00,0x8A,0x4E,0x5A,0x10,0x8E,0x58,
+0x0E,0x52,0x02,0x8F,0x92,0x5F,0x9C,0x06,0x9F,0x41,0xD3,0x49,0xFF,0x36,0x5F,0x86,
+0x39,0xE4,0x00,0x01,0x5B,0x1F,0x57,0xF5,0xD3,0x4A,0x05,0x95,0xD2,0xEB,0x00,0xE6,
+0xC0,0xA1,0xF3,0xEC,0x20,0x00,0x1D,0xD5,0xCD,0x04,0xD4,0x5D,0xA3,0xB9,0x20,0x02,
+0x71,0x5D,0xC2,0x71,0xE4,0x00,0x00,0x3D,0x5E,0xE2,0xA9,0x20,0x00,0x79,0xC0,0xC1,
+0xF3,0xEC,0x20,0x00,0x1D,0xD6,0x0F,0x03,0xE4,0x5D,0xE3,0xB9,0x20,0x01,0xF9,0x5E,
+0x02,0x71,0x20,0x01,0xE3,0xE4,0x00,0x00,0xD9,0x1E,0x57,0x01,0x1F,0xD7,0xFF,0x4E,
+0x72,0x10,0x4F,0x5E,0x10,0x8E,0x78,0x8F,0x58,0x0E,0x73,0x02,0x0F,0x5A,0x02,0xD6,
+0x7A,0x01,0x50,0x9B,0x4D,0xD7,0x52,0x00,0xC2,0x5F,0xDA,0x00,0xD7,0xD7,0x00,0x8A,
+0x4F,0xDA,0x10,0x8F,0xD8,0x0F,0xDE,0x02,0x8F,0xBE,0x5F,0xBD,0x06,0x9F,0x41,0x5F,
+0x42,0x89,0x23,0xFF,0x8D,0xE4,0x00,0x00,0x4D,0x9B,0x4D,0xD7,0x5E,0x00,0xC2,0x5E,
+0x5A,0x00,0xD6,0x57,0x00,0x8A,0x4E,0x5A,0x10,0x8E,0x58,0x0E,0x52,0x02,0x8F,0xB2,
+0x5F,0xBD,0x06,0x9F,0x41,0x5F,0x42,0x89,0x23,0xFF,0x8D,0x5F,0xA6,0x39,0x20,0x00,
+0x31,0x9A,0xE1,0x1A,0xF9,0x00,0xE4,0x00,0x00,0x1F,0x9F,0x61,0x5F,0x62,0xC9,0x23,
+0xF9,0x79,0x18,0x19,0x00,0x0E,0x61,0x06,0x0E,0x41,0x0A,0x0E,0x21,0x0E,0x0E,0x01,
+0x12,0x0D,0xE1,0x16,0x0D,0xC1,0x1A,0x0D,0xA1,0x1E,0x0D,0x81,0x22,0x0D,0x61,0x26,
+0x0D,0x41,0x2A,0x0D,0x21,0x2E,0x1C,0x21,0x30,0x85,0x29,0xC3,0x00,0x10,0x01,0x5C,
+0x84,0x00,0xFF,0x18,0x0C,0xB6,0x20,0xA0,0x6C,0xE4,0x00,0x00,0x4B,0x4F,0x37,0x08,
+0x9E,0xE1,0x43,0x58,0xCC,0x8F,0x23,0x0B,0x5A,0x00,0x0F,0x59,0x01,0xE4,0x00,0x00,
+0x0D,0x9A,0xE0,0x5F,0x37,0x00,0xD4,0x99,0xFF,0x3D,0xE4,0x00,0x00,0x7F,0x20,0xA4,
+0xEE,0xE4,0x00,0x00,0x31,0x4F,0x37,0x08,0x9E,0xE1,0x43,0x43,0xCC,0x8F,0x38,0x0B,
+0x5A,0x00,0x0F,0x59,0x01,0xE4,0x00,0x00,0x0D,0x9A,0xE0,0x5F,0x37,0x00,0xD4,0x99,
+0xFF,0x3D,0xC2,0xE0,0x10,0x01,0x98,0x80,0xFE,0xF7,0x0A,0x4C,0x10,0x77,0x01,0x12,
+0xF7,0x04,0x40,0x63,0xBB,0xE7,0xFF,0xF9,0x49,0x85,0x29,0x5C,0x84,0x00,0x5C,0x82,
+0xC9,0x4A,0xE1,0x13,0x4F,0x04,0x09,0x9B,0xA2,0x43,0x18,0xBB,0x1F,0xC4,0xFE,0x1F,
+0x58,0xFE,0x1F,0x78,0xFF,0x1F,0x98,0x01,0x9A,0xE0,0x1D,0x04,0xFF,0xE4,0x00,0x00,
+0x73,0x27,0x24,0x6D,0xD6,0xFE,0x00,0xC2,0xD6,0xE8,0x00,0xA2,0xD6,0xFA,0x00,0x82,
+0xD6,0xFB,0x00,0x62,0xD6,0xF8,0x00,0x42,0xD6,0xFC,0x00,0xD6,0x20,0xA0,0x36,0x0B,
+0x23,0x01,0x4F,0x39,0x08,0xE4,0x00,0x00,0x15,0x0B,0x23,0x00,0x43,0x39,0xE8,0x0F,
+0x23,0x01,0x9E,0xE1,0x9C,0x62,0x5F,0x37,0x00,0xD4,0x99,0xFE,0x45,0x85,0x29,0x9C,
+0x38,0x98,0x63,0x0D,0x21,0x04,0xE7,0xFF,0x96,0xCC,0x0D,0x21,0x06,0x9C,0x28,0xE4,
+0x00,0x7C,0x1B,0x9A,0xEB,0x9C,0x30,0x0D,0x41,0x08,0x0D,0x81,0x00,0xC1,0x80,0x10,
+0x01,0xFD,0x4C,0x0A,0x4C,0x1A,0xEA,0x04,0x9A,0xE2,0x1A,0xEA,0x01,0xFE,0xE0,0x07,
+0xFF,0x0E,0xEA,0x07,0x0E,0xEA,0x09,0xC2,0xE0,0x10,0x01,0x0D,0x61,0x04,0x99,0x64,
+0xF9,0x77,0x09,0x98,0x52,0xE0,0xCC,0x0E,0xEA,0x0B,0xFE,0xE0,0x04,0x00,0x0D,0x21,
+0x0C,0x0E,0xEA,0x03,0x50,0x60,0x19,0x98,0x80,0xE7,0xFF,0x3C,0x6C,0x50,0x60,0x19,
+0x98,0x81,0xE7,0xFF,0x3C,0x5A,0x52,0xE0,0x2F,0xFA,0xEC,0x0A,0x4C,0xC2,0xE0,0x10,
+0x01,0xEC,0x17,0x00,0xBD,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x0D,0xB0,0xC2,0xE0,0x10,
+0x01,0xEC,0x17,0x07,0xA0,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x06,0x45,0xC2,0xE0,0x10,
+0x01,0xF8,0x17,0x0D,0xAC,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x07,0xB0,0xC2,0xE0,0x10,
+0x01,0xF8,0x17,0x0A,0x5A,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x07,0xC0,0xC2,0xE0,0x10,
+0x01,0xF8,0x17,0x0D,0x78,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0C,0xA6,0xC2,0xE0,0x10,
+0x01,0xF8,0x17,0x0A,0x5B,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x09,0x99,0xC2,0xE0,0x10,
+0x01,0xEC,0x17,0x0B,0x73,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x07,0x98,0xC2,0xE0,0x10,
+0x01,0xEC,0x17,0x0D,0x83,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x09,0x90,0xC2,0xE0,0x10,
+0x01,0x9B,0x03,0xFB,0x17,0x09,0x9A,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x07,0xAD,0xC2,
+0xE0,0x10,0x01,0xEC,0x17,0x05,0xB0,0xC2,0xE0,0x10,0x01,0xFF,0x00,0x01,0xF4,0xEF,
+0x17,0x04,0x91,0xC2,0xE0,0x10,0x01,0x19,0x6A,0x0C,0xF8,0x17,0x06,0x3C,0xC0,0x60,
+0x10,0x01,0x98,0x80,0xFC,0x63,0x07,0x38,0x50,0xA0,0x60,0xE7,0xFF,0x9F,0x84,0xC2,
+0xE0,0x10,0x01,0xFE,0xF7,0x0B,0x94,0x9E,0xE4,0x18,0x17,0x00,0x18,0x17,0x01,0x18,
+0x17,0x02,0xC3,0x00,0x10,0x01,0x1E,0xF7,0x30,0xFF,0x18,0x0C,0x58,0xD6,0xF8,0xFF,
+0x66,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0D,0x79,0xC2,0xE0,0x10,0x01,0xF3,0x37,0x00,
+0xA8,0xC2,0xF4,0x00,0x01,0xCB,0x17,0x3D,0xF9,0xCA,0xF7,0x3D,0xF8,0x1B,0x38,0x00,
+0xC3,0x00,0x10,0x01,0xF3,0x18,0x05,0xAE,0x1B,0x17,0x00,0xC2,0xE0,0x10,0x01,0xEB,
+0x17,0x06,0x3F,0x53,0x18,0x05,0xEF,0x17,0x06,0x3F,0xC2,0xE0,0x10,0x01,0xC3,0x00,
+0x00,0x01,0xFF,0x18,0x26,0xE3,0xEF,0x17,0x03,0x94,0xFF,0x00,0x01,0x13,0xC2,0xE0,
+0x10,0x01,0xEF,0x17,0x06,0x49,0xC2,0xE0,0x10,0x01,0xC3,0x00,0x00,0x01,0xFF,0x18,
+0x24,0xE2,0xEF,0x17,0x03,0xA8,0xC2,0xE0,0x10,0x01,0xC3,0x00,0x00,0x01,0xFF,0x18,
+0x22,0x9C,0xEF,0x17,0x03,0x80,0xC2,0xE0,0x10,0x01,0xC3,0x00,0x00,0x01,0xFF,0x18,
+0x23,0x75,0xEF,0x17,0x03,0xC4,0xFF,0x00,0x04,0xCA,0xC2,0xE0,0x10,0x01,0xEF,0x17,
+0x07,0xB3,0x9B,0x02,0xC2,0xE0,0x10,0x01,0xC3,0x20,0x10,0x01,0xEF,0x17,0x04,0x14,
+0xC3,0x00,0x10,0x01,0xFE,0xF8,0x0C,0xA8,0xEC,0x19,0x0A,0xB5,0x18,0x17,0x01,0x18,
+0x17,0x02,0x18,0x17,0x03,0x0C,0x17,0x05,0x0C,0x17,0x07,0x0C,0x17,0x0B,0x0C,0x17,
+0x09,0xC3,0x60,0x10,0x01,0xC3,0x40,0x10,0x01,0xC3,0x20,0x10,0x01,0xF8,0x18,0x0C,
+0xA8,0x9A,0xE0,0xFF,0x7B,0x0C,0xB6,0xFF,0x5A,0x0A,0xBC,0xFF,0x39,0x08,0xD4,0x43,
+0x1B,0xBC,0x0C,0x18,0x01,0x43,0x1A,0xBC,0x0C,0x18,0x01,0x4F,0x17,0x08,0x8F,0x19,
+0x0C,0x18,0x00,0x9E,0xE2,0x5E,0xEB,0xC9,0x23,0xFF,0x9D,0x0D,0x81,0x02,0x0D,0x61,
+0x06,0x0D,0x41,0x0A,0x0D,0x21,0x0E,0x1C,0x21,0x10,0x85,0x29,0xE4,0x00,0x74,0x8F,
+0x1C,0x21,0xE8,0x0D,0x21,0x14,0xE7,0xFF,0xC5,0xBC,0xE7,0xFF,0xA3,0x0A,0xE7,0xFF,
+0xC4,0xE6,0xE7,0xFF,0xEE,0x26,0x98,0x60,0x98,0x81,0xE7,0xFF,0x90,0x28,0x98,0x81,
+0x98,0x60,0x88,0xA4,0xE7,0xFF,0x90,0x2E,0x98,0x81,0x98,0x60,0x88,0xA4,0xE7,0xFF,
+0x90,0x44,0x98,0x80,0x98,0x61,0x88,0xA4,0xE7,0xFF,0x90,0x30,0x98,0xA0,0x98,0x62,
+0x98,0x81,0xE7,0xFF,0x90,0x1C,0x98,0x62,0x98,0x80,0xE7,0xFF,0x90,0x92,0x98,0x60,
+0x50,0x80,0xF6,0xE7,0xFF,0x90,0x9A,0x98,0x61,0x50,0x80,0xF6,0xE7,0xFF,0x90,0x88,
+0x98,0x62,0x50,0x80,0xF3,0xE7,0xFF,0x90,0x76,0x98,0x60,0xFC,0x80,0xA0,0x00,0xE7,
+0xFF,0x90,0xBE,0x98,0x61,0xFC,0x80,0xA0,0x00,0xE7,0xFF,0x90,0xAA,0x98,0x62,0xFC,
+0x80,0xA0,0x00,0xE7,0xFF,0x90,0x96,0xFC,0x80,0x01,0x26,0x98,0x62,0xE7,0xFF,0x90,
+0xDE,0xFC,0x60,0x02,0x58,0xE7,0xFF,0x99,0xC2,0xE7,0xFF,0xFA,0x34,0x50,0x60,0x14,
+0xE7,0xFF,0x55,0x02,0xFC,0x60,0x01,0x13,0xE7,0xFF,0x55,0x06,0x50,0x60,0xBE,0xE7,
+0xFF,0x55,0x0C,0x50,0x60,0xA7,0xE7,0xFF,0x55,0x12,0x50,0x60,0xA7,0xE7,0xFF,0x55,
+0x18,0x98,0x6A,0xE7,0xFF,0x55,0x20,0x98,0x62,0xE7,0xFF,0x66,0xA2,0xE7,0xFF,0x3E,
+0xDA,0x50,0x60,0x1B,0xE7,0xFF,0x94,0x78,0x9A,0xEE,0x0E,0xE1,0x00,0x52,0xE0,0x14,
+0x0E,0xE1,0x04,0xCA,0xE0,0x07,0xD0,0x99,0x0A,0x0E,0xE1,0x08,0x98,0xC8,0x98,0xAE,
+0x88,0xE6,0x98,0x6A,0x98,0x8C,0xE7,0xFF,0x35,0xCC,0x98,0x81,0x98,0x60,0xE7,0xFF,
+0xC3,0xAC,0x50,0x60,0x10,0xE7,0xFF,0xC3,0xD6,0xE4,0x00,0x4C,0xC0,0xE7,0xFF,0xF9,
+0x24,0x98,0x80,0x98,0xC0,0x88,0xA4,0x98,0x60,0xE7,0xFF,0x32,0x9C,0xE7,0xFF,0xB6,
+0x04,0xE7,0xFF,0xB4,0xF0,0xC2,0xE0,0x10,0x01,0xF0,0x77,0x01,0xAA,0xE7,0xFF,0xC3,
+0x66,0x9B,0x00,0xCA,0xE0,0x48,0x00,0xC3,0x17,0x00,0x0D,0xC3,0x17,0x00,0x0F,0x53,
+0x18,0x04,0xC3,0x17,0x00,0x0D,0xC3,0x17,0x00,0x0F,0x53,0x18,0x08,0xC3,0x17,0x00,
+0x0D,0xC2,0xE0,0x01,0x1F,0x52,0xF7,0x06,0xC2,0xE0,0x01,0x1D,0xFC,0x60,0x01,0x00,
+0xE7,0xFF,0xC3,0x10,0x50,0x60,0x20,0xE7,0xFF,0xC3,0x1A,0x98,0x61,0x50,0x80,0x13,
+0x50,0xA0,0x37,0x98,0xC8,0xFC,0xE0,0x01,0x50,0xE7,0xFF,0xA8,0xCA,0xC3,0x00,0x00,
+0x01,0xC2,0xE0,0x10,0x01,0xFF,0x18,0x3E,0x78,0x0D,0x21,0x16,0xEF,0x17,0x03,0xC8,
+0x1C,0x21,0x18,0x85,0x29,0xC2,0xE0,0x10,0x01,0xEF,0x17,0x00,0xCA,0x23,0x05,0x08,
+0xEE,0xF7,0x00,0xCA,0x22,0xE8,0xEC,0xC3,0x00,0x10,0x01,0xC2,0xE0,0x10,0x01,0xFF,
+0x18,0x07,0xA6,0xFE,0xF7,0x0D,0x7A,0x0B,0x38,0x01,0xC3,0x60,0x10,0x01,0x0F,0x37,
+0x01,0xC3,0x40,0x10,0x01,0x0B,0x38,0x03,0xFF,0x7B,0x0D,0x84,0x0F,0x37,0x03,0x0B,
+0x18,0x05,0xFF,0x5A,0x06,0x4A,0x0F,0x17,0x05,0x9A,0xE0,0xE4,0x00,0x00,0x69,0xC3,
+0x80,0x10,0x01,0xC3,0x60,0x10,0x01,0x9A,0xE0,0xFF,0x9C,0x0B,0x1A,0xFF,0x7B,0x0D,
+0x20,0x43,0x3C,0xBC,0x43,0x1B,0xBC,0x0B,0x59,0x01,0x0B,0x39,0x2D,0x0F,0x58,0x01,
+0x0F,0x38,0x2D,0x9E,0xE2,0x5E,0xE5,0x89,0x23,0xFF,0xA5,0xE7,0xFF,0xFF,0x39,0x43,
+0x1B,0xBC,0x43,0x3A,0xBC,0x0B,0x39,0x01,0x0F,0x38,0x01,0x9E,0xE2,0x5E,0xE2,0x09,
+0x23,0xFF,0xBD,0x85,0x29,0xC3,0x80,0x10,0x01,0xC3,0x00,0x10,0x01,0x9A,0xE0,0xFF,
+0x9C,0x0D,0x20,0xFF,0x18,0x0A,0xBC,0x43,0x5C,0xBC,0x43,0x38,0xBC,0x0B,0x7A,0x01,
+0x0B,0x5A,0x2D,0x0F,0x79,0x01,0x0F,0x59,0x2D,0x9E,0xE2,0x5E,0xE5,0x89,0x23,0xFF,
+0xA5,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x0D,0x7A,0x0B,0x37,0x01,0x0F,0x38,0x59,0x0B,
+0x37,0x03,0x0A,0xF7,0x05,0x0F,0x38,0x5B,0x0E,0xF8,0x5D,0x85,0x29,0xE4,0x00,0x71,
+0xE1,0xC2,0xE0,0x10,0x01,0xFF,0x20,0xDF,0x9F,0xEB,0x17,0x06,0x45,0x47,0x18,0xCC,
+0x9B,0x3E,0xEF,0x17,0x06,0x45,0xC2,0xE0,0x10,0x01,0xEB,0x17,0x0C,0x8B,0x47,0x18,
+0xCC,0xEF,0x17,0x0C,0x8B,0x85,0x29,0xC2,0xE0,0x10,0x01,0x88,0xC3,0xF3,0xD7,0x0A,
+0x4C,0xC3,0x60,0x10,0x01,0xC3,0x80,0x10,0x01,0xFF,0x5B,0x06,0x44,0xFF,0x9C,0x0D,
+0x78,0xC3,0x00,0x10,0x01,0x1C,0x7E,0xFF,0x0A,0xFA,0x01,0x13,0xBC,0x00,0xFF,0x18,
+0x0C,0xB6,0x9B,0x20,0xE4,0x00,0x00,0x5B,0xD4,0x79,0x00,0xC8,0x08,0x98,0x00,0x09,
+0x18,0x02,0x8D,0x04,0xC1,0x00,0x22,0x48,0x20,0x00,0x25,0xCA,0xF7,0x20,0x00,0x9B,
+0xA0,0x09,0x18,0x00,0x50,0x97,0x40,0x5D,0x05,0x19,0x9F,0x21,0x4A,0xE4,0xB8,0x9F,
+0x02,0x5D,0x19,0x04,0xD7,0xC8,0xFE,0xA5,0xC3,0x00,0x10,0x01,0x0E,0xFA,0x01,0x1B,
+0xBC,0x00,0xFF,0x18,0x0D,0x96,0x0B,0x38,0x00,0x53,0x77,0x20,0x5F,0x2C,0x99,0x9F,
+0x02,0xC3,0x20,0x10,0x01,0x4A,0xFB,0xB8,0xFF,0x39,0x0D,0xA6,0xD7,0x19,0xFF,0x56,
+0x98,0x60,0x0E,0xFA,0x01,0x88,0x83,0x98,0xA0,0xE7,0xFF,0xB2,0x71,0x9C,0x38,0x0D,
+0x41,0x00,0x0D,0x21,0x04,0xC1,0x40,0x10,0x01,0x20,0x64,0x62,0xE7,0xFF,0xB3,0x8C,
+0x20,0x64,0x56,0xF2,0xEA,0x0D,0x78,0x9E,0xE1,0xFA,0xEA,0x0D,0x78,0xE4,0x00,0x00,
+0x19,0xE7,0xFF,0xB4,0x12,0xF8,0x0A,0x0D,0x78,0xE7,0xFF,0xD2,0x34,0x9A,0xE3,0x20,
+0x64,0x34,0xE7,0xFF,0xD2,0x22,0x5C,0x60,0x49,0x4A,0xE3,0x4B,0xC3,0x00,0x10,0x01,
+0xF3,0x38,0x0D,0x78,0xD6,0xF9,0x02,0x75,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x0B,0x94,
+0x22,0xE1,0x0A,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0C,0xA6,0xC2,0xE0,0x10,0x01,0xF8,
+0x17,0x0A,0x5A,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x07,0xC0,0xC2,0xE0,0x10,0x01,0xF8,
+0x18,0x0D,0x78,0xF8,0x17,0x06,0x3C,0x0D,0x41,0x02,0xC2,0xE0,0x10,0x01,0x0D,0x21,
+0x06,0xEB,0x17,0x06,0x45,0x9C,0x28,0x53,0x18,0x80,0xEF,0x17,0x06,0x45,0xE7,0xFF,
+0x8E,0xB9,0x0D,0x41,0x02,0x0D,0x21,0x06,0x9C,0x28,0x85,0x29,0x9C,0x38,0xC3,0x14,
+0x00,0x01,0x0D,0x21,0x04,0xCA,0xF8,0x22,0x00,0x0B,0x37,0x01,0xCB,0x18,0x26,0x18,
+0x9B,0x3F,0x0F,0x37,0x01,0x0B,0x38,0x01,0x53,0x39,0x02,0x0F,0x38,0x01,0x0B,0x17,
+0x01,0xFC,0x60,0x01,0x00,0x0C,0x17,0x01,0xE7,0xFF,0xBE,0x00,0xC2,0xE0,0x10,0x01,
+0x0D,0x21,0x06,0xEB,0x17,0x00,0xBD,0x9C,0x28,0xC7,0x18,0xFE,0xFF,0xEF,0x17,0x00,
+0xBD,0x85,0x29,0x5C,0xC6,0x00,0x9A,0xE0,0xE4,0x00,0x00,0x45,0x4F,0x17,0x08,0x4F,
+0x57,0x10,0x43,0x23,0xC4,0x8F,0x45,0x8F,0x04,0x0F,0x5A,0x02,0x0B,0x18,0x01,0x4F,
+0x5A,0x42,0x9E,0xE1,0x43,0x18,0xD5,0x0F,0x19,0x01,0x5F,0x17,0x00,0xD4,0xD8,0xFE,
+0xFD,0x85,0x29,0x9C,0x38,0x0D,0x21,0x04,0xE4,0x00,0x45,0xCE,0x0D,0x21,0x06,0xFC,
+0x60,0x01,0x00,0x9C,0x28,0xE7,0xFF,0xBD,0x37,0x9C,0x38,0x0D,0x21,0x04,0xE4,0x00,
+0x45,0xA2,0x0D,0x21,0x06,0xFC,0x60,0x01,0x00,0x9C,0x28,0xE7,0xFF,0xBC,0xFB,0x9C,
+0x38,0x98,0x80,0x0D,0x21,0x04,0x98,0x61,0xE7,0xFF,0xE0,0x92,0x98,0x60,0xE7,0xFF,
+0x8C,0xF0,0x98,0x61,0x98,0x80,0xE7,0xFF,0xE5,0xF0,0x98,0x62,0x98,0x80,0xE7,0xFF,
+0xE5,0xE0,0x0D,0x21,0x06,0x98,0x63,0x98,0x80,0x9C,0x28,0xE7,0xFF,0xE5,0xC7,0x9C,
+0x38,0x0D,0x21,0x04,0xE7,0xFF,0xCF,0x9E,0x24,0x64,0x29,0x20,0x69,0x8A,0xE4,0x00,
+0x00,0x19,0xE7,0xFF,0xCF,0x82,0xE4,0x00,0x00,0x57,0xE7,0xFF,0xBC,0xC4,0xC2,0xE0,
+0x10,0x01,0xFE,0xF7,0x00,0xCE,0x0A,0xF7,0x09,0x40,0x63,0xBD,0x5E,0xE3,0x04,0xC2,
+0xE1,0x76,0xEA,0x20,0x00,0x7D,0x98,0x62,0xE7,0xFF,0xE4,0xEE,0x20,0x60,0x5A,0x98,
+0x61,0x98,0x80,0xE7,0xFF,0xDF,0xBC,0x0D,0x21,0x06,0x98,0x60,0x9C,0x28,0xE7,0xFF,
+0x8C,0x11,0x98,0x62,0x98,0x80,0xE7,0xFF,0xDF,0x96,0xFC,0x60,0x02,0x58,0xE7,0xFF,
+0x91,0x64,0x0D,0x21,0x06,0x98,0x60,0x9C,0x28,0xE7,0xFF,0x8B,0x93,0x0D,0x21,0x06,
+0x9C,0x28,0x85,0x29,0xD0,0x69,0x06,0x5D,0x4F,0x03,0x10,0xC2,0xF8,0x00,0x21,0xFE,
+0xF7,0xBA,0x44,0x8E,0xF8,0xC3,0x00,0x10,0x01,0x0F,0x37,0x02,0xFF,0x18,0x08,0xD4,
+0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x06,0x5C,0x87,0x29,0xC3,0x00,0x10,0x01,0xFF,0x18,
+0x07,0x1C,0x0F,0x38,0x02,0xEF,0x37,0x00,0xB0,0x0F,0x38,0x06,0x0F,0x18,0x0A,0xEF,
+0x37,0x00,0xB4,0xEF,0x17,0x00,0xB8,0xE4,0x00,0x01,0x11,0xC2,0xE0,0x10,0x01,0xFE,
+0xF7,0x0C,0x58,0x0F,0x37,0x02,0xEF,0x38,0x00,0xB0,0x0F,0x37,0x06,0x0E,0xF7,0x0A,
+0xEF,0x38,0x00,0xB4,0xEE,0xF8,0x00,0xB8,0xE4,0x00,0x00,0xCF,0xCE,0xE3,0x00,0x58,
+0xC3,0x60,0x10,0x01,0xCC,0x63,0x00,0x16,0xFF,0x7B,0x09,0x9C,0x4C,0x63,0x10,0x8F,
+0x77,0x8F,0x03,0x9A,0xE0,0x43,0x38,0xBC,0x43,0x5B,0xBC,0x0F,0x5A,0x02,0x0F,0x59,
+0x00,0x9E,0xE4,0x5E,0xEB,0x09,0x23,0xFF,0xBD,0xE4,0x00,0x00,0x6D,0x9C,0x7E,0xC3,
+0x40,0x10,0x01,0x5C,0x63,0x00,0xFF,0x5A,0x07,0xC4,0xCF,0x03,0x00,0x58,0xCC,0x63,
+0x00,0x16,0x8F,0x58,0x4C,0x63,0x10,0x8C,0x77,0x9A,0xE0,0x43,0x03,0xBC,0x43,0x3A,
+0xBC,0x0F,0x39,0x02,0x0F,0x38,0x00,0x9E,0xE4,0x5E,0xEB,0x09,0x23,0xFF,0xBD,0x85,
+0x29,0xD0,0x69,0x06,0x3D,0x4F,0x03,0x10,0xC2,0xF8,0x00,0x21,0xFE,0xF7,0xBA,0x6C,
+0x8E,0xF8,0xC3,0x00,0x10,0x01,0x0F,0x37,0x02,0xFF,0x18,0x0D,0x20,0xC2,0xE0,0x10,
+0x01,0xFE,0xF7,0x0D,0x7A,0x87,0x29,0x0B,0x37,0x00,0xC3,0x00,0x10,0x01,0x4F,0x39,
+0x40,0xFF,0x18,0x07,0x1C,0xE4,0x00,0x00,0x25,0x0B,0x37,0x00,0xC3,0x00,0x10,0x01,
+0x4F,0x39,0x40,0xFF,0x18,0x0C,0x58,0x0F,0x38,0x00,0x0B,0x37,0x02,0x0A,0xF7,0x04,
+0x4F,0x39,0x40,0x4E,0xF7,0x40,0x0F,0x38,0x04,0x0E,0xF8,0x08,0xE4,0x00,0x00,0xD9,
+0xCE,0xE3,0x00,0x2C,0x8F,0x17,0xCE,0xE3,0x00,0x58,0xC3,0x60,0x10,0x01,0xFF,0x7B,
+0x09,0x9C,0x8F,0x77,0x9A,0xE0,0x4F,0x37,0x08,0x43,0x58,0xBC,0x8F,0x3B,0x0B,0x5A,
+0x00,0x4F,0x5A,0x40,0x0F,0x59,0x00,0x9E,0xE2,0x5E,0xE5,0x89,0x23,0xFF,0xA9,0xE4,
+0x00,0x00,0x73,0x1E,0xE3,0xFE,0x5E,0xF7,0x00,0xCF,0x37,0x00,0x2C,0xCE,0xF7,0x00,
+0x58,0xC3,0x60,0x10,0x01,0x8F,0x19,0xFF,0x7B,0x07,0xC4,0x8F,0x77,0x9A,0xE0,0x4F,
+0x37,0x08,0x43,0x58,0xBC,0x8F,0x3B,0x0B,0x5A,0x00,0x4F,0x5A,0x40,0x0F,0x59,0x00,
+0x9E,0xE2,0x5E,0xE5,0x89,0x23,0xFF,0xA9,0xE7,0xFF,0xFC,0xD9,0x9C,0x38,0x0D,0x21,
+0x04,0x20,0x64,0x54,0x98,0x62,0xE7,0xFF,0xFE,0x56,0x98,0x63,0xE7,0xFF,0xFE,0x4A,
+0x98,0x69,0xE4,0x00,0x00,0x25,0x98,0x60,0xE7,0xFF,0xFE,0x32,0x98,0x61,0xE7,0xFF,
+0xFE,0x26,0x98,0x68,0x0D,0x21,0x06,0x9C,0x28,0xE7,0xFF,0xFE,0x11,0x9C,0x38,0x98,
+0x60,0x0D,0x21,0x04,0xE7,0xFF,0xFD,0xFA,0x98,0x61,0xE7,0xFF,0xFD,0xEE,0x0D,0x21,
+0x06,0x98,0x68,0x9C,0x28,0xE7,0xFF,0xFD,0xD9,0x20,0x80,0x64,0xD0,0x84,0x00,0xFA,
+0x20,0x88,0x90,0x20,0x8C,0xA8,0x5C,0x80,0x21,0x4B,0x0A,0x01,0x8A,0xF8,0xE4,0x00,
+0x00,0x49,0x53,0x00,0x19,0x8A,0xF8,0xE4,0x00,0x00,0x37,0x53,0x00,0x19,0x9A,0xE1,
+0xE4,0x00,0x00,0x25,0x53,0x00,0x32,0x8A,0xF8,0xE4,0x00,0x00,0x13,0x53,0x00,0x50,
+0x8A,0xF8,0xD0,0x6B,0x0F,0xAD,0x4F,0x43,0x10,0xC3,0x38,0x00,0x21,0xFF,0x39,0xBA,
+0x94,0x8F,0x3A,0xC3,0x60,0x10,0x01,0x0F,0x99,0x02,0xC3,0x40,0x10,0x01,0xC3,0x20,
+0x10,0x01,0xFF,0x7B,0x0D,0x20,0xFF,0x5A,0x0D,0x84,0xFF,0x39,0x0D,0x7A,0x87,0x89,
+0xCF,0x23,0x00,0x2C,0x8F,0x79,0xCF,0x23,0x00,0x58,0xC0,0xA0,0x10,0x01,0x99,0x02,
+0xFC,0xA5,0x09,0x9C,0xCB,0xC0,0x01,0xF4,0x8C,0xB9,0x9B,0x20,0x43,0x5B,0xCC,0x4F,
+0x99,0x08,0x0B,0xBA,0x00,0x8F,0x85,0x4F,0xBD,0x40,0x0F,0x5C,0x02,0x5F,0x5D,0x1D,
+0x43,0xBD,0xD5,0x48,0x98,0xB8,0xCF,0x5A,0x01,0xF4,0x43,0xA4,0xEB,0x43,0xBD,0x40,
+0x8F,0x5D,0x43,0x5A,0xF0,0x0F,0x5C,0x00,0x9F,0x22,0x5F,0x25,0x89,0x23,0xFF,0x3D,
+0xE4,0x00,0x02,0xEF,0x1F,0x23,0xFE,0x5F,0x39,0x00,0xCC,0xB9,0x00,0x2C,0xCF,0x39,
+0x00,0x58,0xC0,0x80,0x10,0x01,0x8C,0xBB,0xFC,0x84,0x07,0xC4,0x9B,0xC2,0x8C,0x99,
+0xCB,0xA0,0x01,0xF4,0x9B,0x20,0x43,0x45,0xCC,0x0B,0x9A,0x00,0x4F,0x59,0x08,0x4F,
+0x9C,0x40,0x43,0x64,0xD4,0x0F,0x5B,0x02,0x5F,0x5C,0x1D,0x43,0x9C,0xD5,0x49,0x18,
+0xB8,0xCF,0x5A,0x01,0xF4,0x43,0x88,0xE3,0x43,0x9C,0xF0,0x8F,0x5C,0x43,0x5A,0xE8,
+0x0F,0x5B,0x00,0x9F,0x22,0x5F,0x25,0x89,0x23,0xFF,0x39,0xE4,0x00,0x02,0x39,0xC3,
+0x40,0x10,0x01,0x9B,0xC2,0xFF,0x5A,0x0C,0x58,0xCB,0xA0,0x01,0xF4,0x0F,0x7A,0x02,
+0x0B,0x99,0x00,0x4F,0x9C,0x40,0x5F,0x7C,0x1D,0x43,0x9C,0xDD,0x49,0x18,0xB8,0xCF,
+0x7B,0x01,0xF4,0x43,0x88,0xE3,0x43,0x9C,0xF0,0x8F,0x7C,0x43,0x7B,0xE8,0x0F,0x7A,
+0x00,0x9F,0x22,0xC3,0x60,0x10,0x01,0x9F,0x44,0xFF,0x7B,0x0D,0x80,0xD7,0x3B,0xFE,
+0x86,0xE4,0x00,0x01,0xAD,0xC3,0x40,0x10,0x01,0x9B,0xC2,0xFF,0x5A,0x07,0x1C,0xCB,
+0xA0,0x01,0xF4,0x0F,0x7A,0x02,0x0B,0x99,0x00,0x4F,0x9C,0x40,0x5F,0x7C,0x1D,0x43,
+0x9C,0xDD,0x49,0x18,0xB8,0xCF,0x7B,0x01,0xF4,0x43,0x88,0xE3,0x43,0x9C,0xF0,0x8F,
+0x7C,0x43,0x7B,0xE8,0x0F,0x7A,0x00,0x9F,0x22,0xC3,0x60,0x10,0x01,0x9F,0x44,0xFF,
+0x7B,0x0D,0x80,0xD7,0x3B,0xFE,0x86,0xE4,0x00,0x01,0x21,0x8B,0x3A,0x9B,0xC2,0xC3,
+0x40,0x10,0x01,0xCB,0xA0,0x01,0xF4,0xFF,0x5A,0x0B,0x74,0x0F,0x7A,0x02,0x0B,0x99,
+0x00,0x4F,0x9C,0x40,0x5F,0x7C,0x1D,0x43,0x9C,0xDD,0x49,0x18,0xB8,0xCF,0x7B,0x01,
+0xF4,0x43,0x88,0xE3,0x43,0x9C,0xF0,0x8F,0x7C,0x43,0x7B,0xE8,0x0F,0x7A,0x00,0x9F,
+0x22,0xC3,0x60,0x10,0x01,0x9F,0x44,0xFF,0x7B,0x0D,0x94,0xD7,0x3B,0xFE,0x86,0xE4,
+0x00,0x00,0x91,0x8B,0x3A,0x9B,0xC2,0xC3,0x40,0x10,0x01,0xCB,0xA0,0x01,0xF4,0xFF,
+0x5A,0x0C,0x68,0x0F,0x7A,0x02,0x0B,0x99,0x00,0x4F,0x9C,0x40,0x5F,0x7C,0x1D,0x43,
+0x9C,0xDD,0x49,0x18,0xB8,0xCF,0x7B,0x01,0xF4,0x43,0x88,0xE3,0x43,0x9C,0xF0,0x8F,
+0x7C,0x43,0x7B,0xE8,0x0F,0x7A,0x00,0x9F,0x22,0xC3,0x60,0x10,0x01,0x9F,0x44,0xFF,
+0x7B,0x0D,0x94,0xD7,0x3B,0xFE,0x86,0xE7,0xFF,0xF7,0xDB,0x9C,0x38,0x0D,0x21,0x04,
+0x0D,0x41,0x00,0x89,0x43,0x98,0x60,0x88,0x8A,0xE7,0xFF,0xFB,0x80,0x88,0x8A,0x98,
+0x61,0xE7,0xFF,0xFB,0x70,0x88,0x8A,0x0D,0x21,0x06,0x0D,0x41,0x02,0x98,0x68,0x9C,
+0x28,0xE7,0xFF,0xFB,0x51,0x1C,0x21,0xB8,0x0D,0x41,0x40,0x0D,0xA1,0x34,0x0D,0xE1,
+0x2C,0x0E,0x01,0x28,0x0D,0x21,0x44,0xC2,0x00,0x10,0x01,0x0D,0x61,0x3C,0xFE,0x10,
+0x06,0x44,0x0D,0x81,0x38,0x0A,0xF0,0x01,0x0D,0xC1,0x30,0xC7,0x17,0x7F,0xFF,0x0E,
+0x21,0x24,0x0E,0x41,0x20,0x0E,0x61,0x1C,0x0E,0x81,0x18,0x0E,0xA1,0x14,0x0E,0xC1,
+0x10,0x0F,0x10,0x01,0xC1,0xE0,0x10,0x01,0xC1,0xA0,0x10,0x01,0xC1,0x40,0x10,0x01,
+0x56,0xF7,0x08,0xFD,0xEF,0x07,0xB0,0xFD,0xAD,0x0D,0xB0,0xFD,0x4A,0x0B,0x94,0x22,
+0xE1,0xDC,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x05,0xB2,0x22,0xE5,0xB0,0xC3,0x00,0x10,
+0x01,0x0A,0xEA,0x18,0xFF,0x18,0x01,0x2E,0x0B,0x58,0x0E,0xD7,0x57,0x01,0x04,0xCB,
+0x20,0x07,0xFF,0x43,0x59,0xD5,0xD6,0xFA,0x00,0xAC,0x0A,0xEA,0x16,0x0B,0x18,0x0A,
+0xD7,0x17,0x00,0x5C,0x43,0x19,0xC5,0xD6,0xF8,0x01,0xF8,0xE7,0xFF,0xE1,0x44,0xC2,
+0xE0,0x10,0x01,0xF3,0x17,0x07,0x35,0x23,0x04,0x2E,0xF8,0x17,0x07,0x35,0xE4,0x00,
+0x00,0x51,0xE7,0xFF,0xDE,0xA0,0x9A,0xE3,0x0E,0xED,0x00,0xC2,0xE0,0x10,0x01,0xF8,
+0x17,0x0D,0xAC,0xC2,0xE0,0x10,0x01,0x18,0x0F,0x00,0xF8,0x17,0x0A,0x5B,0xC2,0xE0,
+0x10,0x01,0xF8,0x17,0x09,0x99,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x0D,0x79,0x22,0xE0,
+0x24,0x98,0x60,0xE7,0xFF,0xB9,0x48,0xC2,0x20,0x10,0x01,0xC2,0x40,0x10,0x01,0xC1,
+0x80,0x10,0x01,0xC1,0x60,0x10,0x01,0x0E,0xED,0x02,0xFE,0x31,0x0C,0x64,0xFE,0x52,
+0x07,0x34,0xFD,0x8C,0x0D,0x14,0xFD,0x6B,0x0C,0x96,0x22,0xE0,0xEA,0x0A,0xF0,0x01,
+0x56,0xF7,0x40,0x22,0xE0,0x54,0xE7,0xFF,0x27,0xFA,0xC2,0xE0,0x10,0x01,0xF8,0x17,
+0x0A,0x5B,0x9A,0xE1,0xE4,0x00,0x11,0x19,0x98,0x60,0xE7,0xFF,0xFD,0x62,0x0A,0xF0,
+0x01,0x56,0xF7,0x20,0xD2,0xE0,0x43,0xFE,0x98,0x6A,0x98,0x82,0xE7,0xFF,0xF8,0xDA,
+0xE4,0x00,0x10,0xE7,0x22,0xE5,0x56,0x0A,0xF0,0x01,0x57,0x17,0x08,0x23,0x00,0x54,
+0xE7,0xFF,0xDD,0x64,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0D,0xAC,0x9A,0xE2,0xE4,0x00,
+0x10,0xA5,0x57,0x17,0x40,0x23,0x00,0xB4,0xC6,0xF7,0x20,0x00,0x22,0xE0,0x9A,0xC2,
+0xE0,0x10,0x01,0xF3,0x17,0x0A,0x5B,0xC3,0x00,0x19,0x0A,0x20,0x00,0x35,0x98,0x62,
+0xE7,0xFF,0xFC,0xB6,0xE4,0x00,0x10,0x5F,0x9F,0x01,0xFB,0x17,0x0A,0x5B,0xE4,0x00,
+0x10,0x4B,0x0C,0x0D,0x00,0xE4,0x00,0x10,0x3D,0x22,0xE9,0x12,0x0A,0xF0,0x01,0xC1,
+0xC0,0x10,0x01,0x56,0xF7,0x08,0x22,0xE0,0xB4,0xF2,0xEE,0x0D,0xAC,0x9E,0xE1,0xFA,
+0xEE,0x0D,0xAC,0xE7,0xFF,0x27,0x00,0xF2,0xEE,0x0D,0xAC,0xD2,0xE0,0x3F,0xC2,0x9A,
+0xE3,0x18,0x12,0x00,0x0E,0xED,0x00,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x0B,0x73,0xE4,
+0x00,0x0F,0xC9,0xF8,0x0E,0x0D,0xAC,0x9A,0xE6,0xE4,0x00,0x0F,0xAF,0xD2,0xE3,0x3E,
+0xB6,0x12,0xEA,0x00,0x22,0xE4,0x1A,0x18,0x12,0x00,0xE7,0xFF,0xC2,0x72,0xC3,0x00,
+0x10,0x01,0xC2,0xE0,0x10,0x01,0xFF,0x20,0x01,0x77,0x20,0x68,0x18,0x53,0x20,0xFA,
+0xEF,0x37,0x01,0xA9,0xEF,0x38,0x01,0xA7,0x0A,0xF0,0x01,0x56,0xF7,0x08,0xD2,0xE0,
+0x3C,0xEA,0xC2,0x60,0x10,0x01,0xC1,0xC0,0x10,0x01,0x13,0x0A,0x00,0xFE,0x73,0x01,
+0xA4,0xFD,0xCE,0x07,0xB4,0xD3,0x01,0x11,0x11,0x0A,0xAC,0x04,0x0A,0xEC,0x00,0xC2,
+0xAF,0xFF,0xE0,0x20,0x06,0x05,0x09,0x2A,0x48,0x0B,0x4C,0x06,0x0A,0x8A,0x46,0x43,
+0x89,0xD5,0x43,0xB4,0xAD,0x0B,0x6C,0x02,0x0B,0x0A,0x18,0x08,0xEA,0x16,0x43,0x3B,
+0xC5,0x43,0xC7,0xBD,0x43,0x3D,0xCB,0x41,0x1C,0xF3,0x8F,0x28,0x23,0x21,0x84,0x42,
+0xD5,0xBD,0x40,0x9B,0xD5,0x40,0x7C,0xB3,0x41,0x1D,0x23,0x8C,0x68,0x20,0x60,0x40,
+0x24,0x60,0x28,0x27,0x20,0x2A,0xE4,0x00,0x00,0x8F,0x27,0x3D,0x0E,0x4C,0xB9,0xFA,
+0x45,0x05,0xCE,0x41,0x08,0x2D,0x4C,0xA3,0xFA,0x44,0x65,0x1E,0x40,0xA3,0x2D,0xD4,
+0xA8,0x01,0x74,0x40,0x78,0xDD,0x40,0x9E,0x23,0x42,0xC3,0xB3,0x8E,0xC4,0x22,0xC0,
+0x40,0x26,0xC0,0x28,0x27,0x20,0x2A,0xE4,0x00,0x00,0x2D,0x27,0x3C,0x4A,0x4F,0x36,
+0xFA,0x46,0xD9,0xB6,0x42,0xD6,0xCD,0x9B,0x21,0xD6,0xC8,0x06,0x48,0x41,0x09,0xDD,
+0x40,0x74,0xBD,0x40,0x87,0xAD,0x43,0x3A,0xC5,0x42,0xC8,0x23,0x43,0x23,0xCB,0x8F,
+0x36,0x23,0x20,0xE8,0x40,0xBA,0xDD,0x0C,0xA1,0x0C,0x42,0xB7,0xAD,0x42,0xC3,0x2B,
+0x40,0xC8,0xAB,0x8C,0xD6,0x20,0xC0,0x40,0x24,0xC0,0x28,0x27,0x20,0x2A,0xE4,0x00,
+0x00,0x3B,0x27,0x3C,0x66,0x4E,0xD9,0xFA,0x44,0xB6,0xCE,0x40,0xA5,0xB5,0x4E,0xC6,
+0xFA,0x44,0xD6,0x36,0x40,0xC6,0xB5,0xD4,0xC5,0x01,0xA0,0x43,0x78,0xDD,0x43,0xDE,
+0xF3,0x43,0x7B,0xDB,0x43,0x58,0xD5,0x40,0x84,0x23,0x43,0x5A,0xD3,0x8F,0xDB,0x8C,
+0x9A,0x9B,0x20,0xD4,0x9E,0x00,0x45,0x8B,0xC4,0x9B,0x21,0x40,0x63,0x1B,0x41,0x08,
+0x43,0x8D,0x03,0xD5,0x1E,0x01,0xC9,0xE4,0x00,0x00,0x75,0x42,0xD8,0xD5,0x0C,0xC1,
+0x0E,0x42,0xB6,0xAB,0x42,0xC4,0x33,0x8E,0xB6,0x22,0xA0,0x40,0x26,0xA0,0x28,0x27,
+0x20,0x2A,0xE7,0xFF,0xFF,0x73,0x27,0x3E,0xD6,0x4F,0x35,0xFA,0x46,0xB9,0xAE,0x42,
+0xB5,0xCD,0x9B,0x20,0xD6,0xA5,0x00,0xF0,0xE7,0xFF,0xFF,0x47,0x8B,0xC8,0x53,0x20,
+0x10,0x43,0xBD,0xEB,0x43,0x9C,0xE3,0x53,0x40,0x11,0x8F,0x9D,0x5F,0x9E,0x1F,0x4B,
+0x39,0xD0,0x4F,0x59,0x21,0x47,0x39,0xD6,0x57,0x39,0x0F,0xD3,0x20,0x41,0xD2,0x0E,
+0x8A,0x17,0x0D,0x2A,0x19,0x0C,0xEA,0x47,0x0F,0x0A,0x49,0xE4,0x00,0x10,0x55,0x12,
+0xF1,0x00,0x9A,0xDE,0x46,0xF7,0xB4,0x98,0x63,0x1A,0xF1,0x00,0xE7,0xFF,0xD5,0x5A,
+0xE4,0x00,0x00,0xEB,0xC2,0xEF,0xFF,0xE4,0x20,0x01,0xB7,0x13,0x32,0x00,0x09,0x2C,
+0x02,0x9F,0x21,0x0B,0x6A,0x16,0x5F,0x39,0x00,0x41,0x1B,0xBD,0x0B,0x4A,0x18,0x0B,
+0xAA,0x46,0x43,0xDA,0x4D,0x42,0xFD,0xBD,0x0B,0x8A,0x48,0x42,0xF7,0xBB,0x41,0x3C,
+0x4D,0x1B,0x32,0x00,0x41,0x29,0x4B,0x8E,0xE9,0x41,0x08,0x43,0x43,0xDE,0xF3,0x8F,
+0xC8,0x5E,0xFE,0x1F,0x52,0xE0,0x10,0x4A,0xE0,0xB8,0x22,0xE0,0x3C,0x0F,0xAA,0x17,
+0x0F,0x8A,0x19,0x0F,0x6A,0x47,0x0F,0x4A,0x49,0xD3,0x24,0x01,0xBD,0x9F,0x1F,0x12,
+0xF1,0x00,0x1B,0x0A,0x00,0x9B,0x1C,0x46,0xF7,0xC4,0x1A,0xF1,0x00,0xC2,0xE0,0x10,
+0x01,0xF8,0x17,0x07,0xAC,0x12,0xF3,0x00,0x1A,0xEA,0x10,0x12,0xF3,0x01,0x1A,0xEA,
+0x40,0xE7,0xFF,0x22,0x04,0x12,0xEA,0x00,0xD2,0xE1,0x3F,0xD6,0xE4,0x00,0x01,0xD9,
+0x18,0x12,0x00,0xE7,0xFF,0xFF,0xC5,0x23,0x07,0x7A,0x18,0x12,0x00,0x0A,0xEC,0x04,
+0xC2,0xEF,0xFF,0xE0,0x23,0xFF,0x45,0x0B,0xCA,0x16,0x0B,0xAA,0x18,0x0B,0x0C,0x00,
+0x0B,0x2C,0x02,0x43,0x9E,0xC5,0x43,0x7D,0xCD,0x43,0xDE,0xBD,0x0B,0x4C,0x06,0x43,
+0xDE,0xF3,0x43,0xBD,0xD5,0x43,0x9C,0xE3,0x43,0xBD,0xEB,0x43,0x7B,0xDB,0x8F,0xBE,
+0x8F,0x7C,0xD7,0xBB,0x3A,0x71,0xE4,0x00,0x0E,0xCF,0x0B,0x8B,0x03,0x43,0x99,0xE5,
+0x5F,0x9C,0x06,0x4F,0x7C,0xFA,0x47,0x9B,0xE6,0x43,0x7C,0xDD,0xC3,0x60,0x21,0xC8,
+0x20,0x00,0xC1,0xC3,0x60,0x10,0x01,0x0B,0xAB,0x03,0xFF,0x9B,0x09,0x92,0xEF,0xBB,
+0x09,0x93,0x0B,0x6B,0x07,0x0F,0x7C,0x03,0xC3,0x60,0x10,0x01,0xFF,0x9B,0x0C,0x8E,
+0xEF,0x1B,0x0C,0x8F,0x0F,0x3C,0x03,0x13,0x11,0x00,0x53,0x18,0x02,0x1B,0x11,0x00,
+0x0B,0x0E,0x05,0x0F,0x0E,0x01,0x0B,0x0E,0x07,0x0F,0x0E,0x03,0x0B,0x0B,0x09,0x0F,
+0x0B,0x01,0x0B,0x0B,0x0B,0x0F,0x0B,0x03,0x0B,0x0B,0x0D,0x0E,0xEC,0x01,0x0F,0x0B,
+0x05,0xFE,0xE0,0x7F,0xFF,0x0B,0x0B,0x0F,0x0E,0xEC,0x05,0x0E,0xEC,0x07,0x0E,0xEE,
+0x05,0x0E,0xEE,0x07,0x0E,0xEB,0x09,0x0E,0xEB,0x0B,0x0F,0x0B,0x07,0x0E,0xEB,0x0D,
+0x0E,0xEB,0x0F,0x9B,0x01,0x12,0xF3,0x01,0x0F,0x4C,0x03,0x1A,0xF3,0x00,0x42,0xF8,
+0xBD,0x1A,0xF3,0x01,0xE7,0xFF,0xFE,0x03,0x0A,0xEA,0x17,0x0B,0x0C,0x01,0x43,0x18,
+0xBD,0x5F,0x18,0x06,0x4E,0xF8,0xFA,0x47,0x17,0xC6,0x42,0xF8,0xBD,0xC3,0x00,0x10,
+0x01,0xEB,0x38,0x01,0xA6,0xD6,0xF9,0x01,0x2C,0x0A,0xEA,0x19,0x0B,0x0C,0x03,0x43,
+0x18,0xBD,0x5F,0x18,0x06,0x4E,0xF8,0xFA,0x47,0x17,0xC6,0x42,0xF8,0xBD,0xC3,0x00,
+0x10,0x01,0xEB,0x38,0x01,0xA8,0xD6,0xF9,0x36,0x60,0xE7,0xFF,0x20,0x5A,0xD0,0x60,
+0x36,0x22,0xE7,0xFF,0xD5,0x20,0xC2,0xE0,0x10,0x01,0xEF,0x17,0x05,0xB2,0xD3,0x01,
+0x35,0xA6,0xE4,0x00,0x0D,0x23,0x9B,0x1E,0xEF,0x17,0x0B,0x73,0x1E,0x6A,0x16,0x13,
+0x4A,0x00,0x8A,0xEC,0x8B,0x13,0x9B,0x20,0xE4,0x00,0x00,0x35,0x0B,0x78,0x01,0x9F,
+0x21,0x0F,0x77,0x01,0x5F,0x39,0x00,0x0B,0x78,0x03,0x1F,0x18,0x30,0x0F,0x77,0x03,
+0x9E,0xE4,0xD7,0x3A,0xFF,0x56,0xE7,0xFF,0x6B,0xEE,0xC2,0xE0,0x10,0x01,0xEE,0xF7,
+0x07,0xBE,0x22,0xE4,0x26,0x9A,0x80,0xE4,0x00,0x00,0x5F,0xE7,0xFF,0xBA,0xB0,0x20,
+0x6B,0xD8,0xE7,0xFF,0xBA,0xA2,0x20,0x6C,0xAE,0xE7,0xFF,0xFF,0xD9,0xCC,0x94,0x00,
+0x30,0x88,0xD4,0x1C,0x84,0x10,0x9E,0x81,0x8C,0x8A,0x5E,0x94,0x00,0x1C,0x64,0x06,
+0x9C,0x88,0xE7,0xFF,0x78,0x40,0x10,0xAA,0x00,0xD4,0xB4,0xFF,0x25,0xE4,0x00,0x00,
+0x11,0xE7,0xFF,0x77,0x92,0xE7,0xFF,0xBA,0x3C,0xC3,0x20,0x10,0x01,0xC3,0x00,0x10,
+0x01,0xC2,0xE0,0x10,0x01,0x20,0x68,0xCA,0x53,0x40,0x1E,0xEF,0x59,0x06,0x41,0x53,
+0x20,0x25,0xEF,0x38,0x0D,0x1F,0x9B,0x0F,0xEF,0x17,0x0D,0x95,0x53,0x00,0x16,0xC2,
+0xE0,0x10,0x01,0xC3,0x60,0x10,0x01,0xEF,0x17,0x07,0x19,0xFE,0xDB,0x07,0xAE,0x9A,
+0xA0,0x8A,0x96,0xE4,0x00,0x03,0x5F,0x53,0x40,0x14,0xEF,0x59,0x06,0x41,0x53,0x20,
+0x19,0xEF,0x38,0x0D,0x1F,0x9B,0x0A,0xEF,0x17,0x0D,0x95,0x9B,0x0F,0xE7,0xFF,0xFF,
+0xA5,0x4F,0x15,0x10,0x8F,0x0E,0x0B,0x38,0x00,0xC3,0x2F,0xFF,0xE4,0x20,0x05,0xA3,
+0x0B,0xB8,0x02,0xC3,0xAF,0xFF,0xE0,0x20,0x05,0x79,0xCF,0x15,0x00,0x30,0x8F,0x0A,
+0x0B,0x58,0x17,0x43,0x39,0xD5,0x5F,0x39,0x06,0x4F,0x59,0xFA,0x47,0x3A,0xCE,0x43,
+0x39,0xD5,0x0B,0x58,0x19,0x43,0x5D,0xD5,0x5F,0x5A,0x06,0x4F,0x1A,0xFA,0xC0,0xA0,
+0x10,0x01,0x47,0x58,0xD6,0x43,0x96,0xAC,0x43,0x5A,0xC5,0x5F,0x39,0x06,0x5F,0x5A,
+0x06,0xEB,0x05,0x0D,0x1F,0x13,0xDC,0x00,0xD7,0x58,0x00,0xE4,0xC3,0x80,0x10,0x01,
+0xEB,0x9C,0x06,0x41,0xD7,0x3C,0x00,0x84,0x9B,0x83,0x27,0xC8,0x57,0x1F,0x9E,0x01,
+0xE4,0x00,0x00,0x19,0x9B,0x80,0x23,0xC0,0x24,0x1F,0x9E,0xFF,0x5F,0x9C,0x00,0x43,
+0xD4,0xAC,0x1B,0x9E,0x00,0x43,0x96,0xAC,0x13,0x9C,0x00,0xD3,0x82,0x07,0x51,0xC0,
+0xC0,0x10,0x01,0xEB,0x86,0x07,0x19,0xD7,0x5C,0x00,0x8C,0xCF,0x15,0x00,0x30,0x8F,
+0x0A,0x0F,0xB8,0x19,0xE4,0x00,0x00,0xB3,0xD7,0x58,0x02,0xAC,0x43,0xB8,0xE5,0x40,
+0x7A,0xE5,0x43,0xBD,0xEB,0x43,0x5C,0xD5,0x43,0xD8,0xC3,0x40,0x63,0xD3,0x0F,0x01,
+0x04,0x8C,0x7D,0x0F,0x21,0x08,0x40,0x63,0xF3,0x40,0x63,0xE8,0xE7,0xFF,0x1B,0xA0,
+0x4F,0x55,0x10,0x8F,0x4E,0x5C,0x63,0x06,0x0F,0x01,0x06,0x0B,0x9A,0x02,0x43,0x18,
+0x1D,0xCF,0x55,0x00,0x30,0x0F,0x21,0x0A,0x8F,0x4A,0x0B,0xBA,0x18,0xD7,0x9D,0x00,
+0x58,0x43,0x1C,0xC5,0xE4,0x00,0x00,0x0D,0x8F,0x1C,0x0F,0x1A,0x19,0xC3,0x00,0x10,
+0x01,0xEB,0x58,0x0D,0x95,0xD7,0x3A,0x00,0xCC,0xCF,0x15,0x00,0x30,0x4F,0x35,0x10,
+0x8F,0x0A,0x8F,0x2E,0x0B,0x39,0x01,0x0F,0x38,0x17,0xE4,0x00,0x00,0xB7,0xC3,0x00,
+0x10,0x01,0xEB,0x18,0x06,0x41,0xD7,0x38,0x02,0x7C,0x43,0x98,0xD5,0x40,0x79,0xD5,
+0x43,0x9C,0xE3,0x43,0x3A,0xCD,0x43,0xB8,0xC3,0x40,0x63,0xCB,0x0F,0x01,0x04,0x8C,
+0x7C,0x40,0x63,0xEB,0x40,0x63,0xE0,0xE7,0xFF,0x1A,0xAA,0x4F,0x35,0x10,0x8F,0x2E,
+0x5C,0x63,0x06,0x0F,0x01,0x06,0x0B,0x59,0x00,0x43,0x18,0x1D,0xCF,0x35,0x00,0x30,
+0x8F,0x2A,0x0B,0x99,0x16,0xD7,0x5C,0x00,0x58,0x43,0x1A,0xC5,0xE4,0x00,0x00,0x0D,
+0x8F,0x1A,0x0F,0x19,0x17,0x4F,0x15,0x10,0xCF,0x35,0x00,0x30,0x8F,0x0E,0x8F,0x2A,
+0x1E,0xF5,0x01,0x0B,0x59,0x17,0x5E,0xB7,0x00,0x0B,0x39,0x19,0x0F,0x58,0x01,0x0F,
+0x38,0x03,0x13,0x0A,0x00,0xD7,0x15,0xF3,0x65,0xE7,0xFF,0xB6,0x54,0x20,0x68,0x36,
+0x9B,0x08,0xC2,0xE0,0x10,0x01,0xEF,0x17,0x01,0x59,0x13,0x2A,0x00,0x1E,0xEB,0x04,
+0x8B,0x13,0x9B,0x40,0xD7,0x59,0x02,0x0A,0x0B,0x77,0x00,0xC3,0x6F,0xFF,0xE0,0x20,
+0x00,0x41,0x0B,0x77,0xFD,0x0F,0x77,0x01,0x0B,0x77,0xFF,0xE4,0x00,0x00,0x1B,0x0B,
+0x78,0x01,0x0F,0x77,0x01,0x0B,0x78,0x03,0x0F,0x77,0x03,0x0B,0x78,0x01,0x9F,0x41,
+0x0F,0x77,0xFD,0x5F,0x5A,0x00,0x0B,0x78,0x03,0x1F,0x18,0x30,0x0F,0x77,0xFF,0x9E,
+0xE8,0xE7,0xFF,0xFF,0x87,0xC2,0xE0,0x10,0x01,0x23,0x24,0x82,0x9B,0x02,0xFB,0x17,
+0x09,0x96,0xC2,0xE0,0x10,0x01,0xEA,0xF7,0x01,0x58,0x9B,0x4A,0x9B,0x00,0x43,0x5A,
+0xBD,0x9B,0x6A,0x8A,0xEB,0xE4,0x00,0x00,0x8F,0xF8,0x17,0x09,0x96,0xE7,0xFF,0xFF,
+0xCB,0x0B,0x97,0x04,0x0B,0xB7,0x00,0x0B,0xD7,0x06,0x43,0xBD,0xE5,0x9F,0x01,0x43,
+0xBA,0xEB,0x5F,0x18,0x00,0x43,0xBD,0xD8,0x8F,0xBC,0x0B,0x97,0x02,0x0F,0xB3,0x01,
+0x43,0x9C,0xF5,0x0F,0xB7,0x01,0x43,0x9A,0xE3,0x43,0x9C,0xD8,0x8F,0x9E,0x5F,0x9C,
+0x06,0x0F,0x93,0x03,0x0F,0x97,0x03,0x1E,0x73,0x30,0x9E,0xE8,0xD7,0x19,0xFE,0x2E,
+0x12,0xF1,0x00,0x56,0xF7,0x02,0x22,0xE0,0x24,0x98,0x64,0xE7,0xFF,0xCB,0x1C,0x12,
+0xEA,0x00,0xD2,0xE1,0x05,0xCE,0xC3,0x40,0x10,0x01,0xC2,0xE0,0x10,0x01,0xF3,0x3A,
+0x01,0xAB,0xFF,0x17,0x07,0x9C,0xC3,0x20,0x1F,0xE4,0x20,0x00,0x61,0x0B,0x2A,0x17,
+0xF8,0x1A,0x01,0xAB,0xEF,0x37,0x07,0x9D,0x0A,0xEA,0x19,0x0E,0xF8,0x03,0xE4,0x00,
+0x01,0x31,0x23,0x25,0xE2,0x0B,0x4A,0x16,0xEB,0x37,0x07,0x9C,0x43,0x7A,0xCD,0x1F,
+0x7B,0x1D,0x5F,0x67,0x5B,0x20,0x01,0x29,0x0B,0x8A,0x18,0x0B,0xB8,0x02,0x43,0x7C,
+0xED,0x1F,0x7B,0x27,0x5F,0x69,0xDB,0x20,0x00,0xE1,0x9B,0x63,0x4F,0x39,0x08,0x8F,
+0x3A,0x43,0x39,0xD8,0x5F,0x39,0x06,0xEF,0x37,0x07,0x9D,0x0F,0x2A,0x17,0x4E,0xFD,
+0x08,0x0F,0x2E,0x01,0x8E,0xFC,0x0F,0x2B,0x01,0x42,0xF7,0xD8,0x5E,0xF7,0x06,0x0E,
+0xF8,0x03,0x0E,0xEA,0x19,0x0E,0xEE,0x03,0x0E,0xEB,0x03,0xE4,0x00,0x00,0x67,0xC2,
+0xE0,0x10,0x01,0xFF,0x17,0x07,0x9C,0xEF,0x57,0x07,0x9D,0xC2,0xE0,0x10,0x01,0xEA,
+0xF7,0x0B,0xAD,0x0E,0xF8,0x03,0xE4,0x00,0x00,0x31,0x0B,0x2A,0x17,0xEF,0x37,0x07,
+0x9D,0x0A,0xEA,0x19,0x0E,0xF8,0x03,0xE4,0x00,0x00,0x1F,0x22,0xE8,0x2E,0xC2,0xE0,
+0x10,0x01,0xF8,0x17,0x01,0xAB,0x13,0x0A,0x00,0xC2,0xE0,0x10,0x01,0x98,0x61,0xFB,
+0x17,0x07,0xAD,0xE7,0xFF,0xA7,0xC8,0xE4,0x00,0x00,0x19,0x18,0x0F,0x00,0x9A,0xE4,
+0x0E,0xED,0x00,0x0E,0xED,0x02,0xD2,0xE4,0x01,0xBE,0x0A,0xF0,0x01,0x56,0xF7,0x08,
+0x22,0xE0,0x5C,0x9A,0xE3,0x18,0x12,0x00,0x0E,0xED,0x00,0xC2,0xE0,0x10,0x01,0xEC,
+0x17,0x0B,0x73,0xE4,0x00,0x00,0x35,0x12,0xEF,0x00,0x9E,0xE1,0x5E,0xF7,0x00,0x1A,
+0xEF,0x00,0x26,0xE4,0x2D,0x9A,0xE5,0x18,0x0F,0x00,0x0E,0xED,0x00,0x0E,0xED,0x02,
+0xD2,0xE5,0x0A,0x1E,0x12,0xEF,0x00,0x9E,0xE1,0x1A,0xEF,0x00,0xC2,0xE0,0x10,0x01,
+0xF2,0xF7,0x07,0xAD,0x22,0xE9,0x36,0x12,0xF1,0x00,0x56,0xF7,0x01,0x22,0xE1,0x10,
+0xC2,0xE0,0x10,0x01,0xF8,0x17,0x09,0x96,0xC1,0x40,0x10,0x01,0xF2,0xEA,0x07,0xAC,
+0x22,0xE8,0x66,0x98,0x65,0xE7,0xFF,0xC8,0x68,0x98,0x61,0xE7,0xFF,0xA6,0xB8,0x9A,
+0xE1,0xFA,0xEA,0x07,0xAC,0xE4,0x00,0x01,0x61,0xD2,0xE1,0x05,0x3E,0x98,0x65,0xE7,
+0xFF,0xC8,0x34,0x98,0x61,0xE7,0xFF,0xA6,0x84,0xF8,0x0A,0x07,0xAC,0xE4,0x00,0x01,
+0x31,0x0B,0x2C,0x00,0x0B,0x4B,0x00,0x43,0x19,0xD5,0x5F,0x18,0x06,0x4E,0xF8,0xFA,
+0x47,0x17,0xC6,0x42,0xF8,0xBD,0xC2,0xE0,0x19,0x0C,0x20,0x00,0x7D,0x0A,0xEB,0x03,
+0x0B,0x0C,0x03,0x43,0x18,0xBD,0x5F,0x18,0x06,0x4E,0xF8,0xFA,0x47,0x17,0xC6,0x42,
+0xF8,0xBD,0xC2,0xE0,0x21,0xC8,0x20,0x01,0x69,0xC3,0x00,0x10,0x01,0xF2,0xF8,0x09,
+0x96,0x22,0xE8,0xB6,0x8F,0x3A,0x43,0x39,0xB8,0x0F,0x2A,0x17,0xC3,0x20,0x10,0x01,
+0xEB,0x59,0x0D,0x16,0xC3,0x20,0x10,0x01,0xEB,0x39,0x0C,0x98,0x8F,0x3A,0x42,0xF9,
+0xB8,0x0E,0xEA,0x19,0x9A,0xE1,0xFA,0xF8,0x09,0x96,0xE4,0x00,0x00,0x33,0x22,0xE4,
+0x8A,0x0F,0x2A,0x17,0xF8,0x18,0x09,0x96,0xC3,0x20,0x10,0x01,0xEB,0x39,0x0D,0x17,
+0x0F,0x2A,0x19,0x1A,0xEA,0x00,0x98,0x61,0xE7,0xFF,0xA5,0x5E,0xE4,0x00,0x00,0x13,
+0x9A,0xE3,0x1A,0xEF,0x00,0x12,0xEF,0x00,0xD2,0xE2,0x0B,0x19,0xC2,0xE0,0x10,0x01,
+0xEC,0x17,0x0B,0x73,0xE7,0xFF,0x14,0x3E,0x9B,0x03,0xC2,0xE0,0x10,0x01,0xFB,0x17,
+0x0D,0x79,0xE7,0xFF,0xCA,0x00,0xE7,0xFF,0x6D,0x88,0xC2,0xE0,0x10,0x01,0xF3,0x17,
+0x01,0xAB,0xC3,0x00,0x1F,0xE0,0x20,0x00,0x25,0x9B,0x01,0xFB,0x17,0x01,0xAB,0x98,
+0x60,0xE7,0xFF,0xA4,0xCC,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x09,0x99,0x9A,0xE6,0xE4,
+0x00,0x01,0x1F,0xD2,0xE6,0x08,0xC6,0x0A,0xF0,0x01,0x56,0xF7,0x40,0x22,0xE0,0x26,
+0x98,0x64,0xE7,0xFF,0xE9,0x32,0xC3,0x00,0x10,0x01,0xF2,0xF8,0x09,0x99,0x9E,0xE1,
+0x5E,0xF7,0x00,0xFA,0xF8,0x09,0x99,0x5E,0xE6,0x53,0x0A,0xF0,0x01,0x20,0x01,0x41,
+0x56,0xF7,0x40,0x22,0xE0,0x50,0x9A,0xE1,0x0E,0xED,0x00,0xC2,0xE0,0x10,0x01,0xF8,
+0x17,0x0A,0x5B,0xE4,0x00,0x01,0xB1,0x0C,0x0D,0x00,0x0E,0xC1,0x12,0x0E,0xA1,0x16,
+0x0E,0x81,0x1A,0x0E,0x61,0x1E,0x0E,0x41,0x22,0x0E,0x21,0x26,0x0E,0x01,0x2A,0x0D,
+0xE1,0x2E,0x0D,0xC1,0x32,0x0D,0xA1,0x36,0x0D,0x81,0x3A,0x0D,0x61,0x3E,0x0D,0x41,
+0x42,0x0D,0x21,0x46,0x98,0x60,0x1C,0x21,0x48,0xE7,0xFF,0xE8,0x65,0x56,0xF7,0x08,
+0xD2,0xE0,0x04,0xDA,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0D,0xAC,0x9A,0xE2,0x0E,0xED,
+0x00,0xE4,0x00,0x01,0x15,0xC2,0xEF,0xFF,0xE4,0x23,0xDF,0x59,0xE7,0xFF,0xF0,0xB3,
+0x0B,0x8B,0x01,0x43,0x98,0xE5,0x5F,0x9C,0x06,0x4F,0x7C,0xFA,0x47,0x9B,0xE6,0x43,
+0x7C,0xDD,0xC3,0x60,0x19,0x0C,0x23,0xE2,0x93,0xE7,0xFF,0xF1,0x75,0x98,0x62,0xE7,
+0xFF,0xC4,0xD4,0xFE,0xE0,0x7F,0xFF,0x0E,0xEC,0x05,0x0E,0xEC,0x07,0x0E,0xEE,0x05,
+0x0E,0xEE,0x07,0x0E,0xEB,0x09,0x0E,0xEB,0x0B,0x0E,0xEB,0x0D,0x0E,0xEB,0x0F,0xE7,
+0xFF,0xF0,0x2D,0xFE,0xE0,0x7F,0xFF,0x18,0x0F,0x00,0x0E,0xEC,0x01,0x0E,0xEC,0x03,
+0x0E,0xEC,0x05,0x0E,0xEC,0x07,0x18,0x13,0x00,0x1B,0x13,0x01,0x9A,0xE5,0xE7,0xFF,
+0xFB,0x05,0xC2,0xE0,0x10,0x01,0xCA,0xC0,0xFF,0xFD,0xEB,0x17,0x0B,0x73,0x9F,0x01,
+0x5F,0x18,0x04,0xD7,0x16,0xCA,0x1D,0xE7,0xFF,0xF2,0x83,0x0E,0xC1,0x12,0x0E,0xA1,
+0x16,0x0E,0x81,0x1A,0x0E,0x61,0x1E,0x0E,0x41,0x22,0x0E,0x21,0x26,0x0E,0x01,0x2A,
+0x0D,0xE1,0x2E,0x0D,0xC1,0x32,0x0D,0xA1,0x36,0x0D,0x81,0x3A,0x0D,0x61,0x3E,0x0D,
+0x41,0x42,0x0D,0x21,0x46,0x1C,0x21,0x48,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,
+0x3D,0xF9,0x1C,0x21,0xB8,0x0D,0x21,0x44,0x0D,0x41,0x40,0x0D,0x61,0x3C,0x0D,0x81,
+0x38,0x0D,0xA1,0x34,0x0D,0xC1,0x30,0x0D,0xE1,0x2C,0x0E,0x01,0x28,0x0E,0x21,0x24,
+0x0E,0x41,0x20,0x0E,0x61,0x1C,0x13,0x17,0x00,0xC2,0xE0,0x10,0x01,0xFB,0x17,0x00,
+0xA8,0xF3,0x17,0x00,0xA8,0x23,0x00,0x2C,0xF2,0xF7,0x00,0xA8,0xD2,0xE1,0x3B,0x86,
+0xC1,0xA0,0x10,0x01,0xFD,0xAD,0x06,0x44,0x0A,0xED,0x01,0x56,0xF7,0x80,0xD2,0xE0,
+0x38,0x8E,0xC1,0x60,0x10,0x01,0xC2,0xE0,0x10,0x01,0xFD,0x6B,0x0B,0x94,0x13,0x4B,
+0x00,0x23,0x40,0x24,0x9B,0x03,0xFB,0x17,0x06,0x42,0xF3,0x17,0x06,0x42,0x23,0x00,
+0x34,0x9F,0x1F,0xC3,0x20,0x10,0x01,0xFB,0x19,0x06,0x42,0xF3,0x17,0x06,0x42,0xC1,
+0x80,0x10,0x01,0xC2,0xE0,0x10,0x01,0xFD,0x8C,0x0C,0xB6,0xFE,0xF7,0x0D,0x1C,0x23,
+0x01,0x5E,0x8B,0x0C,0x9B,0x20,0x0B,0x98,0x00,0x4F,0x7C,0xFA,0x47,0x9B,0xE6,0x43,
+0x7C,0xDD,0x5F,0x6C,0x71,0x20,0x00,0x21,0x9F,0x21,0x5F,0x39,0x00,0xC3,0x60,0x10,
+0x01,0x9F,0x02,0xFF,0x7B,0x0D,0x0E,0xD7,0x1B,0xFE,0xFE,0x5F,0x23,0xF3,0x20,0x00,
+0x41,0x23,0x40,0x36,0x53,0x00,0x19,0x1B,0x17,0x00,0xE4,0x00,0x00,0x25,0x13,0x17,
+0x00,0x23,0x00,0x2C,0x9F,0x1F,0x18,0x0B,0x00,0x1B,0x17,0x00,0x12,0xF7,0x00,0x22,
+0xE0,0x28,0xE4,0x00,0x0D,0xE5,0x18,0x17,0x00,0x0A,0xEC,0x28,0x9B,0x0D,0xCE,0xF7,
+0x00,0x0E,0x42,0xF7,0xC0,0x53,0x00,0x10,0x0E,0xEC,0x29,0x0A,0xEC,0x2E,0xCE,0xF7,
+0x00,0x11,0x42,0xF7,0xC0,0x5E,0xF7,0x06,0x0E,0xEC,0x2F,0x0B,0x0C,0x2C,0x4F,0x38,
+0x08,0xD6,0xF9,0x00,0xF0,0xCE,0xF7,0x00,0x12,0x53,0x20,0x11,0x42,0xF7,0xC8,0xCF,
+0x18,0x00,0x13,0x0E,0xEC,0x2F,0x52,0xE0,0x14,0x43,0x18,0xB8,0x0F,0x0C,0x2D,0x0A,
+0xEC,0x54,0x53,0x00,0x14,0xCE,0xF7,0x00,0x15,0x42,0xF7,0xC0,0x0E,0xEC,0x55,0xC1,
+0xE0,0x10,0x01,0xC2,0xE0,0x10,0x01,0xC2,0x20,0x10,0x01,0xF2,0xF7,0x08,0x74,0xC1,
+0x40,0x10,0x01,0x56,0xF7,0x10,0xC2,0x00,0x10,0x01,0xFD,0xEF,0x0D,0x96,0xFD,0xD1,
+0x07,0x38,0xFD,0x4A,0x01,0x2E,0xD2,0xE0,0x07,0x32,0x98,0xA0,0x88,0x6C,0x10,0x8A,
+0x24,0xE7,0xFF,0xCB,0xF4,0xFE,0x10,0x0A,0x4C,0x12,0xF0,0x04,0x10,0x70,0x01,0x98,
+0x80,0x40,0x63,0xBB,0xE7,0xFF,0xC5,0x0A,0x88,0x6C,0x10,0x8A,0x24,0x98,0xA1,0xE7,
+0xFF,0xCB,0xB8,0x12,0xF0,0x01,0x13,0x50,0x04,0x9B,0x00,0x43,0x5A,0xBB,0x08,0x6E,
+0x00,0x8A,0xF8,0xE4,0x00,0x00,0x35,0x4F,0x37,0x10,0x8F,0x2E,0x0F,0x39,0x02,0xD7,
+0x23,0x00,0x48,0x5C,0x79,0x06,0x8B,0x17,0x9E,0xE1,0x5E,0xF7,0x00,0xD7,0x57,0xFF,
+0x54,0x9B,0x21,0x23,0x00,0x48,0x1E,0xF8,0xF6,0x5E,0xF7,0x00,0x26,0xE4,0x25,0x5F,
+0x02,0x9B,0x4B,0x21,0x01,0x8A,0xEF,0x0B,0x17,0x00,0x5F,0x19,0xF1,0x20,0x00,0x5D,
+0xC3,0x00,0x10,0x01,0x9E,0xE2,0xFF,0x18,0x0D,0x9E,0xD6,0xF8,0xFF,0x6E,0x9B,0x00,
+0xE4,0x00,0x00,0x0D,0x9B,0x01,0xC2,0xE0,0x10,0x01,0xEB,0x57,0x07,0x32,0x23,0x40,
+0x2E,0xEC,0x77,0x07,0x33,0xE4,0x00,0x01,0x87,0xC0,0x60,0x22,0x68,0x20,0x00,0xB5,
+0x23,0x20,0xA8,0x23,0x00,0x9E,0xEC,0x77,0x07,0x33,0x9A,0xEA,0xC3,0x00,0x10,0x01,
+0xCC,0x63,0x00,0x0C,0x40,0x63,0xB8,0xC2,0xE0,0x10,0x01,0x5C,0x63,0x06,0xF8,0x18,
+0x07,0x30,0xEC,0x77,0x01,0x4B,0xE7,0xFF,0x26,0x4A,0xC2,0xE0,0x10,0x01,0xF3,0x17,
+0x09,0x97,0x9F,0x01,0xFB,0x17,0x09,0x97,0xE4,0x00,0x01,0x01,0xFE,0x10,0x0A,0x4C,
+0x12,0xF0,0x04,0x10,0x70,0x01,0x98,0x80,0x40,0x63,0xBB,0xE7,0xFF,0xC3,0x5C,0x13,
+0x10,0x01,0x13,0x50,0x04,0x0A,0xEE,0x00,0x43,0x5A,0xC3,0x9B,0x00,0xE4,0x00,0x00,
+0x35,0x4F,0x38,0x10,0x9F,0x01,0x8F,0x2E,0x5F,0x18,0x00,0x0F,0x39,0x02,0x5F,0x79,
+0x06,0x5F,0x37,0x1D,0x4A,0xFB,0xB8,0xD7,0x58,0xFF,0x54,0xC2,0xE2,0x32,0x88,0x20,
+0x00,0x41,0x4E,0xF7,0x0A,0x5C,0x77,0x06,0x0C,0x6A,0x1D,0xE4,0x00,0x00,0x53,0xCB,
+0x00,0x01,0x13,0xC2,0xE0,0x89,0x68,0x20,0x00,0x25,0x4F,0x17,0x12,0x5F,0x18,0x06,
+0x0F,0x0A,0x1D,0xC8,0x60,0x01,0x13,0xC2,0xE0,0x89,0x68,0x20,0x00,0x25,0x4E,0xF7,
+0x12,0x5C,0x77,0x06,0xE7,0xFF,0x25,0x2E,0x0E,0xEE,0x02,0xC2,0xE0,0x1F,0x48,0x20,
+0x00,0x35,0x0E,0xEE,0x2E,0xC2,0xE0,0x1F,0x4C,0x20,0x00,0x5D,0x0E,0xEE,0x2A,0xC2,
+0xE0,0x1F,0x48,0x20,0x00,0x85,0x0E,0xEE,0x56,0xC2,0xE0,0x1F,0x48,0x20,0x00,0x5D,
+0xFF,0x00,0x04,0x4C,0xC2,0xE0,0x10,0x01,0xFC,0x60,0x03,0x39,0xEF,0x17,0x01,0x4B,
+0xE4,0x00,0x00,0x29,0xFF,0x00,0x01,0x13,0xC2,0xE0,0x10,0x01,0xFC,0x60,0x01,0x13,
+0xEF,0x17,0x01,0x4B,0xE7,0xFF,0x24,0x8E,0x88,0x6A,0xC2,0x00,0x10,0x01,0xFE,0x10,
+0x01,0x60,0x88,0x90,0xE7,0xFF,0x24,0xD2,0x0B,0x0F,0x00,0x0A,0xEF,0x02,0x8E,0xF8,
+0x0B,0x0F,0x04,0xC1,0xC0,0x10,0x01,0x8E,0xF8,0xFD,0xCE,0x0A,0xB8,0x0B,0x0F,0x06,
+0x8E,0xF8,0xC2,0xE0,0x38,0x48,0x20,0x00,0x21,0x9A,0xE1,0x0E,0xEE,0x00,0x12,0xEB,
+0x00,0x22,0xE0,0xB6,0x0E,0xEE,0x02,0x22,0xE4,0x9E,0x98,0x60,0xE7,0xFF,0xDF,0xFE,
+0xC2,0xE0,0x10,0x01,0xF3,0x17,0x07,0xA4,0x9F,0x01,0x5F,0x18,0x00,0xFB,0x17,0x07,
+0xA4,0x5F,0x06,0x53,0x20,0x00,0x29,0x0C,0x0E,0x00,0xF8,0x17,0x07,0xA4,0xC1,0xE0,
+0x10,0x01,0x0E,0xEE,0x02,0xFD,0xEF,0x07,0xAD,0xD2,0xE0,0x06,0x4E,0x12,0x2B,0x00,
+0x89,0xCC,0x8A,0xEC,0x53,0x20,0x14,0x0B,0x17,0x00,0xCF,0x18,0x00,0x23,0x43,0x18,
+0xC8,0x0F,0x17,0x01,0xC3,0x60,0x10,0x01,0x9E,0xE2,0xFF,0x7B,0x0D,0x0E,0xD6,0xFB,
+0xFF,0x4E,0x88,0x6A,0x88,0x90,0xE7,0xFF,0x23,0xAE,0x9B,0x00,0x22,0x20,0x4A,0x12,
+0xEB,0x00,0x26,0xE4,0x33,0x12,0xEF,0x00,0x5E,0xE0,0x01,0x4B,0x01,0x01,0x12,0xEB,
+0x00,0x22,0xE9,0x3E,0x12,0xEF,0x00,0x22,0xE5,0x4A,0x13,0x2B,0x07,0x12,0xEB,0x37,
+0xD7,0x37,0x02,0x4A,0x0E,0xEB,0x0A,0x22,0xE5,0x0A,0x0E,0xEB,0x3A,0x22,0xE4,0xF2,
+0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x0D,0xB2,0x22,0xEC,0xC6,0x0A,0xEB,0x16,0xFF,0x37,
+0xFC,0x01,0xC2,0xE0,0x7F,0xCC,0x20,0x00,0x29,0xCB,0x20,0x03,0xFF,0x43,0x39,0xBD,
+0xC2,0xE0,0x10,0x01,0xEA,0xF7,0x0A,0x57,0xD7,0x37,0x00,0xA4,0xE4,0x00,0x00,0x1B,
+0x22,0xE4,0x26,0x12,0xEF,0x00,0x22,0xE0,0x18,0x23,0x00,0xA4,0x53,0x00,0x23,0x0A,
+0xEE,0x00,0xCE,0xF7,0x00,0x14,0x42,0xF7,0xC0,0x0E,0xEE,0x01,0xC2,0xE0,0x10,0x01,
+0x9D,0xC2,0xFE,0xF7,0x0D,0x0E,0xD5,0xD7,0xFF,0x4E,0x88,0x6A,0x88,0x90,0xE7,0xFF,
+0x22,0x7E,0x12,0xEB,0x00,0x22,0xE0,0x5A,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x07,0xBC,
+0x13,0x2B,0x00,0xD3,0x20,0x0A,0xF6,0xE4,0x00,0x02,0xEF,0x88,0xAA,0x98,0x61,0x98,
+0x81,0xE7,0xFF,0x14,0x4E,0xC0,0xE0,0x10,0x01,0xFC,0xE7,0x01,0x68,0xC0,0x60,0x10,
+0x01,0x88,0x87,0x0C,0xE1,0x0C,0xFC,0x63,0x04,0x1E,0xE7,0xFF,0x54,0x3E,0xC2,0xE0,
+0x10,0x01,0xEC,0x77,0x04,0x38,0x9A,0xE4,0x88,0xD0,0x1A,0xE1,0x00,0x98,0x61,0x98,
+0x81,0x88,0xAA,0x0C,0xE1,0x0E,0x51,0x00,0x14,0xE7,0xFF,0x26,0x4E,0x0A,0xEA,0x14,
+0x0B,0x0A,0x0A,0x0B,0x2A,0x16,0x5D,0xD7,0x04,0x42,0x18,0xBD,0x40,0x98,0xCD,0xCA,
+0xE0,0x07,0xFF,0x43,0x37,0xCD,0x0B,0x4A,0x06,0x0B,0x6A,0x0C,0x40,0x77,0xC5,0x5C,
+0xD9,0x04,0x13,0xCB,0x00,0x0B,0x2A,0x0E,0x42,0x38,0xD5,0x42,0x57,0xCD,0x40,0xBA,
+0xC5,0x40,0xF9,0xDD,0x42,0x7B,0xCD,0x1E,0xEB,0x18,0x9B,0xA0,0xC9,0x00,0x07,0xFF,
+0xE4,0x00,0x00,0xC5,0x0B,0x97,0xFE,0xD7,0x1C,0x00,0x98,0x43,0x9C,0xD5,0x43,0x9C,
+0x83,0x43,0x9C,0x88,0x8F,0x8E,0xE4,0x00,0x00,0x2D,0xD7,0x83,0x00,0xA8,0x43,0x88,
+0xE5,0x43,0x9C,0xD5,0x43,0x9C,0x23,0x43,0x9C,0x28,0x8F,0x86,0x0F,0x97,0xFF,0x0B,
+0x97,0x00,0xD7,0x3C,0x00,0x88,0x43,0x9C,0xDD,0x43,0x9C,0xCB,0x43,0x9C,0x38,0xE4,
+0x00,0x00,0x31,0xD7,0x92,0x00,0xB8,0x43,0x88,0xE5,0x43,0x9C,0xDD,0x43,0x9C,0xCB,
+0x43,0x9C,0x98,0xFF,0x9C,0x07,0xFF,0x0F,0x97,0x01,0x9F,0xA1,0x1E,0xF7,0x30,0x5F,
+0xBD,0x00,0xD7,0xBE,0xFD,0x16,0x0B,0x0A,0x16,0xCA,0xE0,0x07,0xFF,0x0B,0x2A,0x14,
+0x0B,0x4A,0x10,0x43,0x77,0xCD,0x42,0xF7,0xD5,0x43,0x7B,0xC5,0x0B,0x0A,0x12,0x43,
+0x97,0xC5,0x1E,0xEB,0x16,0x9B,0x00,0xE4,0x00,0x00,0x59,0x0B,0xB7,0x00,0x43,0xBD,
+0xCD,0xCF,0xBD,0x07,0xFF,0x43,0xBD,0xD8,0x9F,0x01,0x0F,0xB7,0x01,0x5F,0x18,0x00,
+0x0B,0xB7,0x02,0x43,0xBD,0xD5,0xCF,0xBD,0x07,0xFF,0x43,0xBD,0xE0,0x0F,0xB7,0x03,
+0x1E,0xF7,0x30,0xD7,0x1E,0xFE,0xC6,0xE7,0xFF,0xFD,0x63,0xCF,0x57,0x00,0x30,0x9E,
+0xE1,0x8F,0x4B,0x0F,0x5A,0x0E,0xC3,0x40,0x95,0xEC,0x4B,0x18,0x0A,0xE4,0x00,0x00,
+0x11,0x9A,0xE0,0x8B,0x17,0x5F,0x57,0x00,0xD7,0x3A,0xFF,0x1D,0xC2,0xE0,0x10,0x01,
+0xEF,0x17,0x07,0xBC,0x0A,0xED,0x01,0x52,0xF7,0x08,0xE4,0x00,0x00,0x33,0x9B,0x07,
+0xC2,0xE0,0x10,0x01,0x18,0x0F,0x00,0xEF,0x17,0x01,0x59,0x0A,0xED,0x01,0x9B,0x17,
+0x46,0xF7,0xC4,0x0E,0xED,0x01,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x00,0xCA,0xD2,0xE1,
+0x0E,0xB6,0xE7,0xFF,0xDB,0x06,0xC2,0xE0,0x10,0x01,0x99,0x40,0xEE,0xF7,0x05,0xB2,
+0x22,0xE5,0x76,0xE4,0x00,0x02,0x51,0x1C,0x61,0x15,0x88,0x8F,0x98,0xA3,0xE7,0xFF,
+0x66,0x1E,0x1E,0xE1,0x18,0x8E,0xEA,0x12,0xF7,0xFD,0x1F,0x17,0x2C,0x4E,0xF7,0x08,
+0x4F,0x18,0x08,0x8E,0xF0,0x8F,0x0C,0x0A,0xF7,0x01,0x0B,0x18,0x00,0xD7,0x17,0x00,
+0xA0,0x9A,0xE1,0xEB,0x0B,0x0D,0x83,0x4E,0xF7,0x54,0x46,0xF7,0xC5,0xE4,0x00,0x00,
+0x27,0x9A,0xE1,0xEB,0x0B,0x0D,0x83,0x4E,0xF7,0x54,0x46,0xF7,0xBF,0x46,0xF7,0xC4,
+0x9D,0x41,0xEE,0xEB,0x0D,0x83,0x5D,0x4A,0x00,0xE4,0x00,0x00,0x39,0xC1,0xF8,0x00,
+0x21,0xC2,0x00,0x10,0x01,0xC1,0xC0,0x10,0x01,0xFD,0xEF,0xB5,0x0A,0xFE,0x10,0x01,
+0x5A,0xC1,0x60,0x10,0x01,0xF2,0xEE,0x09,0x9A,0xD6,0xEA,0xFC,0x75,0xC2,0xE0,0x10,
+0x01,0xEA,0xF7,0x0D,0x83,0x22,0xE0,0x34,0x0A,0xED,0x01,0x52,0xF7,0x10,0xE4,0x00,
+0x00,0x3B,0x0A,0xED,0x01,0x57,0x17,0x10,0x23,0x00,0x34,0x9B,0x21,0xC3,0x00,0x10,
+0x01,0xFB,0x38,0x0D,0x79,0x1F,0x60,0xEF,0x46,0xF7,0xDC,0x0E,0xED,0x01,0xC1,0x40,
+0x10,0x01,0xEE,0xEA,0x07,0x9A,0x22,0xE0,0x6A,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x09,
+0x90,0x0A,0xED,0x01,0x56,0xF7,0x10,0x22,0xE1,0x90,0x9A,0xE1,0xE4,0x00,0x00,0x4D,
+0x22,0xE4,0xAA,0xC3,0x00,0x10,0x01,0xF2,0xF8,0x09,0x90,0x9E,0xE1,0x5E,0xF7,0x00,
+0xFA,0xF8,0x09,0x90,0x0B,0x0D,0x01,0x57,0x18,0x10,0x23,0x00,0xF4,0x26,0xE4,0xF9,
+0x9A,0xE2,0xEE,0xEA,0x07,0x98,0xE4,0x00,0x00,0x6B,0x22,0xE8,0x92,0xC2,0xE0,0x10,
+0x01,0xF8,0x17,0x09,0x90,0x0A,0xED,0x01,0x56,0xF7,0x10,0x22,0xE0,0x34,0x98,0x62,
+0xE7,0xFF,0x93,0xCE,0xE4,0x00,0x00,0x2F,0x9A,0xE3,0xE7,0xFF,0xFF,0xB1,0x22,0xEC,
+0x36,0x98,0x60,0xE7,0xFF,0x93,0xA8,0xEC,0x0A,0x07,0x98,0x0B,0x0D,0x00,0xC2,0xE0,
+0x10,0x01,0x27,0x1C,0x56,0xF3,0x17,0x0C,0x8C,0xD3,0x09,0x01,0xDD,0x9F,0x01,0xFB,
+0x17,0x0C,0x8C,0xE4,0x00,0x00,0x63,0xF8,0x17,0x0C,0x8C,0xE4,0x00,0x00,0xF3,0xC2,
+0xE0,0x10,0x01,0xEE,0xF7,0x00,0xCA,0x22,0xE5,0xB6,0x9B,0x05,0xC2,0xE0,0x10,0x01,
+0xEF,0x17,0x0D,0xB0,0x9B,0x03,0xC2,0xE0,0x10,0x01,0x98,0x60,0xFB,0x17,0x0D,0x79,
+0xE7,0xFF,0x93,0x0E,0x0E,0x61,0x1E,0x0E,0x41,0x22,0x0E,0x21,0x26,0x0E,0x01,0x2A,
+0x0D,0xE1,0x2E,0x0D,0xC1,0x32,0x0D,0xA1,0x36,0x0D,0x81,0x3A,0x0D,0x61,0x3E,0x0D,
+0x41,0x42,0x0D,0x21,0x46,0x1C,0x21,0x48,0xE7,0xFF,0x8D,0x27,0x0E,0x61,0x1E,0x0E,
+0x41,0x22,0x0E,0x21,0x26,0x0E,0x01,0x2A,0x0D,0xE1,0x2E,0x0D,0xC1,0x32,0x0D,0xA1,
+0x36,0x0D,0x81,0x3A,0x0D,0x61,0x3E,0x0D,0x41,0x42,0x0D,0x21,0x46,0x1C,0x21,0x48,
+0xE7,0xFF,0x8D,0x99,0x0E,0x61,0x1E,0x0E,0x41,0x22,0x0E,0x21,0x26,0x0E,0x01,0x2A,
+0x0D,0xE1,0x2E,0x0D,0xC1,0x32,0x0D,0xA1,0x36,0x0D,0x81,0x3A,0x0D,0x61,0x3E,0x0D,
+0x41,0x42,0x0D,0x21,0x46,0x1C,0x21,0x48,0x85,0x29,0x1C,0x21,0xE0,0xC3,0x00,0x10,
+0x01,0x0D,0x21,0x1C,0xFF,0x18,0x0D,0x96,0x0D,0x41,0x18,0x0D,0x61,0x14,0x0D,0x81,
+0x10,0x0D,0xA1,0x0C,0x0D,0xC1,0x08,0x0D,0xE1,0x04,0x8A,0xF8,0x8B,0x58,0xCB,0x20,
+0x7F,0xFF,0x0B,0x7A,0x00,0x4F,0x9B,0xFA,0x9F,0x42,0x47,0xBC,0xDE,0x43,0xBD,0xE5,
+0x4F,0x99,0xFA,0x47,0xDC,0xCE,0x43,0x9E,0xE5,0x5F,0x9D,0x15,0x4B,0x39,0xD8,0xC3,
+0x60,0x10,0x01,0xFF,0x7B,0x0D,0x9E,0xD7,0x5B,0xFE,0xDE,0x5F,0x59,0x06,0x5F,0x46,
+0x11,0x20,0x00,0x19,0x53,0x20,0x30,0x5F,0x79,0x06,0x8B,0x37,0x0B,0x59,0x01,0x43,
+0x5A,0xDD,0x0F,0x59,0x01,0xC3,0x40,0x10,0x01,0x9F,0x22,0xFF,0x5A,0x0D,0x9E,0xD7,
+0x3A,0xFF,0x6E,0xCB,0x40,0x7F,0xFF,0x0B,0x79,0x00,0x4F,0x9B,0xFA,0x9F,0x22,0x47,
+0xBC,0xDE,0x43,0xBD,0xE5,0x4F,0x9A,0xFA,0x47,0xDC,0xD6,0x43,0x9E,0xE5,0x5F,0x9D,
+0x15,0x4B,0x5A,0xD8,0xC3,0x60,0x10,0x01,0xFF,0x7B,0x0D,0xA4,0xD7,0x3B,0xFE,0xDE,
+0x5F,0x3A,0x06,0x5F,0x26,0x11,0x20,0x00,0x19,0x53,0x40,0x30,0x5F,0x5A,0x04,0x0B,
+0x38,0x09,0x43,0x39,0xD5,0x0F,0x38,0x09,0x0B,0x38,0x0B,0x43,0x39,0xD5,0x0F,0x38,
+0x0B,0x0B,0x38,0x0D,0x43,0x59,0xD5,0x0F,0x58,0x0D,0xC3,0x00,0x10,0x01,0xFF,0x18,
+0x0D,0x81,0x13,0x58,0x00,0xD3,0x49,0x01,0x45,0x8B,0x37,0x0B,0x99,0x00,0x4F,0x7C,
+0xFA,0x47,0x9B,0xE6,0x43,0x7C,0xDD,0xD3,0x6F,0x0E,0xBC,0xC3,0x60,0x10,0x01,0x9F,
+0x22,0xFF,0x7B,0x0D,0xA6,0xD7,0x3B,0xFF,0x36,0xE4,0x00,0x03,0x79,0xC1,0xA0,0x10,
+0x01,0xC1,0x60,0x10,0x01,0xFD,0xAD,0x08,0x74,0xC1,0x80,0x10,0x01,0x13,0x2D,0x00,
+0xFD,0x6B,0x0D,0x80,0x57,0x39,0x10,0xFD,0x8C,0x0C,0x88,0xD3,0x20,0x05,0xB6,0x13,
+0x18,0x00,0xD3,0x0A,0x0D,0xB6,0xC3,0x00,0x10,0x01,0xC1,0x40,0x10,0x01,0xEF,0x38,
+0x0D,0xB2,0xFD,0x4A,0x07,0x28,0x8B,0x0A,0x0B,0x57,0x00,0x5F,0x42,0xF1,0x20,0x00,
+0x3D,0x13,0x58,0x00,0x9F,0x41,0x1B,0x58,0x00,0xE4,0x00,0x00,0x0F,0x18,0x18,0x00,
+0x13,0x58,0x00,0x27,0x49,0x21,0x27,0x29,0x0B,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x0D,
+0xB0,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0A,0x5B,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0D,
+0xAC,0xE7,0xFF,0xC6,0x60,0x12,0xED,0x00,0x52,0xF7,0x10,0x1A,0xED,0x00,0xC2,0xE0,
+0x10,0x01,0x18,0x0B,0x00,0xF8,0x17,0x07,0x30,0x18,0x0C,0x00,0xC2,0xE0,0x10,0x01,
+0xF8,0x17,0x09,0x97,0xE4,0x00,0x00,0x2F,0x18,0x18,0x00,0xC3,0x40,0x10,0x01,0x9E,
+0xE2,0x9F,0x01,0xFF,0x5A,0x0D,0xA6,0xD6,0xFA,0xFC,0x8E,0x12,0xED,0x00,0x56,0xF7,
+0x10,0xD2,0xE0,0x09,0x3A,0x18,0x0A,0x00,0x18,0x0A,0x01,0x18,0x0A,0x02,0x18,0x0A,
+0x03,0x18,0x0A,0x04,0x18,0x0A,0x05,0x18,0x0A,0x06,0x18,0x0A,0x07,0xE4,0x00,0x02,
+0x17,0x12,0xF8,0x00,0xD2,0xEA,0x08,0x26,0x98,0xA0,0xC1,0xE0,0x10,0x01,0xC1,0xC0,
+0x10,0x01,0xFD,0xEF,0x0C,0xB6,0xFD,0xCE,0x01,0x2E,0x88,0x6F,0x10,0x8E,0x24,0xE7,
+0xFF,0xBA,0xF8,0xC1,0x40,0x10,0x01,0xFD,0x4A,0x0A,0x4C,0x12,0xEA,0x04,0x10,0x6A,
+0x01,0x98,0x80,0x40,0x63,0xBB,0xE7,0xFF,0xB4,0x06,0x88,0x6F,0x10,0x8E,0x24,0x98,
+0xA1,0xE7,0xFF,0xBA,0xB4,0x12,0xEA,0x01,0x13,0x0A,0x04,0xC3,0x20,0x10,0x01,0x43,
+0x18,0xBB,0xFF,0x39,0x07,0x38,0x9A,0xE0,0xE4,0x00,0x00,0x3F,0x4F,0x57,0x10,0x8F,
+0x59,0x0F,0x5A,0x02,0x5F,0x45,0x11,0x20,0x00,0x2D,0xD6,0xF8,0x01,0x3E,0xE4,0x00,
+0x00,0x23,0x9E,0xE1,0x5E,0xF7,0x00,0xD7,0x17,0xFF,0x2C,0xE7,0xFF,0xFF,0xDF,0x12,
+0xEC,0x00,0x5E,0xE3,0xBB,0x20,0x00,0x3D,0x9E,0xE1,0x1A,0xEC,0x00,0xE4,0x00,0x00,
+0x0F,0x18,0x0C,0x00,0x12,0xEC,0x00,0x5E,0xE3,0xC1,0x20,0x01,0x6F,0xE4,0x00,0x00,
+0xBF,0x12,0xEB,0x00,0x22,0xE1,0x90,0x12,0xED,0x00,0x1F,0x60,0xEF,0x46,0xF7,0xDC,
+0x18,0x0B,0x00,0x1A,0xED,0x00,0x18,0x0C,0x00,0xFF,0x00,0x01,0x13,0xC2,0xE0,0x10,
+0x01,0x0D,0xE1,0x06,0x0D,0xC1,0x0A,0x0D,0xA1,0x0E,0x0D,0x81,0x12,0x0D,0x61,0x16,
+0x0D,0x41,0x1A,0x0D,0x21,0x1E,0xEF,0x17,0x01,0x4B,0xFC,0x60,0x01,0x13,0x1C,0x21,
+0x20,0xE7,0xFF,0x15,0x55,0x9F,0x41,0x1B,0x58,0x00,0xE7,0xFF,0xFC,0x87,0x18,0x18,
+0x00,0xE7,0xFF,0xFC,0x79,0x18,0x0B,0x00,0xE7,0xFF,0xFF,0x53,0x12,0xEB,0x00,0x9E,
+0xE1,0x1A,0xEB,0x00,0xE7,0xFF,0xFF,0x3B,0x0D,0xE1,0x06,0x0D,0xC1,0x0A,0x0D,0xA1,
+0x0E,0x0D,0x81,0x12,0x0D,0x61,0x16,0x0D,0x41,0x1A,0x0D,0x21,0x1E,0x1C,0x21,0x20,
+0x85,0x29,0x9C,0x38,0x0D,0x41,0x00,0x0D,0x21,0x04,0x89,0x43,0x20,0x84,0x64,0x98,
+0x62,0x88,0x8A,0xE7,0xFF,0xCC,0x4C,0x98,0x62,0x88,0x8A,0xE7,0xFF,0xCC,0x3C,0x98,
+0x69,0xE4,0x00,0x00,0x2D,0x98,0x60,0x88,0x8A,0xE7,0xFF,0xCC,0x20,0x98,0x61,0x88,
+0x8A,0xE7,0xFF,0xCC,0x10,0x98,0x68,0x88,0x8A,0x0D,0x21,0x06,0x0D,0x41,0x02,0x9C,
+0x28,0xE7,0xFF,0xCB,0xF1,0x9C,0x38,0x0D,0x21,0x04,0x0D,0x41,0x00,0x89,0x43,0x98,
+0x60,0x88,0x8A,0xE7,0xFF,0xCB,0xCC,0x88,0x8A,0x98,0x61,0xE7,0xFF,0xCB,0xBC,0x88,
+0x8A,0x0D,0x21,0x06,0x0D,0x41,0x02,0x98,0x68,0x9C,0x28,0xE7,0xFF,0xCB,0x9D,0xD0,
+0x6B,0x0B,0xB5,0x4F,0x03,0x10,0xC2,0xF8,0x00,0x21,0xFE,0xF7,0xBA,0xC4,0x8E,0xF8,
+0xC3,0x40,0x10,0x01,0x0F,0xB7,0x02,0xC3,0x60,0x10,0x01,0xC3,0x20,0x10,0x01,0xC3,
+0x80,0x10,0x01,0xC3,0x00,0x10,0x01,0xC2,0xE0,0x10,0x01,0xFF,0x5A,0x08,0xD4,0xFF,
+0x7B,0x0D,0x84,0xFF,0x39,0x06,0x5C,0xFF,0x9C,0x0D,0x96,0xFF,0x18,0x0A,0xBC,0xFE,
+0xF7,0x0C,0xB6,0x87,0xA9,0xCC,0x63,0x00,0x16,0x5C,0x63,0x00,0x4F,0x23,0x08,0x4C,
+0x63,0x10,0x8F,0x19,0x8E,0xF9,0x8F,0x43,0x9B,0x20,0x43,0x77,0xCC,0x43,0xB8,0xCC,
+0x4F,0x99,0x08,0x0B,0xBD,0x01,0x8F,0x9A,0x0F,0x9C,0x02,0x4F,0x9C,0x42,0x43,0x9D,
+0xE5,0x0F,0x9B,0x01,0x9F,0x22,0x5F,0x25,0x89,0x23,0xFF,0x85,0xE4,0x00,0x01,0xF3,
+0x9C,0x7E,0xCC,0x63,0x00,0x16,0x5C,0x63,0x00,0x4F,0x43,0x08,0x4C,0x63,0x10,0x8F,
+0x1A,0x8C,0x79,0x8E,0xFA,0x9B,0x20,0x43,0x77,0xCC,0x43,0xB8,0xCC,0x4F,0x99,0x08,
+0x0B,0xBD,0x01,0x8F,0x83,0x0F,0x9C,0x02,0x4F,0x9C,0x42,0x43,0x9D,0xE5,0x0F,0x9B,
+0x01,0x9F,0x22,0x5F,0x25,0x89,0x23,0xFF,0x85,0xE4,0x00,0x01,0x79,0x0B,0x78,0x59,
+0xEF,0x3A,0x00,0xB2,0x4F,0x39,0x42,0x43,0x3B,0xCD,0x0B,0x78,0x5B,0x0F,0x37,0x59,
+0xEF,0x3A,0x00,0xB6,0x4F,0x39,0x42,0x43,0x3B,0xCD,0x0F,0x37,0x5B,0xEF,0x3A,0x00,
+0xBA,0xE4,0x00,0x00,0x51,0xEF,0x59,0x00,0xB2,0x0B,0x78,0x59,0x4F,0x5A,0x42,0x43,
+0x5B,0xD5,0x0B,0x78,0x5B,0x0F,0x57,0x59,0xEF,0x59,0x00,0xB6,0xEF,0x39,0x00,0xBA,
+0x4F,0x5A,0x42,0x43,0x5B,0xD5,0x0F,0x57,0x5B,0x4F,0x39,0x42,0x0B,0x18,0x5D,0x43,
+0x18,0xCD,0x0F,0x17,0x5D,0xE4,0x00,0x00,0xC1,0xC3,0xA0,0x10,0x01,0x9A,0xE0,0xFF,
+0xBD,0x0B,0x74,0x43,0x1C,0xBC,0x43,0x5B,0xBC,0x4F,0x37,0x08,0x0B,0x5A,0x01,0x8F,
+0x3D,0x0F,0x39,0x02,0x4F,0x39,0x42,0x43,0x3A,0xCD,0x0F,0x38,0x01,0x9E,0xE2,0x5E,
+0xE2,0x09,0x23,0xFF,0x85,0xE4,0x00,0x00,0x61,0xC3,0xA0,0x10,0x01,0x9A,0xE0,0xFF,
+0xBD,0x0C,0x68,0x43,0x1C,0xBC,0x43,0x5B,0xBC,0x4F,0x37,0x08,0x0B,0x5A,0x01,0x8F,
+0x3D,0x0F,0x39,0x02,0x4F,0x39,0x42,0x43,0x3A,0xCD,0x0F,0x38,0x01,0x9E,0xE2,0x5E,
+0xE2,0x09,0x23,0xFF,0x85,0x85,0x29,0x9C,0x38,0x0D,0x21,0x04,0x20,0x64,0x6C,0x98,
+0x62,0xE7,0xFF,0xFC,0xFC,0x98,0x63,0xE7,0xFF,0xFC,0xF0,0x98,0x69,0xE7,0xFF,0xFC,
+0xE4,0x98,0x6B,0xE4,0x00,0x00,0x31,0x98,0x60,0xE7,0xFF,0xFC,0xCC,0x98,0x61,0xE7,
+0xFF,0xFC,0xC0,0x98,0x68,0xE7,0xFF,0xFC,0xB4,0x98,0x6A,0x0D,0x21,0x06,0x9C,0x28,
+0xE7,0xFF,0xFC,0x9F,0x9C,0x38,0x98,0x60,0x0D,0x21,0x04,0xE7,0xFF,0xFC,0x88,0x98,
+0x61,0xE7,0xFF,0xFC,0x7C,0x0D,0x21,0x06,0x98,0x68,0x9C,0x28,0xE7,0xFF,0xFC,0x67,
+0x9C,0x38,0x0D,0x21,0x04,0xE7,0xFF,0x92,0xF0,0x20,0x60,0x5E,0xE7,0xFF,0x92,0xCE,
+0x98,0x80,0xE7,0xFF,0xA6,0x3A,0xE7,0xFF,0x92,0xBA,0x98,0x82,0xE4,0x00,0x00,0x37,
+0xE7,0xFF,0x92,0xBA,0x20,0x64,0x86,0xE7,0xFF,0x92,0x98,0x98,0x81,0xE7,0xFF,0xA6,
+0x04,0xE7,0xFF,0x92,0x84,0x98,0x83,0xE7,0xFF,0xA3,0x14,0xE7,0xFF,0xC2,0x10,0x9A,
+0xE0,0xE4,0x00,0x00,0xD9,0xE7,0xFF,0x92,0x70,0x20,0x68,0x5E,0xE7,0xFF,0x92,0x4E,
+0x98,0x82,0xE7,0xFF,0xA5,0xBA,0xE7,0xFF,0x92,0x3A,0x98,0x81,0xE7,0xFF,0xFF,0xB7,
+0xE7,0xFF,0x92,0x3A,0x20,0x6C,0x5E,0xE7,0xFF,0x92,0x18,0x98,0x83,0xE7,0xFF,0xA5,
+0x84,0xE7,0xFF,0x92,0x04,0x98,0x87,0xE7,0xFF,0xFF,0x81,0xE7,0xFF,0x92,0x04,0xD0,
+0x67,0x00,0xC6,0xE7,0xFF,0x91,0xE0,0x98,0x87,0xE7,0xFF,0xA5,0x4C,0xE7,0xFF,0x91,
+0xCC,0x98,0x88,0xE7,0xFF,0xFF,0x49,0xE7,0xFF,0x91,0xCC,0x9A,0xE0,0xD0,0x68,0x00,
+0x86,0xE7,0xFF,0x91,0xA4,0x98,0x88,0xE7,0xFF,0xA5,0x10,0x9A,0xE1,0x88,0x77,0x0D,
+0x21,0x06,0x9C,0x28,0x85,0x29,0x1C,0x21,0xE0,0x0D,0x21,0x1C,0x0D,0x41,0x18,0x0D,
+0x61,0x14,0x0D,0x81,0x10,0x0D,0xA1,0x0C,0x80,0x01,0x80,0x01,0x80,0x01,0x80,0x01,
+0xE7,0xFF,0x7E,0x10,0x0C,0x61,0x00,0xE7,0xFF,0x7E,0x0A,0x0C,0x61,0x04,0x0E,0xE1,
+0x02,0xD2,0xE0,0x15,0x42,0x0E,0xE1,0x02,0xC1,0x60,0x10,0x01,0xC1,0x40,0x10,0x01,
+0x57,0x17,0x10,0xFD,0x6B,0x00,0xCE,0xFD,0x4A,0x00,0xBC,0xD3,0x00,0x06,0x42,0x50,
+0x60,0x10,0xE7,0xFF,0x7D,0xEC,0xC2,0xE0,0x10,0x01,0xEB,0x17,0x00,0xAB,0x9F,0x01,
+0x5F,0x18,0x04,0xEF,0x17,0x00,0xAB,0xE7,0xFF,0x7E,0x0A,0x0A,0xEB,0x0B,0x40,0x63,
+0xBD,0x5E,0xE3,0x04,0x5E,0xE3,0xBB,0x20,0x02,0x3F,0xC2,0xE0,0x10,0x01,0xEA,0xF7,
+0x04,0x93,0x56,0xF7,0x20,0xD2,0xE0,0x04,0x0A,0x98,0x61,0xE7,0xFF,0xA6,0x28,0x20,
+0x61,0xDE,0xE7,0xFF,0x90,0x62,0x20,0x64,0x56,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x00,
+0xB0,0x56,0xF7,0x01,0x22,0xE1,0x8A,0xE4,0x00,0x00,0x1F,0xE7,0xFF,0x90,0x30,0x20,
+0x63,0xA8,0xE4,0x00,0x00,0xA9,0xE7,0xFF,0xBE,0xCC,0xC2,0xE0,0x10,0x01,0xEB,0x17,
+0x04,0x93,0xC7,0x18,0xFF,0xDF,0xEF,0x17,0x04,0x93,0xE7,0xFF,0x8F,0xF2,0x20,0x60,
+0x5E,0x98,0x81,0x98,0xA0,0xE7,0xFF,0x47,0x6C,0x98,0x60,0x88,0x83,0xE7,0xFF,0xA0,
+0x68,0xE4,0x00,0x00,0x43,0x98,0x80,0x98,0x62,0xE7,0xFF,0xA0,0x50,0xFC,0x60,0x02,
+0x58,0xE7,0xFF,0x52,0x1E,0x98,0x60,0xE7,0xFF,0x4C,0x56,0xE7,0xFF,0x7C,0xE2,0x0C,
+0x6B,0x09,0xE7,0xFF,0xBF,0x22,0x0A,0xEA,0x01,0x52,0xF7,0x10,0x0E,0xEA,0x01,0xE4,
+0x00,0x04,0x39,0xC6,0xF7,0x01,0x00,0xD2,0xE0,0x10,0xA2,0xE4,0x00,0x2C,0x58,0x89,
+0xA3,0x98,0x60,0xE7,0xFF,0x7C,0x1A,0xFC,0x60,0x01,0x00,0xE7,0xFF,0x7C,0x1A,0xFC,
+0x60,0x01,0x00,0xE7,0xFF,0x7C,0x2A,0xE7,0xFF,0x8F,0x18,0xD0,0x67,0x0C,0xC5,0x4E,
+0xE3,0x10,0xC3,0x18,0x00,0x21,0xFF,0x18,0xBA,0xF4,0x8E,0xF8,0x0E,0xF7,0x02,0x86,
+0xE9,0xE7,0xFF,0x8E,0xF8,0x20,0x60,0x3E,0x98,0x80,0xE7,0xFF,0xA2,0x4A,0x98,0x60,
+0xE4,0x00,0x02,0xD3,0xE7,0xFF,0x8E,0xD2,0x20,0x64,0x4E,0x98,0x60,0x98,0x81,0xE7,
+0xFF,0xA2,0x20,0x98,0x60,0x98,0x87,0xE4,0x00,0x02,0xA9,0xE7,0xFF,0x8E,0xA4,0xD0,
+0x67,0x00,0xA6,0x98,0x60,0x98,0x87,0xE7,0xFF,0xA1,0xF0,0x98,0x60,0x98,0x88,0xE4,
+0x00,0x02,0x79,0xE7,0xFF,0x8E,0x74,0xD0,0x68,0x09,0xE6,0x98,0x60,0x98,0x88,0xE4,
+0x00,0x02,0x1D,0xE7,0xFF,0xFB,0x5A,0xD0,0x60,0x09,0x62,0xE7,0xFF,0xA2,0xD4,0x5D,
+0x83,0x04,0x98,0x61,0xE7,0xFF,0xA3,0xD6,0xD0,0x60,0x07,0xCE,0xC1,0x80,0x1F,0x4A,
+0x20,0x03,0xC5,0xE7,0xFF,0x4B,0x1A,0xE7,0xFF,0x4A,0xEA,0x5C,0x63,0x00,0x24,0x64,
+0x33,0x98,0x61,0xC1,0x80,0x3E,0x8A,0x20,0x01,0xE9,0x98,0x80,0x98,0x62,0xE7,0xFF,
+0x9E,0x66,0xFC,0x60,0x02,0x58,0xE7,0xFF,0x50,0x34,0x98,0x60,0xE7,0xFF,0x4A,0x6C,
+0xE7,0xFF,0x7A,0xF8,0x0C,0x6B,0x09,0xE4,0x00,0x01,0xB1,0xE7,0xFF,0xFA,0xAA,0xD0,
+0x60,0x06,0xA2,0xE7,0xFF,0xA2,0x24,0xE7,0xFF,0x50,0x74,0xE7,0xFF,0x51,0x04,0xD0,
+0x61,0x05,0x12,0xE7,0xFF,0x51,0x24,0x20,0x64,0xD2,0xE7,0xFF,0x49,0xFC,0x5C,0x63,
+0x00,0xC0,0x60,0x18,0xEE,0x20,0x00,0x1D,0xE7,0xFF,0x4A,0x08,0xE7,0xFF,0x49,0xD8,
+0x98,0x80,0x5D,0x43,0x00,0x98,0x62,0xE7,0xFF,0x9D,0xB4,0xCC,0x6A,0x00,0x64,0xFC,
+0x63,0x02,0x58,0xE7,0xFF,0x4F,0x7A,0xE4,0x00,0x01,0x11,0xE7,0xFF,0x50,0xD4,0x98,
+0x62,0x98,0x80,0xE4,0x00,0x00,0xF1,0xE7,0xFF,0x8C,0xEC,0x20,0x64,0x48,0xE7,0xFF,
+0x8C,0xDE,0xE7,0xFF,0x8C,0xD6,0x20,0x61,0xB6,0xE4,0x00,0x00,0x21,0xE7,0xFF,0x8C,
+0xC0,0x88,0x83,0x98,0x64,0xE4,0x00,0x00,0x71,0x98,0x64,0x98,0x80,0xE7,0xFF,0xA0,
+0x04,0x98,0x64,0xE4,0x00,0x00,0x8D,0x98,0x64,0x98,0x89,0xE4,0x00,0x00,0x45,0xE7,
+0xFF,0x8C,0x7C,0x20,0x64,0x48,0xE7,0xFF,0x8C,0x6E,0xE7,0xFF,0x8C,0x66,0x20,0x60,
+0xD6,0xE4,0x00,0x00,0x3D,0xE7,0xFF,0x8C,0x50,0x88,0x83,0x98,0x67,0xE7,0xFF,0x9F,
+0xA4,0x0A,0xEA,0x01,0xCA,0xF7,0x01,0x00,0x0E,0xEA,0x01,0xE4,0x00,0x00,0x31,0x98,
+0x67,0x98,0x80,0xE7,0xFF,0x9F,0x78,0x98,0x67,0x98,0x81,0xE7,0xFF,0x9C,0x8C,0xE7,
+0xFF,0xBB,0x88,0x88,0x6D,0xE4,0x00,0x00,0xA5,0x0E,0xE1,0x06,0x22,0xE1,0x3C,0x0E,
+0xE1,0x06,0x56,0xF7,0x20,0x22,0xE1,0x18,0xE4,0x00,0x28,0xBE,0x89,0x43,0x98,0x60,
+0xE7,0xFF,0x78,0x80,0x50,0x60,0x20,0xE7,0xFF,0x78,0x8A,0xE7,0xFF,0x72,0x32,0xC2,
+0xE0,0x10,0x01,0xEB,0x17,0x00,0xC1,0xC7,0x18,0xFF,0xFE,0x50,0x60,0x20,0xEF,0x17,
+0x00,0xC1,0xE7,0xFF,0x78,0x64,0xC2,0xE0,0x10,0x01,0x88,0x6A,0xEB,0x17,0x00,0xBF,
+0x53,0x18,0x20,0xEF,0x17,0x00,0xBF,0xE7,0xFF,0x78,0x12,0x0D,0xA1,0x0E,0x0D,0x81,
+0x12,0x0D,0x61,0x16,0x0D,0x41,0x1A,0x0D,0x21,0x1E,0x1C,0x21,0x20,0x85,0x29,0xC2,
+0xF4,0x00,0x01,0xCA,0xF7,0x23,0x24,0x0B,0x17,0x01,0x53,0x18,0x20,0x0F,0x17,0x01,
+0x0C,0x63,0x02,0x0B,0x17,0x01,0xC7,0x18,0xFF,0xDF,0x0F,0x17,0x01,0x85,0x29,0xC2,
+0xF4,0x00,0x01,0xCA,0xF7,0x23,0x24,0x0B,0x17,0x01,0x53,0x18,0x20,0x0F,0x17,0x01,
+0x0C,0x83,0x00,0x0B,0x17,0x01,0xC7,0x18,0xFF,0xDF,0x0F,0x17,0x01,0x85,0x29,0xC2,
+0xF4,0x00,0x01,0xCA,0xF7,0x24,0x14,0x0B,0x17,0x01,0x53,0x18,0x01,0x0F,0x17,0x01,
+0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x23,0x24,0x0B,0x17,0x01,0x53,0x18,0x20,
+0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x23,0x24,0x0B,0x17,0x01,
+0xC7,0x18,0xFF,0xDF,0x0F,0x17,0x01,0x85,0x29,0x9C,0x30,0x0D,0x21,0x0C,0x0D,0x41,
+0x08,0x0D,0x61,0x04,0x0D,0x81,0x00,0xC1,0x54,0x00,0x01,0xC9,0x8A,0x22,0x28,0x0A,
+0xEC,0x01,0xC6,0xF7,0xFF,0xFB,0xC9,0x6A,0x22,0x04,0x0E,0xEC,0x01,0xFF,0x00,0x80,
+0x00,0x0A,0xEB,0x01,0x46,0xF7,0xC5,0x5E,0xF7,0x04,0xC9,0x4A,0x24,0xA8,0x0E,0xEB,
+0x01,0x0A,0xEA,0x01,0xCA,0xF7,0x30,0x00,0x50,0x60,0x64,0x0E,0xEA,0x01,0xE4,0x00,
+0x23,0xF6,0x0A,0xEC,0x01,0x52,0xF7,0x04,0x50,0x60,0x1E,0x0E,0xEC,0x01,0xE4,0x00,
+0x23,0xD6,0x0A,0xEB,0x01,0xC6,0xF7,0x7F,0xFF,0x0E,0xEB,0x01,0x0A,0xEA,0x01,0xC6,
+0xF7,0xCF,0xFF,0x0E,0xEA,0x01,0x0D,0x81,0x02,0x0D,0x61,0x06,0x0D,0x41,0x0A,0x0D,
+0x21,0x0E,0x1C,0x21,0x10,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0x2C,0x08,
+0x77,0x01,0x4C,0x63,0x09,0x54,0x63,0x1F,0x9C,0x61,0x85,0x29,0x9C,0x7F,0x5C,0x63,
+0x00,0x5C,0x62,0xFB,0x20,0x00,0x81,0xC2,0xF4,0x00,0x01,0x4C,0x63,0x08,0xCA,0xF7,
+0x24,0x2C,0x54,0x63,0x3E,0x0B,0x17,0x01,0x1F,0x20,0xC1,0x47,0x18,0xCC,0x44,0x63,
+0xC5,0x0C,0x77,0x01,0x85,0x29,0x9B,0x19,0x20,0x60,0x62,0xC2,0xF4,0x00,0x01,0xCA,
+0xF7,0x24,0x10,0x0B,0x37,0x01,0x47,0x19,0xC4,0x53,0x18,0x04,0xE4,0x00,0x00,0x87,
+0x20,0x64,0x56,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0x10,0x0B,0x17,0x01,0x53,0x18,
+0x06,0xE4,0x00,0x00,0x5D,0x20,0x68,0x5A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0x10,
+0x0B,0x17,0x01,0xC7,0x18,0xFF,0xF9,0xE4,0x00,0x00,0x31,0x20,0x6C,0x5E,0xC2,0xF4,
+0x00,0x01,0xCA,0xF7,0x24,0x10,0x0B,0x37,0x01,0x47,0x19,0xC4,0x53,0x18,0x02,0x0F,
+0x17,0x01,0x85,0x29,0x5C,0x63,0x00,0x9C,0x30,0x0D,0x21,0x0C,0x0D,0x41,0x08,0x0C,
+0xA1,0x04,0x95,0x50,0xC9,0x4A,0x20,0x80,0x8D,0x43,0x4D,0x4A,0x18,0x88,0x6A,0xE7,
+0xFF,0xFC,0xE0,0x0C,0xA1,0x06,0x1C,0x6A,0x04,0x0D,0x21,0x0E,0x0D,0x41,0x0A,0x88,
+0x85,0x1C,0x21,0x10,0xE7,0xFF,0xFC,0xB7,0x1C,0x21,0xE8,0x0D,0x41,0x10,0x5D,0x44,
+0x00,0x4E,0xEA,0x08,0x0D,0x61,0x0C,0x0D,0x81,0x08,0x5D,0x65,0x00,0x5C,0x63,0x00,
+0x4D,0x83,0x18,0x8D,0x8B,0x8D,0x97,0x06,0xE0,0x81,0xCA,0xF7,0x04,0x00,0x0D,0x21,
+0x14,0x0D,0xA1,0x04,0xC5,0x8C,0x1F,0xFC,0x5D,0xA6,0x00,0x8D,0x97,0x88,0x6C,0xE7,
+0xFF,0xFC,0x00,0x55,0x4A,0x01,0x50,0x80,0xFF,0x4D,0x4A,0x08,0x8D,0x6A,0x4D,0x6B,
+0x18,0x4C,0x84,0x5C,0x4D,0x6D,0x5C,0x44,0x84,0x27,0x0D,0xA1,0x06,0x44,0x83,0x24,
+0x0D,0x41,0x12,0x88,0x6C,0x44,0x84,0x5D,0x0D,0x81,0x0A,0x0D,0x61,0x0E,0x0D,0x21,
+0x16,0x1C,0x21,0x18,0xE7,0xFF,0xFB,0xD7,0x5C,0x84,0x04,0x20,0x60,0x28,0x20,0x64,
+0xC2,0xE4,0x00,0x00,0x33,0x4C,0x84,0x41,0xC2,0xF4,0x00,0x01,0x9C,0x9F,0xCA,0xF7,
+0x24,0x34,0xC4,0x84,0x01,0xFF,0xE4,0x00,0x00,0x2B,0x4C,0x84,0x41,0xC2,0xF4,0x00,
+0x01,0x9C,0x9F,0xCA,0xF7,0x24,0x38,0xC4,0x84,0x01,0xFF,0x0C,0x97,0x01,0x85,0x29,
+0x07,0x00,0xFF,0xCB,0x18,0xFF,0xFF,0x20,0x60,0x28,0x20,0x65,0xD2,0xE4,0x00,0x00,
+0x7D,0xC2,0xF4,0x00,0x01,0x47,0x64,0x27,0xCB,0x37,0x24,0x3C,0x0B,0x59,0x01,0x47,
+0x5A,0xDC,0x0F,0x59,0x01,0xCA,0xF7,0x24,0x40,0x47,0x04,0xC4,0x0B,0x37,0x01,0x4F,
+0x18,0x81,0x44,0x84,0x27,0x4C,0x84,0x81,0x44,0x84,0xC4,0x47,0x18,0xC7,0x47,0x19,
+0xC4,0x47,0x04,0xC5,0x0F,0x17,0x01,0xE4,0x00,0x00,0x6F,0x5F,0x44,0x04,0xC2,0xF4,
+0x00,0x01,0x47,0x9A,0xD7,0xCB,0x37,0x24,0x3C,0x0B,0x79,0x01,0x47,0x7B,0xE4,0x47,
+0x5A,0xDD,0x0F,0x59,0x01,0xCA,0xF7,0x24,0x40,0x44,0x84,0xC4,0x0B,0x57,0x01,0x4C,
+0x84,0x81,0x47,0x24,0x27,0x47,0x1A,0xCC,0x44,0x84,0xC5,0x0C,0x97,0x01,0x85,0x29,
+0x07,0x00,0xFF,0xCB,0x18,0xFF,0xFF,0x20,0x60,0x28,0x20,0x65,0xD2,0xE4,0x00,0x00,
+0x7D,0xC2,0xF4,0x00,0x01,0x47,0x64,0x27,0xCB,0x37,0x24,0x1C,0x0B,0x59,0x01,0x47,
+0x5A,0xDC,0x0F,0x59,0x01,0xCA,0xF7,0x24,0x20,0x47,0x04,0xC4,0x0B,0x37,0x01,0x4F,
+0x18,0x81,0x44,0x84,0x27,0x4C,0x84,0x81,0x44,0x84,0xC4,0x47,0x18,0xC7,0x47,0x19,
+0xC4,0x47,0x04,0xC5,0x0F,0x17,0x01,0xE4,0x00,0x00,0x6F,0x5F,0x44,0x04,0xC2,0xF4,
+0x00,0x01,0x47,0x9A,0xD7,0xCB,0x37,0x24,0x1C,0x0B,0x79,0x01,0x47,0x7B,0xE4,0x47,
+0x5A,0xDD,0x0F,0x59,0x01,0xCA,0xF7,0x24,0x20,0x44,0x84,0xC4,0x0B,0x57,0x01,0x4C,
+0x84,0x81,0x47,0x24,0x27,0x47,0x1A,0xCC,0x44,0x84,0xC5,0x0C,0x97,0x01,0x85,0x29,
+0xC2,0xF4,0x00,0x01,0xCB,0x17,0x24,0x80,0x0B,0x38,0x01,0x5F,0x23,0x04,0x0F,0x38,
+0x01,0x07,0x20,0xFF,0xCB,0x39,0xFF,0xFF,0xCA,0xF7,0x24,0x84,0x44,0x63,0xCC,0x0B,
+0x17,0x01,0x4C,0x63,0x81,0xFF,0x20,0xFF,0x00,0x47,0x18,0xCC,0x44,0x63,0xC5,0x0C,
+0x77,0x01,0x85,0x29,0x07,0x00,0xFF,0xCB,0x18,0xFF,0xFF,0x20,0x60,0x28,0x20,0x65,
+0xD2,0xE4,0x00,0x00,0x7D,0xC2,0xF4,0x00,0x01,0x47,0x64,0x27,0xCB,0x37,0x24,0x24,
+0x0B,0x59,0x01,0x47,0x5A,0xDC,0x0F,0x59,0x01,0xCA,0xF7,0x24,0x28,0x47,0x04,0xC4,
+0x0B,0x37,0x01,0x4F,0x18,0x81,0x44,0x84,0x27,0x4C,0x84,0x81,0x44,0x84,0xC4,0x47,
+0x18,0xC7,0x47,0x19,0xC4,0x47,0x04,0xC5,0x0F,0x17,0x01,0xE4,0x00,0x00,0x6F,0x5F,
+0x44,0x04,0xC2,0xF4,0x00,0x01,0x47,0x9A,0xD7,0xCB,0x37,0x24,0x24,0x0B,0x79,0x01,
+0x47,0x7B,0xE4,0x47,0x5A,0xDD,0x0F,0x59,0x01,0xCA,0xF7,0x24,0x28,0x44,0x84,0xC4,
+0x0B,0x57,0x01,0x4C,0x84,0x81,0x47,0x24,0x27,0x47,0x1A,0xCC,0x44,0x84,0xC5,0x0C,
+0x97,0x01,0x85,0x29,0xC3,0x14,0x00,0x01,0xCA,0xF8,0x22,0x08,0x20,0x64,0x3A,0x0B,
+0x37,0x01,0xCB,0x39,0x10,0x00,0xE4,0x00,0x00,0x1D,0x20,0x60,0x36,0x0B,0x37,0x01,
+0xC7,0x39,0xEF,0xFF,0x0F,0x37,0x01,0xCA,0xF8,0x22,0x08,0x0B,0x17,0x01,0xCB,0x18,
+0x20,0x00,0x0F,0x17,0x01,0x85,0x29,0x5C,0x84,0x00,0x1F,0x00,0x80,0x20,0x60,0x28,
+0x20,0x64,0xAA,0xE4,0x00,0x00,0x21,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0x54,0xE4,
+0x00,0x00,0x19,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0x64,0x0B,0x37,0x01,0x54,0x84,
+0x7F,0x47,0x19,0xC4,0x47,0x04,0xC5,0x0F,0x17,0x01,0x85,0x29,0x5C,0x84,0x00,0x20,
+0x60,0x28,0x20,0x64,0xAA,0xE4,0x00,0x00,0x21,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,
+0x50,0xE4,0x00,0x00,0x19,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0x61,0x13,0x17,0x00,
+0x54,0x84,0x1F,0x57,0x18,0xE0,0x44,0x84,0xC5,0x18,0x97,0x00,0x85,0x29,0x9C,0x30,
+0x0D,0x41,0x08,0x0D,0x61,0x04,0x0D,0x21,0x0C,0x5D,0x44,0x00,0x89,0x63,0x1C,0x8A,
+0xF1,0x4C,0x84,0x08,0x5C,0x83,0xF3,0x20,0x00,0x19,0x50,0x80,0x1F,0x88,0x6B,0xE7,
+0xFF,0xFF,0x5A,0x1F,0x00,0x80,0x21,0x60,0x28,0x21,0x64,0xAA,0xE4,0x00,0x00,0x21,
+0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0x4C,0xE4,0x00,0x00,0x19,0xC2,0xF4,0x00,0x01,
+0xCA,0xF7,0x24,0x60,0x0B,0x37,0x01,0x55,0x4A,0x7F,0x47,0x19,0xC4,0x47,0x0A,0xC5,
+0x0F,0x17,0x01,0x0D,0x61,0x06,0x0D,0x41,0x0A,0x0D,0x21,0x0E,0x1C,0x21,0x10,0x85,
+0x29,0x20,0x64,0x8E,0xC2,0xF4,0x00,0x01,0xCB,0x17,0x22,0x04,0xCA,0xF7,0x22,0x60,
+0x0B,0x38,0x01,0x53,0x39,0xF0,0x0F,0x38,0x01,0x0B,0x17,0x01,0xC7,0x18,0xFF,0xF0,
+0xE4,0x00,0x00,0x47,0x20,0x60,0x8A,0xC2,0xF4,0x00,0x01,0xCB,0x17,0x22,0x04,0xCA,
+0xF7,0x22,0x60,0x0B,0x38,0x01,0xC7,0x39,0xFF,0x0F,0x0F,0x38,0x01,0x0B,0x17,0x01,
+0x53,0x18,0x0F,0x0F,0x17,0x01,0x85,0x29,0x20,0x64,0x8E,0xC2,0xF4,0x00,0x01,0xCB,
+0x17,0x22,0x04,0xCA,0xF7,0x22,0x60,0x0B,0x38,0x01,0x53,0x39,0x08,0x0F,0x38,0x01,
+0x0B,0x17,0x01,0xC7,0x18,0xFE,0xFF,0xE4,0x00,0x00,0x49,0x20,0x60,0x8E,0xC2,0xF4,
+0x00,0x01,0xCB,0x17,0x22,0x04,0xCA,0xF7,0x22,0x60,0x0B,0x38,0x01,0xC7,0x39,0xFF,
+0xF7,0x0F,0x38,0x01,0x0B,0x17,0x01,0xCB,0x18,0x01,0x00,0x0F,0x17,0x01,0x85,0x29,
+0x20,0x64,0x5A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x22,0x60,0x0B,0x17,0x01,0xCB,0x18,
+0x02,0x00,0xE4,0x00,0x00,0x2D,0x20,0x60,0x56,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x22,
+0x60,0x0B,0x17,0x01,0xC7,0x18,0xFD,0xFF,0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,0x00,
+0x01,0x54,0x63,0x7F,0xCA,0xF7,0x24,0xA0,0x1F,0x20,0x80,0x0B,0x17,0x01,0x47,0x18,
+0xCC,0x47,0x03,0xC5,0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0x4C,0x63,0x40,
+0xCA,0xF7,0x24,0xA0,0xC4,0x63,0x7F,0x00,0x0B,0x17,0x01,0xFF,0x20,0x80,0xFF,0x47,
+0x18,0xCC,0x47,0x03,0xC5,0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,
+0x24,0xA1,0x10,0x77,0x00,0x54,0x63,0x7F,0x85,0x29,0x20,0x64,0x5A,0xC2,0xF4,0x00,
+0x01,0xCA,0xF7,0x24,0xA0,0x0B,0x17,0x01,0xC7,0x18,0xFF,0x7F,0xE4,0x00,0x00,0x2B,
+0x20,0x60,0x52,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0xA0,0x0B,0x17,0x01,0x53,0x18,
+0x80,0x0F,0x17,0x01,0x85,0x29,0x20,0x64,0x5A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,
+0xA0,0x0B,0x17,0x01,0xC7,0x18,0x7F,0xFF,0xE4,0x00,0x00,0x39,0x20,0x60,0x6E,0xC2,
+0xF4,0x00,0x01,0xFF,0x20,0x80,0x00,0xCA,0xF7,0x24,0xA0,0x0B,0x17,0x01,0x47,0x18,
+0xCD,0x5F,0x18,0x04,0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0x5C,0x63,0x00,
+0xCA,0xF7,0x22,0x0C,0xFF,0x20,0xFF,0x00,0x0B,0x17,0x01,0x47,0x18,0xCC,0x47,0x03,
+0xC5,0x0F,0x17,0x01,0x85,0x29,0x5C,0x63,0x04,0xC2,0xF4,0x00,0x01,0xFF,0x40,0xFF,
+0x00,0xCA,0xF7,0x22,0xF0,0x47,0x03,0xD4,0x0B,0x37,0x01,0x5F,0x39,0x00,0x47,0x18,
+0xCD,0x0F,0x17,0x01,0x85,0x29,0x5C,0x63,0x04,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x22,
+0x38,0x0B,0x17,0x01,0x0C,0x77,0x01,0x85,0x29,0x20,0x64,0x6A,0xC2,0xF4,0x00,0x01,
+0x9B,0x3C,0xCA,0xF7,0x25,0xC0,0x0B,0x17,0x01,0x47,0x18,0xCC,0x53,0x18,0x01,0xE4,
+0x00,0x00,0x3F,0x20,0x60,0x7A,0xC2,0xF4,0x00,0x01,0xCB,0x17,0x22,0x38,0xCA,0xF7,
+0x25,0xC0,0x0B,0x38,0x01,0x0C,0x18,0x01,0x0B,0x17,0x01,0x53,0x18,0x03,0x0F,0x17,
+0x01,0x85,0x29,0x5C,0x84,0x00,0x20,0x64,0x62,0x4C,0x63,0x24,0xC2,0xF4,0x00,0x01,
+0x5C,0x63,0x04,0xCA,0xF7,0x22,0xCC,0x0C,0x77,0x01,0xE4,0x00,0x00,0x25,0x20,0x60,
+0x3A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x22,0xCC,0x0C,0x17,0x01,0x85,0x29,0x20,0x60,
+0x5A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x22,0xE8,0x0B,0x17,0x01,0xC7,0x18,0xFF,0xFE,
+0xE4,0x00,0x00,0x2B,0x20,0x64,0x52,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x22,0xE8,0x0B,
+0x17,0x01,0x53,0x18,0x01,0x0F,0x17,0x01,0x85,0x29,0x20,0x60,0x5A,0xC2,0xF4,0x00,
+0x01,0xCA,0xF7,0x22,0xE8,0x0B,0x17,0x01,0xC7,0x18,0xF0,0xFF,0xE4,0x00,0x00,0x2D,
+0x20,0x64,0x56,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x22,0xE8,0x0B,0x17,0x01,0xCB,0x18,
+0x0F,0x00,0x0F,0x17,0x01,0x85,0x29,0x5C,0x63,0x00,0xC4,0x84,0x03,0xFF,0x20,0x64,
+0x70,0x20,0x60,0x34,0x20,0x68,0x88,0x20,0x6C,0xDA,0xE4,0x00,0x00,0x51,0xC2,0xF4,
+0x00,0x01,0xCA,0xF7,0x24,0x68,0xE4,0x00,0x00,0x49,0xC2,0xF4,0x00,0x01,0xCA,0xF7,
+0x24,0x6C,0xE4,0x00,0x00,0x31,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0x70,0xE4,0x00,
+0x00,0x19,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0x74,0x0C,0x97,0x01,0x85,0x29,0xC2,
+0xF4,0x00,0x01,0xCA,0xF7,0x23,0x24,0x0B,0x17,0x01,0x53,0x18,0x20,0x0F,0x17,0x01,
+0x5C,0x63,0x00,0x07,0x00,0x20,0xCB,0x18,0x41,0x00,0x44,0x63,0xC5,0x4C,0x63,0x10,
+0x0C,0x83,0x00,0x0B,0x17,0x01,0xC7,0x18,0xFF,0xDF,0x0F,0x17,0x01,0x85,0x29,0xFC,
+0x21,0xFE,0x88,0x50,0xA0,0x96,0xED,0x21,0x01,0x74,0xED,0x41,0x01,0x70,0xED,0x61,
+0x01,0x6C,0x88,0x61,0xC1,0x78,0x00,0x21,0xFD,0x6B,0xB5,0x0E,0x88,0x8B,0xE7,0xFF,
+0x3F,0xBE,0xFD,0x41,0x00,0x96,0xFC,0x8B,0x00,0x96,0x88,0x6A,0x50,0xA0,0xD2,0xE7,
+0xFF,0x3F,0x9C,0x8A,0xE1,0xC3,0x54,0x00,0x01,0xFF,0x60,0xFF,0x00,0x0B,0x37,0x01,
+0x47,0x19,0xDC,0x5F,0x39,0x00,0x4F,0x39,0x10,0x4F,0x18,0x08,0x8F,0x19,0x0B,0x37,
+0x03,0x47,0xB9,0xCF,0x8F,0x1A,0x0B,0x98,0x01,0x47,0x9C,0xEC,0x0B,0xB7,0x05,0x47,
+0x39,0xEC,0x47,0x3C,0xCD,0x0F,0x38,0x01,0x9E,0xE6,0xD5,0x57,0xFE,0x9E,0xFE,0xE1,
+0x00,0x96,0xFF,0x81,0x01,0x68,0x0B,0x37,0x01,0x47,0x19,0xDC,0x5F,0x39,0x00,0x4F,
+0x39,0x10,0x4F,0x18,0x08,0x8F,0x19,0x0B,0x37,0x03,0x47,0xD9,0xCF,0x8F,0x1A,0x0B,
+0xB8,0x01,0x47,0xBD,0xF4,0x0B,0xD7,0x05,0x47,0x39,0xF4,0x47,0x3D,0xCD,0x0F,0x38,
+0x01,0x9E,0xE6,0xD7,0x97,0xFE,0x9E,0xED,0x61,0x01,0x6E,0xED,0x41,0x01,0x72,0xED,
+0x21,0x01,0x76,0xFC,0x21,0x01,0x78,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCB,0x17,0x22,
+0x00,0x0C,0x18,0x01,0xCA,0xF7,0x24,0x14,0xFF,0x20,0xFF,0x07,0x0B,0x17,0x01,0x47,
+0x18,0xCC,0x53,0x18,0x30,0x0F,0x17,0x01,0x85,0x29,0x5C,0x84,0x00,0x9B,0x10,0x20,
+0x60,0x28,0x20,0x64,0xAA,0xE4,0x00,0x00,0x21,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x22,
+0x10,0xE4,0x00,0x00,0x19,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x22,0x14,0x0B,0x37,0x01,
+0x54,0x84,0x0F,0x47,0x19,0xC4,0x47,0x04,0xC5,0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,
+0x00,0x01,0xCB,0x17,0x74,0xD8,0x18,0x18,0x00,0xCB,0x37,0x74,0x10,0x5C,0x63,0x00,
+0x18,0x79,0x00,0xCB,0x37,0x76,0x30,0x18,0x19,0x00,0x53,0x40,0x24,0xCB,0x37,0x74,
+0x00,0x1B,0x59,0x00,0xCB,0x77,0x74,0x28,0x53,0x20,0x60,0x1B,0x3B,0x00,0xCB,0x77,
+0x74,0x30,0x1B,0x3B,0x00,0xCB,0x77,0x74,0x38,0x53,0x20,0x1C,0x1B,0x3B,0x00,0xCB,
+0x77,0x74,0x40,0x1B,0x3B,0x00,0xCB,0x37,0x74,0xA8,0x13,0x39,0x00,0xCB,0x37,0x74,
+0x78,0x9B,0x69,0x1B,0x79,0x00,0xCB,0x37,0x74,0x70,0x18,0x19,0x00,0xCB,0x37,0x74,
+0x60,0x13,0x79,0x00,0x1B,0x59,0x00,0xCA,0xF7,0x74,0x61,0x13,0x37,0x00,0x18,0x17,
+0x00,0x98,0x61,0x12,0xF8,0x00,0x52,0xF7,0x01,0x1A,0xF8,0x00,0x85,0x29,0x5C,0x63,
+0x00,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x74,0x20,0x18,0x77,0x00,0x0B,0x17,0x01,0xC7,
+0x18,0xFE,0xFF,0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x74,0x68,
+0x10,0x77,0x00,0x4C,0x63,0x21,0x54,0x63,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,
+0xF7,0x74,0x68,0x10,0x77,0x00,0x4C,0x63,0x29,0x54,0x63,0x01,0x85,0x29,0xC2,0xF4,
+0x00,0x01,0xCA,0xF7,0x74,0xE0,0x10,0x77,0x00,0x4C,0x63,0x19,0x54,0x63,0x01,0x85,
+0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x74,0x68,0x10,0x77,0x00,0x4C,0x63,0x11,0x54,
+0x63,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x74,0x68,0x08,0x77,0x01,0x4C,
+0x63,0x51,0x54,0x63,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x74,0xC0,0x12,
+0xF7,0x00,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x74,0xA8,0x12,0xF7,0x00,0x85,
+0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x74,0xC8,0x12,0xF7,0x00,0x85,0x29,0xC2,0xF4,
+0x00,0x01,0xCA,0xF7,0x74,0xA0,0x12,0xF7,0x00,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,
+0xF7,0x74,0x20,0x10,0x77,0x00,0x85,0x29,0x5C,0x63,0x00,0xC3,0x14,0x00,0x01,0x4E,
+0xE3,0x10,0xCB,0x18,0x2A,0x00,0x8E,0xF8,0x08,0x77,0x00,0x9A,0xE8,0xCC,0x63,0x00,
+0x03,0x40,0x63,0xB8,0x85,0x29,0x5C,0x84,0x04,0x5E,0xE4,0x00,0xD2,0xEF,0x05,0xAD,
+0x4E,0xF7,0x10,0xC3,0x18,0x00,0x21,0xFF,0x18,0xBC,0x78,0x8E,0xF8,0xC3,0x34,0x00,
+0x01,0x0F,0x17,0x02,0xCA,0xF9,0x26,0x18,0x0B,0x57,0x01,0xC7,0x5A,0xFF,0xF3,0x1F,
+0x60,0xCF,0x0F,0x57,0x01,0x0B,0x57,0x01,0x47,0x5A,0xDC,0x53,0x5A,0x10,0x4C,0x84,
+0x49,0x0F,0x57,0x01,0x9A,0xE1,0xCB,0x59,0x26,0x20,0xE4,0x00,0x00,0x31,0x4F,0x37,
+0x08,0x9E,0xE1,0x8F,0x38,0x5E,0xF7,0x04,0x0B,0x39,0x01,0xC7,0x39,0x3F,0xFF,0x0F,
+0x3A,0x01,0xC3,0x34,0x00,0x01,0xD6,0xE4,0xFF,0x40,0x20,0x60,0x96,0xCB,0x39,0x26,
+0x38,0x0B,0x18,0x01,0x0A,0xF9,0x01,0x4F,0x18,0x60,0xFF,0x40,0x8F,0xFF,0xC7,0x18,
+0x70,0x00,0x46,0xF7,0xD4,0x46,0xF8,0xBD,0x0E,0xF9,0x01,0xE4,0x00,0x00,0x4B,0x20,
+0x64,0x86,0xCA,0xF9,0x26,0x38,0xFF,0x60,0xF8,0xFF,0x0B,0x38,0x01,0x0B,0x57,0x01,
+0x4F,0x39,0x40,0x47,0x1A,0xDC,0xC7,0x39,0x07,0x00,0x47,0x19,0xC5,0x0F,0x17,0x01,
+0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x18,0x0B,0x17,0x01,0x53,0x18,0x30,0x0F,0x17,
+0x01,0x85,0x29,0x5C,0x84,0x00,0xD0,0x8F,0x03,0x9D,0xC2,0xF8,0x00,0x21,0xFE,0xF7,
+0xBB,0xA0,0x4C,0x84,0x10,0xC3,0x14,0x00,0x01,0x8C,0x97,0xCB,0x38,0x26,0x34,0x0E,
+0xE4,0x02,0x0B,0x59,0x01,0x0B,0x77,0x03,0xFF,0x80,0xC0,0x00,0xC7,0x7B,0x3F,0xFF,
+0x47,0x5A,0xE4,0x47,0x5B,0xD5,0x0F,0x59,0x01,0x20,0x60,0x7E,0x0B,0x37,0x01,0xCB,
+0x18,0x26,0x38,0x4F,0x39,0x60,0x0B,0x58,0x01,0xFF,0x60,0x8F,0xFF,0xC7,0x39,0x70,
+0x00,0x46,0xFA,0xDC,0xE4,0x00,0x00,0x3F,0x20,0x64,0x86,0x0B,0x37,0x01,0xCB,0x18,
+0x26,0x38,0x4F,0x39,0x40,0x0B,0x58,0x01,0xFF,0x80,0xF8,0xFF,0xC7,0x39,0x07,0x00,
+0x46,0xFA,0xE4,0x46,0xF9,0xBD,0x0E,0xF8,0x01,0x85,0x29,0x5C,0x84,0x00,0xD0,0x8C,
+0x04,0x1D,0xC2,0xF8,0x00,0x21,0xFE,0xF7,0xBB,0xA0,0x4C,0x84,0x10,0xFF,0x40,0xC0,
+0x00,0x8C,0x97,0x0E,0xE4,0x02,0x20,0x60,0xD6,0xC3,0x14,0x00,0x01,0x0B,0x77,0x03,
+0xCB,0x38,0x26,0xC4,0xC7,0x7B,0x3F,0xFF,0x0B,0x99,0x01,0x47,0x5C,0xD4,0x47,0x5B,
+0xD5,0xCB,0x18,0x26,0x38,0x0F,0x59,0x01,0x1F,0x60,0x8F,0x0B,0x37,0x01,0x0B,0x58,
+0x01,0x4F,0x39,0x20,0x57,0x39,0x70,0xE4,0x00,0x00,0x63,0x20,0x64,0xDA,0xC3,0x14,
+0x00,0x01,0x0B,0x77,0x03,0xCB,0x38,0x26,0xC8,0xC7,0x7B,0x3F,0xFF,0x0B,0x99,0x01,
+0x47,0x5C,0xD4,0x47,0x5B,0xD5,0xCB,0x18,0x26,0x38,0x0F,0x59,0x01,0x9B,0x78,0x0B,
+0x37,0x01,0x0B,0x58,0x01,0x57,0x39,0x07,0x46,0xFA,0xDC,0x46,0xF9,0xBD,0x0E,0xF8,
+0x01,0x85,0x29,0x5C,0x84,0x04,0x20,0x60,0x28,0x20,0x64,0xEE,0xE4,0x00,0x00,0x39,
+0xC2,0xF4,0x00,0x01,0x4C,0x84,0x41,0xCA,0xF7,0x26,0xC0,0x54,0x84,0x3F,0x0B,0x17,
+0x01,0x1F,0x20,0xC0,0xE4,0x00,0x00,0x2F,0xC2,0xF4,0x00,0x01,0xC4,0x84,0x3F,0x00,
+0xCA,0xF7,0x26,0xC0,0xFF,0x20,0xC0,0xFF,0x0B,0x17,0x01,0x47,0x18,0xCC,0x44,0x84,
+0xC5,0x0C,0x97,0x01,0x85,0x29,0x20,0x61,0x52,0x20,0x84,0x84,0x20,0x80,0x2C,0xD0,
+0x82,0x04,0xD6,0xE4,0x00,0x00,0x5D,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x30,0x0B,
+0x17,0x01,0xC7,0x18,0x3F,0xFF,0xE4,0x00,0x01,0x01,0xC2,0xF4,0x00,0x01,0xFF,0x20,
+0x80,0x00,0xCA,0xF7,0x26,0x30,0x0B,0x17,0x01,0xC7,0x18,0x3F,0xFF,0xE4,0x00,0x00,
+0x27,0xC2,0xF4,0x00,0x01,0xFF,0x20,0xC0,0x00,0xCA,0xF7,0x26,0x30,0x0B,0x17,0x01,
+0x47,0x18,0xCD,0x5F,0x18,0x04,0xE4,0x00,0x00,0xA1,0x20,0x65,0x3E,0x20,0x84,0x80,
+0x20,0x80,0x28,0x20,0x89,0x1A,0xE4,0x00,0x00,0x63,0xC2,0xF4,0x00,0x01,0xCA,0xF7,
+0x26,0x30,0x0B,0x17,0x01,0xC7,0x18,0xCF,0xFF,0xE4,0x00,0x00,0x5B,0xC2,0xF4,0x00,
+0x01,0xFF,0x20,0xCF,0xFF,0xCA,0xF7,0x26,0x30,0x0B,0x17,0x01,0x47,0x18,0xCC,0xCB,
+0x18,0x20,0x00,0xE4,0x00,0x00,0x27,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x30,0x0B,
+0x17,0x01,0xCB,0x18,0x30,0x00,0x0F,0x17,0x01,0x85,0x29,0x20,0x64,0x72,0xC2,0xF4,
+0x00,0x01,0xFF,0x20,0x80,0x00,0xCA,0xF7,0x26,0x24,0x0B,0x17,0x01,0x47,0x18,0xCD,
+0x5F,0x18,0x04,0xE4,0x00,0x00,0x2D,0x20,0x60,0x56,0xC2,0xF4,0x00,0x01,0xCA,0xF7,
+0x26,0x24,0x0B,0x17,0x01,0xC7,0x18,0x7F,0xFF,0x0F,0x17,0x01,0x85,0x29,0x20,0x64,
+0x5A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x24,0x0B,0x17,0x01,0xCB,0x18,0x20,0x00,
+0xE4,0x00,0x00,0x2D,0x20,0x60,0x56,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x24,0x0B,
+0x17,0x01,0xC7,0x18,0xDF,0xFF,0x0F,0x17,0x01,0x85,0x29,0x20,0x64,0x5A,0xC2,0xF4,
+0x00,0x01,0xCA,0xF7,0x26,0x24,0x0B,0x17,0x01,0xCB,0x18,0x40,0x00,0xE4,0x00,0x00,
+0x2D,0x20,0x60,0x56,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x24,0x0B,0x17,0x01,0xC7,
+0x18,0xBF,0xFF,0x0F,0x17,0x01,0x85,0x29,0x20,0x64,0x5A,0xC2,0xF4,0x00,0x01,0xCA,
+0xF7,0x26,0x24,0x0B,0x17,0x01,0xCB,0x18,0x10,0x00,0xE4,0x00,0x00,0x2D,0x20,0x60,
+0x56,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x24,0x0B,0x17,0x01,0xC7,0x18,0xEF,0xFF,
+0x0F,0x17,0x01,0x85,0x29,0x9C,0x38,0xC2,0xF4,0x00,0x01,0x0D,0x21,0x04,0xCA,0xF7,
+0x26,0x18,0x0B,0x17,0x01,0xCB,0x18,0x40,0x00,0x98,0x60,0x0F,0x17,0x01,0xE7,0xFF,
+0xFF,0x1A,0x0D,0x21,0x06,0x98,0x60,0x9C,0x28,0xE7,0xFF,0xFF,0x5F,0x20,0x64,0x72,
+0xC2,0xF4,0x00,0x01,0xFF,0x20,0x80,0x00,0xCA,0xF7,0x26,0x00,0x0B,0x17,0x01,0x47,
+0x18,0xCD,0x5F,0x18,0x04,0xE4,0x00,0x00,0x2D,0x20,0x60,0x56,0xC2,0xF4,0x00,0x01,
+0xCA,0xF7,0x26,0x00,0x0B,0x17,0x01,0xC7,0x18,0x7F,0xFF,0x0F,0x17,0x01,0x85,0x29,
+0x20,0x64,0x5A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x00,0x0B,0x17,0x01,0xCB,0x18,
+0x20,0x00,0xE4,0x00,0x00,0x2D,0x20,0x60,0x56,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,
+0x00,0x0B,0x17,0x01,0xC7,0x18,0xDF,0xFF,0x0F,0x17,0x01,0x85,0x29,0x20,0x64,0x5A,
+0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x00,0x0B,0x17,0x01,0xCB,0x18,0x40,0x00,0xE4,
+0x00,0x00,0x2D,0x20,0x60,0x56,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x00,0x0B,0x17,
+0x01,0xC7,0x18,0xBF,0xFF,0x0F,0x17,0x01,0x85,0x29,0x20,0x64,0x5A,0xC2,0xF4,0x00,
+0x01,0xCA,0xF7,0x26,0x00,0x0B,0x17,0x01,0xCB,0x18,0x10,0x00,0xE4,0x00,0x00,0x2D,
+0x20,0x60,0x56,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x00,0x0B,0x17,0x01,0xC7,0x18,
+0xEF,0xFF,0x0F,0x17,0x01,0x85,0x29,0x20,0x64,0x5A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,
+0x26,0x00,0x0B,0x17,0x01,0xCB,0x18,0x08,0x00,0xE4,0x00,0x00,0x2D,0x20,0x60,0x56,
+0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x00,0x0B,0x17,0x01,0xC7,0x18,0xF7,0xFF,0x0F,
+0x17,0x01,0x85,0x29,0x20,0x64,0x5A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x00,0x0B,
+0x17,0x01,0xCB,0x18,0x04,0x00,0xE4,0x00,0x00,0x2D,0x20,0x60,0x56,0xC2,0xF4,0x00,
+0x01,0xCA,0xF7,0x26,0x00,0x0B,0x17,0x01,0xC7,0x18,0xFB,0xFF,0x0F,0x17,0x01,0x85,
+0x29,0x5C,0x63,0x00,0xC2,0xF4,0x00,0x01,0x4F,0x23,0x40,0xCA,0xF7,0x26,0x14,0x4C,
+0x63,0x60,0x0B,0x17,0x01,0x44,0x79,0x1D,0x5F,0x18,0x00,0x44,0x63,0xC5,0x5C,0x63,
+0x04,0x0C,0x77,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xFF,0x20,0xF0,0x00,0xCB,0x17,
+0x26,0x0C,0xC4,0x63,0x0F,0xFF,0x0B,0x58,0x01,0x5C,0x63,0x06,0x47,0x5A,0xCC,0x47,
+0x43,0xD5,0x0F,0x58,0x01,0xCA,0xF7,0x26,0x10,0x0B,0x17,0x01,0x47,0x38,0xCC,0x44,
+0x63,0xCD,0x0C,0x77,0x01,0x85,0x29,0x9C,0x38,0xFF,0x00,0xE0,0x00,0x0D,0x21,0x04,
+0x0D,0x41,0x00,0xC1,0x54,0x00,0x01,0xCA,0xEA,0x26,0x04,0x0B,0x37,0x01,0x47,0x39,
+0xC4,0xCB,0x39,0x0F,0xA0,0x0F,0x37,0x01,0xCA,0xEA,0x26,0x08,0x0B,0x37,0x01,0x47,
+0x19,0xC4,0xCB,0x18,0x10,0x60,0x98,0x60,0x0F,0x17,0x01,0xFC,0x80,0x08,0x03,0xE7,
+0xFF,0xF9,0x28,0xCA,0xEA,0x26,0xC0,0xFF,0x20,0xC0,0xFF,0x0B,0x17,0x01,0x47,0x18,
+0xCC,0xCB,0x18,0x08,0x00,0x98,0x60,0x0F,0x17,0x01,0xFC,0x80,0x08,0x03,0xE7,0xFF,
+0xF7,0xDA,0x98,0x61,0xFC,0x80,0x08,0x03,0xE7,0xFF,0xF7,0xC6,0xCA,0xEA,0x26,0x00,
+0x0B,0x17,0x01,0x53,0x18,0x0F,0x0F,0x17,0x01,0x0B,0x17,0x01,0xC7,0x18,0xFF,0x7F,
+0x0F,0x17,0x01,0x0B,0x17,0x01,0xC7,0x18,0xFF,0xBF,0x98,0x68,0x0F,0x17,0x01,0xE7,
+0xFF,0xFE,0x44,0x0D,0x21,0x06,0x0D,0x41,0x02,0xFC,0x60,0x01,0x2C,0x9C,0x28,0xE7,
+0xFF,0xFE,0x6F,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x78,0x00,0x0B,0x17,0x01,0x53,0x18,
+0x02,0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x78,0x00,0x0B,0x17,
+0x01,0xC7,0x18,0xFF,0xFD,0x0F,0x17,0x01,0x85,0x29,0x9C,0x7F,0x5C,0x63,0x00,0xD0,
+0x64,0x05,0x15,0xC2,0xF8,0x00,0x21,0xFE,0xF7,0xBE,0x38,0x4C,0x63,0x10,0xFF,0x00,
+0xFC,0xFF,0x8C,0x77,0xC2,0xF4,0x00,0x01,0x0F,0x23,0x02,0x87,0x29,0xCB,0x17,0x3D,
+0x3C,0xCA,0xF7,0x31,0x04,0x0B,0x38,0x01,0x53,0x39,0x01,0x0F,0x38,0x01,0x0B,0x17,
+0x01,0xC7,0x18,0xFC,0xFF,0xE4,0x00,0x00,0xD3,0xCB,0x37,0x3D,0x3C,0xCA,0xF7,0x31,
+0x04,0x0B,0x59,0x01,0x53,0x5A,0x01,0x0F,0x59,0x01,0x0B,0x37,0x01,0x47,0x19,0xC4,
+0xCB,0x18,0x01,0x00,0xE4,0x00,0x00,0x95,0xCB,0x37,0x3D,0x3C,0xCA,0xF7,0x31,0x04,
+0x0B,0x59,0x01,0x53,0x5A,0x01,0x0F,0x59,0x01,0x0B,0x37,0x01,0x47,0x19,0xC4,0xCB,
+0x18,0x02,0x00,0xE4,0x00,0x00,0x57,0xCA,0xF7,0x3D,0x3C,0x0B,0x17,0x01,0xC7,0x18,
+0xFF,0xFE,0xE4,0x00,0x00,0x39,0xCB,0x17,0x3C,0x10,0xCA,0xF7,0x3C,0x14,0x0B,0x38,
+0x01,0x53,0x39,0x01,0x0F,0x38,0x01,0x0B,0x17,0x01,0xC7,0x18,0xFF,0xFD,0x0F,0x17,
+0x01,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x78,0x00,0x0B,0x17,0x01,0xC7,0x18,0xFF,0xFB,
+0x0F,0x17,0x01,0x85,0x29,0x5C,0x63,0x00,0x5C,0x84,0x00,0x9A,0xE0,0x24,0x64,0x43,
+0xC2,0xF8,0x00,0x21,0xFE,0xF7,0xBE,0x4C,0x8C,0x77,0x12,0xE3,0x00,0xC3,0x14,0x00,
+0x01,0xCB,0x18,0x78,0x01,0x4E,0xF7,0x10,0x5C,0x80,0x29,0x46,0xF7,0xC5,0x4B,0x00,
+0x1A,0x1B,0x17,0x00,0x85,0x29,0xC2,0xF4,0x00,0x01,0x5C,0x84,0x04,0xCB,0x17,0x79,
+0x04,0xCC,0x84,0x17,0x70,0x4F,0x24,0x81,0x5C,0x84,0x04,0x0F,0x38,0x01,0xCA,0xF7,
+0x79,0x00,0x0C,0x97,0x01,0x98,0x81,0xE7,0xFF,0xFF,0x5D,0xC2,0xF4,0x00,0x01,0xCA,
+0xF7,0x78,0xCC,0x0B,0x17,0x01,0x53,0x18,0x02,0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,
+0x00,0x01,0xCB,0x17,0x7A,0x30,0xCB,0x37,0x7A,0x34,0xCB,0x57,0x7A,0x10,0xCA,0xF7,
+0x7A,0x14,0x0B,0x18,0x01,0x0B,0x39,0x01,0x0B,0x5A,0x01,0x08,0x77,0x01,0x4E,0xF9,
+0x80,0x4C,0x63,0x80,0x8E,0xF8,0x8C,0x7A,0x44,0x63,0x1F,0x44,0x63,0xBC,0x85,0x29,
+0xC2,0xF4,0x00,0x01,0xCB,0x17,0x7A,0x70,0xCB,0x37,0x7A,0x74,0xCB,0x57,0x7A,0x50,
+0xCA,0xF7,0x7A,0x54,0x0B,0x18,0x01,0x0B,0x39,0x01,0x0B,0x5A,0x01,0x08,0x77,0x01,
+0x4E,0xF9,0x80,0x4C,0x63,0x80,0x8E,0xF8,0x8C,0x7A,0x44,0x63,0x1F,0x44,0x63,0xBC,
+0x85,0x29,0x5C,0x63,0x06,0xC2,0xF4,0x00,0x01,0x47,0x23,0x1F,0xCA,0xF7,0x7A,0x10,
+0x0B,0x17,0x01,0x47,0x19,0xC4,0x44,0x63,0xC5,0x5C,0x63,0x04,0x0C,0x77,0x01,0x85,
+0x29,0x5C,0x63,0x06,0xC2,0xF4,0x00,0x01,0x47,0x23,0x1F,0xCA,0xF7,0x7A,0x50,0x0B,
+0x17,0x01,0x47,0x19,0xC4,0x44,0x63,0xC5,0x5C,0x63,0x04,0x0C,0x77,0x01,0x85,0x29,
+0xC2,0xF4,0x00,0x01,0x44,0x63,0x1F,0xCA,0xF7,0x7A,0x10,0x0B,0x17,0x01,0x47,0x18,
+0x1C,0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0x44,0x63,0x1F,0xCA,0xF7,0x7A,
+0x50,0x0B,0x17,0x01,0x47,0x18,0x1C,0x0F,0x17,0x01,0x85,0x29,0x5C,0x63,0x04,0xC2,
+0xF4,0x00,0x01,0xCA,0xF7,0x7A,0x30,0x0C,0x77,0x01,0x85,0x29,0x9B,0x01,0xC2,0xF4,
+0x00,0x01,0xCA,0xF7,0x7A,0x70,0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xFF,
+0x20,0xAA,0x55,0xCB,0x17,0x78,0xC0,0x0F,0x38,0x01,0x5F,0x03,0x04,0x27,0x08,0x17,
+0x98,0x63,0xCA,0xF7,0x78,0xC4,0x5C,0x63,0x04,0xCB,0x00,0x03,0xE8,0x43,0x04,0xC1,
+0x40,0x63,0xC3,0x4C,0x63,0x81,0x44,0x63,0x1F,0x0C,0x77,0x01,0x06,0xE0,0x5B,0xCA,
+0xF7,0x8D,0x80,0x5C,0x97,0x0D,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x3C,0x44,0x0B,0x17,
+0x01,0x20,0x00,0x2D,0xC7,0x18,0xFF,0xBF,0xE4,0x00,0x00,0x15,0x5F,0x18,0x04,0x53,
+0x18,0x40,0x0F,0x17,0x01,0x85,0x29,0xFF,0x00,0xAA,0x55,0xC2,0xF4,0x00,0x01,0xCA,
+0xF7,0x78,0xC0,0x0F,0x17,0x01,0x85,0x29,0xFF,0x00,0x55,0xAA,0xC2,0xF4,0x00,0x01,
+0xCA,0xF7,0x78,0xC0,0x0F,0x17,0x01,0x85,0x29,0xCA,0xE0,0x03,0x20,0xC3,0x14,0x00,
+0x01,0x5C,0x63,0x04,0xC0,0x60,0x63,0xEA,0x48,0x63,0xB8,0xCA,0xF8,0x79,0x10,0x0B,
+0x37,0x01,0x53,0x39,0x01,0x0F,0x37,0x01,0xCB,0x58,0x79,0x00,0xCB,0x38,0x79,0x08,
+0x9C,0x38,0x0A,0xF9,0x01,0xCB,0x18,0x3C,0x44,0x0B,0x7A,0x01,0x0B,0x39,0x01,0x0F,
+0x21,0x07,0x0B,0x18,0x01,0x57,0x18,0x40,0x5F,0x18,0x04,0x23,0x00,0x40,0x4C,0x63,
+0x29,0x5C,0x60,0x09,0x48,0x63,0x0A,0xE4,0x00,0x00,0x3F,0xCC,0x63,0x00,0x06,0x5C,
+0x63,0x04,0xE4,0x00,0x00,0x29,0x0A,0xF8,0x01,0x52,0xF7,0x01,0x0E,0xF8,0x01,0x0A,
+0xF9,0x01,0xE4,0x00,0x00,0x21,0xC3,0x34,0x00,0x01,0xCB,0x19,0x79,0x10,0xCB,0x39,
+0x79,0x08,0x0B,0x41,0x07,0x43,0x57,0xD5,0xD4,0x7A,0x00,0xB8,0x0B,0x41,0x07,0xD7,
+0x57,0xFE,0xB9,0x0B,0x41,0x07,0x43,0x5B,0xD5,0x8E,0xFA,0xD4,0x77,0xFE,0x5C,0x9C,
+0x28,0x85,0x29,0x5C,0x63,0x04,0xE4,0x00,0x00,0x2D,0x42,0xE4,0x2C,0xC3,0x38,0x00,
+0x01,0x43,0x05,0xCC,0x8F,0x03,0x13,0x18,0x00,0x1B,0x17,0x00,0x9C,0xBF,0x20,0xBF,
+0xB2,0x85,0x29,0xC3,0x14,0x00,0x01,0x5C,0x63,0x00,0xCA,0xF8,0x2C,0x30,0x20,0x60,
+0xBE,0x0B,0x17,0x01,0xCB,0x18,0x02,0x00,0x0F,0x17,0x01,0x80,0x01,0xC2,0xF4,0x00,
+0x01,0xCB,0x17,0x3C,0x44,0xCA,0xF7,0x3C,0xA8,0x0B,0x38,0x01,0xC7,0x39,0xFF,0xF3,
+0x0F,0x38,0x01,0x0B,0x17,0x01,0x53,0x18,0x01,0xE4,0x00,0x00,0xB3,0x0B,0x37,0x01,
+0xCB,0x39,0x02,0x00,0x0F,0x37,0x01,0xCA,0xF8,0x3C,0xA8,0x0B,0x37,0x01,0x53,0x39,
+0x01,0xCB,0x18,0x3C,0x5C,0x0F,0x37,0x01,0x1E,0xE0,0xC0,0x0B,0x38,0x00,0x47,0x39,
+0xBC,0x9A,0xE2,0x24,0x64,0x25,0x54,0x63,0x3F,0x5E,0xE3,0x06,0x46,0xF7,0xCD,0x5C,
+0x77,0x04,0xC2,0xF4,0x00,0x01,0x0C,0x78,0x01,0xCB,0x17,0x3C,0xA8,0xCA,0xF7,0x2C,
+0x30,0x0B,0x38,0x01,0xC7,0x39,0xFF,0xFE,0x0F,0x38,0x01,0x0B,0x17,0x01,0xCB,0x18,
+0x01,0x00,0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCB,0x17,0x3C,0xA8,0x0B,
+0x18,0x01,0x57,0x18,0x01,0x23,0x00,0x46,0xCA,0xF7,0x3C,0x5C,0x08,0x77,0x01,0x54,
+0x63,0x3F,0xE4,0x00,0x00,0x0D,0x98,0x60,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCB,0x17,
+0x3D,0x80,0x0B,0x38,0x01,0xCB,0x39,0x08,0x00,0x0F,0x38,0x01,0xCA,0xF7,0x3D,0x84,
+0x0B,0x17,0x01,0xCB,0x18,0x08,0x00,0x0F,0x17,0x01,0x85,0x29,0xE7,0xFF,0xFF,0xBD,
+0x56,0xE3,0xFF,0x4E,0xF7,0x08,0x5C,0x84,0x04,0xC4,0x63,0xFF,0x00,0x8C,0x77,0xC2,
+0xF4,0x00,0x01,0x4C,0x63,0x08,0x8C,0x77,0x0C,0x83,0x01,0x85,0x29,0x1C,0x21,0xC8,
+0xC0,0x98,0x00,0x21,0x0D,0x21,0x34,0x1C,0x61,0x06,0xFC,0x84,0xB6,0xBE,0x50,0xA0,
+0x2A,0xE7,0xFF,0x27,0x18,0x1E,0xE1,0x06,0x1F,0x41,0x30,0x0B,0x37,0x01,0xFF,0x60,
+0xFF,0x00,0x47,0x19,0xDC,0x5F,0x39,0x00,0x4F,0x39,0x10,0x4F,0x18,0x08,0x8F,0x19,
+0xC3,0x34,0x00,0x01,0x8F,0x19,0x0B,0x37,0x03,0x47,0x99,0xCF,0x0B,0x78,0x01,0x47,
+0x7B,0xE4,0x0B,0x97,0x05,0x47,0x39,0xE4,0x47,0x3B,0xCD,0x0F,0x38,0x01,0x9E,0xE6,
+0xD7,0x57,0xFE,0x5E,0x0D,0x21,0x36,0x1C,0x21,0x38,0x85,0x29,0xFC,0x21,0xFF,0x38,
+0x50,0xA0,0x3C,0xED,0x21,0x00,0xC4,0xED,0x41,0x00,0xC0,0xED,0x61,0x00,0xBC,0xED,
+0x81,0x00,0xB8,0xED,0xA1,0x00,0xB4,0xED,0xC1,0x00,0xB0,0xED,0xE1,0x00,0xAC,0xEE,
+0x01,0x00,0xA8,0xC1,0x58,0x00,0x21,0x1C,0x61,0x6C,0xFD,0x4A,0xB6,0xBE,0x1C,0x8A,
+0x2A,0xE7,0xFF,0x26,0x18,0x50,0xA0,0x24,0x1C,0x8A,0x66,0x1C,0x61,0x48,0xE7,0xFF,
+0x25,0xFE,0x98,0x61,0x98,0x82,0xE7,0xFF,0xEE,0xC0,0x98,0x61,0xFC,0x80,0x32,0x0B,
+0xE7,0xFF,0xDA,0x30,0x98,0x61,0xFC,0x80,0x32,0x0B,0xE7,0xFF,0xEC,0x12,0x98,0x61,
+0x88,0x83,0xE7,0xFF,0xDC,0xE4,0x98,0x61,0x88,0x83,0xE7,0xFF,0xDA,0x6C,0x98,0x60,
+0x98,0x81,0xE7,0xFF,0xDB,0x5C,0x98,0x60,0x05,0x4F,0x0F,0xC9,0x4A,0x0F,0x0F,0x88,
+0x8A,0xE7,0xFF,0xE5,0x1C,0x98,0x61,0x88,0x8A,0xE7,0xFF,0xE5,0x0C,0xC3,0x54,0x00,
+0x01,0xCA,0xE0,0x11,0x50,0xCB,0x5A,0x22,0x00,0x57,0x17,0xFF,0x4F,0x18,0x10,0x8F,
+0x1A,0x1F,0x61,0x2A,0x0B,0x38,0x01,0x4F,0x17,0x08,0x8F,0x1B,0xEF,0x38,0xDD,0x61,
+0x9E,0xE1,0xC2,0xE2,0x2B,0xE4,0x23,0xFF,0x8D,0x1E,0xE1,0x6C,0xFF,0x41,0x00,0xA8,
+0xC1,0x94,0x00,0x01,0xFD,0xA0,0xFF,0x00,0x0B,0x37,0x01,0x47,0x19,0x6C,0x5F,0x39,
+0x00,0x4F,0x39,0x10,0x4F,0x18,0x08,0x8F,0x19,0x0B,0x37,0x03,0x8F,0x0C,0x0F,0x38,
+0x01,0x9E,0xE4,0xD7,0x57,0xFF,0x2E,0x1E,0xE1,0x48,0x1F,0x41,0x6C,0x0B,0x37,0x01,
+0x47,0x19,0x6C,0x5F,0x39,0x00,0x4F,0x39,0x10,0x4F,0x18,0x08,0x8F,0x19,0x0B,0x37,
+0x03,0x8F,0x0C,0x0F,0x38,0x01,0x9E,0xE4,0xD7,0x57,0xFF,0x2E,0xE7,0xFF,0xD6,0x36,
+0x99,0xE0,0x89,0xC3,0x98,0x61,0xE7,0xFF,0xD6,0x4C,0xD1,0xE0,0x05,0xBE,0x98,0x60,
+0x1D,0x61,0x0A,0xE7,0xFF,0xD6,0x86,0x99,0x40,0xE4,0x00,0x01,0x45,0x98,0x61,0x88,
+0x8A,0x22,0x01,0x0A,0xE7,0xFF,0xE2,0x1E,0x98,0x60,0xE7,0xFF,0xE2,0x68,0xFC,0x60,
+0x01,0x00,0xE7,0xFF,0xF7,0xBC,0xE7,0xFF,0xD4,0x52,0xE7,0xFF,0xF6,0x68,0xC4,0x63,
+0x01,0x00,0x20,0x63,0xE0,0xFC,0x60,0x01,0x00,0xE7,0xFF,0xF7,0x12,0xFC,0x60,0x01,
+0x00,0xE7,0xFF,0xF7,0xD6,0x88,0x6A,0x98,0x81,0x98,0xA0,0xE7,0xFF,0xE8,0x3A,0xE4,
+0x00,0x00,0x8B,0xE7,0xFF,0xE1,0xA0,0x98,0x61,0xE7,0xFF,0xE1,0xEA,0xFC,0x60,0x01,
+0x00,0xE7,0xFF,0xF7,0x3E,0xE7,0xFF,0xD3,0xD4,0xE7,0xFF,0xF5,0xEA,0xC4,0x63,0x01,
+0x00,0x20,0x63,0xE0,0xFC,0x60,0x01,0x00,0xE7,0xFF,0xF6,0x94,0xFC,0x60,0x01,0x00,
+0xE7,0xFF,0xF7,0x58,0x88,0x6A,0x98,0x81,0x98,0xA0,0xE7,0xFF,0xE7,0xBC,0x0A,0xEB,
+0x01,0x40,0x63,0xBD,0x0C,0x6B,0x01,0x9E,0x01,0x5E,0x10,0x00,0xD2,0x02,0xFB,0x8E,
+0x9D,0x41,0x9D,0x62,0x5D,0x4A,0x00,0xD1,0x44,0x05,0xEA,0x9A,0x00,0xE7,0xFF,0xFE,
+0xC1,0x98,0x61,0x1D,0x61,0x12,0xE7,0xFF,0xD5,0x20,0x99,0x40,0xE4,0x00,0x01,0x45,
+0x98,0x61,0x88,0x8A,0x22,0x01,0x0A,0xE7,0xFF,0xE0,0xB8,0x98,0x60,0xE7,0xFF,0xE1,
+0x02,0xFC,0x60,0x01,0x00,0xE7,0xFF,0xF6,0x56,0xE7,0xFF,0xD2,0xEC,0xE7,0xFF,0xF5,
+0x02,0xC4,0x63,0x01,0x00,0x20,0x63,0xE0,0xFC,0x60,0x01,0x00,0xE7,0xFF,0xF5,0xAC,
+0xFC,0x60,0x01,0x00,0xE7,0xFF,0xF6,0x70,0x88,0x6A,0x98,0x81,0x98,0xA0,0xE7,0xFF,
+0xE6,0xD4,0xE4,0x00,0x00,0x8B,0xE7,0xFF,0xE0,0x3A,0x98,0x61,0xE7,0xFF,0xE0,0x84,
+0xFC,0x60,0x01,0x00,0xE7,0xFF,0xF5,0xD8,0xE7,0xFF,0xD2,0x6E,0xE7,0xFF,0xF4,0x84,
+0xC4,0x63,0x01,0x00,0x20,0x63,0xE0,0xFC,0x60,0x01,0x00,0xE7,0xFF,0xF5,0x2E,0xFC,
+0x60,0x01,0x00,0xE7,0xFF,0xF5,0xF2,0x88,0x6A,0x98,0x81,0x98,0xA0,0xE7,0xFF,0xE6,
+0x56,0x0A,0xEB,0x01,0x40,0x63,0xBD,0x0C,0x6B,0x01,0x9E,0x01,0x5E,0x10,0x00,0xD2,
+0x02,0xFB,0x8E,0x9D,0x41,0x9D,0x62,0x5D,0x4A,0x00,0xD1,0x44,0x00,0x52,0x9A,0x00,
+0xE7,0xFF,0xFE,0xC1,0x9D,0xE1,0x5D,0xEF,0x00,0xD1,0xE2,0xF4,0x8E,0x0B,0x21,0x0A,
+0x0B,0x01,0x12,0x0F,0x21,0x07,0x1E,0xE1,0x0C,0x1F,0x81,0x12,0x0B,0x77,0x01,0x8B,
+0x59,0x5F,0xBB,0x06,0xD7,0x3D,0x00,0x30,0x8B,0x5B,0x5F,0x3A,0x06,0x0B,0x77,0x09,
+0x8B,0x58,0x5F,0xBB,0x06,0xD7,0x1D,0x00,0x30,0x8B,0x5B,0x5F,0x1A,0x06,0x9E,0xE2,
+0xD7,0x97,0xFE,0xE6,0x0F,0x21,0x07,0x9A,0xE0,0x0F,0x01,0x09,0x1F,0x21,0x1A,0x8B,
+0x57,0xFD,0x00,0x3F,0xFF,0xE4,0x00,0x00,0x69,0x43,0x7E,0xC4,0x0B,0x9B,0x00,0x43,
+0x79,0xC4,0x23,0x80,0x32,0x0D,0x1B,0x01,0x9B,0x41,0xE4,0x00,0x00,0x23,0x09,0x5D,
+0x00,0xCD,0x4A,0x1F,0xFF,0x43,0x8A,0xE0,0x0F,0x9B,0x01,0x9F,0x02,0xD3,0x08,0xFE,
+0xE6,0x9F,0x28,0x9E,0xE2,0xD2,0xE4,0x00,0xBA,0x1F,0x01,0x0A,0x4F,0xD7,0x10,0x1F,
+0xA1,0x06,0x8F,0xD8,0x8F,0xB7,0x9B,0x00,0xE7,0xFF,0xFF,0x83,0xC3,0x94,0x00,0x01,
+0x9A,0xE0,0xCB,0x9C,0x24,0x00,0xE4,0x00,0x00,0x47,0x43,0xB9,0xC4,0x43,0xDB,0xC4,
+0x57,0xBD,0xFF,0x0B,0xDE,0x01,0x4F,0xBD,0x10,0x8F,0xBC,0x0F,0xDD,0x01,0x9F,0x02,
+0xD3,0x08,0xFF,0x56,0x9E,0xE1,0x22,0xE8,0x54,0x1F,0x21,0x1A,0x4F,0x77,0x18,0x9B,
+0x00,0x8F,0x79,0xFF,0x37,0x12,0x46,0xE7,0xFF,0xFF,0xA7,0x9A,0xE0,0x4F,0x17,0x08,
+0x1F,0x61,0x6C,0x8F,0x1B,0x0B,0x38,0x01,0x47,0x19,0x6C,0x5F,0x39,0x00,0x4F,0x39,
+0x10,0x4F,0x18,0x08,0x8F,0x19,0x1F,0x21,0x2A,0x8F,0x0C,0x8F,0x37,0x0B,0x39,0x01,
+0x0F,0x38,0x01,0x9E,0xE2,0x5E,0xE3,0xC9,0x23,0xFF,0x55,0xC2,0xF4,0x00,0x01,0xCA,
+0xF7,0x25,0x38,0x0B,0x17,0x01,0x23,0x40,0x34,0x5F,0x18,0x04,0x53,0x18,0x0F,0xE4,
+0x00,0x00,0x11,0xC7,0x18,0xFF,0xF0,0x0F,0x17,0x01,0x98,0x60,0x98,0x80,0xE7,0xFF,
+0xDE,0xC2,0x98,0x80,0x98,0x61,0xE7,0xFF,0xDE,0xB2,0x98,0x60,0xE7,0xFF,0xDD,0x64,
+0x98,0x60,0x98,0x80,0xE7,0xFF,0xDC,0xFE,0x88,0x6E,0xEE,0x01,0x00,0xAA,0xED,0xE1,
+0x00,0xAE,0xED,0xC1,0x00,0xB2,0xED,0xA1,0x00,0xB6,0xED,0x81,0x00,0xBA,0xED,0x61,
+0x00,0xBE,0xED,0x41,0x00,0xC2,0xED,0x21,0x00,0xC6,0xFC,0x21,0x00,0xC8,0xE7,0xFF,
+0xD0,0x9D,0x00,0x00,0x80,0x01,0x80,0x01,0x80,0x01,0x80,0x01,0x80,0x01,0xC8,0x80,
+0xAA,0x55,0xC0,0x74,0x00,0x01,0xC8,0x63,0x78,0xC0,0x0C,0x83,0x00,0xC0,0x74,0x00,
+0x01,0xC8,0x63,0x1F,0xDC,0x50,0x80,0x80,0x0C,0x83,0x00,0x04,0x20,0x80,0xC8,0x21,
+0x17,0xFC,0x1C,0x40,0xFD,0x44,0x21,0x14,0x28,0x00,0x74,0xC0,0x40,0x00,0x01,0xC8,
+0x42,0x37,0xCC,0x84,0x49,0x0C,0x41,0x0C,0x0C,0x61,0x10,0x0C,0x81,0x14,0x0C,0xA1,
+0x18,0x0C,0xC1,0x1C,0x0C,0xE1,0x20,0x0D,0x01,0x24,0x0D,0x21,0x28,0x0D,0x41,0x2C,
+0x0D,0x61,0x30,0x0D,0x81,0x34,0x0D,0xA1,0x38,0x0D,0xC1,0x3C,0x0D,0xE1,0x40,0x0E,
+0x01,0x44,0x0E,0x21,0x48,0x0E,0x41,0x4C,0x0E,0x61,0x50,0x0E,0x81,0x54,0x0E,0xA1,
+0x58,0x0E,0xC1,0x5C,0x0E,0xE1,0x60,0x0F,0x01,0x64,0x0F,0x21,0x68,0x0F,0x41,0x6C,
+0x0F,0x61,0x70,0x0F,0x81,0x74,0x0F,0xA1,0x78,0x0F,0xC1,0x7C,0x1C,0x61,0x00,0xC1,
+0x00,0x00,0x01,0xC9,0x08,0xA9,0x70,0x85,0x08,0x90,0x23,0x00,0xC0,0x40,0x10,0x01,
+0xC8,0x42,0x03,0x7C,0xC0,0x60,0x10,0x01,0xC8,0x63,0x0D,0xB4,0x5C,0x43,0x1F,0x20,
+0x00,0x2D,0x0C,0x02,0x00,0x1C,0x42,0x04,0x93,0xF4,0x85,0x29,0xC0,0x80,0x01,0x1F,
+0xC0,0x7F,0xFF,0xE1,0xC8,0x63,0xFF,0xF9,0x44,0x84,0x1C,0xC0,0x80,0x01,0x1D,0x0C,
+0x61,0x02,0xC0,0x60,0x02,0x0D,0x0C,0x61,0x06,0xC0,0x60,0x04,0x0D,0x0C,0x41,0x0E,
+0x0C,0x61,0x12,0x0C,0x81,0x16,0x0C,0xA1,0x1A,0x0C,0xC1,0x1E,0x0C,0xE1,0x22,0x0D,
+0x01,0x26,0x0D,0x21,0x2A,0x0D,0x41,0x2E,0x0D,0x61,0x32,0x0D,0x81,0x36,0x0D,0xA1,
+0x3A,0x0D,0xC1,0x3E,0x0D,0xE1,0x42,0x0E,0x01,0x46,0x0E,0x21,0x4A,0x0E,0x41,0x4E,
+0x0E,0x61,0x52,0x0E,0x81,0x56,0x0E,0xA1,0x5A,0x0E,0xC1,0x5E,0x0E,0xE1,0x62,0x0F,
+0x01,0x66,0x0F,0x21,0x6A,0x0F,0x41,0x6E,0x0F,0x61,0x72,0x0F,0x81,0x76,0x0F,0xA1,
+0x7A,0x0F,0xC1,0x7E,0xEF,0xE1,0x00,0x82,0x0C,0x21,0x0A,0x84,0x00,0x00,0x00,0x00,
+0x9C,0x30,0xCA,0xE0,0x48,0x02,0x0D,0x41,0x08,0x0D,0x21,0x0C,0x89,0x43,0xC2,0xF7,
+0x00,0x0F,0x9B,0x1C,0x46,0xF7,0xC4,0x0E,0xE1,0x04,0x0E,0xE1,0x06,0x56,0xF7,0x04,
+0x22,0xE0,0xE0,0xCA,0xE0,0x48,0x00,0xC3,0x37,0x00,0x0F,0x9B,0x1B,0x47,0x39,0xC4,
+0xC3,0x37,0x00,0x0D,0xCA,0xE0,0x48,0x02,0xC3,0x37,0x00,0x0F,0x47,0x19,0xC4,0xC3,
+0x17,0x00,0x0D,0x98,0x82,0xE7,0xFF,0xC4,0xE2,0xCA,0xE0,0x48,0x00,0xC3,0x17,0x00,
+0x0F,0x53,0x18,0x04,0xC3,0x17,0x00,0x0D,0x0E,0xE1,0x06,0x56,0xF7,0x08,0x22,0xE0,
+0xE8,0xCA,0xE0,0x48,0x00,0xC3,0x37,0x00,0x0F,0x9B,0x17,0x47,0x39,0xC4,0xC3,0x37,
+0x00,0x0D,0xCA,0xE0,0x48,0x02,0xC3,0x37,0x00,0x0F,0x47,0x19,0xC4,0xC3,0x17,0x00,
+0x0D,0x98,0x83,0x88,0x6A,0xE7,0xFF,0xC4,0x62,0xCA,0xE0,0x48,0x00,0xC3,0x17,0x00,
+0x0F,0x53,0x18,0x08,0xC3,0x17,0x00,0x0D,0x0D,0x41,0x0A,0x0D,0x21,0x0E,0x1C,0x21,
+0x10,0x85,0x29,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x01,0x00,0x00,0x00,0x00,0xA0,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
+0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x1B,0x00,0x00,0x00,0x00,0xA0,0x26,0x01,
+0x01,0x00,0x00,0x00,0x66,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
+0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
+0x00,0xA0,0x66,0x00,0xF3,0x00,0x46,0x00,0x7A,0x00,0x93,0x00,0x4C,0x00,0x17,0x00,
+0x50,0x01,0x14,0x00,0x37,0x00,0x03,0x00,0xFF,0xFF,0x11,0x00,0x11,0x00,0x01,0x00,
+0x14,0x00,0x13,0x01,0xBE,0x00,0x6E,0x00,0x6E,0x00,0x2C,0x00,0x01,0x00,0x00,0x00,
+0x07,0x00,0xB4,0x00,0xB4,0x00,0xB4,0x00,0x06,0x00,0x98,0x08,0x02,0x00,0x00,0x00,
+0x5A,0x00,0x14,0x00,0x14,0x00,0x02,0x00,0x02,0x00,0x64,0x00,0x28,0x00,0x28,0x00,
+0x01,0x00,0x01,0x00,0x6E,0x00,0x01,0x00,0x5A,0x00,0x01,0x00,0x14,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x14,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x50,0x00,0x96,0x00,
+0x40,0x06,0x00,0x00,0x80,0x0C,0x00,0x00,0x01,0x03,0x07,0x00,0x00,0x01,0xFA,0x00,
+0xFA,0x00,0x02,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x03,0x04,0x05,0x02,0x00,0x04,0x00,0x06,0x00,
+0x08,0x00,0x0A,0x00,0x0C,0x00,0x10,0x00,0x14,0x00,0x18,0x00,0x20,0x00,0x28,0x00,
+0x32,0x00,0x3E,0x00,0x40,0x00,0x64,0x00,0x80,0x00,0x00,0x02,0x01,0x00,0x00,0x11,
+0xFF,0xFF,0xFF,0xFF,0x01,0x11,0xFF,0xFF,0x18,0x50,0x02,0x11,0xFF,0x7F,0xFF,0x0E,
+0x03,0x11,0xFF,0x00,0xF6,0x00,0x04,0x11,0xFF,0x0F,0x72,0x07,0x05,0x11,0xFF,0x0F,
+0x72,0x07,0x06,0x11,0xFF,0x00,0x00,0x00,0x07,0x11,0x03,0x00,0x00,0x00,0x08,0x11,
+0x73,0x00,0x00,0x00,0x09,0x11,0xFF,0xFF,0x00,0x00,0x09,0x11,0xFF,0x7F,0x00,0x00,
+0x0A,0x11,0xFF,0x7F,0x87,0x10,0x0E,0x11,0xFF,0xFF,0x00,0x00,0x0F,0x11,0xFF,0xFF,
+0x00,0x00,0x17,0x11,0x0F,0xFF,0x00,0x00,0x18,0x11,0xFF,0xFF,0x00,0x02,0x19,0x11,
+0xFF,0x00,0x0E,0x00,0x1E,0x11,0xFF,0xFF,0x00,0x00,0x1F,0x11,0xFF,0x00,0x00,0x00,
+0x33,0x11,0x0F,0x00,0x00,0x00,0x3A,0x11,0x37,0x0F,0x00,0x00,0x3B,0x11,0x77,0x00,
+0x77,0x00,0x3C,0x11,0x00,0xFF,0x00,0xA0,0x3D,0x11,0x77,0x00,0x00,0x00,0x3E,0x11,
+0xFF,0x00,0x00,0x00,0x04,0x12,0x06,0x00,0x00,0x00,0x05,0x12,0xFF,0x00,0x00,0x00,
+0x07,0x12,0xFF,0xFF,0x00,0x00,0x08,0x12,0xFF,0x00,0x00,0x00,0x09,0x12,0xFF,0xFF,
+0x00,0x00,0x0A,0x12,0xFF,0x00,0x00,0x00,0x0B,0x12,0x3F,0x00,0x2E,0x00,0x0D,0x12,
+0x1F,0x00,0x05,0x00,0x0E,0x12,0x1F,0x00,0x05,0x00,0x0F,0x12,0xFF,0xFF,0x00,0x00,
+0x10,0x12,0xFF,0x00,0x00,0x00,0x11,0x12,0xFF,0x0F,0x00,0x00,0x12,0x12,0x87,0x1F,
+0x00,0x00,0x13,0x12,0x7F,0x0F,0x14,0x00,0x14,0x12,0x9F,0xFF,0x0A,0x09,0x15,0x12,
+0x7F,0x0F,0x0C,0x00,0x16,0x12,0xFF,0x0F,0x00,0x07,0x17,0x12,0x1F,0xFF,0x0A,0x5C,
+0x18,0x12,0x7F,0x1F,0x14,0x0A,0x19,0x12,0xFF,0xFF,0x8C,0x21,0x1A,0x12,0xFF,0x03,
+0x00,0x00,0x1B,0x12,0xFF,0x03,0x00,0x00,0x1C,0x12,0xFF,0x03,0x00,0x00,0x1D,0x12,
+0xFF,0x03,0x00,0x00,0x1E,0x12,0x1F,0x1F,0x12,0x07,0x1F,0x12,0x3F,0x3F,0x00,0x00,
+0x20,0x12,0xFF,0xFF,0x00,0x00,0x21,0x12,0xFF,0x00,0x00,0x00,0x23,0x12,0x3F,0x3F,
+0x02,0x00,0x24,0x12,0x3F,0x00,0x00,0x00,0x28,0x12,0xFF,0xFF,0x83,0x81,0x2D,0x12,
+0x01,0x00,0x01,0x00,0x50,0x12,0xFF,0xFF,0x00,0x00,0x51,0x12,0xFF,0x00,0x00,0x00,
+0x70,0x12,0x03,0x00,0x03,0x00,0x01,0x11,0x06,0x00,0x02,0x00,0x02,0x11,0x00,0x08,
+0x00,0x08,0x2A,0x12,0x00,0xFF,0x00,0xBA,0x2B,0x12,0xFF,0x30,0xF0,0x20,0x01,0x11,
+0x06,0x00,0x00,0x00,0x2A,0x12,0x00,0xFF,0x00,0x00,0x2B,0x12,0xFF,0x30,0x00,0x00,
+0x01,0x11,0x00,0x50,0x00,0x50,0x02,0x11,0x3F,0x06,0x2F,0x06,0x01,0x11,0x00,0x50,
+0x00,0x00,0x02,0x11,0x3F,0x06,0x00,0x00,0x2A,0x12,0x00,0x30,0x00,0x20,0x11,0x1E,
+0xFF,0x7F,0x00,0x00,0x12,0x1E,0xFF,0x00,0x00,0x00,0x13,0x1E,0x0F,0x00,0x00,0x00,
+0x15,0x1E,0x73,0x07,0x00,0x00,0x16,0x1E,0x0F,0x00,0x00,0x00,0x18,0x1E,0x3F,0x00,
+0x08,0x00,0x2A,0x1E,0x05,0x00,0x01,0x00,0x50,0x11,0x11,0x11,0x51,0x11,0x11,0x11,
+0x52,0x11,0x11,0x11,0x53,0x11,0x11,0x11,0x54,0x11,0x11,0x11,0x55,0x11,0x11,0x11,
+0x56,0x11,0x11,0x11,0x57,0x11,0x11,0x11,0x58,0x11,0x11,0x11,0x59,0x11,0x11,0x11,
+0x5A,0x11,0x11,0x11,0x5B,0x11,0x11,0x11,0x5C,0x11,0xFF,0xFF,0x5D,0x11,0xFF,0xFF,
+0x5E,0x11,0xFF,0xFF,0x46,0x12,0x00,0x00,0x47,0x12,0x00,0x00,0x48,0x12,0x00,0x00,
+0x49,0x12,0x00,0x00,0x4A,0x12,0x00,0x00,0x4B,0x12,0x00,0x00,0x4C,0x12,0x00,0x00,
+0x4D,0x12,0x00,0x00,0x4E,0x12,0x0F,0x00,0x76,0x08,0x80,0x00,0xB6,0x0C,0x80,0x00,
+0x2E,0x01,0x80,0x00,0x0F,0x00,0x52,0x00,0x69,0x00,0xD9,0x00,0xBE,0x00,0xAF,0x00,
+0xA1,0x00,0x92,0x00,0x83,0x00,0x75,0x00,0x66,0x00,0x57,0x00,0x49,0x00,0x3A,0x00,
+0x2B,0x00,0x1D,0x00,0x0E,0x00,0x00,0x00,0x05,0x03,0x03,0x04,0x04,0x00,0xFF,0x00,
+0xB5,0x07,0x1F,0x00,0xFF,0x00,0x16,0x09,0x36,0x00,0xFE,0x00,0x0D,0x0C,0x63,0x00,
+0xFC,0x00,0xD9,0x14,0x95,0x00,0xFB,0x00,0xDD,0x1B,0xBA,0x00,0xFB,0x00,0x88,0x1C,
+0xE2,0x00,0xFA,0x00,0x23,0x1D,0x1F,0x01,0xF9,0x00,0xE5,0x23,0x5E,0x01,0xFF,0x00,
+0x45,0x0C,0x0D,0x00,0xFE,0x00,0x1B,0x0D,0x1D,0x00,0xFE,0x00,0xC1,0x0D,0x38,0x00,
+0xFE,0x00,0x3D,0x10,0x5A,0x00,0xFD,0x00,0x20,0x15,0x75,0x00,0xFC,0x00,0x85,0x19,
+0x88,0x00,0xFC,0x00,0xAA,0x1C,0xA4,0x00,0xFB,0x00,0x9C,0x22,0xC3,0x00,0xFA,0x00,
+0x2D,0x27,0xDD,0x00,0xFA,0x00,0xF8,0x26,0xFF,0x00,0xFF,0x00,0xFE,0x0D,0x00,0x00,
+0xFE,0x00,0x0B,0x0D,0x14,0x00,0xFE,0x00,0xC9,0x10,0x2E,0x00,0xFD,0x00,0x9E,0x14,
+0x44,0x00,0xFD,0x00,0x35,0x16,0x58,0x00,0xFD,0x00,0xCF,0x17,0x70,0x00,0xFC,0x00,
+0xD1,0x1C,0x83,0x00,0xFB,0x00,0x59,0x21,0x92,0x00,0xFB,0x00,0x57,0x23,0xAB,0x00,
+0xFA,0x00,0x3D,0x29,0xC9,0x00,0xF9,0x00,0x7E,0x2D,0xE2,0x00,0xFE,0x00,0x8F,0x0F,
+0xFA,0xFF,0xFE,0x00,0xB7,0x10,0x09,0x00,0xFE,0x00,0x36,0x12,0x1D,0x00,0xFD,0x00,
+0x41,0x14,0x35,0x00,0xFD,0x00,0xED,0x18,0x49,0x00,0xFC,0x00,0xE7,0x1C,0x56,0x00,
+0xFC,0x00,0x4D,0x1E,0x63,0x00,0xFC,0x00,0x4C,0x20,0x77,0x00,0xFB,0x00,0xF6,0x24,
+0x87,0x00,0xFA,0x00,0x4D,0x28,0x96,0x00,0xFA,0x00,0x61,0x2A,0xAE,0x00,0xF9,0x00,
+0x59,0x2F,0xCB,0x00,0xFD,0x00,0xFE,0x19,0xE5,0xFF,0xFD,0x00,0x72,0x1A,0xEC,0xFF,
+0xFD,0x00,0xA8,0x1A,0xFC,0xFF,0xFD,0x00,0xD7,0x1A,0x10,0x00,0xFD,0x00,0x88,0x1C,
+0x24,0x00,0xFC,0x00,0x92,0x20,0x31,0x00,0xFC,0x00,0x2F,0x24,0x38,0x00,0xFB,0x00,
+0x58,0x26,0x45,0x00,0xFB,0x00,0x90,0x2A,0x51,0x00,0xFA,0x00,0xA7,0x2D,0x5A,0x00,
+0xFA,0x00,0x04,0x2E,0x65,0x00,0xFA,0x00,0x64,0x2E,0x79,0x00,0xF9,0x00,0xCA,0x31,
+0x89,0x00,0xF9,0x00,0x81,0x34,0x97,0x00,0x17,0x00,0xF0,0x07,0xD4,0xFF,0xC4,0x00,
+0x0E,0x00,0x2B,0x00,0xCF,0x03,0x00,0x00,0x2B,0x00,0x15,0x00,0x6F,0x00,0xF9,0x03,
+0xF8,0xFF,0x06,0x00,0x18,0x00,0xCC,0x00,0xDE,0x04,0xD3,0xFF,0x02,0x00,0x19,0x00,
+0x07,0x01,0x35,0x03,0x3D,0x00,0x00,0x00,0x1A,0x00,0x20,0x00,0x44,0x05,0xD7,0xFF,
+0x7A,0x00,0x14,0x00,0x5B,0x00,0x81,0x04,0xE9,0xFF,0x1E,0x00,0x1C,0x00,0xA0,0x00,
+0x12,0x04,0xFA,0xFF,0x02,0x00,0x21,0x00,0x28,0x00,0x9E,0x05,0xC7,0xFF,0x7E,0x00,
+0x16,0x00,0x72,0x00,0x74,0x04,0xEC,0xFF,0x10,0x00,0x22,0x00,0xC8,0x00,0x2D,0x04,
+0xF3,0xFF,0x01,0x00,0x24,0x00,0x31,0x00,0x3D,0x06,0xB1,0xFF,0x8D,0x00,0x16,0x00,
+0x7C,0x00,0x67,0x04,0xF0,0xFF,0x13,0x00,0x25,0x00,0xC9,0x00,0xF7,0x03,0xFD,0xFF,
+0x02,0x00,0x28,0x00,0x2A,0x01,0xC5,0x04,0xC5,0xFF,0x01,0x00,0x28,0x00,0x44,0x00,
+0xDB,0x07,0x77,0xFF,0xB6,0x00,0x16,0x00,0x8A,0x00,0x7E,0x04,0xF0,0xFF,0x20,0x00,
+0x2A,0x00,0xBD,0x00,0x01,0x03,0x32,0x00,0x04,0x00,0x2F,0x00,0x10,0x01,0xAB,0x05,
+0x80,0xFF,0x02,0x00,0x30,0x00,0x00,0x00,0x36,0x55,0x00,0x00,0x36,0x55,0x00,0x00,
+0x4B,0x55,0x00,0x00,0x4B,0x55,0x00,0x00,0x98,0x57,0x00,0x00,0x98,0x57,0x00,0x00,
+0x98,0x57,0x00,0x00,0x5C,0x56,0x00,0x00,0x34,0x57,0x00,0x00,0xB9,0x56,0x00,0x00,
+0xE2,0x57,0x00,0x00,0xE2,0x57,0x00,0x00,0x6A,0x59,0x00,0x00,0x6A,0x59,0x00,0x00,
+0x6A,0x59,0x00,0x00,0x6A,0x59,0x00,0x00,0x6A,0x59,0x00,0x00,0x91,0x58,0x00,0x00,
+0x35,0x59,0x00,0x00,0xEA,0x58,0x00,0x00,0x3B,0x5B,0x00,0x00,0x3B,0x5B,0x00,0x00,
+0x5C,0x5B,0x00,0x00,0x31,0x5B,0x00,0x00,0x84,0x5B,0x00,0x00,0xC1,0x5B,0x00,0x00,
+0x9D,0x5B,0x00,0x00,0xBF,0x5E,0x00,0x00,0xE3,0x5E,0x00,0x00,0xF3,0x5E,0x00,0x00,
+0x2B,0x5F,0x00,0x00,0x1D,0x5F,0x00,0x00,0x1D,0x5F,0x00,0x00,0x2B,0x5F,0x00,0x00,
+0x1D,0x5F,0x00,0x00,0x00,0x01,0x2F,0x0B,0x0A,0x09,0x08,0x0F,0x0E,0x07,0x06,0x05,
+0x04,0x03,0x02,0x20,0x21,0x25,0x24,0x23,0x22,0x1B,0x1A,0x19,0x18,0x0C,0x0D,0x10,
+0x11,0x12,0x13,0x1D,0x1C,0x2D,0x2C,0x2B,0x2A,0x26,0x27,0x28,0x29,0x1E,0x1F,0x14,
+0x15,0x16,0x17,0x00,0xEC,0x6D,0x00,0x00,0xEC,0x6D,0x00,0x00,0x1D,0x6E,0x00,0x00,
+0x1D,0x6E,0x00,0x00,0x4F,0x6E,0x00,0x00,0x4F,0x6E,0x00,0x00,0x4F,0x6E,0x00,0x00,
+0x4F,0x6E,0x00,0x00,0xCB,0x6D,0x00,0x00,0xAA,0x6D,0x00,0x00,0xB0,0x6E,0x00,0x00,
+0xB0,0x6E,0x00,0x00,0xE3,0x6E,0x00,0x00,0xE3,0x6E,0x00,0x00,0x18,0x6F,0x00,0x00,
+0x18,0x6F,0x00,0x00,0x18,0x6F,0x00,0x00,0x18,0x6F,0x00,0x00,0x89,0x6E,0x00,0x00,
+0x77,0x6E,0x00,0x00,0xD0,0x6F,0x00,0x00,0xD0,0x6F,0x00,0x00,0x24,0x70,0x00,0x00,
+0x24,0x70,0x00,0x00,0x97,0x71,0x00,0x00,0x97,0x71,0x00,0x00,0x97,0x71,0x00,0x00,
+0x97,0x71,0x00,0x00,0x7F,0x70,0x00,0x00,0xC5,0x70,0x00,0x00,0x0B,0x71,0x00,0x00,
+0x53,0x71,0x00,0x00,0xE5,0x89,0x00,0x00,0xE5,0x89,0x00,0x00,0x20,0x8A,0x00,0x00,
+0x20,0x8A,0x00,0x00,0x15,0x8B,0x00,0x00,0x15,0x8B,0x00,0x00,0x15,0x8B,0x00,0x00,
+0x15,0x8B,0x00,0x00,0x5D,0x8A,0x00,0x00,0x85,0x8A,0x00,0x00,0xB9,0x8A,0x00,0x00,
+0xE9,0x8A,0x00,0x00,0x71,0x8D,0x00,0x00,0xC3,0x8D,0x00,0x00,0x1B,0x8E,0x00,0x00,
+0xF3,0x8E,0x00,0x00,0x77,0x8E,0x00,0x00,0xA7,0x8E,0x00,0x00,0xF3,0x8E,0x00,0x00,
+0xAF,0x8E,0x00,0x00,0x04,0x00,0x1D,0x00,0x2E,0x00,0x50,0x00,0x82,0x00,0xC7,0x00,
+0x23,0x01,0x9B,0x01,0x32,0x02,0xEE,0x02,0xD0,0x03,0xDE,0x04,0x19,0x06,0x82,0x07,
+0x1A,0x09,0xE0,0x0A,0xD0,0x0C,0xE7,0x0E,0x1F,0x11,0x71,0x13,0xD3,0x15,0x3D,0x18,
+0xA2,0x1A,0xF9,0x1C,0x34,0x1F,0x47,0x21,0x28,0x23,0xCB,0x24,0x27,0x26,0x33,0x27,
+0xEA,0x27,0x46,0x28,0x04,0x00,0x1C,0x00,0x2B,0x00,0x4B,0x00,0x78,0x00,0xB7,0x00,
+0x0A,0x01,0x75,0x01,0xFC,0x01,0xA3,0x02,0x6D,0x03,0x5E,0x04,0x76,0x05,0xB9,0x06,
+0x26,0x08,0xBE,0x09,0x7D,0x0B,0x61,0x0D,0x67,0x0F,0x87,0x11,0xBB,0x13,0xFC,0x15,
+0x3F,0x18,0x7B,0x1A,0xA6,0x1C,0xB6,0x1E,0x9F,0x20,0x57,0x22,0xD7,0x23,0x14,0x25,
+0x08,0x26,0xAF,0x26,0x03,0x27,0x05,0x00,0x08,0x21,0x05,0x00,0x00,0x20,0x00,0x00,
+0xDC,0xBC,0x00,0xC0,0xEC,0xBC,0x00,0xC0,0xFE,0xBC,0x00,0xC0,0x02,0xBD,0x00,0xC0,
+0x74,0xBC,0x00,0xC0,0xBC,0xBC,0x00,0xC0,0x1C,0xBD,0x00,0xC0,0x3A,0xBD,0x00,0xC0,
+0x3E,0xBD,0x00,0xC0,0x64,0xBD,0x00,0xC0,0xF2,0xBD,0x00,0xC0,0x34,0xBE,0x00,0xC0,
+0x96,0xBB,0x00,0xC0,0x9A,0xBB,0x00,0xC0,0x70,0xBC,0x00,0xC0,0xB8,0xBC,0x00,0xC0,
+0x05,0x00,0x2A,0x00,0x2A,0x00,0x3E,0x00,0x58,0x00,0x79,0x00,0xA1,0x00,0xD3,0x00,
+0x0F,0x01,0x56,0x01,0xAA,0x01,0x0C,0x02,0x7D,0x02,0xFE,0x02,0x91,0x03,0x37,0x04,
+0xF0,0x04,0xBE,0x05,0xA0,0x06,0x99,0x07,0xA7,0x08,0xCC,0x09,0x06,0x0B,0x56,0x0C,
+0xBB,0x0D,0x34,0x0F,0xC0,0x10,0x5D,0x12,0x0A,0x14,0xC5,0x15,0x8A,0x17,0x59,0x19,
+0x2D,0x1B,0x05,0x1D,0xDC,0x1E,0xB0,0x20,0x7D,0x22,0x40,0x24,0xF5,0x25,0x98,0x27,
+0x27,0x29,0x9E,0x2A,0xF9,0x2B,0x37,0x2D,0x53,0x2E,0x4B,0x2F,0x1E,0x30,0xC9,0x30,
+0x4A,0x31,0xA1,0x31,0xCD,0x31,0x04,0x00,0x2D,0x00,0x6D,0x00,0xE7,0x00,0xAD,0x01,
+0xD8,0x02,0x81,0x04,0xBE,0x06,0xA0,0x09,0x30,0x0D,0x6D,0x11,0x47,0x16,0xA3,0x1B,
+0x56,0x21,0x29,0x27,0xDC,0x2C,0x2A,0x32,0xCF,0x36,0x8B,0x3A,0x29,0x3D,0x81,0x3E,
+0x06,0x00,0xF5,0x28,0x03,0x00,0x33,0x33,0xC0,0xBC,0x00,0xC0,0xD6,0xBC,0x00,0xC0,
+0x68,0xBD,0x00,0xC0,0xF6,0xBD,0x00,0xC0,0xE0,0xBC,0x00,0xC0,0xF0,0xBC,0x00,0xC0,
+0xC4,0xBC,0x00,0xC0,0x06,0xBD,0x00,0xC0,0x20,0xBD,0x00,0xC0,0x42,0xBD,0x00,0xC0,
+0x46,0xBC,0x00,0xC0,0x00,0xBE,0x00,0xC0,0x14,0xBB,0x00,0xC0,0x54,0xBB,0x00,0xC0,
+0xE0,0xBB,0x00,0xC0,0x70,0xBD,0x00,0xC0,0x06,0x00,0x00,0x20,0x03,0x00,0xAA,0x2A,
+0x00,0x00,0x00,0x20,0x02,0x00,0x45,0x00,0x5D,0x01,0x1B,0x04,0x31,0x09,0xA2,0x10,
+0x55,0x19,0x32,0x21,0xE5,0x25,0x01,0x00,0x10,0x10,0xEF,0x2F,0x00,0x00,0x00,0x20,
+0x02,0x00,0x49,0x01,0x6C,0x07,0xB1,0x15,0x60,0x29,0x38,0x38,0x01,0x00,0x00,0x20,
+0x02,0x00,0xAC,0x00,0xCB,0x03,0x95,0x0B,0x6B,0x18,0xE0,0x26,0xA6,0x30,0x02,0x00,
+0xAA,0x2A,0x02,0x00,0x00,0x20,0x03,0x00,0x4D,0x00,0x51,0x01,0xBD,0x03,0x48,0x08,
+0x6B,0x0F,0x0D,0x19,0x47,0x24,0x73,0x2F,0x86,0x38,0x9F,0x3D,0x03,0x00,0x00,0x20,
+0x03,0x00,0x33,0x00,0xC4,0x00,0x08,0x02,0x5B,0x04,0x11,0x08,0x55,0x0D,0x0D,0x14,
+0xCC,0x1B,0xCF,0x23,0x1E,0x2B,0xB5,0x30,0xBD,0x33,0x04,0x00,0x33,0x33,0x04,0x00,
+0xAA,0x2A,0x03,0x00,0x1F,0x00,0x5B,0x00,0xD6,0x00,0xAB,0x01,0xF6,0x02,0xD5,0x04,
+0x59,0x07,0x87,0x0A,0x52,0x0E,0x96,0x12,0x1C,0x17,0x9B,0x1B,0xC0,0x1F,0x37,0x23,
+0xB6,0x25,0x05,0x27,0x04,0x00,0x00,0x20,0x01,0x00,0x65,0x04,0x5D,0x14,0x3D,0x27,
+0x05,0x00,0x26,0x00,0x1D,0x00,0x28,0x00,0x36,0x00,0x47,0x00,0x5A,0x00,0x72,0x00,
+0x8D,0x00,0xAE,0x00,0xD3,0x00,0xFD,0x00,0x2D,0x01,0x64,0x01,0xA2,0x01,0xE6,0x01,
+0x33,0x02,0x87,0x02,0xE5,0x02,0x4B,0x03,0xBA,0x03,0x33,0x04,0xB6,0x04,0x43,0x05,
+0xDB,0x05,0x7C,0x06,0x29,0x07,0xDF,0x07,0xA1,0x08,0x6C,0x09,0x41,0x0A,0x21,0x0B,
+0x09,0x0C,0xFA,0x0C,0xF4,0x0D,0xF5,0x0E,0xFE,0x0F,0x0C,0x11,0x20,0x12,0x38,0x13,
+0x53,0x14,0x71,0x15,0x90,0x16,0xAF,0x17,0xCD,0x18,0xE8,0x19,0x00,0x1B,0x12,0x1C,
+0x1E,0x1D,0x23,0x1E,0x1F,0x1F,0x10,0x20,0xF7,0x20,0xD0,0x21,0x9C,0x22,0x59,0x23,
+0x07,0x24,0xA3,0x24,0x2E,0x25,0xA7,0x25,0x0C,0x26,0x5E,0x26,0x9C,0x26,0xC6,0x26,
+0xDA,0x26,0x05,0x00,0x33,0x33,0x01,0x00,0x7E,0x01,0x41,0x08,0x4A,0x15,0xF4,0x20,
+0x04,0x00,0x23,0x00,0x45,0x00,0x84,0x00,0xE4,0x00,0x6F,0x01,0x2F,0x02,0x2F,0x03,
+0x76,0x04,0x0F,0x06,0xFD,0x07,0x45,0x0A,0xE6,0x0C,0xDA,0x0F,0x19,0x13,0x93,0x16,
+0x37,0x1A,0xEF,0x1D,0xA0,0x21,0x2F,0x25,0x80,0x28,0x77,0x2B,0xFA,0x2D,0xF2,0x2F,
+0x4D,0x31,0xFD,0x31,0x05,0x00,0xF5,0x28,0xAD,0x9F,0x00,0x00,0xC9,0x9F,0x00,0x00,
+0xE8,0x9F,0x00,0x00,0x07,0xA0,0x00,0x00,0x16,0xA0,0x00,0x00,0x44,0x54,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x0C,0x16,0x42,
+0x42,0x4D,0x44,0x4C,0x01,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x3C,0x9C,0x99,0x45,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x04,0x00,
+0x00,0x00,0x56,0x30,0x31,0x2E,0x30,0x30,0x37,0x2E,0x30,0x35,0x46,0x69,0xDA,0x88
Index: kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_common.h
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_common.h	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_common.h	(revision 182225)
@@ -0,0 +1,360 @@
+////////////////////////////////////////////////////////////////////////////////
+//
+// Copyright (c) 2006-2012 MStar Semiconductor, Inc.
+// All rights reserved.
+//
+// Unless otherwise stipulated in writing, any and all information contained
+// herein regardless in any format shall remain the sole proprietary of
+// MStar Semiconductor Inc. and be kept in strict confidence
+// (??MStar Confidential Information??) by the recipient.
+// Any unauthorized act including without limitation unauthorized disclosure,
+// copying, use, reproduction, sale, distribution, modification, disassembling,
+// reverse engineering and compiling of the contents of MStar Confidential
+// Information is unlawful and strictly prohibited. MStar hereby reserves the
+// rights to any and all damages, losses, costs and expenses resulting therefrom.
+//
+////////////////////////////////////////////////////////////////////////////////
+
+/**
+ *
+ * @file    mstar_drv_common.h
+ *
+ * @brief   This file defines the interface of touch screen
+ *
+ * @version v2.2.0.0
+ *
+ */
+
+#ifndef __MSTAR_DRV_COMMON_H__
+#define __MSTAR_DRV_COMMON_H__
+
+/*--------------------------------------------------------------------------*/
+/* INCLUDE FILE                                                             */
+/*--------------------------------------------------------------------------*/
+
+#include <linux/module.h>
+#include <linux/init.h>
+#include <linux/interrupt.h>
+#include <linux/types.h>
+#include <linux/input.h>
+#include <linux/kernel.h>
+#include <linux/delay.h>
+#include <linux/platform_device.h>
+#include <linux/slab.h>
+#include <linux/gpio.h>
+#include <linux/earlysuspend.h>
+#include <linux/i2c.h>
+#include <linux/proc_fs.h>
+#include <asm/irq.h>
+#include <asm/io.h>
+
+/*--------------------------------------------------------------------------*/
+/* TOUCH DEVICE DRIVER RELEASE VERSION                                      */
+/*--------------------------------------------------------------------------*/
+
+#define DEVICE_DRIVER_RELEASE_VERSION   ("2.2.0.0")
+
+
+/*--------------------------------------------------------------------------*/
+/* COMPILE OPTION DEFINITION                                                */
+/*--------------------------------------------------------------------------*/
+
+/*
+ * Note.
+ * The below compile option is used to enable the specific device driver code handling for distinct smart phone developer platform.
+ * For running on Spreadtrum platform, please define the compile option CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM.
+ * For running on Qualcomm platform, please define the compile option CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM.
+ * For running on MediaTek platform, please define the compile option CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM.
+ */
+#define CONFIG_TOUCH_DRIVER_RUN_ON_SPRD_PLATFORM
+//#define CONFIG_TOUCH_DRIVER_RUN_ON_QCOM_PLATFORM
+//#define CONFIG_TOUCH_DRIVER_RUN_ON_MTK_PLATFORM
+
+/*
+ * Note.
+ * The below compile option is used to enable the specific device driver code handling for distinct touch ic.
+ * Please enable the compile option depends on the touch ic that customer project are using and disable the others.
+ */
+//#define CONFIG_ENABLE_CHIP_MSG21XXA
+#define CONFIG_ENABLE_CHIP_MSG22XX
+//#define CONFIG_ENABLE_CHIP_MSG26XXM
+
+/*
+ * Note.
+ * The below compile option is used to enable the specific device driver code handling to make sure main board can supply power to touch ic for some specific BB chip of MTK(EX. MT6582)/SPRD(EX. SC7715)/QCOM(EX. MSM8610).
+ * By default, this compile option is disabled.
+ */
+#define CONFIG_ENABLE_REGULATOR_POWER_ON
+
+/*
+ * Note.
+ * The below compile option is used to distinguish different workqueue scheduling mechanism when firmware report finger touch to device driver by IRQ interrupt.
+ * For MTK platform, there are two type of workqueue scheduling mechanism available.
+ * Please refer to the related code which is enclosed by compile option CONFIG_USE_IRQ_INTERRUPT_FOR_MTK_PLATFORM in mstar_drv_platform_porting_layer.c for more detail.
+ * This compile option is used for MTK platform only.
+ * By default, this compile option is disabled.
+ */
+
+//#define CONFIG_USE_IRQ_INTERRUPT_FOR_MTK_PLATFORM
+
+/*
+ * Note.
+ * The below compile option is used to apply DMA mode for read/write data between device driver and firmware by I2C.
+ * The DMA mode is used to reslove I2C read/write 8 bytes limitation for specific MTK BB chip(EX. MT6589/MT6572/...)
+ * This compile option is used for MTK platform only.
+ * By default, this compile option is disabled.
+ */
+//#define CONFIG_ENABLE_DMA_IIC
+
+/*
+ * Note.
+ * The below compile option is used to enable the output log mechanism while touch device driver is running.
+ * If this compile option is not defined, the function for output log will be disabled.
+ * By default, this compile option is enabled.
+ */
+#define CONFIG_ENABLE_TOUCH_DRIVER_DEBUG
+
+/*
+ * Note.
+ * The below compile option is used to enable the specific device driver code handling when touch panel support virtual key(EX. Menu, Home, Back, Search).
+ * If this compile option is not defined, the function for virtual key handling will be disabled.
+ * By default, this compile option is enabled.
+ */
+#define TOUCH_VIRTUAL_KEYS
+
+/*
+ * Note.
+ * Since specific MTK BB chip report virtual key touch by using coordinate instead of key code, the below compile option is used to enable the code handling for reporting key with coordinate.
+ * This compile option is used for MTK platform only.
+ * By default, this compile option is disabled.
+ */
+//#define CONFIG_ENABLE_REPORT_KEY_WITH_COORDINATE
+
+/*
+ * Note.
+ * The below compile option is used to enable debug mode data log for firmware.
+ * By default, this compile option is enabled.
+ */
+//#define CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+/*
+ * Note.
+ * The below compile option is used to enable gesture wakeup.
+ * By default, this compile option is disabled.
+ */
+//#define CONFIG_ENABLE_GESTURE_WAKEUP
+
+/*
+ * Note.
+ * The below compile option is used to enable phone level MP test handling.
+ * By the way, phone level MP test is ready for MSG21XXA(support Open Test&Short Test)/MSG26XXM(support Open Test) only, but phone level MP test for MSG22XX is not ready yet.
+ * By default, this compile option is disabled.
+ */
+//#define CONFIG_ENABLE_ITO_MP_TEST
+
+
+/*
+ * Note.
+ * The below compile option is used to change the permission of the sysfs virtual file system for CTS test.
+ * If this compile option is enabled, the permission 0644 will be used. 
+ * If this compile option is disabled, the permission 0777 will be used. 
+ * By default, this compile option is disabled.
+ */
+#define SYSFS_AUTHORITY_CHANGE_FOR_CTS_TEST
+
+/*
+ * Note.
+ * If this compile option is not defined, the SW ID mechanism for updating firmware will be disabled.
+ * By default, this compile option is disabled.
+ */
+//#define CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+
+/*
+ * Note.
+ * If this compile option is defined, the update firmware bin file shall be stored in a two dimensional array format.
+ * Else, the update firmware bin file shall be stored in an one dimensional array format.
+ * Be careful, MSG22XX only support storing update firmware bin file in an one dimensional array format, it does not support two dimensional array format.
+ * By default, this compile option is disabled.
+ */
+//#define CONFIG_UPDATE_FIRMWARE_BY_TWO_DIMENSIONAL_ARRAY 
+
+/*--------------------------------------------------------------------------*/
+/* PREPROCESSOR CONSTANT DEFINITION                                         */
+/*--------------------------------------------------------------------------*/
+
+#define u8   unsigned char
+#define u16  unsigned short
+#define u32  unsigned int
+#define s8   signed char
+#define s16  signed short
+#define s32  signed int
+
+#define CONFIG_UPDATE_FIRMWARE_BY_SW_ID
+#define SLAVE_I2C_ID_DBBUS         (0xB2>>1) //0x59 // for MSG22XX
+//#define SLAVE_I2C_ID_DBBUS         (0xC4>>1) //0x62 // for MSG21XX/MSG21XXA/MSG26XXM
+#define SLAVE_I2C_ID_DWI2C         (0x4C>>1) //0x26 
+
+#define CHIP_TYPE_MSG21XX   (0x01) // EX. MSG2133
+#define CHIP_TYPE_MSG21XXA  (0x02) // EX. MSG2133A/MSG2138A(Besides, use version to distinguish MSG2133A/MSG2138A, you may refer to _DrvFwCtrlUpdateFirmwareCash()) 
+#define CHIP_TYPE_MSG26XXM  (0x03) // EX. MSG2633M
+#define CHIP_TYPE_MSG22XX   (0x7A) // EX. MSG2238/MSG2256
+
+#define PACKET_TYPE_TOOTH_PATTERN   (0x20)
+#define PACKET_TYPE_GESTURE_WAKEUP  (0x50)
+
+//#define TOUCH_SCREEN_X_MIN   (0)
+//#define TOUCH_SCREEN_Y_MIN   (0)
+/*
+ * Note.
+ * Please change the below touch screen resolution according to the touch panel that you are using.
+ */
+//#define TOUCH_SCREEN_X_MAX   (480) //LCD_WIDTH
+//#define TOUCH_SCREEN_Y_MAX   (800) //LCD_HEIGHT
+/*
+ * Note.
+ * Please do not change the below setting.
+ */
+#define TPD_WIDTH   (2048)
+#define TPD_HEIGHT  (2048)
+
+
+#define BIT0  (1<<0)  // 0x0001
+#define BIT1  (1<<1)  // 0x0002
+#define BIT2  (1<<2)  // 0x0004
+#define BIT3  (1<<3)  // 0x0008
+#define BIT4  (1<<4)  // 0x0010
+#define BIT5  (1<<5)  // 0x0020
+#define BIT6  (1<<6)  // 0x0040
+#define BIT7  (1<<7)  // 0x0080
+#define BIT8  (1<<8)  // 0x0100
+#define BIT9  (1<<9)  // 0x0200
+#define BIT10 (1<<10) // 0x0400
+#define BIT11 (1<<11) // 0x0800
+#define BIT12 (1<<12) // 0x1000
+#define BIT13 (1<<13) // 0x2000
+#define BIT14 (1<<14) // 0x4000
+#define BIT15 (1<<15) // 0x8000
+
+
+#define MAX_DEBUG_REGISTER_NUM     (10)
+
+
+#ifdef SYSFS_AUTHORITY_CHANGE_FOR_CTS_TEST
+#define SYSFS_AUTHORITY (0644)
+#else
+#define SYSFS_AUTHORITY (0777)
+#endif
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+#define GESTURE_WAKEUP_MODE_DOUBLE_CLICK_FLAG     0x0001    //0000 0000 0000 0001
+#define GESTURE_WAKEUP_MODE_UP_DIRECT_FLAG        0x0002    //0000 0000 0000 0010
+#define GESTURE_WAKEUP_MODE_DOWN_DIRECT_FLAG      0x0004    //0000 0000 0000 0100
+#define GESTURE_WAKEUP_MODE_LEFT_DIRECT_FLAG      0x0008    //0000 0000 0000 1000
+#define GESTURE_WAKEUP_MODE_RIGHT_DIRECT_FLAG     0x0010    //0000 0000 0001 0000
+#define GESTURE_WAKEUP_MODE_m_CHARACTER_FLAG      0x0020    //0000 0000 0010 0000
+#define GESTURE_WAKEUP_MODE_W_CHARACTER_FLAG      0x0040    //0000 0000 0100 0000
+#define GESTURE_WAKEUP_MODE_C_CHARACTER_FLAG      0x0080    //0000 0000 1000 0000
+#define GESTURE_WAKEUP_MODE_e_CHARACTER_FLAG      0x0100    //0000 0001 0000 0000
+#define GESTURE_WAKEUP_MODE_V_CHARACTER_FLAG      0x0200    //0000 0010 0000 0000
+#define GESTURE_WAKEUP_MODE_O_CHARACTER_FLAG      0x0400    //0000 0100 0000 0000
+#define GESTURE_WAKEUP_MODE_S_CHARACTER_FLAG      0x0800    //0000 1000 0000 0000
+#define GESTURE_WAKEUP_MODE_Z_CHARACTER_FLAG      0x1000    //0001 0000 0000 0000
+
+#define GESTURE_WAKEUP_PACKET_LENGTH    (6)
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+
+
+/*--------------------------------------------------------------------------*/
+/* PREPROCESSOR MACRO DEFINITION                                            */
+/*--------------------------------------------------------------------------*/
+
+#ifdef CONFIG_ENABLE_TOUCH_DRIVER_DEBUG
+//#define DBG(fmt, arg...) pr_info(fmt, ##arg)
+#define DBG(fmt, arg...) printk(fmt, ##arg)
+#else
+#define DBG(fmt, arg...)
+#endif
+
+/*--------------------------------------------------------------------------*/
+/* SPREADTRUM  DEFINITION */
+/*--------------------------------------------------------------------------*/
+
+#define MSG_TP_IC_NAME        "msg2138_ts" //"msg21xxA" or "msg22xx" or "msg26xxM"
+#define MSG_TP_I2C_ADDR      0x26
+#define MAX_FINGER_NUM        5
+
+struct msg2138_ts_platform_data{
+	int irq_gpio_number;
+	int reset_gpio_number;
+	const char *vdd_name;
+	int virtualkeys[12];
+	int TP_MAX_X;
+	int TP_MAX_Y;
+};
+struct point_node_t{
+	unsigned char 	active ;
+	unsigned char	finger_id;
+	int	posx;
+	int	posy;
+};
+struct TouchScreenInfo_t{
+    unsigned char nTouchKeyMode;
+    unsigned char nTouchKeyCode;
+};
+struct touch_info {
+	 int x1, y1;
+	 int x2, y2;
+	 int x3, y3;
+	 int p1, p2,p3;
+	 int count;
+};
+
+extern struct i2c_client *g_I2cClient;
+extern int MS_TS_MSG_IC_GPIO_RST;
+extern int MS_TS_MSG_IC_GPIO_INT;
+extern int TOUCH_SCREEN_X_MAX;
+extern int TOUCH_SCREEN_Y_MAX;
+extern struct point_node_t point_slot[MAX_FINGER_NUM*2];
+/*--------------------------------------------------------------------------*/
+/* DATA TYPE DEFINITION                                                     */
+/*--------------------------------------------------------------------------*/
+
+typedef enum
+{
+    EMEM_ALL = 0,
+    EMEM_MAIN,
+    EMEM_INFO
+} EmemType_e;
+
+typedef enum
+{
+    ITO_TEST_MODE_OPEN_TEST = 1,
+    ITO_TEST_MODE_SHORT_TEST = 2
+} ItoTestMode_e;
+
+typedef enum
+{
+    ITO_TEST_OK = 0,
+    ITO_TEST_FAIL,
+    ITO_TEST_GET_TP_TYPE_ERROR,
+    ITO_TEST_UNDEFINED_ERROR,
+    ITO_TEST_UNDER_TESTING
+
+} ItoTestResult_e;
+
+/*--------------------------------------------------------------------------*/
+/* GLOBAL VARIABLE DEFINITION                                               */
+/*--------------------------------------------------------------------------*/
+
+
+/*--------------------------------------------------------------------------*/
+/* GLOBAL FUNCTION DECLARATION                                              */
+/*--------------------------------------------------------------------------*/
+
+extern u8 DrvCommonCalculateCheckSum(u8 *pMsg, u32 nLength);
+extern u32 DrvCommonConvertCharToHexDigit(char *pCh, u32 nLength);
+extern u32 DrvCommonCrcDoReflect(u32 nRef, s8 nCh);
+extern u32 DrvCommonCrcGetValue(u32 nText, u32 nPrevCRC);
+extern void DrvCommonCrcInitTable(void);
+
+#endif  /* __MSTAR_DRV_COMMON_H__ */
Index: kernel/drivers/input/touchscreen/msg2138_1/msg2xxx_yyyy_update_bin.h
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/msg2xxx_yyyy_update_bin.h	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/msg2xxx_yyyy_update_bin.h	(revision 182225)
@@ -0,0 +1,3104 @@
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x90,0xF2,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x91,0x52,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x91,0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x91,0x36,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x91,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x91,0x1A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x91,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x90,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x90,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x91,0x19,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x91,0x0B,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x90,0xFD,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x90,0xEF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x90,0xE1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x90,0xD3,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x90,0xC5,0x80,0x01,0x80,0x01,0x80,0x01,0x80,0x01,0x80,0x01,0x1C,0x40,0x00,0x1C,
+0x60,0x00,0x1C,0x80,0x00,0x1C,0xA0,0x00,0x1C,0xC0,0x00,0x1C,0xE0,0x00,0x1D,0x00,
+0x00,0x1D,0x20,0x00,0x1D,0x40,0x00,0x1D,0x60,0x00,0x1D,0x80,0x00,0x1D,0xA0,0x00,
+0x1D,0xC0,0x00,0x1D,0xE0,0x00,0x1E,0x00,0x00,0x1E,0x20,0x00,0x1E,0x40,0x00,0x1E,
+0x60,0x00,0x1E,0x80,0x00,0x1E,0xA0,0x00,0x1E,0xC0,0x00,0x1E,0xE0,0x00,0x1F,0x00,
+0x00,0x1F,0x20,0x00,0x1F,0x40,0x00,0x1F,0x60,0x00,0x1F,0x80,0x00,0x1F,0xA0,0x00,
+0x1F,0xC0,0x00,0x1F,0xE0,0x00,0xC0,0x60,0x00,0x01,0xC8,0x63,0xA6,0x08,0x84,0x69,
+0x80,0x01,0x90,0x00,0x90,0x00,0x90,0x00,0x90,0x00,0x90,0x00,0x90,0x00,0x90,0x00,
+0xFC,0x21,0xFF,0x60,0xEF,0xE1,0x00,0x80,0xFF,0xE1,0x00,0xA0,0x0F,0xE1,0x08,0xC3,
+0xE0,0x02,0x0F,0x0F,0xE1,0x00,0xC3,0xE0,0x04,0x0F,0x0F,0xE1,0x04,0xC3,0xE0,0x03,
+0x0F,0xEF,0xE1,0x00,0x84,0xC3,0xE0,0x05,0x0F,0xEF,0xE1,0x00,0x88,0xC3,0xE0,0x05,
+0x1F,0xEF,0xE1,0x00,0x8C,0xE4,0x01,0x47,0x49,0x90,0x00,0x90,0x00,0x90,0x00,0x90,
+0x00,0x90,0x00,0x90,0x00,0x90,0x00,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x30,0x44,0x0B,
+0x17,0x01,0x98,0x60,0x56,0xF8,0x01,0x4F,0x18,0x79,0x22,0xE0,0x14,0x98,0x62,0x23,
+0x00,0x18,0x58,0x77,0x01,0x85,0x29,0x1C,0x21,0xE0,0x0D,0x41,0x18,0x0D,0x81,0x10,
+0xC1,0x40,0x10,0x01,0x99,0x9E,0xFD,0x4A,0x03,0xB0,0x12,0xEA,0x00,0x46,0xEC,0xBC,
+0x0D,0x61,0x14,0x0D,0xA1,0x0C,0x0C,0x81,0x04,0x0C,0xC1,0x00,0x0D,0x21,0x1C,0x5D,
+0x63,0x00,0x89,0xA5,0x1A,0xEA,0x00,0xE7,0xFF,0xFF,0x60,0x0C,0x81,0x06,0x5C,0x63,
+0x00,0x0C,0xC1,0x02,0x20,0x60,0xD6,0x9A,0xE0,0x21,0x60,0x30,0x21,0x64,0x24,0x5D,
+0x60,0x41,0x4A,0xE1,0x01,0x5C,0x80,0x29,0x4A,0xF7,0x0A,0xD1,0xA1,0x05,0x9E,0xD0,
+0xC1,0x07,0xE6,0xC3,0x14,0x00,0x01,0xCB,0x18,0x3D,0x9C,0x0B,0x18,0x01,0xC3,0x00,
+0x5F,0xEE,0x20,0x03,0xA7,0xE4,0x00,0x01,0xB3,0xE7,0xFF,0xFE,0xDC,0x5C,0x63,0x00,
+0x20,0x64,0x62,0x9A,0xE0,0x21,0x60,0x30,0x21,0x64,0x24,0x5D,0x60,0x41,0x4A,0xE1,
+0x01,0x21,0xA5,0xF6,0xE4,0x00,0x01,0x75,0xE7,0xFF,0xFE,0x9E,0x5C,0x63,0x00,0xD0,
+0x62,0x06,0x4E,0x9A,0xE1,0x21,0x60,0x24,0x5D,0x60,0x21,0x4A,0xE1,0x01,0x21,0xA4,
+0x32,0x13,0x0A,0x00,0x53,0x18,0x01,0x1B,0x0A,0x00,0xC3,0x14,0x00,0x01,0xFD,0x8C,
+0x80,0x02,0xCB,0x38,0x23,0x78,0x0B,0x59,0x01,0x47,0x4C,0xD5,0x5F,0x5A,0x04,0x0F,
+0x59,0x01,0xCB,0x38,0x23,0x6C,0x0B,0x59,0x01,0xC7,0x5A,0x8F,0xFF,0x0F,0x59,0x01,
+0xCB,0x38,0x3C,0xD4,0x0B,0x59,0x01,0x47,0x4C,0xD5,0x5F,0x5A,0x04,0x0F,0x59,0x01,
+0xCB,0x38,0x3C,0xE0,0x0B,0x59,0x01,0xC7,0x5A,0x7F,0xFF,0x0F,0x59,0x01,0xCB,0x18,
+0x3C,0xEC,0x0B,0x38,0x01,0x45,0x8C,0xCD,0x5D,0x8C,0x04,0x0D,0x98,0x01,0x22,0xE5,
+0x6A,0xC2,0xF4,0x00,0x01,0xCB,0x17,0x3C,0x68,0x0B,0x38,0x01,0xFF,0x20,0x11,0x11,
+0x0F,0x38,0x01,0xCB,0x17,0x3C,0x6C,0x0B,0x38,0x01,0xFF,0x20,0x22,0x22,0x0F,0x38,
+0x01,0xCB,0x17,0x3C,0x70,0x0B,0x38,0x01,0xFF,0x20,0x33,0x33,0x0F,0x38,0x01,0xCA,
+0xF7,0x78,0xC0,0xFF,0x00,0xAA,0x55,0x0F,0x17,0x01,0xE4,0x00,0x00,0x01,0x13,0x0A,
+0x00,0x53,0x18,0x01,0x1B,0x0A,0x00,0xE7,0xFF,0xFF,0x6F,0x13,0x0A,0x00,0x45,0x8C,
+0xC4,0x19,0x8A,0x00,0xE7,0xFF,0xFF,0x55,0x0D,0xA1,0x0E,0x0D,0x81,0x12,0x0D,0x61,
+0x16,0x0D,0x41,0x1A,0x0D,0x21,0x1E,0x1C,0x21,0x20,0x85,0x29,0xC2,0xE0,0x10,0x01,
+0xEC,0x77,0x03,0xD4,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x03,0xCC,0xC2,0xE0,0x10,0x01,
+0xEC,0xB7,0x03,0xD0,0xC2,0xE0,0x10,0x01,0xEC,0xD7,0x03,0xE8,0xC2,0xE0,0x10,0x01,
+0xEC,0xF7,0x03,0xE0,0xC2,0xE0,0x10,0x01,0x0F,0x01,0x02,0xED,0x17,0x03,0xE4,0xC2,
+0xE0,0x10,0x01,0xEF,0x17,0x03,0xF4,0xC2,0xE0,0x10,0x01,0x0F,0x01,0x06,0xEF,0x17,
+0x03,0xB8,0xC2,0xE0,0x10,0x01,0x0F,0x01,0x0A,0xEF,0x17,0x03,0xD8,0x85,0x29,0x5C,
+0x84,0x00,0xC2,0xE0,0x10,0x01,0x4C,0x84,0x10,0xFE,0xF7,0x03,0xEC,0x8E,0xE4,0x0C,
+0x77,0x00,0x85,0x29,0x5C,0x63,0x00,0x9B,0x00,0x24,0x68,0x25,0x1F,0x03,0xFE,0x5F,
+0x18,0x00,0xC2,0xE0,0x10,0x01,0xF3,0x57,0x0B,0xEE,0x1E,0xE3,0x01,0x1F,0x9A,0xFF,
+0x5F,0x3C,0x00,0xD7,0x97,0x00,0x50,0x1F,0x23,0x02,0x5F,0x39,0x00,0xC2,0xEF,0xFF,
+0xE1,0xCA,0xF7,0xFF,0xFF,0xE4,0x00,0x00,0x2F,0x4F,0x78,0x10,0x9F,0x01,0x8F,0x64,
+0x5F,0x18,0x00,0x0F,0x7B,0x02,0x5E,0xFB,0x15,0x4A,0xF7,0xD8,0xD7,0x19,0xFF,0x69,
+0x4F,0x03,0x10,0xC3,0x20,0x10,0x01,0x8F,0x04,0xEF,0x39,0x03,0xDA,0x0F,0x18,0x02,
+0xD7,0x38,0x01,0x41,0xC3,0x20,0x10,0x01,0xEF,0x79,0x03,0xD6,0xC3,0x20,0x10,0x01,
+0xEF,0xB9,0x03,0xCE,0xC3,0x20,0x10,0x01,0xEF,0xD9,0x03,0xD2,0xC3,0x20,0x10,0x01,
+0xEF,0x39,0x03,0xEA,0xE4,0x00,0x00,0x49,0xC3,0x20,0x10,0x01,0xEF,0x79,0x03,0xE2,
+0xC3,0x20,0x10,0x01,0xEF,0xB9,0x03,0xE6,0xC3,0x20,0x10,0x01,0xEF,0xD9,0x03,0xF6,
+0xC3,0x20,0x10,0x01,0xEF,0x39,0x03,0xBA,0x20,0x60,0xDE,0x0F,0x44,0x02,0x0F,0x84,
+0x06,0xCF,0x5A,0x00,0x32,0x40,0xE7,0xE3,0xD7,0x47,0x05,0xDC,0x42,0xF7,0x2D,0x40,
+0xA5,0xCB,0x43,0x77,0xDB,0x43,0x3B,0x2C,0xCC,0xC6,0x00,0x0A,0x9B,0x4A,0x8C,0xD9,
+0x98,0x61,0x40,0xC6,0xD0,0xD7,0x06,0x04,0xF4,0x98,0x60,0xE4,0x00,0x01,0x31,0x20,
+0x64,0x6A,0x0F,0x44,0x02,0x0F,0x64,0x06,0xCF,0x5A,0x00,0x32,0x40,0xE7,0xDB,0x98,
+0x60,0xD7,0x47,0x04,0x14,0xE4,0x00,0x00,0x55,0x1C,0xFA,0xFE,0xD4,0x67,0x01,0x9E,
+0x4C,0x63,0x10,0x9F,0x5F,0x4F,0x5A,0x10,0x8F,0x44,0x8C,0x83,0x0F,0x5A,0x02,0x0F,
+0x64,0x02,0xCF,0x5A,0x00,0x32,0x41,0x08,0xDB,0x98,0x60,0xD7,0x48,0x02,0xC4,0x42,
+0xF7,0x2D,0x40,0xA5,0xCB,0x43,0xB7,0xEB,0x43,0x3D,0x2C,0xE7,0xFF,0xFF,0x3B,0xD4,
+0x7C,0x01,0x3E,0x9F,0x5F,0x4C,0xE7,0x10,0x4F,0x5A,0x10,0x98,0x60,0x8F,0x44,0x8C,
+0x87,0x0F,0x5A,0x02,0x0F,0x84,0x02,0xCF,0x5A,0x00,0x32,0x41,0x08,0xE3,0xD7,0x48,
+0x01,0x2C,0xE7,0xFF,0xFE,0xD5,0x42,0xF7,0x2D,0xCC,0xC6,0x00,0x0A,0x43,0xD7,0xF3,
+0x40,0xA5,0xCB,0x9B,0x4A,0x43,0x3E,0x2C,0x8C,0xD9,0x40,0xC6,0xD0,0xD7,0x06,0xFB,
+0x60,0x98,0x61,0x85,0x29,0x5C,0xE7,0x00,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x0B,0xEE,
+0x42,0xE7,0xBB,0x5E,0xF7,0x00,0x9B,0x00,0x8C,0xB7,0x8C,0xD7,0xC3,0x80,0x10,0x01,
+0xC3,0x40,0x10,0x01,0x5C,0xC6,0x00,0x5C,0xA5,0x00,0x8B,0x38,0x9A,0xE0,0xFF,0x9C,
+0x08,0xE8,0xFF,0x5A,0x0A,0xB4,0xE4,0x00,0x00,0x49,0x4F,0x65,0x10,0x43,0xBB,0xE4,
+0x0F,0xBD,0x02,0x9C,0xA1,0x8E,0xFD,0x5C,0xA5,0x00,0x8B,0xBB,0x8F,0x7A,0x8F,0xBA,
+0x0B,0x7B,0x00,0x0B,0xBD,0x02,0x8F,0x1B,0x8F,0x3D,0xD4,0xA6,0xFF,0x01,0x26,0xE0,
+0xE8,0x27,0x20,0xDC,0x27,0x00,0xD0,0xC3,0x40,0x10,0x01,0xFF,0x5A,0x03,0xEC,0x4C,
+0xE7,0x10,0xCF,0x18,0xFF,0xF6,0x8C,0xFA,0x0F,0x47,0x02,0x43,0x3A,0xCB,0x9F,0x56,
+0x8F,0x19,0x43,0x58,0xD0,0xCF,0x5A,0x07,0xFF,0x43,0x5A,0xB8,0x0F,0x43,0x01,0x0E,
+0xE4,0x00,0x98,0x61,0xE4,0x00,0x00,0x0D,0x98,0x60,0x85,0x29,0x9A,0xE3,0x9B,0x01,
+0xE4,0x00,0x00,0x11,0x8F,0x17,0x9E,0xE2,0xD7,0x03,0xFF,0xE1,0x4C,0x77,0x09,0x9C,
+0x7F,0x85,0x29,0xFF,0x00,0x7F,0xFF,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x03,0xBC,0x0F,
+0x17,0x01,0x0F,0x17,0x03,0x0F,0x17,0x05,0x0F,0x17,0x07,0x0F,0x17,0x09,0x0F,0x17,
+0x0B,0x85,0x29,0xC3,0x00,0x10,0x01,0xFE,0xF8,0x03,0xBC,0xC3,0x00,0x10,0x01,0x0B,
+0x37,0x08,0xFF,0x18,0x0C,0x04,0xC3,0x2F,0xFF,0xE0,0x20,0x00,0x41,0x0B,0x37,0x05,
+0x0F,0x37,0x09,0x0B,0x37,0x07,0xE4,0x00,0x00,0x1B,0x0B,0x38,0x17,0x0F,0x37,0x09,
+0x0B,0x38,0x19,0x0F,0x37,0x0B,0x0B,0x37,0x04,0xC3,0x2F,0xFF,0xE0,0x20,0x00,0x41,
+0x0B,0x37,0x01,0x0F,0x37,0x05,0x0B,0x37,0x03,0xE4,0x00,0x00,0x1B,0x0B,0x38,0x17,
+0x0F,0x37,0x05,0x0B,0x38,0x19,0x0F,0x37,0x07,0x0B,0x38,0x17,0x0B,0x18,0x19,0x0F,
+0x37,0x01,0x0F,0x17,0x03,0x85,0x29,0x1C,0x21,0xD8,0xC2,0xE0,0x10,0x01,0x0D,0x21,
+0x24,0x0D,0x41,0x20,0x0D,0x61,0x1C,0xFD,0x57,0x03,0xBC,0x0D,0x81,0x18,0x0D,0xA1,
+0x14,0x0D,0xC1,0x10,0x09,0xAA,0x07,0x0B,0x0A,0x03,0x43,0x18,0x6D,0x5F,0x18,0x06,
+0x0F,0x01,0x0B,0x43,0x18,0xC3,0xE9,0x97,0x03,0xBD,0x09,0xCA,0x05,0x41,0x8C,0x75,
+0x5D,0x8C,0x06,0x40,0x6C,0x63,0x8C,0x78,0xE7,0xFF,0xFE,0x48,0x0A,0xEA,0x09,0x41,
+0xCE,0xBD,0x0A,0xEA,0x0B,0x42,0xED,0xBD,0x5E,0xF7,0x06,0x0E,0xE1,0x0F,0x42,0xF7,
+0xBB,0x5D,0x63,0x06,0x5D,0x4E,0x06,0x40,0x6A,0x53,0x8C,0x77,0xE7,0xFF,0xFE,0x00,
+0x5E,0xE3,0x06,0x98,0x61,0x21,0x60,0xAC,0x22,0xE0,0xA0,0x43,0x0B,0xB8,0xD3,0x05,
+0x01,0x14,0x41,0x4C,0x53,0x0B,0x01,0x0E,0x09,0x81,0x0A,0x41,0x6B,0xBB,0x43,0x0C,
+0xC3,0x8D,0x58,0xCD,0x4A,0x00,0x64,0x42,0xEA,0x58,0x5E,0xE8,0xB1,0x48,0x61,0x01,
+0x0D,0xC1,0x12,0x0D,0xA1,0x16,0x0D,0x81,0x1A,0x0D,0x61,0x1E,0x0D,0x41,0x22,0x0D,
+0x21,0x26,0x1C,0x21,0x28,0x85,0x29,0x1C,0x21,0xE8,0xC2,0xE0,0x10,0x01,0x0D,0x41,
+0x10,0x0D,0x61,0x0C,0x0D,0x81,0x08,0x0D,0xC1,0x00,0xF1,0x97,0x09,0x73,0xC1,0x40,
+0x10,0x01,0x1D,0x6C,0xFF,0x0D,0x21,0x14,0x0D,0xA1,0x04,0x5D,0xC3,0x00,0x5D,0x6B,
+0x00,0xFD,0x4A,0x0C,0x04,0x4E,0xEE,0x5D,0x56,0xF7,0x01,0x22,0xE0,0xD4,0x8A,0xEB,
+0xE4,0x00,0x00,0x43,0xCC,0x77,0x00,0x30,0x1D,0xB7,0x01,0x8C,0x6A,0xCC,0x8D,0x00,
+0x30,0x9C,0x64,0x8C,0x8A,0x50,0xA0,0x30,0x9C,0x84,0xE4,0x00,0x5E,0x26,0x5E,0xED,
+0x00,0xD5,0x97,0xFF,0x1D,0x12,0xEA,0x00,0x22,0xE0,0x20,0x9E,0xFF,0x1A,0xEA,0x00,
+0x21,0x60,0x30,0x9D,0x7F,0x5D,0x6B,0x00,0xE7,0xFF,0xFF,0x7B,0x12,0xEA,0x00,0x22,
+0xE0,0x52,0xC2,0xE0,0x10,0x01,0x9B,0x37,0xEB,0x17,0x0C,0x03,0x47,0x18,0xCC,0xEF,
+0x17,0x0C,0x03,0x0D,0xC1,0x02,0x0D,0xA1,0x06,0x0D,0x81,0x0A,0x0D,0x61,0x0E,0x0D,
+0x41,0x12,0x0D,0x21,0x16,0x1C,0x21,0x18,0x85,0x29,0xC2,0xE0,0x10,0x01,0xC3,0x00,
+0x10,0x01,0xEB,0x37,0x01,0x56,0xFF,0x18,0x04,0x00,0xC2,0xE0,0x10,0x01,0xFE,0xF7,
+0x0B,0xEA,0x23,0x24,0xA6,0x13,0x37,0x04,0x9A,0xE0,0x9F,0x21,0xE4,0x00,0x00,0x2F,
+0x4F,0x57,0x08,0x1F,0x77,0xFF,0x8F,0x58,0x4F,0x7B,0x10,0x9E,0xE1,0x0F,0x7A,0x01,
+0x5E,0xF7,0x00,0xD6,0xF9,0xFF,0x68,0xE4,0x00,0x00,0x9D,0x23,0x28,0x38,0x13,0x37,
+0x04,0x9A,0xE0,0x9F,0x21,0xE4,0x00,0x00,0x79,0x13,0x37,0x04,0x9A,0xE0,0x9F,0x21,
+0xE4,0x00,0x00,0x2F,0x4F,0x57,0x08,0xCF,0x77,0x00,0x06,0x8F,0x58,0x9F,0x79,0x9E,
+0xE1,0x0F,0x7A,0x01,0x5E,0xF7,0x00,0xD6,0xF9,0xFF,0x68,0xE4,0x00,0x00,0x35,0x4F,
+0x57,0x08,0x4F,0x77,0x08,0x8F,0x58,0x9F,0x7F,0x9E,0xE1,0x0F,0x7A,0x01,0x5E,0xF7,
+0x00,0xD6,0xF9,0xFF,0x70,0x85,0x29,0x9C,0x30,0x5C,0xC6,0x00,0x0D,0x61,0x08,0x0D,
+0x81,0x04,0x0D,0xA1,0x00,0x0D,0x41,0x0C,0xC3,0x00,0x10,0x01,0xFF,0x18,0x0B,0xEA,
+0x13,0xD8,0x04,0x40,0xC6,0xF3,0x5E,0xE6,0x00,0x5F,0xA3,0x06,0x8C,0x97,0x8C,0xB7,
+0x5F,0x7D,0x04,0x0A,0xF8,0x0B,0x11,0x58,0x0C,0x40,0xFB,0xBC,0x41,0x9B,0xBD,0xC1,
+0xA0,0x10,0x01,0xC3,0x00,0x10,0x01,0x5C,0xA5,0x00,0x4D,0x77,0x08,0x5C,0xE7,0x04,
+0x5D,0x8C,0x04,0x5C,0x84,0x00,0xFD,0xAD,0x04,0x00,0xFF,0x18,0x0A,0xB4,0x53,0x20,
+0x64,0xE4,0x00,0x01,0x21,0x43,0x44,0x35,0x9F,0x41,0x4F,0x5A,0x08,0x8F,0x4D,0x09,
+0x1A,0x00,0x41,0x08,0xBB,0x41,0x08,0x50,0x5F,0x88,0x04,0x43,0x5C,0xDD,0x5F,0x5A,
+0x06,0x4C,0x7A,0xFA,0x47,0x43,0xD6,0x43,0x5A,0x1D,0xD6,0xFA,0x03,0x14,0xD5,0x7A,
+0x02,0x70,0x5D,0x08,0x06,0xD5,0x1D,0x00,0x58,0x43,0x9C,0x3D,0xE4,0x00,0x00,0x0F,
+0x43,0x8C,0xE5,0x5F,0x9C,0x06,0x4F,0x44,0x10,0x43,0x97,0xE5,0x8F,0x58,0xCF,0x9C,
+0x00,0x64,0x09,0x1A,0x00,0x43,0x9C,0xB8,0xC7,0x9C,0xFF,0xFF,0x41,0x1C,0x43,0x41,
+0x08,0xC8,0x0D,0x1A,0x01,0x4F,0x44,0x10,0x9F,0x42,0x8F,0x58,0x09,0x1A,0x00,0x43,
+0x9C,0x43,0x43,0x9C,0xC8,0x0F,0x9A,0x01,0xE4,0x00,0x00,0x29,0x4F,0x44,0x10,0x8F,
+0x58,0x0C,0x1A,0x01,0x4F,0x44,0x10,0x8F,0x58,0x0C,0x1A,0x03,0x9C,0x81,0x5C,0x84,
+0x00,0xD4,0x85,0xFB,0xA0,0xC2,0xE0,0x10,0x01,0x0D,0xA1,0x02,0xF0,0x77,0x0B,0xEB,
+0x0D,0x81,0x06,0x0D,0x61,0x0A,0x0D,0x41,0x0E,0x40,0x7E,0x1B,0x98,0x80,0x1C,0x21,
+0x10,0xE4,0x00,0xAD,0x95,0x5C,0x63,0x00,0x5C,0x84,0x00,0xC2,0xE0,0x10,0x01,0x43,
+0x64,0x1D,0xF2,0xF7,0x0B,0xEE,0x9F,0x61,0x40,0xA5,0xBB,0x5F,0x7B,0x00,0x5C,0xA5,
+0x00,0x20,0xE4,0x3E,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x0C,0xDE,0xE4,0x00,0x00,0x19,
+0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x0A,0xB4,0x43,0x23,0x2C,0x9B,0x00,0x4F,0x39,0x10,
+0x9F,0x22,0x8F,0x37,0xC2,0xEF,0xFF,0xE1,0xCA,0xF7,0xFF,0xFF,0xE4,0x00,0x00,0x3D,
+0x0B,0x99,0xFE,0x0B,0x59,0x00,0x9F,0x24,0x8F,0x5C,0x4F,0x98,0x10,0x5E,0xFA,0x15,
+0x8F,0x86,0x4A,0xF7,0xD0,0x0F,0x5C,0x00,0x9F,0x01,0x5F,0x58,0x00,0xD7,0x7A,0xFF,
+0x1D,0x9B,0x00,0xE4,0x00,0x00,0x29,0x0F,0x26,0x02,0x9F,0x01,0x43,0x39,0xBD,0x5F,
+0x18,0x00,0x0F,0x26,0x00,0x9C,0xC4,0xD7,0x78,0xFF,0x85,0x85,0x29,0x1C,0x21,0x88,
+0x0D,0x41,0x70,0x0D,0x61,0x6C,0x5D,0x44,0x00,0x0D,0x81,0x68,0x5C,0x85,0x00,0x0D,
+0xA1,0x64,0x88,0xA6,0x41,0xA4,0x55,0x0D,0x21,0x74,0x89,0x83,0x88,0xC1,0x88,0x6A,
+0xE7,0xFF,0xFE,0xAA,0xC2,0xE0,0x10,0x01,0x9D,0xA1,0xEB,0x57,0x01,0x56,0x9B,0x20,
+0x5D,0xAD,0x00,0x8B,0x19,0x9A,0xE0,0x89,0x61,0xE4,0x00,0x00,0x5B,0x4F,0x79,0x10,
+0x43,0x99,0x54,0x8F,0x6B,0x0F,0x7B,0x02,0x8E,0xFB,0x23,0x44,0x54,0x23,0x48,0x36,
+0xCF,0x9C,0x00,0x06,0x9F,0x9F,0xE4,0x00,0x00,0x13,0x4F,0x9C,0x08,0x9F,0x81,0x43,
+0x7C,0xDB,0x9F,0x21,0x8F,0x1B,0x5F,0x79,0x00,0xD5,0xBB,0xFE,0xA5,0x26,0xE1,0x34,
+0xC3,0x20,0x10,0x01,0xEB,0x39,0x0B,0xF5,0x43,0x18,0xCB,0x23,0x44,0x32,0x4F,0x37,
+0x0A,0x8F,0x19,0xE4,0x00,0x00,0x35,0x23,0x48,0x46,0xCF,0x37,0x00,0x03,0xCE,0xF7,
+0x00,0x06,0x8F,0x19,0xE4,0x00,0x00,0x13,0x8F,0x17,0x4E,0xF7,0x08,0x42,0xF8,0xB8,
+0xC2,0xE0,0xFF,0xE8,0xCB,0x00,0x07,0xFF,0x98,0x61,0x4A,0xF7,0xC0,0x5E,0xFF,0xF9,
+0x4A,0xF7,0x00,0x0E,0xEC,0x01,0xE4,0x00,0x00,0x0D,0x98,0x60,0x0D,0xA1,0x66,0x0D,
+0x81,0x6A,0x0D,0x61,0x6E,0x0D,0x41,0x72,0x0D,0x21,0x76,0x1C,0x21,0x78,0x85,0x29,
+0xFC,0x21,0xFF,0x78,0xED,0x41,0x00,0x80,0x0D,0x81,0x78,0x0D,0xA1,0x74,0x0D,0xC1,
+0x70,0x0D,0xE1,0x6C,0x0E,0x01,0x68,0x0E,0xC1,0x64,0xED,0x21,0x00,0x84,0x0D,0x61,
+0x7C,0xC1,0x40,0x10,0x01,0xFD,0x4A,0x0B,0xEA,0x11,0x6A,0x04,0x4E,0xEB,0x08,0x9E,
+0xE8,0xC6,0xF7,0x03,0xF8,0xFE,0xC1,0x00,0x88,0x5D,0xC4,0x00,0x5D,0xA5,0x00,0x8A,
+0x03,0x5C,0xA6,0x00,0x89,0xE1,0x41,0x65,0x5B,0x40,0x21,0xBD,0x88,0x6E,0x88,0x8D,
+0xFC,0xD6,0xFF,0x78,0xE7,0xFF,0xFC,0xA2,0xC3,0x40,0x10,0x01,0x89,0x81,0x5D,0x6B,
+0x00,0x13,0x2A,0x04,0x9A,0xE0,0xFF,0x5A,0x04,0x00,0xE4,0x00,0x00,0x29,0x4F,0x17,
+0x08,0x9E,0xE1,0x43,0x6C,0xC4,0x8F,0x1A,0x0B,0x18,0x03,0x0F,0x1B,0x01,0x5F,0x17,
+0x00,0xD7,0x38,0xFF,0x6D,0x43,0x4B,0x74,0x8D,0xAB,0x5F,0x5A,0x00,0x5D,0xAD,0x00,
+0x9A,0xE0,0x1F,0x2D,0x01,0x43,0x39,0xD5,0x5F,0x39,0x00,0xE4,0x00,0x00,0x33,0x4F,
+0x77,0x10,0xFF,0x96,0xFF,0x78,0x8F,0x7C,0x0F,0x7B,0x02,0x27,0x60,0x4A,0xD5,0xB8,
+0x03,0x19,0x9E,0xE1,0x5F,0x17,0x00,0xD7,0x38,0xFF,0x45,0x8B,0x1A,0x1F,0x36,0xD8,
+0x1F,0x76,0xD8,0x4E,0xF8,0x10,0x8E,0xF9,0x0F,0x37,0xA2,0x1E,0xF8,0x01,0x43,0x39,
+0xCB,0x4E,0xF7,0x10,0x8E,0xFB,0x0E,0xF7,0xA2,0x42,0xF7,0xBB,0x5F,0x37,0x15,0x4B,
+0x77,0xC8,0x27,0x60,0xBC,0x8F,0x1A,0x0B,0x6A,0x0B,0x41,0x78,0x5D,0x13,0x4A,0x0C,
+0x4D,0x6B,0x08,0x98,0x61,0x8D,0x8B,0x0B,0x0C,0x00,0x43,0x18,0xDB,0x43,0x77,0xDB,
+0x43,0x18,0xD0,0x8E,0xF9,0x42,0xFB,0xB8,0x8E,0xF8,0x0E,0xF0,0x01,0xE4,0x00,0x00,
+0x0D,0x98,0x60,0x88,0x2F,0x0E,0xC1,0x66,0x0E,0x01,0x6A,0x0D,0xE1,0x6E,0x0D,0xC1,
+0x72,0x0D,0xA1,0x76,0x0D,0x81,0x7A,0x0D,0x61,0x7E,0xED,0x41,0x00,0x82,0xED,0x21,
+0x00,0x86,0xFC,0x21,0x00,0x88,0x85,0x29,0x1C,0x21,0xB8,0x0D,0x41,0x40,0xC1,0x40,
+0x10,0x01,0x0D,0x61,0x3C,0x0D,0x81,0x38,0x0D,0xC1,0x30,0x0E,0x41,0x20,0x0E,0x61,
+0x1C,0x0E,0x81,0x18,0x0E,0xA1,0x14,0x0E,0xC1,0x10,0x0D,0x21,0x44,0x0D,0xA1,0x34,
+0x0D,0xE1,0x2C,0x0E,0x01,0x28,0x0E,0x21,0x24,0x5E,0x63,0x00,0x5E,0x44,0x00,0xC1,
+0xC0,0x10,0x01,0xF0,0x8A,0x0B,0xEA,0xFD,0xCE,0x07,0xDA,0x98,0xA0,0x88,0x6E,0x99,
+0x80,0x8A,0xCA,0xE4,0x00,0xA9,0x38,0xC1,0x40,0x10,0x01,0x89,0x6C,0xC2,0xA0,0x10,
+0x01,0x9A,0x81,0xFD,0x4A,0x0C,0x04,0xE4,0x00,0x01,0x19,0xCC,0x6B,0x00,0x30,0xEA,
+0xF5,0x09,0x4D,0x41,0xA3,0x54,0x56,0xF7,0x02,0x12,0x2D,0x04,0x12,0x0D,0x05,0x11,
+0xED,0x07,0x22,0xE1,0x0C,0x1C,0x61,0x04,0x88,0x91,0x88,0xB0,0x88,0xCF,0x98,0xE0,
+0xE7,0xFF,0xFA,0xDA,0x20,0x61,0x14,0x1C,0x61,0x06,0x88,0x91,0x88,0xB0,0x88,0xCF,
+0x98,0xE0,0xE7,0xFF,0xFC,0x5C,0x20,0x60,0xCC,0x0B,0x01,0x04,0xCF,0x18,0x00,0x07,
+0x0A,0xE1,0x06,0xCE,0xF7,0x00,0x03,0x8E,0xF8,0x9B,0x0A,0x42,0xF7,0xC0,0x0E,0xED,
+0x17,0xE4,0x00,0x00,0x43,0x8C,0x6A,0x88,0x91,0x1C,0x63,0x16,0x88,0xB0,0x88,0xCF,
+0x98,0xE0,0xE7,0xFF,0xFA,0x56,0x20,0x60,0x32,0x4E,0xF4,0x5C,0x45,0x8C,0xBD,0x5D,
+0x8C,0x00,0x88,0x6E,0xF0,0x96,0x0B,0xEA,0x98,0xA1,0x9D,0x61,0xE4,0x00,0xA8,0x06,
+0x5D,0x6B,0x00,0x12,0xEA,0x00,0xD6,0xEB,0xFB,0xAD,0x88,0x6C,0xE7,0xFF,0xF4,0x76,
+0x12,0xEA,0x00,0x22,0xE0,0x6C,0xC2,0xE0,0x10,0x01,0xEA,0xF7,0x0C,0x01,0x56,0xF7,
+0x40,0x22,0xE0,0x34,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x03,0xCA,0x86,0xE8,0xC2,0xE0,
+0x10,0x01,0x88,0x6E,0xF0,0x97,0x0B,0xEA,0x98,0xA1,0xE4,0x00,0xA7,0x8A,0xC2,0xE0,
+0x10,0x01,0x99,0x80,0xEA,0xF7,0x0C,0x01,0x89,0x6C,0x56,0xF7,0x80,0x99,0xA1,0x22,
+0xE0,0xFC,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x03,0xDE,0x86,0xE8,0xE4,0x00,0x00,0x7F,
+0xCE,0xEB,0x00,0x30,0x40,0x6A,0xBC,0x8A,0xE3,0x88,0x83,0x10,0xB7,0x04,0x1C,0x63,
+0x18,0x9C,0x8C,0x10,0xD7,0x05,0x10,0xF7,0x07,0xE7,0xFF,0xEF,0xD8,0x20,0x60,0x32,
+0x4E,0xED,0x5C,0x45,0x8C,0xBD,0x5D,0x8C,0x00,0x9D,0x61,0x5D,0x6B,0x00,0x12,0xEA,
+0x00,0xD6,0xEB,0xFE,0x7D,0x88,0x6C,0xE7,0xFF,0xF3,0x60,0x22,0x61,0x5C,0x22,0x40,
+0xFE,0xE4,0x00,0x00,0xA3,0xCD,0x6C,0x00,0x30,0x8D,0x6A,0x0A,0xEB,0x16,0x0E,0xE1,
+0x08,0x0A,0xEB,0x18,0x1C,0x61,0x08,0x0E,0xE1,0x0C,0x1C,0x81,0x0C,0xEE,0xED,0x03,
+0xFE,0x0C,0xAB,0x0E,0x88,0xCE,0x86,0xE8,0x0E,0xE1,0x0A,0x9D,0x81,0x0E,0xEB,0x17,
+0x5D,0x8C,0x00,0x0E,0xE1,0x0E,0x0E,0xEB,0x19,0xE4,0x00,0x00,0x25,0xC1,0xC0,0x10,
+0x01,0x99,0x80,0xC1,0xA0,0x10,0x01,0xFD,0xCE,0x01,0x3E,0x12,0xEA,0x00,0xD6,0xEC,
+0xFD,0xBD,0xC2,0xE0,0x10,0x01,0x13,0x6A,0x00,0xEB,0x97,0x09,0x4D,0x9B,0x20,0xC2,
+0xE0,0x10,0x01,0x57,0x9C,0x01,0xFE,0xF7,0x0C,0x1C,0xCB,0xA0,0x07,0xFF,0xE4,0x00,
+0x00,0x89,0x0B,0x57,0x01,0x13,0xD7,0xEF,0x5F,0x1A,0x06,0x47,0x18,0xC7,0x4F,0x18,
+0xFA,0x47,0x1A,0xC4,0x5F,0x58,0x06,0xC3,0x40,0xFF,0xE8,0x20,0x00,0x1D,0xFF,0x00,
+0x07,0xFF,0x0F,0x17,0x01,0x5F,0x58,0x06,0x23,0x80,0x48,0xCF,0x1A,0x03,0xFF,0x4F,
+0x5E,0x50,0x43,0x18,0xE8,0x8F,0x1A,0x0F,0x17,0x01,0x9F,0x21,0x1E,0xF7,0x30,0x5F,
+0x39,0x00,0xD7,0x3B,0xFE,0x06,0x0E,0xC1,0x12,0x0E,0xA1,0x16,0x0E,0x81,0x1A,0x0E,
+0x61,0x1E,0x0E,0x41,0x22,0x0E,0x21,0x26,0x0E,0x01,0x2A,0x0D,0xE1,0x2E,0x0D,0xC1,
+0x32,0x0D,0xA1,0x36,0x0D,0x81,0x3A,0x0D,0x61,0x3E,0x0D,0x41,0x42,0x0D,0x21,0x46,
+0x1C,0x21,0x48,0x85,0x29,0x1C,0x21,0xB0,0x0D,0x61,0x44,0x0D,0xC1,0x38,0x0D,0xE1,
+0x34,0x0E,0x61,0x24,0x0E,0xC1,0x18,0x0D,0x21,0x4C,0x0D,0x41,0x48,0x0D,0x81,0x40,
+0x0D,0xA1,0x3C,0x0E,0x01,0x30,0x0E,0x21,0x2C,0x0E,0x41,0x28,0x0E,0x81,0x20,0x0E,
+0xA1,0x1C,0x1E,0xC1,0x50,0xC2,0xE0,0x10,0x01,0x5C,0xC6,0x00,0x0C,0x36,0xC4,0x0C,
+0xD6,0xC0,0xF3,0xD7,0x0B,0xEE,0x8B,0x03,0x4F,0xBE,0x10,0x5E,0x64,0x00,0x1E,0xFD,
+0x0A,0x89,0xC5,0xC6,0xF7,0x07,0xF8,0x5D,0xE7,0x00,0x40,0x21,0xBD,0x89,0x61,0x20,
+0xA8,0x3E,0xC2,0xE0,0x10,0x01,0xEA,0xB7,0x04,0x38,0xE4,0x00,0x00,0x0F,0x0A,0xA3,
+0x1C,0xC3,0x40,0x10,0x01,0x8A,0xEB,0xFF,0x5A,0x08,0xE8,0xCB,0x60,0x20,0x00,0x9B,
+0x80,0xE4,0x00,0x00,0x7D,0x21,0xC8,0x4A,0x41,0x1A,0xEC,0x0D,0x5A,0x02,0x0D,0x08,
+0x02,0x8D,0x0A,0xE4,0x00,0x00,0x29,0x22,0x60,0x2A,0x0D,0x1A,0x02,0xE4,0x00,0x00,
+0x15,0x41,0x1A,0xEC,0x0D,0x08,0x02,0x0D,0x17,0x00,0x9F,0x81,0x0D,0xB7,0x02,0x5F,
+0x9C,0x00,0x5D,0xBB,0x15,0x9E,0xE4,0x4B,0x6D,0xD8,0x9F,0x44,0x5F,0x7B,0x06,0xD7,
+0x9E,0xFE,0x36,0x45,0xBB,0xDF,0x99,0x40,0x4D,0xAD,0xFA,0xC2,0xE0,0x10,0x01,0xC2,
+0x40,0x10,0x01,0xFE,0x97,0x0C,0x04,0x45,0xAD,0xDC,0x8A,0x2A,0x99,0x80,0x8A,0x14,
+0xFE,0x52,0x0B,0xEA,0xE4,0x00,0x06,0x43,0x21,0xC8,0xBA,0xC2,0xE0,0x10,0x01,0x13,
+0xB4,0x00,0xFF,0x77,0x0C,0x09,0x9B,0x80,0xE4,0x00,0x00,0x35,0x13,0xDB,0xFF,0xD7,
+0xCA,0x00,0x5D,0x13,0xDB,0x00,0xD5,0x5E,0x13,0xA1,0x9F,0x81,0x1F,0x7B,0x30,0x5F,
+0x9C,0x00,0xD7,0x9D,0xFF,0x56,0x21,0x41,0x52,0x0F,0x4B,0x02,0xD6,0xBA,0x12,0xF4,
+0x0F,0x6B,0x06,0xD7,0x5B,0x00,0x7C,0xD7,0x5B,0x12,0x9E,0x0F,0x6B,0x0A,0xD7,0x5B,
+0x12,0x60,0x08,0xF8,0x20,0x09,0x18,0x22,0x98,0x60,0x0F,0x16,0xB4,0x88,0x8B,0x88,
+0xAD,0x88,0xD5,0xE7,0xFF,0xE8,0x62,0x0F,0x16,0xB6,0xD0,0x60,0x11,0x82,0x13,0x54,
+0x00,0x9B,0x62,0x8F,0x4C,0x99,0x41,0xCF,0x5A,0x00,0x30,0x8F,0x54,0x18,0x1A,0x04,
+0x18,0x1A,0x06,0x1B,0x7A,0x05,0xE4,0x00,0x04,0x41,0x21,0x45,0x86,0x0F,0x4B,0x06,
+0xD6,0xBA,0x10,0x54,0x0F,0x6B,0x02,0xD7,0x7A,0x10,0x1C,0x0F,0x6B,0x0A,0xD7,0x5B,
+0x00,0x7C,0xD7,0x5B,0x0F,0xC6,0x0F,0x6B,0x0E,0xD7,0x5B,0x0F,0x88,0x08,0xF8,0x20,
+0x09,0x18,0x22,0x98,0x61,0x0F,0x16,0xB4,0x88,0x8B,0x88,0xAD,0x88,0xD5,0xE7,0xFF,
+0xE7,0xAC,0x0F,0x16,0xB6,0xD0,0x60,0x0E,0xAA,0x9B,0x61,0x13,0x54,0x00,0x5D,0xE0,
+0x21,0x8F,0x4C,0x99,0x42,0xCF,0x5A,0x00,0x30,0x8F,0x54,0x1B,0x7A,0x06,0x18,0x1A,
+0x04,0x4B,0x63,0x13,0x1B,0x7A,0x05,0xE4,0x00,0x03,0x7F,0xD1,0x41,0x06,0x41,0x1F,
+0x7A,0xFE,0xD7,0x6A,0x06,0x08,0x4F,0x4A,0x10,0x8F,0x4B,0x0F,0x5A,0x02,0xD6,0xBA,
+0x0C,0xE4,0x1F,0x6A,0xFF,0x4F,0x7B,0x10,0x8F,0x6B,0x0F,0x7B,0x02,0xD7,0x5B,0x01,
+0x34,0xD7,0x5B,0x0C,0x4E,0x1F,0x8A,0xFE,0x4F,0x9C,0x10,0x8F,0x8B,0x0F,0x9C,0x02,
+0xD7,0x5C,0x0B,0xD0,0x1F,0xAA,0x01,0x4F,0xBD,0x10,0x8F,0xAB,0x0F,0xBD,0x02,0xD7,
+0xBC,0x0B,0x58,0x1F,0x8A,0x01,0x4F,0x9C,0x10,0x8F,0x8B,0x0F,0x9C,0x02,0xD7,0x5C,
+0x00,0xDC,0xD7,0x5C,0x0A,0xC6,0x1F,0x8A,0x02,0x4F,0x9C,0x10,0x8F,0x8B,0x0F,0x9C,
+0x02,0xD7,0x5C,0x0A,0x48,0xD7,0x9B,0x0A,0x2C,0x08,0xF8,0x20,0x09,0x18,0x22,0x88,
+0x6A,0x0F,0x16,0xB4,0x88,0x8B,0x88,0xAD,0x88,0xD5,0xE7,0xFF,0xE6,0x54,0x0F,0x16,
+0xB6,0xD0,0x60,0x09,0x4A,0x13,0x74,0x00,0x1F,0x8A,0xFF,0x8F,0x6C,0x5F,0x9C,0x00,
+0x21,0xE4,0x26,0x1F,0x8A,0xFE,0x5F,0x9C,0x00,0xCF,0x7B,0x00,0x30,0x43,0x5B,0x84,
+0x1B,0x9A,0x04,0x19,0x5A,0x06,0x1F,0x4A,0x01,0x5F,0x5A,0x00,0x21,0xE4,0x26,0x1F,
+0x4A,0x02,0x5F,0x5A,0x00,0x8F,0x74,0x9D,0x41,0x1B,0x5B,0x05,0x5D,0x4A,0x00,0xE4,
+0x00,0x01,0xEF,0x4F,0x6A,0x10,0x1F,0x9A,0xFE,0x8F,0x6B,0xD5,0x5C,0x04,0x06,0x0F,
+0x7B,0x02,0xD6,0xBB,0x06,0xC4,0x1F,0x9A,0xFF,0x4F,0x9C,0x10,0x8F,0x8B,0x0F,0x9C,
+0x02,0xD7,0x9B,0x06,0x4C,0x1F,0x9A,0xFD,0x4F,0x9C,0x10,0x8F,0x8B,0x0F,0x9C,0x02,
+0xD7,0x7C,0x00,0xB4,0xD7,0x7C,0x05,0xB6,0x9F,0x5C,0x4F,0x5A,0x10,0x8F,0x4B,0x0F,
+0x5A,0x02,0xD7,0x7A,0x05,0x40,0x08,0xF8,0x20,0x09,0x18,0x22,0x88,0x6A,0x0F,0x16,
+0xB4,0x88,0x8B,0x88,0xAD,0x88,0xD5,0xE7,0xFF,0xE5,0x1A,0x0F,0x16,0xB6,0xD0,0x60,
+0x04,0x62,0x13,0x54,0x00,0x1F,0x6A,0xFF,0x8F,0x4C,0x5F,0x7B,0x00,0x21,0xE4,0x26,
+0x1F,0x6A,0xFE,0x5F,0x7B,0x00,0xCF,0x5A,0x00,0x30,0x8F,0x50,0x19,0x5A,0x06,0x1B,
+0x7A,0x04,0x9D,0x41,0x5D,0x4A,0x00,0xE4,0x00,0x00,0xB9,0x0F,0x5B,0x02,0xD6,0xBA,
+0x02,0xE4,0x1F,0x6A,0xFF,0x4F,0x7B,0x10,0x8F,0x6B,0x0F,0x7B,0x02,0xD7,0x5B,0x00,
+0xBC,0xD7,0x5B,0x02,0x4E,0x1F,0x6A,0xFE,0x4F,0x7B,0x10,0x8F,0x6B,0x0F,0x7B,0x02,
+0xD7,0x5B,0x01,0xD0,0x08,0xF8,0x20,0x09,0x18,0x22,0x88,0x6A,0x0F,0x16,0xB4,0x88,
+0x8B,0x88,0xAD,0x88,0xD5,0xE7,0xFF,0xE4,0x3E,0x0F,0x16,0xB6,0x20,0x60,0x78,0x13,
+0x54,0x00,0x1F,0x6A,0xFE,0x8F,0x4C,0xCF,0x5A,0x00,0x30,0x8F,0x54,0x1B,0x7A,0x04,
+0x19,0x5A,0x06,0x19,0x5A,0x05,0xE4,0x00,0x00,0x21,0x9D,0x41,0x5D,0x4A,0x00,0x13,
+0x52,0x04,0xD7,0x4A,0xEB,0x35,0x13,0x52,0x04,0xD7,0x4A,0x03,0xE1,0x13,0x74,0x00,
+0x43,0x5B,0x64,0xCF,0xBA,0x00,0x30,0x8F,0xB4,0x13,0x9D,0x05,0xD5,0x5C,0x00,0x95,
+0x1D,0x5C,0x01,0x21,0xE0,0x20,0x11,0x5D,0x06,0x9D,0x42,0x5D,0x4A,0x00,0xCF,0x5A,
+0x00,0x30,0x8F,0x50,0x1A,0x7A,0x07,0x0D,0xDA,0x08,0x1F,0x4C,0x01,0x5F,0x5A,0x00,
+0x8A,0x3A,0x21,0xC9,0x06,0x8F,0x7A,0x1F,0x5B,0xFF,0xCF,0x7B,0x00,0x30,0xCF,0x5A,
+0x00,0x30,0x8F,0x50,0x42,0x3B,0x84,0x1C,0x9A,0x04,0x1C,0x71,0x04,0x0F,0x16,0xB4,
+0x0F,0x56,0xBC,0x50,0xA0,0x30,0xE4,0x00,0x48,0x8E,0x0F,0x56,0xBE,0x9B,0x61,0x13,
+0x5A,0x07,0x43,0x5B,0xD5,0x9D,0x82,0x1B,0x51,0x07,0x5F,0x4C,0x00,0x0F,0x16,0xB6,
+0x4E,0x3A,0x09,0x89,0x9A,0x13,0x52,0x04,0xD7,0x4A,0x00,0x69,0x0F,0x56,0xC2,0x8F,
+0x51,0xD3,0x41,0xFB,0x70,0x13,0x14,0x00,0x8D,0x98,0x88,0x71,0x19,0x94,0x00,0x0C,
+0x36,0xC6,0x0E,0xC1,0x1A,0x0E,0xA1,0x1E,0x0E,0x81,0x22,0x0E,0x61,0x26,0x0E,0x41,
+0x2A,0x0E,0x21,0x2E,0x0E,0x01,0x32,0x0D,0xE1,0x36,0x0D,0xC1,0x3A,0x0D,0xA1,0x3E,
+0x0D,0x81,0x42,0x0D,0x61,0x46,0x0D,0x41,0x4A,0x0D,0x21,0x4E,0x1C,0x21,0x50,0x85,
+0x29,0xC2,0xE0,0x10,0x01,0xEC,0x77,0x04,0x37,0x85,0x29,0xC2,0xE0,0x10,0x01,0xEC,
+0x77,0x04,0x39,0x85,0x29,0xC2,0xE0,0x10,0x01,0xEC,0x77,0x04,0x3B,0x85,0x29,0xC2,
+0xE0,0x10,0x01,0xEC,0x77,0x04,0x3D,0x85,0x29,0xC2,0xE0,0x10,0x01,0xEC,0x77,0x04,
+0x3F,0x85,0x29,0xC2,0xE0,0x10,0x01,0xF8,0x77,0x04,0x40,0x85,0x29,0xC2,0xE0,0x10,
+0x01,0x1C,0x21,0xD0,0x0D,0x41,0x28,0x0D,0x61,0x24,0x0D,0xA1,0x1C,0x0D,0xE1,0x14,
+0x0E,0x21,0x0C,0x0E,0x41,0x08,0x0E,0x61,0x04,0x0E,0xC1,0x00,0x0D,0x21,0x2C,0x0D,
+0x81,0x20,0x0D,0xC1,0x18,0x0E,0x01,0x10,0xF3,0x37,0x0B,0xEB,0x1E,0xF9,0x07,0xC6,
+0xF7,0x01,0xF8,0x1E,0xC1,0x30,0x8A,0x21,0xC1,0xE0,0x10,0x01,0x40,0x21,0xBD,0xFD,
+0xEF,0x0A,0x06,0xC2,0x60,0x10,0x01,0x0A,0xEF,0x01,0x89,0xA3,0x8A,0x44,0x89,0x61,
+0x56,0xF7,0x10,0xFD,0x53,0x04,0x34,0x22,0xE0,0x20,0x9A,0xE1,0x1A,0xEA,0x00,0xC2,
+0xE0,0x10,0x01,0xC1,0xC0,0x10,0x01,0xF3,0x77,0x09,0x73,0xFD,0xCE,0x0C,0x04,0xC1,
+0x80,0x10,0x01,0x18,0x0E,0x00,0xFD,0x8C,0x0C,0x0C,0x9B,0x00,0x8A,0xEC,0x9B,0x5F,
+0xE4,0x00,0x00,0x2B,0x0C,0x17,0x00,0x1B,0x57,0xFE,0x1B,0x57,0xFF,0x9F,0x01,0x1E,
+0xF7,0x30,0x5F,0x18,0x00,0xD7,0x1B,0xFF,0x7E,0xC2,0xE0,0x10,0x01,0x98,0x80,0xF0,
+0x77,0x0B,0xEE,0x40,0x79,0x1B,0xE4,0x00,0x99,0x2A,0x98,0x80,0x98,0xA1,0x98,0xC0,
+0x10,0xEA,0x00,0x88,0x6D,0xE7,0xFF,0xF5,0x80,0x98,0x81,0x18,0x6B,0x00,0x5E,0x03,
+0x00,0x98,0xA1,0x88,0x6D,0x98,0xC0,0x10,0xEA,0x00,0xE7,0xFF,0xF5,0x56,0x18,0x6B,
+0x01,0x0B,0x0F,0x01,0x5E,0xE3,0x00,0x57,0x18,0x10,0x23,0x01,0xC8,0x26,0x04,0x33,
+0x26,0xE4,0x27,0x43,0x10,0xBC,0x23,0x09,0x9A,0x18,0x0A,0x00,0xC3,0x00,0x10,0x01,
+0xF3,0x18,0x0A,0x50,0x23,0x04,0x32,0x22,0x04,0x26,0x22,0xE4,0x1A,0x18,0x6A,0x00,
+0xC2,0xE0,0x10,0x01,0x18,0x0E,0x00,0xF3,0x37,0x09,0x73,0x9B,0x1F,0x9A,0xE0,0xE4,
+0x00,0x00,0x2B,0x0C,0x0C,0x00,0x1B,0x0C,0xFE,0x1B,0x0C,0xFF,0x9E,0xE1,0x1D,0x8C,
+0x30,0x5E,0xF7,0x00,0xD6,0xF9,0xFF,0x7E,0x98,0x80,0x98,0xA1,0x98,0xC0,0x10,0xEA,
+0x00,0x88,0x6D,0xE7,0xFF,0xF4,0x84,0x98,0x81,0x18,0x6B,0x00,0x98,0xA1,0x88,0x6D,
+0x98,0xC0,0x10,0xEA,0x00,0xE7,0xFF,0xF4,0x60,0x18,0x6B,0x01,0x0A,0xEF,0x01,0x56,
+0xF7,0x04,0xD2,0xE0,0x04,0xCA,0x13,0x0E,0x00,0xD3,0x01,0x04,0x91,0xC2,0xE0,0x10,
+0x01,0x98,0x60,0xF1,0xF7,0x0B,0xEE,0x1D,0x98,0xFF,0x8A,0xE3,0xC3,0x00,0x10,0x01,
+0x9A,0x01,0xFF,0x18,0x08,0xE8,0xE4,0x00,0x00,0xDB,0xCF,0x37,0x00,0x30,0x8F,0x2E,
+0x11,0x19,0x07,0x13,0xB9,0x06,0x43,0x6F,0x43,0x5F,0x7B,0x00,0x43,0x9D,0xDC,0x4F,
+0x3C,0x10,0x8F,0x38,0x0A,0x72,0x00,0x0F,0x59,0x02,0x1F,0x37,0x01,0xCF,0xD9,0x00,
+0x30,0x8F,0xCE,0x10,0x9E,0x07,0xD4,0x88,0x01,0xC6,0x9F,0xA2,0x13,0xDE,0x06,0xD7,
+0xBE,0x01,0x7E,0x8F,0x7D,0x4F,0x7B,0x10,0x8F,0x78,0x0F,0x7B,0x02,0xD7,0x7A,0x01,
+0x0C,0x9F,0x81,0x43,0x5A,0x98,0x4F,0x9C,0x10,0x8F,0x98,0x0F,0x9C,0x02,0x43,0x7B,
+0xE5,0xD7,0x5B,0x00,0x68,0x4F,0x30,0xCC,0x44,0x63,0xCD,0x5C,0x63,0x00,0x9E,0xE1,
+0x5E,0xF7,0x00,0xD5,0x97,0xFC,0xBC,0xE7,0xFF,0xE4,0xA0,0xC2,0xE0,0x10,0x01,0xF2,
+0xF7,0x0B,0xEB,0x26,0xE4,0x89,0x13,0x0B,0x00,0x27,0x04,0x73,0x12,0xEB,0x01,0x26,
+0xE4,0x5B,0x5F,0x17,0x17,0x88,0x6D,0x48,0xD7,0xC0,0x98,0x80,0x98,0xA2,0x10,0xEA,
+0x00,0xE7,0xFF,0xF2,0xC8,0x88,0x31,0x0E,0xC1,0x02,0x0E,0x61,0x06,0x0E,0x41,0x0A,
+0x0E,0x21,0x0E,0x0E,0x01,0x12,0x0D,0xE1,0x16,0x0D,0xC1,0x1A,0x0D,0xA1,0x1E,0x0D,
+0x81,0x22,0x0D,0x61,0x26,0x0D,0x41,0x2A,0x0D,0x21,0x2E,0x1C,0x21,0x30,0x85,0x29,
+0x1C,0x21,0x90,0x5C,0x63,0x00,0x0D,0x41,0x68,0x0D,0x61,0x64,0x0D,0x81,0x60,0x0D,
+0xA1,0x5C,0x0D,0xC1,0x58,0x0D,0xE1,0x54,0x0E,0x81,0x40,0x5D,0xE8,0x00,0x5C,0x84,
+0x00,0x5D,0xE1,0x3B,0xC2,0xE0,0x10,0x01,0xC1,0xA0,0x10,0x01,0xC1,0x80,0x10,0x01,
+0x0D,0x21,0x6C,0x0E,0x01,0x50,0x0E,0x21,0x4C,0x0E,0x41,0x48,0x0E,0x61,0x44,0x0E,
+0xA1,0x3C,0x0E,0xC1,0x38,0x0C,0x61,0x0C,0x0C,0x81,0x10,0x0C,0xC1,0x08,0x0C,0xE1,
+0x14,0x49,0xEF,0x52,0x99,0xC1,0x99,0x40,0x51,0x60,0xFF,0xFE,0x97,0x0C,0x04,0xFD,
+0xAD,0x0B,0xEA,0xFD,0x8C,0x04,0x36,0xE4,0x00,0x0A,0x13,0xE4,0x00,0x96,0x88,0xCF,
+0x15,0x00,0x30,0x8F,0x14,0x0B,0x38,0x18,0x0B,0x58,0x16,0x0F,0x21,0x30,0x0F,0x41,
+0x28,0x0F,0x38,0x0E,0x0C,0x01,0x2C,0x0F,0x21,0x20,0x0C,0x01,0x34,0x0C,0x01,0x24,
+0x12,0x58,0x04,0x12,0x38,0x05,0x12,0x78,0x07,0x0F,0x38,0x0A,0xD3,0x20,0x2D,0x1A,
+0x23,0x25,0x3E,0x9B,0x0A,0x09,0x0D,0x0B,0x13,0xD4,0x00,0x41,0x0F,0x43,0x9A,0x01,
+0x41,0x08,0xC0,0x8B,0x0E,0xE4,0x00,0x00,0x65,0xCF,0x38,0x00,0x30,0x8F,0x34,0x13,
+0xB9,0x07,0x43,0xB0,0xED,0xD6,0x7D,0x00,0xEE,0x0F,0xB9,0x0A,0x23,0xA4,0x5A,0x0B,
+0xB9,0x16,0x43,0xBA,0xED,0x4F,0x3D,0xFA,0x47,0xB9,0xEE,0x43,0x3D,0xCD,0xD5,0x19,
+0x26,0x5C,0x9F,0x01,0x5F,0x18,0x00,0xD7,0xD8,0xFE,0x95,0xE4,0x00,0x0A,0x25,0x9A,
+0x00,0xD3,0x22,0x0B,0x7E,0x13,0xB4,0x00,0x8B,0x2E,0x9B,0xC1,0xE4,0x00,0x00,0x63,
+0xCF,0x59,0x00,0x30,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x0C,0x04,0x8F,0x57,0x11,0x1A,
+0x07,0x41,0x1E,0x45,0xD6,0x68,0x00,0xA6,0x0D,0x1A,0x0A,0x21,0x08,0x36,0x11,0x18,
+0x06,0x13,0x5A,0x06,0xD5,0x1A,0x24,0x5A,0x9F,0x21,0x5F,0x39,0x00,0xD7,0xB9,0xFE,
+0x9D,0xE4,0x00,0x09,0xFB,0xEB,0x18,0x0C,0x01,0x57,0x18,0x80,0xD3,0x00,0x05,0x02,
+0xC3,0x00,0x10,0x01,0x1C,0x61,0x1C,0xEF,0x18,0x03,0xB6,0x08,0x81,0x19,0x88,0xB2,
+0x88,0xD1,0x88,0xF0,0x87,0x08,0xD0,0x60,0x07,0xEA,0xC2,0xF8,0x00,0x21,0xFE,0xF7,
+0xB6,0xFC,0x0C,0x77,0x02,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x01,0x3E,0x98,0xA0,0x10,
+0x97,0x24,0xE4,0x00,0x95,0x5A,0x13,0x0D,0x04,0x10,0x6D,0x01,0x98,0x81,0x40,0x63,
+0xC3,0xE4,0x00,0x92,0xF4,0x0E,0xE1,0x16,0x9E,0xC3,0x4E,0xD6,0x18,0x8E,0xD7,0x0B,
+0x16,0x04,0x0C,0x96,0x0A,0x40,0x84,0xC5,0x5C,0x9F,0xF9,0x0C,0x61,0x1E,0x48,0x84,
+0x00,0x88,0xB2,0x88,0xD1,0x88,0xF0,0xC3,0x00,0x10,0x01,0xEF,0x18,0x03,0xFA,0x87,
+0x08,0xC2,0xF8,0x00,0x21,0xFE,0xF7,0xB6,0xFC,0x0C,0x77,0x02,0xC2,0xE0,0x10,0x01,
+0xFE,0xF7,0x01,0x3E,0x98,0xA1,0x10,0x97,0x24,0xE4,0x00,0x94,0xAC,0x13,0x0D,0x04,
+0x10,0x6D,0x01,0x98,0x81,0x40,0x63,0xC3,0xE4,0x00,0x92,0x46,0x1C,0x61,0x1A,0x1C,
+0x81,0x24,0x88,0xB2,0x88,0xD1,0x88,0xF0,0xE7,0xFF,0xDC,0x5A,0x20,0x61,0x9C,0x0B,
+0x01,0x18,0x0F,0x01,0x2C,0x0B,0x01,0x1A,0x0F,0x01,0x34,0x0E,0xE1,0x0E,0x22,0xE0,
+0x9C,0x0E,0xE1,0x12,0x22,0xE0,0x84,0xC2,0xF8,0x00,0x21,0xFE,0xF7,0xB7,0x00,0xC3,
+0x00,0x10,0x01,0x1C,0x61,0x2C,0xEF,0x18,0x03,0xFE,0x1C,0x81,0x34,0x0C,0xA1,0x26,
+0x0C,0xD7,0x02,0x87,0x08,0x0F,0x21,0x36,0x5F,0x3F,0xF9,0xCB,0x00,0x07,0xFF,0x4B,
+0x39,0x00,0xCF,0x53,0xFC,0x00,0xC3,0x20,0xFF,0xE8,0xFF,0x5A,0x04,0x00,0x4B,0x39,
+0xC0,0x9A,0x00,0xCF,0x39,0x03,0xFF,0x43,0x19,0xC0,0x8F,0x1A,0x0F,0x01,0x34,0xE4,
+0x00,0x00,0x23,0x0C,0x01,0x2C,0x0C,0x01,0x34,0x0C,0x01,0x24,0xE4,0x00,0x06,0x1F,
+0xC3,0x00,0x10,0x01,0x0F,0xA1,0x26,0xEA,0x38,0x0A,0x07,0x0E,0x41,0x22,0x57,0x11,
+0x02,0x23,0x00,0xE8,0x0E,0xE1,0x0A,0x0B,0x17,0x02,0xD6,0x58,0x00,0x44,0xD7,0xB8,
+0x01,0x38,0x53,0x00,0x64,0xD7,0xB2,0x00,0x5C,0x43,0x12,0xC0,0xE4,0x00,0x00,0x0F,
+0x43,0x1D,0xC0,0x0E,0xE1,0x0A,0x0B,0x37,0x05,0x43,0x18,0xCB,0x0B,0x2C,0x09,0x8F,
+0x19,0xE4,0x00,0x00,0x0F,0x0B,0x0C,0x09,0x0F,0x0C,0x07,0x0F,0x01,0x32,0x0F,0xC1,
+0x36,0x08,0x6C,0x07,0x42,0xD8,0xF5,0x8B,0x52,0x5E,0xD6,0x06,0x8B,0x3D,0x4D,0x16,
+0xFA,0x4C,0x63,0x08,0x46,0xC8,0xB6,0x41,0x16,0x45,0xD4,0x68,0x19,0x10,0xD6,0x5D,
+0x00,0x90,0x11,0x0C,0x0A,0x41,0x08,0xEB,0xD5,0x12,0x18,0xA0,0xE4,0x00,0x05,0xE7,
+0xD7,0xB2,0x18,0x60,0x11,0x0C,0x0A,0x41,0x08,0x93,0xD5,0x1D,0x18,0x10,0xE4,0x00,
+0x05,0xC3,0x89,0x16,0xD7,0xB2,0x00,0xD0,0x9B,0x21,0x43,0x99,0x9D,0x8B,0x38,0x89,
+0x11,0x8B,0x1E,0x5E,0x7C,0x00,0x8B,0xD9,0x8A,0x36,0x8B,0x5D,0x8B,0x32,0x40,0xBA,
+0xCC,0x40,0x68,0x8D,0x42,0x5A,0xCD,0x5C,0x7F,0xF9,0x4F,0xB2,0xFA,0x4A,0xDA,0xC8,
+0x46,0x5D,0x96,0x48,0x99,0xD0,0x42,0x52,0xED,0x9E,0x41,0x42,0x52,0x28,0x4C,0xA3,
+0xFA,0xCE,0x52,0xFF,0xF6,0x44,0x65,0x1E,0x9E,0x4A,0x40,0xA3,0x2D,0x26,0x44,0x17,
+0x9A,0x42,0x5F,0xB2,0x00,0x52,0x40,0x14,0x43,0xA5,0xE8,0x5F,0xBD,0x06,0x5F,0xA2,
+0x79,0x4B,0xBD,0x90,0x42,0x44,0xB4,0x26,0x41,0x10,0x8E,0x28,0x4C,0x71,0xFA,0x46,
+0x23,0x8E,0x42,0x31,0x1D,0x4E,0x31,0x0A,0x5C,0x71,0x06,0x40,0xA3,0xED,0x8C,0x7D,
+0x40,0x85,0x23,0x42,0xC3,0xB3,0x8E,0xC4,0x42,0x56,0x90,0x42,0x32,0x8D,0x5E,0x52,
+0x06,0x5E,0x31,0x06,0x4E,0xD1,0xFA,0x46,0x36,0x8E,0x42,0x31,0xB5,0x41,0x08,0x8B,
+0x42,0x3D,0x8D,0x42,0x52,0x8B,0x8D,0x12,0x41,0x08,0xE8,0xCF,0xB5,0x00,0x30,0x8F,
+0xB4,0x0D,0x1D,0x17,0xC3,0xA0,0x10,0x01,0xF3,0xBD,0x04,0x40,0x41,0x19,0xEB,0xD7,
+0x48,0x01,0x34,0x4D,0x19,0x08,0xD5,0x1A,0x01,0x0C,0x4D,0x1D,0x08,0xCE,0x3A,0xFF,
+0xFE,0x41,0x08,0xCB,0x9F,0xBE,0x8D,0x11,0x43,0xBD,0xD3,0x43,0x28,0xCB,0x43,0x39,
+0xE8,0xE4,0x00,0x00,0x0D,0x9B,0x20,0x22,0x60,0x26,0x8B,0x99,0x8B,0x3A,0x8B,0x5C,
+0x43,0xB8,0xF4,0x42,0x39,0xD4,0x4F,0x9D,0xFA,0x47,0xBC,0xEE,0x43,0xBD,0xE5,0x4F,
+0xBD,0x0A,0x5D,0x1D,0x06,0x26,0x21,0x54,0x43,0x98,0x45,0xFF,0x9C,0x01,0x2B,0xC3,
+0x80,0x4A,0xCE,0x20,0x01,0x1D,0x43,0xD8,0xF5,0x4F,0x9E,0xFA,0x47,0xDC,0xF6,0x43,
+0x9E,0xE5,0x4F,0x9C,0x0A,0x9F,0x81,0x5F,0x9C,0x06,0x43,0xC8,0xE5,0x8D,0x1C,0x43,
+0x48,0xD3,0x43,0x3E,0xCB,0x8F,0x3A,0x43,0x39,0x88,0x43,0xB9,0xED,0x5F,0x39,0x06,
+0x5F,0xBD,0x06,0x4F,0x5D,0xFA,0x47,0xBA,0xEE,0x43,0xBD,0xD5,0x43,0x18,0xEB,0x43,
+0xBC,0xED,0x43,0x39,0xEB,0x8F,0x19,0x43,0x18,0xE0,0xCF,0x35,0x00,0x30,0x8F,0x34,
+0x0F,0x19,0x19,0xE4,0x00,0x01,0x91,0xD7,0xB2,0x00,0xB0,0x9B,0x01,0x8B,0x32,0x43,
+0x98,0x9D,0x8B,0x5D,0x5E,0x7C,0x00,0x8B,0x1E,0xE4,0x00,0x00,0x11,0x8B,0x3D,0x8B,
+0x52,0xC3,0xC0,0x10,0x01,0xF3,0xDE,0x04,0x40,0x40,0x79,0xF3,0xD7,0x43,0x01,0x34,
+0x4C,0x79,0x08,0xD4,0x7A,0x01,0x0C,0x4C,0x7E,0x08,0xCC,0x9A,0xFF,0xFE,0x40,0x63,
+0xCB,0x9F,0xDE,0x8C,0x64,0x43,0xDE,0xD3,0x43,0x23,0xCB,0x43,0x39,0xF0,0xE4,0x00,
+0x00,0x0D,0x9B,0x20,0x22,0x60,0x26,0x8B,0x99,0x8B,0x3A,0x8B,0x5C,0x43,0x99,0xD4,
+0x27,0x81,0x50,0xC3,0x00,0x7F,0xEC,0x20,0x00,0x49,0xCB,0xC0,0x04,0x00,0x43,0xDE,
+0xC5,0xC3,0xC0,0x25,0x68,0xE4,0x00,0x00,0x11,0xC3,0x00,0xA5,0x68,0x4B,0xC1,0x01,
+0x23,0xC0,0xD0,0xCF,0x5A,0x04,0x50,0x53,0xC0,0x50,0xCF,0x39,0x03,0xB0,0x8F,0x3A,
+0x43,0x39,0xE0,0xFF,0x99,0xFC,0x00,0x5F,0x39,0x06,0x5F,0x9C,0x06,0x4F,0x5C,0xFA,
+0x47,0x9A,0xE6,0x43,0x9C,0xD5,0x43,0x18,0xE3,0x43,0x9E,0xE5,0x43,0x39,0xE3,0x8F,
+0x19,0x43,0x18,0xF0,0xCF,0x35,0x00,0x30,0x42,0x52,0xB3,0x8F,0x34,0x42,0x3D,0x8B,
+0x0F,0x19,0x19,0x8E,0x32,0x41,0x11,0x40,0x0D,0x19,0x17,0xCF,0x75,0x00,0x30,0x8F,
+0x74,0x0F,0x1B,0x0A,0x23,0x04,0x62,0x9B,0x22,0x0F,0x3B,0x08,0x22,0x00,0xFC,0xCF,
+0x2B,0x00,0x30,0x8F,0x34,0x0C,0x19,0x08,0xE4,0x00,0x00,0x55,0x23,0x08,0xBE,0xCF,
+0x0B,0x00,0x30,0x8F,0x14,0x0C,0x18,0x08,0x9B,0x01,0xE4,0x00,0x00,0x31,0x0C,0x18,
+0x08,0xCF,0x0B,0x00,0x30,0x8F,0x14,0x0C,0x18,0x08,0x9B,0x01,0x4F,0x78,0xAC,0x45,
+0x4A,0xDD,0x4F,0x18,0x5C,0x45,0x58,0x55,0x5D,0x4A,0x00,0x9D,0xC1,0x5D,0xCE,0x00,
+0x1F,0x6E,0xFF,0xC2,0xF8,0x00,0x21,0x5E,0xBB,0x00,0xFE,0xF7,0xB6,0xF8,0x13,0x14,
+0x00,0x0C,0x77,0x02,0x10,0x8D,0x00,0x98,0xA1,0xD7,0x15,0xD7,0x15,0xE4,0x00,0x8C,
+0x44,0x88,0x6A,0xE7,0xFF,0xD8,0xC8,0x13,0x14,0x00,0x5F,0x38,0x00,0x27,0x28,0x15,
+0x9B,0x02,0x1B,0x14,0x00,0xE4,0x00,0x01,0x4D,0x89,0x78,0xE4,0x00,0x00,0x0D,0x89,
+0x79,0xCF,0x0B,0x00,0x30,0x8F,0x14,0x0B,0x38,0x16,0x9A,0x01,0x0F,0x21,0x2C,0x0B,
+0x38,0x18,0x0F,0x18,0x0E,0x0F,0x21,0x34,0x0F,0x01,0x24,0xE7,0xFF,0xF9,0x2B,0x41,
+0x12,0xEC,0xCE,0xD5,0x00,0x30,0x8E,0xD4,0x0D,0x16,0x0C,0x54,0x71,0x08,0x0E,0xC1,
+0x2A,0x0E,0x21,0x2E,0xD0,0x60,0xF3,0x9A,0xE7,0xFF,0xFA,0x15,0xCF,0x15,0x00,0x30,
+0x8F,0x14,0x0F,0x38,0x0A,0xD3,0x22,0xFB,0xB6,0xE7,0xFF,0xFE,0xAB,0xC3,0x00,0x10,
+0x01,0x9A,0xC1,0xE8,0xF8,0x0C,0x01,0x0F,0x01,0x04,0x42,0xD6,0x9D,0x54,0xE7,0x40,
+0x5E,0x16,0x00,0x1C,0x61,0x18,0x88,0x92,0x88,0xB1,0x88,0xD0,0x4C,0xE7,0x31,0xE7,
+0xFF,0xDD,0x3C,0x0F,0x01,0x06,0xD0,0x60,0xD8,0x7E,0xE7,0xFF,0xF8,0x53,0xCF,0x15,
+0x00,0x30,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x0C,0x04,0x8F,0x17,0x0C,0x18,0x08,0x9B,
+0x01,0x4F,0x78,0xAC,0x45,0x4A,0xDD,0xE7,0xFF,0xFE,0x43,0x0E,0xC1,0x3A,0x0E,0xA1,
+0x3E,0x0E,0x81,0x42,0x0E,0x61,0x46,0x0E,0x41,0x4A,0x0E,0x21,0x4E,0x0E,0x01,0x52,
+0x0D,0xE1,0x56,0x0D,0xC1,0x5A,0x0D,0xA1,0x5E,0x0D,0x81,0x62,0x0D,0x61,0x66,0x0D,
+0x41,0x6A,0x0D,0x21,0x6E,0x1C,0x21,0x70,0x85,0x29,0xC2,0xE0,0x10,0x01,0xC3,0x00,
+0x10,0x01,0xF8,0x77,0x04,0x68,0xC2,0xE0,0x10,0x01,0xEA,0xF7,0x0B,0xF5,0xEE,0xF8,
+0x04,0x51,0xC3,0x00,0x10,0x01,0xCF,0x37,0x00,0x05,0x4E,0xF7,0x10,0xEF,0x38,0x04,
+0x4F,0xC3,0x00,0x10,0x01,0xEE,0xF8,0x04,0x4D,0x85,0x29,0x5E,0xE3,0x06,0x20,0x84,
+0x5A,0x0B,0x25,0x00,0x0B,0x45,0x02,0x0B,0x65,0x04,0x0B,0xC5,0x06,0x0B,0x85,0x08,
+0xE4,0x00,0x00,0x27,0x0B,0x25,0x0A,0x0B,0x45,0x0C,0x0B,0x65,0x0E,0x0B,0xC5,0x10,
+0x0B,0x85,0x12,0xC3,0x00,0x10,0x01,0x99,0x02,0xEB,0x18,0x0B,0xF5,0x43,0xDE,0xC3,
+0x43,0xBE,0x40,0x43,0xA0,0xED,0xFF,0xBD,0x03,0xFF,0xD6,0xFD,0x00,0xC8,0x43,0xBC,
+0xC3,0x5C,0x79,0x04,0x41,0x1D,0x40,0xFD,0x08,0x03,0xFF,0xD5,0x17,0x04,0x34,0xE4,
+0x00,0x00,0x49,0x26,0xFC,0x80,0x5C,0x79,0x04,0xC3,0xC0,0xFF,0xAC,0x20,0x01,0xD1,
+0x43,0x37,0xCB,0x42,0xFD,0xBD,0x43,0x77,0xDB,0x40,0x79,0xDC,0x40,0x63,0xE8,0xE4,
+0x00,0x00,0xBF,0x43,0x9C,0xC3,0x9B,0xA2,0x43,0xBC,0xE8,0xFF,0xDD,0x03,0xFF,0xD7,
+0xD7,0x01,0xCC,0xC2,0xE0,0xFF,0xEC,0x20,0x00,0xE9,0x5C,0x79,0x04,0xC3,0x80,0xFF,
+0xEC,0x20,0x01,0x01,0x43,0x60,0xED,0xFC,0x7B,0xFC,0x01,0x8C,0x77,0x43,0x43,0xD3,
+0xC8,0x60,0x07,0xFF,0xFF,0x7B,0x04,0x00,0x42,0xE3,0xBD,0x43,0x37,0xCB,0x40,0x7A,
+0xCC,0x40,0x63,0xD8,0xE4,0x00,0x00,0x35,0x40,0x77,0xC4,0x40,0x63,0xDB,0x26,0xFC,
+0x34,0xFC,0x78,0x07,0xFF,0x40,0x63,0xBD,0x40,0x63,0xD3,0x40,0x63,0xC0,0x5C,0x63,
+0x04,0x85,0x29,0x9C,0x38,0x0C,0x01,0x04,0xC3,0x00,0x10,0x01,0xC3,0x40,0x10,0x01,
+0xFF,0x18,0x0B,0xEA,0xFF,0x9A,0x04,0x00,0x0B,0x38,0x0B,0x0B,0xBC,0x00,0x13,0x18,
+0x0C,0x5F,0x79,0x06,0x5E,0xE3,0x06,0x43,0x7D,0xDB,0x43,0x7B,0xC0,0xD6,0xFB,0x00,
+0x4C,0x9B,0x41,0x0F,0x41,0x04,0x0F,0x41,0x06,0x98,0x7F,0x23,0x40,0x5E,0x0B,0x5C,
+0x02,0x43,0x5A,0xCB,0x43,0x5A,0xC0,0xD7,0x57,0x00,0x58,0x9B,0x41,0x98,0x60,0x0F,
+0x41,0x04,0x0F,0x41,0x06,0x23,0x41,0x1E,0xC3,0x40,0x10,0x01,0xC3,0x60,0x10,0x01,
+0xF3,0xBA,0x0B,0xEE,0xFF,0x7B,0x04,0x04,0x9B,0x41,0xE4,0x00,0x00,0x57,0x0B,0xDB,
+0xFE,0x43,0xDE,0xCB,0x43,0xDE,0xC0,0xD7,0xD7,0x00,0xD4,0x0B,0xDB,0x00,0x43,0xDE,
+0xCB,0x43,0xDE,0xC0,0xD7,0xD7,0x00,0x68,0x9B,0x41,0x0F,0x41,0x04,0xE4,0x00,0x00,
+0x1F,0x9F,0x41,0x9F,0x62,0x5C,0x7A,0x02,0xD7,0x5D,0xFE,0xB0,0x0F,0x41,0x06,0x23,
+0x40,0x9E,0xC3,0x40,0x10,0x01,0xF3,0x5A,0x0B,0xEE,0x9F,0x41,0x4F,0x7A,0x08,0x8F,
+0x9B,0x0B,0x7C,0x00,0x43,0x3B,0xCB,0x43,0x19,0xC0,0xD7,0x17,0x00,0x64,0x9A,0xE1,
+0x5C,0x7A,0x02,0x0E,0xE1,0x04,0x9C,0x28,0x85,0x29,0xC3,0x20,0x10,0x01,0x5C,0x63,
+0x06,0x5C,0xC6,0x02,0x5C,0xE7,0x00,0xFF,0x39,0x0A,0xB4,0x24,0xC0,0x98,0xC2,0xE0,
+0x10,0x01,0xF3,0x17,0x0B,0xEE,0xD4,0xD8,0x00,0xDC,0x43,0x18,0x3B,0x1E,0xE6,0xFF,
+0x8E,0xF8,0x4F,0x17,0x10,0x8F,0x19,0x0B,0x78,0x02,0x0B,0x58,0x00,0xE4,0x00,0x00,
+0x11,0x9B,0x40,0x8B,0x7A,0xC2,0xE0,0x10,0x01,0xF3,0x97,0x0B,0xEE,0xD7,0x86,0x01,
+0x08,0xD0,0xDF,0x04,0x28,0x42,0xFC,0x3B,0x8E,0xE6,0x4F,0x17,0x10,0x4E,0xF7,0x10,
+0x8F,0x19,0x8F,0x37,0x0B,0x18,0x02,0x0B,0xD9,0x00,0xE4,0x00,0x00,0x17,0x24,0xDD,
+0xA0,0x9B,0xC0,0x8B,0x1E,0xD4,0xDC,0x03,0x0C,0x4E,0xE6,0x08,0xC0,0xE0,0x10,0x01,
+0xFC,0xE7,0x04,0x00,0x8E,0xE7,0x9C,0xC1,0x09,0x17,0x00,0x4C,0xC6,0x08,0xC2,0xE0,
+0x10,0x01,0xFE,0xF7,0x0B,0xEA,0x8C,0xE6,0x0B,0x97,0x0B,0x13,0x37,0x0C,0x0A,0xE7,
+0x00,0x40,0xD7,0xE3,0x42,0xF7,0x45,0x43,0xA8,0xE3,0x40,0xC6,0xC8,0x43,0xBD,0xC8,
+0x43,0x97,0xE3,0x43,0xA3,0xED,0x43,0x3C,0xC8,0x40,0x66,0x1D,0x43,0x18,0xEB,0x43,
+0x7B,0x1B,0x42,0xFE,0xEB,0x8F,0x1B,0x40,0x7A,0x1B,0x43,0x18,0xC8,0x8E,0xE3,0x42,
+0xF7,0xC8,0xE4,0x00,0x00,0x11,0x9A,0xE0,0x8B,0x17,0x0F,0x04,0x01,0x0E,0xE5,0x01,
+0x85,0x29,0x1C,0x21,0xD8,0x0D,0x41,0x20,0x0D,0x61,0x1C,0x0D,0x81,0x18,0x0D,0xA1,
+0x14,0x5D,0x84,0x00,0x0D,0xC1,0x10,0x0D,0xE1,0x0C,0x0E,0x01,0x08,0x5D,0xA5,0x00,
+0x5D,0x63,0x04,0x0C,0xC1,0x04,0x0D,0x21,0x24,0x89,0xE8,0x0D,0xC1,0x2A,0xC1,0x40,
+0x10,0x01,0x9A,0x02,0xFD,0x4A,0x0B,0xEA,0x0C,0xE1,0x00,0x08,0x6A,0x0B,0x40,0x6C,
+0x1B,0x40,0x63,0x80,0x40,0x6B,0x1D,0xE7,0xFF,0xFC,0x38,0x0C,0x81,0x06,0x88,0xC3,
+0x5E,0xE3,0x02,0x0C,0xA1,0x02,0x26,0xFC,0x36,0x0C,0x04,0x01,0x0C,0x05,0x01,0xE4,
+0x00,0x00,0x2D,0x0A,0xEA,0x0B,0x42,0xEC,0xBB,0x88,0xED,0x40,0x77,0x80,0x40,0x6B,
+0x1D,0xE7,0xFF,0xFD,0x72,0x08,0x6A,0x0B,0x40,0x6C,0x1B,0x4C,0x63,0x0A,0x8C,0x6B,
+0xE7,0xFF,0xFB,0xC6,0x12,0xEA,0x04,0x88,0xC3,0x5F,0x03,0x02,0xD7,0x17,0x00,0x70,
+0x0C,0x0F,0x01,0x0C,0x0E,0x01,0xE4,0x00,0x00,0x69,0x08,0x6A,0x0B,0x41,0x8C,0x1B,
+0x88,0x8F,0x4C,0x6C,0x0A,0x88,0xAE,0x8C,0x6B,0x88,0xED,0x0E,0x01,0x0A,0x0D,0xE1,
+0x0E,0x0D,0xC1,0x12,0x0D,0xA1,0x16,0x0D,0x81,0x1A,0x0D,0x61,0x1E,0x0D,0x41,0x22,
+0x0D,0x21,0x26,0x1C,0x21,0x28,0xE7,0xFF,0xFC,0xC9,0x0E,0x01,0x0A,0x0D,0xE1,0x0E,
+0x0D,0xC1,0x12,0x0D,0xA1,0x16,0x0D,0x81,0x1A,0x0D,0x61,0x1E,0x0D,0x41,0x22,0x0D,
+0x21,0x26,0x1C,0x21,0x28,0x85,0x29,0x1C,0x21,0x90,0x0D,0x41,0x68,0x0D,0x81,0x60,
+0x0D,0xA1,0x5C,0x0D,0xE1,0x54,0x0E,0x01,0x50,0x0E,0x21,0x4C,0x0D,0x21,0x6C,0xC2,
+0x20,0x10,0x01,0x0D,0x61,0x64,0x0D,0xC1,0x58,0x0E,0x41,0x48,0x0E,0x61,0x44,0x0E,
+0x81,0x40,0x0E,0xA1,0x3C,0x0E,0xC1,0x38,0x89,0xA3,0x8A,0x04,0x89,0x85,0x5D,0xE6,
+0x00,0x99,0x40,0xFE,0x31,0x0C,0x04,0xE4,0x00,0x00,0xA1,0xCF,0x0A,0x00,0x30,0x8F,
+0x11,0x1E,0xE1,0x20,0x10,0xB8,0x07,0x0B,0x98,0x17,0x43,0x2D,0x2C,0x4D,0x05,0x08,
+0x13,0x59,0x00,0x1F,0x61,0x38,0x8D,0x1A,0x9F,0x41,0x4D,0x08,0x08,0x1B,0x59,0x00,
+0x8F,0x68,0x08,0x78,0x17,0x0F,0x9B,0xD9,0x1F,0x01,0x30,0x8F,0x08,0x88,0x8F,0x0F,
+0x01,0x00,0x1C,0xC1,0x18,0x1C,0xE1,0x28,0x8C,0xC8,0x8C,0xE8,0x9D,0x41,0x8D,0x17,
+0x5D,0x4A,0x00,0xE7,0xFF,0xFD,0x1E,0x12,0xF1,0x00,0xD6,0xEA,0xFD,0x8D,0xC2,0xE0,
+0x10,0x01,0x8B,0x10,0xF2,0x57,0x04,0x68,0x9B,0x41,0x8A,0xED,0xE4,0x00,0x00,0x23,
+0x13,0x37,0x00,0x27,0x24,0x19,0x0F,0x58,0x00,0x9E,0xE1,0x9F,0x04,0x43,0x37,0x6D,
+0x5F,0x39,0x00,0xD6,0x59,0xFF,0x6D,0x99,0x60,0xC2,0x60,0x10,0x01,0x89,0x4B,0xC2,
+0x80,0x10,0x01,0xE4,0x00,0x03,0x07,0x42,0xF0,0x5C,0x0E,0xF7,0x02,0x22,0xE0,0x48,
+0x1E,0xE1,0x10,0x8E,0xEB,0x0B,0x57,0x00,0x0B,0x77,0x02,0xE4,0x00,0x01,0x5D,0x42,
+0xED,0x54,0x12,0xF7,0x00,0x22,0xE1,0xE0,0x1E,0xE1,0x18,0x8E,0xEB,0x0B,0x17,0x00,
+0x1E,0xE1,0x28,0x8E,0xEB,0x0A,0xF7,0x00,0x8E,0xF8,0x1F,0x01,0x30,0x8F,0x0B,0x0B,
+0x18,0x00,0x8E,0xF8,0x1F,0x01,0x20,0x8F,0x0B,0x0B,0x18,0x00,0x8E,0xF8,0x9B,0x04,
+0x42,0xF7,0xC0,0x0E,0xEC,0x00,0xE4,0x00,0x02,0x55,0xCE,0xEE,0x00,0x30,0x8E,0xF1,
+0x41,0x0E,0xCC,0x08,0x77,0x17,0x4D,0x08,0x08,0x1E,0xE1,0x30,0x8E,0xE8,0x0E,0xE1,
+0x00,0x1E,0xE1,0x20,0x0F,0x01,0x0C,0x0F,0x21,0x08,0x88,0x8F,0x88,0xB5,0x1C,0xC1,
+0x18,0x1C,0xE1,0x28,0x8C,0xC8,0x8C,0xE8,0x8D,0x17,0xE7,0xFF,0xFB,0x90,0x9D,0xC1,
+0x0F,0x01,0x0E,0x5D,0xCE,0x00,0x0F,0x21,0x0A,0xE4,0x00,0x00,0x23,0x9A,0xC1,0x99,
+0xC0,0x42,0xD6,0x55,0x4F,0x2A,0x08,0x43,0x0D,0xB4,0x12,0xF8,0x00,0xD6,0xEE,0xFD,
+0x6D,0x4E,0xD6,0x10,0x43,0x10,0xB4,0x0F,0x18,0x02,0xD3,0x00,0x05,0x0A,0x1F,0x01,
+0x38,0x8E,0xD8,0x0B,0x56,0xD8,0x0B,0x76,0xDA,0x43,0x3A,0xDD,0x5F,0x39,0x06,0x4E,
+0xF9,0xFA,0xEB,0x93,0x04,0x4F,0x47,0x37,0xCE,0x43,0x39,0xBD,0x52,0xE0,0x64,0x5F,
+0x39,0x06,0xD7,0x3C,0x00,0xF4,0xEB,0x14,0x04,0x4D,0x9A,0xE0,0xD7,0x19,0x00,0xA4,
+0x42,0xF9,0xC5,0x43,0x1C,0xC5,0xCE,0xF7,0x00,0x64,0x42,0xF7,0xC0,0x5E,0xF7,0x00,
+0x5F,0x7A,0x15,0x4B,0x81,0x01,0x4F,0x2A,0x08,0x4B,0x00,0x0A,0x8F,0x19,0x8F,0x3C,
+0x1F,0x81,0x38,0x1F,0x41,0x38,0x53,0x60,0xC8,0x4F,0x39,0x08,0x43,0x7B,0xBD,0x8F,
+0x3C,0x0B,0x99,0xE0,0x4F,0x18,0x08,0x8F,0x1A,0x0B,0xB8,0xE8,0x0B,0x58,0xF8,0x8F,
+0x5D,0x8F,0x5C,0x0B,0x99,0xF0,0x8F,0x5C,0x43,0x5B,0xD3,0x0B,0x79,0xE8,0x0B,0x39,
+0xF8,0x8F,0x79,0x0B,0x38,0xE0,0x8F,0x79,0x0B,0x38,0xF0,0x43,0x1B,0xCC,0x42,0xF7,
+0xC3,0xCB,0x00,0x03,0x20,0x8E,0xFA,0xE7,0xFF,0xFD,0xF3,0x22,0xE0,0x88,0x1F,0x01,
+0x38,0x4E,0xEA,0x10,0x8E,0xF8,0x0B,0x17,0xF0,0x0B,0x37,0xE0,0x8F,0x38,0x0B,0x17,
+0xF8,0x8F,0x38,0x0B,0x17,0xE8,0x42,0xF9,0xC4,0xE7,0xFF,0xFD,0xAB,0x0C,0x0C,0x00,
+0x9D,0x41,0x9D,0x84,0x9D,0x64,0x5E,0xAA,0x00,0xD6,0x55,0xF3,0xF5,0x0E,0xC1,0x3A,
+0x0E,0xA1,0x3E,0x0E,0x81,0x42,0x0E,0x61,0x46,0x0E,0x41,0x4A,0x0E,0x21,0x4E,0x0E,
+0x01,0x52,0x0D,0xE1,0x56,0x0D,0xC1,0x5A,0x0D,0xA1,0x5E,0x0D,0x81,0x62,0x0D,0x61,
+0x66,0x0D,0x41,0x6A,0x0D,0x21,0x6E,0x1C,0x21,0x70,0x85,0x29,0x1C,0x21,0xE8,0x0D,
+0x41,0x10,0x0D,0x61,0x0C,0x0D,0x81,0x08,0x0D,0xA1,0x04,0x0D,0x21,0x14,0x89,0xA3,
+0xC2,0xE0,0x10,0x01,0x5C,0x64,0x06,0xEA,0xF7,0x09,0x4D,0x5D,0x85,0x00,0x5D,0x66,
+0x00,0x5D,0x47,0x00,0x56,0xF7,0x04,0x22,0xE0,0x34,0x88,0x8C,0x88,0xAB,0x88,0xCA,
+0xE7,0xFF,0xCC,0xCE,0xC2,0xE0,0x10,0x01,0xF3,0x17,0x0B,0xEE,0x43,0x0A,0xC3,0x5F,
+0x18,0x00,0x9B,0x20,0x42,0xF8,0x64,0x8D,0x78,0xC3,0x40,0x10,0x01,0x5D,0x6B,0x00,
+0x5E,0xF7,0x00,0x8B,0x19,0xFF,0x5A,0x0A,0xB4,0xE4,0x00,0x00,0x3B,0x4F,0x77,0x10,
+0x8F,0x7A,0x0B,0x7B,0x02,0x8F,0x1B,0x4F,0x77,0x10,0x9E,0xE1,0x8F,0x7A,0x5E,0xF7,
+0x00,0x0B,0x7B,0x00,0x8F,0x3B,0xD6,0xEB,0xFF,0x38,0x27,0x21,0x14,0x27,0x01,0x08,
+0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x01,0x68,0x4F,0x39,0x40,0x9D,0x44,0x4D,0x4A,0x10,
+0x8D,0x57,0x0A,0xEA,0x06,0x43,0x19,0xC0,0x9B,0x4A,0xFF,0x18,0xFF,0x00,0x53,0x20,
+0x64,0x43,0x18,0xBB,0x0A,0xEA,0x04,0x43,0x18,0xD0,0x4E,0xF7,0x40,0x42,0xF7,0xC8,
+0x8E,0xF8,0x5E,0xE0,0x09,0x0E,0xED,0x00,0x48,0x61,0x01,0xE4,0x00,0x00,0x0D,0x98,
+0x60,0x0D,0xA1,0x06,0x0D,0x81,0x0A,0x0D,0x61,0x0E,0x0D,0x41,0x12,0x0D,0x21,0x16,
+0x1C,0x21,0x18,0x85,0x29,0xCA,0xE0,0x01,0x00,0xFC,0x21,0xFF,0x80,0x5C,0xE7,0x00,
+0x0D,0x41,0x78,0x0D,0x61,0x74,0x0D,0x81,0x70,0x0E,0x21,0x5C,0x0E,0x41,0x58,0x0E,
+0x61,0x54,0x0E,0x81,0x50,0x0E,0xA1,0x4C,0x0E,0xC1,0x48,0x0D,0x21,0x7C,0x0D,0xA1,
+0x6C,0x0D,0xC1,0x68,0x0D,0xE1,0x64,0x0E,0x01,0x60,0xCE,0x44,0x00,0x0A,0x42,0x52,
+0x1B,0x42,0x52,0xB8,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x0B,0xEA,0x11,0xD7,0x04,0x41,
+0x87,0x73,0x5F,0x0C,0x00,0xCC,0x84,0x0A,0x00,0x8C,0xB8,0x8C,0xD8,0xC2,0xA0,0x10,
+0x01,0xC2,0x20,0x10,0x01,0xC1,0x60,0x10,0x01,0xC3,0x00,0x10,0x01,0xFD,0x6B,0x0A,
+0xB4,0x42,0x64,0x18,0x5E,0x86,0x00,0x09,0xF7,0x0B,0x12,0x17,0x0C,0x5D,0x45,0x00,
+0xFE,0xB5,0x01,0x68,0xFE,0x31,0x04,0x00,0x8A,0xCB,0xFF,0x18,0x08,0xE8,0xE4,0x00,
+0x01,0x61,0x0F,0x01,0x04,0x88,0x95,0x50,0xA0,0x3C,0x1C,0x61,0x08,0xE4,0x00,0x26,
+0xC0,0x41,0xAA,0x65,0x1E,0xED,0x01,0x4E,0xF7,0x08,0x8E,0xF1,0x98,0x82,0x08,0x77,
+0x00,0x1C,0xA1,0x08,0x40,0x63,0x7B,0x40,0x63,0x80,0xE7,0xFF,0xF1,0x22,0x0F,0x01,
+0x06,0x5C,0x63,0x04,0xD5,0x4C,0x00,0x5E,0x1E,0xEE,0xFF,0xD5,0xB7,0x01,0x92,0xCB,
+0x20,0x03,0xE8,0x43,0x43,0x9B,0x4E,0xEA,0x10,0x43,0x63,0x93,0x9E,0xE2,0x43,0x7B,
+0xC8,0x8E,0xEB,0x0B,0x97,0x01,0x43,0x7C,0xDD,0x0F,0x77,0x01,0x43,0x3A,0xC8,0x4E,
+0xEA,0x10,0x8E,0xEB,0x0B,0x57,0x01,0x43,0x3A,0xCD,0x0F,0x37,0x01,0x4E,0xEA,0x08,
+0x1F,0x37,0x01,0x4F,0x59,0x08,0x8F,0x4B,0x0B,0x7A,0x00,0x27,0x7C,0x1A,0x0C,0x1A,
+0x01,0x4F,0x57,0x08,0x8F,0x56,0x0B,0x7A,0x00,0x27,0x7C,0x1A,0x0C,0x1A,0x01,0x4E,
+0xF7,0x08,0x8E,0xEB,0x4F,0x4A,0x10,0x0B,0x77,0x00,0x8F,0x58,0x4F,0x39,0x08,0x9D,
+0x41,0x8F,0x2B,0x5D,0x4A,0x00,0x0A,0xF9,0x00,0x8E,0xFB,0x0E,0xFA,0x00,0xD5,0x54,
+0xFA,0xA0,0x0E,0xC1,0x4A,0x0E,0xA1,0x4E,0x0E,0x81,0x52,0x0E,0x61,0x56,0x0E,0x41,
+0x5A,0x0E,0x21,0x5E,0x0E,0x01,0x62,0x0D,0xE1,0x66,0x0D,0xC1,0x6A,0x0D,0xA1,0x6E,
+0x0D,0x81,0x72,0x0D,0x61,0x76,0x0D,0x41,0x7A,0x0D,0x21,0x7E,0xFC,0x21,0x00,0x80,
+0x85,0x29,0xC2,0xE0,0x10,0x01,0x1C,0x21,0xB0,0xF0,0x97,0x01,0x62,0x0D,0x21,0x4C,
+0x98,0xA0,0x0D,0x41,0x48,0x0D,0xA1,0x3C,0x0D,0xC1,0x38,0x0D,0x61,0x44,0x0D,0x81,
+0x40,0x0D,0xE1,0x34,0x0E,0x01,0x30,0x0E,0x21,0x2C,0x0E,0x41,0x28,0x0E,0x61,0x24,
+0x0E,0x81,0x20,0x0E,0xA1,0x1C,0x0E,0xC1,0x18,0x0C,0x01,0x08,0x0C,0x01,0x0C,0x18,
+0x01,0x02,0x18,0x01,0x03,0x0C,0x01,0x10,0x0C,0x01,0x14,0xC1,0xA0,0x10,0x01,0xFD,
+0xAD,0x0A,0xB4,0x88,0x6D,0xE4,0x00,0x79,0xF4,0xC1,0xC0,0x10,0x01,0xFD,0x4E,0x0B,
+0xEA,0x12,0xEA,0x04,0x10,0x6A,0x01,0x98,0x81,0x40,0x63,0xBB,0xE4,0x00,0x77,0x7E,
+0x1C,0x61,0x02,0x1C,0x81,0x10,0x1C,0xA1,0x08,0x98,0xC4,0xE7,0xFF,0xF5,0x78,0xC2,
+0xE0,0x10,0x01,0xF3,0x97,0x04,0x68,0xC2,0xE0,0x10,0x01,0xEB,0xB7,0x0A,0x07,0xC2,
+0xE0,0x10,0x01,0xEF,0x77,0x04,0x46,0xC2,0xE0,0x10,0x01,0x57,0xBD,0x20,0xEF,0xD7,
+0x04,0x66,0xC3,0x20,0x10,0x01,0x4F,0xBD,0x29,0x1E,0xE1,0x08,0xFF,0x39,0x01,0x88,
+0x9B,0x40,0xE4,0x00,0x00,0x63,0x0F,0x17,0x02,0x09,0x19,0xFC,0x0F,0x19,0x00,0x43,
+0x18,0x45,0x5F,0x1F,0xF9,0x4B,0x18,0x00,0x0F,0x17,0x00,0x23,0xA0,0x3C,0x23,0x60,
+0x30,0x43,0x18,0xF3,0x43,0x18,0xD8,0x0F,0x17,0x00,0x9F,0x41,0x9E,0xE4,0x5F,0x5A,
+0x00,0x9F,0x28,0xD7,0x5C,0xFE,0x9E,0xC2,0x80,0x10,0x01,0xFE,0xF4,0x01,0x3E,0x88,
+0x6D,0x10,0x97,0x24,0x98,0xA1,0xE4,0x00,0x78,0xB2,0x12,0xEA,0x04,0x10,0x6A,0x01,
+0x98,0x81,0x40,0x63,0xBB,0x99,0x80,0xC2,0x60,0x10,0x01,0xC2,0xA0,0x10,0x01,0xE4,
+0x00,0x76,0x38,0x89,0x6C,0xFD,0xF3,0x0C,0x04,0xFE,0xB5,0x07,0xDA,0xE4,0x00,0x01,
+0x53,0xCE,0x4B,0x00,0x30,0x42,0xF2,0x7C,0x1C,0x61,0x04,0x12,0x37,0x04,0x12,0x17,
+0x05,0x11,0xD7,0x07,0x08,0x97,0x17,0x88,0xB1,0x88,0xD0,0x88,0xEE,0xE7,0xFF,0xF8,
+0xFE,0x20,0x61,0xA8,0x98,0xA0,0xFE,0xD4,0x01,0x3E,0x88,0x6D,0x10,0x96,0x24,0xE4,
+0x00,0x78,0x00,0x12,0xEA,0x04,0x10,0x6A,0x01,0x98,0x81,0x40,0x63,0xBB,0xE4,0x00,
+0x75,0x9A,0x1F,0x01,0x18,0x4E,0xEE,0x10,0x8E,0xF8,0x88,0xD0,0x0C,0x97,0xF2,0x88,
+0xEE,0x0C,0x61,0x06,0x88,0xB1,0xE7,0xFF,0xFA,0x3E,0x98,0xA1,0x88,0x6D,0x10,0x96,
+0x24,0xE4,0x00,0x77,0x9C,0x12,0xEA,0x04,0x10,0x6A,0x01,0x98,0x81,0x40,0x63,0xBB,
+0xE4,0x00,0x75,0x36,0x40,0x6F,0x94,0x88,0xB1,0x88,0x83,0x88,0xD0,0x1C,0x63,0x18,
+0x9C,0x8C,0x88,0xEE,0xE7,0xFF,0xBF,0x42,0x20,0x60,0x3A,0x9A,0xE1,0x4E,0xF7,0x5C,
+0x45,0x8C,0xBD,0x5D,0x8C,0x00,0x88,0x75,0x10,0x8A,0x00,0x98,0xA1,0x9D,0x61,0xE4,
+0x00,0x76,0x40,0x5D,0x6B,0x00,0xF2,0xF3,0x0C,0x04,0xD6,0xEB,0xFA,0xBD,0x88,0x6C,
+0xE7,0xFF,0xC2,0xAE,0x0D,0x21,0x4E,0x0E,0xC1,0x1A,0x0E,0xA1,0x1E,0x0E,0x81,0x22,
+0x0E,0x61,0x26,0x0E,0x41,0x2A,0x0E,0x21,0x2E,0x0E,0x01,0x32,0x0D,0xE1,0x36,0x0D,
+0xC1,0x3A,0x0D,0xA1,0x3E,0x0D,0x81,0x42,0x0D,0x61,0x46,0x0D,0x41,0x4A,0x1C,0x21,
+0x50,0x85,0x29,0xFC,0x21,0xFE,0xF8,0x98,0xA0,0xED,0x41,0x01,0x00,0xED,0x61,0x00,
+0xFC,0xED,0x81,0x00,0xF8,0xED,0xE1,0x00,0xEC,0xEE,0x01,0x00,0xE8,0xEE,0x21,0x00,
+0xE4,0xEE,0x41,0x00,0xE0,0xEE,0x61,0x00,0xDC,0xEE,0x81,0x00,0xD8,0xED,0x21,0x01,
+0x04,0xED,0xA1,0x00,0xF4,0xED,0xC1,0x00,0xF0,0xEE,0xA1,0x00,0xD4,0xEE,0xC1,0x00,
+0xD0,0xC2,0x20,0x10,0x01,0xC2,0x80,0x10,0x01,0xFE,0x31,0x07,0xDA,0xFD,0x74,0x0B,
+0xEA,0x88,0x71,0x10,0x8B,0x00,0xE4,0x00,0x75,0x12,0xC2,0xE0,0x10,0x01,0xEA,0xF7,
+0x0C,0x01,0xC6,0xF7,0x02,0x00,0xC1,0x80,0x10,0x01,0x5E,0xE0,0x01,0xC2,0x40,0x10,
+0x01,0x4A,0xE1,0x13,0xC1,0x40,0x10,0x01,0xC2,0x60,0x10,0x01,0xC1,0xE0,0x10,0x01,
+0x0E,0xE1,0x10,0x9A,0x00,0xFD,0x8C,0x0A,0xB4,0xFE,0x52,0x01,0x68,0xFD,0x4A,0x08,
+0xE8,0xFE,0x73,0x0C,0xDE,0xFD,0xEF,0x0C,0x04,0xC2,0xE0,0x10,0x01,0x98,0xA0,0xF0,
+0x97,0x01,0x62,0x88,0x6C,0x0C,0x01,0x60,0x0C,0x01,0x64,0x18,0x01,0x5E,0x18,0x01,
+0x5F,0x0C,0x01,0x68,0x0C,0x01,0x6C,0xE4,0x00,0x75,0x30,0x12,0xEB,0x04,0x10,0x6B,
+0x01,0x98,0x81,0x40,0x63,0xBB,0xE4,0x00,0x72,0xCA,0x1C,0x61,0x5E,0x1C,0x81,0x68,
+0x1C,0xA1,0x60,0x98,0xC3,0xE7,0xFF,0xF0,0xC4,0xC2,0xE0,0x10,0x01,0xF3,0x57,0x04,
+0x68,0xC2,0xE0,0x10,0x01,0xEB,0x97,0x0A,0x07,0xC2,0xE0,0x10,0x01,0xEF,0x77,0x04,
+0x46,0xC2,0xE0,0x10,0x01,0x57,0x9C,0x20,0xEF,0xB7,0x04,0x66,0x4F,0x9C,0x29,0x1E,
+0xE1,0x60,0x9B,0x20,0xE4,0x00,0x00,0x5D,0x0F,0xD7,0x02,0x4F,0x19,0x18,0x8F,0x12,
+0x0B,0x18,0x1C,0x43,0x1E,0xC5,0x5F,0x1F,0xF9,0x4B,0x18,0x00,0x0F,0x17,0x00,0x23,
+0x80,0x3C,0x23,0x60,0x30,0x43,0x18,0xEB,0x43,0x18,0xD8,0x0F,0x17,0x00,0x9F,0x21,
+0x9E,0xE4,0x5F,0x19,0x00,0xD7,0x58,0xFE,0x9D,0x0B,0x0B,0x0B,0x13,0x2B,0x04,0x0F,
+0x01,0x14,0x12,0xAB,0x0C,0x9A,0xC0,0xE4,0x00,0x01,0xA9,0xFE,0xE1,0x00,0xD0,0x8E,
+0xF6,0x12,0xF7,0x8E,0x22,0xE0,0x72,0xFF,0x61,0x00,0xD0,0x9A,0xE1,0x42,0xF7,0xB5,
+0x4E,0xF7,0x10,0x8E,0xFB,0x0F,0x17,0x92,0x4E,0xF6,0x10,0x8E,0xFB,0x0F,0x17,0x90,
+0x41,0xB6,0xCB,0x1F,0xD6,0x01,0x5D,0xCD,0x00,0x43,0xDE,0xCB,0xE4,0x00,0x01,0x2D,
+0x0F,0x21,0x04,0x0F,0x41,0x08,0x0F,0xC1,0x0C,0x88,0x92,0x50,0xA0,0x3C,0x1C,0x61,
+0x18,0xE4,0x00,0x1D,0xF8,0x0E,0xE1,0x16,0x43,0x0E,0x6D,0xC3,0x80,0x10,0x01,0x9F,
+0x01,0xFF,0x9C,0x04,0x00,0x4F,0x18,0x08,0x8F,0x1C,0x98,0x81,0x08,0x78,0x00,0x1C,
+0xA1,0x18,0x40,0x63,0xBB,0x40,0x63,0xA8,0xE7,0xFF,0xE8,0x46,0xFF,0x81,0x00,0xD0,
+0x4F,0x76,0x10,0x8F,0x7C,0x53,0x80,0x64,0x4F,0x0E,0x10,0x5C,0x63,0x04,0x0F,0x7B,
+0x92,0x9F,0x02,0x43,0x63,0xDB,0x8F,0x0C,0x43,0x7B,0xE0,0x0B,0x98,0x01,0x5F,0x7B,
+0x04,0x43,0x9C,0xDD,0x0F,0x98,0x01,0x1E,0xEE,0x01,0x4F,0x8E,0x10,0x0F,0xC1,0x0E,
+0x43,0xBC,0x64,0x5D,0xD7,0x00,0x09,0x1D,0x01,0x8F,0x8A,0x43,0x68,0xDD,0x0F,0x41,
+0x0A,0x5F,0x7B,0x06,0x0F,0x21,0x06,0x0F,0x7D,0x01,0x0B,0x18,0x00,0x8F,0x78,0x0F,
+0x7C,0x00,0xD7,0xCE,0xFB,0x74,0x9E,0xC1,0x5E,0xD6,0x00,0xD7,0x56,0xF9,0x85,0xC2,
+0xE0,0x10,0x01,0x88,0x6C,0xF0,0x97,0x01,0x62,0x98,0xA1,0xE4,0x00,0x72,0x48,0x12,
+0xEB,0x04,0x10,0x6B,0x01,0x98,0x81,0x40,0x63,0xBB,0xE4,0x00,0x6F,0xE2,0x13,0x6B,
+0x04,0x13,0x2B,0x01,0x9A,0xE0,0x43,0x39,0xDB,0xE4,0x00,0x00,0x4F,0x4F,0x17,0x10,
+0x43,0x58,0x9C,0x8F,0x0C,0x0B,0x18,0x01,0x0F,0x1A,0x01,0x4F,0x17,0x10,0x9E,0xE1,
+0x9F,0x02,0x5E,0xF7,0x00,0x43,0x58,0x9C,0x8F,0x0C,0x0B,0x18,0x01,0x0F,0x1A,0x01,
+0xD7,0x37,0xFE,0xEC,0xC3,0x20,0x10,0x01,0x12,0xAF,0x00,0xFF,0x39,0x0C,0x0A,0x9B,
+0xA0,0x8B,0x19,0x8B,0xCA,0xE4,0x00,0x01,0x3D,0x1D,0x38,0x02,0x12,0xF8,0xFE,0x12,
+0xD8,0xFF,0x11,0xB8,0x01,0x13,0x58,0x00,0x0D,0x09,0x02,0x21,0x04,0x5E,0x43,0x8D,
+0xDB,0x8F,0x9A,0x4F,0x9C,0x10,0x8F,0x8A,0x0F,0x9C,0x02,0x41,0xAD,0xDB,0xE4,0x00,
+0x00,0xCD,0x4D,0xDA,0x10,0x43,0x9A,0xDC,0x8D,0xCA,0x4F,0x9C,0x10,0x0D,0xCE,0x02,
+0x8F,0x8A,0x0F,0x9C,0x02,0x8F,0x8E,0xE7,0xFF,0xFF,0xC9,0x21,0x04,0x5A,0x41,0xD7,
+0x6C,0x4D,0xCE,0x10,0x8D,0xCA,0x0D,0xCE,0x02,0xD5,0xDC,0x01,0x94,0xE4,0x00,0x00,
+0x65,0x4D,0xD7,0x10,0x40,0x77,0xDC,0x8D,0xDE,0x4C,0x63,0x10,0x0D,0xCE,0x02,0x8C,
+0x7E,0x0C,0x63,0x02,0x8C,0x6E,0xD4,0x7C,0x00,0xC8,0x43,0x57,0x6C,0x4F,0x5A,0x10,
+0x8F,0x5E,0x0F,0x9A,0x02,0x8F,0x8E,0xE4,0x00,0x00,0x0D,0x8B,0x8E,0x8B,0x57,0x9E,
+0xE1,0x5E,0xF7,0x00,0xD6,0xF6,0xFD,0xB8,0x1B,0x58,0x00,0x9F,0xA1,0x1F,0x18,0x30,
+0x5F,0xBD,0x00,0xD7,0xB5,0xFB,0x36,0xC2,0xE0,0x10,0x01,0xF3,0x17,0x0B,0xEE,0xC2,
+0xE0,0x10,0x01,0x1F,0x98,0xFF,0xF3,0x57,0x04,0x34,0x1F,0xB8,0xFD,0xC2,0xE0,0x10,
+0x01,0x1E,0xD8,0xFC,0x11,0xAF,0x00,0x5D,0x1C,0x00,0x1D,0xD8,0xFE,0xFE,0xF7,0x0C,
+0x09,0x9B,0x60,0x8A,0xBC,0x5F,0xBD,0x00,0x5E,0xD6,0x00,0x98,0x62,0x1C,0x98,0xFD,
+0xE4,0x00,0x00,0xEB,0x13,0x17,0x01,0xD7,0x1C,0x00,0x76,0x19,0x17,0x00,0x18,0x97,
+0xFF,0xE4,0x00,0x00,0xB9,0x23,0x00,0x36,0x18,0x77,0x00,0x18,0x17,0xFF,0xE4,0x00,
+0x00,0x9F,0x23,0x04,0x56,0x5F,0x40,0x29,0x9F,0x1F,0x4B,0xC2,0x1B,0x1B,0x17,0xFF,
+0x1B,0xD7,0x00,0xE4,0x00,0x00,0x75,0xD7,0x0E,0x00,0x8E,0x5F,0x40,0x29,0x1A,0xB7,
+0x00,0x4B,0xDD,0xB0,0xE4,0x00,0x00,0x4D,0x1F,0xD8,0x01,0x5F,0xDE,0x00,0x23,0x44,
+0x22,0x9F,0x02,0x5F,0xD8,0x00,0x1B,0xD7,0x00,0x13,0xD7,0x01,0x23,0x44,0x26,0x9F,
+0xDE,0xE4,0x00,0x00,0x0D,0x9F,0xDF,0x5F,0xDE,0x00,0x1B,0xD7,0xFF,0x9F,0x61,0x1E,
+0xF7,0x30,0x5F,0x7B,0x00,0xD7,0x6D,0xFC,0x7E,0xC2,0xE0,0x10,0x01,0xEA,0xF7,0x0C,
+0x01,0x56,0xF7,0x08,0xD2,0xE0,0x08,0x6A,0xC2,0xE0,0x10,0x01,0x9B,0x00,0xF3,0x57,
+0x0B,0xEE,0x9B,0xA0,0xC2,0xE0,0x10,0x01,0x1C,0x9A,0xFE,0xEA,0xB7,0x01,0x5C,0x8B,
+0x78,0x8B,0x9D,0x98,0x60,0x9A,0xC1,0xE4,0x00,0x01,0xBF,0x12,0xF9,0x00,0xD2,0xE1,
+0x06,0x99,0xD4,0x97,0x06,0x78,0x1D,0x17,0xFF,0x1D,0xD7,0x01,0x1D,0x39,0x02,0x5D,
+0x08,0x00,0x5D,0xCE,0x00,0x0F,0xC9,0x02,0x23,0xC4,0xDE,0x13,0x79,0x01,0x43,0x7A,
+0xDB,0x5F,0x7B,0x00,0x8D,0xDB,0x8D,0x1B,0x8E,0xFB,0x4D,0xCE,0x10,0x4D,0x08,0x10,
+0x8D,0xCA,0x8D,0x0A,0x0F,0xAE,0x02,0x0F,0x88,0x02,0x4E,0xF7,0x10,0x5F,0xBC,0x15,
+0x8E,0xEA,0x4B,0x9D,0xE0,0x0F,0x77,0x02,0x5F,0x9C,0x06,0xE4,0x00,0x00,0xCD,0x23,
+0xC9,0xA2,0x13,0x79,0x01,0x43,0xBB,0xD3,0x5F,0xBD,0x00,0x43,0x8E,0xEC,0x4F,0x9C,
+0x10,0x8F,0x8A,0x43,0x76,0xDD,0x0F,0xDC,0x02,0x43,0x7A,0xDB,0x5F,0x7B,0x00,0x8D,
+0xDB,0x4D,0xCE,0x10,0x8D,0xCA,0x0F,0x8E,0x02,0x8F,0xDC,0x43,0x88,0xEC,0x4F,0x9C,
+0x10,0x8F,0x8A,0x8D,0x1B,0x0D,0xDC,0x02,0x8F,0xB7,0x4D,0x08,0x10,0x8E,0xFB,0x8D,
+0x0A,0x4F,0xBD,0x10,0x0F,0x88,0x02,0x8F,0xAA,0x8F,0x8E,0x4E,0xF7,0x10,0x5F,0xDC,
+0x15,0x8E,0xEA,0x4B,0x9E,0xE0,0x0F,0x7D,0x02,0x0E,0xF7,0x02,0x5F,0x9C,0x06,0x8F,
+0x77,0x8B,0xB5,0xE4,0x00,0x00,0x0F,0x23,0xC0,0x68,0xC3,0x60,0x7C,0xEC,0x20,0x00,
+0x4D,0x42,0xFB,0xE5,0xD7,0xB7,0x00,0x68,0x4E,0xF6,0xC4,0x44,0x63,0xBD,0x5C,0x63,
+0x00,0x9F,0x01,0x1F,0x39,0x30,0x5E,0xF8,0x00,0xD5,0xB7,0xF9,0x15,0xE7,0xFF,0xB8,
+0x74,0x1E,0xC1,0x70,0x10,0x8B,0x00,0x88,0x76,0x98,0xA0,0x99,0xC0,0xE4,0x00,0x6B,
+0xC4,0x89,0xAE,0xC2,0xA0,0x10,0x01,0xE4,0x00,0x01,0x41,0xCC,0x6D,0x00,0x30,0xEB,
+0x75,0x09,0x4D,0x42,0xC3,0x7C,0x57,0x7B,0x02,0x13,0x56,0x04,0x13,0x36,0x05,0x13,
+0x16,0x07,0x23,0x61,0x54,0x88,0x9A,0x88,0xB9,0x88,0xD8,0x0F,0x01,0x0C,0x0F,0x21,
+0x04,0x0F,0x41,0x08,0x1C,0x61,0x5A,0x98,0xE1,0xE7,0xFF,0xBD,0x68,0x0F,0x01,0x0E,
+0x0F,0x21,0x06,0x0F,0x41,0x0A,0x20,0x61,0x14,0x1C,0x61,0x5C,0x88,0x9A,0x88,0xB9,
+0x88,0xD8,0x98,0xE1,0xE7,0xFF,0xBE,0xD8,0x20,0x60,0xCC,0x0B,0x21,0x5A,0x0B,0x01,
+0x5C,0xCF,0x39,0x00,0x07,0xCF,0x18,0x00,0x03,0x9A,0xEA,0x8F,0x19,0x43,0x18,0xB8,
+0x0F,0x16,0x17,0xE4,0x00,0x00,0x47,0x8C,0x6F,0x88,0x9A,0x1C,0x63,0x16,0x88,0xB9,
+0x88,0xD8,0x98,0xE1,0xE7,0xFF,0xBC,0xD2,0x20,0x60,0x3A,0x9A,0xE1,0x4E,0xF7,0x6C,
+0x45,0xCE,0xBD,0x5D,0xCE,0x00,0x1C,0x61,0x70,0x10,0x8B,0x00,0x98,0xA1,0x9D,0xA1,
+0xE4,0x00,0x6A,0x7E,0x5D,0xAD,0x00,0x12,0xEF,0x00,0xD6,0xED,0xFB,0x0D,0x88,0x6E,
+0xE7,0xFF,0xB6,0xEE,0x9E,0x01,0x0F,0x01,0x12,0x5E,0x10,0x00,0xD7,0x10,0xD6,0xED,
+0x88,0x71,0x10,0x8B,0x00,0x98,0xA1,0xE4,0x00,0x6A,0x30,0xED,0x21,0x01,0x06,0xEE,
+0xC1,0x00,0xD2,0xEE,0xA1,0x00,0xD6,0xEE,0x81,0x00,0xDA,0xEE,0x61,0x00,0xDE,0xEE,
+0x41,0x00,0xE2,0xEE,0x21,0x00,0xE6,0xEE,0x01,0x00,0xEA,0xED,0xE1,0x00,0xEE,0xED,
+0xC1,0x00,0xF2,0xED,0xA1,0x00,0xF6,0xED,0x81,0x00,0xFA,0xED,0x61,0x00,0xFE,0xED,
+0x41,0x01,0x02,0xFC,0x21,0x01,0x08,0x85,0x29,0xC2,0xE0,0x10,0x01,0x9C,0x38,0xF3,
+0x97,0x04,0x68,0x0C,0x01,0x05,0x9A,0xE0,0x0C,0x01,0x07,0x8B,0x17,0xE4,0x00,0x00,
+0x61,0x4F,0x37,0x18,0x8F,0x24,0x0F,0x39,0x22,0x27,0x3C,0x88,0x1F,0xC1,0x04,0x0B,
+0x64,0x2D,0x0B,0x44,0x2F,0x4F,0xB7,0x08,0x5F,0x3A,0x15,0x8F,0xBE,0x4B,0x18,0x0A,
+0x43,0xDB,0xCB,0x43,0xDE,0xD0,0x8F,0x7E,0x0F,0x7D,0x01,0x9E,0xE1,0x5F,0x37,0x00,
+0xD7,0x99,0xFE,0x8D,0x23,0x04,0xB6,0x0A,0xE1,0x07,0x0B,0x01,0x05,0x5F,0x37,0x06,
+0x5F,0x58,0x06,0xD7,0x3A,0x00,0x30,0x8B,0x17,0x0A,0xE4,0x2D,0x5F,0x38,0x06,0x5F,
+0x18,0x04,0x5F,0x37,0x1D,0x4A,0xF8,0xB8,0x0E,0xE3,0x01,0x98,0x61,0xE4,0x00,0x00,
+0x19,0x0A,0xE4,0x2D,0x0E,0xE3,0x01,0x98,0x60,0x9C,0x28,0x85,0x29,0x1C,0x21,0xD0,
+0x0D,0x81,0x20,0x0D,0xC1,0x18,0x0D,0xE1,0x14,0x0E,0x01,0x10,0x0D,0x21,0x2C,0x0D,
+0x41,0x28,0x0D,0x61,0x24,0x0D,0xA1,0x1C,0x0E,0x21,0x0C,0x0E,0x41,0x08,0x0E,0x61,
+0x04,0xC2,0xE0,0x10,0x01,0xC1,0x80,0x10,0x01,0xC1,0xC0,0x10,0x01,0xC2,0x00,0x10,
+0x01,0xC1,0xE0,0x10,0x01,0xEF,0x17,0x04,0x4A,0xFD,0x8C,0x0C,0x04,0xFD,0xCE,0x04,
+0x70,0xFE,0x10,0x04,0x54,0xFD,0xEF,0x04,0x5C,0xD3,0x02,0x04,0x4E,0xC3,0x00,0x10,
+0x01,0xEF,0x18,0x04,0x6E,0x23,0x00,0x24,0x9B,0x03,0xEF,0x17,0x04,0x48,0xC3,0x20,
+0x10,0x01,0xC3,0x40,0x10,0x01,0x13,0xAC,0x00,0xFF,0x39,0x0C,0x1A,0x8A,0xEE,0xFF,
+0x5A,0x0D,0x28,0x9B,0x00,0xE4,0x00,0x00,0x85,0x0B,0x9A,0xFE,0xC3,0x8F,0xFF,0xE0,
+0x20,0x00,0x35,0x0B,0x7A,0x00,0xC3,0x6F,0xFF,0xE4,0x20,0x00,0x41,0x0B,0x79,0x01,
+0x0F,0x77,0x01,0x0B,0x79,0x03,0xE4,0x00,0x00,0x0F,0x0F,0x97,0x01,0x0F,0x77,0x03,
+0x1F,0x39,0x30,0x4F,0x78,0x10,0x9E,0xE4,0x43,0x90,0xDC,0x9F,0x01,0x8F,0x6F,0x0C,
+0x1C,0x00,0x0C,0x1B,0x00,0x9F,0x48,0x5F,0x78,0x00,0xD7,0xBB,0xFD,0xFD,0xC2,0xE0,
+0x10,0x01,0x99,0x40,0xE9,0x77,0x04,0x53,0x41,0xAB,0x5B,0x5E,0x2B,0x06,0xE4,0x00,
+0x04,0x67,0x23,0x0F,0xB2,0xC3,0x00,0x10,0x01,0xEF,0x18,0x04,0x6E,0x23,0x00,0x26,
+0x9B,0x02,0xEF,0x17,0x04,0x48,0xC3,0x20,0x10,0x01,0xC3,0x40,0x10,0x01,0x13,0xAC,
+0x00,0x1E,0xEE,0x02,0xFF,0x39,0x0C,0x1C,0xFF,0x5A,0x0D,0x28,0x9B,0x00,0xE4,0x00,
+0x00,0x83,0x4F,0x78,0x10,0x43,0x90,0xDC,0x0F,0x9C,0x02,0x23,0x84,0x4E,0x0B,0x9A,
+0xFE,0xC3,0x8F,0xFF,0xE0,0x20,0x00,0x1B,0x0B,0x99,0xFF,0x0F,0x97,0xFF,0x8F,0x6F,
+0x0F,0x7B,0x02,0x23,0x64,0x4E,0x0B,0x7A,0x00,0xC3,0x6F,0xFF,0xE0,0x20,0x00,0x1B,
+0x0B,0x79,0x01,0x0F,0x77,0x01,0x9F,0x01,0x9E,0xE4,0x1F,0x39,0x30,0x9F,0x48,0x5F,
+0x78,0x00,0xD7,0xBB,0xFE,0x05,0xE7,0xFF,0xFE,0xF1,0x4E,0xEA,0x10,0xCE,0x6A,0x00,
+0x30,0x42,0x4E,0xBC,0x8E,0x6C,0x0B,0x32,0x02,0x0B,0x53,0x18,0x43,0x19,0xD5,0x5F,
+0x98,0x06,0x4F,0x7C,0xFA,0x47,0x9B,0xE6,0x43,0x7C,0xDD,0xD5,0x7B,0x05,0x88,0x43,
+0x3A,0xCD,0x40,0x79,0xC3,0x8C,0x6D,0xE7,0xFF,0xAF,0xAA,0x5C,0x63,0x06,0x40,0x6B,
+0x1D,0x24,0x7C,0xCA,0xCE,0x6A,0x00,0x30,0x4E,0x4A,0x10,0x8E,0x6C,0x8E,0x4E,0x0A,
+0xF3,0x18,0x0B,0x12,0x02,0x40,0x77,0xC5,0x42,0xF8,0xBD,0x40,0x63,0xBB,0x8C,0x6D,
+0xE7,0xFF,0xAF,0x58,0x5C,0x63,0x06,0x40,0x6B,0x1D,0x24,0x7C,0xB2,0x98,0x60,0xE4,
+0x00,0x00,0x91,0x0A,0xF3,0x18,0x0B,0x12,0x02,0x40,0x77,0xC5,0x42,0xF8,0xBD,0x40,
+0x63,0xBB,0x8C,0x6D,0xE7,0xFF,0xAF,0x10,0x5C,0x63,0x06,0x40,0x6B,0x1D,0xD5,0x63,
+0x01,0x38,0xE7,0xFF,0xFF,0x65,0x0A,0xF3,0x18,0x0B,0x12,0x02,0x40,0x77,0xC5,0x42,
+0xF8,0xBD,0x40,0x63,0xBB,0x8C,0x6D,0xE7,0xFF,0xAE,0xCA,0x40,0x6B,0x1D,0x5C,0x63,
+0x06,0xE4,0x00,0x00,0x0D,0x88,0x71,0x4E,0xEA,0x10,0x8E,0xEE,0x0B,0x17,0x02,0xCE,
+0xEA,0x00,0x30,0x8E,0xEC,0x0B,0x37,0x18,0xD7,0x19,0x00,0x58,0x40,0x78,0x1D,0xE4,
+0x00,0x00,0x0D,0x8C,0x78,0x0C,0x77,0x19,0xE4,0x00,0x00,0x17,0x8E,0xEF,0x9B,0x01,
+0x0F,0x17,0x00,0x4E,0xEA,0x10,0xCE,0x6A,0x00,0x30,0x42,0x4E,0xBC,0x8E,0x6C,0x0B,
+0x32,0x00,0x0B,0x53,0x16,0x43,0x19,0xD5,0x5F,0x98,0x06,0x4F,0x7C,0xFA,0x47,0x9B,
+0xE6,0x43,0x7C,0xDD,0xD5,0x7B,0x05,0x88,0x43,0x3A,0xCD,0x40,0x79,0xC3,0x8C,0x6D,
+0xE7,0xFF,0xAD,0xF8,0x5C,0x63,0x06,0x40,0x6B,0x1D,0x24,0x7C,0xCA,0xCE,0x6A,0x00,
+0x30,0x4E,0x4A,0x10,0x8E,0x6C,0x8E,0x4E,0x0A,0xF3,0x16,0x0B,0x12,0x00,0x40,0x77,
+0xC5,0x42,0xF8,0xBD,0x40,0x63,0xBB,0x8C,0x6D,0xE7,0xFF,0xAD,0xA6,0x5C,0x63,0x06,
+0x40,0x6B,0x1D,0x24,0x7C,0xB2,0x98,0x60,0xE4,0x00,0x00,0x91,0x0A,0xF3,0x16,0x0B,
+0x12,0x00,0x40,0x77,0xC5,0x42,0xF8,0xBD,0x40,0x63,0xBB,0x8C,0x6D,0xE7,0xFF,0xAD,
+0x5E,0x5C,0x63,0x06,0x40,0x6B,0x1D,0xD5,0x63,0x01,0x38,0xE7,0xFF,0xFF,0x65,0x0A,
+0xF3,0x16,0x0B,0x12,0x00,0x40,0x77,0xC5,0x42,0xF8,0xBD,0x40,0x63,0xBB,0x8C,0x6D,
+0xE7,0xFF,0xAD,0x18,0x40,0x6B,0x1D,0x5C,0x63,0x06,0xE4,0x00,0x00,0x0D,0x88,0x71,
+0x4E,0xEA,0x10,0x8E,0xEE,0x0B,0x17,0x00,0xCE,0xEA,0x00,0x30,0x8E,0xEC,0x0B,0x37,
+0x16,0xD7,0x19,0x00,0x58,0x40,0x78,0x1D,0xE4,0x00,0x00,0x0D,0x8C,0x78,0x0C,0x77,
+0x17,0xE4,0x00,0x00,0x17,0x8E,0xF0,0x9B,0x01,0x0F,0x17,0x00,0x9D,0x41,0x5D,0x4A,
+0x00,0x12,0xEC,0x00,0xD6,0xEA,0xF2,0x35,0x0E,0x61,0x06,0x0E,0x41,0x0A,0x0E,0x21,
+0x0E,0x0E,0x01,0x12,0x0D,0xE1,0x16,0x0D,0xC1,0x1A,0x0D,0xA1,0x1E,0x0D,0x81,0x22,
+0x0D,0x61,0x26,0x0D,0x41,0x2A,0x0D,0x21,0x2E,0x1C,0x21,0x30,0x85,0x29,0x20,0x60,
+0x2E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x01,0x1C,0x85,0x29,0x20,0x60,0x4E,0xC2,0xE0,
+0x10,0x01,0xEC,0x97,0x00,0xF4,0xC2,0xE0,0x10,0x01,0xEC,0xB7,0x01,0x18,0x85,0x29,
+0x20,0x60,0x5E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x04,0x7C,0xC2,0xE0,0x10,0x01,0xEC,
+0xB7,0x04,0x80,0xE4,0x00,0x00,0x5D,0x20,0x64,0x5E,0xC2,0xE0,0x10,0x01,0xEC,0x97,
+0x04,0xB0,0xC2,0xE0,0x10,0x01,0xEC,0xB7,0x04,0xA4,0xE4,0x00,0x00,0x2F,0x20,0x68,
+0x4E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x04,0x9C,0xC2,0xE0,0x10,0x01,0xEC,0xB7,0x04,
+0x78,0x85,0x29,0x20,0x68,0x2E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x04,0x98,0x85,0x29,
+0x5C,0x84,0x04,0x20,0x60,0x3E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x01,0x35,0xE4,0x00,
+0x00,0x3D,0x20,0x64,0x3E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x01,0x15,0xE4,0x00,0x00,
+0x1F,0x20,0x68,0x2E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x01,0x3D,0x85,0x29,0x5C,0x84,
+0x04,0x20,0x60,0x3E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x00,0xF9,0xE4,0x00,0x00,0x3D,
+0x20,0x64,0x3E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x01,0x21,0xE4,0x00,0x00,0x1F,0x20,
+0x68,0x2E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x01,0x11,0x85,0x29,0x5C,0x84,0x04,0x20,
+0x68,0x2E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x01,0x13,0x85,0x29,0x1C,0x21,0xC8,0x0D,
+0x21,0x34,0x0D,0x41,0x30,0x0D,0x61,0x2C,0x0D,0x81,0x28,0x0D,0xA1,0x24,0x0D,0xC1,
+0x20,0x0D,0xE1,0x1C,0x0E,0x01,0x18,0x0E,0x21,0x14,0x0E,0x41,0x10,0x0E,0x61,0x0C,
+0x0E,0x81,0x08,0x0E,0xA1,0x04,0x0E,0xC1,0x00,0x20,0x65,0x70,0x20,0x60,0x4C,0xD0,
+0x62,0x04,0x42,0x99,0xC0,0x89,0xEE,0xD0,0x63,0x06,0x66,0xE4,0x00,0x01,0x71,0xC2,
+0xE0,0x10,0x01,0xEE,0xD7,0x00,0xF6,0xC2,0xE0,0x10,0x01,0xEE,0xB7,0x01,0x1A,0xC2,
+0xE0,0x10,0x01,0xEE,0x97,0x04,0x7E,0xC2,0xE0,0x10,0x01,0xEE,0x77,0x04,0x82,0xC2,
+0xE0,0x10,0x01,0xE9,0xF7,0x01,0x35,0xC2,0xE0,0x10,0x01,0x9A,0x00,0xE9,0xD7,0x00,
+0xF9,0x99,0xA0,0xC2,0xE0,0x10,0x01,0x9A,0x21,0xED,0x77,0x01,0x1E,0x9A,0x45,0x89,
+0x90,0xE4,0x00,0x00,0xD9,0xC2,0xE0,0x10,0x01,0xEE,0x97,0x04,0xB2,0xC2,0xE0,0x10,
+0x01,0xEE,0x77,0x04,0xA6,0xC2,0xE0,0x10,0x01,0x99,0xA0,0xE9,0xF7,0x01,0x15,0x9A,
+0x00,0xC2,0xE0,0x10,0x01,0x8A,0x2D,0xE9,0xD7,0x01,0x21,0x9A,0x40,0x99,0x61,0x89,
+0x90,0x9A,0xA0,0xE4,0x00,0x00,0x71,0xC2,0xE0,0x10,0x01,0xEE,0x97,0x04,0x9E,0xC2,
+0xE0,0x10,0x01,0xEE,0x17,0x04,0x9A,0xC2,0xE0,0x10,0x01,0xE9,0xF7,0x01,0x3D,0xC2,
+0xE0,0x10,0x01,0x99,0x81,0xE9,0xD7,0x01,0x11,0x9A,0x21,0xC2,0xE0,0x10,0x01,0x9A,
+0x40,0xE9,0xB7,0x01,0x13,0x99,0x61,0x9A,0x60,0x8A,0xAC,0x9A,0xC1,0x99,0x41,0xE4,
+0x00,0x00,0x55,0xC2,0xE0,0x10,0x01,0xE9,0xF7,0x01,0x35,0xC2,0xE0,0x10,0x01,0xE9,
+0xD7,0x00,0xF9,0x99,0xA0,0x9A,0x40,0x9A,0x00,0x9A,0x80,0x9A,0xA0,0x8A,0x2D,0x89,
+0x72,0x8A,0x70,0x89,0x94,0x8A,0xD5,0x99,0x40,0x88,0x6A,0xE4,0x00,0xBF,0x38,0x88,
+0x6A,0xE4,0x00,0xBF,0xBA,0x88,0x76,0xE4,0x00,0xCF,0x3A,0x88,0x75,0xE4,0x00,0xCF,
+0x94,0x88,0x74,0xE4,0x00,0xC1,0x1A,0x88,0x73,0xE4,0x00,0xC1,0x66,0x88,0x72,0xE4,
+0x00,0xC0,0x68,0x88,0x71,0xE4,0x00,0xC0,0x94,0x88,0x6A,0xE4,0x00,0xD0,0xB6,0x88,
+0x70,0xE4,0x00,0xD1,0x10,0x98,0x60,0xE4,0x00,0xD1,0x5E,0x98,0x60,0xE4,0x00,0xD1,
+0xAC,0x98,0x60,0xE4,0x00,0xD1,0xFA,0x98,0x60,0xE4,0x00,0xD2,0x48,0x88,0x6F,0xE4,
+0x00,0xC1,0x60,0x88,0x6E,0xE4,0x00,0xC1,0x8E,0x88,0x6D,0xE4,0x00,0xC1,0xC2,0x88,
+0x6C,0xE4,0x00,0xC1,0xDC,0x88,0x6B,0x0E,0xC1,0x02,0x0E,0xA1,0x06,0x0E,0x81,0x0A,
+0x0E,0x61,0x0E,0x0E,0x41,0x12,0x0E,0x21,0x16,0x0E,0x01,0x1A,0x0D,0xE1,0x1E,0x0D,
+0xC1,0x22,0x0D,0xA1,0x26,0x0D,0x81,0x2A,0x0D,0x61,0x2E,0x0D,0x41,0x32,0x0D,0x21,
+0x36,0x1C,0x21,0x38,0xE4,0x00,0xBF,0x25,0xC2,0xE0,0x10,0x01,0xF0,0x77,0x04,0x94,
+0x85,0x29,0xC2,0xE0,0x10,0x01,0xF8,0x77,0x04,0x94,0x85,0x29,0xC2,0xE0,0x10,0x01,
+0xF3,0x17,0x04,0x94,0x9F,0x01,0xFB,0x17,0x04,0x94,0x85,0x29,0xC2,0xE0,0x10,0x01,
+0xF0,0x77,0x04,0xA8,0x85,0x29,0xC2,0xE0,0x10,0x01,0xF8,0x77,0x04,0xA8,0x85,0x29,
+0xC2,0xE0,0x10,0x01,0xF3,0x17,0x04,0xA8,0x9F,0x01,0xFB,0x17,0x04,0xA8,0x85,0x29,
+0xC2,0xE0,0x10,0x01,0xEC,0x77,0x00,0xFC,0x85,0x29,0xC3,0x40,0x10,0x01,0xFF,0x5A,
+0x01,0x00,0x0C,0x1A,0x00,0x9A,0xE1,0xC3,0x20,0x10,0x01,0xFF,0x39,0x01,0x24,0x0E,
+0xF9,0x00,0xC3,0x00,0x10,0x01,0xFF,0x18,0x04,0x84,0x0C,0x18,0x00,0x0C,0x1A,0x04,
+0x0E,0xF9,0x04,0x0C,0x18,0x04,0x0C,0x1A,0x08,0x0E,0xF9,0x08,0x0C,0x18,0x08,0x0C,
+0x1A,0x0C,0x0E,0xF9,0x0C,0x0C,0x18,0x0C,0xC3,0x00,0x10,0x01,0xEE,0xF8,0x01,0x38,
+0x85,0x29,0x9C,0x38,0x0D,0x41,0x04,0xC2,0xE0,0x10,0x01,0xC3,0x00,0x10,0x01,0x5C,
+0xA5,0x00,0x5C,0xC6,0x00,0xF3,0x37,0x04,0xA9,0xFF,0x18,0x01,0x38,0xD7,0x25,0x00,
+0x6A,0xF8,0xB7,0x04,0xA9,0x9A,0xE1,0x0E,0xF8,0x00,0xC3,0x80,0x10,0x01,0xC2,0xE0,
+0x10,0x01,0x0F,0x38,0x02,0xFF,0x9C,0x01,0x24,0xFE,0xF7,0x01,0x00,0x23,0x24,0x9A,
+0x0B,0xA3,0x00,0x4F,0x46,0x18,0x43,0x77,0xD4,0x0F,0xBB,0x00,0x0B,0xA4,0x00,0x0F,
+0xBB,0x04,0x8F,0x5C,0x0F,0x3A,0x00,0x0F,0x3A,0x04,0x40,0xA5,0x35,0x20,0xA4,0x1A,
+0x0C,0x18,0x00,0x4F,0x46,0x18,0x8F,0x57,0x0F,0x3A,0x02,0x0F,0x5A,0x02,0x0B,0x03,
+0x00,0x8B,0x77,0x43,0x39,0xC5,0x27,0x3C,0x2A,0x43,0x58,0xD5,0xE4,0x00,0x00,0x0F,
+0x43,0x5A,0xC5,0x4F,0x26,0x18,0x8F,0x3B,0x0F,0x79,0x02,0x0F,0x39,0x02,0x43,0x7B,
+0xC5,0x27,0x7C,0x2A,0x43,0x18,0xCD,0xE4,0x00,0x00,0x0F,0x43,0x19,0xC5,0x43,0x7A,
+0xC3,0x4F,0x46,0x18,0x8F,0x57,0x0F,0x3A,0x06,0x0F,0x5A,0x06,0x0B,0x04,0x00,0x8B,
+0xB7,0x43,0x39,0xC5,0x27,0x3C,0x2A,0x43,0x58,0xD5,0xE4,0x00,0x00,0x0F,0x43,0x5A,
+0xC5,0x4F,0x26,0x18,0x8F,0x3D,0x0F,0xB9,0x06,0x0F,0x39,0x06,0x43,0xBD,0xC5,0x27,
+0xBC,0x2A,0x43,0x18,0xCD,0xE4,0x00,0x00,0x0F,0x43,0x19,0xC5,0x43,0x1A,0xC3,0x9B,
+0x23,0x8F,0x1B,0x9B,0x41,0xE4,0x00,0x00,0x11,0x8F,0x59,0x9F,0x22,0xD7,0x58,0xFF,
+0xE1,0x4F,0x19,0x09,0xC3,0x20,0x10,0x01,0x9F,0x1F,0x53,0x40,0x1E,0x5F,0x18,0x06,
+0xEF,0x19,0x04,0xAC,0xC3,0x20,0x10,0x01,0x43,0x18,0xD1,0xEF,0x39,0x00,0xFE,0x43,
+0x18,0xC3,0x43,0x39,0xC5,0xC3,0x00,0x10,0x01,0x5F,0x23,0x11,0x20,0x00,0x1B,0x53,
+0x20,0x19,0xEF,0x38,0x04,0xA0,0xC3,0xA0,0x10,0x01,0xEC,0xB8,0x04,0xA2,0x4C,0xC6,
+0x08,0x9B,0x00,0xFF,0xBD,0x04,0x84,0xCB,0x40,0x10,0x00,0x43,0x26,0xC4,0x4F,0x39,
+0x10,0x43,0x7C,0xCC,0xC9,0x40,0xA0,0x00,0x0D,0x1B,0x02,0x0F,0xDB,0x02,0x43,0x68,
+0x53,0xCF,0xDE,0x00,0x0A,0x8F,0xC5,0x43,0xDB,0xF0,0x43,0x7D,0xCC,0x0F,0xDB,0x00,
+0x5F,0xD8,0x00,0x23,0xC0,0x92,0x43,0xD7,0xCC,0x0D,0x1E,0x02,0x0F,0x7B,0x02,0x0F,
+0x3E,0x02,0x0B,0xC3,0x00,0x43,0x3E,0xCD,0x43,0x3B,0xCB,0x43,0x39,0xD0,0x8F,0x28,
+0x0F,0x23,0x01,0xE4,0x00,0x00,0x43,0x43,0xD7,0xCC,0x0D,0x1E,0x02,0x0F,0x7B,0x02,
+0x0F,0x3E,0x02,0x0B,0xC4,0x00,0x43,0x3E,0xCD,0x43,0x3B,0xCB,0x43,0x39,0xD0,0x8F,
+0x28,0x0F,0x24,0x01,0x43,0x66,0xC4,0x4F,0x7B,0x10,0x43,0xD7,0xDC,0x0F,0x3E,0x00,
+0x43,0x3C,0xDC,0x8F,0x7D,0x0F,0xD9,0x02,0x0D,0x1B,0x02,0x0F,0x79,0x02,0x43,0x68,
+0xDB,0x43,0x7B,0xD0,0x43,0x7E,0xDD,0x0F,0x79,0x00,0x9F,0x01,0xD3,0x02,0xFB,0x7E,
+0x0D,0x41,0x06,0x9C,0x28,0x85,0x29,0x9C,0x30,0x5C,0x63,0x00,0x0D,0x41,0x08,0x0D,
+0x61,0x04,0x4C,0x63,0x08,0xC2,0xF8,0x00,0x21,0x0D,0x21,0x0C,0xFE,0xF7,0xB7,0x04,
+0x99,0x40,0x8E,0xE3,0x09,0x77,0x01,0x88,0x6A,0x88,0x8B,0x9D,0x41,0xE4,0x00,0xBD,
+0xC0,0x5D,0x4A,0x00,0xD1,0x44,0xFF,0x9E,0x0D,0x61,0x06,0x0D,0x41,0x0A,0x0D,0x21,
+0x0E,0x1C,0x21,0x10,0x85,0x29,0xC2,0xE0,0x10,0x01,0xEC,0x77,0x04,0xB7,0xC2,0xE0,
+0x10,0x01,0xF8,0x17,0x04,0xBC,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x04,0xB4,0xC2,0xE0,
+0x10,0x01,0xF8,0x17,0x04,0xB8,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x04,0xBF,0xC2,0xE0,
+0x10,0x01,0xEC,0x17,0x04,0xBB,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x04,0xC0,0x85,0x29,
+0xC2,0xE0,0x10,0x01,0xEC,0x77,0x04,0xB7,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x04,0xB4,
+0xC2,0xE0,0x10,0x01,0xF0,0x77,0x04,0xBC,0xC2,0xE0,0x10,0x01,0xF8,0x77,0x04,0xB8,
+0xC2,0xE0,0x10,0x01,0xEC,0x17,0x04,0xBF,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x04,0xBB,
+0xC2,0xE0,0x10,0x01,0xEC,0x17,0x04,0xC0,0x24,0x6C,0x1F,0xE7,0xFF,0xFE,0x99,0x85,
+0x29,0xC2,0xE0,0x10,0x01,0xC3,0x00,0x10,0x01,0x5C,0x63,0x04,0xEC,0x77,0x04,0xBB,
+0xC2,0xE0,0x10,0x01,0xEC,0x17,0x04,0xC0,0xF3,0x78,0x04,0xB4,0xC3,0x40,0x10,0x01,
+0xC3,0x20,0x10,0x01,0xC3,0x00,0x10,0x01,0xFF,0x5A,0x04,0xBC,0xFF,0x39,0x04,0xB8,
+0x23,0x60,0x2C,0xEB,0x78,0x04,0xBF,0xD7,0x63,0x00,0xA1,0x13,0x5A,0x00,0xEC,0x78,
+0x04,0xBF,0x1B,0x59,0x00,0x9B,0x01,0xEF,0x17,0x04,0xC0,0x85,0x29,0xC2,0xE0,0x10,
+0x01,0xEB,0x17,0x04,0xBB,0xC2,0xE0,0x10,0x01,0xEA,0xF7,0x04,0xB7,0x5E,0xF8,0x1F,
+0x48,0x61,0x01,0x85,0x29,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x04,0xB4,0x5E,0xE0,0x5B,
+0x48,0x61,0x01,0x85,0x29,0xC2,0xE0,0x10,0x01,0xF3,0x17,0x04,0xB4,0x27,0x08,0x7B,
+0x9F,0x01,0xFB,0x17,0x04,0xB4,0xC2,0xE0,0x10,0x01,0xF0,0x77,0x04,0xBC,0x9C,0x61,
+0x54,0x63,0x03,0xF8,0x77,0x04,0xBC,0xE7,0xFF,0xFD,0x61,0x85,0x29,0x8B,0x03,0x56,
+0xE3,0x03,0x22,0xE0,0x98,0x9B,0x04,0x42,0xF8,0xBD,0x5F,0x44,0x00,0x5E,0xE5,0x17,
+0x4B,0x37,0x28,0x9A,0xE0,0xE4,0x00,0x00,0x13,0x1B,0x58,0x00,0x9E,0xE1,0x43,0x03,
+0xBC,0xD6,0xF9,0xFF,0xC6,0x40,0xA5,0xBD,0x4E,0xE4,0x80,0x4F,0x64,0xC0,0x47,0x7B,
+0xBD,0x4E,0xE4,0x40,0x47,0x7B,0x25,0x4F,0x45,0x11,0x47,0x7B,0xBD,0x9A,0xE0,0xE4,
+0x00,0x00,0x17,0x8F,0x38,0x9E,0xE1,0x0F,0x79,0x00,0x4F,0x37,0x10,0xD6,0xFA,0xFF,
+0xB6,0x8F,0x19,0x9A,0xE0,0x54,0xA5,0x03,0x5C,0x84,0x00,0xE4,0x00,0x00,0x19,0x43,
+0x37,0xC4,0x9E,0xE1,0x18,0x99,0x00,0xD4,0xB7,0xFF,0xC5,0x85,0x29,0x46,0xE4,0x1D,
+0x56,0xF7,0x03,0x22,0xE0,0x82,0x9A,0xFC,0x47,0x45,0xBC,0x9A,0xE0,0xE4,0x00,0x00,
+0x51,0x43,0x03,0xBC,0x43,0x24,0xBC,0x9E,0xE1,0x13,0x39,0x00,0x1B,0x38,0x00,0xE4,
+0x00,0x00,0x0D,0x9A,0xE0,0xD6,0xE5,0xFF,0x66,0xE4,0x00,0x00,0x63,0x0F,0x39,0x02,
+0x9E,0xE4,0x0F,0x38,0x00,0x43,0x03,0xBC,0x43,0x24,0xBC,0xD6,0xFA,0xFF,0x96,0x9A,
+0xE0,0x54,0xA5,0x03,0xE4,0x00,0x00,0x25,0x43,0x57,0xC4,0x43,0x77,0xCC,0x9E,0xE1,
+0x13,0x7B,0x00,0x1B,0x7A,0x00,0xD4,0xB7,0xFF,0x95,0x85,0x29,0x1C,0x21,0xD8,0x0D,
+0x21,0x24,0x0D,0x41,0x20,0x0D,0x61,0x1C,0x0D,0x81,0x18,0x0D,0xA1,0x14,0x0D,0xC1,
+0x10,0x0D,0xE1,0x0C,0x0E,0x01,0x08,0xE4,0x00,0x5E,0xF2,0xC1,0x60,0x10,0x01,0xC0,
+0x60,0x00,0x21,0xFD,0x4B,0x00,0xC8,0xFC,0x63,0xB0,0xE4,0xC0,0x80,0x10,0x01,0xC0,
+0xA0,0x10,0x01,0xFC,0x84,0x00,0x00,0xFC,0xA5,0x01,0xC0,0x40,0xA5,0x25,0xE4,0x00,
+0x59,0xC4,0x0C,0x0A,0x01,0x0C,0x0A,0x03,0x0C,0x0A,0x05,0x0C,0x0A,0x08,0xC2,0xE0,
+0x10,0x01,0xEC,0x17,0x00,0xB7,0x0C,0x0A,0x0C,0x9A,0xEA,0xC1,0xA0,0x10,0x01,0x0E,
+0xEA,0x11,0xEC,0x0D,0x04,0xC8,0x50,0x60,0x26,0xE4,0x00,0x1F,0x5C,0xC8,0x80,0xE1,
+0x00,0x98,0x60,0xE4,0x00,0x29,0xB8,0x98,0x63,0xE4,0x00,0x28,0xD4,0xE4,0x00,0x03,
+0x7C,0xC2,0xE0,0x10,0x01,0x9B,0x3C,0xF3,0x17,0x08,0x30,0x47,0x18,0xCC,0xFC,0x60,
+0x0B,0xB8,0xFB,0x17,0x08,0x30,0x04,0x80,0x5B,0xC8,0x84,0x8D,0x80,0xE4,0x00,0x29,
+0x08,0x98,0x61,0xC1,0x80,0x10,0x01,0xE4,0x00,0x28,0xFC,0x99,0xC1,0xC1,0x60,0x10,
+0x01,0xC1,0xE0,0x10,0x01,0xC2,0x00,0x10,0x01,0xE4,0x00,0x28,0xC8,0x0E,0xEA,0x0E,
+0x22,0xE0,0x2C,0xD2,0xE1,0x0A,0xEE,0xE4,0x00,0x00,0xC5,0xE4,0x00,0x58,0xB2,0xE4,
+0x00,0x28,0xDC,0x0C,0x6A,0x13,0xE4,0x00,0x28,0xCE,0x0C,0x6A,0x17,0xE4,0x00,0x28,
+0xC0,0x0C,0x6A,0x1B,0xE4,0x00,0x28,0xB2,0x0C,0x6A,0x19,0xEA,0xEC,0x04,0xC7,0xC6,
+0xF7,0xFF,0xDF,0xEE,0xEC,0x04,0xC7,0xEA,0xEC,0x04,0xC7,0xC6,0xF7,0xFF,0x7F,0xEE,
+0xEC,0x04,0xC7,0x0D,0xCA,0x0C,0xEA,0xEB,0x0C,0x03,0x52,0xF7,0x80,0xEC,0x0D,0x04,
+0xC8,0xEE,0xEB,0x0C,0x03,0x98,0x61,0xE4,0x00,0x1A,0x54,0x98,0x60,0xE4,0x00,0x2D,
+0x1C,0xE4,0x00,0x2A,0x14,0xE4,0x00,0x01,0xF7,0xEE,0xED,0x04,0xCA,0x22,0xE0,0x2C,
+0xD2,0xE1,0x07,0x86,0xE4,0x00,0x00,0x9B,0x98,0x61,0xE4,0x00,0x1A,0x8C,0xD0,0x61,
+0x07,0x16,0xE4,0x00,0x1C,0xE2,0x20,0x64,0xAA,0xE4,0x00,0x1C,0xC0,0xEA,0xEB,0x0C,
+0x03,0xFF,0x00,0xFF,0x7F,0x46,0xF7,0xC4,0xEC,0x0F,0x0B,0x10,0xEE,0xEB,0x0C,0x03,
+0xED,0xCD,0x04,0xC8,0xE4,0x00,0x60,0x46,0xE4,0x00,0x5F,0xE6,0xE4,0x00,0x01,0x69,
+0xE4,0x00,0x1C,0xC2,0x20,0x67,0x54,0x98,0x61,0xE4,0x00,0x1C,0x22,0xE4,0x00,0x01,
+0x47,0x0A,0xEA,0x01,0xC6,0xF7,0x01,0x00,0xD2,0xE0,0x04,0xC2,0xE4,0x00,0x27,0x62,
+0x0A,0xEA,0x13,0x0B,0x0A,0x11,0x40,0x63,0xBD,0x5E,0xE3,0x04,0xD7,0x17,0x04,0x25,
+0xE4,0x00,0x27,0x3A,0x0C,0x6A,0x13,0x0A,0xEA,0x01,0xC6,0xF7,0xFE,0xFF,0x0E,0xEA,
+0x01,0xE4,0x00,0x5A,0x0E,0xE4,0x00,0x60,0x04,0xE4,0x00,0x5F,0x44,0xEE,0xEF,0x0B,
+0x12,0xEE,0xF0,0x0E,0x0C,0xE4,0x00,0x5B,0x06,0x98,0x61,0xE4,0x00,0x9E,0x12,0xE4,
+0x00,0x5B,0x8A,0x98,0x61,0xE4,0x00,0x5B,0xCA,0x0C,0x61,0x04,0xE4,0x00,0x47,0xB0,
+0x0C,0x61,0x06,0xE4,0x00,0x5C,0xDA,0xE4,0x00,0x94,0x2A,0xE4,0x00,0x80,0x80,0xEA,
+0xEB,0x0C,0x03,0x56,0xF7,0x80,0x22,0xE0,0xA8,0x98,0x60,0xE4,0x00,0x47,0x5E,0x0A,
+0xEA,0x01,0xC6,0xF7,0x01,0x00,0x22,0xE3,0xE4,0x0A,0xEA,0x01,0xC6,0xF7,0xFE,0xFF,
+0x0E,0xEA,0x01,0x0D,0xCA,0x0C,0xEC,0x0D,0x04,0xC8,0x98,0x61,0xE4,0x00,0x18,0x4A,
+0x0E,0xEA,0x0A,0xFC,0x60,0x1E,0x7F,0x9E,0xE1,0x0E,0xEA,0x08,0x0C,0x8A,0x0A,0xE4,
+0x00,0x27,0x70,0xE4,0x00,0x26,0x40,0xE7,0xFF,0xFD,0x05,0xE4,0x00,0xB6,0x35,0x9C,
+0x38,0x0D,0x21,0x04,0x0D,0x41,0x00,0xE4,0x00,0xB7,0x90,0x98,0x69,0xE4,0x00,0xA8,
+0x0A,0x98,0x60,0xFC,0x80,0x28,0x0A,0xE4,0x00,0xAA,0x4E,0x98,0x61,0xFC,0x80,0x28,
+0x0A,0xE4,0x00,0xAA,0x3A,0x98,0x60,0x50,0x80,0x14,0xE4,0x00,0xAF,0x34,0x98,0x60,
+0x98,0x8C,0xE4,0x00,0xAE,0x56,0x98,0x61,0x50,0x80,0x14,0xE4,0x00,0xAF,0x12,0x98,
+0x61,0x98,0x8C,0x99,0x40,0xE4,0x00,0xAE,0x30,0x88,0x6A,0x98,0x84,0x9D,0x41,0xE4,
+0x00,0xB4,0x9C,0x5D,0x4A,0x00,0xD1,0x44,0xFF,0x9E,0x98,0x60,0x05,0x40,0xFF,0xC9,
+0x4A,0xFF,0xFF,0x88,0x8A,0xE4,0x00,0xAC,0x8A,0x88,0x8A,0x98,0x60,0xE4,0x00,0xAA,
+0x12,0x88,0x8A,0x0D,0x21,0x06,0x0D,0x41,0x02,0x98,0x60,0x9C,0x28,0xE4,0x00,0xAA,
+0xF3,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x04,0xEF,0x1C,0x21,0xB0,0x0E,0xE1,0x10,0xC2,
+0xE0,0x10,0x01,0xEA,0xF7,0x04,0xCC,0x0D,0x41,0x4C,0x0D,0x61,0x48,0x0D,0x81,0x44,
+0x0D,0xE1,0x38,0x0E,0x01,0x34,0x0E,0x21,0x30,0x0E,0x41,0x2C,0x0E,0x61,0x28,0x0E,
+0x81,0x24,0x0D,0xA1,0x40,0x0D,0xC1,0x3C,0x0E,0xA1,0x20,0x0E,0xC1,0x1C,0x0E,0xE1,
+0x0C,0xC2,0x60,0x10,0x01,0xC2,0x40,0x10,0x01,0xFE,0x73,0x04,0xEC,0xFE,0x52,0x04,
+0xD4,0xC2,0x20,0x10,0x01,0xC2,0x00,0x10,0x01,0xFE,0x31,0x04,0xD8,0xFE,0x10,0x04,
+0xDC,0xC1,0xE0,0x10,0x01,0xC1,0x8F,0xFF,0xE1,0xFD,0xEF,0x04,0xE8,0x9B,0x80,0xC2,
+0x98,0x00,0x21,0xC0,0xD8,0x00,0x21,0x13,0x53,0x00,0x0E,0xF2,0x02,0x0D,0x51,0x02,
+0x0F,0xB0,0x02,0x0F,0x6F,0x02,0x99,0x60,0xC9,0x8C,0xFF,0xFF,0x88,0xFC,0x53,0x20,
+0xFF,0xFE,0x94,0xB7,0x28,0xFC,0xC6,0xB8,0x78,0xE4,0x00,0x01,0xC5,0x41,0x14,0xC4,
+0x9F,0x01,0x11,0x08,0x00,0x8D,0xA8,0x5D,0xAD,0x00,0xE4,0x00,0x00,0x11,0x9B,0x00,
+0x89,0xB8,0x5D,0x18,0x00,0xD7,0xC8,0xFF,0x45,0xC3,0x18,0x00,0x21,0xFF,0x18,0xB7,
+0x28,0x8F,0x0B,0x99,0x00,0x12,0xB8,0x00,0xCF,0x0D,0x00,0x0A,0x1E,0xD5,0xFF,0x8F,
+0x06,0x0E,0xC1,0x08,0x0F,0x01,0x14,0xE4,0x00,0x01,0x37,0x0F,0x01,0x16,0xCD,0xE8,
+0x00,0x0A,0x8D,0xF8,0x0A,0xCF,0x00,0x0E,0xC1,0x04,0x0F,0x01,0x0E,0x0E,0xC1,0x0A,
+0xD5,0x16,0x00,0x3A,0x0B,0x0F,0x0A,0x0D,0xE1,0x06,0xD5,0xE4,0x03,0xB4,0xD4,0x98,
+0x03,0x94,0x8D,0xCD,0x5D,0xCE,0x00,0xCF,0x0E,0x00,0x0A,0x8F,0x06,0x09,0xF8,0x06,
+0x0B,0x18,0x08,0x4F,0x18,0x50,0x41,0xEF,0x23,0x8D,0xF8,0xFD,0xEF,0x02,0x00,0x4D,
+0xEF,0x52,0x5D,0xEF,0x06,0x41,0xEF,0x7B,0x43,0x03,0x7D,0x4E,0xD8,0xFA,0x47,0x16,
+0xC6,0x43,0x18,0xB5,0xD7,0x0C,0x01,0x4C,0xC3,0x20,0x1F,0xE4,0x20,0x00,0x2D,0x89,
+0x5D,0x89,0x97,0x8B,0x3A,0x88,0xFC,0x8B,0xAA,0x8A,0xEC,0x8B,0x59,0x8B,0x87,0x8B,
+0x78,0x89,0x4F,0x89,0x98,0x88,0xEE,0x8B,0x3E,0xE4,0x00,0x00,0x2F,0xC3,0x40,0x1F,
+0xE0,0x20,0x00,0x1D,0xD6,0xF8,0x00,0x60,0x8B,0xAF,0x8A,0xF8,0x8B,0x5E,0x8B,0x8E,
+0x9D,0x01,0x5D,0xC8,0x00,0xD6,0xAE,0xFB,0x35,0x9D,0x61,0x5F,0xCB,0x00,0x0E,0xC1,
+0x12,0xD6,0xDE,0xF9,0x6D,0xC3,0x00,0x10,0x01,0x1B,0x53,0x00,0xFF,0x18,0x04,0xE8,
+0x0E,0xF2,0x00,0x0D,0x51,0x00,0x0F,0xB0,0x00,0x0F,0x78,0x00,0xC3,0x20,0x1F,0xE0,
+0x20,0x01,0x55,0xCF,0x9C,0x00,0x0A,0xCC,0xE7,0x00,0x0A,0x8C,0xE6,0x0B,0x07,0x04,
+0x4F,0x18,0x50,0x8C,0xDC,0x08,0x67,0x02,0x0B,0x86,0x02,0x40,0x63,0x23,0x0B,0x46,
+0x04,0x8C,0x78,0x43,0x1B,0xBC,0xFC,0x63,0x02,0x00,0x4C,0x63,0x52,0x23,0x00,0xA8,
+0xC2,0xE0,0x1F,0xE0,0x20,0x00,0x8D,0x40,0x63,0xBB,0x40,0x9C,0x23,0x4E,0xFA,0x50,
+0x8E,0xE4,0xFE,0xF7,0x02,0x00,0x4E,0xF7,0x52,0x43,0x77,0xDB,0x8C,0x7B,0x40,0x63,
+0xC0,0xE4,0x00,0x00,0x0D,0x88,0x64,0x0E,0xC1,0x1E,0x0E,0xA1,0x22,0x0E,0x81,0x26,
+0x0E,0x61,0x2A,0x0E,0x41,0x2E,0x0E,0x21,0x32,0x0E,0x01,0x36,0x0D,0xE1,0x3A,0x0D,
+0xC1,0x3E,0x0D,0xA1,0x42,0x0D,0x81,0x46,0x0D,0x61,0x4A,0x0D,0x41,0x4E,0x1B,0x25,
+0x00,0x1C,0x21,0x50,0x85,0x29,0x8B,0x23,0xC2,0xE0,0x10,0x01,0x5C,0xA5,0x00,0xF2,
+0xF7,0x04,0xEF,0x98,0x60,0xD6,0xE5,0x0C,0xB9,0xD3,0x3F,0x0C,0x98,0xC2,0xE0,0x10,
+0x01,0xC3,0x00,0x10,0x01,0xC3,0x60,0x10,0x01,0xF2,0xF7,0x04,0xEE,0xFF,0x18,0x04,
+0xCE,0xFF,0x7B,0x04,0xED,0x22,0xE8,0x42,0x13,0x18,0x00,0x5F,0x08,0x9B,0x20,0x00,
+0x51,0xE4,0x00,0x01,0x3B,0xD2,0xE1,0x04,0xCE,0x13,0x18,0x00,0x5F,0x05,0x93,0x20,
+0x02,0x3D,0x24,0xA4,0x4B,0x9B,0x43,0x43,0x5A,0x2D,0x4F,0x5A,0x08,0x5F,0x5A,0x00,
+0xE4,0x00,0x00,0x37,0x20,0xA8,0x54,0x9B,0x44,0x43,0x5A,0x2D,0x4F,0x5A,0x08,0x5F,
+0x5A,0x00,0x20,0xAC,0xEE,0xE4,0x00,0x00,0x51,0x9B,0x43,0x9A,0xE0,0x13,0x9B,0x00,
+0x8B,0x17,0xE4,0x00,0x00,0x27,0x4F,0xB8,0x08,0x9F,0x01,0x8F,0xBC,0x5F,0x18,0x00,
+0x8E,0xFD,0x5E,0xF7,0x00,0xD7,0x05,0xFF,0x8E,0xE4,0x00,0x00,0x49,0x5E,0xE0,0x21,
+0x53,0x00,0x1D,0x52,0xE0,0x2F,0x4A,0xF8,0xB8,0xE4,0x00,0x00,0x4B,0x5E,0xE0,0x29,
+0x53,0x00,0x41,0x52,0xE0,0x29,0x4A,0xF8,0xB8,0xE4,0x00,0x00,0x2B,0x27,0x04,0x33,
+0x9F,0x9F,0x4F,0x18,0x08,0xE4,0x00,0x00,0x8B,0x9B,0x0A,0x20,0xA9,0x10,0x13,0x1B,
+0x00,0x9C,0xBF,0x9F,0x1F,0x4C,0xA5,0x08,0x8F,0x05,0xE4,0x00,0x00,0x65,0x9B,0x43,
+0x13,0xBB,0x00,0x43,0x5A,0x2D,0x9A,0xE0,0x4F,0x5A,0x08,0x8B,0x77,0x5F,0x5A,0x00,
+0xE4,0x00,0x00,0x21,0x8F,0x9D,0x9F,0x61,0x8E,0xFC,0x5F,0x7B,0x00,0x5E,0xF7,0x00,
+0x4F,0x9B,0x08,0xD7,0x65,0xFF,0x8E,0x1F,0x1D,0xFF,0x8F,0x1C,0x5F,0x18,0x00,0x4F,
+0x5A,0x08,0xC3,0xB8,0x00,0x21,0xFF,0xBD,0xB7,0x0C,0x8F,0xBA,0x9B,0x40,0xE4,0x00,
+0x01,0x0B,0x4F,0x7A,0x08,0x8F,0x7D,0x0B,0x9B,0x00,0xD7,0x3C,0x03,0xBC,0x0B,0x7B,
+0x02,0xD7,0x79,0x03,0x84,0x8E,0xFA,0xC3,0xB8,0x00,0x21,0xCF,0x17,0x00,0x06,0xFF,
+0xBD,0xB7,0x2E,0x8F,0x1D,0x1F,0x57,0x01,0x14,0xD8,0x00,0xCF,0x5A,0x00,0x06,0x09,
+0x18,0x02,0x8F,0x5D,0x98,0x60,0x0B,0xB8,0x04,0x14,0xBA,0x00,0x0B,0xDA,0x02,0x0B,
+0x1A,0x04,0xD7,0x9B,0x02,0x52,0x42,0xF9,0xDD,0x40,0x77,0x33,0x43,0x3C,0xCD,0x43,
+0x59,0x2B,0x43,0xD9,0xF3,0x8F,0x43,0x40,0x77,0x43,0x43,0x5A,0x23,0x8C,0x7E,0x8C,
+0x7A,0x42,0xF7,0xEB,0x40,0x83,0x23,0x97,0x41,0x43,0x39,0xC3,0xCB,0x5A,0x86,0xA0,
+0x8F,0x37,0x40,0x64,0xD0,0x43,0x7C,0xDD,0x8C,0x79,0x40,0x63,0xD8,0xE4,0x00,0x00,
+0x1F,0x9F,0x41,0x5F,0x7A,0x00,0xD7,0x1B,0xFB,0xE5,0x98,0x60,0x85,0x29,0xC2,0xE0,
+0x10,0x01,0xF8,0x77,0x04,0xEE,0xC2,0xE0,0x10,0x01,0xF8,0x97,0x04,0xE4,0xC2,0xE0,
+0x10,0x01,0xF8,0xB7,0x04,0xCE,0xC2,0xE0,0x10,0x01,0xF8,0xD7,0x04,0xED,0xC2,0xE0,
+0x10,0x01,0xEC,0xF7,0x04,0xCD,0x85,0x29,0x9A,0xFF,0x1C,0x21,0xD8,0x0D,0xE1,0x0C,
+0x1A,0xE1,0x07,0xC1,0xE0,0x10,0x01,0xFD,0xEF,0x04,0xEC,0x1A,0xEF,0x00,0x52,0xE0,
+0xFF,0xC3,0x00,0x10,0x01,0x0D,0x41,0x20,0x0D,0x61,0x1C,0x0D,0xA1,0x14,0x0D,0xC1,
+0x10,0xCB,0x20,0xFF,0xFF,0xC1,0xC0,0x10,0x01,0xEF,0x38,0x04,0xD0,0xFD,0xCE,0x04,
+0xE8,0xC1,0xA0,0x10,0x01,0x0E,0xEE,0x00,0xFD,0xAD,0x04,0xD4,0x0D,0x21,0x24,0x0E,
+0xED,0x00,0x0D,0x81,0x18,0xC2,0xE0,0x10,0x01,0x0E,0x01,0x08,0x89,0x63,0xF3,0x17,
+0x04,0xEE,0x89,0x44,0x88,0x65,0xC2,0xE0,0x10,0x01,0x23,0x08,0x56,0xC3,0x00,0x10,
+0x01,0xF3,0x18,0x04,0xCE,0x5F,0x08,0x9B,0x20,0x00,0x61,0xE4,0x00,0x00,0x37,0x23,
+0x04,0x5E,0xC3,0x00,0x10,0x01,0xF3,0x18,0x04,0xCE,0x5F,0x05,0x93,0x20,0x00,0x25,
+0x9B,0x05,0xE4,0x00,0x00,0x0D,0x9B,0x04,0xFB,0x17,0x04,0xEF,0xC2,0x00,0x10,0x01,
+0x0E,0xEB,0x02,0xEE,0xF0,0x04,0xD0,0x0A,0xE6,0x0A,0x0C,0x8B,0x02,0xD4,0x97,0x04,
+0xCC,0xC2,0xE0,0x10,0x01,0xEB,0x17,0x09,0x39,0x53,0x18,0x01,0x1C,0xA1,0x07,0xEF,
+0x17,0x09,0x39,0xE7,0xFF,0xF6,0x9C,0x0C,0x6B,0x00,0x0C,0x8A,0x02,0xED,0x90,0x04,
+0xD2,0x10,0xAF,0x00,0x88,0x6C,0xE7,0xFF,0xFA,0xC0,0xC2,0xE0,0x10,0x01,0x89,0x63,
+0xEC,0x77,0x04,0xE0,0x10,0xA1,0x07,0x0C,0x8A,0x02,0x88,0x6C,0xE7,0xFF,0xFA,0x94,
+0xC3,0x00,0x10,0x01,0xEC,0x78,0x04,0xF0,0x0F,0x6E,0x02,0x0F,0x2D,0x02,0x0F,0x4A,
+0x02,0x43,0x1B,0xCC,0x23,0x00,0xEC,0xC3,0x20,0x1F,0xE0,0x20,0x00,0xD1,0xC3,0x80,
+0x10,0x01,0xEF,0xBC,0x04,0xDA,0xC3,0x80,0x10,0x01,0xEF,0x9C,0x04,0xDE,0x43,0xBD,
+0xE5,0x4F,0x9D,0xFA,0x47,0xBC,0xEE,0x43,0x9D,0xE5,0xD7,0x1C,0x00,0xAC,0x41,0x6B,
+0xDB,0x42,0xE3,0xCB,0x8E,0xEB,0x43,0x17,0xC0,0x8F,0x58,0xE4,0x00,0x01,0x55,0x42,
+0xFA,0x1C,0xE4,0x00,0x01,0x5B,0xC9,0x80,0x07,0xFF,0x42,0xEC,0xBD,0xD6,0xE4,0x05,
+0x2C,0xC2,0xE0,0x10,0x01,0xEB,0x17,0x09,0x39,0x53,0x18,0x01,0x40,0x8C,0x25,0xEF,
+0x17,0x09,0x39,0x1C,0xA1,0x07,0xE7,0xFF,0xF5,0x56,0x40,0x6C,0x1D,0x0C,0x6B,0x00,
+0xEE,0xF0,0x04,0xD2,0x0C,0x8A,0x02,0x41,0x8C,0xBD,0x10,0xAF,0x00,0x88,0x6C,0xE7,
+0xFF,0xF9,0x6E,0xC2,0xE0,0x10,0x01,0x89,0x63,0xEC,0x77,0x04,0xE0,0x10,0xA1,0x07,
+0x0C,0x8A,0x02,0x88,0x6C,0xE7,0xFF,0xF9,0x42,0xC3,0x00,0x10,0x01,0xEC,0x78,0x04,
+0xF0,0x0F,0x6E,0x02,0x0F,0x2D,0x02,0x0F,0x4A,0x02,0x43,0x1B,0xCC,0x23,0x00,0xFC,
+0xC3,0x20,0x1F,0xE0,0x20,0x00,0xE1,0xC3,0x80,0x10,0x01,0xEF,0xBC,0x04,0xDA,0xC3,
+0x80,0x10,0x01,0xEF,0x9C,0x04,0xDE,0x43,0xBD,0xE5,0x4F,0x9D,0xFA,0x47,0xBC,0xEE,
+0x43,0x9D,0xE5,0xD7,0x1C,0x00,0xCC,0x41,0x6B,0xDB,0x42,0xE3,0xCB,0x8E,0xEB,0x43,
+0x17,0xC0,0x43,0x5A,0xC5,0x0F,0x4A,0x00,0xE4,0x00,0x00,0x15,0x42,0xFA,0x1D,0x0E,
+0xEA,0x00,0x0E,0x01,0x0A,0x0D,0xE1,0x0E,0x0D,0xC1,0x12,0x0D,0xA1,0x16,0x0D,0x81,
+0x1A,0x0D,0x61,0x1E,0x0D,0x41,0x22,0x0D,0x21,0x26,0x1C,0x21,0x28,0x85,0x29,0x1C,
+0x21,0xD0,0x0D,0x41,0x28,0x0D,0x61,0x24,0x0D,0x81,0x20,0x0D,0xA1,0x1C,0x0D,0xC1,
+0x18,0x0D,0xE1,0x14,0x0E,0x01,0x10,0x0E,0x21,0x0C,0x0E,0x41,0x08,0x5E,0x23,0x00,
+0x0E,0x61,0x04,0x56,0x11,0x03,0x4E,0xF1,0x11,0x5E,0x00,0x09,0x99,0xC0,0x4A,0x41,
+0x01,0x99,0x80,0x9A,0x64,0x0D,0x21,0x2C,0x8E,0x57,0x89,0x44,0x89,0xAE,0x89,0x6C,
+0x99,0xE0,0x42,0x73,0x25,0xE4,0x00,0x00,0xF3,0x42,0xF3,0x54,0xD6,0xF1,0x01,0xD8,
+0x22,0x04,0x4A,0x51,0xC0,0x10,0x11,0x6A,0x00,0x89,0xAE,0x51,0x80,0x10,0xE4,0x00,
+0x00,0x6B,0x22,0x08,0x4A,0x51,0xC0,0x10,0x11,0x6A,0x00,0x11,0x8A,0x01,0x89,0xAE,
+0xE4,0x00,0x00,0x47,0x22,0x0C,0x7E,0x11,0x6A,0x00,0x11,0x8A,0x01,0x11,0xAA,0x02,
+0x51,0xC0,0x10,0xE4,0x00,0x00,0x21,0x11,0x6A,0x00,0x11,0x8A,0x01,0x11,0xAA,0x02,
+0x11,0xCA,0x03,0x4E,0xEC,0x80,0x4C,0x8C,0xC0,0x8C,0x97,0x4E,0xEE,0x80,0x4F,0x0B,
+0x40,0x4C,0xAE,0xC0,0x8C,0xB7,0x4E,0xED,0x40,0x88,0x6F,0x8C,0x8B,0x8C,0xAD,0x8C,
+0x98,0x8C,0xB7,0x9D,0xE1,0xE4,0x00,0x9A,0xCA,0x5D,0xEF,0x00,0x9D,0x44,0xD5,0xF2,
+0xFC,0x5E,0x0E,0x61,0x06,0x0E,0x41,0x0A,0x0E,0x21,0x0E,0x0E,0x01,0x12,0x0D,0xE1,
+0x16,0x0D,0xC1,0x1A,0x0D,0xA1,0x1E,0x0D,0x81,0x22,0x0D,0x61,0x26,0x0D,0x41,0x2A,
+0x0D,0x21,0x2E,0x1C,0x21,0x30,0x85,0x29,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x00,0xD6,
+0x5E,0xE0,0x41,0x1C,0x21,0xE8,0x0D,0x61,0x0C,0x0D,0x81,0x08,0x0D,0xA1,0x04,0x0D,
+0x21,0x14,0x0D,0x41,0x10,0x89,0x63,0x5D,0x84,0x00,0x49,0xA1,0x01,0xE4,0x00,0x4F,
+0x48,0xC3,0x14,0x00,0x01,0xCB,0x18,0x7A,0x30,0x0A,0xF8,0x01,0xC6,0xF7,0x01,0x00,
+0x5E,0xF7,0x04,0x22,0xE3,0xD8,0xFC,0x60,0x01,0x00,0x99,0x40,0xE4,0x00,0x16,0x5A,
+0xE4,0x00,0x00,0x31,0x88,0x6A,0x98,0x81,0x88,0xAD,0x9D,0x41,0xE4,0x00,0xAB,0x6A,
+0x5D,0x4A,0x00,0x0C,0x6B,0x01,0x9D,0x62,0xD5,0x4C,0xFF,0x66,0x0D,0xA1,0x06,0x0D,
+0x81,0x0A,0x0D,0x61,0x0E,0x0D,0x41,0x12,0x0D,0x21,0x16,0x1C,0x21,0x18,0x85,0x29,
+0xFC,0x21,0xFD,0xF0,0xED,0x41,0x02,0x08,0xED,0xC1,0x01,0xF8,0xED,0xE1,0x01,0xF4,
+0xEE,0x01,0x01,0xF0,0xED,0x21,0x02,0x0C,0xED,0x61,0x02,0x04,0xED,0x81,0x02,0x00,
+0xED,0xA1,0x01,0xFC,0xEE,0x21,0x01,0xEC,0xEE,0x41,0x01,0xE8,0xEE,0x61,0x01,0xE4,
+0xEE,0x81,0x01,0xE0,0xC2,0x00,0x10,0x01,0xC1,0xC0,0x10,0x01,0xC1,0xE0,0x10,0x01,
+0x89,0x43,0xFE,0x10,0x07,0xB4,0xFD,0xCE,0x05,0xD4,0xFD,0xEF,0x05,0xE0,0x20,0x60,
+0x30,0x20,0x68,0x98,0x20,0x64,0x30,0x24,0x64,0x63,0x99,0x80,0xE4,0x00,0x00,0x0D,
+0x99,0x81,0xCD,0x8C,0x00,0x12,0x51,0x60,0x12,0x8D,0x90,0xE4,0x00,0x00,0x41,0xD0,
+0x64,0x00,0x82,0xD0,0x65,0x00,0xA2,0x99,0x80,0x89,0x6C,0xE4,0x00,0x00,0x21,0x89,
+0x8F,0x99,0x63,0xE4,0x00,0x00,0x11,0x89,0x8E,0x99,0x68,0x9A,0xE0,0x8A,0x81,0x53,
+0x20,0x10,0xE4,0x00,0x00,0x19,0x43,0x14,0xBC,0x9E,0xE1,0x1B,0x38,0x00,0x5F,0x17,
+0x00,0xD5,0x78,0xFF,0xAD,0x88,0x6B,0x88,0x81,0x99,0xA3,0xE7,0xFF,0xFB,0xE8,0x8A,
+0x81,0xFE,0x20,0xFE,0xB0,0xCA,0x40,0x01,0x50,0x52,0x60,0x3F,0x1C,0x61,0x60,0x88,
+0x8B,0xE7,0xFF,0xFD,0x8E,0x1F,0x21,0x60,0x8B,0x01,0x9B,0x41,0xE4,0x00,0x00,0x93,
+0x0A,0xF9,0x00,0xC2,0xFF,0xD5,0xEC,0x20,0x00,0x39,0x43,0x71,0xBD,0xC3,0x60,0x2A,
+0x0C,0xE4,0x00,0x00,0x0F,0x5E,0xE0,0x19,0x4B,0x61,0x01,0x23,0x60,0x98,0xFE,0xF7,
+0x01,0x50,0x13,0x58,0x00,0x42,0xF7,0x90,0x8E,0xFA,0x5E,0xF7,0x06,0x26,0xFC,0x34,
+0x5E,0xE7,0xF1,0x4A,0xF7,0x98,0xE4,0x00,0x00,0x0D,0x9A,0xE0,0x1A,0xF8,0x00,0x9B,
+0x40,0x9F,0x01,0x9F,0x22,0x42,0xF8,0xA5,0x5E,0xF7,0x00,0xD5,0x77,0xFD,0xAD,0x23,
+0x40,0x24,0x9A,0xE0,0xE4,0x00,0x00,0x51,0x88,0x6B,0x88,0x81,0x9D,0xBF,0xE7,0xFF,
+0xFA,0xE2,0x5D,0xAD,0x00,0x21,0xA2,0x1E,0xE7,0xFF,0xFF,0xD5,0x43,0x0C,0xBC,0x1F,
+0x21,0x00,0x8F,0x37,0x9E,0xE1,0x13,0x39,0x00,0x1B,0x38,0x00,0x5F,0x17,0x00,0xD5,
+0x78,0xFF,0x6D,0x21,0x40,0x74,0x21,0x48,0x38,0x21,0x44,0x9C,0xD1,0x44,0x01,0xEA,
+0xD1,0x45,0x02,0x5A,0x99,0x60,0x99,0x80,0x88,0x8B,0x89,0x4C,0xE4,0x00,0x00,0x9B,
+0xC1,0x80,0x10,0x01,0x99,0x60,0x88,0x90,0xFD,0x8C,0x09,0x74,0xE4,0x00,0x00,0x2D,
+0xC0,0x80,0x10,0x01,0xC1,0x80,0x10,0x01,0x99,0x61,0xFC,0x84,0x07,0xC6,0xFD,0x8C,
+0x09,0xBC,0x51,0x40,0x12,0xE4,0x00,0x00,0x49,0xC1,0x80,0x10,0x01,0x99,0x68,0x88,
+0x8F,0xFD,0x8C,0x0B,0x04,0x99,0x43,0xE4,0x00,0x00,0x25,0xC1,0x80,0x10,0x01,0x99,
+0x6D,0x88,0x8E,0xFD,0x8C,0x0D,0xE0,0x99,0x48,0x88,0x6A,0xE7,0xFF,0xF9,0xC8,0xFD,
+0xA1,0x01,0x20,0x88,0x8A,0x88,0x6D,0xE7,0xFF,0xFB,0x82,0x9A,0xE0,0xE4,0x00,0x00,
+0x33,0x4F,0x17,0x10,0x4F,0x37,0x08,0x8F,0x0C,0x8F,0x2D,0x9E,0xE1,0x0B,0x39,0x00,
+0x4F,0x39,0x40,0x0F,0x38,0x00,0x5F,0x17,0x00,0xD5,0x58,0xFF,0x45,0x88,0x6B,0xE4,
+0x00,0x4C,0x3A,0xED,0x21,0x02,0x0E,0xEE,0x81,0x01,0xE2,0xEE,0x61,0x01,0xE6,0xEE,
+0x41,0x01,0xEA,0xEE,0x21,0x01,0xEE,0xEE,0x01,0x01,0xF2,0xED,0xE1,0x01,0xF6,0xED,
+0xC1,0x01,0xFA,0xED,0xA1,0x01,0xFE,0xED,0x81,0x02,0x02,0xED,0x61,0x02,0x06,0xED,
+0x41,0x02,0x0A,0xFC,0x21,0x02,0x10,0x85,0x29,0x9C,0x38,0xC2,0xE0,0x10,0x01,0x0D,
+0x21,0x04,0xFE,0xF7,0x07,0xB4,0x9B,0x00,0x13,0x37,0x00,0x13,0x57,0x12,0x8F,0x3A,
+0x4F,0x39,0x08,0x9E,0xE1,0x8F,0x19,0xC3,0x20,0x10,0x01,0xFF,0x39,0x07,0xC6,0xD6,
+0xF9,0xFF,0x4E,0xC2,0xE0,0x10,0x01,0xF3,0x57,0x05,0xE0,0xFE,0xF7,0x05,0xE0,0x13,
+0x37,0x02,0x13,0x77,0x01,0x98,0x60,0x42,0xFB,0xD4,0x98,0x80,0x8E,0xF9,0x53,0x20,
+0x4B,0x4E,0xF7,0x08,0x8E,0xF8,0x97,0x03,0x4E,0xF7,0x09,0xCB,0x18,0xD0,0x8F,0xCE,
+0xF7,0x03,0x5B,0x42,0xF7,0xC9,0xCE,0xF7,0x00,0x27,0xD6,0xF8,0x00,0xA1,0x97,0x2F,
+0x98,0x60,0xCB,0x39,0x42,0x3F,0x98,0x82,0xD6,0xF9,0x00,0x31,0x98,0x87,0xE4,0x00,
+0xA2,0xE4,0x0D,0x21,0x06,0x98,0x61,0x98,0x80,0x9C,0x28,0xE4,0x00,0xA2,0xCB,0x9C,
+0x38,0x98,0x80,0x0D,0x21,0x04,0x98,0x66,0xE4,0x00,0x27,0xA0,0x98,0x60,0xE7,0xFF,
+0xFA,0x84,0x98,0x81,0x98,0x66,0xE4,0x00,0x27,0x84,0x98,0x61,0xE7,0xFF,0xFA,0x68,
+0x98,0x87,0x98,0x66,0xE4,0x00,0x27,0x68,0x98,0x64,0xE7,0xFF,0xFA,0x4C,0x98,0x66,
+0x98,0x88,0xE4,0x00,0x27,0x4C,0x0D,0x21,0x06,0x98,0x65,0x9C,0x28,0xE7,0xFF,0xFA,
+0x27,0xC2,0xE0,0x10,0x01,0x5C,0xA0,0x29,0xF3,0x37,0x0B,0xEA,0x53,0x40,0x4C,0x52,
+0xE0,0x26,0xC3,0x60,0x10,0x01,0x4B,0x5A,0xB8,0xFF,0x7B,0x0A,0xB4,0x20,0x60,0x6C,
+0xE4,0x00,0x00,0x55,0x4F,0x17,0x08,0x9E,0xE1,0x8F,0x1B,0x0B,0x18,0x00,0xD7,0x58,
+0x00,0x78,0x98,0x61,0xE4,0x00,0x00,0xD9,0x9A,0xE0,0x43,0x40,0xD5,0x5F,0x17,0x00,
+0xD7,0x38,0xFF,0x25,0x98,0x60,0xE4,0x00,0x00,0xB5,0x20,0x67,0xEA,0x9A,0xE0,0x20,
+0x80,0xA6,0x9A,0xE0,0x43,0x80,0xD5,0xE4,0x00,0x00,0x7D,0x4F,0x17,0x08,0x8F,0x1B,
+0x0B,0x18,0x00,0x4F,0x98,0xFA,0x47,0x1C,0xC6,0x43,0x18,0xE5,0x0B,0x84,0x00,0xD7,
+0x1C,0x00,0x38,0x0F,0x04,0x01,0x9E,0xE1,0x5F,0x17,0x00,0xD7,0x38,0xFF,0x05,0xE7,
+0xFF,0xFF,0xA7,0x4F,0x17,0x08,0x8F,0x1B,0x0B,0x18,0x00,0xD7,0x98,0xFD,0x3C,0x9E,
+0xE1,0xD7,0x1A,0xFD,0x0C,0x5F,0x17,0x00,0xD7,0x38,0xFF,0x5D,0xE7,0xFF,0xFF,0x51,
+0x85,0x29,0xC2,0xE0,0x10,0x01,0xC3,0x00,0x10,0x01,0xF3,0xB7,0x0B,0xEA,0xC3,0xC0,
+0x10,0x01,0x9A,0xE0,0xFF,0x18,0x04,0xF8,0x8B,0x37,0xFF,0xDE,0x0A,0xB4,0xE4,0x00,
+0x00,0x5B,0x4F,0x57,0x08,0x0B,0x98,0x00,0x8F,0x5E,0x0B,0x5A,0x00,0x43,0x9A,0xE5,
+0x4F,0x7C,0xFA,0x47,0x9B,0xE6,0x43,0x7C,0xDD,0x5F,0x67,0x31,0x20,0x00,0x21,0x9F,
+0x21,0x5F,0x39,0x00,0x0F,0x58,0x01,0x9E,0xE1,0x9F,0x02,0x5F,0x57,0x00,0xD7,0xBA,
+0xFE,0xA5,0x5F,0x21,0x13,0x48,0x61,0x01,0x85,0x29,0xC2,0xE0,0x10,0x01,0xC3,0x40,
+0x10,0x01,0xF3,0x37,0x0B,0xEA,0xC3,0x60,0x10,0x01,0x9A,0xE0,0xFF,0x5A,0x04,0xF8,
+0xFF,0x7B,0x0A,0xB4,0xE4,0x00,0x00,0x29,0x4F,0x17,0x08,0x9E,0xE1,0x43,0x9A,0xC4,
+0x8F,0x1B,0x0B,0x18,0x01,0x0F,0x1C,0x01,0x5F,0x17,0x00,0xD7,0x38,0xFF,0x6D,0x85,
+0x29,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0E,0x09,0xC2,0xE0,0x10,0x01,0x9C,0x38,0xF8,
+0x17,0x09,0x49,0x0D,0x21,0x04,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0E,0x1A,0x20,0x64,
+0x26,0x98,0x60,0xE4,0x00,0x00,0x0D,0x98,0x64,0x98,0x80,0xE4,0x00,0x28,0xDA,0xC2,
+0xE0,0x10,0x01,0x0D,0x21,0x06,0xEC,0x17,0x04,0xF4,0x9C,0x28,0xE4,0x00,0x45,0xBF,
+0x1C,0x21,0xE8,0xC2,0xE0,0x10,0x01,0x0D,0x41,0x10,0xEB,0x17,0x00,0xC9,0x0D,0x21,
+0x14,0x0D,0x61,0x0C,0x0D,0x81,0x08,0x0C,0x01,0x07,0x89,0x43,0xC7,0x18,0x01,0x00,
+0x98,0x60,0xD3,0x00,0x06,0xBA,0xEB,0x17,0x00,0xC9,0xC7,0x18,0xFE,0xFF,0xEF,0x17,
+0x00,0xC9,0xE4,0x00,0x40,0x0C,0xE4,0x00,0x41,0x24,0x21,0x44,0x36,0x98,0x61,0xE4,
+0x00,0x84,0x2A,0xE4,0x00,0x00,0x11,0xE4,0x00,0x84,0x94,0xC1,0x60,0x10,0x01,0xEE,
+0xEB,0x04,0xF6,0x5E,0xE0,0x01,0x98,0x6A,0x98,0x83,0x0C,0x01,0x07,0x1D,0x81,0x06,
+0x49,0x8C,0x00,0xE4,0x00,0x4A,0x5C,0x98,0x61,0x88,0x8C,0x98,0xA1,0x88,0xCA,0xE7,
+0xFF,0xFC,0x44,0xC2,0xE0,0x10,0x01,0x20,0x60,0xEE,0xF3,0x17,0x0E,0x09,0x9F,0x01,
+0xFB,0x17,0x0E,0x09,0x0A,0xE1,0x06,0x5E,0xE2,0x59,0x20,0x00,0x45,0xC2,0xE0,0x10,
+0x01,0xF3,0x17,0x09,0x49,0x9F,0x01,0xFB,0x17,0x09,0x49,0x98,0x63,0x21,0x44,0x36,
+0x98,0x81,0xE4,0x00,0x7F,0x9A,0xE4,0x00,0x00,0x73,0xE4,0x00,0x80,0x10,0xE4,0x00,
+0x00,0x63,0xF8,0x17,0x0E,0x09,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x09,0x49,0xEE,0xEB,
+0x04,0xF6,0x22,0xE3,0x66,0x0A,0xE1,0x06,0x5E,0xEE,0x51,0x23,0xFF,0x41,0x21,0x44,
+0x36,0x98,0x61,0xE4,0x00,0x48,0xE2,0xE4,0x00,0x00,0x11,0xE4,0x00,0x49,0x34,0x9B,
+0x01,0xC2,0xE0,0x10,0x01,0x98,0x61,0xEF,0x17,0x04,0xF4,0xC2,0xE0,0x10,0x01,0xF3,
+0x17,0x0E,0x1A,0x9F,0x01,0xFB,0x17,0x0E,0x1A,0x0D,0x81,0x0A,0x0D,0x61,0x0E,0x0D,
+0x41,0x12,0x0D,0x21,0x16,0x1C,0x21,0x18,0x85,0x29,0x9C,0x38,0x0D,0x21,0x04,0x20,
+0x64,0x26,0x98,0x60,0xE4,0x00,0x00,0x0D,0x98,0x64,0x98,0x80,0xE4,0x00,0x26,0x78,
+0x0D,0x21,0x06,0x9C,0x28,0xE4,0x00,0x43,0x6D,0x98,0x81,0x98,0x60,0x88,0xA4,0xE7,
+0xFF,0xD2,0x59,0xC2,0xE0,0x10,0x01,0x98,0x61,0xF2,0xF7,0x0E,0x09,0xD2,0xEA,0x00,
+0x95,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x09,0x49,0x5E,0xE0,0xBB,0x48,0x61,0x01,0x85,
+0x29,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x0E,0x1A,0x5E,0xE1,0xDB,0x48,0x61,0x01,0x85,
+0x29,0xC3,0x20,0x10,0x01,0xFF,0x19,0x00,0x00,0x1E,0xF8,0x04,0x5C,0x63,0x04,0x0E,
+0xF8,0x00,0x9A,0xE0,0xE4,0x00,0x00,0x29,0x0F,0x38,0x02,0x43,0x44,0xBC,0x8F,0x37,
+0x13,0x5A,0x00,0x9E,0xE1,0x1B,0x59,0x00,0x5F,0x37,0x04,0xD4,0x79,0xFF,0x6D,0x9A,
+0xE1,0xEE,0xF8,0x00,0x84,0x85,0x29,0x9C,0x38,0x0D,0x21,0x04,0xC3,0x00,0x10,0x01,
+0xFE,0xF8,0x00,0x00,0xEC,0x17,0x00,0x9D,0xEC,0x17,0x00,0x9F,0xEC,0x17,0x00,0x84,
+0xFF,0x37,0x00,0x8C,0xEC,0x17,0x00,0xA1,0xEF,0x37,0x00,0x88,0x1F,0x37,0x04,0xC2,
+0xE0,0x10,0x01,0xEF,0x38,0x00,0x00,0xEB,0x17,0x00,0xCD,0x53,0x18,0x02,0xEF,0x17,
+0x00,0xCD,0xE4,0x00,0x9C,0x24,0x0D,0x21,0x06,0x9C,0x28,0x85,0x29,0x1C,0x21,0xE0,
+0x0D,0x41,0x18,0x0D,0x61,0x14,0x0D,0x81,0x10,0x0D,0xC1,0x08,0x0D,0x21,0x1C,0x0D,
+0xA1,0x0C,0x0D,0xE1,0x04,0xC1,0x80,0x10,0x01,0xE4,0x00,0x9D,0xA2,0xC1,0x60,0x10,
+0x01,0xC1,0xC0,0x10,0x01,0x5C,0x63,0x00,0xFD,0x8C,0x09,0x72,0xFD,0x6B,0x00,0xB4,
+0xFD,0x4E,0x00,0x00,0xD0,0x60,0x15,0x1A,0xE4,0x00,0x9D,0x8A,0x5C,0x63,0x00,0x20,
+0x60,0xD4,0xEC,0x0A,0x00,0x9D,0xE4,0x00,0x9D,0xC8,0xE4,0x00,0x00,0x55,0xEE,0xEA,
+0x00,0x8A,0xE9,0xEA,0x00,0x9D,0x8D,0xF7,0xE4,0x00,0x9D,0xD8,0x18,0x6F,0x00,0xEA,
+0xEA,0x00,0x9D,0xD2,0xEE,0x00,0x9D,0xEA,0xEA,0x00,0x9D,0x9E,0xE1,0x5E,0xF7,0x04,
+0xEE,0xEA,0x00,0x9D,0x99,0xA0,0xE4,0x00,0x9C,0xC2,0x5C,0x63,0x00,0x20,0x63,0x46,
+0xEE,0xEA,0x00,0x8A,0x13,0x17,0x00,0x5F,0x0A,0x09,0x20,0x00,0x69,0xEA,0xEA,0x00,
+0x9D,0xD2,0xE4,0x03,0x06,0xE4,0x00,0x9C,0xF6,0xEA,0xEA,0x00,0x9D,0x22,0xE1,0x9E,
+0xE4,0x00,0x07,0x11,0x13,0x17,0x00,0x23,0x08,0x3A,0xEA,0xEA,0x00,0x9D,0x22,0xE9,
+0x0E,0xE7,0xFF,0xFF,0xC9,0x13,0x17,0x00,0x23,0x04,0x3A,0xEA,0xEA,0x00,0x9D,0x22,
+0xE4,0xCA,0xE7,0xFF,0xFF,0xA7,0x13,0x17,0x00,0x5F,0x0A,0x29,0x20,0x00,0x7B,0x13,
+0x17,0x00,0x5F,0x0A,0x49,0x23,0xFE,0xE3,0x13,0x17,0x00,0x5F,0x0A,0x69,0x20,0x00,
+0x33,0x12,0xF7,0x00,0x5E,0xEA,0x89,0x20,0x00,0x29,0xEA,0xEA,0x00,0x9D,0x22,0xEE,
+0x9C,0x98,0x61,0xE4,0x00,0xAD,0xB4,0x9D,0xA1,0xC1,0xA4,0xE2,0x0E,0x23,0xFD,0xE7,
+0xE7,0xFF,0xFF,0x2B,0xEE,0xEA,0x00,0x8A,0x13,0x17,0x00,0xD3,0x00,0x0E,0x22,0x13,
+0x17,0x00,0x5F,0x0B,0x9B,0x20,0x06,0xE9,0x13,0x17,0x00,0x5F,0x0A,0x49,0x07,0x00,
+0x80,0x20,0x00,0xA9,0xEB,0x2A,0x00,0x9D,0xD3,0x24,0x0D,0x3E,0x13,0x37,0x01,0x13,
+0x57,0x02,0x12,0xF7,0x03,0x4F,0x39,0x40,0x47,0x39,0xD5,0xC3,0x22,0x7F,0xEE,0x20,
+0x06,0x41,0x8F,0x19,0x1A,0xF8,0x00,0xE4,0x00,0x03,0x11,0x13,0x37,0x00,0x5F,0x2A,
+0x69,0x20,0x02,0x99,0xEB,0x2A,0x00,0x9D,0xD3,0x23,0x0B,0xBE,0x13,0x57,0x01,0x13,
+0x37,0x02,0x4E,0xFA,0x40,0x46,0xF7,0xCD,0xCB,0x20,0x14,0x00,0xC2,0xE2,0x80,0x0A,
+0x4A,0xF7,0xC8,0x8E,0xF8,0x0E,0xEA,0x00,0xFE,0xE0,0x08,0x00,0xEE,0xEA,0x00,0xA1,
+0xE4,0x00,0x00,0x1D,0xE4,0x00,0x06,0x72,0x98,0x61,0xE4,0x00,0x06,0x9E,0xE4,0x00,
+0x9A,0x6C,0x5C,0x63,0x00,0x20,0x63,0xBC,0xE4,0x00,0x9B,0x3E,0xEC,0x0A,0x00,0x9F,
+0xE4,0x00,0x9A,0xFA,0xEB,0x0A,0x00,0x9F,0xEA,0xEA,0x00,0xA1,0xD7,0x17,0x01,0x06,
+0xEA,0xEA,0x00,0x9F,0xEA,0xEA,0x00,0xA1,0xE4,0x00,0x9A,0xFE,0xE4,0x00,0x9A,0xC2,
+0xEC,0x0A,0x00,0x9F,0xEC,0x0A,0x00,0xA1,0xE4,0x00,0x02,0x0F,0xE4,0x00,0x99,0xCA,
+0x5C,0x63,0x00,0x20,0x63,0x44,0xEA,0xEA,0x00,0x9F,0x0F,0x0A,0x02,0x8E,0xF8,0x10,
+0x77,0x00,0xE4,0x00,0x99,0x44,0xEA,0xEA,0x00,0x9F,0x9E,0xE1,0x5E,0xF7,0x04,0xEE,
+0xEA,0x00,0x9F,0xE7,0xFF,0xFF,0x63,0x13,0x17,0x00,0xD3,0x01,0x04,0x2E,0xEA,0xEA,
+0x00,0x9D,0xD2,0xE1,0x06,0x6E,0xFE,0xEA,0x00,0xA8,0xEE,0xEA,0x00,0xA4,0x12,0xEB,
+0x00,0x22,0xE0,0x4A,0x9A,0xE8,0x53,0x00,0x52,0xFA,0xEA,0x00,0xB0,0x9A,0xE8,0xE4,
+0x00,0x00,0x21,0x9A,0xE8,0x53,0x00,0x62,0xFA,0xEA,0x00,0xB0,0x52,0xE0,0x80,0x1F,
+0x20,0x81,0xFB,0x2A,0x00,0xA8,0x13,0x2B,0x00,0xFB,0x2A,0x00,0xA9,0xFB,0x0A,0x00,
+0xAA,0xF8,0x0A,0x00,0xAB,0x5E,0xF7,0x00,0xFA,0xEA,0x00,0xAC,0xF8,0x0A,0x00,0xAD,
+0xF8,0x0A,0x00,0xAE,0xC2,0xE0,0x10,0x01,0xF8,0x0A,0x00,0xAF,0xEB,0x17,0x00,0xCD,
+0xC7,0x18,0xFF,0xFD,0xEF,0x17,0x00,0xCD,0x12,0xEC,0x00,0x52,0xF7,0x01,0x9B,0x01,
+0x1A,0xEC,0x00,0xC2,0xE0,0x10,0x01,0xEF,0x17,0x07,0xD9,0xE4,0x00,0x00,0xA9,0x13,
+0x17,0x00,0x23,0x09,0x36,0xEB,0x0A,0x00,0x9D,0x23,0x09,0x1A,0x12,0xF7,0x01,0x22,
+0xE0,0x4A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x3D,0xF9,0x18,0x17,0x00,0xE4,0x00,0x00,
+0x29,0x22,0xE4,0x5E,0xC2,0xF4,0x00,0x01,0x9B,0x01,0xCA,0xF7,0x3D,0xF9,0x1B,0x17,
+0x00,0x12,0xF7,0x00,0xE4,0x00,0x00,0x2B,0x22,0xE8,0x5E,0xC3,0x14,0x00,0x01,0xCB,
+0x18,0x3D,0xF9,0x1A,0xF8,0x00,0x12,0xF8,0x00,0x5E,0xF7,0x00,0x1A,0xEB,0x00,0xEC,
+0x0A,0x00,0x9D,0xE4,0x00,0x02,0xAB,0xE4,0x00,0x97,0xDA,0x5C,0x63,0x00,0xD0,0x60,
+0x0A,0x52,0xE4,0x00,0x98,0xAA,0xE4,0x00,0x98,0x6E,0x50,0x60,0x20,0xE4,0x00,0x03,
+0x80,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x3D,0xF9,0x12,0xF7,0x00,0x1A,0xEB,0x00,0x99,
+0xA8,0x12,0xEB,0x00,0x22,0xE0,0x80,0x12,0xEB,0x00,0x22,0xE4,0x2A,0x51,0xA0,0x80,
+0xE4,0x00,0x00,0x29,0x12,0xEB,0x00,0x22,0xEB,0xD8,0x12,0xEB,0x00,0x22,0xEF,0xC0,
+0xC9,0xA0,0xFF,0xFF,0xEE,0xEA,0x00,0x86,0x22,0xE4,0x2E,0xED,0xAA,0x00,0xA1,0xEC,
+0x0A,0x00,0x84,0xE4,0x00,0x97,0xD4,0xEA,0xEA,0x00,0xA1,0xD5,0xB7,0x00,0x71,0x12,
+0xEC,0x00,0x56,0xF7,0x01,0xD2,0xE0,0x05,0x22,0xC2,0xE0,0x10,0x01,0xF3,0x17,0x0E,
+0x08,0x23,0x00,0x24,0x9F,0x1F,0xFB,0x17,0x0E,0x08,0xEC,0x0A,0x00,0x9F,0x12,0xEC,
+0x00,0x56,0xF7,0x01,0x22,0xE0,0x2C,0xF1,0xAA,0x00,0xB0,0xE4,0x00,0x00,0xAD,0xE9,
+0xAA,0x00,0xA1,0xE4,0x00,0x00,0x9D,0x12,0xEB,0x00,0x22,0xE0,0x42,0x12,0xEC,0x00,
+0x56,0xF7,0x01,0x22,0xE0,0x56,0xE4,0x00,0x00,0x3D,0xE4,0x00,0x96,0x28,0x5C,0x63,
+0x00,0x20,0x63,0xE4,0xE7,0xFF,0xFF,0xD3,0xEA,0xEA,0x00,0x9F,0xEF,0x0A,0x00,0xA6,
+0xE4,0x00,0x00,0x17,0xEA,0xEA,0x00,0x9F,0x0F,0x0A,0x02,0x8E,0xF8,0x10,0x77,0x00,
+0xE4,0x00,0x95,0xA8,0xEA,0xEA,0x00,0x9F,0x9E,0xE1,0x5E,0xF7,0x04,0xEE,0xEA,0x00,
+0x9F,0xEA,0xEA,0x00,0x9F,0xD6,0xED,0xFD,0x96,0xE4,0x00,0x96,0xDC,0xE4,0x00,0x96,
+0xA0,0xEC,0x0A,0x00,0xA1,0xEC,0x0A,0x00,0x9F,0xE4,0x00,0x00,0x45,0x98,0x60,0x9D,
+0x61,0xE4,0x00,0x95,0x46,0xE4,0x00,0x00,0x0D,0x99,0x60,0xD5,0xAB,0xFF,0x95,0xE4,
+0x00,0x96,0x90,0xE4,0x00,0x96,0x54,0xEC,0x0A,0x00,0xA1,0xC2,0xE0,0x10,0x01,0xEB,
+0x17,0x00,0xCD,0x53,0x18,0x02,0xEF,0x17,0x00,0xCD,0xC2,0xE0,0x10,0x01,0xEB,0x17,
+0x07,0xD9,0xC3,0x00,0x32,0x0A,0x20,0x00,0x49,0x13,0x0C,0x00,0x9B,0x3E,0xEC,0x17,
+0x07,0xD9,0x47,0x18,0xCC,0x1B,0x0C,0x00,0x0D,0xE1,0x06,0x0D,0xC1,0x0A,0x0D,0xA1,
+0x0E,0x0D,0x81,0x12,0x0D,0x61,0x16,0x0D,0x41,0x1A,0x0D,0x21,0x1E,0x1C,0x21,0x20,
+0x85,0x29,0x9C,0x38,0x0D,0x21,0x04,0xE4,0x00,0x9D,0x0E,0x98,0x60,0x88,0x83,0xE4,
+0x00,0x9A,0x40,0x98,0x61,0x98,0x82,0xE4,0x00,0x9A,0x30,0x98,0x60,0xFC,0x80,0x28,
+0x0A,0xE4,0x00,0x96,0x1C,0x98,0x61,0xFC,0x80,0x28,0x0A,0xE4,0x00,0x97,0x82,0x0D,
+0x21,0x06,0x9C,0x28,0xE4,0x00,0x9F,0xD9,0x20,0x64,0x1E,0xE4,0x00,0xA1,0x03,0xE4,
+0x00,0xA1,0x21,0x9C,0x38,0x0D,0x21,0x04,0xE4,0x00,0xA1,0x36,0x0D,0x21,0x06,0x9C,
+0x28,0xE4,0x00,0xA0,0xFD,0xE4,0x00,0xA2,0xF5,0xE4,0x00,0xA3,0x93,0xE4,0x00,0xA3,
+0xEF,0xE4,0x00,0xA7,0xCD,0xE4,0x00,0xA5,0x37,0xE4,0x00,0xA4,0x3B,0xE4,0x00,0xA4,
+0x71,0xE4,0x00,0xA4,0xA7,0xE4,0x00,0xA4,0xCB,0xE4,0x00,0xA4,0xEF,0xE4,0x00,0xA3,
+0x25,0xE4,0x00,0xA5,0x1D,0x20,0x60,0x28,0x20,0x64,0x3E,0xE4,0x00,0x00,0x11,0xE4,
+0x00,0xA5,0xB9,0xE4,0x00,0xA5,0xD3,0x85,0x29,0xE4,0x00,0xA5,0xE9,0xC2,0xE0,0x10,
+0x01,0xE8,0x77,0x00,0xB7,0xEB,0x17,0x00,0xB7,0xD4,0x78,0xFF,0xC6,0x85,0x29,0xE4,
+0x00,0xA8,0xE3,0xC3,0x34,0x00,0x01,0xCA,0xF9,0x23,0xFC,0x0A,0xF7,0x00,0xD2,0xFF,
+0x04,0x3C,0xC3,0x00,0x10,0x01,0xF2,0xF8,0x05,0x46,0x9E,0xE1,0x5E,0xF7,0x00,0xFA,
+0xF8,0x05,0x46,0x22,0xE1,0xCA,0xC3,0x00,0x10,0x01,0xC3,0x60,0x10,0x01,0xFF,0x18,
+0x01,0xA4,0xCA,0xE0,0x11,0x7D,0xCB,0x39,0x22,0x00,0xFF,0x7B,0x0A,0xB4,0x1F,0x57,
+0xFD,0x57,0x5A,0xFF,0x4F,0x5A,0x10,0x8F,0x59,0x0B,0x9A,0x01,0x4F,0x97,0x08,0x8F,
+0x9B,0xEB,0x9C,0xDD,0x4F,0x0F,0x9A,0x01,0x5F,0x57,0x00,0x5F,0x4F,0xE9,0x57,0x57,
+0xFF,0x4F,0x5A,0x10,0x8F,0x59,0x0B,0x9A,0x01,0x20,0x00,0x6D,0xFF,0xA0,0x80,0x00,
+0x5F,0x9C,0x04,0x47,0x9C,0xEC,0x0B,0xB8,0x01,0xC7,0xBD,0x7F,0xFF,0x47,0x9C,0xED,
+0xE4,0x00,0x00,0x0F,0x0B,0x98,0x01,0x0F,0x9A,0x01,0x9E,0xE1,0x9F,0x02,0xC2,0xE2,
+0x30,0x04,0x23,0xFE,0xB1,0x85,0x29,0x5C,0x63,0x04,0xE4,0x00,0xA7,0xB5,0x9A,0xE0,
+0x8B,0x17,0xE4,0x00,0x00,0x1D,0x43,0x23,0xBC,0x9E,0xE1,0x13,0x39,0x00,0x8F,0x19,
+0xD4,0x97,0xFF,0xB4,0x40,0x60,0xC5,0x85,0x29,0x9C,0x38,0x98,0x60,0x0D,0x21,0x04,
+0xE7,0xFF,0xFD,0x90,0x98,0x61,0xE7,0xFF,0xFD,0x84,0x98,0x6F,0xE7,0xFF,0xFE,0x3A,
+0x0D,0x21,0x06,0x98,0x60,0x9C,0x28,0xE7,0xFF,0xFD,0x63,0xC2,0xE0,0x10,0x01,0xEC,
+0x17,0x0B,0xD9,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x00,0xB4,0x9C,0x38,0x5E,0xE0,0x09,
+0x0D,0x41,0x00,0x0D,0x21,0x04,0xC1,0x40,0x10,0x01,0xEA,0xEA,0x00,0xCD,0x50,0x60,
+0x80,0x56,0xF7,0x02,0x48,0x63,0x42,0x22,0xE0,0x6C,0xC0,0x80,0x10,0x01,0xFC,0x84,
+0x05,0x47,0xE7,0xFF,0xF2,0xFE,0xEA,0xEA,0x00,0xCD,0xC6,0xF7,0xFF,0xFD,0xEE,0xEA,
+0x00,0xCD,0x0D,0x41,0x02,0x0D,0x21,0x06,0x9C,0x28,0xE7,0xFF,0xFF,0x1F,0x9C,0x30,
+0xC3,0x00,0x10,0x01,0x0D,0x21,0x0C,0xFC,0x98,0x05,0x47,0x0D,0x41,0x08,0x8A,0xE4,
+0x8B,0x24,0x18,0x17,0x00,0xC3,0x00,0x10,0x01,0x9E,0xE1,0xFF,0x18,0x05,0xC9,0xD6,
+0xF8,0xFF,0x9E,0x52,0xE0,0x62,0x1F,0x19,0x1F,0x1A,0xE4,0x00,0x1E,0xE4,0x01,0x18,
+0x17,0x00,0x9E,0xE1,0xD7,0x17,0xFF,0xDE,0x1E,0xE0,0x9E,0xC3,0x60,0x10,0x01,0x1A,
+0xE4,0x1F,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x3D,0xF8,0x12,0xF7,0x00,0xFA,0xFB,0x05,
+0xC9,0xF2,0xFB,0x05,0xC9,0x22,0xEC,0xB8,0xC2,0xE0,0x10,0x01,0xC3,0x40,0x10,0x01,
+0xF3,0xB7,0x0B,0xEA,0x9B,0x00,0xC3,0xC0,0x10,0x01,0xC1,0x00,0x10,0x01,0x1E,0xE4,
+0x20,0xFF,0x5A,0x0D,0x38,0x8B,0x38,0xFF,0xDE,0x0A,0x52,0xFD,0x08,0x0A,0xB4,0xE4,
+0x00,0x01,0x09,0xC3,0x80,0x10,0x01,0x9A,0xE0,0xFF,0x9C,0x0C,0xC8,0x8B,0x64,0x43,
+0x17,0xE4,0x0B,0x38,0x00,0x43,0x1B,0xBC,0x4F,0x59,0x42,0x1B,0x38,0x21,0x1B,0x58,
+0x20,0x9E,0xE2,0x5E,0xE2,0x09,0x23,0xFF,0xA5,0x0C,0x81,0x04,0x50,0x60,0x20,0xE7,
+0xFF,0xFB,0xCC,0xC1,0x40,0x10,0x01,0xEA,0xEA,0x00,0xCD,0x0C,0x81,0x06,0x56,0xF7,
+0x02,0x22,0xE1,0x74,0xE4,0x00,0x00,0x8F,0xF3,0x9B,0x05,0xC9,0x23,0x84,0x34,0x23,
+0x88,0x68,0x43,0x98,0x44,0xE4,0x00,0x00,0x0F,0x43,0x98,0xF4,0x15,0x5C,0x01,0x19,
+0x57,0x00,0x0B,0x9C,0x01,0xE4,0x00,0x00,0x21,0x0F,0x9A,0x02,0x4D,0x5C,0x82,0x4F,
+0x9C,0x42,0x19,0x57,0x00,0x1B,0x97,0x01,0x9F,0x21,0x9F,0x02,0x5F,0x39,0x04,0x9E,
+0xE2,0x9F,0x44,0xD7,0xB9,0xFE,0x2D,0xE7,0xFF,0xFF,0x45,0x50,0x60,0x80,0xE7,0xFF,
+0xF0,0xA6,0xEA,0xEA,0x00,0xCD,0xC6,0xF7,0xFF,0xFD,0xEE,0xEA,0x00,0xCD,0x0D,0x41,
+0x0A,0x0D,0x21,0x0E,0x1C,0x21,0x10,0xE7,0xFF,0xFC,0xC5,0xC2,0xF4,0x00,0x01,0xCB,
+0x17,0x3D,0xF9,0x1C,0x21,0xE0,0xCA,0xF7,0x3D,0xF8,0x0D,0x41,0x18,0x0D,0x61,0x14,
+0x0D,0x81,0x10,0x0D,0xA1,0x0C,0x0D,0xC1,0x08,0x0D,0xE1,0x04,0x0D,0x21,0x1C,0xC1,
+0x60,0x10,0x01,0xFD,0x6B,0x0C,0x02,0x09,0xEB,0x01,0xC5,0xEF,0x7F,0xFF,0x0D,0xEB,
+0x01,0x13,0x38,0x00,0xC3,0x00,0x10,0x01,0xFB,0x38,0x00,0xB4,0x13,0x37,0x00,0xC2,
+0xE0,0x10,0x01,0xFB,0x37,0x05,0xC9,0xC1,0x80,0x10,0x01,0xC1,0xA0,0x10,0x01,0xC3,
+0x40,0x10,0x01,0xC3,0x20,0x10,0x01,0x5C,0x63,0x00,0xFD,0x8C,0x05,0xCC,0xFD,0xAD,
+0x0A,0xB4,0xFD,0xC0,0x80,0x00,0xFD,0x5A,0x05,0x47,0xFE,0xF9,0x0C,0x04,0xD0,0x61,
+0x12,0x76,0x0B,0xB7,0x19,0x45,0xCF,0x75,0xCB,0x00,0x07,0xFF,0x0D,0xCB,0x01,0x43,
+0xB8,0xED,0x5F,0xBD,0x04,0x5F,0x7D,0x06,0x0F,0x77,0x19,0x13,0x57,0x00,0xD3,0x41,
+0x1B,0xE9,0x0B,0x77,0x49,0x43,0x18,0xDD,0x0F,0x17,0x49,0x0B,0x17,0x1D,0x43,0x00,
+0xC5,0x0F,0x17,0x1D,0x0B,0x17,0x46,0x0B,0x77,0x16,0x5F,0x1B,0x15,0x4B,0xA1,0x01,
+0xCF,0x1D,0x00,0x30,0x8F,0x17,0x4B,0x80,0x0A,0x0B,0x78,0x16,0x9B,0x00,0x27,0x7C,
+0x50,0xC3,0x00,0x10,0x01,0x5F,0xDB,0x04,0xEB,0x18,0x0B,0xF1,0x5F,0x78,0x15,0x4B,
+0x1E,0xC0,0x0F,0x17,0x13,0xCF,0xBD,0x00,0x30,0x9B,0x00,0x8F,0xB7,0x0B,0x7D,0x18,
+0x27,0x7C,0x50,0xC3,0x00,0x10,0x01,0x5F,0xBB,0x04,0xEB,0x18,0x0B,0xF3,0x5F,0x78,
+0x15,0x4B,0x1D,0xC0,0x0F,0x17,0x15,0xCF,0x1C,0x00,0x30,0x8F,0x17,0x0B,0x78,0x16,
+0x9B,0x00,0x27,0x7C,0x50,0xC3,0x00,0x10,0x01,0x5F,0x3B,0x04,0xEB,0x18,0x0B,0xF1,
+0x5F,0x78,0x15,0x4B,0x19,0xC0,0x0F,0x17,0x43,0xCF,0x9C,0x00,0x30,0x9B,0x00,0x8F,
+0x97,0x0B,0x3C,0x18,0x27,0x3C,0x50,0xC3,0x00,0x10,0x01,0x5F,0x79,0x04,0xEB,0x18,
+0x0B,0xF3,0x5F,0x38,0x15,0x4B,0x1B,0xC0,0x0B,0x77,0x43,0x0B,0x37,0x13,0x43,0x3B,
+0xCD,0x0F,0x17,0x45,0x0F,0x37,0x1B,0x0B,0x37,0x15,0x43,0x18,0xCD,0x0F,0x17,0x1D,
+0xE4,0x00,0x00,0x69,0xC3,0x00,0x10,0x01,0x5F,0xDC,0x04,0xEB,0x18,0x0B,0xF1,0x5F,
+0x98,0x15,0x4B,0x1E,0xC0,0x0F,0x17,0x13,0x9B,0x00,0x27,0x7C,0x44,0xC3,0x00,0x10,
+0x01,0xEB,0x18,0x0B,0xF3,0x5F,0x78,0x1D,0x4B,0x18,0xE8,0x0F,0x17,0x15,0x0C,0x17,
+0x1B,0x0C,0x17,0x1D,0xC3,0x00,0x10,0x01,0xF3,0x18,0x00,0xB4,0x23,0x01,0x9E,0x53,
+0x00,0x52,0x0B,0x37,0x13,0x1B,0x0A,0x00,0x4F,0x99,0x41,0x0B,0x17,0x15,0x4F,0x9C,
+0x20,0x4F,0x78,0x41,0x1B,0x2A,0x02,0x57,0x7B,0x0F,0x1B,0x0A,0x03,0x47,0x7C,0xDD,
+0x1B,0x6A,0x01,0x27,0x44,0xA1,0x0B,0x17,0x1A,0x0A,0xF7,0x1C,0x4F,0x38,0x42,0x4F,
+0x57,0x42,0x5F,0x39,0x04,0x57,0x5A,0x0F,0x4F,0x39,0x20,0x1B,0x0A,0x05,0x47,0x39,
+0xD5,0x1A,0xEA,0x06,0x1B,0x2A,0x04,0xE4,0x00,0x00,0x1B,0x18,0x0A,0x04,0x18,0x0A,
+0x05,0x18,0x0A,0x06,0x88,0x6A,0x98,0x87,0xE7,0xFF,0xF8,0xAC,0x18,0x6A,0x07,0xE4,
+0x00,0x01,0x81,0x8B,0x0A,0x18,0x18,0x00,0xC3,0x20,0x10,0x01,0x9F,0x01,0xFF,0x39,
+0x05,0xC9,0xD7,0x19,0xFF,0x9E,0x53,0x00,0x62,0x1B,0x0A,0x00,0x0B,0x17,0x13,0x4F,
+0x38,0x41,0x1B,0x0A,0x02,0x0B,0x17,0x15,0x1B,0x2A,0x01,0x1B,0x0A,0x04,0x4F,0x38,
+0x41,0x57,0x1A,0x01,0x53,0x18,0x20,0x1B,0x0A,0x11,0x0B,0x17,0x1A,0x1B,0x2A,0x03,
+0x0A,0xF7,0x1C,0x4F,0x38,0x42,0x1B,0x0A,0x0E,0x4F,0x5A,0x20,0x4F,0x17,0x42,0x53,
+0x5A,0x02,0x1B,0x0A,0x0F,0x1B,0x4A,0x12,0x1A,0xEA,0x10,0x1B,0x2A,0x0D,0x88,0x6A,
+0x50,0x80,0x1F,0xE7,0xFF,0xF7,0xD6,0xC3,0x00,0x10,0x01,0x18,0x6A,0x1F,0xC3,0x60,
+0x10,0x01,0x1D,0x4A,0x20,0xFF,0x18,0x0D,0x38,0x9A,0xE0,0xC3,0x40,0x10,0x01,0xFF,
+0x7B,0x0A,0x52,0xF3,0x3A,0x05,0xC9,0x23,0x24,0x34,0x23,0x28,0x68,0x43,0x37,0x6C,
+0xE4,0x00,0x00,0x0F,0x43,0x37,0xDC,0x17,0x99,0x01,0x1B,0x8A,0x00,0x0B,0x39,0x01,
+0xE4,0x00,0x00,0x21,0x0F,0x38,0x02,0x4F,0x99,0x82,0x4F,0x39,0x42,0x1B,0x8A,0x00,
+0x1B,0x2A,0x01,0x9E,0xE2,0x9D,0x42,0x9F,0x04,0x5E,0xE9,0xC9,0x23,0xFF,0x1D,0x0A,
+0xEB,0x00,0xD2,0xFF,0x0B,0x34,0x9A,0xE1,0xE4,0x00,0x02,0x99,0x20,0x61,0xFA,0xF2,
+0xF8,0x00,0xB4,0x22,0xE0,0xB2,0x52,0xE0,0x52,0x1A,0xEA,0x00,0x9A,0xFF,0x88,0x6A,
+0x1A,0xEA,0x01,0x1A,0xEA,0x02,0x1A,0xEA,0x03,0x1A,0xEA,0x04,0x1A,0xEA,0x05,0x1A,
+0xEA,0x06,0x98,0x87,0xE7,0xFF,0xF6,0xB4,0x18,0x6A,0x07,0xE4,0x00,0x00,0x7F,0x8A,
+0xEA,0x18,0x17,0x00,0xC3,0x00,0x10,0x01,0x9E,0xE1,0xFF,0x18,0x05,0xC9,0xD6,0xF8,
+0xFF,0x9E,0x52,0xE0,0x62,0x9B,0x1F,0x1A,0xEA,0x00,0x1E,0xEA,0x01,0x1B,0x17,0x00,
+0xC3,0x20,0x10,0x01,0x9E,0xE1,0xFF,0x39,0x05,0x66,0xD6,0xF9,0xFF,0x9E,0x88,0x6A,
+0x50,0x80,0x1F,0xE7,0xFF,0xF6,0x36,0x18,0x6A,0x1F,0x0A,0xEB,0x01,0x0C,0x0C,0x00,
+0x45,0xCE,0xBD,0x0D,0xCB,0x01,0xE4,0x00,0x01,0xC5,0xD0,0x62,0x06,0xF6,0xF3,0x18,
+0x00,0xB4,0x23,0x00,0xD2,0x52,0xE0,0x52,0xC3,0x00,0x10,0x01,0x1A,0xEA,0x00,0xEB,
+0x18,0x0B,0xD9,0x9A,0xFF,0x1B,0x0A,0x05,0x1A,0xEA,0x01,0x1A,0xEA,0x02,0x1A,0xEA,
+0x03,0x1A,0xEA,0x04,0x1A,0xEA,0x06,0x88,0x6A,0x98,0x87,0xE7,0xFF,0xF5,0xA6,0x18,
+0x6A,0x07,0xE4,0x00,0x01,0x15,0x8B,0x0A,0x18,0x18,0x00,0xC3,0x20,0x10,0x01,0x9F,
+0x01,0xFF,0x39,0x05,0xC9,0xD7,0x19,0xFF,0x9E,0x53,0x00,0x62,0x1B,0x0A,0x00,0x0B,
+0x17,0x13,0x4F,0x38,0x41,0x1B,0x0A,0x02,0x1B,0x2A,0x01,0x0B,0x17,0x15,0x4F,0x38,
+0x41,0x1B,0x0A,0x04,0x1B,0x2A,0x03,0x13,0x17,0x00,0x57,0x38,0x01,0x4F,0x18,0x20,
+0x53,0x18,0x02,0x53,0x39,0x20,0x1B,0x0A,0x12,0x0B,0x17,0x1A,0x1B,0x2A,0x11,0x0A,
+0xF7,0x1C,0x4F,0x38,0x42,0x1B,0x0A,0x0E,0x4F,0x17,0x42,0x1A,0xEA,0x10,0x1B,0x2A,
+0x0D,0x1B,0x0A,0x0F,0x88,0x6A,0x50,0x80,0x1F,0xE7,0xFF,0xF4,0xCA,0x9A,0xE0,0x18,
+0x6A,0x1F,0x43,0x17,0x6C,0x0B,0x38,0x00,0x43,0x0A,0xBC,0x4F,0x59,0x42,0x1B,0x38,
+0x21,0x1B,0x58,0x20,0x9E,0xE2,0x5E,0xE9,0xC9,0x23,0xFF,0xA5,0x45,0xCF,0x75,0x9A,
+0xE2,0x0D,0xCB,0x01,0x0E,0xEC,0x00,0xE4,0x00,0x00,0x23,0x0B,0x97,0x16,0x9B,0x00,
+0xD3,0x9F,0xEA,0xA8,0xE7,0xFF,0xFA,0x81,0x0D,0xE1,0x06,0x0D,0xC1,0x0A,0x0D,0xA1,
+0x0E,0x0D,0x81,0x12,0x0D,0x61,0x16,0x0D,0x41,0x1A,0x0D,0x21,0x1E,0x1C,0x21,0x20,
+0x85,0x29,0x1C,0x21,0xD0,0x0D,0x41,0x28,0x0D,0x81,0x20,0x5D,0x43,0x00,0x5D,0x84,
+0x00,0x42,0xEC,0x55,0x9E,0xE1,0x5E,0xF7,0x00,0x57,0x17,0x03,0x4E,0xF7,0x11,0x5F,
+0x00,0x09,0x0D,0x61,0x24,0x0D,0xA1,0x1C,0x0D,0xC1,0x18,0x49,0xA1,0x01,0x0D,0x21,
+0x2C,0x8D,0xB7,0xC1,0xD8,0x00,0x21,0xE4,0x00,0x73,0x02,0x99,0x60,0xFD,0xCE,0xB9,
+0xC7,0xE4,0x00,0x00,0xE3,0x88,0x61,0x50,0x80,0x22,0x50,0xA0,0x18,0xE7,0xFF,0xC6,
+0x00,0x9A,0xE4,0x43,0x0E,0x54,0x13,0x58,0x00,0x1F,0x01,0x18,0x4F,0x3A,0x09,0x57,
+0x5A,0x01,0x8F,0x19,0x17,0x18,0xE8,0x5F,0x40,0x01,0x4B,0x50,0x7B,0x47,0x5A,0xC4,
+0x5F,0x17,0x02,0x20,0x00,0x25,0x4F,0x17,0x20,0x5F,0x18,0x02,0x1F,0x61,0x18,0x47,
+0x18,0xD5,0x8F,0x3B,0x1B,0x19,0xE8,0x9D,0x41,0x5D,0x4A,0x00,0xD5,0x4C,0x00,0xE1,
+0x06,0xE0,0x81,0xCC,0x6B,0x00,0x18,0x88,0x81,0x8C,0x77,0x50,0xA0,0x18,0x9D,0x61,
+0xE7,0xFF,0xC6,0x3A,0xE4,0x00,0x00,0x1D,0x9E,0xE1,0xD2,0xE8,0xFD,0x4E,0xE7,0xFF,
+0xFF,0xC5,0x5E,0xEB,0x00,0xD5,0xB7,0xFC,0x85,0xE4,0x00,0x72,0x24,0x0D,0x21,0x2E,
+0x0D,0xC1,0x1A,0x0D,0xA1,0x1E,0x0D,0x81,0x22,0x0D,0x61,0x26,0x0D,0x41,0x2A,0x1C,
+0x21,0x30,0x85,0x29,0xC2,0xE0,0x10,0x01,0xEC,0x77,0x01,0x66,0x85,0x29,0xC2,0xE0,
+0x10,0x01,0xEC,0x77,0x07,0xB2,0x85,0x29,0x1C,0x21,0xD0,0x0D,0x21,0x2C,0x0D,0x41,
+0x28,0x0D,0x61,0x24,0x0D,0x81,0x20,0xD0,0x69,0x0F,0xD5,0x4F,0x03,0x10,0xC2,0xF8,
+0x00,0x21,0xC1,0x98,0x00,0x21,0xFE,0xF7,0xB9,0x38,0x05,0x60,0x81,0x8E,0xF8,0xFD,
+0x8C,0xB9,0xC7,0x0E,0xF7,0x02,0x86,0xE9,0x1C,0x83,0x01,0xCC,0x63,0x00,0x12,0xCC,
+0x84,0x00,0x12,0x9C,0x9F,0xE7,0xFF,0xFD,0xBA,0xE4,0x00,0x03,0x91,0x0C,0x61,0x04,
+0xE4,0x00,0x71,0x10,0x0C,0x61,0x06,0x99,0x40,0x9C,0x7E,0x5C,0x63,0x00,0xCC,0x63,
+0x00,0x12,0x8D,0x83,0x1C,0x61,0x08,0x50,0x80,0x22,0x50,0xA0,0x18,0xE7,0xFF,0xC4,
+0x00,0x8B,0x2A,0x9A,0xE4,0x5F,0x22,0x39,0x20,0x00,0xDD,0x43,0x0C,0xCC,0x13,0x98,
+0x00,0x4F,0x7C,0x09,0x57,0x9C,0x01,0x5F,0x80,0x01,0x4B,0x50,0x7B,0x1F,0x01,0x20,
+0x8F,0x1B,0x17,0x18,0xE8,0x47,0x1A,0xC4,0x5F,0x57,0x02,0x20,0x00,0x25,0x4F,0x57,
+0x20,0x5F,0x5A,0x02,0x1F,0x81,0x20,0x47,0x5A,0xC5,0x8F,0x7C,0x1B,0x5B,0xE8,0x9F,
+0x21,0x9E,0xE1,0xD2,0xE8,0xFE,0x16,0xCC,0x6A,0x00,0x06,0x1C,0x81,0x08,0x8C,0x6B,
+0x50,0xA0,0x18,0xE7,0xFF,0xC4,0x34,0x9D,0x44,0x5D,0x42,0x89,0x23,0xFE,0x61,0xE4,
+0x00,0x01,0xAD,0xE4,0x00,0x70,0x0A,0x1C,0x61,0x08,0x50,0x80,0x22,0x50,0xA0,0x18,
+0xE7,0xFF,0xC3,0x1A,0xC3,0x78,0x00,0x21,0x9A,0xE4,0xFF,0x7B,0xB9,0xC4,0xD2,0xE7,
+0x01,0xC2,0x43,0x1B,0xBC,0x13,0x58,0xFC,0x1F,0x01,0x20,0x4F,0x3A,0x09,0x57,0x5A,
+0x01,0x8F,0x19,0x17,0x18,0xE8,0x5F,0x40,0x01,0x4B,0x50,0x7B,0x47,0x5A,0xC4,0x5F,
+0x17,0x02,0x20,0x00,0x25,0x4F,0x17,0x20,0x5F,0x18,0x02,0x1F,0x81,0x20,0x47,0x18,
+0xD5,0x8F,0x3C,0x1B,0x19,0xE8,0x9E,0xE1,0xD2,0xE8,0xFE,0x36,0xE4,0x00,0x00,0xD9,
+0xE4,0x00,0x6F,0x50,0x1C,0x61,0x08,0x50,0x80,0x22,0x50,0xA0,0x18,0xE7,0xFF,0xC2,
+0x60,0x8B,0x0C,0xE4,0x00,0x00,0x9F,0x43,0x38,0xBC,0x13,0x79,0xFC,0x1F,0x21,0x20,
+0x4F,0x5B,0x09,0x57,0x7B,0x01,0x8F,0x3A,0x13,0x39,0xE8,0x5F,0x60,0x01,0x4B,0x70,
+0x7B,0x47,0x7B,0xCC,0x5F,0x37,0x02,0x5F,0x7B,0x02,0x20,0x00,0x25,0x4F,0x37,0x20,
+0x5F,0x39,0x02,0x1F,0x81,0x20,0x47,0x39,0xDD,0x8F,0x5C,0x1B,0x3A,0xE8,0x9E,0xE1,
+0xD2,0xE8,0xFE,0x3E,0xC2,0xF8,0x00,0x21,0x9F,0x04,0xFE,0xF7,0xB9,0xEB,0xD7,0x17,
+0x00,0x52,0x9A,0xE4,0xE7,0xFF,0xFF,0x67,0x04,0x60,0x81,0x1C,0x81,0x08,0x50,0xA0,
+0x18,0xE7,0xFF,0xC2,0x78,0xE4,0x00,0x6E,0x8C,0xE4,0x00,0x00,0xD1,0xE4,0x00,0x6E,
+0x56,0x99,0x40,0x1C,0x61,0x08,0x50,0x80,0x22,0x50,0xA0,0x18,0xE7,0xFF,0xC1,0x62,
+0x5E,0xEA,0x00,0x22,0xE0,0xD6,0x9A,0xF0,0x13,0x01,0x0F,0x47,0x17,0xC4,0x53,0x18,
+0x04,0x1B,0x01,0x0F,0x13,0x01,0x17,0x46,0xF7,0xC4,0x52,0xF7,0x05,0x1A,0xE1,0x17,
+0x12,0xE1,0x0C,0x56,0xF7,0x0F,0x52,0xF7,0x60,0x1A,0xE1,0x0C,0x12,0xE1,0x1C,0x56,
+0xF7,0x0F,0x52,0xF7,0x70,0x1A,0xE1,0x1C,0xCC,0x6A,0x00,0x18,0x1C,0x81,0x08,0x8C,
+0x6B,0x50,0xA0,0x18,0x9D,0x41,0xE7,0xFF,0xC1,0xAE,0x21,0x4A,0xA6,0xE7,0xFF,0xFF,
+0x31,0x0D,0x81,0x22,0x0D,0x61,0x26,0x0D,0x41,0x2A,0x0D,0x21,0x2E,0x1C,0x21,0x30,
+0x85,0x29,0x1C,0x21,0xE8,0x0D,0x61,0x0C,0x0D,0x21,0x14,0x0D,0x41,0x10,0x0D,0x81,
+0x08,0x0D,0xA1,0x04,0x89,0x63,0xD0,0x69,0x0C,0xF5,0x4F,0x03,0x10,0xC2,0xF8,0x00,
+0x21,0xFE,0xF7,0xB9,0x60,0x8E,0xF8,0x0E,0xF7,0x02,0x86,0xE9,0xCD,0x43,0x00,0x12,
+0xC1,0xA0,0x10,0x01,0x99,0x80,0xFD,0xAD,0x07,0xB4,0x8D,0x4D,0x13,0x4A,0x01,0x13,
+0x2A,0x00,0x13,0x0A,0x03,0x12,0xEA,0x02,0x4C,0x9A,0xC0,0x4C,0xB8,0xC0,0x4F,0x5A,
+0x80,0x4F,0x18,0x80,0x8C,0x9A,0x8C,0xB8,0x8C,0x99,0x8C,0xB7,0x4F,0x39,0x40,0x4E,
+0xF7,0x40,0x88,0x6C,0x8C,0x99,0x8C,0xB7,0x9D,0x81,0xE4,0x00,0x6F,0x20,0x5D,0x8C,
+0x00,0x9D,0x44,0xD1,0x84,0xFE,0x4E,0x98,0x64,0x98,0x80,0x98,0xA0,0xCD,0x4B,0x00,
+0x12,0x8D,0x4D,0x10,0xCA,0x10,0xE4,0x00,0x6F,0x50,0x98,0x64,0x98,0x80,0x98,0xA1,
+0x10,0xCA,0x10,0xE4,0x00,0x6F,0x36,0x98,0x64,0x98,0x81,0x98,0xA0,0x10,0xCA,0x11,
+0xE4,0x00,0x6F,0x1C,0x98,0x64,0x98,0x81,0x98,0xA1,0x10,0xCA,0x11,0xE4,0x00,0x6F,
+0x02,0x98,0x64,0x98,0x82,0x98,0xA0,0x98,0xC0,0xE4,0x00,0x6E,0xEA,0x98,0x64,0x98,
+0x82,0x98,0xA1,0x98,0xC0,0xE4,0x00,0x6E,0xD2,0x98,0x64,0x98,0x83,0x98,0xA0,0x98,
+0xC0,0xE4,0x00,0x6E,0xBA,0x98,0x64,0xE4,0x00,0x00,0x83,0xC1,0xA0,0x10,0x01,0x99,
+0x40,0xFD,0xAD,0x05,0xE0,0x5D,0x8A,0x00,0x41,0x6D,0x54,0x98,0x60,0x88,0x8C,0x98,
+0xA0,0x10,0xCB,0x00,0xE4,0x00,0x6E,0x74,0x98,0x60,0x88,0x8C,0x98,0xA1,0x10,0xCB,
+0x00,0x9D,0x41,0xE4,0x00,0x6E,0x56,0x21,0x4F,0x7A,0x98,0x60,0x98,0x83,0x98,0xA0,
+0x98,0xC0,0xE4,0x00,0x6E,0x38,0x98,0x60,0x0D,0xA1,0x06,0x0D,0x81,0x0A,0x0D,0x61,
+0x0E,0x0D,0x41,0x12,0x0D,0x21,0x16,0x98,0x83,0x98,0xA1,0x98,0xC0,0x1C,0x21,0x18,
+0xE4,0x00,0x6D,0xFD,0xC3,0x00,0x10,0x01,0x0D,0xA1,0x06,0xFE,0xF8,0x07,0xA1,0xF3,
+0x38,0x07,0xA1,0x13,0x57,0x01,0x13,0x17,0x03,0x4C,0x9A,0xC0,0x12,0xF7,0x02,0x4C,
+0xB8,0xC0,0x4F,0x5A,0x80,0x4F,0x18,0x80,0x8C,0x9A,0x8C,0xB8,0x8C,0x99,0x8C,0xB7,
+0x4F,0x39,0x40,0x4E,0xF7,0x40,0x0D,0x81,0x0A,0x0D,0x61,0x0E,0x0D,0x41,0x12,0x0D,
+0x21,0x16,0x98,0x60,0x8C,0x99,0x8C,0xB7,0x1C,0x21,0x18,0xE4,0x00,0x6C,0xFF,0xC1,
+0x60,0x10,0x01,0x99,0x40,0xFD,0x6B,0x05,0xD4,0x4D,0xAA,0x11,0x55,0x8A,0x03,0x10,
+0xCB,0x00,0x88,0x6D,0x88,0x8C,0x98,0xA0,0xE4,0x00,0x6D,0x2C,0x10,0xCB,0x00,0x88,
+0x6D,0x88,0x8C,0x98,0xA1,0x9D,0x41,0xE4,0x00,0x6D,0x0E,0x5D,0x4A,0x00,0x9D,0x61,
+0xD1,0x48,0xFE,0xCE,0x0D,0xA1,0x06,0x0D,0x81,0x0A,0x0D,0x61,0x0E,0x0D,0x41,0x12,
+0x0D,0x21,0x16,0x1C,0x21,0x18,0x85,0x29,0x1C,0x21,0xE0,0x0D,0xC1,0x08,0x0D,0x21,
+0x1C,0x0D,0x41,0x18,0x0D,0x61,0x14,0x0D,0x81,0x10,0x0D,0xA1,0x0C,0x0D,0xE1,0x04,
+0x89,0xC4,0xD0,0x66,0x00,0xB5,0xC2,0xF8,0x00,0x21,0xFE,0xF7,0xB9,0x88,0x4C,0x63,
+0x10,0x8C,0x77,0x0E,0xE3,0x02,0x86,0xE9,0x99,0xE9,0xC9,0x80,0x28,0x0A,0xE4,0x00,
+0x02,0x05,0xD0,0x81,0x04,0x61,0x1E,0xE4,0xFE,0xD2,0xE1,0x04,0x79,0xD0,0x87,0x04,
+0xDA,0x5C,0x81,0x01,0xCA,0xE0,0x28,0x0A,0x49,0xE2,0x4B,0xC9,0x80,0x10,0x06,0xE4,
+0x00,0x00,0xB7,0xD0,0x81,0x04,0xB9,0x1E,0xE4,0xFE,0xD2,0xE1,0x04,0xD1,0xD0,0x87,
+0x05,0x32,0x5C,0x81,0x01,0xCA,0xE0,0x28,0x0A,0xC9,0x80,0x10,0x06,0x99,0xA0,0x49,
+0xE2,0x4B,0x49,0x8C,0xB8,0x89,0x4D,0xE4,0x00,0x00,0x75,0xD0,0x81,0x04,0xD9,0x5C,
+0x80,0xE1,0xCA,0xE0,0x28,0x0A,0xC9,0x80,0x08,0x03,0x49,0xE1,0x4B,0x49,0x8C,0xB8,
+0xE4,0x00,0x01,0x19,0xD0,0x81,0x04,0x81,0xD0,0x87,0x04,0x92,0x5C,0x81,0x01,0xCA,
+0xE0,0x28,0x0A,0x49,0xE2,0x4B,0xC9,0x80,0x20,0x09,0x49,0x8C,0xB8,0x99,0xA2,0x99,
+0x41,0x49,0x61,0x01,0xE4,0x00,0x01,0x05,0x99,0xE1,0xE4,0x00,0x00,0xBD,0x99,0xE5,
+0xC9,0x80,0x28,0x0A,0xE4,0x00,0x00,0x35,0x99,0xE5,0xC9,0x80,0x28,0x0A,0x99,0xA2,
+0x99,0x41,0x99,0x63,0xE4,0x00,0x00,0x21,0x99,0xE1,0xC9,0x80,0x10,0x06,0x99,0xA2,
+0x99,0x41,0x99,0x60,0x98,0x60,0xE4,0x00,0x00,0xA5,0x99,0xE5,0xC9,0x80,0x28,0x0A,
+0xE4,0x00,0x00,0x35,0x99,0xA0,0x99,0xE5,0xC9,0x80,0x28,0x0A,0x89,0x4D,0x99,0x63,
+0xE4,0x00,0x00,0x21,0x99,0xE1,0xC9,0x80,0x10,0x06,0x99,0xA0,0x99,0x60,0x89,0x4D,
+0x98,0x61,0xE4,0x00,0x00,0x4D,0x99,0xE5,0xC9,0x80,0x08,0x03,0x99,0xA0,0x89,0x4D,
+0xE4,0x00,0x00,0x29,0x99,0xE5,0xE4,0x00,0x00,0x0D,0x99,0xE1,0xC9,0x80,0x10,0x06,
+0x99,0xA2,0x99,0x41,0x99,0x60,0x98,0x63,0xE7,0xFF,0xAF,0x88,0x88,0x6A,0x88,0x8D,
+0xE4,0x00,0x7F,0xBE,0x88,0x6A,0x88,0x8C,0xE4,0x00,0x6B,0x0C,0x21,0xA0,0x3E,0x88,
+0x6A,0x88,0x8C,0xE4,0x00,0x7B,0x98,0xE4,0x00,0x00,0x1F,0x21,0xA0,0x2C,0x88,0x6A,
+0x88,0x8C,0xE4,0x00,0x7C,0xF4,0x88,0x6A,0x05,0x80,0xFF,0xC9,0x8C,0xFF,0xFF,0x88,
+0x8C,0xE4,0x00,0x6D,0x92,0x88,0x8C,0x88,0x6A,0xE4,0x00,0x6B,0x1A,0x98,0x62,0xE4,
+0x00,0x68,0x9A,0xC2,0xE0,0x10,0x01,0x98,0x60,0xEC,0x17,0x05,0xE8,0xC1,0xA0,0x10,
+0x01,0xEC,0x0D,0x07,0xA8,0xE4,0x00,0x74,0xD6,0x98,0x60,0xE4,0x00,0x6C,0xD6,0x98,
+0x60,0x88,0x8C,0xE4,0x00,0x6B,0xC6,0x88,0x6F,0xE4,0x00,0x67,0xF2,0x98,0x60,0xE4,
+0x00,0x6E,0x16,0x21,0x64,0x5E,0xED,0x6D,0x07,0xA8,0x98,0x61,0xE4,0x00,0x74,0x88,
+0x98,0x63,0xE4,0x00,0x6C,0x88,0xE4,0x00,0x00,0x2B,0x21,0x6C,0x46,0x98,0x61,0x88,
+0x8C,0xE4,0x00,0x6B,0x6A,0x98,0x61,0xE4,0x00,0x6D,0xC6,0xE4,0x00,0x71,0xAA,0x1C,
+0x63,0x13,0x5C,0x83,0x00,0x88,0x6A,0x5C,0x82,0x93,0x20,0x00,0x1B,0x50,0x80,0x14,
+0xE4,0x00,0x6E,0xC8,0x88,0x6A,0x98,0x8C,0xE4,0x00,0x6D,0xEA,0xC2,0xE0,0x10,0x01,
+0x88,0x6E,0xED,0xD7,0x07,0xB0,0xE7,0xFF,0xF4,0x24,0x88,0x6E,0x0D,0xE1,0x06,0x0D,
+0xC1,0x0A,0x0D,0xA1,0x0E,0x0D,0x81,0x12,0x0D,0x61,0x16,0x0D,0x41,0x1A,0x0D,0x21,
+0x1E,0x1C,0x21,0x20,0xE7,0xFF,0xF8,0x1D,0xC2,0xE0,0x10,0x01,0x9C,0x38,0xEC,0x77,
+0x01,0x64,0x0D,0x41,0x00,0x0D,0x21,0x04,0x89,0x43,0xE7,0xFF,0xFB,0x7C,0x25,0x44,
+0xD3,0x99,0x40,0x88,0x6A,0x98,0x84,0x9D,0x41,0xE4,0x00,0x73,0xC8,0x5D,0x4A,0x00,
+0xD1,0x44,0xFF,0x9E,0xE7,0xFF,0xE4,0x72,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x00,0xDA,
+0x0C,0x77,0x0B,0xC2,0xE0,0x10,0x01,0xEB,0x17,0x04,0xC7,0x53,0x18,0x20,0xEF,0x17,
+0x04,0xC7,0x0D,0x41,0x02,0x0D,0x21,0x06,0x9C,0x28,0x85,0x29,0x5C,0x63,0x00,0xCF,
+0x03,0x00,0x24,0xCE,0xE3,0x00,0x48,0x1C,0x21,0xD0,0xC0,0x80,0x10,0x01,0x0D,0x21,
+0x2C,0x1C,0x61,0x04,0xFC,0x84,0x0E,0x20,0xC0,0xA0,0x10,0x01,0x8C,0x98,0xFC,0xA5,
+0x09,0x74,0x50,0xC0,0x12,0x8C,0xB7,0xE4,0x00,0x1B,0xA8,0x0D,0x21,0x2E,0x1C,0x21,
+0x30,0x85,0x29,0x1C,0x21,0xD0,0xC2,0xE0,0x10,0x01,0x0D,0x41,0x28,0x0D,0xC1,0x18,
+0xEE,0xF7,0x00,0xD6,0x0D,0x21,0x2C,0x0D,0x61,0x24,0x0D,0x81,0x20,0x0D,0xA1,0x1C,
+0x0D,0xE1,0x14,0x0E,0x01,0x10,0x0E,0x21,0x0C,0x0E,0x41,0x08,0x0E,0x61,0x04,0x5E,
+0xE0,0x41,0x89,0x43,0x49,0xC1,0x01,0x24,0x64,0x7D,0x1E,0xE3,0xFE,0xD2,0xE1,0x04,
+0xD1,0xD0,0x67,0x04,0xEA,0xD0,0x69,0x04,0xFA,0x51,0x60,0x24,0xD0,0x68,0x04,0xF6,
+0x99,0x68,0xE4,0x00,0x00,0x3D,0x51,0x60,0x12,0x9A,0xE0,0x20,0x60,0x5C,0x9A,0xE0,
+0xD1,0x45,0x00,0x92,0x9A,0xE1,0x21,0x44,0x30,0x21,0x4C,0x24,0xD1,0x46,0x00,0x32,
+0x9A,0xE0,0xCE,0xF7,0x00,0x24,0xC1,0xE0,0x10,0x01,0xC2,0x00,0x10,0x01,0xFD,0xEF,
+0x0E,0x20,0xFE,0x10,0x05,0xEC,0x99,0x80,0xC2,0x40,0x10,0x01,0xC2,0x60,0x10,0x01,
+0x8D,0xF7,0x8E,0x17,0x89,0xAC,0x1E,0x2A,0xFE,0xFE,0x52,0x0B,0xDA,0xFE,0x73,0x0D,
+0xD6,0x88,0x6D,0x98,0x81,0x88,0xAE,0xE4,0x00,0x77,0x54,0x42,0xEF,0x64,0x25,0x44,
+0x5D,0x42,0xF0,0x64,0x26,0x24,0x45,0x42,0xEC,0x9C,0xD1,0x47,0x00,0x5A,0xD1,0x48,
+0x00,0x56,0x42,0xEC,0x94,0x0C,0x77,0x01,0x9D,0xA1,0x9D,0x82,0x5D,0xAD,0x00,0xD5,
+0x6D,0xFE,0x95,0xE4,0x00,0x00,0x43,0x51,0x60,0x12,0xE4,0x00,0x00,0x21,0x99,0x63,
+0xE7,0xFF,0xFF,0x21,0x99,0x64,0xE7,0xFF,0xFF,0x15,0x9A,0xE0,0xD1,0x42,0xFB,0x96,
+0xE7,0xFF,0xFF,0x05,0x0E,0x61,0x06,0x0E,0x41,0x0A,0x0E,0x21,0x0E,0x0E,0x01,0x12,
+0x0D,0xE1,0x16,0x0D,0xC1,0x1A,0x0D,0xA1,0x1E,0x0D,0x81,0x22,0x0D,0x61,0x26,0x0D,
+0x41,0x2A,0x0D,0x21,0x2E,0x1C,0x21,0x30,0x85,0x29,0x8A,0xE3,0x88,0x64,0xD2,0xE7,
+0x02,0xBD,0x4E,0xF7,0x10,0xC3,0x18,0x00,0x21,0xFF,0x18,0xB9,0xA4,0x8E,0xF8,0x0F,
+0x17,0x02,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x04,0xC6,0x87,0x09,0x0B,0x17,0x01,0xC7,
+0x18,0xFF,0xDF,0x0F,0x17,0x01,0xD0,0x88,0x01,0x7D,0x9A,0xE1,0x4E,0xF7,0x24,0xC6,
+0xF7,0x01,0x83,0xE4,0x00,0x00,0x37,0x0B,0x17,0x01,0xC7,0x18,0xFF,0xDF,0x0F,0x17,
+0x01,0xD0,0x68,0x00,0xA5,0x9A,0xE1,0x4E,0xF7,0x1C,0xC6,0xF7,0x01,0x8F,0x22,0xE0,
+0x1C,0xE7,0xFF,0xFD,0x25,0x85,0x29,0xC3,0x00,0x10,0x01,0x98,0x60,0xFF,0x18,0x05,
+0xEC,0xCB,0x60,0xFF,0xFE,0xE4,0x00,0x00,0x73,0x43,0x38,0xBC,0x0B,0x59,0x00,0x4F,
+0x3A,0xFA,0x47,0x59,0xD6,0x43,0x3A,0xCD,0xCB,0x40,0xFF,0xFE,0x8C,0x79,0x5C,0x7A,
+0x17,0x5F,0x23,0x04,0x9E,0xE2,0x48,0x79,0xD8,0x5E,0xE4,0x89,0x23,0xFF,0x75,0xC2,
+0xE0,0x10,0x01,0x1F,0x18,0x24,0xFE,0xF7,0x06,0x34,0xD7,0x17,0x00,0x52,0x9A,0xE0,
+0xE7,0xFF,0xFF,0x93,0x85,0x29,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x05,0xE4,0xC2,0xE0,
+0x10,0x01,0xEC,0x17,0x05,0xDC,0xC2,0xE0,0x10,0x01,0x9B,0x04,0xEC,0x17,0x06,0x34,
+0x98,0x64,0xC2,0xE0,0x10,0x01,0x98,0x80,0xEF,0x17,0x01,0x64,0xE7,0xFF,0xF6,0xB9,
+0x20,0x64,0x3E,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x05,0xE6,0xE4,0x00,0x00,0x41,0x20,
+0x68,0x3E,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x05,0xDE,0xE4,0x00,0x00,0x23,0x9A,0xE0,
+0x20,0x6C,0x2E,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x06,0x36,0x88,0x77,0x85,0x29,0x20,
+0x64,0x3E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x05,0xE4,0xE4,0x00,0x00,0x3D,0x20,0x68,
+0x3E,0xC2,0xE0,0x10,0x01,0xEC,0x97,0x05,0xDC,0xE4,0x00,0x00,0x1F,0x20,0x6C,0x2E,
+0xC2,0xE0,0x10,0x01,0xEC,0x97,0x06,0x34,0x85,0x29,0xC2,0xE0,0x10,0x01,0xEC,0x77,
+0x05,0xD0,0x85,0x29,0xC3,0x00,0x10,0x01,0xC0,0x80,0x10,0x01,0xFF,0x58,0x05,0xD0,
+0xC1,0x00,0x10,0x01,0xC3,0x00,0x10,0x01,0xC3,0xA0,0x10,0x01,0x0E,0xFA,0x02,0xFC,
+0x84,0x01,0x64,0xFF,0x18,0x07,0xA0,0xFD,0x08,0x05,0xE3,0xFF,0xBD,0x07,0xAC,0x22,
+0xE0,0x7E,0x0E,0xE4,0x02,0x22,0xE8,0x1C,0xD2,0xE3,0x09,0x1E,0x9A,0xE1,0x18,0x1D,
+0x00,0x0E,0xFA,0x00,0x18,0x08,0x00,0x18,0x18,0x00,0xE4,0x00,0x02,0x23,0xD2,0xE1,
+0x08,0x6E,0x13,0x68,0x00,0x98,0x64,0x23,0x60,0x24,0x1C,0x7B,0xFF,0x5C,0x63,0x00,
+0xC3,0x80,0x10,0x01,0xC2,0xE0,0x10,0x01,0x13,0xDD,0x00,0xFF,0x9C,0x0A,0xB4,0xFE,
+0xF7,0x06,0x38,0x23,0xC1,0x0C,0xCC,0x63,0x00,0x48,0x9B,0x20,0x40,0xF7,0x1C,0x88,
+0x79,0x40,0xA7,0xCC,0x08,0xC5,0x00,0x40,0xB9,0xE4,0x08,0xA5,0x00,0x40,0xC6,0x2D,
+0x4C,0xA6,0xFA,0x44,0xC5,0x36,0x40,0xA6,0x2D,0x5C,0xAF,0xD1,0x20,0x00,0x21,0x9C,
+0x61,0x5C,0x63,0x00,0x9F,0x22,0x5F,0x29,0x09,0x23,0xFF,0x61,0x24,0x68,0x29,0x0C,
+0x1A,0x00,0xE4,0x00,0x00,0xF1,0xCC,0xDB,0x00,0x48,0x9B,0x20,0x8C,0xD7,0x40,0x66,
+0xCC,0x40,0xB9,0xE4,0x08,0xA5,0x01,0x0C,0xA3,0x01,0x9F,0x22,0x5F,0x29,0x09,0x23,
+0xFF,0xBD,0x9F,0x61,0x9B,0x25,0x5F,0x7B,0x00,0x43,0x3B,0xC9,0xCF,0x39,0x00,0x05,
+0x43,0x7B,0xCD,0x1B,0x68,0x00,0xD3,0xC4,0x03,0x6D,0x9F,0xC1,0x5F,0xDE,0x00,0x1B,
+0xDD,0x00,0xD3,0xC5,0x01,0xC6,0xE4,0x00,0x00,0xBB,0x0B,0xB7,0x00,0x0B,0x97,0x48,
+0x8F,0x9D,0xEB,0xB7,0x00,0x90,0x8F,0x9D,0xEB,0xB7,0x00,0xD8,0x8F,0x9D,0xEB,0xB7,
+0x01,0x20,0x8F,0x9D,0x43,0x9C,0xD8,0x0F,0x99,0x01,0x9E,0xE2,0xC3,0x80,0x10,0x01,
+0x9F,0x22,0xFF,0x9C,0x06,0x80,0xD6,0xFC,0xFE,0xA6,0x0E,0xE4,0x02,0x22,0xE8,0x48,
+0x22,0xEC,0x3C,0x12,0xF8,0x00,0x9E,0xE1,0x1A,0xF8,0x00,0xE4,0x00,0x00,0x0F,0x18,
+0x18,0x00,0x12,0xF8,0x00,0xC2,0xE0,0x19,0x0A,0x20,0x00,0x49,0x0C,0x1A,0x00,0xE4,
+0x00,0x00,0x19,0x8B,0x3C,0x9B,0x65,0xE7,0xFF,0xFF,0x47,0x85,0x29,0xC3,0x80,0x10,
+0x01,0xC3,0x60,0x10,0x01,0xC3,0x40,0x10,0x01,0xC3,0x20,0x10,0x01,0xC3,0x00,0x10,
+0x01,0xFF,0x9C,0x0B,0x18,0xFF,0x7B,0x0B,0xFC,0xFF,0x5A,0x08,0x30,0xFF,0x39,0x0D,
+0x26,0xFF,0x18,0x08,0x4E,0x20,0x69,0x7A,0x0A,0xFC,0x04,0x0B,0xD9,0x09,0x43,0xD7,
+0xF5,0x5F,0xDE,0x06,0x4F,0xBE,0xFA,0x47,0xDD,0xF6,0x43,0xBE,0xED,0x5F,0xAC,0x99,
+0x20,0x00,0x7D,0x0B,0xBC,0x07,0x0B,0x99,0x0B,0x43,0xBD,0xE5,0x5F,0xBD,0x06,0x4F,
+0x9D,0xFA,0x47,0xBC,0xEE,0x43,0x9D,0xE5,0xC3,0x80,0x10,0xE8,0x20,0x05,0x19,0x0E,
+0xF8,0x01,0xC2,0xE0,0x10,0x01,0xEA,0xF7,0x0B,0x1F,0x0B,0x99,0x0B,0x0E,0xF8,0x03,
+0x0B,0x39,0x0F,0x12,0xFA,0x00,0x0F,0x9B,0x01,0x0F,0x3B,0x03,0x52,0xF7,0x02,0xE4,
+0x00,0x01,0x57,0xC3,0xA0,0x10,0x01,0xC2,0xE0,0x10,0x01,0xFF,0xBD,0x0E,0x68,0xFE,
+0xF7,0x0C,0x04,0x20,0x6D,0x92,0x0B,0x79,0x01,0x0B,0xDC,0x01,0x43,0xDE,0xDD,0x5F,
+0xDE,0x06,0x4F,0x7E,0xFA,0x47,0xDB,0xF6,0x43,0x7E,0xDD,0x5F,0x6C,0x99,0x20,0x00,
+0x7D,0x0B,0x39,0x03,0x0B,0x7C,0x03,0x43,0x7B,0xCD,0x5F,0x7B,0x06,0x4F,0x3B,0xFA,
+0x47,0x79,0xDE,0x43,0x3B,0xCD,0xC3,0x20,0x10,0xE8,0x20,0x03,0x61,0x0B,0x37,0x17,
+0x0F,0x38,0x01,0x0B,0x37,0x19,0x0F,0x38,0x03,0x0B,0x37,0x47,0x0A,0xF7,0x49,0x0E,
+0xF8,0x07,0x12,0xFA,0x00,0x52,0xF7,0x01,0x0F,0x38,0x05,0x1A,0xFA,0x00,0x9A,0xE2,
+0x1A,0xFD,0x00,0xE4,0x00,0x01,0x5F,0xD0,0x64,0x01,0xD6,0x0B,0x3B,0x00,0x0B,0x7B,
+0x02,0x43,0x79,0xDD,0x9F,0x6E,0x5F,0x63,0x9B,0x20,0x00,0x2F,0xC3,0x20,0x10,0x01,
+0xEB,0x39,0x08,0x51,0x0B,0x18,0x01,0x0F,0x17,0x47,0x9B,0x02,0x0F,0x37,0x49,0x1B,
+0x17,0x00,0x12,0xFA,0x00,0x9B,0x1D,0x46,0xF7,0xC4,0x1A,0xFA,0x00,0xE4,0x00,0x00,
+0xEB,0xD0,0x65,0x03,0x8E,0x13,0x7D,0x00,0x23,0x68,0xFE,0x0B,0x98,0x00,0x0B,0x59,
+0x00,0x8F,0x5C,0x43,0x5A,0xD8,0x0B,0x98,0x02,0x0F,0x57,0x17,0x0B,0x59,0x02,0x8F,
+0x5C,0x43,0x5A,0xD8,0x0B,0x98,0x04,0x0F,0x57,0x19,0x0B,0x59,0x08,0x8F,0x5C,0x43,
+0x5A,0xD8,0x0F,0x57,0x47,0x0B,0x58,0x06,0x0B,0x19,0x0A,0x8F,0x1A,0x43,0x78,0xD8,
+0x0F,0x77,0x49,0xE4,0x00,0x00,0x55,0x23,0x64,0x9A,0x0B,0x38,0x01,0x0F,0x37,0x17,
+0x0B,0x38,0x03,0x0F,0x37,0x19,0x0B,0x38,0x05,0x0B,0x18,0x07,0x0F,0x37,0x47,0x0F,
+0x17,0x49,0x9B,0x3E,0x13,0x1A,0x00,0x47,0x18,0xCC,0x1B,0x1A,0x00,0x9B,0x02,0x1B,
+0x17,0x00,0x85,0x29,0xC3,0x00,0x10,0x01,0xFF,0x18,0x0B,0x18,0xFE,0xE0,0x7F,0xFF,
+0x0E,0xF8,0x01,0x0E,0xF8,0x03,0x0E,0xF8,0x05,0x0E,0xF8,0x07,0x9B,0x01,0xC3,0x20,
+0x10,0x01,0xFF,0x39,0x01,0xB2,0x1B,0x19,0x01,0xC3,0x00,0x10,0x01,0xFF,0x18,0x0E,
+0x12,0x0E,0xF8,0x01,0x0E,0xF8,0x03,0x0E,0xF8,0x05,0x0E,0xF8,0x07,0xC3,0x00,0x10,
+0x01,0xF8,0x18,0x0A,0x50,0xC3,0x00,0x10,0x01,0xFF,0x18,0x0D,0x26,0x0E,0xF8,0x01,
+0x0E,0xF8,0x03,0x0E,0xF8,0x05,0x0E,0xF8,0x07,0x0E,0xF8,0x09,0x0E,0xF8,0x0B,0x0E,
+0xF8,0x0D,0x0E,0xF8,0x0F,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x08,0x56,0xC2,0xE0,0x10,
+0x01,0x18,0x19,0x00,0xF3,0x17,0x08,0x30,0x9B,0x3C,0x47,0x18,0xCC,0xFB,0x17,0x08,
+0x30,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0E,0x68,0x85,0x29,0xC2,0xE0,0x10,0x01,0xC3,
+0x00,0x10,0x01,0x5C,0x63,0x00,0xFE,0xF7,0x0A,0xB4,0xFF,0x18,0x08,0xE8,0x9B,0x20,
+0x20,0x80,0x6C,0xE4,0x00,0x00,0x47,0x4F,0x59,0x10,0x0B,0x97,0x00,0x0B,0x77,0x02,
+0x8F,0x58,0x8F,0x7C,0x9F,0x21,0x0F,0x7A,0x00,0x9E,0xE4,0x5F,0x59,0x00,0xD4,0x7A,
+0xFF,0x4D,0xE4,0x00,0x00,0xF7,0x0B,0x57,0x00,0x0B,0x37,0x02,0x8F,0x3A,0xC3,0x80,
+0x10,0x01,0x0F,0x38,0x00,0xFF,0x9C,0x0B,0xEA,0x13,0x3C,0x04,0x1F,0xB9,0xFF,0x4F,
+0xBD,0x10,0x43,0xD8,0xEC,0x8F,0xB7,0x4F,0x79,0x08,0x09,0x1D,0x00,0x1F,0x5B,0xFF,
+0x4F,0xBA,0x08,0x8F,0xB7,0x0B,0xBD,0x00,0x8F,0xA8,0x0F,0xBE,0x00,0x13,0x9C,0x01,
+0x27,0x84,0xF5,0x4F,0x39,0x10,0x4F,0x5A,0x10,0x43,0x98,0xCC,0x43,0xB7,0xCC,0x9F,
+0x61,0x0B,0xBD,0x00,0x4F,0x7B,0x08,0x8F,0x77,0x0B,0x7B,0x00,0x8F,0x7D,0x0F,0x7C,
+0x00,0x8F,0x1A,0x1F,0x59,0xFE,0x9F,0x3F,0x4F,0x5A,0x08,0x4F,0x39,0x08,0x8F,0x57,
+0x8E,0xF9,0x0B,0x5A,0x00,0x0A,0xF7,0x00,0x8E,0xFA,0x0E,0xF8,0x00,0x85,0x29,0xC3,
+0x00,0x10,0x01,0x5C,0x84,0x00,0xFF,0x18,0x0A,0xB4,0x20,0xA0,0x6C,0xE4,0x00,0x00,
+0x4B,0x4F,0x37,0x08,0x9E,0xE1,0x43,0x58,0xCC,0x8F,0x23,0x0B,0x5A,0x00,0x0F,0x59,
+0x01,0xE4,0x00,0x00,0x0D,0x9A,0xE0,0x5F,0x37,0x00,0xD4,0x99,0xFF,0x3D,0xE4,0x00,
+0x00,0x7F,0x20,0xA4,0xEE,0xE4,0x00,0x00,0x31,0x4F,0x37,0x08,0x9E,0xE1,0x43,0x43,
+0xCC,0x8F,0x38,0x0B,0x5A,0x00,0x0F,0x59,0x01,0xE4,0x00,0x00,0x0D,0x9A,0xE0,0x5F,
+0x37,0x00,0xD4,0x99,0xFF,0x3D,0xC2,0xE0,0x10,0x01,0x98,0x80,0xFE,0xF7,0x0B,0xEA,
+0x10,0x77,0x01,0x12,0xF7,0x04,0x40,0x63,0xBB,0xE7,0xFF,0xFD,0xC5,0x85,0x29,0x5C,
+0x84,0x00,0x5C,0x82,0x49,0x4A,0xE1,0x13,0x4F,0x04,0x09,0x9B,0xA2,0x43,0x18,0xBB,
+0x1F,0xC4,0xFE,0x1F,0x58,0xFE,0x1F,0x78,0xFF,0x1F,0x98,0x01,0x9A,0xE0,0x1D,0x04,
+0xFF,0xE4,0x00,0x00,0x73,0x27,0x24,0x6D,0xD6,0xFE,0x00,0xC2,0xD6,0xE8,0x00,0xA2,
+0xD6,0xFA,0x00,0x82,0xD6,0xFB,0x00,0x62,0xD6,0xF8,0x00,0x42,0xD6,0xFC,0x00,0xD6,
+0x20,0xA0,0x36,0x0B,0x23,0x01,0x4F,0x39,0x08,0xE4,0x00,0x00,0x15,0x0B,0x23,0x00,
+0x43,0x39,0xE8,0x0F,0x23,0x01,0x9E,0xE1,0x9C,0x62,0x5F,0x37,0x00,0xD4,0x99,0xFE,
+0x45,0x85,0x29,0x9C,0x38,0x98,0x63,0x0D,0x21,0x04,0xE7,0xFF,0x9D,0xC4,0x0D,0x21,
+0x06,0x9C,0x28,0xE4,0x00,0x7E,0xDB,0x9A,0xE9,0x9C,0x30,0x0D,0x41,0x08,0x0D,0x81,
+0x00,0xC1,0x80,0x10,0x01,0xFD,0x4C,0x0B,0xEA,0x1A,0xEA,0x04,0x9A,0xE2,0x1A,0xEA,
+0x01,0xFE,0xE0,0x07,0xFF,0x0E,0xEA,0x07,0x0E,0xEA,0x09,0xC2,0xE0,0x10,0x01,0x0D,
+0x61,0x04,0x99,0x64,0xF9,0x77,0x09,0x73,0xFE,0xE0,0x01,0x00,0x0E,0xEA,0x0B,0xFE,
+0xE0,0x04,0x00,0x0D,0x21,0x0C,0x0E,0xEA,0x03,0x50,0x60,0x1F,0x98,0x80,0xE7,0xFF,
+0x43,0x62,0x50,0x60,0x1F,0x98,0x81,0xE7,0xFF,0x43,0x50,0x52,0xE0,0x27,0xFA,0xEC,
+0x0B,0xEA,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x00,0xC9,0xC2,0xE0,0x10,0x01,0xEC,0x17,
+0x0B,0x10,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x0E,0x0C,0xC2,0xE0,0x10,0x01,0xEC,0x17,
+0x0C,0x03,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x09,0x4A,0xC2,0xE0,0x10,0x01,0xF8,0x17,
+0x09,0x4B,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0E,0x09,0xC2,0xE0,0x10,0x01,0xF8,0x17,
+0x09,0x49,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0B,0x2E,0xC2,0xE0,0x10,0x01,0xF8,0x17,
+0x0E,0x0A,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0B,0x02,0xC2,0xE0,0x10,0x01,0xF8,0x17,
+0x08,0x38,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x08,0x37,0xC2,0xE0,0x10,0x01,0xEC,0x17,
+0x0E,0x1C,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x0B,0xD9,0xC2,0xE0,0x10,0x01,0xF8,0x17,
+0x0E,0x69,0xC2,0xE0,0x10,0x01,0x9B,0x03,0xFB,0x17,0x0E,0x10,0xC2,0xE0,0x10,0x01,
+0xF8,0x17,0x0A,0x50,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x05,0xCC,0xC2,0xE0,0x10,0x01,
+0xFF,0x00,0x01,0xF4,0xEF,0x17,0x04,0xC5,0xC2,0xE0,0x10,0x01,0x19,0x6A,0x0C,0xF8,
+0x17,0x0E,0x1A,0xC0,0x60,0x10,0x01,0x98,0x80,0xFC,0x63,0x08,0xE8,0x50,0xA0,0x50,
+0xE7,0xFF,0xA6,0x7A,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x0C,0x04,0x9E,0xE4,0x18,0x17,
+0x00,0x18,0x17,0x01,0x18,0x17,0x02,0xC3,0x00,0x10,0x01,0x1E,0xF7,0x30,0xFF,0x18,
+0x0C,0xC8,0xD6,0xF8,0xFF,0x66,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0E,0x08,0xC2,0xE0,
+0x10,0x01,0xF3,0x37,0x00,0xB4,0xC2,0xF4,0x00,0x01,0xCB,0x17,0x3D,0xF9,0xCA,0xF7,
+0x3D,0xF8,0x1B,0x38,0x00,0xC3,0x00,0x10,0x01,0xF3,0x18,0x05,0xC9,0x1B,0x17,0x00,
+0xC2,0xE0,0x10,0x01,0xEB,0x17,0x09,0x4D,0x53,0x18,0x05,0xEF,0x17,0x09,0x4D,0xC2,
+0xE0,0x10,0x01,0xC3,0x00,0x00,0x01,0xFF,0x18,0x26,0xE3,0xEF,0x17,0x03,0xC8,0x53,
+0x00,0xFC,0xC2,0xE0,0x10,0x01,0xEF,0x17,0x08,0x3B,0xC2,0xE0,0x10,0x01,0xC3,0x00,
+0x00,0x01,0xFF,0x18,0x24,0xE2,0xEF,0x17,0x03,0xDC,0xC2,0xE0,0x10,0x01,0xC3,0x00,
+0x00,0x01,0xFF,0x18,0x22,0x9C,0xEF,0x17,0x03,0xB4,0xC2,0xE0,0x10,0x01,0xC3,0x00,
+0x00,0x01,0xFF,0x18,0x23,0x75,0xEF,0x17,0x03,0xF8,0xFF,0x00,0x04,0xCA,0xC2,0xE0,
+0x10,0x01,0xEF,0x17,0x0C,0x01,0x9B,0x02,0xC2,0xE0,0x10,0x01,0xC3,0x20,0x10,0x01,
+0xEF,0x17,0x04,0x48,0xC3,0x00,0x10,0x01,0xFE,0xF8,0x09,0x3A,0xEC,0x19,0x0A,0x07,
+0x18,0x17,0x01,0x18,0x17,0x02,0x18,0x17,0x03,0x0C,0x17,0x05,0x0C,0x17,0x07,0x0C,
+0x17,0x0B,0x0C,0x17,0x09,0xC3,0x60,0x10,0x01,0xC3,0x40,0x10,0x01,0xC3,0x20,0x10,
+0x01,0xF8,0x18,0x09,0x3A,0x9A,0xE0,0xFF,0x7B,0x0A,0xB4,0xFF,0x5A,0x0A,0x52,0xFF,
+0x39,0x0D,0x38,0x43,0x1B,0xBC,0x0C,0x18,0x01,0x43,0x1A,0xBC,0x0C,0x18,0x01,0x4F,
+0x17,0x08,0x8F,0x19,0x0C,0x18,0x00,0x9E,0xE2,0x5E,0xE9,0xC9,0x23,0xFF,0x9D,0x0D,
+0x81,0x02,0x0D,0x61,0x06,0x0D,0x41,0x0A,0x0D,0x21,0x0E,0x1C,0x21,0x10,0x85,0x29,
+0xE4,0x00,0x77,0x4F,0x98,0xC0,0x98,0x80,0x98,0x60,0x88,0xA4,0x1C,0x21,0xE8,0x0D,
+0x21,0x14,0xE7,0xFF,0x3B,0xAA,0xE7,0xFF,0xCF,0x9E,0xE7,0xFF,0xAA,0x0A,0xE7,0xFF,
+0xCE,0xC8,0xE7,0xFF,0xEF,0xC8,0x98,0x60,0x98,0x81,0xE7,0xFF,0x97,0x08,0x98,0x81,
+0x98,0x60,0x88,0xA4,0xE7,0xFF,0x97,0x0E,0x98,0x81,0x98,0x60,0x88,0xA4,0xE7,0xFF,
+0x97,0x24,0x98,0x80,0x98,0x61,0x88,0xA4,0xE7,0xFF,0x97,0x10,0x98,0xA0,0x98,0x62,
+0x98,0x81,0xE7,0xFF,0x96,0xFC,0x98,0x62,0x98,0x80,0xE7,0xFF,0x97,0x72,0x98,0x60,
+0x50,0x80,0xF6,0xE7,0xFF,0x97,0x7A,0x98,0x61,0x50,0x80,0xF6,0xE7,0xFF,0x97,0x68,
+0x98,0x62,0x50,0x80,0xF3,0xE7,0xFF,0x97,0x56,0x98,0x60,0xFC,0x80,0xA0,0x00,0xE7,
+0xFF,0x97,0x9E,0x98,0x61,0xFC,0x80,0xA0,0x00,0xE7,0xFF,0x97,0x8A,0x98,0x62,0xFC,
+0x80,0xA0,0x00,0xE7,0xFF,0x97,0x76,0xFC,0x80,0x01,0x26,0x98,0x62,0xE7,0xFF,0x97,
+0xBE,0xFC,0x60,0x01,0x5E,0xE7,0xFF,0xA0,0xA2,0xE7,0xFF,0xFA,0x1C,0x50,0x60,0x13,
+0xE7,0xFF,0x5B,0xE2,0x50,0x60,0xFC,0xE7,0xFF,0x5B,0xE8,0x50,0x60,0xB4,0xE7,0xFF,
+0x5B,0xEE,0x50,0x60,0x9C,0xE7,0xFF,0x5B,0xF4,0x50,0x60,0x9C,0xE7,0xFF,0x5B,0xFA,
+0x98,0x6A,0xE7,0xFF,0x5C,0x02,0x98,0x62,0xE7,0xFF,0x6D,0x84,0xE7,0xFF,0x45,0xBC,
+0x50,0x60,0x1A,0xE7,0xFF,0x9B,0x5A,0x9A,0xEE,0x0E,0xE1,0x00,0x52,0xE0,0x14,0x0E,
+0xE1,0x04,0xCA,0xE0,0x07,0xD0,0x98,0xC8,0x0E,0xE1,0x08,0x98,0xAE,0x88,0xE6,0x99,
+0x0A,0x98,0x6A,0x98,0x8C,0xE7,0xFF,0x3C,0xAE,0x98,0x81,0x98,0x60,0xE7,0xFF,0xCD,
+0x90,0x50,0x60,0x10,0xE7,0xFF,0xCD,0xBA,0xE4,0x00,0x4F,0x0E,0xE7,0xFF,0xF9,0x0E,
+0xE7,0xFF,0xBD,0x1E,0xE7,0xFF,0xBC,0x0A,0xC2,0xE0,0x10,0x01,0xF0,0x77,0x01,0xAC,
+0xE7,0xFF,0xCD,0x62,0x9B,0x00,0xCA,0xE0,0x48,0x00,0xC3,0x17,0x00,0x0D,0xC3,0x17,
+0x00,0x0F,0x53,0x18,0x04,0xC3,0x17,0x00,0x0D,0xC3,0x17,0x00,0x0F,0x53,0x18,0x08,
+0xC3,0x17,0x00,0x0D,0xC2,0xE0,0x01,0x1F,0x52,0xF7,0x06,0xC2,0xE0,0x01,0x1D,0xFC,
+0x60,0x01,0x00,0xE7,0xFF,0xCD,0x0C,0x50,0x60,0x20,0xE7,0xFF,0xCD,0x16,0x98,0x61,
+0x50,0x80,0x13,0x50,0xA0,0x37,0x98,0xC8,0xFC,0xE0,0x01,0x80,0xE7,0xFF,0xAF,0xE4,
+0xC3,0x00,0x00,0x01,0xC2,0xE0,0x10,0x01,0xFF,0x18,0x3E,0x88,0x0D,0x21,0x16,0xEF,
+0x17,0x03,0xFC,0x1C,0x21,0x18,0x85,0x29,0xC2,0xE0,0x10,0x01,0xEF,0x17,0x00,0xD6,
+0x23,0x05,0x08,0xEE,0xF7,0x00,0xD6,0x22,0xE8,0xEC,0xC3,0x00,0x10,0x01,0xC2,0xE0,
+0x10,0x01,0xFF,0x18,0x0D,0xD6,0xFE,0xF7,0x0B,0x28,0x0B,0x38,0x01,0xC3,0x60,0x10,
+0x01,0x0F,0x37,0x01,0xC3,0x40,0x10,0x01,0x0B,0x38,0x03,0xFF,0x7B,0x08,0x3C,0x0F,
+0x37,0x03,0x0B,0x18,0x05,0xFF,0x5A,0x0B,0xDA,0x0F,0x17,0x05,0x9A,0xE0,0xE4,0x00,
+0x00,0x69,0xC3,0x80,0x10,0x01,0xC3,0x60,0x10,0x01,0x9A,0xE0,0xFF,0x9C,0x0E,0x20,
+0xFF,0x7B,0x0A,0x08,0x43,0x3C,0xBC,0x43,0x1B,0xBC,0x0B,0x59,0x01,0x0B,0x39,0x25,
+0x0F,0x58,0x01,0x0F,0x38,0x25,0x9E,0xE2,0x5E,0xE4,0x89,0x23,0xFF,0xA5,0xE7,0xFF,
+0xFF,0x39,0x43,0x1B,0xBC,0x43,0x3A,0xBC,0x0B,0x39,0x01,0x0F,0x38,0x01,0x9E,0xE2,
+0x5E,0xE2,0x09,0x23,0xFF,0xBD,0x85,0x29,0xC3,0x80,0x10,0x01,0xC3,0x00,0x10,0x01,
+0x9A,0xE0,0xFF,0x9C,0x0A,0x08,0xFF,0x18,0x0A,0x52,0x43,0x5C,0xBC,0x43,0x38,0xBC,
+0x0B,0x7A,0x01,0x0B,0x5A,0x25,0x0F,0x79,0x01,0x0F,0x59,0x25,0x9E,0xE2,0x5E,0xE4,
+0x89,0x23,0xFF,0xA5,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x0B,0x28,0x0B,0x37,0x01,0x0F,
+0x38,0x49,0x0B,0x37,0x03,0x0A,0xF7,0x05,0x0F,0x38,0x4B,0x0E,0xF8,0x4D,0x85,0x29,
+0xE4,0x00,0x74,0xA3,0xC2,0xE0,0x10,0x01,0xFF,0x20,0xDF,0x9F,0xEB,0x17,0x0C,0x03,
+0x47,0x18,0xCC,0x9B,0x3E,0xEF,0x17,0x0C,0x03,0xC2,0xE0,0x10,0x01,0xEB,0x17,0x09,
+0x39,0x47,0x18,0xCC,0xEF,0x17,0x09,0x39,0x85,0x29,0xC2,0xE0,0x10,0x01,0x88,0xC3,
+0xF3,0xD7,0x0B,0xEA,0xC3,0x60,0x10,0x01,0xC3,0x80,0x10,0x01,0xFF,0x5B,0x0C,0x02,
+0xFF,0x9C,0x0B,0x2E,0xC3,0x00,0x10,0x01,0x1C,0x7E,0xFF,0x0A,0xFA,0x01,0x13,0xBC,
+0x00,0xFF,0x18,0x0A,0xB4,0x9B,0x20,0xE4,0x00,0x00,0x5B,0xD4,0x79,0x00,0xC8,0x08,
+0x98,0x00,0x09,0x18,0x02,0x8D,0x04,0xC1,0x00,0x1F,0x68,0x20,0x00,0x25,0xCA,0xF7,
+0x20,0x00,0x9B,0xA0,0x09,0x18,0x00,0x50,0x97,0x40,0x5D,0x04,0xD9,0x9F,0x21,0x4A,
+0xE4,0xB8,0x9F,0x02,0x5D,0x19,0x04,0xD7,0xC8,0xFE,0xA5,0xC3,0x00,0x10,0x01,0x0E,
+0xFA,0x01,0x1B,0xBC,0x00,0xFF,0x18,0x0C,0xC8,0x0B,0x38,0x00,0x53,0x77,0x20,0x5F,
+0x2C,0x99,0x9F,0x02,0xC3,0x20,0x10,0x01,0x4A,0xFB,0xB8,0xFF,0x39,0x0C,0xD8,0xD7,
+0x19,0xFF,0x56,0x98,0x60,0x0E,0xFA,0x01,0x88,0x83,0x98,0xA0,0xE7,0xFF,0xB9,0x8B,
+0x9C,0x38,0x0D,0x41,0x00,0x0D,0x21,0x04,0xC1,0x40,0x10,0x01,0x20,0x64,0x62,0xE7,
+0xFF,0xBA,0xA6,0x20,0x64,0x56,0xF2,0xEA,0x0B,0x2E,0x9E,0xE1,0xFA,0xEA,0x0B,0x2E,
+0xE4,0x00,0x00,0x19,0xE7,0xFF,0xBB,0x2C,0xF8,0x0A,0x0B,0x2E,0xE7,0xFF,0xD8,0x70,
+0x9A,0xE3,0x20,0x64,0x34,0xE7,0xFF,0xD8,0x5E,0x5C,0x60,0x49,0x4A,0xE3,0x4B,0xC3,
+0x00,0x10,0x01,0xF3,0x38,0x0B,0x2E,0xD6,0xF9,0x02,0x1D,0xC2,0xE0,0x10,0x01,0xF8,
+0x17,0x0E,0x0A,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0E,0x09,0xC2,0xE0,0x10,0x01,0xF8,
+0x17,0x09,0x49,0xC2,0xE0,0x10,0x01,0xF8,0x18,0x0B,0x2E,0xF8,0x17,0x0E,0x1A,0x0D,
+0x41,0x02,0xC2,0xE0,0x10,0x01,0x0D,0x21,0x06,0xEB,0x17,0x0C,0x03,0x9C,0x28,0x53,
+0x18,0x80,0xEF,0x17,0x0C,0x03,0xE7,0xFF,0x95,0xC9,0x0D,0x41,0x02,0x0D,0x21,0x06,
+0x9C,0x28,0x85,0x29,0x9C,0x38,0xC3,0x14,0x00,0x01,0x0D,0x21,0x04,0xCA,0xF8,0x22,
+0x00,0x0B,0x37,0x01,0xCB,0x18,0x26,0x18,0x9B,0x3F,0x0F,0x37,0x01,0x0B,0x38,0x01,
+0x53,0x39,0x02,0x0F,0x38,0x01,0x0B,0x17,0x01,0xFC,0x60,0x01,0x00,0x0C,0x17,0x01,
+0xE7,0xFF,0xC8,0x12,0xC2,0xE0,0x10,0x01,0x0D,0x21,0x06,0xEB,0x17,0x00,0xC9,0x9C,
+0x28,0xC7,0x18,0xFE,0xFF,0xEF,0x17,0x00,0xC9,0x85,0x29,0x5C,0xC6,0x00,0x9A,0xE0,
+0xE4,0x00,0x00,0x45,0x4F,0x17,0x08,0x4F,0x57,0x10,0x43,0x23,0xC4,0x8F,0x45,0x8F,
+0x04,0x0F,0x5A,0x02,0x0B,0x18,0x01,0x4F,0x5A,0x42,0x9E,0xE1,0x43,0x18,0xD5,0x0F,
+0x19,0x01,0x5F,0x17,0x00,0xD4,0xD8,0xFE,0xFD,0x85,0x29,0x9C,0x38,0x0D,0x21,0x04,
+0xE4,0x00,0x48,0x4A,0x0D,0x21,0x06,0xFC,0x60,0x01,0x00,0x9C,0x28,0xE7,0xFF,0xC7,
+0x49,0x9C,0x38,0x0D,0x21,0x04,0xE4,0x00,0x48,0x1E,0x0D,0x21,0x06,0xFC,0x60,0x01,
+0x00,0x9C,0x28,0xE7,0xFF,0xC7,0x0D,0x9C,0x38,0x98,0x80,0x0D,0x21,0x04,0x98,0x61,
+0xE7,0xFF,0xE2,0x90,0x98,0x60,0xE7,0xFF,0x94,0x00,0x98,0x61,0x98,0x80,0xE7,0xFF,
+0xE7,0xC2,0x98,0x62,0x98,0x80,0xE7,0xFF,0xE7,0xB2,0x0D,0x21,0x06,0x98,0x63,0x98,
+0x80,0x9C,0x28,0xE7,0xFF,0xE7,0x99,0x9C,0x38,0x0D,0x21,0x04,0xE7,0xFF,0xD5,0xF0,
+0x24,0x64,0x29,0x20,0x69,0x8A,0xE4,0x00,0x00,0x19,0xE7,0xFF,0xD5,0xD4,0xE4,0x00,
+0x00,0x57,0xE7,0xFF,0xC6,0xD6,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x00,0xDA,0x0A,0xF7,
+0x09,0x40,0x63,0xBD,0x5E,0xE3,0x04,0xC2,0xE1,0x76,0xEA,0x20,0x00,0x7D,0x98,0x62,
+0xE7,0xFF,0xE6,0xC0,0x20,0x60,0x5A,0x98,0x61,0x98,0x80,0xE7,0xFF,0xE1,0xBA,0x0D,
+0x21,0x06,0x98,0x60,0x9C,0x28,0xE7,0xFF,0x93,0x21,0x98,0x62,0x98,0x80,0xE7,0xFF,
+0xE1,0x94,0xFC,0x60,0x01,0x5E,0xE7,0xFF,0x98,0x74,0x0D,0x21,0x06,0x98,0x60,0x9C,
+0x28,0xE7,0xFF,0x92,0xA3,0x0D,0x21,0x06,0x9C,0x28,0x85,0x29,0xD0,0x69,0x06,0x5D,
+0x4F,0x03,0x10,0xC2,0xF8,0x00,0x21,0xFE,0xF7,0xB9,0xEC,0x8E,0xF8,0xC3,0x00,0x10,
+0x01,0x0F,0x37,0x02,0xFF,0x18,0x0D,0x38,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x0B,0x3C,
+0x87,0x29,0xC3,0x00,0x10,0x01,0xFF,0x18,0x0A,0xA4,0x0F,0x38,0x02,0xEF,0x37,0x00,
+0x90,0x0F,0x38,0x06,0x0F,0x18,0x0A,0xEF,0x37,0x00,0x94,0xEF,0x17,0x00,0x98,0xE4,
+0x00,0x01,0x11,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x0B,0x04,0x0F,0x37,0x02,0xEF,0x38,
+0x00,0x90,0x0F,0x37,0x06,0x0E,0xF7,0x0A,0xEF,0x38,0x00,0x94,0xEE,0xF8,0x00,0x98,
+0xE4,0x00,0x00,0xCF,0xCE,0xE3,0x00,0x48,0xC3,0x60,0x10,0x01,0xCC,0x63,0x00,0x12,
+0xFF,0x7B,0x09,0x74,0x4C,0x63,0x10,0x8F,0x77,0x8F,0x03,0x9A,0xE0,0x43,0x38,0xBC,
+0x43,0x5B,0xBC,0x0F,0x5A,0x02,0x0F,0x59,0x00,0x9E,0xE4,0x5E,0xE9,0x09,0x23,0xFF,
+0xBD,0xE4,0x00,0x00,0x6D,0x9C,0x7E,0xC3,0x40,0x10,0x01,0x5C,0x63,0x00,0xFF,0x5A,
+0x08,0x58,0xCF,0x03,0x00,0x48,0xCC,0x63,0x00,0x12,0x8F,0x58,0x4C,0x63,0x10,0x8C,
+0x77,0x9A,0xE0,0x43,0x03,0xBC,0x43,0x3A,0xBC,0x0F,0x39,0x02,0x0F,0x38,0x00,0x9E,
+0xE4,0x5E,0xE9,0x09,0x23,0xFF,0xBD,0x85,0x29,0xD0,0x69,0x06,0x3D,0x4F,0x03,0x10,
+0xC2,0xF8,0x00,0x21,0xFE,0xF7,0xBA,0x14,0x8E,0xF8,0xC3,0x00,0x10,0x01,0x0F,0x37,
+0x02,0xFF,0x18,0x0A,0x08,0xC2,0xE0,0x10,0x01,0xFE,0xF7,0x0B,0x28,0x87,0x29,0x0B,
+0x37,0x00,0xC3,0x00,0x10,0x01,0x4F,0x39,0x40,0xFF,0x18,0x0A,0xA4,0xE4,0x00,0x00,
+0x25,0x0B,0x37,0x00,0xC3,0x00,0x10,0x01,0x4F,0x39,0x40,0xFF,0x18,0x0B,0x04,0x0F,
+0x38,0x00,0x0B,0x37,0x02,0x0A,0xF7,0x04,0x4F,0x39,0x40,0x4E,0xF7,0x40,0x0F,0x38,
+0x04,0x0E,0xF8,0x08,0xE4,0x00,0x00,0xD9,0xCE,0xE3,0x00,0x24,0x8F,0x17,0xCE,0xE3,
+0x00,0x48,0xC3,0x60,0x10,0x01,0xFF,0x7B,0x09,0x74,0x8F,0x77,0x9A,0xE0,0x4F,0x37,
+0x08,0x43,0x58,0xBC,0x8F,0x3B,0x0B,0x5A,0x00,0x4F,0x5A,0x40,0x0F,0x59,0x00,0x9E,
+0xE2,0x5E,0xE4,0x89,0x23,0xFF,0xA9,0xE4,0x00,0x00,0x73,0x1E,0xE3,0xFE,0x5E,0xF7,
+0x00,0xCF,0x37,0x00,0x24,0xCE,0xF7,0x00,0x48,0xC3,0x60,0x10,0x01,0x8F,0x19,0xFF,
+0x7B,0x08,0x58,0x8F,0x77,0x9A,0xE0,0x4F,0x37,0x08,0x43,0x58,0xBC,0x8F,0x3B,0x0B,
+0x5A,0x00,0x4F,0x5A,0x40,0x0F,0x59,0x00,0x9E,0xE2,0x5E,0xE4,0x89,0x23,0xFF,0xA9,
+0xE7,0xFF,0xFC,0xD9,0x9C,0x38,0x0D,0x21,0x04,0x20,0x64,0x54,0x98,0x62,0xE7,0xFF,
+0xFE,0x56,0x98,0x63,0xE7,0xFF,0xFE,0x4A,0x98,0x69,0xE4,0x00,0x00,0x25,0x98,0x60,
+0xE7,0xFF,0xFE,0x32,0x98,0x61,0xE7,0xFF,0xFE,0x26,0x98,0x68,0x0D,0x21,0x06,0x9C,
+0x28,0xE7,0xFF,0xFE,0x11,0x9C,0x38,0x98,0x60,0x0D,0x21,0x04,0xE7,0xFF,0xFD,0xFA,
+0x98,0x61,0xE7,0xFF,0xFD,0xEE,0x0D,0x21,0x06,0x98,0x68,0x9C,0x28,0xE7,0xFF,0xFD,
+0xD9,0x20,0x80,0x64,0xD0,0x84,0x00,0xFA,0x20,0x88,0x90,0x20,0x8C,0xA8,0x5C,0x80,
+0x21,0x4B,0x0A,0x01,0x8A,0xF8,0xE4,0x00,0x00,0x49,0x53,0x00,0x19,0x8A,0xF8,0xE4,
+0x00,0x00,0x37,0x53,0x00,0x19,0x9A,0xE1,0xE4,0x00,0x00,0x25,0x53,0x00,0x32,0x8A,
+0xF8,0xE4,0x00,0x00,0x13,0x53,0x00,0x50,0x8A,0xF8,0xD0,0x6B,0x0F,0xAD,0x4F,0x43,
+0x10,0xC3,0x38,0x00,0x21,0xFF,0x39,0xBA,0x3C,0x8F,0x3A,0xC3,0x60,0x10,0x01,0x0F,
+0x99,0x02,0xC3,0x40,0x10,0x01,0xC3,0x20,0x10,0x01,0xFF,0x7B,0x0A,0x08,0xFF,0x5A,
+0x08,0x3C,0xFF,0x39,0x0B,0x28,0x87,0x89,0xCF,0x23,0x00,0x24,0x8F,0x79,0xCF,0x23,
+0x00,0x48,0xC0,0xA0,0x10,0x01,0x99,0x02,0xFC,0xA5,0x09,0x74,0xCB,0xC0,0x01,0xF4,
+0x8C,0xB9,0x9B,0x20,0x43,0x5B,0xCC,0x4F,0x99,0x08,0x0B,0xBA,0x00,0x8F,0x85,0x4F,
+0xBD,0x40,0x0F,0x5C,0x02,0x5F,0x5D,0x1D,0x43,0xBD,0xD5,0x48,0x98,0xB8,0xCF,0x5A,
+0x01,0xF4,0x43,0xA4,0xEB,0x43,0xBD,0x40,0x8F,0x5D,0x43,0x5A,0xF0,0x0F,0x5C,0x00,
+0x9F,0x22,0x5F,0x24,0x89,0x23,0xFF,0x3D,0xE4,0x00,0x02,0xEF,0x1F,0x23,0xFE,0x5F,
+0x39,0x00,0xCC,0xB9,0x00,0x24,0xCF,0x39,0x00,0x48,0xC0,0x80,0x10,0x01,0x8C,0xBB,
+0xFC,0x84,0x08,0x58,0x9B,0xC2,0x8C,0x99,0xCB,0xA0,0x01,0xF4,0x9B,0x20,0x43,0x45,
+0xCC,0x0B,0x9A,0x00,0x4F,0x59,0x08,0x4F,0x9C,0x40,0x43,0x64,0xD4,0x0F,0x5B,0x02,
+0x5F,0x5C,0x1D,0x43,0x9C,0xD5,0x49,0x18,0xB8,0xCF,0x5A,0x01,0xF4,0x43,0x88,0xE3,
+0x43,0x9C,0xF0,0x8F,0x5C,0x43,0x5A,0xE8,0x0F,0x5B,0x00,0x9F,0x22,0x5F,0x24,0x89,
+0x23,0xFF,0x39,0xE4,0x00,0x02,0x39,0xC3,0x40,0x10,0x01,0x9B,0xC2,0xFF,0x5A,0x0B,
+0x04,0xCB,0xA0,0x01,0xF4,0x0F,0x7A,0x02,0x0B,0x99,0x00,0x4F,0x9C,0x40,0x5F,0x7C,
+0x1D,0x43,0x9C,0xDD,0x49,0x18,0xB8,0xCF,0x7B,0x01,0xF4,0x43,0x88,0xE3,0x43,0x9C,
+0xF0,0x8F,0x7C,0x43,0x7B,0xE8,0x0F,0x7A,0x00,0x9F,0x22,0xC3,0x60,0x10,0x01,0x9F,
+0x44,0xFF,0x7B,0x0B,0x2E,0xD7,0x3B,0xFE,0x86,0xE4,0x00,0x01,0xAD,0xC3,0x40,0x10,
+0x01,0x9B,0xC2,0xFF,0x5A,0x0A,0xA4,0xCB,0xA0,0x01,0xF4,0x0F,0x7A,0x02,0x0B,0x99,
+0x00,0x4F,0x9C,0x40,0x5F,0x7C,0x1D,0x43,0x9C,0xDD,0x49,0x18,0xB8,0xCF,0x7B,0x01,
+0xF4,0x43,0x88,0xE3,0x43,0x9C,0xF0,0x8F,0x7C,0x43,0x7B,0xE8,0x0F,0x7A,0x00,0x9F,
+0x22,0xC3,0x60,0x10,0x01,0x9F,0x44,0xFF,0x7B,0x0B,0x2E,0xD7,0x3B,0xFE,0x86,0xE4,
+0x00,0x01,0x21,0x8B,0x3A,0x9B,0xC2,0xC3,0x40,0x10,0x01,0xCB,0xA0,0x01,0xF4,0xFF,
+0x5A,0x0D,0xE0,0x0F,0x7A,0x02,0x0B,0x99,0x00,0x4F,0x9C,0x40,0x5F,0x7C,0x1D,0x43,
+0x9C,0xDD,0x49,0x18,0xB8,0xCF,0x7B,0x01,0xF4,0x43,0x88,0xE3,0x43,0x9C,0xF0,0x8F,
+0x7C,0x43,0x7B,0xE8,0x0F,0x7A,0x00,0x9F,0x22,0xC3,0x60,0x10,0x01,0x9F,0x44,0xFF,
+0x7B,0x08,0x4C,0xD7,0x3B,0xFE,0x86,0xE4,0x00,0x00,0x91,0x8B,0x3A,0x9B,0xC2,0xC3,
+0x40,0x10,0x01,0xCB,0xA0,0x01,0xF4,0xFF,0x5A,0x09,0x50,0x0F,0x7A,0x02,0x0B,0x99,
+0x00,0x4F,0x9C,0x40,0x5F,0x7C,0x1D,0x43,0x9C,0xDD,0x49,0x18,0xB8,0xCF,0x7B,0x01,
+0xF4,0x43,0x88,0xE3,0x43,0x9C,0xF0,0x8F,0x7C,0x43,0x7B,0xE8,0x0F,0x7A,0x00,0x9F,
+0x22,0xC3,0x60,0x10,0x01,0x9F,0x44,0xFF,0x7B,0x08,0x4C,0xD7,0x3B,0xFE,0x86,0xE7,
+0xFF,0xF7,0xDB,0x9C,0x38,0x0D,0x21,0x04,0x0D,0x41,0x00,0x89,0x43,0x98,0x60,0x88,
+0x8A,0xE7,0xFF,0xFB,0x80,0x88,0x8A,0x98,0x61,0xE7,0xFF,0xFB,0x70,0x88,0x8A,0x0D,
+0x21,0x06,0x0D,0x41,0x02,0x98,0x68,0x9C,0x28,0xE7,0xFF,0xFB,0x51,0x1C,0x21,0xC8,
+0x0D,0x41,0x30,0x0D,0xA1,0x24,0x0D,0xC1,0x20,0x0D,0xE1,0x1C,0x0D,0x21,0x34,0x0D,
+0x61,0x2C,0x0D,0x81,0x28,0x0E,0x01,0x18,0x0E,0x21,0x14,0x0E,0x41,0x10,0x0E,0x61,
+0x0C,0x0E,0x81,0x08,0x0E,0xA1,0x04,0xC1,0xE0,0x10,0x01,0xFD,0xEF,0x0C,0x02,0x0A,
+0xEF,0x01,0xC7,0x17,0x7F,0xFF,0x0F,0x0F,0x01,0xC1,0xC0,0x10,0x01,0xC1,0xA0,0x10,
+0x01,0xC1,0x40,0x10,0x01,0x56,0xF7,0x08,0xFD,0xCE,0x09,0x4B,0xFD,0xAD,0x0B,0x10,
+0xFD,0x4A,0x0C,0x04,0x22,0xE1,0x80,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x05,0xCE,0x22,
+0xE5,0x54,0xC3,0x00,0x10,0x01,0x0A,0xEA,0x18,0xFF,0x18,0x01,0x3E,0x0B,0x58,0x0E,
+0xD7,0x57,0x01,0x04,0xCB,0x20,0x07,0xFF,0x43,0x59,0xD5,0xD6,0xFA,0x00,0xAC,0x0A,
+0xEA,0x16,0x0B,0x18,0x0A,0xD7,0x17,0x00,0x5C,0x43,0x19,0xC5,0xD6,0xF8,0x01,0x40,
+0xE7,0xFF,0xE3,0x68,0x9A,0xE3,0x0E,0xED,0x00,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x09,
+0x4A,0xC2,0xE0,0x10,0x01,0x18,0x0E,0x00,0xF8,0x17,0x0B,0x02,0xC2,0xE0,0x10,0x01,
+0xF8,0x17,0x08,0x38,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x0E,0x08,0x22,0xE0,0x24,0x98,
+0x60,0xE7,0xFF,0xC0,0xF4,0x0E,0xED,0x02,0x22,0xE0,0xE2,0x0A,0xEF,0x01,0x56,0xF7,
+0x40,0x22,0xE0,0x60,0xE7,0xFF,0x2F,0x7E,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0B,0x02,
+0x9A,0xE1,0x0E,0xED,0x00,0xE4,0x00,0x00,0x37,0x98,0x60,0xE7,0xFF,0xFD,0xD0,0x0A,
+0xEF,0x01,0x56,0xF7,0x20,0x22,0xE0,0x2E,0x98,0x6A,0x98,0x82,0xE7,0xFF,0xF9,0x4A,
+0x0E,0xED,0x02,0x22,0xE5,0x52,0x0A,0xEF,0x01,0x57,0x17,0x08,0x23,0x00,0x60,0xE7,
+0xFF,0xE2,0x6A,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x09,0x4A,0x9A,0xE2,0x0E,0xED,0x00,
+0xE4,0x00,0x00,0x6F,0x57,0x17,0x40,0x23,0x00,0xB4,0xC6,0xF7,0x20,0x00,0x22,0xE0,
+0x9A,0xC2,0xE0,0x10,0x01,0xF3,0x17,0x0B,0x02,0xC3,0x00,0x19,0x0A,0x20,0x00,0x35,
+0x98,0x62,0xE7,0xFF,0xFD,0x22,0xE4,0x00,0x00,0x23,0x9F,0x01,0xFB,0x17,0x0B,0x02,
+0xE4,0x00,0x00,0x0F,0x0C,0x0D,0x00,0xC2,0x40,0x10,0x01,0x0E,0xED,0x02,0xFE,0x52,
+0x08,0x57,0x22,0xE9,0x0A,0x0A,0xEF,0x01,0xC1,0x60,0x10,0x01,0x56,0xF7,0x08,0x22,
+0xE0,0xB0,0xF2,0xEB,0x09,0x4A,0x9E,0xE1,0xFA,0xEB,0x09,0x4A,0xE7,0xFF,0x2E,0x6E,
+0xF2,0xEB,0x09,0x4A,0x26,0xE4,0x81,0x9A,0xE3,0x18,0x12,0x00,0x0E,0xED,0x00,0xC2,
+0xE0,0x10,0x01,0xEC,0x17,0x08,0x37,0xE4,0x00,0x00,0x1B,0x9A,0xE6,0xF8,0x0B,0x09,
+0x4A,0x0E,0xED,0x00,0xC2,0x00,0x10,0x01,0xC1,0x80,0x10,0x01,0xC1,0x60,0x10,0x01,
+0x0E,0xED,0x02,0xFE,0x10,0x08,0x30,0xFD,0x8C,0x0B,0x18,0xFD,0x6B,0x0D,0x26,0xD2,
+0xE3,0x3A,0x4E,0x12,0xEA,0x00,0x22,0xE4,0x1A,0x18,0x12,0x00,0xE7,0xFF,0xC8,0xF0,
+0xC3,0x00,0x10,0x01,0xC2,0xE0,0x10,0x01,0xFF,0x20,0x02,0x58,0x20,0x68,0x1C,0xFF,
+0x20,0x01,0x2C,0xEF,0x37,0x01,0xAB,0xEF,0x38,0x01,0xAF,0x0A,0xEF,0x01,0x56,0xF7,
+0x08,0xD2,0xE0,0x38,0x72,0xC2,0x20,0x10,0x01,0xC1,0xE0,0x10,0x01,0x13,0x0A,0x00,
+0xFE,0x31,0x01,0xB2,0xFD,0xEF,0x0E,0x12,0xD3,0x01,0x10,0xD9,0x0B,0x8C,0x04,0x0A,
+0xEC,0x00,0xC3,0x8F,0xFF,0xE0,0x20,0x05,0xED,0x08,0xEA,0x48,0x0B,0x4C,0x06,0x09,
+0x2A,0x46,0x43,0xA7,0xD5,0x43,0xC9,0xE5,0x0B,0x6C,0x02,0x0B,0x2A,0x18,0x08,0xCA,
+0x16,0x43,0x1B,0xCD,0x41,0x06,0xBD,0x43,0x1E,0xC3,0x42,0x5D,0x43,0x8F,0x12,0x23,
+0x01,0x84,0x42,0x7C,0xBD,0x42,0x9B,0xD5,0x40,0x7D,0x9B,0x42,0x5E,0xA3,0x8C,0x72,
+0x20,0x60,0x40,0x24,0x60,0x28,0x27,0x00,0x2A,0xE4,0x00,0x00,0x8F,0x27,0x1D,0x0E,
+0x4E,0xB8,0xFA,0x46,0x55,0xC6,0x42,0x52,0xAD,0x4E,0xA3,0xFA,0x44,0x75,0x1E,0x42,
+0xA3,0xAD,0xD6,0xB2,0x01,0x74,0x42,0xB9,0xDD,0x42,0x88,0xA3,0x42,0x75,0x9B,0x8E,
+0x74,0x22,0x60,0x40,0x26,0x60,0x28,0x27,0x00,0x2A,0xE4,0x00,0x00,0x2D,0x27,0x1C,
+0x4A,0x4F,0x13,0xFA,0x46,0x78,0x9E,0x42,0x73,0xC5,0x9B,0x01,0xD6,0x72,0x06,0x18,
+0x42,0x47,0xDD,0x40,0x69,0xBD,0x40,0x86,0xE5,0x43,0x1A,0xCD,0x42,0x72,0x23,0x43,
+0x03,0xC3,0x8F,0x13,0x23,0x00,0xDC,0x43,0x97,0xE5,0x42,0x9A,0xDD,0x42,0xB2,0xE3,
+0x42,0x63,0xA3,0x8E,0x75,0x22,0x60,0x40,0x26,0x60,0x28,0x27,0x00,0x2A,0xE4,0x00,
+0x00,0x3B,0x27,0x1C,0x66,0x4E,0xB8,0xFA,0x44,0xB5,0xC6,0x40,0xA5,0xAD,0x4E,0xB3,
+0xFA,0x46,0x75,0x9E,0x42,0xB3,0xAD,0xD6,0xA5,0x01,0xA0,0x43,0x79,0xDD,0x41,0x08,
+0x43,0x43,0x7B,0xDB,0x43,0x59,0xD5,0x40,0x84,0x23,0x43,0x5A,0xD3,0x8F,0x68,0x8C,
+0x9A,0x9B,0x00,0xD4,0x9B,0x00,0x45,0x8B,0x64,0x9B,0x01,0x40,0x63,0x1B,0x42,0x52,
+0x93,0x8E,0x43,0xD6,0x5B,0x01,0xB1,0xE4,0x00,0x00,0x6F,0x42,0x79,0xD5,0x42,0x84,
+0xA3,0x43,0x93,0xE3,0x8F,0x94,0x23,0x80,0x40,0x27,0x80,0x28,0x27,0x00,0x2A,0xE7,
+0xFF,0xFF,0x79,0x27,0x1E,0xE2,0x4F,0x1C,0xFA,0x47,0x98,0xE6,0x43,0x9C,0xC5,0x9B,
+0x00,0xD7,0x85,0x00,0xF0,0xE7,0xFF,0xFF,0x4D,0x8B,0x72,0x53,0x00,0x10,0x43,0xDE,
+0xF3,0x43,0xBD,0xEB,0x53,0x40,0x11,0x8F,0xBE,0x5F,0xBB,0x1F,0x4B,0x18,0xD0,0x4F,
+0x58,0x21,0x47,0x18,0xD6,0x57,0x18,0x0F,0xD3,0x00,0x3E,0xA2,0x0D,0x2A,0x17,0x0C,
+0xEA,0x19,0x0C,0xCA,0x47,0x0F,0x2A,0x49,0xE4,0x00,0x0F,0x89,0x12,0xF0,0x00,0x9B,
+0x1E,0x46,0xF7,0xC4,0x98,0x63,0x1A,0xF0,0x00,0xE7,0xFF,0xDA,0x28,0xE4,0x00,0x00,
+0xE9,0xC2,0xEF,0xFF,0xE4,0x20,0x01,0xB3,0x13,0x32,0x00,0x09,0x2C,0x02,0x9F,0x21,
+0x0B,0x6A,0x16,0x5F,0x39,0x00,0x41,0x1B,0xBD,0x0B,0x4A,0x18,0x0B,0xAA,0x46,0x43,
+0xDA,0x4D,0x42,0xFD,0xBD,0x0B,0x8A,0x48,0x42,0xF7,0xBB,0x41,0x3C,0x4D,0x1B,0x32,
+0x00,0x41,0x29,0x4B,0x8E,0xE9,0x41,0x08,0x43,0x43,0xDE,0xF3,0x8F,0xC8,0x5E,0xFE,
+0x1F,0x52,0xE0,0x10,0x4A,0xE0,0xB8,0x22,0xE0,0x3C,0x0F,0xAA,0x17,0x0F,0x8A,0x19,
+0x0F,0x6A,0x47,0x0F,0x4A,0x49,0x27,0x28,0xDB,0x12,0xF0,0x00,0x9B,0x3C,0x46,0xF7,
+0xCC,0x9F,0x1F,0x1A,0xF0,0x00,0x1B,0x0A,0x00,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0E,
+0x68,0x12,0xF1,0x00,0x1A,0xEA,0x10,0x12,0xF1,0x01,0x1A,0xEA,0x40,0xE7,0xFF,0x29,
+0x4C,0x12,0xEA,0x00,0xD2,0xE1,0x3B,0xAE,0xE4,0x00,0x01,0xD9,0x18,0x12,0x00,0xE7,
+0xFF,0xFF,0xC5,0x23,0x07,0x7A,0x18,0x12,0x00,0x0A,0xEC,0x04,0xC2,0xEF,0xFF,0xE0,
+0x23,0xFF,0x45,0x0B,0xCA,0x16,0x0B,0xAA,0x18,0x0B,0x2C,0x00,0x0B,0x0C,0x02,0x43,
+0x9E,0xCD,0x43,0x7D,0xC5,0x43,0xDE,0xBD,0x0B,0x4C,0x06,0x43,0xDE,0xF3,0x43,0xBD,
+0xD5,0x43,0x9C,0xE3,0x43,0xBD,0xEB,0x43,0x7B,0xDB,0x8F,0xBE,0x8F,0x7C,0xD7,0xBB,
+0x38,0x79,0xE4,0x00,0x0D,0xCB,0x0B,0x8B,0x03,0x43,0x98,0xE5,0x5F,0x9C,0x06,0x4F,
+0x7C,0xFA,0x47,0x9B,0xE6,0x43,0x7C,0xDD,0xC3,0x60,0x10,0xE8,0x20,0x00,0xC1,0xC3,
+0x60,0x10,0x01,0x0B,0xAB,0x03,0xFF,0x9B,0x0B,0xFC,0xEF,0xBB,0x0B,0xFD,0x0B,0x6B,
+0x07,0x0F,0x7C,0x03,0xC3,0x60,0x10,0x01,0xFF,0x9B,0x08,0x4E,0xEF,0x3B,0x08,0x4F,
+0x0F,0x1C,0x03,0x13,0x10,0x00,0x53,0x18,0x02,0x1B,0x10,0x00,0x0B,0x0F,0x05,0x0F,
+0x0F,0x01,0x0B,0x0F,0x07,0x0F,0x0F,0x03,0x0B,0x0B,0x09,0x0F,0x0B,0x01,0x0B,0x0B,
+0x0B,0x0F,0x0B,0x03,0x0B,0x0B,0x0D,0x0E,0xEC,0x01,0x0F,0x0B,0x05,0xFE,0xE0,0x7F,
+0xFF,0x0B,0x0B,0x0F,0x0E,0xEC,0x05,0x0E,0xEC,0x07,0x0E,0xEF,0x05,0x0E,0xEF,0x07,
+0x0E,0xEB,0x09,0x0E,0xEB,0x0B,0x0F,0x0B,0x07,0x0E,0xEB,0x0D,0x0E,0xEB,0x0F,0x9B,
+0x01,0x12,0xF1,0x01,0x0F,0x4C,0x03,0x1A,0xF1,0x00,0x42,0xF8,0xBD,0x1A,0xF1,0x01,
+0xE7,0xFF,0xFE,0x03,0x0A,0xEA,0x17,0x0B,0x0C,0x01,0x43,0x18,0xBD,0x5F,0x18,0x06,
+0x4E,0xF8,0xFA,0x47,0x17,0xC6,0x42,0xF8,0xBD,0xC3,0x00,0x10,0x01,0xEB,0x38,0x01,
+0xAE,0xD6,0xF9,0x01,0x2C,0x0A,0xEA,0x19,0x0B,0x0C,0x03,0x43,0x18,0xBD,0x5F,0x18,
+0x06,0x4E,0xF8,0xFA,0x47,0x17,0xC6,0x42,0xF8,0xBD,0xC3,0x00,0x10,0x01,0xEB,0x38,
+0x01,0xAA,0xD6,0xF9,0x32,0x38,0xE7,0xFF,0x27,0xA2,0xD0,0x60,0x31,0xFA,0xC2,0xE0,
+0x10,0x01,0xEE,0xF7,0x0B,0xFA,0xD2,0xE0,0x31,0x9E,0xE7,0xFF,0xD9,0xD4,0xC2,0xE0,
+0x10,0x01,0xEE,0xF7,0x05,0xCE,0x22,0xE4,0x2C,0xE7,0xFF,0xD9,0xB6,0xE4,0x00,0x00,
+0x77,0x9B,0x01,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x05,0xCE,0x22,0xE4,0x2E,0xC2,0xE0,
+0x10,0x01,0xEC,0x17,0x0B,0xF8,0x23,0x00,0x88,0xFE,0xE0,0x7F,0xFF,0x18,0x0E,0x00,
+0x0E,0xEC,0x01,0x0E,0xEC,0x03,0x0E,0xEC,0x05,0x0E,0xEC,0x07,0x18,0x11,0x00,0x1B,
+0x11,0x01,0x9A,0xE5,0xE4,0x00,0x0B,0x23,0xC2,0xE0,0x10,0x01,0xCB,0xC0,0xFF,0xFD,
+0xEB,0x17,0x08,0x37,0x9F,0x01,0x5F,0x18,0x04,0xD7,0x1E,0x00,0x31,0x9B,0x1E,0xEF,
+0x17,0x08,0x37,0x1D,0xAA,0x16,0x13,0x2A,0x00,0x8A,0xED,0x9B,0x00,0xE4,0x00,0x00,
+0x35,0x0B,0x57,0x01,0x9F,0x01,0x0F,0x4C,0x01,0x5F,0x18,0x00,0x0B,0x57,0x03,0x1E,
+0xF7,0x30,0x0F,0x4C,0x03,0x9D,0x84,0xD7,0x19,0xFF,0x56,0xE7,0xFF,0x72,0x84,0xC2,
+0xE0,0x10,0x01,0xEE,0xF7,0x0B,0x26,0x22,0xE4,0x26,0x99,0x80,0xE4,0x00,0x00,0x5F,
+0xE7,0xFF,0xC0,0x88,0x20,0x6B,0xD8,0xE7,0xFF,0xC0,0x7A,0x20,0x6C,0xAE,0xE7,0xFF,
+0xFF,0xD9,0xCC,0x8C,0x00,0x30,0x88,0xCC,0x1C,0x84,0x10,0x9D,0x81,0x8C,0x8A,0x5D,
+0x8C,0x00,0x1C,0x64,0x06,0x9C,0x88,0xE7,0xFF,0x7E,0xD6,0x10,0xAA,0x00,0xD4,0xAC,
+0xFF,0x25,0xE4,0x00,0x00,0x11,0xE7,0xFF,0x7E,0x28,0xC3,0x60,0x10,0x01,0x11,0xCA,
+0x00,0x8A,0xEF,0xFF,0x7B,0x08,0x4C,0x8B,0x0D,0x9B,0x80,0x52,0x20,0xFA,0x9A,0x41,
+0xE4,0x00,0x01,0xA7,0x0B,0x37,0x00,0xC3,0x2F,0xFF,0xE0,0x20,0x00,0x35,0x0B,0x37,
+0x02,0xC3,0x2F,0xFF,0xE4,0x20,0x00,0x49,0x0B,0x38,0x01,0x18,0x1B,0x00,0x0F,0x37,
+0x01,0x0B,0x38,0x03,0x0F,0x37,0x03,0x09,0x18,0x00,0x09,0x37,0x01,0x0B,0xD8,0x02,
+0x43,0x48,0x4D,0x0B,0xB7,0x03,0x5F,0x5A,0x06,0x43,0x3E,0xED,0x11,0x9B,0x00,0x5F,
+0x39,0x06,0x21,0x80,0xDE,0x4F,0xBA,0xFA,0x47,0x5D,0xD6,0x43,0x5A,0xED,0x4F,0xB9,
+0xFA,0x47,0x3D,0xCE,0x43,0x39,0xED,0x43,0xBA,0xCC,0x5F,0xAB,0x51,0x20,0x00,0x31,
+0x1A,0x5B,0x00,0x0D,0x17,0x01,0x0F,0xD7,0x03,0x0B,0x37,0x01,0x0F,0x38,0x01,0x0B,
+0x37,0x03,0x0F,0x38,0x03,0xE4,0x00,0x00,0xA5,0x43,0xD9,0xCB,0x41,0x1A,0xD3,0x8D,
+0x1E,0xCB,0xC0,0xF4,0x23,0xD5,0x1E,0x01,0xB4,0x4F,0xDA,0xFA,0x45,0x9E,0xD6,0x41,
+0x08,0x88,0x43,0xCC,0xF5,0x5D,0x08,0x06,0x4D,0x99,0xFA,0x43,0x48,0xD3,0x46,0x6C,
+0xCE,0x43,0x28,0xCB,0x41,0x93,0x65,0x8F,0xCC,0x9F,0xC1,0x43,0x5A,0xF0,0x43,0xD9,
+0xF0,0x8D,0x3A,0x8F,0xBE,0x0D,0x38,0x01,0x0F,0xB8,0x03,0x0B,0x38,0x01,0x0F,0x37,
+0x01,0x0B,0x38,0x03,0x0F,0x37,0x03,0x9F,0x81,0x9E,0xE4,0x5F,0x9C,0x00,0x1F,0x18,
+0x30,0x9F,0x61,0xD7,0x8E,0xF9,0x8E,0xE7,0xFF,0xBE,0x3A,0x20,0x68,0x36,0x9B,0x05,
+0xC2,0xE0,0x10,0x01,0xEF,0x17,0x01,0xB1,0x13,0x2A,0x00,0x1E,0xEB,0x04,0x8B,0x0D,
+0x9B,0x40,0xD7,0x59,0x02,0x0A,0x0B,0x77,0x00,0xC3,0x6F,0xFF,0xE0,0x20,0x00,0x41,
+0x0B,0x77,0xFD,0x0F,0x77,0x01,0x0B,0x77,0xFF,0xE4,0x00,0x00,0x1B,0x0B,0x78,0x01,
+0x0F,0x77,0x01,0x0B,0x78,0x03,0x0F,0x77,0x03,0x0B,0x78,0x01,0x9F,0x41,0x0F,0x77,
+0xFD,0x5F,0x5A,0x00,0x0B,0x78,0x03,0x1F,0x18,0x30,0x0F,0x77,0xFF,0x9E,0xE8,0xE7,
+0xFF,0xFF,0x87,0xC2,0xE0,0x10,0x01,0x23,0x24,0x82,0x9B,0x02,0xFB,0x17,0x08,0x56,
+0xC2,0xE0,0x10,0x01,0xEA,0xF7,0x01,0xB0,0x9B,0x4A,0x9B,0x00,0x43,0x5A,0xBD,0x9B,
+0x6A,0x8A,0xEB,0xE4,0x00,0x00,0x8F,0xF8,0x17,0x08,0x56,0xE7,0xFF,0xFF,0xCB,0x0B,
+0x97,0x04,0x0B,0xB7,0x00,0x0B,0xD7,0x06,0x43,0xBD,0xE5,0x9F,0x01,0x43,0xBA,0xEB,
+0x5F,0x18,0x00,0x43,0xBD,0xD8,0x8F,0xBC,0x0B,0x97,0x02,0x0F,0xAD,0x01,0x43,0x9C,
+0xF5,0x0F,0xB7,0x01,0x43,0x9A,0xE3,0x43,0x9C,0xD8,0x8F,0x9E,0x5F,0x9C,0x06,0x0F,
+0x8D,0x03,0x0F,0x97,0x03,0x1D,0xAD,0x30,0x9E,0xE8,0xD7,0x19,0xFE,0x2E,0x12,0xF0,
+0x00,0x56,0xF7,0x02,0x22,0xE0,0x24,0x98,0x64,0xE7,0xFF,0xD1,0x48,0x12,0xEA,0x00,
+0xD2,0xE1,0x05,0xCE,0xC3,0x40,0x10,0x01,0xC2,0xE0,0x10,0x01,0xF3,0x3A,0x01,0xB4,
+0xFF,0x17,0x08,0x28,0xC3,0x20,0x1F,0xE4,0x20,0x00,0x61,0x0B,0x2A,0x17,0xF8,0x1A,
+0x01,0xB4,0xEF,0x37,0x08,0x29,0x0A,0xEA,0x19,0x0E,0xF8,0x03,0xE4,0x00,0x01,0x31,
+0x23,0x25,0xE2,0x0B,0x4A,0x16,0xEB,0x37,0x08,0x28,0x43,0x7A,0xCD,0x1F,0x7B,0x1D,
+0x5F,0x67,0x5B,0x20,0x01,0x29,0x0B,0x8A,0x18,0x0B,0xB8,0x02,0x43,0x7C,0xED,0x1F,
+0x7B,0x27,0x5F,0x69,0xDB,0x20,0x00,0xE1,0x9B,0x63,0x4F,0x39,0x08,0x8F,0x3A,0x43,
+0x39,0xD8,0x5F,0x39,0x06,0xEF,0x37,0x08,0x29,0x0F,0x2A,0x17,0x4E,0xFD,0x08,0x0F,
+0x2F,0x01,0x8E,0xFC,0x0F,0x2B,0x01,0x42,0xF7,0xD8,0x5E,0xF7,0x06,0x0E,0xF8,0x03,
+0x0E,0xEA,0x19,0x0E,0xEF,0x03,0x0E,0xEB,0x03,0xE4,0x00,0x00,0x67,0xC2,0xE0,0x10,
+0x01,0xFF,0x17,0x08,0x28,0xEF,0x57,0x08,0x29,0xC2,0xE0,0x10,0x01,0xEA,0xF7,0x0C,
+0x1D,0x0E,0xF8,0x03,0xE4,0x00,0x00,0x31,0x0B,0x2A,0x17,0xEF,0x37,0x08,0x29,0x0A,
+0xEA,0x19,0x0E,0xF8,0x03,0xE4,0x00,0x00,0x1F,0x22,0xE8,0x2E,0xC2,0xE0,0x10,0x01,
+0xF8,0x17,0x01,0xB4,0x13,0x0A,0x00,0xC2,0xE0,0x10,0x01,0x0E,0xA1,0x06,0x0E,0x81,
+0x0A,0x0E,0x61,0x0E,0x0E,0x41,0x12,0x0E,0x21,0x16,0x0E,0x01,0x1A,0x0D,0xE1,0x1E,
+0x0D,0xC1,0x22,0x0D,0xA1,0x26,0x0D,0x81,0x2A,0x0D,0x61,0x2E,0x0D,0x41,0x32,0x0D,
+0x21,0x36,0xFB,0x17,0x0A,0x50,0x98,0x61,0x1C,0x21,0x38,0xE7,0xFF,0xB0,0x81,0x18,
+0x0E,0x00,0x9A,0xE4,0xE4,0x00,0x04,0x63,0xD2,0xE4,0x01,0xE6,0x0A,0xEF,0x01,0x56,
+0xF7,0x08,0x22,0xE0,0x5C,0x9A,0xE3,0x18,0x12,0x00,0x0E,0xED,0x00,0xC2,0xE0,0x10,
+0x01,0xEC,0x17,0x08,0x37,0xE4,0x00,0x04,0xD5,0x12,0xEE,0x00,0x9E,0xE1,0x5E,0xF7,
+0x00,0x1A,0xEE,0x00,0xD2,0xE1,0x12,0xD9,0x9A,0xE5,0x18,0x0E,0x00,0x0E,0xED,0x00,
+0xE4,0x00,0x04,0x9F,0xD2,0xE5,0x0B,0x56,0xFE,0xE0,0x7F,0xFF,0xC3,0x20,0x10,0x01,
+0xFF,0x19,0x0B,0x30,0xEE,0xF9,0x0B,0x31,0x0E,0xF8,0x03,0xC3,0x20,0x10,0x01,0x0E,
+0xF8,0x05,0xFF,0x59,0x08,0x4C,0x0E,0xF8,0x07,0xF8,0x19,0x08,0x4C,0x12,0xEE,0x00,
+0x18,0x1A,0x01,0x9E,0xE1,0x1A,0xEE,0x00,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x0A,0x50,
+0x22,0xE9,0x36,0x12,0xF0,0x00,0x56,0xF7,0x01,0x22,0xE1,0x10,0xC2,0xE0,0x10,0x01,
+0xF8,0x17,0x08,0x56,0xC1,0x40,0x10,0x01,0xF2,0xEA,0x0E,0x68,0x22,0xE8,0x66,0x98,
+0x65,0xE7,0xFF,0xCD,0xF8,0x98,0x61,0xE7,0xFF,0xAF,0x28,0x9A,0xE1,0xFA,0xEA,0x0E,
+0x68,0xE4,0x00,0x01,0x5F,0xD2,0xE1,0x05,0x36,0x98,0x65,0xE7,0xFF,0xCD,0xC4,0x98,
+0x61,0xE7,0xFF,0xAE,0xF4,0xF8,0x0A,0x0E,0x68,0xE4,0x00,0x01,0x2F,0x0B,0x2C,0x00,
+0x0B,0x4B,0x00,0x43,0x19,0xD5,0x5F,0x18,0x06,0x4E,0xF8,0xFA,0x47,0x17,0xC6,0x42,
+0xF8,0xBD,0x5E,0xEC,0x99,0x20,0x00,0x7D,0x0A,0xEB,0x03,0x0B,0x0C,0x03,0x43,0x18,
+0xBD,0x5F,0x18,0x06,0x4E,0xF8,0xFA,0x47,0x17,0xC6,0x42,0xF8,0xBD,0xC2,0xE0,0x10,
+0xE8,0x20,0x01,0x69,0xC3,0x00,0x10,0x01,0xF2,0xF8,0x08,0x56,0x22,0xE8,0xB6,0x8F,
+0x3A,0x43,0x39,0xB8,0x0F,0x2A,0x17,0xC3,0x20,0x10,0x01,0xEB,0x59,0x0B,0x1A,0xC3,
+0x20,0x10,0x01,0xEB,0x39,0x0D,0x28,0x8F,0x3A,0x42,0xF9,0xB8,0x0E,0xEA,0x19,0x9A,
+0xE1,0xFA,0xF8,0x08,0x56,0xE4,0x00,0x00,0x33,0x22,0xE4,0x8A,0x0F,0x2A,0x17,0xF8,
+0x18,0x08,0x56,0xC3,0x20,0x10,0x01,0xEB,0x39,0x0B,0x1B,0x0F,0x2A,0x19,0x1A,0xEA,
+0x00,0x98,0x61,0xE7,0xFF,0xAD,0xD0,0xE4,0x00,0x00,0x13,0x9A,0xE3,0x1A,0xEE,0x00,
+0x12,0xEE,0x00,0xD2,0xE2,0x09,0x61,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x08,0x37,0xE7,
+0xFF,0x1C,0x48,0x9B,0x03,0xC2,0xE0,0x10,0x01,0xFB,0x17,0x0E,0x08,0xE7,0xFF,0xCF,
+0x8E,0xE7,0xFF,0x75,0x92,0xC2,0xE0,0x10,0x01,0xF3,0x17,0x01,0xB4,0xC3,0x00,0x1F,
+0xE0,0x20,0x00,0x25,0x9B,0x01,0xFB,0x17,0x01,0xB4,0x98,0x60,0xE7,0xFF,0xAD,0x3E,
+0xC2,0xE0,0x10,0x01,0xF8,0x17,0x08,0x38,0x9A,0xE6,0xE4,0x00,0x01,0x17,0xD2,0xE6,
+0x07,0x0E,0x0A,0xEF,0x01,0x56,0xF7,0x40,0x22,0xE0,0x26,0x98,0x64,0xE7,0xFF,0xEA,
+0x2C,0xC3,0x00,0x10,0x01,0xF2,0xF8,0x08,0x38,0x9E,0xE1,0x5E,0xF7,0x00,0xFA,0xF8,
+0x08,0x38,0x5E,0xE6,0x53,0x0A,0xEF,0x01,0x20,0x01,0x35,0x56,0xF7,0x40,0x22,0xE0,
+0x50,0x9A,0xE1,0x0E,0xED,0x00,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0B,0x02,0xE4,0x00,
+0x01,0x43,0x0C,0x0D,0x00,0x98,0x60,0x0E,0xA1,0x06,0x0E,0x81,0x0A,0x0E,0x61,0x0E,
+0x0E,0x41,0x12,0x0E,0x21,0x16,0x0E,0x01,0x1A,0x0D,0xE1,0x1E,0x0D,0xC1,0x22,0x0D,
+0xA1,0x26,0x0D,0x81,0x2A,0x0D,0x61,0x2E,0x0D,0x41,0x32,0x0D,0x21,0x36,0x1C,0x21,
+0x38,0xE7,0xFF,0xE9,0x65,0x56,0xF7,0x08,0x22,0xE1,0x9C,0xC2,0xE0,0x10,0x01,0xF8,
+0x17,0x09,0x4A,0x9A,0xE2,0x0E,0xED,0x00,0xE4,0x00,0x00,0xAF,0xC2,0xEF,0xFF,0xE4,
+0x23,0xE0,0xF1,0xE7,0xFF,0xF1,0x7D,0x98,0x62,0xE7,0xFF,0xCA,0xA8,0xFE,0xE0,0x7F,
+0xFF,0x0E,0xEC,0x05,0x0E,0xEC,0x07,0x0E,0xEF,0x05,0x0E,0xEF,0x07,0x0E,0xEB,0x09,
+0x0E,0xEB,0x0B,0x0E,0xEB,0x0D,0x0E,0xEB,0x0F,0xE7,0xFF,0xF1,0x31,0x0B,0x8B,0x01,
+0x43,0x99,0xE5,0x5F,0x9C,0x06,0x4F,0x7C,0xFA,0x47,0x9B,0xE6,0x43,0x7C,0xDD,0x5F,
+0x6C,0x99,0x23,0xE3,0x93,0xE7,0xFF,0xF1,0xF5,0x9B,0x00,0xE7,0xFF,0xF3,0xD1,0x0E,
+0xA1,0x06,0x0E,0x81,0x0A,0x0E,0x61,0x0E,0x0E,0x41,0x12,0x0E,0x21,0x16,0x0E,0x01,
+0x1A,0x0D,0xE1,0x1E,0x0D,0xC1,0x22,0x0D,0xA1,0x26,0x0D,0x81,0x2A,0x0D,0x61,0x2E,
+0x0D,0x41,0x32,0x0D,0x21,0x36,0x1C,0x21,0x38,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,
+0xF7,0x3D,0xF9,0x1C,0x21,0xC0,0x0D,0x21,0x3C,0x0D,0x41,0x38,0x0D,0x61,0x34,0x0D,
+0x81,0x30,0x0D,0xA1,0x2C,0x0D,0xC1,0x28,0x0D,0xE1,0x24,0x0E,0x01,0x20,0x0E,0x21,
+0x1C,0x0E,0x41,0x18,0x13,0x17,0x00,0xC2,0xE0,0x10,0x01,0xFB,0x17,0x00,0xB4,0xF3,
+0x17,0x00,0xB4,0x23,0x00,0x2C,0xF2,0xF7,0x00,0xB4,0xD2,0xE1,0x4A,0x3E,0xC1,0xA0,
+0x10,0x01,0xFD,0xAD,0x0C,0x02,0x0A,0xED,0x01,0x56,0xF7,0x80,0xD2,0xE0,0x48,0x46,
+0xC3,0x60,0x10,0x01,0xFD,0x9B,0x0A,0xB4,0x0B,0x4C,0x00,0x0B,0x0C,0x4A,0x5F,0x3A,
+0x04,0xD3,0x05,0x00,0x98,0x1E,0xF8,0xFB,0x53,0x80,0x28,0x4E,0xF7,0x08,0x5E,0xE4,
+0xF1,0x4A,0xF7,0xE0,0x5E,0xFA,0x15,0x4A,0xF7,0xD0,0x43,0x39,0xBD,0x5F,0x39,0x06,
+0x0F,0x2C,0x01,0x4F,0x99,0x10,0x9B,0x45,0x0A,0xEC,0x02,0x43,0x5C,0xD0,0xD6,0xFA,
+0x01,0x08,0xD3,0x25,0x00,0xE8,0x9B,0x3B,0x43,0x9C,0xC8,0x9B,0x24,0x8E,0xFC,0xCE,
+0xF7,0x00,0x05,0x42,0xF7,0xC8,0x8F,0x57,0x0F,0x4C,0x03,0xE4,0x00,0x00,0x8B,0xCF,
+0x57,0x00,0x05,0x9B,0x84,0x43,0x5A,0xE0,0xD7,0x3A,0x01,0xC0,0xD2,0xE5,0x01,0xA0,
+0x43,0x39,0xD5,0xCF,0x39,0x00,0x05,0x43,0x99,0xE0,0x8F,0x5C,0x0F,0x4C,0x01,0x53,
+0x20,0x19,0x5F,0x57,0x04,0x5F,0x05,0x39,0x20,0x00,0x31,0x1F,0x38,0xEF,0x5F,0x02,
+0x39,0x4B,0x39,0x00,0x5F,0x37,0x15,0x4A,0xF9,0xB8,0x42,0xFA,0xBD,0x0E,0xEC,0x03,
+0x0B,0x2C,0x24,0x4F,0x18,0x08,0x5E,0xF9,0x04,0x53,0x40,0x28,0x5F,0x07,0x19,0x20,
+0x00,0x31,0x1F,0x58,0xEF,0x5F,0x02,0x39,0x4B,0x5A,0x00,0x5F,0x59,0x15,0x4B,0x3A,
+0xC8,0x42,0xF7,0xCD,0x5E,0xF7,0x06,0x0E,0xEC,0x25,0x9B,0x64,0xCE,0xF7,0x00,0x07,
+0x0B,0x0C,0x26,0x42,0xF7,0xD8,0xD7,0x17,0x00,0xA8,0x43,0x18,0xBD,0x9B,0x2D,0xCF,
+0x18,0x00,0x0E,0x43,0x18,0xC8,0x8E,0xF8,0x0E,0xEC,0x27,0x0B,0x0C,0x20,0x0A,0xEC,
+0x22,0xD7,0x17,0x02,0x08,0xD2,0xE5,0x01,0xE8,0x9B,0x27,0x5F,0x57,0x04,0x43,0x18,
+0xBD,0x4F,0x18,0x18,0x43,0x18,0xC8,0x8F,0x1A,0x0F,0x0C,0x21,0x0B,0x2C,0x4C,0x53,
+0x00,0x19,0x5F,0x24,0xB9,0x20,0x00,0x31,0x1F,0x19,0xF3,0x5F,0x21,0xB9,0x4B,0x18,
+0x00,0x5F,0x17,0x15,0xC3,0x20,0x10,0x01,0x4A,0xF8,0xB8,0x43,0x5A,0xBD,0xEF,0x59,
+0x0A,0xD7,0xC1,0x40,0x10,0x01,0xFD,0x4A,0x0B,0xEA,0x12,0xEA,0x04,0x10,0x6A,0x01,
+0x98,0x80,0x40,0x63,0xBB,0xE7,0xFF,0xCA,0xEC,0x13,0x0A,0x01,0xC3,0x20,0x10,0x01,
+0x13,0x4A,0x04,0xEA,0xF9,0x08,0xE8,0x43,0x5A,0xC3,0xFF,0x79,0x08,0xE8,0x9B,0x00,
+0xE4,0x00,0x00,0x35,0x4F,0x38,0x10,0x9F,0x01,0x8F,0x3B,0x5F,0x18,0x00,0x0F,0x39,
+0x02,0x5F,0x99,0x06,0x5F,0x37,0x1D,0x4A,0xFC,0xB8,0xD7,0x58,0xFF,0x54,0xC1,0x60,
+0x10,0x01,0xC2,0xE2,0x32,0x88,0xFD,0x6B,0x01,0x3E,0x20,0x00,0x41,0x4E,0xF7,0x0A,
+0x5C,0x77,0x06,0x0C,0x6B,0x1D,0xE4,0x00,0x00,0x4F,0x53,0x00,0xFC,0xC2,0xE0,0x7D,
+0xE8,0x20,0x00,0x25,0x4F,0x17,0x12,0x5F,0x18,0x06,0x0F,0x0B,0x1D,0x50,0x60,0xFC,
+0xC2,0xE0,0x7D,0xE8,0x20,0x00,0x25,0x4E,0xF7,0x12,0x5C,0x77,0x06,0xE7,0xFF,0x2F,
+0x1C,0x88,0x6B,0xC1,0xE0,0x10,0x01,0xFD,0xEF,0x01,0xB6,0x88,0x8F,0xE7,0xFF,0x2F,
+0x60,0xC3,0x00,0x10,0x01,0xFE,0xF8,0x0C,0xC8,0xEB,0x38,0x0C,0xC8,0x0B,0x17,0x02,
+0x8F,0x38,0x0B,0x17,0x04,0x8F,0x38,0x0B,0x17,0x06,0x42,0xF9,0xC4,0xC2,0xE0,0x1F,
+0x48,0xC2,0xE0,0x10,0x01,0x20,0x00,0x25,0x9B,0x01,0xEF,0x17,0x0B,0x14,0xC1,0x40,
+0x10,0x01,0xFD,0x4A,0x0C,0x04,0x13,0x0A,0x00,0x23,0x00,0xCE,0xEE,0xF7,0x0B,0x16,
+0x22,0xE4,0xB2,0x98,0x60,0xE7,0xFF,0xE3,0x5C,0xC2,0xE0,0x10,0x01,0xF3,0x17,0x09,
+0x71,0x9F,0x01,0x5F,0x18,0x00,0xFB,0x17,0x09,0x71,0x5F,0x06,0x53,0x20,0x00,0x3D,
+0xC3,0x00,0x10,0x01,0xF8,0x17,0x09,0x71,0xEC,0x18,0x0B,0x14,0xC2,0xE0,0x10,0x01,
+0xEE,0xF7,0x0B,0x16,0xD2,0xE0,0x06,0xBE,0x12,0x0A,0x00,0x89,0xCC,0x8A,0xEC,0x53,
+0x20,0x14,0x0B,0x17,0x00,0x4F,0x18,0x28,0x43,0x18,0xC8,0x0F,0x17,0x01,0xC1,0x20,
+0x10,0x01,0x9E,0xE2,0xFD,0x29,0x0A,0xFC,0xD6,0xE9,0xFF,0x56,0x88,0x6B,0x88,0x8F,
+0xE7,0xFF,0x2E,0x1A,0x9B,0x00,0x22,0x00,0x5E,0x12,0xEA,0x00,0x26,0xE4,0x47,0xC2,
+0xE0,0x10,0x01,0xF2,0xF7,0x0A,0x50,0x5E,0xE0,0x01,0x4B,0x01,0x01,0x12,0xEA,0x00,
+0x22,0xE9,0x52,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x0A,0x50,0x22,0xE5,0x5E,0x13,0x2A,
+0x07,0x12,0xEA,0x37,0xD7,0x37,0x02,0x72,0x0E,0xEA,0x0A,0x22,0xE5,0x1E,0x0E,0xEA,
+0x3A,0x22,0xE5,0x06,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x0B,0x12,0x22,0xEC,0xDA,0x0A,
+0xEA,0x16,0xFF,0x37,0xFC,0x01,0xC2,0xE0,0x7F,0xCC,0x20,0x00,0x29,0xCB,0x20,0x03,
+0xFF,0x43,0x39,0xBD,0xC2,0xE0,0x10,0x01,0xEA,0xF7,0x0B,0xF5,0xD7,0x37,0x00,0xCC,
+0xE4,0x00,0x00,0x25,0x22,0xE4,0x3A,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x0A,0x50,0x22,
+0xE0,0x18,0x23,0x00,0xA4,0x53,0x00,0x20,0x0A,0xEE,0x00,0xCE,0xF7,0x00,0x14,0x42,
+0xF7,0xC0,0x0E,0xEE,0x01,0xC2,0xE0,0x10,0x01,0x9D,0xC2,0xFE,0xF7,0x0A,0xFC,0xD5,
+0xD7,0xFF,0x4E,0x88,0x6B,0x88,0x8F,0xE7,0xFF,0x2C,0xCC,0x12,0xEA,0x00,0x22,0xE0,
+0x5A,0xC2,0xE0,0x10,0x01,0xEC,0x17,0x0B,0x24,0x13,0x2A,0x00,0xD3,0x20,0x0A,0xF6,
+0xE4,0x00,0x02,0xEF,0x88,0xAB,0x98,0x61,0x98,0x81,0xE7,0xFF,0x1E,0x9C,0xC0,0xE0,
+0x10,0x01,0xFC,0xE7,0x01,0x68,0xC0,0x60,0x10,0x01,0x88,0x87,0x0C,0xE1,0x0C,0xFC,
+0x63,0x04,0x52,0xE7,0xFF,0x5E,0x8C,0xC2,0xE0,0x10,0x01,0xEC,0x77,0x04,0x6C,0x9A,
+0xE4,0x88,0xCF,0x1A,0xE1,0x00,0x98,0x61,0x98,0x81,0x88,0xAB,0x0C,0xE1,0x0E,0x51,
+0x00,0x14,0xE7,0xFF,0x30,0x9C,0x0A,0xEB,0x14,0x0B,0x0B,0x0A,0x0B,0x2B,0x16,0x5D,
+0xD7,0x04,0x41,0xF8,0xBD,0x40,0x98,0xCD,0xCA,0xE0,0x07,0xFF,0x43,0x37,0xCD,0x0B,
+0x4B,0x06,0x0B,0x6B,0x0C,0x40,0x77,0xC5,0x5C,0xD9,0x04,0x13,0xCA,0x00,0x0B,0x2B,
+0x0E,0x42,0x18,0xD5,0x42,0x37,0xCD,0x40,0xBA,0xC5,0x40,0xF9,0xDD,0x42,0x5B,0xCD,
+0x1E,0xEA,0x18,0x9B,0xA0,0xC9,0x00,0x07,0xFF,0xE4,0x00,0x00,0xC5,0x0B,0x97,0xFE,
+0xD7,0x1C,0x00,0x98,0x43,0x9C,0xD5,0x43,0x9C,0x7B,0x43,0x9C,0x80,0x8F,0x8E,0xE4,
+0x00,0x00,0x2D,0xD7,0x83,0x00,0xA8,0x43,0x88,0xE5,0x43,0x9C,0xD5,0x43,0x9C,0x23,
+0x43,0x9C,0x28,0x8F,0x86,0x0F,0x97,0xFF,0x0B,0x97,0x00,0xD7,0x3C,0x00,0x88,0x43,
+0x9C,0xDD,0x43,0x9C,0xCB,0x43,0x9C,0x38,0xE4,0x00,0x00,0x31,0xD7,0x91,0x00,0xB8,
+0x43,0x88,0xE5,0x43,0x9C,0xDD,0x43,0x9C,0xCB,0x43,0x9C,0x90,0xFF,0x9C,0x07,0xFF,
+0x0F,0x97,0x01,0x9F,0xA1,0x1E,0xF7,0x30,0x5F,0xBD,0x00,0xD7,0xBE,0xFD,0x16,0x0B,
+0x0B,0x16,0xCA,0xE0,0x07,0xFF,0x0B,0x2B,0x14,0x0B,0x4B,0x10,0x43,0x77,0xCD,0x42,
+0xF7,0xD5,0x43,0x7B,0xC5,0x0B,0x0B,0x12,0x43,0x97,0xC5,0x1E,0xEA,0x16,0x9B,0x00,
+0xE4,0x00,0x00,0x59,0x0B,0xB7,0x00,0x43,0xBD,0xCD,0xCF,0xBD,0x07,0xFF,0x43,0xBD,
+0xD8,0x9F,0x01,0x0F,0xB7,0x01,0x5F,0x18,0x00,0x0B,0xB7,0x02,0x43,0xBD,0xD5,0xCF,
+0xBD,0x07,0xFF,0x43,0xBD,0xE0,0x0F,0xB7,0x03,0x1E,0xF7,0x30,0xD7,0x1E,0xFE,0xC6,
+0xE7,0xFF,0xFD,0x63,0xCF,0x57,0x00,0x30,0x9E,0xE1,0x8F,0x4A,0x0F,0x5A,0x0E,0xC3,
+0x40,0x95,0xEC,0x4B,0x18,0x0A,0xE4,0x00,0x00,0x11,0x9A,0xE0,0x8B,0x17,0x5F,0x57,
+0x00,0xD7,0x3A,0xFF,0x1D,0xC2,0xE0,0x10,0x01,0xEF,0x17,0x0B,0x24,0x0A,0xED,0x01,
+0x52,0xF7,0x08,0xE4,0x00,0x00,0x3D,0xC2,0xE0,0x10,0x01,0x9B,0x07,0xEF,0x17,0x01,
+0xB1,0xC2,0xE0,0x10,0x01,0x9B,0x17,0xF8,0x17,0x0A,0x50,0x0A,0xED,0x01,0x46,0xF7,
+0xC4,0x0E,0xED,0x01,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x00,0xD6,0xD2,0xE1,0x23,0x4E,
+0xC2,0xE0,0x10,0x01,0xC3,0x20,0x10,0x01,0xEF,0x97,0x0B,0x12,0xC3,0x60,0x10,0x01,
+0xC1,0xC0,0x10,0x01,0xC0,0x60,0x10,0x01,0xFF,0x39,0x0D,0xDC,0xFF,0x7B,0x0B,0xF8,
+0xFF,0x0E,0x0B,0x20,0xFE,0xE3,0x08,0x32,0x23,0x80,0x24,0x13,0x4A,0x00,0x23,0x48,
+0x86,0xFF,0x40,0x7F,0xFF,0x18,0x19,0x00,0x0F,0x57,0x01,0x0F,0x57,0x03,0x0C,0x18,
+0x01,0xC3,0x40,0x10,0x01,0x0C,0x18,0x03,0x0C,0x1B,0x00,0xF8,0x1A,0x09,0x70,0x13,
+0x4A,0x00,0xD3,0x41,0x14,0x2E,0xC3,0x40,0x10,0x01,0xFF,0x5A,0x0A,0xB0,0xD3,0x82,
+0x0B,0x1D,0x13,0x99,0x00,0x23,0x81,0x6A,0x0B,0x8A,0x18,0x0B,0xAB,0x0E,0xD7,0xBC,
+0x01,0x04,0xC9,0x00,0x07,0xFF,0x43,0xA8,0xED,0xD7,0x9D,0x00,0xAC,0x0B,0xAA,0x16,
+0x0B,0xCB,0x0A,0xD7,0xDD,0x00,0x5C,0x43,0xC8,0xF5,0xD7,0xBE,0x01,0x38,0xC3,0xA0,
+0x10,0x01,0xC1,0x00,0x10,0x01,0xFF,0xDD,0x08,0x2C,0xE9,0x08,0x0C,0x1B,0x0F,0x9E,
+0x03,0xED,0x1D,0x08,0x2D,0x9B,0x81,0x0F,0x9A,0x00,0x0F,0x9B,0x00,0xE4,0x00,0x00,
+0x15,0x0C,0x1A,0x00,0x0C,0x1B,0x00,0xC3,0x80,0x10,0x01,0xF8,0x1C,0x09,0x70,0x0A,
+0x0B,0x02,0x09,0xCA,0x16,0x09,0xF7,0x00,0x43,0xAE,0x7D,0x4F,0x9D,0xFA,0x0B,0xCA,
+0x18,0x47,0xBC,0xEE,0x09,0x17,0x02,0x43,0xBD,0xE5,0x43,0x9E,0x45,0x43,0xBD,0xEB,
+0x4C,0x9C,0xFA,0x47,0x84,0xE6,0x43,0x9C,0x25,0x43,0x9C,0x83,0x0A,0x0B,0x00,0x43,
+0x9C,0x80,0x43,0x9C,0xE3,0x8F,0x9D,0xC3,0x84,0xE2,0x0C,0x20,0x00,0x45,0xC1,0xEF,
+0xFF,0xE4,0x20,0x00,0x65,0xC1,0x0F,0xFF,0xE4,0x20,0x00,0x49,0x9B,0x81,0x0D,0xD7,
+0x01,0x1B,0x99,0x00,0x0F,0xD7,0x03,0xE4,0x00,0x00,0x51,0x13,0x99,0x00,0x9F,0x81,
+0x5F,0x9C,0x00,0x1B,0x99,0x00,0x1F,0x3C,0xFF,0x41,0xF9,0x7B,0x41,0x19,0x43,0x8D,
+0xCF,0x8F,0xC8,0x41,0xCE,0xE0,0x43,0x9E,0xE0,0x0D,0xD7,0x01,0x0F,0x97,0x03,0x0E,
+0xFA,0x02,0x22,0xE5,0xB6,0xC2,0xE0,0x10,0x01,0xF2,0xF7,0x09,0x70,0x22,0xE1,0x58,
+0x0B,0xCB,0x02,0x0B,0x4A,0x16,0x0A,0xF8,0x00,0x42,0xFA,0xBD,0x4F,0x37,0xFA,0x0B,
+0x98,0x02,0x46,0xF9,0xBE,0x42,0xF7,0xCD,0x0B,0x2A,0x18,0x43,0x99,0xE5,0x4F,0xBC,
+0xFA,0x47,0x9D,0xE6,0x43,0x9C,0xED,0x43,0x9C,0xF3,0x0B,0xCB,0x00,0x43,0x9C,0xF0,
+0x43,0x9C,0xE3,0x42,0xF7,0xBB,0x8E,0xFC,0x97,0x83,0xCB,0x9C,0xD0,0x90,0xD6,0xFC,
+0x00,0x58,0x0C,0x1B,0x00,0xE4,0x00,0x00,0x35,0x0F,0x58,0x01,0x0F,0x38,0x03,0xE4,
+0x00,0x00,0x21,0x0A,0xEA,0x17,0x0E,0xF8,0x01,0x0A,0xEA,0x19,0x0E,0xF8,0x03,0xC2,
+0xE0,0x10,0x01,0xF3,0x17,0x09,0x70,0x9F,0x01,0xFB,0x17,0x09,0x70,0xE4,0x00,0x02,
+0x35,0xD3,0x83,0x08,0x56,0x10,0x79,0x00,0xD0,0x60,0x08,0x1A,0x0F,0xBA,0x02,0x23,
+0xA5,0x4A,0x0A,0x0B,0x02,0x09,0x0A,0x16,0x0B,0x98,0x00,0x43,0x88,0xE5,0x4F,0xDC,
+0xFA,0x09,0xF8,0x02,0x47,0x9E,0xE6,0x43,0x9C,0xF5,0x0B,0xCA,0x18,0x43,0x9C,0xE3,
+0x41,0xFE,0x7D,0x4C,0x8F,0xFA,0x45,0xE4,0x7E,0x41,0xEF,0x25,0x41,0xEF,0x83,0x0A,
+0x0B,0x00,0x41,0xEF,0x80,0x41,0xEF,0x7B,0x8F,0x8F,0x95,0x23,0xC9,0x29,0xD0,0x90,
+0x5F,0x89,0x15,0x8B,0x98,0x20,0x00,0x19,0x0C,0x1B,0x00,0x0D,0x18,0x01,0x0F,0xDC,
+0x03,0x09,0xCA,0x16,0x09,0xF7,0x00,0x43,0x0E,0x7D,0x4F,0x78,0xFA,0x09,0x0B,0x02,
+0x47,0x1B,0xC6,0x0B,0xCB,0x00,0x43,0x18,0xDD,0x0B,0x97,0x02,0x0B,0x6A,0x18,0x43,
+0x18,0xC3,0x41,0x7B,0xE5,0x4C,0x8B,0xFA,0x45,0x64,0x5E,0x41,0x6B,0x25,0x41,0x6B,
+0x43,0x41,0x6B,0xF0,0x41,0x6B,0x5B,0x8F,0x0B,0xC3,0x04,0xE2,0x0C,0x20,0x00,0x89,
+0x1F,0x03,0x01,0x5F,0x18,0x00,0x1D,0x78,0xFF,0x41,0xEB,0x7B,0x43,0x8B,0xE3,0x8D,
+0xCF,0x8F,0x7C,0x41,0xCE,0xC0,0x43,0x1B,0xC0,0x0D,0xCA,0x17,0x0F,0x0A,0x19,0x23,
+0xA5,0x32,0xC3,0x00,0x10,0x01,0xFF,0xB8,0x08,0x2C,0xEB,0x98,0x08,0x2C,0x0B,0x0A,
+0x16,0x43,0x1C,0xC5,0x4F,0x78,0xFA,0x47,0x1B,0xC6,0x43,0x18,0xDD,0x0B,0x7D,0x02,
+0x0B,0xAA,0x18,0x43,0xBB,0xED,0x4D,0x7D,0xFA,0x47,0xAB,0xEE,0x43,0xBD,0x5D,0x43,
+0xBD,0x43,0x43,0xBD,0xF0,0x43,0xBD,0xEB,0x43,0x18,0xC3,0x8F,0x1D,0xCB,0xA0,0x9C,
+0x40,0xD7,0x1D,0x00,0x50,0x0F,0x8A,0x17,0x0F,0x6A,0x19,0x18,0x19,0x00,0x0C,0x17,
+0x01,0x0C,0x17,0x03,0x0C,0x1A,0x00,0xE7,0xFF,0xD8,0x8C,0xC2,0xE0,0x10,0x01,0x99,
+0x40,0xEE,0xF7,0x05,0xCE,0x22,0xE5,0x76,0xE4,0x00,0x02,0x51,0x1C,0x61,0x15,0x88,
+0x8F,0x98,0xA3,0xE7,0xFF,0x6A,0xB4,0x1E,0xE1,0x18,0x8E,0xEA,0x12,0xF7,0xFD,0x1F,
+0x17,0x24,0x4E,0xF7,0x08,0x4F,0x18,0x08,0x8E,0xF0,0x8F,0x0C,0x0A,0xF7,0x01,0x0B,
+0x18,0x00,0xD7,0x17,0x00,0xA0,0x9A,0xE1,0xEB,0x0B,0x0B,0xD9,0x4E,0xF7,0x54,0x46,
+0xF7,0xC5,0xE4,0x00,0x00,0x27,0x9A,0xE1,0xEB,0x0B,0x0B,0xD9,0x4E,0xF7,0x54,0x46,
+0xF7,0xBF,0x46,0xF7,0xC4,0x9D,0x41,0xEE,0xEB,0x0B,0xD9,0x5D,0x4A,0x00,0xE4,0x00,
+0x00,0x39,0xC1,0xF8,0x00,0x21,0xC2,0x00,0x10,0x01,0xC1,0xC0,0x10,0x01,0xFD,0xEF,
+0xB4,0xBA,0xFE,0x10,0x01,0xA4,0xC1,0x60,0x10,0x01,0xF2,0xEE,0x0E,0x10,0xD6,0xEA,
+0xFC,0x75,0xC2,0xE0,0x10,0x01,0xEA,0xF7,0x0B,0xD9,0x22,0xE0,0x34,0x0A,0xED,0x01,
+0x52,0xF7,0x10,0xE4,0x00,0x00,0x3B,0x0A,0xED,0x01,0x57,0x17,0x10,0x23,0x00,0x34,
+0x9B,0x21,0xC3,0x00,0x10,0x01,0xFB,0x38,0x0E,0x08,0x1F,0x00,0xEF,0x46,0xF7,0xC4,
+0x0E,0xED,0x01,0xC1,0x40,0x10,0x01,0xEE,0xEA,0x0E,0x1E,0x22,0xE0,0x6A,0xC2,0xE0,
+0x10,0x01,0xF8,0x17,0x0E,0x69,0x0A,0xED,0x01,0x56,0xF7,0x10,0x22,0xE1,0x90,0x9A,
+0xE1,0xE4,0x00,0x00,0x4D,0x22,0xE4,0xAA,0xC3,0x00,0x10,0x01,0xF2,0xF8,0x0E,0x69,
+0x9E,0xE1,0x5E,0xF7,0x00,0xFA,0xF8,0x0E,0x69,0x0B,0x0D,0x01,0x57,0x18,0x10,0x23,
+0x00,0xF4,0x26,0xE4,0xF9,0x9A,0xE2,0xEE,0xEA,0x0E,0x1C,0xE4,0x00,0x00,0x6B,0x22,
+0xE8,0x92,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0E,0x69,0x0A,0xED,0x01,0x56,0xF7,0x10,
+0x22,0xE0,0x34,0x98,0x62,0xE7,0xFF,0x98,0xCC,0xE4,0x00,0x00,0x2F,0x9A,0xE3,0xE7,
+0xFF,0xFF,0xB1,0x22,0xEC,0x36,0x98,0x60,0xE7,0xFF,0x98,0xA6,0xEC,0x0A,0x0E,0x1C,
+0x0B,0x0D,0x00,0xC2,0xE0,0x10,0x01,0x27,0x1C,0x56,0xF3,0x17,0x0D,0xD4,0xD3,0x09,
+0x01,0xDD,0x9F,0x01,0xFB,0x17,0x0D,0xD4,0xE4,0x00,0x00,0x63,0xF8,0x17,0x0D,0xD4,
+0xE4,0x00,0x00,0x6B,0xC2,0xE0,0x10,0x01,0xEE,0xF7,0x00,0xD6,0x22,0xE4,0xA6,0x9B,
+0x05,0xC2,0xE0,0x10,0x01,0xEF,0x17,0x0B,0x10,0x9B,0x03,0xC2,0xE0,0x10,0x01,0x98,
+0x60,0xFB,0x17,0x0E,0x08,0xE7,0xFF,0x98,0x0C,0xE7,0xFF,0x95,0x04,0xE4,0x00,0x00,
+0x11,0xE7,0xFF,0x95,0x9A,0xC2,0xE0,0x10,0x01,0xEB,0x17,0x07,0xD9,0xC3,0x00,0x7D,
+0x0A,0x20,0x00,0x61,0xC3,0x00,0x10,0x01,0x9B,0x5E,0xF3,0x38,0x09,0x72,0xEC,0x17,
+0x07,0xD9,0x47,0x39,0xD4,0xFB,0x38,0x09,0x72,0x0E,0x41,0x1A,0x0E,0x21,0x1E,0x0E,
+0x01,0x22,0x0D,0xE1,0x26,0x0D,0xC1,0x2A,0x0D,0xA1,0x2E,0x0D,0x81,0x32,0x0D,0x61,
+0x36,0x0D,0x41,0x3A,0x0D,0x21,0x3E,0x1C,0x21,0x40,0x85,0x29,0x1C,0x21,0xE0,0xC3,
+0x00,0x10,0x01,0x0D,0x21,0x1C,0xFF,0x18,0x0C,0xC8,0x0D,0x41,0x18,0x0D,0x61,0x14,
+0x0D,0x81,0x10,0x0D,0xA1,0x0C,0x0D,0xC1,0x08,0x0D,0xE1,0x04,0x8A,0xF8,0x8B,0x58,
+0xCB,0x20,0x7F,0xFF,0x0B,0x7A,0x00,0x4F,0x9B,0xFA,0x9F,0x42,0x47,0xBC,0xDE,0x43,
+0xBD,0xE5,0x4F,0x99,0xFA,0x47,0xDC,0xCE,0x43,0x9E,0xE5,0x5F,0x9D,0x15,0x4B,0x39,
+0xD8,0xC3,0x60,0x10,0x01,0xFF,0x7B,0x0C,0xD0,0xD7,0x5B,0xFE,0xDE,0x5F,0x59,0x06,
+0x5F,0x46,0x11,0x20,0x00,0x19,0x53,0x20,0x30,0x5F,0x79,0x06,0x8B,0x37,0x0B,0x59,
+0x01,0x43,0x5A,0xDD,0x0F,0x59,0x01,0xC3,0x40,0x10,0x01,0x9F,0x22,0xFF,0x5A,0x0C,
+0xD0,0xD7,0x3A,0xFF,0x6E,0xCB,0x40,0x7F,0xFF,0x0B,0x79,0x00,0x4F,0x9B,0xFA,0x9F,
+0x22,0x47,0xBC,0xDE,0x43,0xBD,0xE5,0x4F,0x9A,0xFA,0x47,0xDC,0xD6,0x43,0x9E,0xE5,
+0x5F,0x9D,0x15,0x4B,0x5A,0xD8,0xC3,0x60,0x10,0x01,0xFF,0x7B,0x0C,0xD6,0xD7,0x3B,
+0xFE,0xDE,0x5F,0x3A,0x06,0x5F,0x26,0x11,0x20,0x00,0x19,0x53,0x40,0x30,0x5F,0x5A,
+0x04,0x0B,0x38,0x09,0x43,0x39,0xD5,0x0F,0x38,0x09,0x0B,0x38,0x0B,0x43,0x39,0xD5,
+0x0F,0x38,0x0B,0x0B,0x38,0x0D,0x43,0x59,0xD5,0x0F,0x58,0x0D,0xC3,0x00,0x10,0x01,
+0xFF,0x18,0x0A,0xA0,0x13,0x58,0x00,0xD3,0x49,0x01,0x45,0x8B,0x37,0x0B,0x99,0x00,
+0x4F,0x7C,0xFA,0x47,0x9B,0xE6,0x43,0x7C,0xDD,0xD3,0x6F,0x0E,0x94,0xC3,0x60,0x10,
+0x01,0x9F,0x22,0xFF,0x7B,0x0C,0xD8,0xD7,0x3B,0xFF,0x36,0xE4,0x00,0x03,0x6F,0xC1,
+0xA0,0x10,0x01,0xC1,0x60,0x10,0x01,0xFD,0xAD,0x0B,0x38,0xC1,0x80,0x10,0x01,0x13,
+0x2D,0x00,0xFD,0x6B,0x0E,0x11,0x57,0x39,0x10,0xFD,0x8C,0x09,0x48,0xD3,0x20,0x05,
+0x9E,0x13,0x18,0x00,0xD3,0x0A,0x0D,0x8E,0xC3,0x00,0x10,0x01,0xC1,0x40,0x10,0x01,
+0xEF,0x38,0x0B,0x12,0xFD,0x4A,0x0E,0x00,0x8B,0x0A,0x0B,0x57,0x00,0x5F,0x42,0xF1,
+0x20,0x00,0x3D,0x13,0x58,0x00,0x9F,0x41,0x1B,0x58,0x00,0xE4,0x00,0x00,0x0F,0x18,
+0x18,0x00,0x13,0x58,0x00,0x27,0x49,0x15,0x27,0x29,0x0B,0xC2,0xE0,0x10,0x01,0xEC,
+0x17,0x0B,0x10,0xC2,0xE0,0x10,0x01,0xF8,0x17,0x0B,0x02,0xC2,0xE0,0x10,0x01,0xF8,
+0x17,0x09,0x4A,0xE7,0xFF,0xC4,0x42,0x12,0xED,0x00,0x52,0xF7,0x10,0x1A,0xED,0x00,
+0xC2,0xE0,0x10,0x01,0x18,0x0B,0x00,0xF8,0x17,0x0A,0x04,0x18,0x0C,0x00,0xC2,0xE0,
+0x10,0x01,0xF8,0x17,0x0B,0x03,0xE4,0x00,0x00,0x29,0xC3,0x40,0x10,0x01,0x9E,0xE2,
+0x9F,0x01,0xFF,0x5A,0x0C,0xD8,0xD6,0xFA,0xFC,0xA6,0x12,0xED,0x00,0x56,0xF7,0x10,
+0xD2,0xE0,0x09,0x2A,0x18,0x0A,0x00,0x18,0x0A,0x01,0x18,0x0A,0x02,0x18,0x0A,0x03,
+0x18,0x0A,0x04,0x18,0x0A,0x05,0x18,0x0A,0x06,0x18,0x0A,0x07,0xE4,0x00,0x02,0x13,
+0x12,0xF8,0x00,0xD2,0xEA,0x08,0x16,0x98,0xA0,0xC1,0xE0,0x10,0x01,0xC1,0xC0,0x10,
+0x01,0xFD,0xEF,0x0A,0xB4,0xFD,0xCE,0x01,0x3E,0x88,0x6F,0x10,0x8E,0x24,0xE7,0xFF,
+0xB8,0xE2,0xC1,0x40,0x10,0x01,0xFD,0x4A,0x0B,0xEA,0x12,0xEA,0x04,0x10,0x6A,0x01,
+0x98,0x80,0x40,0x63,0xBB,0xE7,0xFF,0xB6,0x6C,0x88,0x6F,0x10,0x8E,0x24,0x98,0xA1,
+0xE7,0xFF,0xB8,0x9E,0x12,0xEA,0x01,0x13,0x0A,0x04,0xC3,0x20,0x10,0x01,0x43,0x18,
+0xBB,0xFF,0x39,0x08,0xE8,0x9A,0xE0,0xE4,0x00,0x00,0x3F,0x4F,0x57,0x10,0x8F,0x59,
+0x0F,0x5A,0x02,0x5F,0x44,0xD1,0x20,0x00,0x2D,0xD6,0xF8,0x01,0x3E,0xE4,0x00,0x00,
+0x23,0x9E,0xE1,0x5E,0xF7,0x00,0xD7,0x17,0xFF,0x2C,0xE7,0xFF,0xFF,0xDF,0x12,0xEC,
+0x00,0x5E,0xE3,0xBB,0x20,0x00,0x3D,0x9E,0xE1,0x1A,0xEC,0x00,0xE4,0x00,0x00,0x0F,
+0x18,0x0C,0x00,0x12,0xEC,0x00,0x5E,0xE3,0xC1,0x20,0x01,0x97,0xE4,0x00,0x00,0xAD,
+0x12,0xEB,0x00,0x22,0xE1,0x88,0x12,0xED,0x00,0x1F,0x60,0xEF,0x46,0xF7,0xDC,0x18,
+0x0B,0x00,0x1A,0xED,0x00,0x18,0x0C,0x00,0x53,0x00,0xFC,0xC2,0xE0,0x10,0x01,0x0D,
+0xE1,0x06,0x0D,0xC1,0x0A,0x0D,0xA1,0x0E,0x0D,0x81,0x12,0x0D,0x61,0x16,0x0D,0x41,
+0x1A,0x0D,0x21,0x1E,0xEF,0x17,0x01,0x5B,0x50,0x60,0xFC,0x1C,0x21,0x20,0xE7,0xFF,
+0x1A,0x3B,0x9F,0x41,0x1B,0x58,0x00,0xE7,0xFF,0xFC,0x91,0x18,0x18,0x00,0xE7,0xFF,
+0xFC,0x83,0x12,0xEB,0x00,0x9E,0xE1,0x1A,0xEB,0x00,0xE7,0xFF,0xFF,0x4D,0x18,0x0B,
+0x00,0xE7,0xFF,0xFF,0x3F,0x0D,0xE1,0x06,0x0D,0xC1,0x0A,0x0D,0xA1,0x0E,0x0D,0x81,
+0x12,0x0D,0x61,0x16,0x0D,0x41,0x1A,0x0D,0x21,0x1E,0x1C,0x21,0x20,0x85,0x29,0x9C,
+0x38,0x0D,0x41,0x00,0x0D,0x21,0x04,0x89,0x43,0x20,0x84,0x64,0x98,0x62,0x88,0x8A,
+0xE7,0xFF,0xCA,0x22,0x98,0x62,0x88,0x8A,0xE7,0xFF,0xCA,0x12,0x98,0x69,0xE4,0x00,
+0x00,0x2D,0x98,0x60,0x88,0x8A,0xE7,0xFF,0xC9,0xF6,0x98,0x61,0x88,0x8A,0xE7,0xFF,
+0xC9,0xE6,0x98,0x68,0x88,0x8A,0x0D,0x21,0x06,0x0D,0x41,0x02,0x9C,0x28,0xE7,0xFF,
+0xC9,0xC7,0x9C,0x38,0x0D,0x21,0x04,0x0D,0x41,0x00,0x89,0x43,0x98,0x60,0x88,0x8A,
+0xE7,0xFF,0xC9,0xA2,0x88,0x8A,0x98,0x61,0xE7,0xFF,0xC9,0x92,0x88,0x8A,0x0D,0x21,
+0x06,0x0D,0x41,0x02,0x98,0x68,0x9C,0x28,0xE7,0xFF,0xC9,0x73,0xD0,0x6B,0x0B,0xB5,
+0x4F,0x03,0x10,0xC2,0xF8,0x00,0x21,0xFE,0xF7,0xBA,0x6C,0x8E,0xF8,0xC3,0x40,0x10,
+0x01,0x0F,0xB7,0x02,0xC3,0x60,0x10,0x01,0xC3,0x20,0x10,0x01,0xC3,0x80,0x10,0x01,
+0xC3,0x00,0x10,0x01,0xC2,0xE0,0x10,0x01,0xFF,0x5A,0x0D,0x38,0xFF,0x7B,0x08,0x3C,
+0xFF,0x39,0x0B,0x3C,0xFF,0x9C,0x0C,0xC8,0xFF,0x18,0x0A,0x52,0xFE,0xF7,0x0A,0xB4,
+0x87,0xA9,0xCC,0x63,0x00,0x12,0x5C,0x63,0x00,0x4F,0x23,0x08,0x4C,0x63,0x10,0x8F,
+0x19,0x8E,0xF9,0x8F,0x43,0x9B,0x20,0x43,0x77,0xCC,0x43,0xB8,0xCC,0x4F,0x99,0x08,
+0x0B,0xBD,0x01,0x8F,0x9A,0x0F,0x9C,0x02,0x4F,0x9C,0x42,0x43,0x9D,0xE5,0x0F,0x9B,
+0x01,0x9F,0x22,0x5F,0x24,0x89,0x23,0xFF,0x85,0xE4,0x00,0x01,0xF3,0x9C,0x7E,0xCC,
+0x63,0x00,0x12,0x5C,0x63,0x00,0x4F,0x43,0x08,0x4C,0x63,0x10,0x8F,0x1A,0x8C,0x79,
+0x8E,0xFA,0x9B,0x20,0x43,0x77,0xCC,0x43,0xB8,0xCC,0x4F,0x99,0x08,0x0B,0xBD,0x01,
+0x8F,0x83,0x0F,0x9C,0x02,0x4F,0x9C,0x42,0x43,0x9D,0xE5,0x0F,0x9B,0x01,0x9F,0x22,
+0x5F,0x24,0x89,0x23,0xFF,0x85,0xE4,0x00,0x01,0x79,0x0B,0x78,0x49,0xEF,0x3A,0x00,
+0x92,0x4F,0x39,0x42,0x43,0x3B,0xCD,0x0B,0x78,0x4B,0x0F,0x37,0x49,0xEF,0x3A,0x00,
+0x96,0x4F,0x39,0x42,0x43,0x3B,0xCD,0x0F,0x37,0x4B,0xEF,0x3A,0x00,0x9A,0xE4,0x00,
+0x00,0x51,0xEF,0x59,0x00,0x92,0x0B,0x78,0x49,0x4F,0x5A,0x42,0x43,0x5B,0xD5,0x0B,
+0x78,0x4B,0x0F,0x57,0x49,0xEF,0x59,0x00,0x96,0xEF,0x39,0x00,0x9A,0x4F,0x5A,0x42,
+0x43,0x5B,0xD5,0x0F,0x57,0x4B,0x4F,0x39,0x42,0x0B,0x18,0x4D,0x43,0x18,0xCD,0x0F,
+0x17,0x4D,0xE4,0x00,0x00,0xC1,0xC3,0xA0,0x10,0x01,0x9A,0xE0,0xFF,0xBD,0x0D,0xE0,
+0x43,0x1C,0xBC,0x43,0x5B,0xBC,0x4F,0x37,0x08,0x0B,0x5A,0x01,0x8F,0x3D,0x0F,0x39,
+0x02,0x4F,0x39,0x42,0x43,0x3A,0xCD,0x0F,0x38,0x01,0x9E,0xE2,0x5E,0xE2,0x09,0x23,
+0xFF,0x85,0xE4,0x00,0x00,0x61,0xC3,0xA0,0x10,0x01,0x9A,0xE0,0xFF,0xBD,0x09,0x50,
+0x43,0x1C,0xBC,0x43,0x5B,0xBC,0x4F,0x37,0x08,0x0B,0x5A,0x01,0x8F,0x3D,0x0F,0x39,
+0x02,0x4F,0x39,0x42,0x43,0x3A,0xCD,0x0F,0x38,0x01,0x9E,0xE2,0x5E,0xE2,0x09,0x23,
+0xFF,0x85,0x85,0x29,0x9C,0x38,0x0D,0x21,0x04,0x20,0x64,0x6C,0x98,0x62,0xE7,0xFF,
+0xFC,0xFC,0x98,0x63,0xE7,0xFF,0xFC,0xF0,0x98,0x69,0xE7,0xFF,0xFC,0xE4,0x98,0x6B,
+0xE4,0x00,0x00,0x31,0x98,0x60,0xE7,0xFF,0xFC,0xCC,0x98,0x61,0xE7,0xFF,0xFC,0xC0,
+0x98,0x68,0xE7,0xFF,0xFC,0xB4,0x98,0x6A,0x0D,0x21,0x06,0x9C,0x28,0xE7,0xFF,0xFC,
+0x9F,0x9C,0x38,0x98,0x60,0x0D,0x21,0x04,0xE7,0xFF,0xFC,0x88,0x98,0x61,0xE7,0xFF,
+0xFC,0x7C,0x0D,0x21,0x06,0x98,0x68,0x9C,0x28,0xE7,0xFF,0xFC,0x67,0x9C,0x38,0x0D,
+0x21,0x04,0xE7,0xFF,0x97,0x18,0x20,0x60,0x86,0xE7,0xFF,0x96,0xF6,0x98,0x80,0xE7,
+0xFF,0xA6,0x76,0xE7,0xFF,0x96,0xE2,0x98,0x82,0xE7,0xFF,0xA3,0x1E,0xE7,0xFF,0xC0,
+0x1C,0x98,0x60,0xE4,0x00,0x00,0x4B,0xE7,0xFF,0x96,0xCE,0x20,0x64,0x9E,0xE7,0xFF,
+0x96,0xAC,0x98,0x81,0xE7,0xFF,0xA6,0x2C,0xE7,0xFF,0x96,0x98,0x98,0x83,0xE7,0xFF,
+0xA2,0xD4,0xE7,0xFF,0xBF,0xD2,0x98,0x61,0xE7,0xFF,0xA3,0x68,0x9A,0xE0,0xE4,0x00,
+0x00,0xE9,0xE7,0xFF,0x96,0x78,0x20,0x68,0x5E,0xE7,0xFF,0x96,0x56,0x98,0x82,0xE7,
+0xFF,0xA5,0xD6,0xE7,0xFF,0x96,0x42,0x98,0x81,0xE4,0x00,0x00,0x6F,0xE7,0xFF,0x96,
+0x42,0x20,0x6C,0x5E,0xE7,0xFF,0x96,0x20,0x98,0x83,0xE7,0xFF,0xA5,0xA0,0xE7,0xFF,
+0x96,0x0C,0x98,0x87,0xE4,0x00,0x00,0x39,0xE7,0xFF,0x96,0x0C,0xD0,0x67,0x01,0x06,
+0xE7,0xFF,0x95,0xE8,0x98,0x87,0xE7,0xFF,0xA5,0x68,0xE7,0xFF,0x95,0xD4,0x98,0x88,
+0xE7,0xFF,0xA2,0x10,0xE7,0xFF,0xBF,0x0E,0xE7,0xFF,0xFF,0x49,0xE7,0xFF,0x95,0xC4,
+0x9A,0xE0,0xD0,0x68,0x00,0x86,0xE7,0xFF,0x95,0x9C,0x98,0x88,0xE7,0xFF,0xA5,0x1C,
+0x9A,0xE1,0x88,0x77,0x0D,0x21,0x06,0x9C,0x28,0x85,0x29,0x1C,0x21,0xE0,0x0D,0x21,
+0x1C,0x0D,0x41,0x18,0x0D,0x61,0x14,0x0D,0x81,0x10,0x0D,0xA1,0x0C,0x80,0x01,0x80,
+0x01,0x80,0x01,0x80,0x01,0xE7,0xFF,0x85,0xC8,0x0C,0x61,0x00,0xE7,0xFF,0x85,0xC2,
+0x0C,0x61,0x04,0x0E,0xE1,0x02,0xD2,0xE0,0x15,0xCA,0x0E,0xE1,0x02,0xC1,0x60,0x10,
+0x01,0xC1,0x40,0x10,0x01,0x57,0x17,0x10,0xFD,0x6B,0x00,0xDA,0xFD,0x4A,0x00,0xC8,
+0xD3,0x00,0x06,0xCA,0x50,0x60,0x10,0xE7,0xFF,0x85,0xA4,0xC2,0xE0,0x10,0x01,0xEB,
+0x17,0x00,0xB7,0x9F,0x01,0x5F,0x18,0x04,0xEF,0x17,0x00,0xB7,0xC2,0xE0,0x10,0x01,
+0xEB,0x17,0x07,0xD9,0x23,0x00,0x24,0x9F,0x01,0xEF,0x17,0x07,0xD9,0xE7,0xFF,0x85,
+0xA0,0x0A,0xEB,0x0B,0x40,0x63,0xBD,0x5E,0xE3,0x04,0x5E,0xE3,0xBB,0x20,0x02,0x3F,
+0xC2,0xE0,0x10,0x01,0xEA,0xF7,0x04,0xC7,0x56,0xF7,0x20,0xD2,0xE0,0x04,0x0A,0x98,
+0x61,0xE7,0xFF,0xA5,0x7E,0x20,0x61,0xDE,0xE7,0xFF,0x94,0x38,0x20,0x64,0x56,0xC2,
+0xE0,0x10,0x01,0xF2,0xF7,0x00,0xBC,0x56,0xF7,0x01,0x22,0xE1,0x8A,0xE4,0x00,0x00,
+0x1F,0xE7,0xFF,0x94,0x06,0x20,0x63,0xA8,0xE4,0x00,0x00,0xA9,0xE7,0xFF,0xBC,0x50,
+0xC2,0xE0,0x10,0x01,0xEB,0x17,0x04,0xC7,0xC7,0x18,0xFF,0xDF,0xEF,0x17,0x04,0xC7,
+0xE7,0xFF,0x93,0xC8,0x20,0x60,0x5E,0x98,0x81,0x98,0xA0,0xE7,0xFF,0x4C,0x00,0x98,
+0x60,0x88,0x83,0xE7,0xFF,0x9F,0xEA,0xE4,0x00,0x00,0x43,0x98,0x80,0x98,0x62,0xE7,
+0xFF,0x9F,0xD2,0xFC,0x60,0x01,0x5E,0xE7,0xFF,0x56,0xB2,0x98,0x60,0xE7,0xFF,0x50,
+0xEA,0xE7,0xFF,0x84,0x78,0x0C,0x6B,0x09,0xE7,0xFF,0xBC,0xA6,0x0A,0xEA,0x01,0x52,
+0xF7,0x10,0x0E,0xEA,0x01,0xE4,0x00,0x04,0x39,0xC6,0xF7,0x01,0x00,0xD2,0xE0,0x10,
+0xA2,0xE4,0x00,0x2C,0xB4,0x89,0xA3,0x98,0x60,0xE7,0xFF,0x83,0xB0,0xFC,0x60,0x01,
+0x00,0xE7,0xFF,0x83,0xB0,0xFC,0x60,0x01,0x00,0xE7,0xFF,0x83,0xC0,0xE7,0xFF,0x92,
+0xEE,0xD0,0x67,0x0C,0xC5,0x4E,0xE3,0x10,0xC3,0x18,0x00,0x21,0xFF,0x18,0xBA,0x9C,
+0x8E,0xF8,0x0E,0xF7,0x02,0x86,0xE9,0xE7,0xFF,0x92,0xCE,0x20,0x60,0x3E,0x98,0x80,
+0xE7,0xFF,0xA2,0x34,0x98,0x60,0xE4,0x00,0x02,0xD3,0xE7,0xFF,0x92,0xA8,0x20,0x64,
+0x4E,0x98,0x60,0x98,0x81,0xE7,0xFF,0xA2,0x0A,0x98,0x60,0x98,0x87,0xE4,0x00,0x02,
+0xA9,0xE7,0xFF,0x92,0x7A,0xD0,0x67,0x00,0xA6,0x98,0x60,0x98,0x87,0xE7,0xFF,0xA1,
+0xDA,0x98,0x60,0x98,0x88,0xE4,0x00,0x02,0x79,0xE7,0xFF,0x92,0x4A,0xD0,0x68,0x09,
+0xE6,0x98,0x60,0x98,0x88,0xE4,0x00,0x02,0x1D,0xE7,0xFF,0xFB,0x08,0xD0,0x60,0x09,
+0x62,0xE7,0xFF,0xA2,0x4C,0x5D,0x83,0x04,0x98,0x61,0xE7,0xFF,0xA3,0x2C,0xD0,0x60,
+0x07,0xCE,0xC1,0x80,0x1F,0x4A,0x20,0x03,0xC5,0xE7,0xFF,0x4F,0xAE,0xE7,0xFF,0x4F,
+0x7E,0x5C,0x63,0x00,0x24,0x64,0x33,0x98,0x61,0xC1,0x80,0x3E,0x8A,0x20,0x01,0xE9,
+0x98,0x80,0x98,0x62,0xE7,0xFF,0x9D,0xE8,0xFC,0x60,0x01,0x5E,0xE7,0xFF,0x54,0xC8,
+0x98,0x60,0xE7,0xFF,0x4F,0x00,0xE7,0xFF,0x82,0x8E,0x0C,0x6B,0x09,0xE4,0x00,0x01,
+0xB1,0xE7,0xFF,0xFA,0x58,0xD0,0x60,0x06,0xA2,0xE7,0xFF,0xA1,0x9C,0xE7,0xFF,0x55,
+0x08,0xE7,0xFF,0x55,0x98,0xD0,0x61,0x05,0x12,0xE7,0xFF,0x55,0xB8,0x20,0x64,0xD2,
+0xE7,0xFF,0x4E,0x90,0x5C,0x63,0x00,0xC0,0x60,0x18,0xEE,0x20,0x00,0x1D,0xE7,0xFF,
+0x4E,0x9C,0xE7,0xFF,0x4E,0x6C,0x98,0x80,0x5D,0x43,0x00,0x98,0x62,0xE7,0xFF,0x9D,
+0x36,0xCC,0x6A,0x00,0x64,0xFC,0x63,0x01,0x5E,0xE7,0xFF,0x54,0x0E,0xE4,0x00,0x01,
+0x11,0xE7,0xFF,0x55,0x68,0x98,0x62,0x98,0x80,0xE4,0x00,0x00,0xF1,0xE7,0xFF,0x90,
+0xC2,0x20,0x64,0x48,0xE7,0xFF,0x90,0xB4,0xE7,0xFF,0x90,0xAC,0x20,0x61,0xB6,0xE4,
+0x00,0x00,0x21,0xE7,0xFF,0x90,0x96,0x88,0x83,0x98,0x64,0xE4,0x00,0x00,0x71,0x98,
+0x64,0x98,0x80,0xE7,0xFF,0x9F,0xEE,0x98,0x64,0xE4,0x00,0x00,0x8D,0x98,0x64,0x98,
+0x89,0xE4,0x00,0x00,0x45,0xE7,0xFF,0x90,0x52,0x20,0x64,0x48,0xE7,0xFF,0x90,0x44,
+0xE7,0xFF,0x90,0x3C,0x20,0x60,0xD6,0xE4,0x00,0x00,0x3D,0xE7,0xFF,0x90,0x26,0x88,
+0x83,0x98,0x67,0xE7,0xFF,0x9F,0x8E,0x0A,0xEA,0x01,0xCA,0xF7,0x01,0x00,0x0E,0xEA,
+0x01,0xE4,0x00,0x00,0x31,0x98,0x67,0x98,0x80,0xE7,0xFF,0x9F,0x62,0x98,0x67,0x98,
+0x81,0xE7,0xFF,0x9C,0x0E,0xE7,0xFF,0xB9,0x0C,0x88,0x6D,0xE4,0x00,0x00,0xA5,0x0E,
+0xE1,0x06,0x22,0xE1,0x3C,0x0E,0xE1,0x06,0x56,0xF7,0x20,0x22,0xE1,0x18,0xE4,0x00,
+0x29,0x1A,0x89,0x43,0x98,0x60,0xE7,0xFF,0x80,0x16,0x50,0x60,0x20,0xE7,0xFF,0x80,
+0x20,0xE7,0xFF,0x76,0xB8,0xC2,0xE0,0x10,0x01,0xEB,0x17,0x00,0xCD,0xC7,0x18,0xFF,
+0xFE,0x50,0x60,0x20,0xEF,0x17,0x00,0xCD,0xE7,0xFF,0x7F,0xFA,0xC2,0xE0,0x10,0x01,
+0x88,0x6A,0xEB,0x17,0x00,0xCB,0x53,0x18,0x20,0xEF,0x17,0x00,0xCB,0xE7,0xFF,0x7F,
+0xA8,0x0D,0xA1,0x0E,0x0D,0x81,0x12,0x0D,0x61,0x16,0x0D,0x41,0x1A,0x0D,0x21,0x1E,
+0x1C,0x21,0x20,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x23,0x24,0x0B,0x17,0x01,
+0x53,0x18,0x20,0x0F,0x17,0x01,0x0C,0x63,0x02,0x0B,0x17,0x01,0xC7,0x18,0xFF,0xDF,
+0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x23,0x24,0x0B,0x17,0x01,
+0x53,0x18,0x20,0x0F,0x17,0x01,0x0C,0x83,0x00,0x0B,0x17,0x01,0xC7,0x18,0xFF,0xDF,
+0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0x14,0x0B,0x17,0x01,
+0x53,0x18,0x01,0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x23,0x24,
+0x0B,0x17,0x01,0x53,0x18,0x20,0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,
+0xF7,0x23,0x24,0x0B,0x17,0x01,0xC7,0x18,0xFF,0xDF,0x0F,0x17,0x01,0x85,0x29,0x9C,
+0x30,0x0D,0x21,0x0C,0x0D,0x41,0x08,0x0D,0x61,0x04,0x0D,0x81,0x00,0xC1,0x54,0x00,
+0x01,0xC9,0x8A,0x22,0x28,0x0A,0xEC,0x01,0xC6,0xF7,0xFF,0xFB,0xC9,0x6A,0x22,0x04,
+0x0E,0xEC,0x01,0xFF,0x00,0x80,0x00,0x0A,0xEB,0x01,0x46,0xF7,0xC5,0x5E,0xF7,0x04,
+0xC9,0x4A,0x24,0xA8,0x0E,0xEB,0x01,0x0A,0xEA,0x01,0xCA,0xF7,0x30,0x00,0x50,0x60,
+0x64,0x0E,0xEA,0x01,0xE4,0x00,0x24,0x52,0x0A,0xEC,0x01,0x52,0xF7,0x04,0x50,0x60,
+0x1E,0x0E,0xEC,0x01,0xE4,0x00,0x24,0x32,0x0A,0xEB,0x01,0xC6,0xF7,0x7F,0xFF,0x0E,
+0xEB,0x01,0x0A,0xEA,0x01,0xC6,0xF7,0xCF,0xFF,0x0E,0xEA,0x01,0x0D,0x81,0x02,0x0D,
+0x61,0x06,0x0D,0x41,0x0A,0x0D,0x21,0x0E,0x1C,0x21,0x10,0x85,0x29,0xC2,0xF4,0x00,
+0x01,0xCA,0xF7,0x24,0x2C,0x08,0x77,0x01,0x4C,0x63,0x09,0x54,0x63,0x1F,0x9C,0x61,
+0x85,0x29,0x9C,0x7F,0x5C,0x63,0x00,0x5C,0x62,0xFB,0x20,0x00,0x81,0xC2,0xF4,0x00,
+0x01,0x4C,0x63,0x08,0xCA,0xF7,0x24,0x2C,0x54,0x63,0x3E,0x0B,0x17,0x01,0x1F,0x20,
+0xC1,0x47,0x18,0xCC,0x44,0x63,0xC5,0x0C,0x77,0x01,0x85,0x29,0x9B,0x19,0x20,0x60,
+0x62,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0x10,0x0B,0x37,0x01,0x47,0x19,0xC4,0x53,
+0x18,0x04,0xE4,0x00,0x00,0x87,0x20,0x64,0x56,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,
+0x10,0x0B,0x17,0x01,0x53,0x18,0x06,0xE4,0x00,0x00,0x5D,0x20,0x68,0x5A,0xC2,0xF4,
+0x00,0x01,0xCA,0xF7,0x24,0x10,0x0B,0x17,0x01,0xC7,0x18,0xFF,0xF9,0xE4,0x00,0x00,
+0x31,0x20,0x6C,0x5E,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0x10,0x0B,0x37,0x01,0x47,
+0x19,0xC4,0x53,0x18,0x02,0x0F,0x17,0x01,0x85,0x29,0x5C,0x63,0x00,0x9C,0x30,0x0D,
+0x21,0x0C,0x0D,0x41,0x08,0x0C,0xA1,0x04,0x95,0x50,0xC9,0x4A,0x20,0x80,0x8D,0x43,
+0x4D,0x4A,0x18,0x88,0x6A,0xE7,0xFF,0xFC,0xE0,0x0C,0xA1,0x06,0x1C,0x6A,0x04,0x0D,
+0x21,0x0E,0x0D,0x41,0x0A,0x88,0x85,0x1C,0x21,0x10,0xE7,0xFF,0xFC,0xB7,0x1C,0x21,
+0xE8,0x0D,0x41,0x10,0x5D,0x44,0x00,0x4E,0xEA,0x08,0x0D,0x61,0x0C,0x0D,0x81,0x08,
+0x5D,0x65,0x00,0x5C,0x63,0x00,0x4D,0x83,0x18,0x8D,0x8B,0x8D,0x97,0x06,0xE0,0x81,
+0xCA,0xF7,0x04,0x00,0x0D,0x21,0x14,0x0D,0xA1,0x04,0xC5,0x8C,0x1F,0xFC,0x5D,0xA6,
+0x00,0x8D,0x97,0x88,0x6C,0xE7,0xFF,0xFC,0x00,0x55,0x4A,0x01,0x50,0x80,0xFF,0x4D,
+0x4A,0x08,0x8D,0x6A,0x4D,0x6B,0x18,0x4C,0x84,0x5C,0x4D,0x6D,0x5C,0x44,0x84,0x27,
+0x0D,0xA1,0x06,0x44,0x83,0x24,0x0D,0x41,0x12,0x88,0x6C,0x44,0x84,0x5D,0x0D,0x81,
+0x0A,0x0D,0x61,0x0E,0x0D,0x21,0x16,0x1C,0x21,0x18,0xE7,0xFF,0xFB,0xD7,0x5C,0x84,
+0x04,0x20,0x60,0x28,0x20,0x64,0xC2,0xE4,0x00,0x00,0x33,0x4C,0x84,0x41,0xC2,0xF4,
+0x00,0x01,0x9C,0x9F,0xCA,0xF7,0x24,0x34,0xC4,0x84,0x01,0xFF,0xE4,0x00,0x00,0x2B,
+0x4C,0x84,0x41,0xC2,0xF4,0x00,0x01,0x9C,0x9F,0xCA,0xF7,0x24,0x38,0xC4,0x84,0x01,
+0xFF,0x0C,0x97,0x01,0x85,0x29,0x07,0x00,0xFF,0xCB,0x18,0xFF,0xFF,0x20,0x60,0x28,
+0x20,0x65,0xD2,0xE4,0x00,0x00,0x7D,0xC2,0xF4,0x00,0x01,0x47,0x64,0x27,0xCB,0x37,
+0x24,0x3C,0x0B,0x59,0x01,0x47,0x5A,0xDC,0x0F,0x59,0x01,0xCA,0xF7,0x24,0x40,0x47,
+0x04,0xC4,0x0B,0x37,0x01,0x4F,0x18,0x81,0x44,0x84,0x27,0x4C,0x84,0x81,0x44,0x84,
+0xC4,0x47,0x18,0xC7,0x47,0x19,0xC4,0x47,0x04,0xC5,0x0F,0x17,0x01,0xE4,0x00,0x00,
+0x6F,0x5F,0x44,0x04,0xC2,0xF4,0x00,0x01,0x47,0x9A,0xD7,0xCB,0x37,0x24,0x3C,0x0B,
+0x79,0x01,0x47,0x7B,0xE4,0x47,0x5A,0xDD,0x0F,0x59,0x01,0xCA,0xF7,0x24,0x40,0x44,
+0x84,0xC4,0x0B,0x57,0x01,0x4C,0x84,0x81,0x47,0x24,0x27,0x47,0x1A,0xCC,0x44,0x84,
+0xC5,0x0C,0x97,0x01,0x85,0x29,0x07,0x00,0xFF,0xCB,0x18,0xFF,0xFF,0x20,0x60,0x28,
+0x20,0x65,0xD2,0xE4,0x00,0x00,0x7D,0xC2,0xF4,0x00,0x01,0x47,0x64,0x27,0xCB,0x37,
+0x24,0x1C,0x0B,0x59,0x01,0x47,0x5A,0xDC,0x0F,0x59,0x01,0xCA,0xF7,0x24,0x20,0x47,
+0x04,0xC4,0x0B,0x37,0x01,0x4F,0x18,0x81,0x44,0x84,0x27,0x4C,0x84,0x81,0x44,0x84,
+0xC4,0x47,0x18,0xC7,0x47,0x19,0xC4,0x47,0x04,0xC5,0x0F,0x17,0x01,0xE4,0x00,0x00,
+0x6F,0x5F,0x44,0x04,0xC2,0xF4,0x00,0x01,0x47,0x9A,0xD7,0xCB,0x37,0x24,0x1C,0x0B,
+0x79,0x01,0x47,0x7B,0xE4,0x47,0x5A,0xDD,0x0F,0x59,0x01,0xCA,0xF7,0x24,0x20,0x44,
+0x84,0xC4,0x0B,0x57,0x01,0x4C,0x84,0x81,0x47,0x24,0x27,0x47,0x1A,0xCC,0x44,0x84,
+0xC5,0x0C,0x97,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCB,0x17,0x24,0x80,0x0B,0x38,
+0x01,0x5F,0x23,0x04,0x0F,0x38,0x01,0x07,0x20,0xFF,0xCB,0x39,0xFF,0xFF,0xCA,0xF7,
+0x24,0x84,0x44,0x63,0xCC,0x0B,0x17,0x01,0x4C,0x63,0x81,0xFF,0x20,0xFF,0x00,0x47,
+0x18,0xCC,0x44,0x63,0xC5,0x0C,0x77,0x01,0x85,0x29,0x07,0x00,0xFF,0xCB,0x18,0xFF,
+0xFF,0x20,0x60,0x28,0x20,0x65,0xD2,0xE4,0x00,0x00,0x7D,0xC2,0xF4,0x00,0x01,0x47,
+0x64,0x27,0xCB,0x37,0x24,0x24,0x0B,0x59,0x01,0x47,0x5A,0xDC,0x0F,0x59,0x01,0xCA,
+0xF7,0x24,0x28,0x47,0x04,0xC4,0x0B,0x37,0x01,0x4F,0x18,0x81,0x44,0x84,0x27,0x4C,
+0x84,0x81,0x44,0x84,0xC4,0x47,0x18,0xC7,0x47,0x19,0xC4,0x47,0x04,0xC5,0x0F,0x17,
+0x01,0xE4,0x00,0x00,0x6F,0x5F,0x44,0x04,0xC2,0xF4,0x00,0x01,0x47,0x9A,0xD7,0xCB,
+0x37,0x24,0x24,0x0B,0x79,0x01,0x47,0x7B,0xE4,0x47,0x5A,0xDD,0x0F,0x59,0x01,0xCA,
+0xF7,0x24,0x28,0x44,0x84,0xC4,0x0B,0x57,0x01,0x4C,0x84,0x81,0x47,0x24,0x27,0x47,
+0x1A,0xCC,0x44,0x84,0xC5,0x0C,0x97,0x01,0x85,0x29,0xC3,0x14,0x00,0x01,0xCA,0xF8,
+0x22,0x08,0x20,0x64,0x3A,0x0B,0x37,0x01,0xCB,0x39,0x10,0x00,0xE4,0x00,0x00,0x1D,
+0x20,0x60,0x36,0x0B,0x37,0x01,0xC7,0x39,0xEF,0xFF,0x0F,0x37,0x01,0xCA,0xF8,0x22,
+0x08,0x0B,0x17,0x01,0xCB,0x18,0x20,0x00,0x0F,0x17,0x01,0x85,0x29,0x5C,0x84,0x00,
+0x1F,0x00,0x80,0x20,0x60,0x28,0x20,0x64,0xAA,0xE4,0x00,0x00,0x21,0xC2,0xF4,0x00,
+0x01,0xCA,0xF7,0x24,0x54,0xE4,0x00,0x00,0x19,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,
+0x64,0x0B,0x37,0x01,0x54,0x84,0x7F,0x47,0x19,0xC4,0x47,0x04,0xC5,0x0F,0x17,0x01,
+0x85,0x29,0x5C,0x84,0x00,0x20,0x60,0x28,0x20,0x64,0xAA,0xE4,0x00,0x00,0x21,0xC2,
+0xF4,0x00,0x01,0xCA,0xF7,0x24,0x50,0xE4,0x00,0x00,0x19,0xC2,0xF4,0x00,0x01,0xCA,
+0xF7,0x24,0x61,0x13,0x17,0x00,0x54,0x84,0x1F,0x57,0x18,0xE0,0x44,0x84,0xC5,0x18,
+0x97,0x00,0x85,0x29,0x9C,0x30,0x0D,0x41,0x08,0x0D,0x61,0x04,0x0D,0x21,0x0C,0x5D,
+0x44,0x00,0x89,0x63,0x1C,0x8A,0xF1,0x4C,0x84,0x08,0x5C,0x83,0xF3,0x20,0x00,0x19,
+0x50,0x80,0x1F,0x88,0x6B,0xE7,0xFF,0xFF,0x5A,0x1F,0x00,0x80,0x21,0x60,0x28,0x21,
+0x64,0xAA,0xE4,0x00,0x00,0x21,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0x4C,0xE4,0x00,
+0x00,0x19,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0x60,0x0B,0x37,0x01,0x55,0x4A,0x7F,
+0x47,0x19,0xC4,0x47,0x0A,0xC5,0x0F,0x17,0x01,0x0D,0x61,0x06,0x0D,0x41,0x0A,0x0D,
+0x21,0x0E,0x1C,0x21,0x10,0x85,0x29,0x20,0x64,0x8E,0xC2,0xF4,0x00,0x01,0xCB,0x17,
+0x22,0x04,0xCA,0xF7,0x22,0x60,0x0B,0x38,0x01,0x53,0x39,0xF0,0x0F,0x38,0x01,0x0B,
+0x17,0x01,0xC7,0x18,0xFF,0xF0,0xE4,0x00,0x00,0x47,0x20,0x60,0x8A,0xC2,0xF4,0x00,
+0x01,0xCB,0x17,0x22,0x04,0xCA,0xF7,0x22,0x60,0x0B,0x38,0x01,0xC7,0x39,0xFF,0x0F,
+0x0F,0x38,0x01,0x0B,0x17,0x01,0x53,0x18,0x0F,0x0F,0x17,0x01,0x85,0x29,0x20,0x64,
+0x8E,0xC2,0xF4,0x00,0x01,0xCB,0x17,0x22,0x04,0xCA,0xF7,0x22,0x60,0x0B,0x38,0x01,
+0x53,0x39,0x08,0x0F,0x38,0x01,0x0B,0x17,0x01,0xC7,0x18,0xFE,0xFF,0xE4,0x00,0x00,
+0x49,0x20,0x60,0x8E,0xC2,0xF4,0x00,0x01,0xCB,0x17,0x22,0x04,0xCA,0xF7,0x22,0x60,
+0x0B,0x38,0x01,0xC7,0x39,0xFF,0xF7,0x0F,0x38,0x01,0x0B,0x17,0x01,0xCB,0x18,0x01,
+0x00,0x0F,0x17,0x01,0x85,0x29,0x20,0x64,0x5A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x22,
+0x60,0x0B,0x17,0x01,0xCB,0x18,0x02,0x00,0xE4,0x00,0x00,0x2D,0x20,0x60,0x56,0xC2,
+0xF4,0x00,0x01,0xCA,0xF7,0x22,0x60,0x0B,0x17,0x01,0xC7,0x18,0xFD,0xFF,0x0F,0x17,
+0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0x54,0x63,0x7F,0xCA,0xF7,0x24,0xA0,0x1F,0x20,
+0x80,0x0B,0x17,0x01,0x47,0x18,0xCC,0x47,0x03,0xC5,0x0F,0x17,0x01,0x85,0x29,0xC2,
+0xF4,0x00,0x01,0x4C,0x63,0x40,0xCA,0xF7,0x24,0xA0,0xC4,0x63,0x7F,0x00,0x0B,0x17,
+0x01,0xFF,0x20,0x80,0xFF,0x47,0x18,0xCC,0x47,0x03,0xC5,0x0F,0x17,0x01,0x85,0x29,
+0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0xA1,0x10,0x77,0x00,0x54,0x63,0x7F,0x85,0x29,
+0x20,0x64,0x5A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0xA0,0x0B,0x17,0x01,0xC7,0x18,
+0xFF,0x7F,0xE4,0x00,0x00,0x2B,0x20,0x60,0x52,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,
+0xA0,0x0B,0x17,0x01,0x53,0x18,0x80,0x0F,0x17,0x01,0x85,0x29,0x20,0x64,0x5A,0xC2,
+0xF4,0x00,0x01,0xCA,0xF7,0x24,0xA0,0x0B,0x17,0x01,0xC7,0x18,0x7F,0xFF,0xE4,0x00,
+0x00,0x39,0x20,0x60,0x6E,0xC2,0xF4,0x00,0x01,0xFF,0x20,0x80,0x00,0xCA,0xF7,0x24,
+0xA0,0x0B,0x17,0x01,0x47,0x18,0xCD,0x5F,0x18,0x04,0x0F,0x17,0x01,0x85,0x29,0xC2,
+0xF4,0x00,0x01,0x5C,0x63,0x00,0xCA,0xF7,0x22,0x0C,0xFF,0x20,0xFF,0x00,0x0B,0x17,
+0x01,0x47,0x18,0xCC,0x47,0x03,0xC5,0x0F,0x17,0x01,0x85,0x29,0x5C,0x63,0x04,0xC2,
+0xF4,0x00,0x01,0xFF,0x40,0xFF,0x00,0xCA,0xF7,0x22,0xF0,0x47,0x03,0xD4,0x0B,0x37,
+0x01,0x5F,0x39,0x00,0x47,0x18,0xCD,0x0F,0x17,0x01,0x85,0x29,0x5C,0x63,0x04,0xC2,
+0xF4,0x00,0x01,0xCA,0xF7,0x22,0x38,0x0B,0x17,0x01,0x0C,0x77,0x01,0x85,0x29,0x20,
+0x64,0x6A,0xC2,0xF4,0x00,0x01,0x9B,0x3C,0xCA,0xF7,0x25,0xC0,0x0B,0x17,0x01,0x47,
+0x18,0xCC,0x53,0x18,0x01,0xE4,0x00,0x00,0x3F,0x20,0x60,0x7A,0xC2,0xF4,0x00,0x01,
+0xCB,0x17,0x22,0x38,0xCA,0xF7,0x25,0xC0,0x0B,0x38,0x01,0x0C,0x18,0x01,0x0B,0x17,
+0x01,0x53,0x18,0x03,0x0F,0x17,0x01,0x85,0x29,0x5C,0x84,0x00,0x20,0x64,0x62,0x4C,
+0x63,0x24,0xC2,0xF4,0x00,0x01,0x5C,0x63,0x04,0xCA,0xF7,0x22,0xCC,0x0C,0x77,0x01,
+0xE4,0x00,0x00,0x25,0x20,0x60,0x3A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x22,0xCC,0x0C,
+0x17,0x01,0x85,0x29,0x20,0x60,0x5A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x22,0xE8,0x0B,
+0x17,0x01,0xC7,0x18,0xFF,0xFE,0xE4,0x00,0x00,0x2B,0x20,0x64,0x52,0xC2,0xF4,0x00,
+0x01,0xCA,0xF7,0x22,0xE8,0x0B,0x17,0x01,0x53,0x18,0x01,0x0F,0x17,0x01,0x85,0x29,
+0x20,0x60,0x5A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x22,0xE8,0x0B,0x17,0x01,0xC7,0x18,
+0xF0,0xFF,0xE4,0x00,0x00,0x2D,0x20,0x64,0x56,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x22,
+0xE8,0x0B,0x17,0x01,0xCB,0x18,0x0F,0x00,0x0F,0x17,0x01,0x85,0x29,0x5C,0x63,0x00,
+0xC4,0x84,0x03,0xFF,0x20,0x64,0x70,0x20,0x60,0x34,0x20,0x68,0x88,0x20,0x6C,0xDA,
+0xE4,0x00,0x00,0x51,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0x68,0xE4,0x00,0x00,0x49,
+0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0x6C,0xE4,0x00,0x00,0x31,0xC2,0xF4,0x00,0x01,
+0xCA,0xF7,0x24,0x70,0xE4,0x00,0x00,0x19,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x24,0x74,
+0x0C,0x97,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x23,0x24,0x0B,0x17,0x01,
+0x53,0x18,0x20,0x0F,0x17,0x01,0x5C,0x63,0x00,0x07,0x00,0x20,0xCB,0x18,0x41,0x00,
+0x44,0x63,0xC5,0x4C,0x63,0x10,0x0C,0x83,0x00,0x0B,0x17,0x01,0xC7,0x18,0xFF,0xDF,
+0x0F,0x17,0x01,0x85,0x29,0xFC,0x21,0xFE,0x88,0x50,0xA0,0x96,0xED,0x21,0x01,0x74,
+0xED,0x41,0x01,0x70,0xED,0x61,0x01,0x6C,0x88,0x61,0xC1,0x78,0x00,0x21,0xFD,0x6B,
+0xB4,0xBE,0x88,0x8B,0xE7,0xFF,0x44,0x52,0xFD,0x41,0x00,0x96,0xFC,0x8B,0x00,0x96,
+0x88,0x6A,0x50,0xA0,0xD2,0xE7,0xFF,0x44,0x30,0x8A,0xE1,0xC3,0x54,0x00,0x01,0xFF,
+0x60,0xFF,0x00,0x0B,0x37,0x01,0x47,0x19,0xDC,0x5F,0x39,0x00,0x4F,0x39,0x10,0x4F,
+0x18,0x08,0x8F,0x19,0x0B,0x37,0x03,0x47,0xB9,0xCF,0x8F,0x1A,0x0B,0x98,0x01,0x47,
+0x9C,0xEC,0x0B,0xB7,0x05,0x47,0x39,0xEC,0x47,0x3C,0xCD,0x0F,0x38,0x01,0x9E,0xE6,
+0xD5,0x57,0xFE,0x9E,0xFE,0xE1,0x00,0x96,0xFF,0x81,0x01,0x68,0x0B,0x37,0x01,0x47,
+0x19,0xDC,0x5F,0x39,0x00,0x4F,0x39,0x10,0x4F,0x18,0x08,0x8F,0x19,0x0B,0x37,0x03,
+0x47,0xD9,0xCF,0x8F,0x1A,0x0B,0xB8,0x01,0x47,0xBD,0xF4,0x0B,0xD7,0x05,0x47,0x39,
+0xF4,0x47,0x3D,0xCD,0x0F,0x38,0x01,0x9E,0xE6,0xD7,0x97,0xFE,0x9E,0xED,0x61,0x01,
+0x6E,0xED,0x41,0x01,0x72,0xED,0x21,0x01,0x76,0xFC,0x21,0x01,0x78,0x85,0x29,0xC2,
+0xF4,0x00,0x01,0xCB,0x17,0x22,0x00,0x0C,0x18,0x01,0xCA,0xF7,0x24,0x14,0xFF,0x20,
+0xFF,0x07,0x0B,0x17,0x01,0x47,0x18,0xCC,0x53,0x18,0x30,0x0F,0x17,0x01,0x85,0x29,
+0x5C,0x84,0x00,0x9B,0x10,0x20,0x60,0x28,0x20,0x64,0xAA,0xE4,0x00,0x00,0x21,0xC2,
+0xF4,0x00,0x01,0xCA,0xF7,0x22,0x10,0xE4,0x00,0x00,0x19,0xC2,0xF4,0x00,0x01,0xCA,
+0xF7,0x22,0x14,0x0B,0x37,0x01,0x54,0x84,0x0F,0x47,0x19,0xC4,0x47,0x04,0xC5,0x0F,
+0x17,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCB,0x17,0x74,0xD8,0x18,0x18,0x00,0xCB,
+0x37,0x74,0x10,0x5C,0x63,0x00,0x18,0x79,0x00,0xCB,0x37,0x76,0x30,0x18,0x19,0x00,
+0x53,0x40,0x24,0xCB,0x37,0x74,0x00,0x1B,0x59,0x00,0xCB,0x77,0x74,0x28,0x53,0x20,
+0x60,0x1B,0x3B,0x00,0xCB,0x77,0x74,0x30,0x1B,0x3B,0x00,0xCB,0x77,0x74,0x38,0x53,
+0x20,0x1C,0x1B,0x3B,0x00,0xCB,0x77,0x74,0x40,0x1B,0x3B,0x00,0xCB,0x37,0x74,0xA8,
+0x13,0x39,0x00,0xCB,0x37,0x74,0x78,0x9B,0x69,0x1B,0x79,0x00,0xCB,0x37,0x74,0x70,
+0x18,0x19,0x00,0xCB,0x37,0x74,0x60,0x13,0x79,0x00,0x1B,0x59,0x00,0xCA,0xF7,0x74,
+0x61,0x13,0x37,0x00,0x18,0x17,0x00,0x98,0x61,0x12,0xF8,0x00,0x52,0xF7,0x01,0x1A,
+0xF8,0x00,0x85,0x29,0x5C,0x63,0x00,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x74,0x20,0x18,
+0x77,0x00,0x0B,0x17,0x01,0xC7,0x18,0xFE,0xFF,0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,
+0x00,0x01,0xCA,0xF7,0x74,0x68,0x10,0x77,0x00,0x4C,0x63,0x21,0x54,0x63,0x01,0x85,
+0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x74,0xE0,0x10,0x77,0x00,0x4C,0x63,0x09,0x54,
+0x63,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x74,0x68,0x10,0x77,0x00,0x4C,
+0x63,0x29,0x54,0x63,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x74,0xE0,0x10,
+0x77,0x00,0x4C,0x63,0x19,0x54,0x63,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,
+0x74,0x68,0x10,0x77,0x00,0x4C,0x63,0x11,0x54,0x63,0x01,0x85,0x29,0xC2,0xF4,0x00,
+0x01,0xCA,0xF7,0x74,0x68,0x08,0x77,0x01,0x4C,0x63,0x51,0x54,0x63,0x01,0x85,0x29,
+0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x74,0xC0,0x12,0xF7,0x00,0x85,0x29,0xC2,0xF4,0x00,
+0x01,0xCA,0xF7,0x74,0xA8,0x12,0xF7,0x00,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,
+0x74,0xC8,0x12,0xF7,0x00,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x74,0xA0,0x12,
+0xF7,0x00,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x74,0x20,0x10,0x77,0x00,0x85,
+0x29,0x5C,0x63,0x00,0xC3,0x14,0x00,0x01,0x4E,0xE3,0x10,0xCB,0x18,0x2A,0x00,0x8E,
+0xF8,0x08,0x77,0x00,0x9A,0xE8,0xCC,0x63,0x00,0x03,0x40,0x63,0xB8,0x85,0x29,0x5C,
+0x84,0x04,0x5E,0xE4,0x00,0xD2,0xEF,0x05,0xAD,0x4E,0xF7,0x10,0xC3,0x18,0x00,0x21,
+0xFF,0x18,0xBC,0x20,0x8E,0xF8,0xC3,0x34,0x00,0x01,0x0F,0x17,0x02,0xCA,0xF9,0x26,
+0x18,0x0B,0x57,0x01,0xC7,0x5A,0xFF,0xF3,0x1F,0x60,0xCF,0x0F,0x57,0x01,0x0B,0x57,
+0x01,0x47,0x5A,0xDC,0x53,0x5A,0x10,0x4C,0x84,0x49,0x0F,0x57,0x01,0x9A,0xE1,0xCB,
+0x59,0x26,0x20,0xE4,0x00,0x00,0x31,0x4F,0x37,0x08,0x9E,0xE1,0x8F,0x38,0x5E,0xF7,
+0x04,0x0B,0x39,0x01,0xC7,0x39,0x3F,0xFF,0x0F,0x3A,0x01,0xC3,0x34,0x00,0x01,0xD6,
+0xE4,0xFF,0x40,0x20,0x60,0x96,0xCB,0x39,0x26,0x38,0x0B,0x18,0x01,0x0A,0xF9,0x01,
+0x4F,0x18,0x60,0xFF,0x40,0x8F,0xFF,0xC7,0x18,0x70,0x00,0x46,0xF7,0xD4,0x46,0xF8,
+0xBD,0x0E,0xF9,0x01,0xE4,0x00,0x00,0x4B,0x20,0x64,0x86,0xCA,0xF9,0x26,0x38,0xFF,
+0x60,0xF8,0xFF,0x0B,0x38,0x01,0x0B,0x57,0x01,0x4F,0x39,0x40,0x47,0x1A,0xDC,0xC7,
+0x39,0x07,0x00,0x47,0x19,0xC5,0x0F,0x17,0x01,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,
+0x18,0x0B,0x17,0x01,0x53,0x18,0x30,0x0F,0x17,0x01,0x85,0x29,0x5C,0x84,0x00,0xD0,
+0x8F,0x03,0x9D,0xC2,0xF8,0x00,0x21,0xFE,0xF7,0xBB,0x48,0x4C,0x84,0x10,0xC3,0x14,
+0x00,0x01,0x8C,0x97,0xCB,0x38,0x26,0x34,0x0E,0xE4,0x02,0x0B,0x59,0x01,0x0B,0x77,
+0x03,0xFF,0x80,0xC0,0x00,0xC7,0x7B,0x3F,0xFF,0x47,0x5A,0xE4,0x47,0x5B,0xD5,0x0F,
+0x59,0x01,0x20,0x60,0x7E,0x0B,0x37,0x01,0xCB,0x18,0x26,0x38,0x4F,0x39,0x60,0x0B,
+0x58,0x01,0xFF,0x60,0x8F,0xFF,0xC7,0x39,0x70,0x00,0x46,0xFA,0xDC,0xE4,0x00,0x00,
+0x3F,0x20,0x64,0x86,0x0B,0x37,0x01,0xCB,0x18,0x26,0x38,0x4F,0x39,0x40,0x0B,0x58,
+0x01,0xFF,0x80,0xF8,0xFF,0xC7,0x39,0x07,0x00,0x46,0xFA,0xE4,0x46,0xF9,0xBD,0x0E,
+0xF8,0x01,0x85,0x29,0x5C,0x84,0x00,0xD0,0x8C,0x04,0x1D,0xC2,0xF8,0x00,0x21,0xFE,
+0xF7,0xBB,0x48,0x4C,0x84,0x10,0xFF,0x40,0xC0,0x00,0x8C,0x97,0x0E,0xE4,0x02,0x20,
+0x60,0xD6,0xC3,0x14,0x00,0x01,0x0B,0x77,0x03,0xCB,0x38,0x26,0xC4,0xC7,0x7B,0x3F,
+0xFF,0x0B,0x99,0x01,0x47,0x5C,0xD4,0x47,0x5B,0xD5,0xCB,0x18,0x26,0x38,0x0F,0x59,
+0x01,0x1F,0x60,0x8F,0x0B,0x37,0x01,0x0B,0x58,0x01,0x4F,0x39,0x20,0x57,0x39,0x70,
+0xE4,0x00,0x00,0x63,0x20,0x64,0xDA,0xC3,0x14,0x00,0x01,0x0B,0x77,0x03,0xCB,0x38,
+0x26,0xC8,0xC7,0x7B,0x3F,0xFF,0x0B,0x99,0x01,0x47,0x5C,0xD4,0x47,0x5B,0xD5,0xCB,
+0x18,0x26,0x38,0x0F,0x59,0x01,0x9B,0x78,0x0B,0x37,0x01,0x0B,0x58,0x01,0x57,0x39,
+0x07,0x46,0xFA,0xDC,0x46,0xF9,0xBD,0x0E,0xF8,0x01,0x85,0x29,0x5C,0x84,0x04,0x20,
+0x60,0x28,0x20,0x64,0xEE,0xE4,0x00,0x00,0x39,0xC2,0xF4,0x00,0x01,0x4C,0x84,0x41,
+0xCA,0xF7,0x26,0xC0,0x54,0x84,0x3F,0x0B,0x17,0x01,0x1F,0x20,0xC0,0xE4,0x00,0x00,
+0x2F,0xC2,0xF4,0x00,0x01,0xC4,0x84,0x3F,0x00,0xCA,0xF7,0x26,0xC0,0xFF,0x20,0xC0,
+0xFF,0x0B,0x17,0x01,0x47,0x18,0xCC,0x44,0x84,0xC5,0x0C,0x97,0x01,0x85,0x29,0x20,
+0x61,0x52,0x20,0x84,0x84,0x20,0x80,0x2C,0xD0,0x82,0x04,0xD6,0xE4,0x00,0x00,0x5D,
+0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x30,0x0B,0x17,0x01,0xC7,0x18,0x3F,0xFF,0xE4,
+0x00,0x01,0x01,0xC2,0xF4,0x00,0x01,0xFF,0x20,0x80,0x00,0xCA,0xF7,0x26,0x30,0x0B,
+0x17,0x01,0xC7,0x18,0x3F,0xFF,0xE4,0x00,0x00,0x27,0xC2,0xF4,0x00,0x01,0xFF,0x20,
+0xC0,0x00,0xCA,0xF7,0x26,0x30,0x0B,0x17,0x01,0x47,0x18,0xCD,0x5F,0x18,0x04,0xE4,
+0x00,0x00,0xA1,0x20,0x65,0x3E,0x20,0x84,0x80,0x20,0x80,0x28,0x20,0x89,0x1A,0xE4,
+0x00,0x00,0x63,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x30,0x0B,0x17,0x01,0xC7,0x18,
+0xCF,0xFF,0xE4,0x00,0x00,0x5B,0xC2,0xF4,0x00,0x01,0xFF,0x20,0xCF,0xFF,0xCA,0xF7,
+0x26,0x30,0x0B,0x17,0x01,0x47,0x18,0xCC,0xCB,0x18,0x20,0x00,0xE4,0x00,0x00,0x27,
+0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x30,0x0B,0x17,0x01,0xCB,0x18,0x30,0x00,0x0F,
+0x17,0x01,0x85,0x29,0x20,0x64,0x72,0xC2,0xF4,0x00,0x01,0xFF,0x20,0x80,0x00,0xCA,
+0xF7,0x26,0x24,0x0B,0x17,0x01,0x47,0x18,0xCD,0x5F,0x18,0x04,0xE4,0x00,0x00,0x2D,
+0x20,0x60,0x56,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x24,0x0B,0x17,0x01,0xC7,0x18,
+0x7F,0xFF,0x0F,0x17,0x01,0x85,0x29,0x20,0x64,0x5A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,
+0x26,0x24,0x0B,0x17,0x01,0xCB,0x18,0x20,0x00,0xE4,0x00,0x00,0x2D,0x20,0x60,0x56,
+0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x24,0x0B,0x17,0x01,0xC7,0x18,0xDF,0xFF,0x0F,
+0x17,0x01,0x85,0x29,0x20,0x64,0x5A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x24,0x0B,
+0x17,0x01,0xCB,0x18,0x40,0x00,0xE4,0x00,0x00,0x2D,0x20,0x60,0x56,0xC2,0xF4,0x00,
+0x01,0xCA,0xF7,0x26,0x24,0x0B,0x17,0x01,0xC7,0x18,0xBF,0xFF,0x0F,0x17,0x01,0x85,
+0x29,0x20,0x64,0x5A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x24,0x0B,0x17,0x01,0xCB,
+0x18,0x10,0x00,0xE4,0x00,0x00,0x2D,0x20,0x60,0x56,0xC2,0xF4,0x00,0x01,0xCA,0xF7,
+0x26,0x24,0x0B,0x17,0x01,0xC7,0x18,0xEF,0xFF,0x0F,0x17,0x01,0x85,0x29,0x9C,0x38,
+0xC2,0xF4,0x00,0x01,0x0D,0x21,0x04,0xCA,0xF7,0x26,0x18,0x0B,0x17,0x01,0xCB,0x18,
+0x40,0x00,0x98,0x60,0x0F,0x17,0x01,0xE7,0xFF,0xFF,0x1A,0x0D,0x21,0x06,0x98,0x60,
+0x9C,0x28,0xE7,0xFF,0xFF,0x5F,0x20,0x64,0x72,0xC2,0xF4,0x00,0x01,0xFF,0x20,0x80,
+0x00,0xCA,0xF7,0x26,0x00,0x0B,0x17,0x01,0x47,0x18,0xCD,0x5F,0x18,0x04,0xE4,0x00,
+0x00,0x2D,0x20,0x60,0x56,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x00,0x0B,0x17,0x01,
+0xC7,0x18,0x7F,0xFF,0x0F,0x17,0x01,0x85,0x29,0x20,0x64,0x5A,0xC2,0xF4,0x00,0x01,
+0xCA,0xF7,0x26,0x00,0x0B,0x17,0x01,0xCB,0x18,0x20,0x00,0xE4,0x00,0x00,0x2D,0x20,
+0x60,0x56,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x00,0x0B,0x17,0x01,0xC7,0x18,0xDF,
+0xFF,0x0F,0x17,0x01,0x85,0x29,0x20,0x64,0x5A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,
+0x00,0x0B,0x17,0x01,0xCB,0x18,0x40,0x00,0xE4,0x00,0x00,0x2D,0x20,0x60,0x56,0xC2,
+0xF4,0x00,0x01,0xCA,0xF7,0x26,0x00,0x0B,0x17,0x01,0xC7,0x18,0xBF,0xFF,0x0F,0x17,
+0x01,0x85,0x29,0x20,0x64,0x5A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x00,0x0B,0x17,
+0x01,0xCB,0x18,0x10,0x00,0xE4,0x00,0x00,0x2D,0x20,0x60,0x56,0xC2,0xF4,0x00,0x01,
+0xCA,0xF7,0x26,0x00,0x0B,0x17,0x01,0xC7,0x18,0xEF,0xFF,0x0F,0x17,0x01,0x85,0x29,
+0x20,0x64,0x5A,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x00,0x0B,0x17,0x01,0xCB,0x18,
+0x08,0x00,0xE4,0x00,0x00,0x2D,0x20,0x60,0x56,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,
+0x00,0x0B,0x17,0x01,0xC7,0x18,0xF7,0xFF,0x0F,0x17,0x01,0x85,0x29,0x20,0x64,0x5A,
+0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x00,0x0B,0x17,0x01,0xCB,0x18,0x04,0x00,0xE4,
+0x00,0x00,0x2D,0x20,0x60,0x56,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x26,0x00,0x0B,0x17,
+0x01,0xC7,0x18,0xFB,0xFF,0x0F,0x17,0x01,0x85,0x29,0x5C,0x63,0x00,0xC2,0xF4,0x00,
+0x01,0x4F,0x23,0x40,0xCA,0xF7,0x26,0x14,0x4C,0x63,0x60,0x0B,0x17,0x01,0x44,0x79,
+0x1D,0x5F,0x18,0x00,0x44,0x63,0xC5,0x5C,0x63,0x04,0x0C,0x77,0x01,0x85,0x29,0xC2,
+0xF4,0x00,0x01,0xFF,0x20,0xF0,0x00,0xCB,0x17,0x26,0x0C,0xC4,0x63,0x0F,0xFF,0x0B,
+0x58,0x01,0x5C,0x63,0x06,0x47,0x5A,0xCC,0x47,0x43,0xD5,0x0F,0x58,0x01,0xCA,0xF7,
+0x26,0x10,0x0B,0x17,0x01,0x47,0x38,0xCC,0x44,0x63,0xCD,0x0C,0x77,0x01,0x85,0x29,
+0x9C,0x38,0xFF,0x00,0xE0,0x00,0x0D,0x21,0x04,0x0D,0x41,0x00,0xC1,0x54,0x00,0x01,
+0xCA,0xEA,0x26,0x04,0x0B,0x37,0x01,0x47,0x39,0xC4,0xCB,0x39,0x0F,0xA0,0x0F,0x37,
+0x01,0xCA,0xEA,0x26,0x08,0x0B,0x37,0x01,0x47,0x19,0xC4,0xCB,0x18,0x10,0x60,0x98,
+0x60,0x0F,0x17,0x01,0xFC,0x80,0x08,0x03,0xE7,0xFF,0xF9,0x28,0xCA,0xEA,0x26,0xC0,
+0xFF,0x20,0xC0,0xFF,0x0B,0x17,0x01,0x47,0x18,0xCC,0xCB,0x18,0x08,0x00,0x98,0x60,
+0x0F,0x17,0x01,0xFC,0x80,0x08,0x03,0xE7,0xFF,0xF7,0xDA,0x98,0x61,0xFC,0x80,0x08,
+0x03,0xE7,0xFF,0xF7,0xC6,0xCA,0xEA,0x26,0x00,0x0B,0x17,0x01,0x53,0x18,0x0F,0x0F,
+0x17,0x01,0x0B,0x17,0x01,0xC7,0x18,0xFF,0x7F,0x0F,0x17,0x01,0x0B,0x17,0x01,0xC7,
+0x18,0xFF,0xBF,0x98,0x68,0x0F,0x17,0x01,0xE7,0xFF,0xFE,0x44,0x0D,0x21,0x06,0x0D,
+0x41,0x02,0xFC,0x60,0x01,0x2C,0x9C,0x28,0xE7,0xFF,0xFE,0x6F,0xC2,0xF4,0x00,0x01,
+0xCA,0xF7,0x78,0x00,0x0B,0x17,0x01,0x53,0x18,0x02,0x0F,0x17,0x01,0x85,0x29,0xC2,
+0xF4,0x00,0x01,0xCA,0xF7,0x78,0x00,0x0B,0x17,0x01,0xC7,0x18,0xFF,0xFD,0x0F,0x17,
+0x01,0x85,0x29,0x9C,0x7F,0x5C,0x63,0x00,0xD0,0x64,0x05,0x15,0xC2,0xF8,0x00,0x21,
+0xFE,0xF7,0xBD,0xE0,0x4C,0x63,0x10,0xFF,0x00,0xFC,0xFF,0x8C,0x77,0xC2,0xF4,0x00,
+0x01,0x0F,0x23,0x02,0x87,0x29,0xCB,0x17,0x3D,0x3C,0xCA,0xF7,0x31,0x04,0x0B,0x38,
+0x01,0x53,0x39,0x01,0x0F,0x38,0x01,0x0B,0x17,0x01,0xC7,0x18,0xFC,0xFF,0xE4,0x00,
+0x00,0xD3,0xCB,0x37,0x3D,0x3C,0xCA,0xF7,0x31,0x04,0x0B,0x59,0x01,0x53,0x5A,0x01,
+0x0F,0x59,0x01,0x0B,0x37,0x01,0x47,0x19,0xC4,0xCB,0x18,0x01,0x00,0xE4,0x00,0x00,
+0x95,0xCB,0x37,0x3D,0x3C,0xCA,0xF7,0x31,0x04,0x0B,0x59,0x01,0x53,0x5A,0x01,0x0F,
+0x59,0x01,0x0B,0x37,0x01,0x47,0x19,0xC4,0xCB,0x18,0x02,0x00,0xE4,0x00,0x00,0x57,
+0xCA,0xF7,0x3D,0x3C,0x0B,0x17,0x01,0xC7,0x18,0xFF,0xFE,0xE4,0x00,0x00,0x39,0xCB,
+0x17,0x3C,0x10,0xCA,0xF7,0x3C,0x14,0x0B,0x38,0x01,0x53,0x39,0x01,0x0F,0x38,0x01,
+0x0B,0x17,0x01,0xC7,0x18,0xFF,0xFD,0x0F,0x17,0x01,0xC2,0xF4,0x00,0x01,0xCA,0xF7,
+0x78,0x00,0x0B,0x17,0x01,0xC7,0x18,0xFF,0xFB,0x0F,0x17,0x01,0x85,0x29,0x5C,0x63,
+0x00,0x5C,0x84,0x00,0x9A,0xE0,0x24,0x64,0x43,0xC2,0xF8,0x00,0x21,0xFE,0xF7,0xBD,
+0xF4,0x8C,0x77,0x12,0xE3,0x00,0xC3,0x14,0x00,0x01,0xCB,0x18,0x78,0x01,0x4E,0xF7,
+0x10,0x5C,0x80,0x29,0x46,0xF7,0xC5,0x4B,0x00,0x1A,0x1B,0x17,0x00,0x85,0x29,0x5C,
+0x84,0x04,0x5C,0x63,0x00,0xCC,0x84,0x17,0x70,0xC2,0xF4,0x00,0x01,0x4F,0x04,0x81,
+0x5F,0x18,0x04,0x20,0x60,0x56,0xCB,0x37,0x79,0x04,0x5C,0x84,0x04,0x0F,0x19,0x01,
+0xCA,0xF7,0x79,0x00,0xE4,0x00,0x00,0x25,0xCB,0x37,0x79,0x44,0x5C,0x84,0x04,0x0F,
+0x19,0x01,0xCA,0xF7,0x79,0x40,0x0C,0x97,0x01,0x98,0x81,0xE7,0xFF,0xFF,0x27,0xC2,
+0xF4,0x00,0x01,0xCA,0xF7,0x78,0xCC,0x0B,0x17,0x01,0x53,0x18,0x02,0x0F,0x17,0x01,
+0x85,0x29,0xC2,0xF4,0x00,0x01,0xCB,0x17,0x7A,0x30,0xCB,0x37,0x7A,0x34,0xCB,0x57,
+0x7A,0x10,0xCA,0xF7,0x7A,0x14,0x0B,0x18,0x01,0x0B,0x39,0x01,0x0B,0x5A,0x01,0x08,
+0x77,0x01,0x4E,0xF9,0x80,0x4C,0x63,0x80,0x8E,0xF8,0x8C,0x7A,0x44,0x63,0x1F,0x44,
+0x63,0xBC,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCB,0x17,0x7A,0x70,0xCB,0x37,0x7A,0x74,
+0xCB,0x57,0x7A,0x50,0xCA,0xF7,0x7A,0x54,0x0B,0x18,0x01,0x0B,0x39,0x01,0x0B,0x5A,
+0x01,0x08,0x77,0x01,0x4E,0xF9,0x80,0x4C,0x63,0x80,0x8E,0xF8,0x8C,0x7A,0x44,0x63,
+0x1F,0x44,0x63,0xBC,0x85,0x29,0x5C,0x63,0x06,0xC2,0xF4,0x00,0x01,0x47,0x23,0x1F,
+0xCA,0xF7,0x7A,0x10,0x0B,0x17,0x01,0x47,0x19,0xC4,0x44,0x63,0xC5,0x5C,0x63,0x04,
+0x0C,0x77,0x01,0x85,0x29,0x5C,0x63,0x06,0xC2,0xF4,0x00,0x01,0x47,0x23,0x1F,0xCA,
+0xF7,0x7A,0x50,0x0B,0x17,0x01,0x47,0x19,0xC4,0x44,0x63,0xC5,0x5C,0x63,0x04,0x0C,
+0x77,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0x44,0x63,0x1F,0xCA,0xF7,0x7A,0x10,0x0B,
+0x17,0x01,0x47,0x18,0x1C,0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0x44,0x63,
+0x1F,0xCA,0xF7,0x7A,0x50,0x0B,0x17,0x01,0x47,0x18,0x1C,0x0F,0x17,0x01,0x85,0x29,
+0x5C,0x63,0x04,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x7A,0x30,0x0C,0x77,0x01,0x85,0x29,
+0x9B,0x01,0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x7A,0x70,0x0F,0x17,0x01,0x85,0x29,0xC2,
+0xF4,0x00,0x01,0xFF,0x20,0xAA,0x55,0xCB,0x17,0x78,0xC0,0x0F,0x38,0x01,0x5F,0x03,
+0x04,0x27,0x08,0x17,0x98,0x63,0xCA,0xF7,0x78,0xC4,0x5C,0x63,0x04,0xCB,0x00,0x03,
+0xE8,0x43,0x04,0xC1,0x40,0x63,0xC3,0x4C,0x63,0x81,0x44,0x63,0x1F,0x0C,0x77,0x01,
+0x06,0xE0,0x5B,0xCA,0xF7,0x8D,0x80,0x5C,0x97,0x0D,0xC2,0xF4,0x00,0x01,0xCA,0xF7,
+0x3C,0x44,0x0B,0x17,0x01,0x20,0x00,0x2D,0xC7,0x18,0xFF,0xBF,0xE4,0x00,0x00,0x15,
+0x5F,0x18,0x04,0x53,0x18,0x40,0x0F,0x17,0x01,0x85,0x29,0xFF,0x00,0xAA,0x55,0xC2,
+0xF4,0x00,0x01,0xCA,0xF7,0x78,0xC0,0x0F,0x17,0x01,0x85,0x29,0xFF,0x00,0x55,0xAA,
+0xC2,0xF4,0x00,0x01,0xCA,0xF7,0x78,0xC0,0x0F,0x17,0x01,0x85,0x29,0xCA,0xE0,0x03,
+0x20,0xC3,0x14,0x00,0x01,0x5C,0x63,0x04,0xC0,0x60,0x63,0xEA,0x48,0x63,0xB8,0xCA,
+0xF8,0x79,0x10,0x0B,0x37,0x01,0x53,0x39,0x01,0x0F,0x37,0x01,0xCB,0x58,0x79,0x00,
+0xCB,0x38,0x79,0x08,0x9C,0x38,0x0A,0xF9,0x01,0xCB,0x18,0x3C,0x44,0x0B,0x7A,0x01,
+0x0B,0x39,0x01,0x0F,0x21,0x07,0x0B,0x18,0x01,0x57,0x18,0x40,0x5F,0x18,0x04,0x23,
+0x00,0x40,0x4C,0x63,0x29,0x5C,0x60,0x09,0x48,0x63,0x0A,0xE4,0x00,0x00,0x3F,0xCC,
+0x63,0x00,0x06,0x5C,0x63,0x04,0xE4,0x00,0x00,0x29,0x0A,0xF8,0x01,0x52,0xF7,0x01,
+0x0E,0xF8,0x01,0x0A,0xF9,0x01,0xE4,0x00,0x00,0x21,0xC3,0x34,0x00,0x01,0xCB,0x19,
+0x79,0x10,0xCB,0x39,0x79,0x08,0x0B,0x41,0x07,0x43,0x57,0xD5,0xD4,0x7A,0x00,0xB8,
+0x0B,0x41,0x07,0xD7,0x57,0xFE,0xB9,0x0B,0x41,0x07,0x43,0x5B,0xD5,0x8E,0xFA,0xD4,
+0x77,0xFE,0x5C,0x9C,0x28,0x85,0x29,0x5C,0x63,0x04,0xE4,0x00,0x00,0x2D,0x42,0xE4,
+0x2C,0xC3,0x38,0x00,0x01,0x43,0x05,0xCC,0x8F,0x03,0x13,0x18,0x00,0x1B,0x17,0x00,
+0x9C,0xBF,0x20,0xBF,0xB2,0x85,0x29,0xC3,0x14,0x00,0x01,0x5C,0x63,0x00,0xCA,0xF8,
+0x2C,0x30,0x20,0x60,0xBE,0x0B,0x17,0x01,0xCB,0x18,0x02,0x00,0x0F,0x17,0x01,0x80,
+0x01,0xC2,0xF4,0x00,0x01,0xCB,0x17,0x3C,0x44,0xCA,0xF7,0x3C,0xA8,0x0B,0x38,0x01,
+0xC7,0x39,0xFF,0xF3,0x0F,0x38,0x01,0x0B,0x17,0x01,0x53,0x18,0x01,0xE4,0x00,0x00,
+0xB3,0x0B,0x37,0x01,0xCB,0x39,0x02,0x00,0x0F,0x37,0x01,0xCA,0xF8,0x3C,0xA8,0x0B,
+0x37,0x01,0x53,0x39,0x01,0xCB,0x18,0x3C,0x5C,0x0F,0x37,0x01,0x1E,0xE0,0xC0,0x0B,
+0x38,0x00,0x47,0x39,0xBC,0x9A,0xE2,0x24,0x64,0x25,0x54,0x63,0x3F,0x5E,0xE3,0x06,
+0x46,0xF7,0xCD,0x5C,0x77,0x04,0xC2,0xF4,0x00,0x01,0x0C,0x78,0x01,0xCB,0x17,0x3C,
+0xA8,0xCA,0xF7,0x2C,0x30,0x0B,0x38,0x01,0xC7,0x39,0xFF,0xFE,0x0F,0x38,0x01,0x0B,
+0x17,0x01,0xCB,0x18,0x01,0x00,0x0F,0x17,0x01,0x85,0x29,0xC2,0xF4,0x00,0x01,0xCB,
+0x17,0x3C,0xA8,0x0B,0x18,0x01,0x57,0x18,0x01,0x23,0x00,0x46,0xCA,0xF7,0x3C,0x5C,
+0x08,0x77,0x01,0x54,0x63,0x3F,0xE4,0x00,0x00,0x0D,0x98,0x60,0x85,0x29,0xC2,0xF4,
+0x00,0x01,0xCB,0x17,0x3D,0x80,0x0B,0x38,0x01,0xCB,0x39,0x08,0x00,0x0F,0x38,0x01,
+0xCA,0xF7,0x3D,0x84,0x0B,0x17,0x01,0xCB,0x18,0x08,0x00,0x0F,0x17,0x01,0x85,0x29,
+0xE7,0xFF,0xFF,0xBD,0x56,0xE3,0xFF,0x4E,0xF7,0x08,0x5C,0x84,0x04,0xC4,0x63,0xFF,
+0x00,0x8C,0x77,0xC2,0xF4,0x00,0x01,0x4C,0x63,0x08,0x8C,0x77,0x0C,0x83,0x01,0x85,
+0x29,0x1C,0x21,0xC8,0xC0,0x98,0x00,0x21,0x0D,0x21,0x34,0x1C,0x61,0x06,0xFC,0x84,
+0xB6,0x6E,0x50,0xA0,0x2A,0xE7,0xFF,0x2B,0x50,0x1E,0xE1,0x06,0x1F,0x41,0x30,0x0B,
+0x37,0x01,0xFF,0x60,0xFF,0x00,0x47,0x19,0xDC,0x5F,0x39,0x00,0x4F,0x39,0x10,0x4F,
+0x18,0x08,0x8F,0x19,0xC3,0x34,0x00,0x01,0x8F,0x19,0x0B,0x37,0x03,0x47,0x99,0xCF,
+0x0B,0x78,0x01,0x47,0x7B,0xE4,0x0B,0x97,0x05,0x47,0x39,0xE4,0x47,0x3B,0xCD,0x0F,
+0x38,0x01,0x9E,0xE6,0xD7,0x57,0xFE,0x5E,0x0D,0x21,0x36,0x1C,0x21,0x38,0x85,0x29,
+0xFC,0x21,0xFF,0x38,0x50,0xA0,0x3C,0xED,0x21,0x00,0xC4,0xED,0x41,0x00,0xC0,0xED,
+0x61,0x00,0xBC,0xED,0x81,0x00,0xB8,0xED,0xA1,0x00,0xB4,0xED,0xC1,0x00,0xB0,0xED,
+0xE1,0x00,0xAC,0xEE,0x01,0x00,0xA8,0xC1,0x58,0x00,0x21,0x1C,0x61,0x6C,0xFD,0x4A,
+0xB6,0x6E,0x1C,0x8A,0x2A,0xE7,0xFF,0x2A,0x50,0x50,0xA0,0x24,0x1C,0x8A,0x66,0x1C,
+0x61,0x48,0xE7,0xFF,0x2A,0x36,0x98,0x61,0x98,0x82,0xE7,0xFF,0xEE,0x8A,0x98,0x61,
+0xFC,0x80,0x28,0x0A,0xE7,0xFF,0xD9,0xD4,0x98,0x61,0xFC,0x80,0x28,0x0A,0xE7,0xFF,
+0xEB,0xDC,0x98,0x61,0x88,0x83,0xE7,0xFF,0xDC,0x88,0x98,0x61,0x88,0x83,0xE7,0xFF,
+0xDA,0x10,0x98,0x60,0x98,0x81,0xE7,0xFF,0xDB,0x00,0x98,0x60,0x05,0x4F,0x0F,0xC9,
+0x4A,0x0F,0x0F,0x88,0x8A,0xE7,0xFF,0xE4,0xC0,0x98,0x61,0x88,0x8A,0xE7,0xFF,0xE4,
+0xB0,0xC3,0x54,0x00,0x01,0xCA,0xE0,0x11,0x50,0xCB,0x5A,0x22,0x00,0x57,0x17,0xFF,
+0x4F,0x18,0x10,0x8F,0x1A,0x1F,0x61,0x2A,0x0B,0x38,0x01,0x4F,0x17,0x08,0x8F,0x1B,
+0xEF,0x38,0xDD,0x61,0x9E,0xE1,0xC2,0xE2,0x2B,0xE4,0x23,0xFF,0x8D,0x1E,0xE1,0x6C,
+0xFF,0x41,0x00,0xA8,0xC1,0x94,0x00,0x01,0xFD,0xA0,0xFF,0x00,0x0B,0x37,0x01,0x47,
+0x19,0x6C,0x5F,0x39,0x00,0x4F,0x39,0x10,0x4F,0x18,0x08,0x8F,0x19,0x0B,0x37,0x03,
+0x8F,0x0C,0x0F,0x38,0x01,0x9E,0xE4,0xD7,0x57,0xFF,0x2E,0x1E,0xE1,0x48,0x1F,0x41,
+0x6C,0x0B,0x37,0x01,0x47,0x19,0x6C,0x5F,0x39,0x00,0x4F,0x39,0x10,0x4F,0x18,0x08,
+0x8F,0x19,0x0B,0x37,0x03,0x8F,0x0C,0x0F,0x38,0x01,0x9E,0xE4,0xD7,0x57,0xFF,0x2E,
+0xE7,0xFF,0xD5,0xDA,0x99,0xE0,0x89,0xC3,0x98,0x61,0xE7,0xFF,0xD5,0xF0,0xD1,0xE0,
+0x05,0xBE,0x98,0x60,0x1D,0x61,0x0A,0xE7,0xFF,0xD6,0x2A,0x99,0x40,0xE4,0x00,0x01,
+0x45,0x98,0x61,0x88,0x8A,0x22,0x01,0x0A,0xE7,0xFF,0xE1,0xC2,0x98,0x60,0xE7,0xFF,
+0xE2,0x0C,0xFC,0x60,0x01,0x00,0xE7,0xFF,0xF7,0xBC,0xE7,0xFF,0xD3,0xF6,0xE7,0xFF,
+0xF6,0x68,0xC4,0x63,0x01,0x00,0x20,0x63,0xE0,0xFC,0x60,0x01,0x00,0xE7,0xFF,0xF7,
+0x12,0xFC,0x60,0x01,0x00,0xE7,0xFF,0xF7,0xD6,0x88,0x6A,0x98,0x81,0x98,0xA0,0xE7,
+0xFF,0xE8,0x04,0xE4,0x00,0x00,0x8B,0xE7,0xFF,0xE1,0x44,0x98,0x61,0xE7,0xFF,0xE1,
+0x8E,0xFC,0x60,0x01,0x00,0xE7,0xFF,0xF7,0x3E,0xE7,0xFF,0xD3,0x78,0xE7,0xFF,0xF5,
+0xEA,0xC4,0x63,0x01,0x00,0x20,0x63,0xE0,0xFC,0x60,0x01,0x00,0xE7,0xFF,0xF6,0x94,
+0xFC,0x60,0x01,0x00,0xE7,0xFF,0xF7,0x58,0x88,0x6A,0x98,0x81,0x98,0xA0,0xE7,0xFF,
+0xE7,0x86,0x0A,0xEB,0x01,0x40,0x63,0xBD,0x0C,0x6B,0x01,0x9E,0x01,0x5E,0x10,0x00,
+0xD2,0x02,0xFB,0x8E,0x9D,0x41,0x9D,0x62,0x5D,0x4A,0x00,0xD1,0x44,0x05,0xEA,0x9A,
+0x00,0xE7,0xFF,0xFE,0xC1,0x98,0x61,0x1D,0x61,0x12,0xE7,0xFF,0xD4,0xC4,0x99,0x40,
+0xE4,0x00,0x01,0x45,0x98,0x61,0x88,0x8A,0x22,0x01,0x0A,0xE7,0xFF,0xE0,0x5C,0x98,
+0x60,0xE7,0xFF,0xE0,0xA6,0xFC,0x60,0x01,0x00,0xE7,0xFF,0xF6,0x56,0xE7,0xFF,0xD2,
+0x90,0xE7,0xFF,0xF5,0x02,0xC4,0x63,0x01,0x00,0x20,0x63,0xE0,0xFC,0x60,0x01,0x00,
+0xE7,0xFF,0xF5,0xAC,0xFC,0x60,0x01,0x00,0xE7,0xFF,0xF6,0x70,0x88,0x6A,0x98,0x81,
+0x98,0xA0,0xE7,0xFF,0xE6,0x9E,0xE4,0x00,0x00,0x8B,0xE7,0xFF,0xDF,0xDE,0x98,0x61,
+0xE7,0xFF,0xE0,0x28,0xFC,0x60,0x01,0x00,0xE7,0xFF,0xF5,0xD8,0xE7,0xFF,0xD2,0x12,
+0xE7,0xFF,0xF4,0x84,0xC4,0x63,0x01,0x00,0x20,0x63,0xE0,0xFC,0x60,0x01,0x00,0xE7,
+0xFF,0xF5,0x2E,0xFC,0x60,0x01,0x00,0xE7,0xFF,0xF5,0xF2,0x88,0x6A,0x98,0x81,0x98,
+0xA0,0xE7,0xFF,0xE6,0x20,0x0A,0xEB,0x01,0x40,0x63,0xBD,0x0C,0x6B,0x01,0x9E,0x01,
+0x5E,0x10,0x00,0xD2,0x02,0xFB,0x8E,0x9D,0x41,0x9D,0x62,0x5D,0x4A,0x00,0xD1,0x44,
+0x00,0x52,0x9A,0x00,0xE7,0xFF,0xFE,0xC1,0x9D,0xE1,0x5D,0xEF,0x00,0xD1,0xE2,0xF4,
+0x8E,0x0B,0x21,0x0A,0x0B,0x01,0x12,0x0F,0x21,0x07,0x1E,0xE1,0x0C,0x1F,0x81,0x12,
+0x0B,0x77,0x01,0x8B,0x59,0x5F,0xBB,0x06,0xD7,0x3D,0x00,0x30,0x8B,0x5B,0x5F,0x3A,
+0x06,0x0B,0x77,0x09,0x8B,0x58,0x5F,0xBB,0x06,0xD7,0x1D,0x00,0x30,0x8B,0x5B,0x5F,
+0x1A,0x06,0x9E,0xE2,0xD7,0x97,0xFE,0xE6,0x0F,0x21,0x07,0x9A,0xE0,0x0F,0x01,0x09,
+0x1F,0x21,0x1A,0x8B,0x57,0xFD,0x00,0x3F,0xFF,0xE4,0x00,0x00,0x69,0x43,0x7E,0xC4,
+0x0B,0x9B,0x00,0x43,0x79,0xC4,0x23,0x80,0x32,0x0D,0x1B,0x01,0x9B,0x41,0xE4,0x00,
+0x00,0x23,0x09,0x5D,0x00,0xCD,0x4A,0x1F,0xFF,0x43,0x8A,0xE0,0x0F,0x9B,0x01,0x9F,
+0x02,0xD3,0x08,0xFE,0xE6,0x9F,0x28,0x9E,0xE2,0xD2,0xE4,0x00,0xBA,0x1F,0x01,0x0A,
+0x4F,0xD7,0x10,0x1F,0xA1,0x06,0x8F,0xD8,0x8F,0xB7,0x9B,0x00,0xE7,0xFF,0xFF,0x83,
+0xC3,0x94,0x00,0x01,0x9A,0xE0,0xCB,0x9C,0x24,0x00,0xE4,0x00,0x00,0x47,0x43,0xB9,
+0xC4,0x43,0xDB,0xC4,0x57,0xBD,0xFF,0x0B,0xDE,0x01,0x4F,0xBD,0x10,0x8F,0xBC,0x0F,
+0xDD,0x01,0x9F,0x02,0xD3,0x08,0xFF,0x56,0x9E,0xE1,0x22,0xE8,0x54,0x1F,0x21,0x1A,
+0x4F,0x77,0x18,0x9B,0x00,0x8F,0x79,0xFF,0x37,0x12,0x46,0xE7,0xFF,0xFF,0xA7,0x9A,
+0xE0,0x4F,0x17,0x08,0x1F,0x61,0x6C,0x8F,0x1B,0x0B,0x38,0x01,0x47,0x19,0x6C,0x5F,
+0x39,0x00,0x4F,0x39,0x10,0x4F,0x18,0x08,0x8F,0x19,0x1F,0x21,0x2A,0x8F,0x0C,0x8F,
+0x37,0x0B,0x39,0x01,0x0F,0x38,0x01,0x9E,0xE2,0x5E,0xE3,0xC9,0x23,0xFF,0x55,0xC2,
+0xF4,0x00,0x01,0xCA,0xF7,0x25,0x38,0x0B,0x17,0x01,0x23,0x40,0x34,0x5F,0x18,0x04,
+0x53,0x18,0x0F,0xE4,0x00,0x00,0x11,0xC7,0x18,0xFF,0xF0,0x0F,0x17,0x01,0x98,0x60,
+0x98,0x80,0xE7,0xFF,0xDE,0x66,0x98,0x80,0x98,0x61,0xE7,0xFF,0xDE,0x56,0x98,0x60,
+0xE7,0xFF,0xDD,0x08,0x98,0x60,0x98,0x80,0xE7,0xFF,0xDC,0xA2,0x88,0x6E,0xEE,0x01,
+0x00,0xAA,0xED,0xE1,0x00,0xAE,0xED,0xC1,0x00,0xB2,0xED,0xA1,0x00,0xB6,0xED,0x81,
+0x00,0xBA,0xED,0x61,0x00,0xBE,0xED,0x41,0x00,0xC2,0xED,0x21,0x00,0xC6,0xFC,0x21,
+0x00,0xC8,0xE7,0xFF,0xD0,0x41,0x00,0x00,0x80,0x01,0x80,0x01,0x80,0x01,0x80,0x01,
+0x80,0x01,0xC8,0x80,0xAA,0x55,0xC0,0x74,0x00,0x01,0xC8,0x63,0x78,0xC0,0x0C,0x83,
+0x00,0xC0,0x74,0x00,0x01,0xC8,0x63,0x1F,0xDC,0x50,0x80,0x80,0x0C,0x83,0x00,0x04,
+0x20,0x80,0xC8,0x21,0x17,0xFC,0x1C,0x40,0xFD,0x44,0x21,0x14,0x28,0x00,0x74,0xC0,
+0x40,0x00,0x01,0xC8,0x42,0x37,0xCC,0x84,0x49,0x0C,0x41,0x0C,0x0C,0x61,0x10,0x0C,
+0x81,0x14,0x0C,0xA1,0x18,0x0C,0xC1,0x1C,0x0C,0xE1,0x20,0x0D,0x01,0x24,0x0D,0x21,
+0x28,0x0D,0x41,0x2C,0x0D,0x61,0x30,0x0D,0x81,0x34,0x0D,0xA1,0x38,0x0D,0xC1,0x3C,
+0x0D,0xE1,0x40,0x0E,0x01,0x44,0x0E,0x21,0x48,0x0E,0x41,0x4C,0x0E,0x61,0x50,0x0E,
+0x81,0x54,0x0E,0xA1,0x58,0x0E,0xC1,0x5C,0x0E,0xE1,0x60,0x0F,0x01,0x64,0x0F,0x21,
+0x68,0x0F,0x41,0x6C,0x0F,0x61,0x70,0x0F,0x81,0x74,0x0F,0xA1,0x78,0x0F,0xC1,0x7C,
+0x1C,0x61,0x00,0xC1,0x00,0x00,0x01,0xC9,0x08,0xA7,0x54,0x85,0x08,0x90,0x23,0x00,
+0xC0,0x40,0x10,0x01,0xC8,0x42,0x03,0xB0,0xC0,0x60,0x10,0x01,0xC8,0x63,0x0E,0x6A,
+0x5C,0x43,0x1F,0x20,0x00,0x2D,0x0C,0x02,0x00,0x1C,0x42,0x04,0x93,0xF4,0x85,0x29,
+0xC0,0x80,0x01,0x1F,0xC0,0x7F,0xFF,0xE1,0xC8,0x63,0xFF,0xF9,0x44,0x84,0x1C,0xC0,
+0x80,0x01,0x1D,0x0C,0x61,0x02,0xC0,0x60,0x02,0x0D,0x0C,0x61,0x06,0xC0,0x60,0x04,
+0x0D,0x0C,0x41,0x0E,0x0C,0x61,0x12,0x0C,0x81,0x16,0x0C,0xA1,0x1A,0x0C,0xC1,0x1E,
+0x0C,0xE1,0x22,0x0D,0x01,0x26,0x0D,0x21,0x2A,0x0D,0x41,0x2E,0x0D,0x61,0x32,0x0D,
+0x81,0x36,0x0D,0xA1,0x3A,0x0D,0xC1,0x3E,0x0D,0xE1,0x42,0x0E,0x01,0x46,0x0E,0x21,
+0x4A,0x0E,0x41,0x4E,0x0E,0x61,0x52,0x0E,0x81,0x56,0x0E,0xA1,0x5A,0x0E,0xC1,0x5E,
+0x0E,0xE1,0x62,0x0F,0x01,0x66,0x0F,0x21,0x6A,0x0F,0x41,0x6E,0x0F,0x61,0x72,0x0F,
+0x81,0x76,0x0F,0xA1,0x7A,0x0F,0xC1,0x7E,0xEF,0xE1,0x00,0x82,0x0C,0x21,0x0A,0x84,
+0x00,0x00,0x00,0x00,0x9C,0x30,0xCA,0xE0,0x48,0x02,0x0D,0x41,0x08,0x0D,0x21,0x0C,
+0x89,0x43,0xC2,0xF7,0x00,0x0F,0x9B,0x1C,0x46,0xF7,0xC4,0x0E,0xE1,0x04,0x0E,0xE1,
+0x06,0x56,0xF7,0x04,0x22,0xE0,0xE0,0xCA,0xE0,0x48,0x00,0xC3,0x37,0x00,0x0F,0x9B,
+0x1B,0x47,0x39,0xC4,0xC3,0x37,0x00,0x0D,0xCA,0xE0,0x48,0x02,0xC3,0x37,0x00,0x0F,
+0x47,0x19,0xC4,0xC3,0x17,0x00,0x0D,0x98,0x82,0xE7,0xFF,0xC4,0x64,0xCA,0xE0,0x48,
+0x00,0xC3,0x17,0x00,0x0F,0x53,0x18,0x04,0xC3,0x17,0x00,0x0D,0x0E,0xE1,0x06,0x56,
+0xF7,0x08,0x22,0xE0,0xE8,0xCA,0xE0,0x48,0x00,0xC3,0x37,0x00,0x0F,0x9B,0x17,0x47,
+0x39,0xC4,0xC3,0x37,0x00,0x0D,0xCA,0xE0,0x48,0x02,0xC3,0x37,0x00,0x0F,0x47,0x19,
+0xC4,0xC3,0x17,0x00,0x0D,0x98,0x83,0x88,0x6A,0xE7,0xFF,0xC3,0xE4,0xCA,0xE0,0x48,
+0x00,0xC3,0x17,0x00,0x0F,0x53,0x18,0x08,0xC3,0x17,0x00,0x0D,0x0D,0x41,0x0A,0x0D,
+0x21,0x0E,0x1C,0x21,0x10,0x85,0x29,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0xA0,0x00,0x00,
+0x1B,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
+0x01,0x00,0x00,0x00,0x00,0xA0,0x26,0x01,0x66,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
+0x01,0x00,0x00,0x00,0x00,0xA0,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
+0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x66,0x00,0x00,0x00,0x01,0x00,0x00,0x00,
+0xF3,0x00,0x40,0x00,0x70,0x00,0x8A,0x00,0x4C,0x00,0x15,0x00,0x80,0x01,0x1B,0x00,
+0x5D,0x00,0x05,0x00,0x16,0x00,0x12,0x00,0x12,0x00,0x01,0x00,0x13,0x00,0xFC,0x00,
+0xB4,0x00,0x62,0x00,0x67,0x00,0x24,0x00,0x01,0x00,0x00,0x00,0x5A,0x00,0x14,0x00,
+0x14,0x00,0x02,0x00,0x02,0x00,0x64,0x00,0x28,0x00,0x28,0x00,0x01,0x00,0x01,0x00,
+0x6E,0x00,0x01,0x00,0x5A,0x00,0x01,0x00,0x1E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x1E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x96,0x00,0x40,0x06,0x00,0x00,
+0x80,0x0C,0x00,0x00,0x01,0x03,0x07,0x00,0xC8,0x00,0xC8,0x00,0xC8,0x00,0x2C,0x01,
+0x02,0x00,0x2C,0x01,0x07,0x00,0x00,0x01,0xFF,0x00,0x06,0x00,0x98,0x08,0x02,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x03,0x04,0x05,0x02,0x00,0x04,0x00,0x06,0x00,
+0x08,0x00,0x0A,0x00,0x0C,0x00,0x10,0x00,0x14,0x00,0x18,0x00,0x20,0x00,0x28,0x00,
+0x32,0x00,0x3E,0x00,0x40,0x00,0x64,0x00,0x80,0x00,0x01,0x02,0x00,0x00,0x00,0x11,
+0xFF,0xFF,0xFF,0xFF,0x01,0x11,0xFF,0xFF,0x18,0x50,0x02,0x11,0xFF,0x7F,0xFF,0x0E,
+0x03,0x11,0xFF,0x00,0xF6,0x00,0x04,0x11,0xFF,0x0F,0x72,0x07,0x05,0x11,0xFF,0x0F,
+0x72,0x07,0x06,0x11,0xFF,0x00,0x00,0x00,0x07,0x11,0x03,0x00,0x00,0x00,0x08,0x11,
+0x73,0x00,0x00,0x00,0x09,0x11,0xFF,0xFF,0x00,0x00,0x09,0x11,0xFF,0x7F,0x00,0x00,
+0x0A,0x11,0xFF,0x7F,0x87,0x10,0x0E,0x11,0xFF,0xFF,0x00,0x00,0x0F,0x11,0xFF,0xFF,
+0x00,0x00,0x17,0x11,0x0F,0xFF,0x00,0x00,0x18,0x11,0xFF,0xFF,0x00,0x02,0x19,0x11,
+0xFF,0x00,0x0E,0x00,0x1E,0x11,0xFF,0xFF,0x00,0x00,0x1F,0x11,0xFF,0x00,0x00,0x00,
+0x33,0x11,0x0F,0x00,0x00,0x00,0x3A,0x11,0x37,0x0F,0x00,0x00,0x3B,0x11,0x77,0x00,
+0x77,0x00,0x3C,0x11,0x00,0xFF,0x00,0xA0,0x3D,0x11,0x77,0x00,0x00,0x00,0x3E,0x11,
+0xFF,0x00,0x00,0x00,0x04,0x12,0x06,0x00,0x00,0x00,0x05,0x12,0xFF,0x00,0x00,0x00,
+0x07,0x12,0xFF,0xFF,0x00,0x00,0x08,0x12,0xFF,0x00,0x00,0x00,0x09,0x12,0xFF,0xFF,
+0x00,0x00,0x0A,0x12,0xFF,0x00,0x00,0x00,0x0B,0x12,0x3F,0x00,0x2E,0x00,0x0D,0x12,
+0x1F,0x00,0x05,0x00,0x0E,0x12,0x1F,0x00,0x05,0x00,0x0F,0x12,0xFF,0xFF,0x00,0x00,
+0x10,0x12,0xFF,0x00,0x00,0x00,0x11,0x12,0xFF,0x0F,0x00,0x00,0x12,0x12,0x87,0x1F,
+0x00,0x00,0x13,0x12,0x7F,0x0F,0x14,0x00,0x14,0x12,0x9F,0xFF,0x0A,0x09,0x15,0x12,
+0x7F,0x0F,0x0C,0x00,0x16,0x12,0xFF,0x0F,0x00,0x07,0x17,0x12,0x1F,0xFF,0x0A,0x5C,
+0x18,0x12,0x7F,0x1F,0x14,0x0A,0x19,0x12,0xFF,0xFF,0x8C,0x21,0x1A,0x12,0xFF,0x03,
+0x00,0x00,0x1B,0x12,0xFF,0x03,0x00,0x00,0x1C,0x12,0xFF,0x03,0x00,0x00,0x1D,0x12,
+0xFF,0x03,0x00,0x00,0x1E,0x12,0x1F,0x1F,0x12,0x07,0x1F,0x12,0x3F,0x3F,0x00,0x00,
+0x20,0x12,0xFF,0xFF,0x00,0x00,0x21,0x12,0xFF,0x00,0x00,0x00,0x23,0x12,0x3F,0x3F,
+0x02,0x00,0x24,0x12,0x3F,0x00,0x00,0x00,0x28,0x12,0xFF,0xFF,0x83,0x81,0x2D,0x12,
+0x01,0x00,0x01,0x00,0x50,0x12,0xFF,0xFF,0x00,0x00,0x51,0x12,0xFF,0x00,0x00,0x00,
+0x70,0x12,0x03,0x00,0x03,0x00,0x01,0x11,0x06,0x00,0x02,0x00,0x02,0x11,0x00,0x08,
+0x00,0x08,0x2A,0x12,0x00,0xFF,0x00,0xBA,0x2B,0x12,0xFF,0x30,0xF0,0x20,0x01,0x11,
+0x06,0x00,0x00,0x00,0x2A,0x12,0x00,0xFF,0x00,0x00,0x2B,0x12,0xFF,0x30,0x00,0x00,
+0x01,0x11,0x00,0x50,0x00,0x50,0x02,0x11,0x3F,0x06,0x2F,0x06,0x01,0x11,0x00,0x50,
+0x00,0x00,0x02,0x11,0x3F,0x06,0x00,0x00,0x2A,0x12,0x00,0x30,0x00,0x20,0x11,0x1E,
+0xFF,0x7F,0x00,0x00,0x12,0x1E,0xFF,0x00,0x00,0x00,0x13,0x1E,0x0F,0x00,0x00,0x00,
+0x15,0x1E,0x73,0x07,0x00,0x00,0x16,0x1E,0x0F,0x00,0x00,0x00,0x18,0x1E,0x3F,0x00,
+0x08,0x00,0x2A,0x1E,0x05,0x00,0x01,0x00,0x50,0x11,0x11,0x11,0x51,0x11,0x11,0x11,
+0x52,0x11,0x11,0x11,0x53,0x11,0x11,0x11,0x54,0x11,0x11,0x11,0x55,0x11,0x11,0x11,
+0x56,0x11,0x11,0x11,0x57,0x11,0x11,0x11,0x58,0x11,0x11,0x11,0x59,0x11,0x11,0x11,
+0x5A,0x11,0x11,0x11,0x5B,0x11,0x11,0x11,0x5C,0x11,0xFF,0xFF,0x5D,0x11,0xFF,0xFF,
+0x5E,0x11,0xFF,0xFF,0x46,0x12,0x00,0x00,0x47,0x12,0x00,0x00,0x48,0x12,0x00,0x00,
+0x49,0x12,0x00,0x00,0x4A,0x12,0x00,0x00,0x4B,0x12,0x00,0x00,0x4C,0x12,0x00,0x00,
+0x4D,0x12,0x00,0x00,0x4E,0x12,0x0F,0x00,0xDA,0x07,0x80,0x00,0xB4,0x0A,0x80,0x00,
+0x3E,0x01,0x80,0x00,0x0F,0x00,0x52,0x00,0x69,0x00,0xD9,0x00,0xD0,0x00,0xC0,0x00,
+0xB0,0x00,0xA0,0x00,0x90,0x00,0x80,0x00,0x70,0x00,0x60,0x00,0x50,0x00,0x40,0x00,
+0x30,0x00,0x20,0x00,0x10,0x00,0x00,0x00,0x05,0x04,0x03,0x03,0x04,0x00,0xFF,0x00,
+0x6C,0x05,0x16,0x00,0xFE,0x00,0x08,0x09,0x3A,0x00,0xFD,0x00,0xB6,0x14,0x61,0x00,
+0xFB,0x00,0x32,0x1D,0x82,0x00,0xFB,0x00,0x54,0x20,0xAB,0x00,0xF9,0x00,0x22,0x26,
+0xDF,0x00,0xF7,0x00,0xA8,0x31,0x0E,0x01,0xF6,0x00,0x34,0x38,0x39,0x01,0xFF,0x00,
+0x3D,0x09,0x07,0x00,0xFE,0x00,0x04,0x0C,0x1F,0x00,0xFD,0x00,0xD2,0x13,0x38,0x00,
+0xFD,0x00,0xF6,0x18,0x4E,0x00,0xFC,0x00,0x85,0x1B,0x66,0x00,0xFB,0x00,0xB9,0x20,
+0x82,0x00,0xFA,0x00,0x83,0x29,0x98,0x00,0xF9,0x00,0xEE,0x2D,0xAB,0x00,0xF9,0x00,
+0x38,0x2E,0xCA,0x00,0xF7,0x00,0xBD,0x32,0xF7,0x00,0xFE,0x00,0x7A,0x0F,0x01,0x00,
+0xFE,0x00,0x94,0x10,0x0E,0x00,0xFE,0x00,0x7E,0x12,0x26,0x00,0xFD,0x00,0x69,0x17,
+0x41,0x00,0xFC,0x00,0xC0,0x1E,0x53,0x00,0xFB,0x00,0xCE,0x22,0x60,0x00,0xFB,0x00,
+0x16,0x25,0x71,0x00,0xFA,0x00,0xE2,0x28,0x8A,0x00,0xF9,0x00,0x45,0x31,0x9E,0x00,
+0xF8,0x00,0x25,0x35,0xB0,0x00,0xF8,0x00,0xD9,0x35,0xCD,0x00,0xFE,0x00,0x47,0x11,
+0xF6,0xFF,0xFE,0x00,0x57,0x12,0x09,0x00,0xFD,0x00,0x97,0x17,0x1C,0x00,0xFD,0x00,
+0x8E,0x1B,0x2B,0x00,0xFC,0x00,0xB2,0x1D,0x3C,0x00,0xFC,0x00,0x8B,0x21,0x4F,0x00,
+0xFB,0x00,0x64,0x28,0x5B,0x00,0xFA,0x00,0xA0,0x2C,0x64,0x00,0xFA,0x00,0xBD,0x2D,
+0x74,0x00,0xF9,0x00,0xFA,0x30,0x8C,0x00,0xF8,0x00,0x68,0x38,0xA0,0x00,0xF7,0x00,
+0x82,0x3C,0xB1,0x00,0xFD,0x00,0x27,0x1B,0xE1,0xFF,0xFD,0x00,0x72,0x1B,0xF2,0xFF,
+0xFC,0x00,0x40,0x1F,0x02,0x00,0xFC,0x00,0x6B,0x22,0x0F,0x00,0xFC,0x00,0x3F,0x24,
+0x1C,0x00,0xFB,0x00,0x84,0x27,0x2A,0x00,0xFA,0x00,0x87,0x2D,0x31,0x00,0xFA,0x00,
+0xEC,0x30,0x36,0x00,0xFA,0x00,0xC4,0x31,0x41,0x00,0xF9,0x00,0xE9,0x33,0x51,0x00,
+0xF8,0x00,0xC4,0x39,0x5B,0x00,0xF8,0x00,0x86,0x3C,0x63,0x00,0xF8,0x00,0x08,0x3C,
+0x73,0x00,0xF7,0x00,0x71,0x3D,0x8C,0x00,0x15,0x00,0xD5,0x0B,0xC3,0xFF,0x13,0x01,
+0x0D,0x00,0x23,0x00,0xE6,0x03,0x09,0x00,0x2F,0x00,0x15,0x00,0x61,0x00,0x47,0x03,
+0x14,0x00,0x05,0x00,0x19,0x00,0xF4,0x00,0xB7,0x07,0x0E,0xFF,0x02,0x00,0x19,0x00,
+0x21,0x01,0x0E,0x03,0x5C,0x00,0x00,0x00,0x1A,0x00,0x1B,0x00,0x89,0x05,0xDD,0xFF,
+0x7F,0x00,0x15,0x00,0x44,0x00,0x31,0x04,0xF3,0xFF,0x33,0x00,0x1A,0x00,0x90,0x00,
+0x51,0x04,0xEA,0xFF,0x05,0x00,0x20,0x00,0x11,0x01,0xCD,0x03,0x15,0x00,0x01,0x00,
+0x21,0x00,0x22,0x00,0x02,0x05,0xD7,0xFF,0x6D,0x00,0x17,0x00,0x69,0x00,0x80,0x04,
+0xE5,0xFF,0x24,0x00,0x1F,0x00,0xB1,0x00,0x23,0x04,0xF5,0xFF,0x02,0x00,0x24,0x00,
+0x2B,0x00,0x53,0x05,0xC6,0xFF,0x6E,0x00,0x19,0x00,0x89,0x00,0xA5,0x04,0xDF,0xFF,
+0x11,0x00,0x25,0x00,0xE1,0x00,0xF5,0x03,0x02,0x00,0x01,0x00,0x28,0x00,0x42,0x00,
+0x80,0x06,0x92,0xFF,0x89,0x00,0x1A,0x00,0x9F,0x00,0xC8,0x04,0xDD,0xFF,0x15,0x00,
+0x2C,0x00,0xE9,0x00,0x3A,0x03,0x31,0x00,0x02,0x00,0x30,0x00,0x4F,0x01,0xF4,0x04,
+0xA5,0xFF,0x01,0x00,0x30,0x00,0x00,0x00,0xC8,0x54,0x00,0x00,0xC8,0x54,0x00,0x00,
+0xDD,0x54,0x00,0x00,0xDD,0x54,0x00,0x00,0xA1,0x56,0x00,0x00,0xA1,0x56,0x00,0x00,
+0xA1,0x56,0x00,0x00,0x63,0x55,0x00,0x00,0x3D,0x56,0x00,0x00,0xC0,0x55,0x00,0x00,
+0xDC,0x56,0x00,0x00,0xDC,0x56,0x00,0x00,0x64,0x58,0x00,0x00,0x64,0x58,0x00,0x00,
+0x64,0x58,0x00,0x00,0x64,0x58,0x00,0x00,0x64,0x58,0x00,0x00,0x8B,0x57,0x00,0x00,
+0x2F,0x58,0x00,0x00,0xE4,0x57,0x00,0x00,0xB2,0x58,0x00,0x00,0xB2,0x58,0x00,0x00,
+0xD3,0x58,0x00,0x00,0xA8,0x58,0x00,0x00,0xFB,0x58,0x00,0x00,0x38,0x59,0x00,0x00,
+0x14,0x59,0x00,0x00,0x6C,0x5C,0x00,0x00,0x87,0x5C,0x00,0x00,0x91,0x5C,0x00,0x00,
+0xA5,0x5C,0x00,0x00,0xA1,0x5C,0x00,0x00,0xA1,0x5C,0x00,0x00,0xA5,0x5C,0x00,0x00,
+0xA1,0x5C,0x00,0x00,0x00,0x01,0x2F,0x08,0x07,0x0E,0x0D,0x06,0x05,0x0C,0x0B,0x04,
+0x02,0x2D,0x2C,0x23,0x20,0x1F,0x1E,0x1D,0x1C,0x0F,0x15,0x09,0x0A,0x16,0x17,0x24,
+0x25,0x18,0x19,0x1A,0x1B,0x26,0x27,0x28,0x29,0x2A,0x2B,0x00,0x64,0x6A,0x00,0x00,
+0x64,0x6A,0x00,0x00,0x95,0x6A,0x00,0x00,0x95,0x6A,0x00,0x00,0xC7,0x6A,0x00,0x00,
+0xC7,0x6A,0x00,0x00,0xC7,0x6A,0x00,0x00,0xC7,0x6A,0x00,0x00,0x43,0x6A,0x00,0x00,
+0x22,0x6A,0x00,0x00,0x28,0x6B,0x00,0x00,0x28,0x6B,0x00,0x00,0x5B,0x6B,0x00,0x00,
+0x5B,0x6B,0x00,0x00,0x90,0x6B,0x00,0x00,0x90,0x6B,0x00,0x00,0x90,0x6B,0x00,0x00,
+0x90,0x6B,0x00,0x00,0x01,0x6B,0x00,0x00,0xEF,0x6A,0x00,0x00,0x48,0x6C,0x00,0x00,
+0x48,0x6C,0x00,0x00,0x9C,0x6C,0x00,0x00,0x9C,0x6C,0x00,0x00,0x0F,0x6E,0x00,0x00,
+0x0F,0x6E,0x00,0x00,0x0F,0x6E,0x00,0x00,0x0F,0x6E,0x00,0x00,0xF7,0x6C,0x00,0x00,
+0x3D,0x6D,0x00,0x00,0x83,0x6D,0x00,0x00,0xCB,0x6D,0x00,0x00,0x72,0x87,0x00,0x00,
+0x72,0x87,0x00,0x00,0xAD,0x87,0x00,0x00,0xAD,0x87,0x00,0x00,0xA2,0x88,0x00,0x00,
+0xA2,0x88,0x00,0x00,0xA2,0x88,0x00,0x00,0xA2,0x88,0x00,0x00,0xEA,0x87,0x00,0x00,
+0x12,0x88,0x00,0x00,0x46,0x88,0x00,0x00,0x76,0x88,0x00,0x00,0x27,0x8B,0x00,0x00,
+0x79,0x8B,0x00,0x00,0xD1,0x8B,0x00,0x00,0xA9,0x8C,0x00,0x00,0x2D,0x8C,0x00,0x00,
+0x5D,0x8C,0x00,0x00,0xA9,0x8C,0x00,0x00,0x65,0x8C,0x00,0x00,0x04,0x00,0x1D,0x00,
+0x2E,0x00,0x50,0x00,0x82,0x00,0xC7,0x00,0x23,0x01,0x9B,0x01,0x32,0x02,0xEE,0x02,
+0xD0,0x03,0xDE,0x04,0x19,0x06,0x82,0x07,0x1A,0x09,0xE0,0x0A,0xD0,0x0C,0xE7,0x0E,
+0x1F,0x11,0x71,0x13,0xD3,0x15,0x3D,0x18,0xA2,0x1A,0xF9,0x1C,0x34,0x1F,0x47,0x21,
+0x28,0x23,0xCB,0x24,0x27,0x26,0x33,0x27,0xEA,0x27,0x46,0x28,0x04,0x00,0x1C,0x00,
+0x2B,0x00,0x4B,0x00,0x78,0x00,0xB7,0x00,0x0A,0x01,0x75,0x01,0xFC,0x01,0xA3,0x02,
+0x6D,0x03,0x5E,0x04,0x76,0x05,0xB9,0x06,0x26,0x08,0xBE,0x09,0x7D,0x0B,0x61,0x0D,
+0x67,0x0F,0x87,0x11,0xBB,0x13,0xFC,0x15,0x3F,0x18,0x7B,0x1A,0xA6,0x1C,0xB6,0x1E,
+0x9F,0x20,0x57,0x22,0xD7,0x23,0x14,0x25,0x08,0x26,0xAF,0x26,0x03,0x27,0x05,0x00,
+0x08,0x21,0x05,0x00,0x00,0x20,0x00,0x00,0x84,0xBC,0x00,0xC0,0x94,0xBC,0x00,0xC0,
+0xA6,0xBC,0x00,0xC0,0xAA,0xBC,0x00,0xC0,0x1C,0xBC,0x00,0xC0,0x64,0xBC,0x00,0xC0,
+0xC4,0xBC,0x00,0xC0,0xE2,0xBC,0x00,0xC0,0xE6,0xBC,0x00,0xC0,0x0C,0xBD,0x00,0xC0,
+0x9A,0xBD,0x00,0xC0,0xDC,0xBD,0x00,0xC0,0x3E,0xBB,0x00,0xC0,0x42,0xBB,0x00,0xC0,
+0x18,0xBC,0x00,0xC0,0x60,0xBC,0x00,0xC0,0x05,0x00,0x2A,0x00,0x2A,0x00,0x3E,0x00,
+0x58,0x00,0x79,0x00,0xA1,0x00,0xD3,0x00,0x0F,0x01,0x56,0x01,0xAA,0x01,0x0C,0x02,
+0x7D,0x02,0xFE,0x02,0x91,0x03,0x37,0x04,0xF0,0x04,0xBE,0x05,0xA0,0x06,0x99,0x07,
+0xA7,0x08,0xCC,0x09,0x06,0x0B,0x56,0x0C,0xBB,0x0D,0x34,0x0F,0xC0,0x10,0x5D,0x12,
+0x0A,0x14,0xC5,0x15,0x8A,0x17,0x59,0x19,0x2D,0x1B,0x05,0x1D,0xDC,0x1E,0xB0,0x20,
+0x7D,0x22,0x40,0x24,0xF5,0x25,0x98,0x27,0x27,0x29,0x9E,0x2A,0xF9,0x2B,0x37,0x2D,
+0x53,0x2E,0x4B,0x2F,0x1E,0x30,0xC9,0x30,0x4A,0x31,0xA1,0x31,0xCD,0x31,0x04,0x00,
+0x2D,0x00,0x6D,0x00,0xE7,0x00,0xAD,0x01,0xD8,0x02,0x81,0x04,0xBE,0x06,0xA0,0x09,
+0x30,0x0D,0x6D,0x11,0x47,0x16,0xA3,0x1B,0x56,0x21,0x29,0x27,0xDC,0x2C,0x2A,0x32,
+0xCF,0x36,0x8B,0x3A,0x29,0x3D,0x81,0x3E,0x06,0x00,0xF5,0x28,0x03,0x00,0x33,0x33,
+0x68,0xBC,0x00,0xC0,0x7E,0xBC,0x00,0xC0,0x10,0xBD,0x00,0xC0,0x9E,0xBD,0x00,0xC0,
+0x88,0xBC,0x00,0xC0,0x98,0xBC,0x00,0xC0,0x6C,0xBC,0x00,0xC0,0xAE,0xBC,0x00,0xC0,
+0xC8,0xBC,0x00,0xC0,0xEA,0xBC,0x00,0xC0,0xEE,0xBB,0x00,0xC0,0xA8,0xBD,0x00,0xC0,
+0xBC,0xBA,0x00,0xC0,0xFC,0xBA,0x00,0xC0,0x88,0xBB,0x00,0xC0,0x18,0xBD,0x00,0xC0,
+0x06,0x00,0x00,0x20,0x03,0x00,0xAA,0x2A,0x00,0x00,0x00,0x20,0x02,0x00,0x45,0x00,
+0x5D,0x01,0x1B,0x04,0x31,0x09,0xA2,0x10,0x55,0x19,0x32,0x21,0xE5,0x25,0x01,0x00,
+0x10,0x10,0xEF,0x2F,0x00,0x00,0x00,0x20,0x02,0x00,0x49,0x01,0x6C,0x07,0xB1,0x15,
+0x60,0x29,0x38,0x38,0x01,0x00,0x00,0x20,0x02,0x00,0xAC,0x00,0xCB,0x03,0x95,0x0B,
+0x6B,0x18,0xE0,0x26,0xA6,0x30,0x02,0x00,0xAA,0x2A,0x02,0x00,0x00,0x20,0x03,0x00,
+0x4D,0x00,0x51,0x01,0xBD,0x03,0x48,0x08,0x6B,0x0F,0x0D,0x19,0x47,0x24,0x73,0x2F,
+0x86,0x38,0x9F,0x3D,0x03,0x00,0x00,0x20,0x03,0x00,0x33,0x00,0xC4,0x00,0x08,0x02,
+0x5B,0x04,0x11,0x08,0x55,0x0D,0x0D,0x14,0xCC,0x1B,0xCF,0x23,0x1E,0x2B,0xB5,0x30,
+0xBD,0x33,0x04,0x00,0x33,0x33,0x04,0x00,0xAA,0x2A,0x03,0x00,0x1F,0x00,0x5B,0x00,
+0xD6,0x00,0xAB,0x01,0xF6,0x02,0xD5,0x04,0x59,0x07,0x87,0x0A,0x52,0x0E,0x96,0x12,
+0x1C,0x17,0x9B,0x1B,0xC0,0x1F,0x37,0x23,0xB6,0x25,0x05,0x27,0x04,0x00,0x00,0x20,
+0x01,0x00,0x65,0x04,0x5D,0x14,0x3D,0x27,0x05,0x00,0x26,0x00,0x1D,0x00,0x28,0x00,
+0x36,0x00,0x47,0x00,0x5A,0x00,0x72,0x00,0x8D,0x00,0xAE,0x00,0xD3,0x00,0xFD,0x00,
+0x2D,0x01,0x64,0x01,0xA2,0x01,0xE6,0x01,0x33,0x02,0x87,0x02,0xE5,0x02,0x4B,0x03,
+0xBA,0x03,0x33,0x04,0xB6,0x04,0x43,0x05,0xDB,0x05,0x7C,0x06,0x29,0x07,0xDF,0x07,
+0xA1,0x08,0x6C,0x09,0x41,0x0A,0x21,0x0B,0x09,0x0C,0xFA,0x0C,0xF4,0x0D,0xF5,0x0E,
+0xFE,0x0F,0x0C,0x11,0x20,0x12,0x38,0x13,0x53,0x14,0x71,0x15,0x90,0x16,0xAF,0x17,
+0xCD,0x18,0xE8,0x19,0x00,0x1B,0x12,0x1C,0x1E,0x1D,0x23,0x1E,0x1F,0x1F,0x10,0x20,
+0xF7,0x20,0xD0,0x21,0x9C,0x22,0x59,0x23,0x07,0x24,0xA3,0x24,0x2E,0x25,0xA7,0x25,
+0x0C,0x26,0x5E,0x26,0x9C,0x26,0xC6,0x26,0xDA,0x26,0x05,0x00,0x33,0x33,0x01,0x00,
+0x7E,0x01,0x41,0x08,0x4A,0x15,0xF4,0x20,0x04,0x00,0x23,0x00,0x45,0x00,0x84,0x00,
+0xE4,0x00,0x6F,0x01,0x2F,0x02,0x2F,0x03,0x76,0x04,0x0F,0x06,0xFD,0x07,0x45,0x0A,
+0xE6,0x0C,0xDA,0x0F,0x19,0x13,0x93,0x16,0x37,0x1A,0xEF,0x1D,0xA0,0x21,0x2F,0x25,
+0x80,0x28,0x77,0x2B,0xFA,0x2D,0xF2,0x2F,0x4D,0x31,0xFD,0x31,0x05,0x00,0xF5,0x28,
+0x76,0x9D,0x00,0x00,0x92,0x9D,0x00,0x00,0xB1,0x9D,0x00,0x00,0xD0,0x9D,0x00,0x00,
+0xDF,0x9D,0x00,0x00,0x44,0x54,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x01,0x02,0x42,
+0x42,0x4D,0x44,0x4C,0x02,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x1A,0x6D,0x8F,0x16,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x04,0x00,
+0x00,0x00,0x56,0x30,0x31,0x2E,0x30,0x30,0x37,0x2E,0x30,0x36,0x5C,0x69,0xDA,0x8B
Index: kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_platform_interface.c
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_platform_interface.c	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_platform_interface.c	(revision 182225)
@@ -0,0 +1,211 @@
+////////////////////////////////////////////////////////////////////////////////
+//
+// Copyright (c) 2006-2012 MStar Semiconductor, Inc.
+// All rights reserved.
+//
+// Unless otherwise stipulated in writing, any and all information contained
+// herein regardless in any format shall remain the sole proprietary of
+// MStar Semiconductor Inc. and be kept in strict confidence
+// (??MStar Confidential Information??) by the recipient.
+// Any unauthorized act including without limitation unauthorized disclosure,
+// copying, use, reproduction, sale, distribution, modification, disassembling,
+// reverse engineering and compiling of the contents of MStar Confidential
+// Information is unlawful and strictly prohibited. MStar hereby reserves the
+// rights to any and all damages, losses, costs and expenses resulting therefrom.
+//
+////////////////////////////////////////////////////////////////////////////////
+
+/**
+ *
+ * @file    mstar_drv_platform_interface.c
+ *
+ * @brief   This file defines the interface of touch screen
+ *
+ * @version v2.2.0.0
+ *
+ */
+
+/*=============================================================*/
+// INCLUDE FILE
+/*=============================================================*/
+
+#include "mstar_drv_platform_interface.h"
+#include "mstar_drv_main.h"
+#include "mstar_drv_ic_fw_porting_layer.h"
+#include "mstar_drv_platform_porting_layer.h"
+
+/*=============================================================*/
+// EXTERN VARIABLE DECLARATION
+/*=============================================================*/
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+extern u16 g_GestureWakeupMode;
+extern u8 g_GestureWakeupFlag;
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+
+/*=============================================================*/
+// GLOBAL VARIABLE DEFINITION
+/*=============================================================*/
+
+extern struct input_dev *g_InputDevice;
+
+/*=============================================================*/
+// GLOBAL FUNCTION DEFINITION
+/*=============================================================*/
+
+void MsDrvInterfaceTouchDeviceSuspend(struct early_suspend *pSuspend)
+{
+    DBG("*** %s() ***\n", __func__);
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+//    g_GestureWakeupMode = 0x1FFF; // Enable all gesture wakeup mode for testing 
+
+    if (g_GestureWakeupMode != 0x0000)
+    {
+        DrvIcFwLyrOpenGestureWakeup(g_GestureWakeupMode);
+        return;
+    }
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+
+    DrvPlatformLyrFingerTouchReleased(0, 0); // Send touch end for clearing point touch
+    input_sync(g_InputDevice);
+
+    DrvPlatformLyrDisableFingerTouchReport();
+    DrvPlatformLyrTouchDevicePowerOff(); 
+}
+
+void MsDrvInterfaceTouchDeviceResume(struct early_suspend *pSuspend)
+{
+    DBG("*** %s() ***\n", __func__);
+
+#ifdef CONFIG_ENABLE_GESTURE_WAKEUP
+    if (g_GestureWakeupFlag == 1)
+    {
+        DrvIcFwLyrCloseGestureWakeup();
+    }
+    else
+    {
+        DrvPlatformLyrEnableFingerTouchReport(); 
+    }
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+    
+    DrvPlatformLyrTouchDevicePowerOn();
+/*
+    DrvPlatformLyrFingerTouchReleased(0, 0);
+    input_sync(g_InputDevice);
+*/    
+#ifdef CONFIG_ENABLE_FIRMWARE_DATA_LOG
+    DrvIcFwLyrRestoreFirmwareModeToLogDataMode();
+#endif //CONFIG_ENABLE_FIRMWARE_DATA_LOG
+
+#ifndef CONFIG_ENABLE_GESTURE_WAKEUP
+    DrvPlatformLyrEnableFingerTouchReport(); 
+#endif //CONFIG_ENABLE_GESTURE_WAKEUP
+}
+
+#ifdef TOUCH_VIRTUAL_KEYS
+/*static ssize_t virtual_keys_show(struct kobject *kobj, struct kobj_attribute *attr, char *buf)
+{
+	return sprintf(buf,
+		__stringify(EV_KEY) ":" __stringify(KEY_HOMEPAGE) ":192:1000:64:60"
+		":" __stringify(EV_KEY) ":" __stringify(KEY_MENU) ":256:1000:64:60"
+		":" __stringify(EV_KEY) ":" __stringify(KEY_BACK) ":128:1000:64:60"
+		":" __stringify(EV_KEY) ":" __stringify(KEY_SEARCH) ":64:1000:64:60"
+		"\n");
+}*/
+static ssize_t virtual_keys_show(struct kobject *kobj, struct kobj_attribute *attr, char *buf)
+{
+	struct msg2138_ts_platform_data *pdata = g_I2cClient->dev.platform_data;
+	return sprintf(buf,"%s:%s:%d:%d:%d:%d:%s:%s:%d:%d:%d:%d:%s:%s:%d:%d:%d:%d\n"
+		,__stringify(EV_KEY), __stringify(KEY_MENU),pdata ->virtualkeys[0],pdata ->virtualkeys[1],pdata ->virtualkeys[2],pdata ->virtualkeys[3]
+		,__stringify(EV_KEY), __stringify(KEY_HOMEPAGE),pdata ->virtualkeys[4],pdata ->virtualkeys[5],pdata ->virtualkeys[6],pdata ->virtualkeys[7]
+		,__stringify(EV_KEY), __stringify(KEY_BACK),pdata ->virtualkeys[8],pdata ->virtualkeys[9],pdata ->virtualkeys[10],pdata ->virtualkeys[11]);
+}
+
+static struct kobj_attribute virtual_keys_attr = {
+    .attr = {
+        .name = "virtualkeys.msg2138_ts",
+        .mode = S_IRUGO,
+    },
+    .show = &virtual_keys_show,
+};
+
+static struct attribute *properties_attrs[] = {
+    &virtual_keys_attr.attr,
+    NULL
+};
+
+static struct attribute_group properties_attr_group = {
+    .attrs = properties_attrs,
+};
+
+static void pixcir_ts_virtual_keys_init(void)
+{
+    int ret;
+    struct kobject *properties_kobj;
+
+    properties_kobj = kobject_create_and_add("board_properties", NULL);
+    if (properties_kobj)
+        ret = sysfs_create_group(properties_kobj,
+                     &properties_attr_group);
+    if (!properties_kobj || ret)
+        pr_err("failed to create board_properties\n");
+}
+#endif
+
+/* probe function is used for matching and initializing input device */
+s32 /*__devinit*/ MsDrvInterfaceTouchDeviceProbe(struct i2c_client *pClient, const struct i2c_device_id *pDeviceId)
+{
+    s32 nRetVal = 0;
+
+    DBG("*** %s() ***\n", __func__);
+
+    DrvPlatformLyrInputDeviceInitialize(pClient);
+
+#if 0
+    nRetVal = DrvPlatformLyrTouchDeviceRequestGPIO();
+    if(nRetVal < 0) {
+        pr_err("[Mstar] DrvPlatformLyrTouchDeviceRequestGPIO failed %d\n",nRetVal);
+        return nRetVal;
+    }
+#endif
+
+#ifdef CONFIG_ENABLE_REGULATOR_POWER_ON
+    DrvPlatformLyrTouchDeviceRegulatorPowerOn();
+#endif //CONFIG_ENABLE_REGULATOR_POWER_ON
+
+    DrvPlatformLyrTouchDevicePowerOn();
+
+    nRetVal = DrvMainTouchDeviceInitialize();
+    if(nRetVal < 0) {
+        pr_err("[Mstar] DrvMainTouchDeviceInitialize failed %d\n",nRetVal);
+        return nRetVal;
+    }
+
+#ifdef TOUCH_VIRTUAL_KEYS
+    pixcir_ts_virtual_keys_init();
+#endif
+
+    DrvPlatformLyrTouchDeviceRegisterFingerTouchInterruptHandler();
+
+    DrvPlatformLyrTouchDeviceRegisterEarlySuspend();
+
+    printk("*** MStar touch driver registered ***\n");
+
+    return nRetVal;
+}
+
+/* remove function is triggered when the input device is removed from input sub-system */
+s32 /*__devexit*/ MsDrvInterfaceTouchDeviceRemove(struct i2c_client *pClient)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    return DrvPlatformLyrTouchDeviceRemove(pClient);
+}
+
+void MsDrvInterfaceTouchDeviceSetIicDataRate(struct i2c_client *pClient, u32 nIicDataRate)
+{
+    DBG("*** %s() ***\n", __func__);
+
+    DrvPlatformLyrSetIicDataRate(pClient, nIicDataRate);
+}    
Index: kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_sprd.c
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_sprd.c	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_sprd.c	(revision 182225)
@@ -0,0 +1,251 @@
+////////////////////////////////////////////////////////////////////////////////
+//
+// Copyright (c) 2006-2012 MStar Semiconductor, Inc.
+// All rights reserved.
+//
+// Unless otherwise stipulated in writing, any and all information contained
+// herein regardless in any format shall remain the sole proprietary of
+// MStar Semiconductor Inc. and be kept in strict confidence
+// (??MStar Confidential Information??) by the recipient.
+// Any unauthorized act including without limitation unauthorized disclosure,
+// copying, use, reproduction, sale, distribution, modification, disassembling,
+// reverse engineering and compiling of the contents of MStar Confidential
+// Information is unlawful and strictly prohibited. MStar hereby reserves the
+// rights to any and all damages, losses, costs and expenses resulting therefrom.
+//
+////////////////////////////////////////////////////////////////////////////////
+
+/**
+ *
+ * @file    mstar_drv_sprd.c
+ *
+ * @brief   This file defines the interface of touch screen
+ *
+ * @version v2.2.0.0
+ *
+ */
+
+/*=============================================================*/
+// INCLUDE FILE
+/*=============================================================*/
+
+#include <linux/module.h>
+#include <linux/init.h>
+#include <linux/interrupt.h>
+#include <linux/types.h>
+#include <linux/input.h>
+#include <linux/kernel.h>
+#include <linux/delay.h>
+#include <linux/platform_device.h>
+#include <linux/slab.h>
+#include <linux/gpio.h>
+#include <linux/earlysuspend.h>
+#include <linux/i2c.h>
+#include <linux/kobject.h>
+#include <asm/irq.h>
+#include <asm/io.h>
+
+#include "mstar_drv_platform_interface.h"
+
+#ifdef CONFIG_ENABLE_REGULATOR_POWER_ON
+#include <soc/sprd/regulator.h>
+#include <linux/regulator/consumer.h>
+#endif //CONFIG_ENABLE_REGULATOR_POWER_ON
+
+#include <linux/of_device.h>
+#include <linux/of_address.h>
+#include <linux/of_gpio.h>
+
+/*=============================================================*/
+// CONSTANT VALUE DEFINITION
+/*=============================================================*/
+//#define MSG_TP_IC_NAME "pixcir_ts" //"msg21xxA" or "msg22xx" or "msg26xxM" /* Please define the mstar touch ic name based on the mutual-capacitive ic or self capacitive ic that you are using */
+/*=============================================================*/
+// VARIABLE DEFINITION
+/*=============================================================*/
+
+struct i2c_client *g_I2cClient = NULL;
+int TOUCH_SCREEN_X_MAX = 0;
+int TOUCH_SCREEN_Y_MAX = 0;
+int MS_TS_MSG_IC_GPIO_RST = 0;
+int MS_TS_MSG_IC_GPIO_INT = 0;
+
+#ifdef CONFIG_ENABLE_REGULATOR_POWER_ON
+struct regulator *g_ReguVdd = NULL;
+#endif //CONFIG_ENABLE_REGULATOR_POWER_ON
+
+extern u8 DrvFwCtrlGetChipType(void);
+extern s32 DrvPlatformLyrTouchDeviceRequestGPIO(void);
+
+#ifdef CONFIG_OF
+static struct msg2138_ts_platform_data *pixcir_ts_parse_dt(struct device *dev)
+{
+	struct msg2138_ts_platform_data *pdata = NULL;
+	struct device_node *np = dev->of_node;
+	int ret;
+
+	pdata = kzalloc(sizeof(*pdata), GFP_KERNEL);
+	if (!pdata) {
+		dev_err(dev, "Could not allocate struct msg2138_ts_platform_data");
+		return NULL;
+	}
+	pdata->reset_gpio_number = of_get_gpio(np, 0);
+	if(pdata->reset_gpio_number < 0){
+		dev_err(dev, "fail to get reset_gpio_number\n");
+		goto fail;
+	}
+	pdata->irq_gpio_number = of_get_gpio(np, 1);
+	if(pdata->irq_gpio_number < 0){
+		dev_err(dev, "fail to get irq_gpio_number\n");
+		goto fail;
+	}
+	ret = of_property_read_string(np, "vdd_name", &pdata->vdd_name);
+	if(ret){
+		dev_err(dev, "fail to get vdd_name\n");
+		goto fail;
+	}
+	ret = of_property_read_u32_array(np, "virtualkeys", &pdata->virtualkeys,12);
+	if(ret){
+		dev_err(dev, "fail to get virtualkeys\n");
+		goto fail;
+	}
+	ret = of_property_read_u32(np, "TP_MAX_X", &pdata->TP_MAX_X);
+	if(ret){
+		dev_err(dev, "fail to get TP_MAX_X\n");
+		goto fail;
+	}
+	ret = of_property_read_u32(np, "TP_MAX_Y", &pdata->TP_MAX_Y);
+	if(ret){
+		dev_err(dev, "fail to get TP_MAX_Y\n");
+		goto fail;
+	}
+
+	return pdata;
+fail:
+	kfree(pdata);
+	return NULL;
+}
+#endif
+
+/*=============================================================*/
+// FUNCTION DEFINITION
+/*=============================================================*/
+
+/* probe function is used for matching and initializing input device */
+static int /*__devinit*/ touch_driver_probe(struct i2c_client *client,
+        const struct i2c_device_id *id)
+{
+    struct msg2138_ts_platform_data *pdata;
+    int err = 0, i = 0;
+
+    DBG("*** %s ***\n", __FUNCTION__);
+
+    if (client == NULL)
+    {
+        DBG("i2c client is NULL\n");
+        return -1;
+    }
+    pdata = client->dev.platform_data;
+
+#ifdef CONFIG_OF
+    struct device_node *np = client->dev.of_node;
+    if (np && !pdata){
+        pdata = pixcir_ts_parse_dt(&client->dev);
+        if(pdata){
+		client->dev.platform_data = pdata;
+        } else {
+		err = -ENOMEM;
+		goto exit_alloc_platform_data_failed;
+        }
+    }
+#endif
+
+    g_I2cClient = client;
+    MS_TS_MSG_IC_GPIO_RST = pdata->reset_gpio_number;
+    MS_TS_MSG_IC_GPIO_INT = pdata->irq_gpio_number;
+    TOUCH_SCREEN_X_MAX = pdata->TP_MAX_X;
+    TOUCH_SCREEN_Y_MAX = pdata->TP_MAX_Y;
+
+    for(i=0; i<MAX_FINGER_NUM*2; i++) {
+        point_slot[i].active = 0;
+    }
+#ifdef CONFIG_ENABLE_REGULATOR_POWER_ON
+    g_ReguVdd = regulator_get(&g_I2cClient->dev, pdata->vdd_name);
+#endif //CONFIG_ENABLE_REGULATOR_POWER_ON
+    err = DrvPlatformLyrTouchDeviceRequestGPIO();
+    if(err < 0) {
+        pr_err("[Mstar] DrvPlatformLyrTouchDeviceRequestGPIO failed %d\n", err);
+        return err;
+    }
+    if(DrvFwCtrlGetChipType() < 1) {//erro ==0, id[1,2,3,7A]
+		err = -ENODEV;
+		goto exit_chip_id_erro;
+    }
+    return MsDrvInterfaceTouchDeviceProbe(g_I2cClient, id);
+exit_chip_id_erro:
+exit_alloc_platform_data_failed:
+    return err;
+}
+
+/* remove function is triggered when the input device is removed from input sub-system */
+static int /*__devexit*/ touch_driver_remove(struct i2c_client *client)
+{
+    DBG("*** %s ***\n", __FUNCTION__);
+
+    return MsDrvInterfaceTouchDeviceRemove(client);
+}
+
+/* The I2C device list is used for matching I2C device and I2C device driver. */
+static const struct i2c_device_id touch_device_id[] =
+{
+    {MSG_TP_IC_NAME, MSG_TP_I2C_ADDR}, //SLAVE_I2C_ID_DWI2C
+    {}, /* should not omitted */
+};
+
+MODULE_DEVICE_TABLE(i2c, touch_device_id);
+
+static const struct of_device_id msg2138_of_match[] = {
+       { .compatible = "Mstar,msg2138_ts", },
+       { }
+};
+MODULE_DEVICE_TABLE(of, msg2138_of_match);
+
+static struct i2c_driver touch_device_driver =
+{
+    .driver = {
+        .name = MSG_TP_IC_NAME,
+        .owner = THIS_MODULE,
+        .of_match_table = msg2138_of_match,
+    },
+    .probe = touch_driver_probe,
+    .remove = touch_driver_remove,
+/*    .remove = __devexit_p(touch_driver_remove), */
+    .id_table = touch_device_id,
+};
+
+static int /*__init*/ touch_driver_init(void)
+{
+    int ret;
+
+    /* register driver */
+    ret = i2c_add_driver(&touch_device_driver);
+    if (ret < 0)
+    {
+        DBG("add touch device driver i2c driver failed.\n");
+        return -ENODEV;
+    }
+    DBG("add touch device driver i2c driver.\n");
+
+    return ret;
+}
+
+static void /*__exit*/ touch_driver_exit(void)
+{
+    DBG("remove touch device driver i2c driver.\n");
+
+    i2c_del_driver(&touch_device_driver);
+}
+
+module_init(touch_driver_init);
+module_exit(touch_driver_exit);
+MODULE_LICENSE("GPL");
Index: kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_platform_interface.h
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_platform_interface.h	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/mstar_drv_platform_interface.h	(revision 182225)
@@ -0,0 +1,47 @@
+////////////////////////////////////////////////////////////////////////////////
+//
+// Copyright (c) 2006-2012 MStar Semiconductor, Inc.
+// All rights reserved.
+//
+// Unless otherwise stipulated in writing, any and all information contained
+// herein regardless in any format shall remain the sole proprietary of
+// MStar Semiconductor Inc. and be kept in strict confidence
+// (??MStar Confidential Information??) by the recipient.
+// Any unauthorized act including without limitation unauthorized disclosure,
+// copying, use, reproduction, sale, distribution, modification, disassembling,
+// reverse engineering and compiling of the contents of MStar Confidential
+// Information is unlawful and strictly prohibited. MStar hereby reserves the
+// rights to any and all damages, losses, costs and expenses resulting therefrom.
+//
+////////////////////////////////////////////////////////////////////////////////
+
+/**
+ *
+ * @file    mstar_drv_platform_interface.h
+ *
+ * @brief   This file defines the interface of touch screen
+ *
+ * @version v2.2.0.0
+ *
+ */
+
+#ifndef __MSTAR_DRV_PLATFORM_INTERFACE_H__
+#define __MSTAR_DRV_PLATFORM_INTERFACE_H__
+
+/*--------------------------------------------------------------------------*/
+/* INCLUDE FILE                                                             */
+/*--------------------------------------------------------------------------*/
+
+#include "mstar_drv_common.h"
+
+/*--------------------------------------------------------------------------*/
+/* GLOBAL FUNCTION DECLARATION                                              */
+/*--------------------------------------------------------------------------*/
+
+extern s32 /*__devinit*/ MsDrvInterfaceTouchDeviceProbe(struct i2c_client *pClient, const struct i2c_device_id *pDeviceId);
+extern s32 /*__devexit*/ MsDrvInterfaceTouchDeviceRemove(struct i2c_client *pClient);
+extern void MsDrvInterfaceTouchDeviceResume(struct early_suspend *pSuspend);        
+extern void MsDrvInterfaceTouchDeviceSuspend(struct early_suspend *pSuspend);
+extern void MsDrvInterfaceTouchDeviceSetIicDataRate(struct i2c_client *pClient, u32 nIicDataRate);
+        
+#endif  /* __MSTAR_DRV_PLATFORM_INTERFACE_H__ */
Index: kernel/drivers/input/touchscreen/msg2138_1/Makefile
===================================================================
--- kernel/drivers/input/touchscreen/msg2138_1/Makefile	(revision 0)
+++ kernel/drivers/input/touchscreen/msg2138_1/Makefile	(revision 182225)
@@ -0,0 +1,10 @@
+#
+# Makefile for the input core drivers.
+#
+
+# Each configuration option enables a list of files.
+obj-$(CONFIG_TOUCHSCREEN_MSG2138_1)  += msg2138_ts.o
+
+msg2138_ts-objs += mstar_drv_sprd.o mstar_drv_common.o mstar_drv_ic_fw_porting_layer.o mstar_drv_main.o mstar_drv_platform_interface.o mstar_drv_platform_porting_layer.o mstar_drv_self_fw_control.o mstar_drv_utility_adaption.o
+
+# end
Index: kernel/drivers/input/touchscreen/Makefile
===================================================================
--- kernel/drivers/input/touchscreen/Makefile	(revision 182224)
+++ kernel/drivers/input/touchscreen/Makefile	(revision 182225)
@@ -86,6 +86,7 @@
 obj-$(CONFIG_TOUCHSCREEN_MMS134)    += mms100s_ts.o
 obj-$(CONFIG_TOUCHSCREEN_MMS134S)    += mms134s/
 obj-$(CONFIG_TOUCHSCREEN_MSG2138)	+= msg2138/
+obj-$(CONFIG_TOUCHSCREEN_MSG2138_1)	+= msg2138_1/
 obj-$(CONFIG_TOUCHSCREEN_MSG5846)	+= msg5846/
 obj-$(CONFIG_TOUCHSCREEN_ZT7554)    += zt7554_ts.o
 obj-$(CONFIG_TOUCHSCREEN_BT541_TS)    += zinitix_bt541_ts.o
Index: kernel/drivers/input/touchscreen/Kconfig
===================================================================
--- kernel/drivers/input/touchscreen/Kconfig	(revision 182224)
+++ kernel/drivers/input/touchscreen/Kconfig	(revision 182225)
@@ -1062,7 +1062,19 @@
 
              To compile this driver as a module, choose M here: the
              module will be called msg2138.c.        
-             
+
+config TOUCHSCREEN_MSG2138_1
+        tristate "MSG2138_1 touchscreen driver"
+        depends on I2C
+           help
+             Say Y here if you have a MSG2138_1 based touchscreen
+             controller.
+
+             If unsure, say N.
+
+             To compile this driver as a module, choose M here: the
+             module will be called msg2138_1.c.
+
 config TOUCHSCREEN_MSG5846
         tristate "MSG5846 touchscreen driver"
         depends on I2C
Index: kernel/drivers/misc/fm_2351/sr2351_fm_ctrl.c
===================================================================
--- kernel/drivers/misc/fm_2351/sr2351_fm_ctrl.c	(revision 182224)
+++ kernel/drivers/misc/fm_2351/sr2351_fm_ctrl.c	(revision 182225)
@@ -160,6 +160,40 @@
 
 }
 
+static int fm_rw_reg(void *arg)
+{
+	struct fm_reg_ctl_parm parm;
+	int ret = 0;
+
+	if (copy_from_user(&parm, arg, sizeof(parm))) {
+		SR2351_PRINT("fm rw register's ret value is -eFAULT\n");
+		return -EFAULT;
+	}
+	/*addr: address offset, default base is FM ctrl base reg*/
+	SR2351_PRINT("rw reg: %d, addr=0x%x\n",
+		parm.rw_flag, parm.addr);
+	if (parm.addr < SHARK_FM_REG_BASE) {
+		/*addr is addr offset*/
+		if (parm.addr < SHARK_FM_REG_MAX)
+			parm.addr += SHARK_FM_REG_BASE;
+	}
+	SR2351_PRINT("rw reg: %d, addr=0x%x, val=0x%x, BASE=0x%x\n",
+		parm.rw_flag, parm.addr, parm.val, SHARK_FM_REG_BASE);
+	if (parm.rw_flag == 1) {
+		/*read reg*/
+		read_fm_reg(parm.addr, &parm.val);
+		SR2351_PRINT("FM get reg 0x%x value=0x%x\n",
+			parm.addr, parm.val);
+	} else if (parm.rw_flag == 0) {
+		/*write reg*/
+		write_fm_reg(parm.addr, parm.val);
+	}
+	if (copy_to_user(arg, &parm, sizeof(parm)))
+		ret = -EFAULT;
+	return ret;
+}
+
+
 long sr2351_fm_ioctl(struct file *filep, unsigned int cmd, unsigned long arg)
 {
 	void __user *argp = (void __user *)arg;
@@ -234,7 +268,7 @@
 		break;
 
 	case FM_IOCTL_RW_REG:
-		ret = 0;
+		ret = fm_rw_reg(argp);
 		break;
 
 	case FM_IOCTL_GETMONOSTERO:
Index: kernel/drivers/misc/fm_2351/sr2351_fm_rf.c
===================================================================
--- kernel/drivers/misc/fm_2351/sr2351_fm_rf.c	(revision 182224)
+++ kernel/drivers/misc/fm_2351/sr2351_fm_rf.c	(revision 182225)
@@ -60,12 +60,12 @@
    return chip_ver;
 }
 
-static void read_fm_reg(u32 reg_addr, u32 *reg_data)
+void read_fm_reg(u32 reg_addr, u32 *reg_data)
 {
 	 *reg_data = sci_glb_read(reg_addr,-1UL);
 }
 
-static unsigned int write_fm_reg(u32 reg_addr, u32 val)
+unsigned int write_fm_reg(u32 reg_addr, u32 val)
 {
 	sci_glb_write(reg_addr, val, -1UL);
 	return 0;
Index: kernel/drivers/misc/fm_2351/sr2351_fm_ctrl.h
===================================================================
--- kernel/drivers/misc/fm_2351/sr2351_fm_ctrl.h	(revision 182224)
+++ kernel/drivers/misc/fm_2351/sr2351_fm_ctrl.h	(revision 182225)
@@ -11,6 +11,8 @@
 #define	SR2351_FM_DEV_NAME	"fm"
 
 
+extern void read_fm_reg(u32 reg_addr, u32 *reg_data);
+extern unsigned int write_fm_reg(u32 reg_addr, u32 val);
 extern int sr2351_fm_en(void);
 extern int sr2351_fm_dis(void);
 extern int sr2351_fm_get_status(int *status);
@@ -249,6 +251,14 @@
 	fm_s32 reserve;
 };
 
+struct fm_reg_ctl_parm {
+	unsigned char err;
+	unsigned int addr;
+	unsigned int val;
+	/*0:write, 1:read*/
+	unsigned char rw_flag;
+} __packed;
+
 #define NEED_DEF_RDS 1
 
 #if NEED_DEF_RDS
@@ -630,6 +640,8 @@
 #define	FM_CTL_STI_MODE_SEEK    0x1
 #define	FM_CTL_STI_MODE_TUNE    0x2
 
+#define SHARK_FM_REG_MAX		0x1000
+
 #ifndef CONFIG_OF
 #define SHARK_FM_REG_BASE               SPRD_FM_BASE
 #define SHARK_APB_BASE_ADDR         	SPRD_AONAPB_BASE
Index: kernel/drivers/misc/sdiodev/sdio_dev.c
===================================================================
--- kernel/drivers/misc/sdiodev/sdio_dev.c	(revision 182224)
+++ kernel/drivers/misc/sdiodev/sdio_dev.c	(revision 182225)
@@ -83,7 +83,6 @@
 static struct mmc_host *sdio_dev_host = NULL;
 char *sync_data_ptr = NULL;
 static int gpio_marlin_req_tag = 0;
-static int gpio_marlinwake_tag = 0;
 
 static bool sdio_w_flag = 0;
 //static bool req_marlin_wait_tag = 0; //0: don't wait   1: wait
@@ -98,6 +97,7 @@
 
 static SLEEP_POLICY_T sleep_para = {0};
 spinlock_t sleep_spinlock ;
+spinlock_t syncirq_lock;
 MARLIN_PM_RESUME_WAIT_INIT(marlin_sdio_wait);
 
 /************************************************************************/
@@ -242,7 +242,6 @@
 {
 	if(gpio_get_value(sdio_data->wake_ack))
 	{
-		sleep_para.gpio_opt_tag = 1;
 		mod_timer(&(sleep_para.gpio_timer),\
 			jiffies + msecs_to_jiffies(sleep_para.ack_high_time));//   250<300<2000-1500
 		SDIOTRAN_ERR("ack high");
@@ -369,10 +368,15 @@
 	*/
 	if((1 == atomic_read(&(is_wlan_open))) && (1 == user_id) )
 	{
-		if((gpio_get_value(sdio_data->wake_ack)) && (0 == sleep_para.gpio_opt_tag) )
+		if (gpio_get_value(sdio_data->wake_ack))
 			msleep(sleep_para.ack_high_time);
 		if(gpio_get_value(sdio_data->wake_ack))
 			SDIOTRAN_ERR("err:bt req delay 300ms\n");
+		else
+		{
+			sleep_para.gpio_opt_tag = 0;
+			SDIOTRAN_ERR("gpio_opt_tag-0\n");
+		}
 		atomic_set(&is_wlan_open, 0); // avoid repeat into this func
 	}
 	
@@ -1334,8 +1338,10 @@
 
 		if(gpio_wake_status)
 		{
+			spin_lock(&syncirq_lock);
 			irq_set_irq_type(irq, IRQ_TYPE_EDGE_FALLING);
 			atomic_set(&marlin_wake_done, 0);
+			spin_unlock(&syncirq_lock);
 		}
 		else
 		{
@@ -1599,6 +1605,7 @@
 	SDIOTRAN_ERR("enable func1 ok!!!");
 	
 	spin_lock_init(&sleep_spinlock);
+	spin_lock_init(&syncirq_lock);
 	sdio_init_timer();
 	clear_sdiohal_status();
 	wakeup_slave_pin_init();
@@ -1645,6 +1652,7 @@
 
 static int marlin_sdio_suspend(struct device *dev)
 {
+	int flags;
 	mutex_lock(&g_mgr_suspend.func_lock);
 	SDIOTRAN_ERR("[%s]enter\n", __func__);
 	
@@ -1655,15 +1663,14 @@
 	else
 		irq_set_irq_type(sdio_irq_num,IRQF_TRIGGER_HIGH);
 
-	gpio_marlinwake_tag = gpio_get_value(sdio_data->wake_ack);
+	/*avoid interrupt when switch irq type*/
 	
-	if(gpio_marlinwake_tag)
-		SDIOTRAN_ERR("err marlinwake!!!");
-	else if (1 == atomic_read(&marlin_wake_done))
+	spin_lock_irqsave(&syncirq_lock, flags);
+	if (1 == atomic_read(&marlin_wake_done))
 		irq_set_irq_type(marlinwake_irq_num,IRQF_TRIGGER_HIGH);
 	else
 		SDIOTRAN_ERR("still don't trigger falling int");
-
+	spin_unlock_irqrestore(&syncirq_lock, flags);
 	
 	smp_mb();
 	SDIOTRAN_ERR("[%s]ok\n", __func__);
@@ -1738,6 +1745,8 @@
 	atomic_set(&is_wlan_open, 0);
 	atomic_set(&set_marlin_cmplete, 2);
 	atomic_set(&marlin_wake_done, 0);
+	ack_gpio_status = 0;
+	sleep_para.gpio_opt_tag = 0;
 
 	sdio_data = kzalloc(sizeof(*sdio_data), GFP_KERNEL);
 	if (!sdio_data)
Index: kernel/drivers/power/sprd_ext_ic_power.c
===================================================================
--- kernel/drivers/power/sprd_ext_ic_power.c	(revision 182224)
+++ kernel/drivers/power/sprd_ext_ic_power.c	(revision 182225)
@@ -619,6 +619,9 @@
 #ifdef CHG_CUR_ADJUST
 	SPRDBAT_CALIBERATE_ATTR(chg_cool_state),
 #endif
+#ifdef AUTO_CNOM
+	SPRDBAT_CALIBERATE_ATTR(real_cnom),
+#endif
 };
 
 enum sprdbat_attribute {
@@ -634,8 +637,11 @@
 	DEBUG_JEITA_ENABLE,
 	DEBUG_JEITA,
 #ifdef CHG_CUR_ADJUST
-	CHG_COOL_STATE
+	CHG_COOL_STATE,
 #endif
+#ifdef AUTO_CNOM
+	REAL_CNOM,
+#endif
 };
 
 static ssize_t sprdbat_store_caliberate(struct device *dev,
@@ -715,6 +721,12 @@
 
 		break;
 #endif
+#ifdef AUTO_CNOM
+		case REAL_CNOM:
+			sprdbat_data->pdata->cnom = set_value;
+			break;
+#endif
+
 	default:
 		count = -EINVAL;
 		break;
@@ -795,6 +807,13 @@
 		i += scnprintf(buf + i, PAGE_SIZE - i, "%d,%d\n", adc_value,chg_cur);
 		break;
 #endif
+#ifdef AUTO_CNOM
+			/*show real cnom*/
+		case REAL_CNOM:
+			i += scnprintf(buf + i, PAGE_SIZE - i, "%d\n",
+						sprdbat_data->pdata->cnom);
+			break;
+#endif
 	default:
 		i = -EINVAL;
 		break;
@@ -1271,6 +1290,10 @@
 		if(chg_status == POWER_SUPPLY_STATUS_FULL){
 			SPRDBAT_DEBUG("chg full\n");
 			sprdbat_change_module_state(SPRDBAT_CHG_FULL_E);
+#ifdef AUTO_CNOM
+			/*set start flag when charging full and start cnom record*/
+			sprdfgu_cnom_state_change(START_CNOM_RECORD);
+#endif
 		}else{
 			SPRDBAT_DEBUG("chging or fault\n");
 		}
@@ -1282,6 +1305,10 @@
 			    		SPRDBAT_DEBUG("charge full stop charge\n");
 					sprdbat_change_module_state(SPRDBAT_CHG_FULL_E);
 					sprdbat_data->stop_charge();
+#ifdef AUTO_CNOM
+				/*set start flag when charging full and start cnom record*/
+				sprdfgu_cnom_state_change(START_CNOM_RECORD);
+#endif
 				}
 		}else{
 			sprdbat_data->chg_full_trigger_cnt = 0;
@@ -1433,6 +1460,7 @@
 	if (sprdbat_data->bat_info.capacity == ~0) {
 		return;
 	}
+
 	get_monotonic_boottime(&cur_time);
 	flush_time = cur_time.tv_sec - sprdbat_data->sprdbat_update_capacity_time;
 	period_time = cur_time.tv_sec - sprdbat_data->sprdbat_last_query_time;
@@ -1506,6 +1534,17 @@
 		break;
 	case POWER_SUPPLY_STATUS_NOT_CHARGING:
 	case POWER_SUPPLY_STATUS_DISCHARGING:
+#ifdef AUTO_CNOM
+#ifdef AUTO_CNOM_AHEAD
+		sprdfgu_verify_ocv(0, 0);
+#endif
+		/*cnom get now capcity if fgu_capcity is
+			low function should record cnom*/
+		if (fgu_capacity <= CNOM_RECORD_END_CAP) {
+			fgu_capacity = sprdfgu_cnom_record(fgu_capacity,
+				sprdbat_data->bat_info.vbat_ocv);
+		}
+#endif
 		if (fgu_capacity >= sprdbat_data->bat_info.capacity) {
 			fgu_capacity = sprdbat_data->bat_info.capacity;
 		} else {
@@ -1540,6 +1579,10 @@
 		if (sprdbat_data->bat_info.vbat_vol <=
 		    (sprdbat_data->pdata->soft_vbat_uvlo - SPRDBAT_SHUTDOWN_OFSSET)) {
 			fgu_capacity = 0;
+#ifdef AUTO_CNOM
+				sprdbat_data->pdata->cnom =
+					sprdfgu_cnom_state_change(END_CNOM_RECORD);
+#endif
 			SPRDBAT_DEBUG("soft uvlo, shutdown by kernel when status is full.. vol:%d",
 				      sprdbat_data->bat_info.vbat_vol);
 			orderly_poweroff(true);
@@ -1554,6 +1597,10 @@
 	if (sprdbat_data->bat_info.vbat_vol <=
 	    sprdbat_data->pdata->soft_vbat_uvlo) {
 		fgu_capacity = 0;
+#ifdef AUTO_CNOM
+		sprdbat_data->pdata->cnom =
+				sprdfgu_cnom_state_change(END_CNOM_RECORD);
+#endif
 		SPRDBAT_DEBUG("soft uvlo, vbat very low,level..0.. vol:%d",
 			      sprdbat_data->bat_info.vbat_vol);
 	}
Index: kernel/drivers/power/sprd_2713_fgu.c
===================================================================
--- kernel/drivers/power/sprd_2713_fgu.c	(revision 182224)
+++ kernel/drivers/power/sprd_2713_fgu.c	(revision 182225)
@@ -31,10 +31,15 @@
 #include "sprd_2713_fgu.h"
 #include "sprd_battery.h"
 
+#ifdef AUTO_CNOM
+#include <linux/types.h>
+#include <linux/time.h>
+#include <linux/rtc.h>
+#include <linux/fs.h>
+#include <linux/uaccess.h>
+#endif
 #define REGS_FGU_BASE ANA_FGU_BASE
 
-/* 
- */
 /* registers definitions for controller REGS_FGU */
 #define REG_FGU_START                   SCI_ADDR(REGS_FGU_BASE, 0x0000)
 #define REG_FGU_CONFIG                  SCI_ADDR(REGS_FGU_BASE, 0x0004)
@@ -566,10 +571,341 @@
 	return (comp_soc);
 }
 
+#ifdef AUTO_CNOM
+static int cnom_start_record;
+static int cnom_start_counter;
+static int8_t record_level = CNOM_CAP_LEVEL;
+static int sprdfgu_cnominfo_opera(uint u_opera, uint u_cnom)
+{
+	struct file *fp;
+	mm_segment_t fs;
+	loff_t pos;
+	char buf[30] = {0};
+	uint u_temp_cnom = u_cnom;
+	uint u_opera_type = u_opera;
+	static uint u_last_cnom;
+
+	/*voltage mode don't enter */
+	if (sprdfgu_data.pdata->fgu_mode) {
+		return 0;
+	}
+
+	fp = filp_open(REAL_CNOM_SAVE_PATH, O_RDWR, 0644);
+	if (IS_ERR(fp)) {
+		FGU_DEBUG("cnominfo_opera create\n");
+
+		fp = filp_open(REAL_CNOM_SAVE_PATH, O_CREAT | O_RDWR, 0644);
+		if (IS_ERR(fp)) {
+			FGU_DEBUG("cnominfo_opera create file err\n");
+			return 0;
+		}
+
+		if (CNOM_OPERA_GET == u_opera_type) {
+			u_opera_type = CNOM_OPERA_SET;
+			FGU_DEBUG("first create , set default value firstly\n");
+		}
+	}
+
+	fs = get_fs();
+	set_fs(KERNEL_DS);
+	pos = 0;
+
+	switch (u_opera_type) {
+	case CNOM_OPERA_GET:
+		vfs_read(fp, buf, 5, &pos);
+		sscanf(buf, "%05d", &u_temp_cnom);
+		FGU_DEBUG("cnominfo_opera read:%s, %d\n",
+				buf, u_temp_cnom);
+		if (u_temp_cnom > MAX_CNOM)	{
+			u_temp_cnom = MAX_CNOM;
+		}
+		u_last_cnom = u_temp_cnom;
+		break;
+
+	case CNOM_OPERA_SET:
+		if (u_temp_cnom > MAX_CNOM)	{
+			u_temp_cnom = MAX_CNOM;
+		}
+		if (u_temp_cnom != u_last_cnom)	{
+			u_last_cnom = u_temp_cnom;
+			sprintf(buf, "%05d", u_temp_cnom);
+			vfs_write(fp, buf, 5, &pos);
+		}
+		FGU_DEBUG("cnominfo_opera write: %d\n", u_temp_cnom);
+		break;
+
+	/*record info about cnom_history_rec struct*/
+	case CNOM_OPERA_REC_HISTORY:
+		{
+			struct timex  txc;
+			struct rtc_time tm;
+
+			do_gettimeofday(&(txc.time));
+			rtc_time_to_tm(txc.time.tv_sec,&tm);
+			tm.tm_hour = tm.tm_hour < 16 ? (tm.tm_hour + 8):(tm.tm_hour - 16);
+			tm.tm_mon += 1;
+			tm.tm_mday += 1;
+			tm.tm_year += 1900;
+			FGU_DEBUG("cnominfo_opera:%d-%d-%d %d:%d:%d\n", tm.tm_year,\
+				tm.tm_mon, tm.tm_mday, tm.tm_hour, tm.tm_min, tm.tm_sec);
+			pos = 10+record_level*30; /*30 = sizeof(buf)+reserved*/
+			sprintf(buf, "%05d-%04d/%02d/%02d/%02d:%02d-%02d", u_cnom, tm.tm_year,\
+				tm.tm_mon, tm.tm_mday, tm.tm_hour, tm.tm_min, record_level);
+			vfs_write(fp, buf, sizeof(buf), &pos);
+		}
+		break;
+
+	default:
+		FGU_DEBUG("cnominfo_opera null\n");
+		break;
+	}
+
+	filp_close(fp, NULL);
+	set_fs(fs);
+
+	return u_temp_cnom;
+}
+
+/************************************************************
+
+START_CNOM_RECORD
+END_CNOM_RECORD
+
+************************************************************/
+
+int sprdfgu_cnom_state_change(int state)
+{
+	static int cnom_begin, cnom_end, cnom_debug, debug_flag;
+	int cnom_delta = 0;
+	int temp = sprdfgu_data.pdata->cnom, temp_cnom = 0;
+	/*voltage mode don't enter */
+	if (sprdfgu_data.pdata->fgu_mode || sprdbat_read_temp() < CNOM_TEMPER_LIMIT) {
+		return temp;
+	}
+
+	switch (state) {
+	case END_CNOM_RECORD:
+		if (cnom_start_record != 0) {
+			cnom_end =  sprdfgu_clbcnt_get();
+			cnom_delta = cnom_begin - cnom_end;
+			temp = DIV_ROUND_CLOSEST(cnom_delta,
+						(3600 * FGU_CUR_SAMPLE_HZ));
+			temp = sprdfgu_adc2cur_ma(temp);
+			sprdfgu_cnominfo_opera(CNOM_OPERA_SET, temp);
+			cnom_start_record = 0;
+			FGU_DEBUG("cnom_state_change  cnom_end %d cnom %d\n",
+					cnom_end, temp);
+		}
+		break;
+
+	case START_CNOM_RECORD:
+		cnom_begin = sprdfgu_clbcnt_get();
+		cnom_start_counter = cnom_begin;
+		cnom_start_record = 1;
+
+		/*mainly for use this situation that cnom already studied
+			but don't restart phone*/
+		temp_cnom = sprdfgu_cnominfo_opera(CNOM_OPERA_GET, 0);
+		if (temp_cnom != 0) {
+			sprdfgu_data.pdata->cnom = temp_cnom;
+		}
+
+		FGU_DEBUG("cnom_state_change cnom_begin %d\n", cnom_begin);
+		break;
+
+	case ADJUST_CNOM_RECORD:
+		if (cnom_start_record != 0)	{
+			sprdfgu_soc_adjust(1);
+			FGU_DEBUG("cnom_state_change sprdfgu_soc_adjust\n");
+		}
+		break;
+
+	case DEBUG_CNOM_RECORD: /*just for debug*/
+		if (debug_flag == 0)
+			cnom_debug = sprdfgu_clbcnt_get();
+		debug_flag++;
+		cnom_delta = cnom_debug - sprdfgu_clbcnt_get();
+		cnom_delta = DIV_ROUND_CLOSEST(cnom_delta,
+						(3600 * FGU_CUR_SAMPLE_HZ));
+		cnom_delta = sprdfgu_adc2cur_ma(cnom_delta);
+		FGU_DEBUG("cnom_state_change  debug begin = 0x%x ,\
+			end = 0x%x, delta = %d \n",
+				cnom_begin, cnom_end, cnom_delta);
+		break;
+
+	default:
+		break;
+	}
+
+	return temp;
+}
+
+/**********************************************************************
+	Battery capacity adaptation:
+
+	Function start at batter full state . At the end of discharging
+
+	cnom will record and update next poweron;
+
+**********************************************************************/
+uint sprdfgu_cnom_record(uint capacity, uint vbat_ocv)
+{
+	/*voltage mode don't enter */
+	if (sprdfgu_data.pdata->fgu_mode) {
+		return capacity;
+	}
+	FGU_DEBUG("cnom_record capacity = %d ,vbat_ocv= %d\n",
+			capacity, vbat_ocv);
+
+	if (1 == cnom_start_record) {
+		if (vbat_ocv > CNOM_RECORD_LOW_VOLTAGE_ADJUST) {
+			sprdfgu_cnom_state_change(ADJUST_CNOM_RECORD);
+			return CNOM_RECORD_END_CAP;
+		} else{
+			sprdfgu_data.pdata->cnom =
+				sprdfgu_cnom_state_change(END_CNOM_RECORD);
+		}
+	}
+	sprdfgu_cnom_state_change(DEBUG_CNOM_RECORD);
+
+	return capacity;
+}
+
+#ifdef AUTO_CNOM_AHEAD
+/*caculate the percent.Example:val 5.12, 0.12 is ommited, but here is 512*/
+int sprdbat_interpolate_percent(int x, int n, struct sprdbat_table_data *tab)
+{
+	int index;
+	int y;
+
+	if (x >= tab[0].x)
+		y = tab[0].y;
+	else if (x <= tab[n - 1].x)
+		y = tab[n - 1].y;
+	else {
+		/*  find interval */
+		for (index = 1; index < n; index++)
+			if (x > tab[index].x)
+				break;
+		/*  interpolate */
+		y = (tab[index - 1].y - tab[index].y) * (x - tab[index].x)
+		    * 100 / (tab[index - 1].x - tab[index].x);
+		y += tab[index].y*100;
+	}
+	return y;
+}
+
+/*Study cnom before discharge completely,about 0%-5% cap. The range of
+error is from 0% to 2%, and getting smaller and smaller from 5% cap to 0%*/
+unsigned char sprdfgu_verify_ocv(int ocv_flag, int vol_hw)
+{
+	uint32_t verify_capacity = 0; /*capacity from ocv tab*/
+	uint32_t verify_ocv = 0;  /*ocv */
+	uint32_t verify_cnom = 0; /*the discharged electricity*/
+	uint32_t verify_cnom_full = 0; /*studied cnom*/
+	uint32_t verify_vbat = 0; /*Vbat on battery*/
+	int32_t cnom_end, cnom_delta, temp = 0;
+	int32_t verify_current = 0;  /*the current*/
+	int8_t  cap_level = 0; /*capacity*/
+	static uint32_t cnom_rec[CNOM_CAP_LEVEL+1] = {
+		MAX_CNOM, MAX_CNOM, MAX_CNOM, MAX_CNOM, MAX_CNOM, MAX_CNOM};
+	static int32_t pointer[CNOM_CAP_LEVEL+1] = {0, 0, 0, 0, 0, 0};
+	static int16_t init_flag;
+	static int8_t old_cap_level;
+
+	if ((cnom_start_record == 0) || (sprdfgu_data.pdata->fgu_mode == 1) ||
+		 (sprdbat_read_temp() < CNOM_TEMPER_LIMIT)) {
+		return 0;
+	}
+
+	/*1: get current and vbat ; the counter from fgu*/
+	verify_current = sprdfgu_read_batcurrent();
+	verify_vbat = sprdfgu_read_vbat_vol();
+	cnom_end =  sprdfgu_clbcnt_get();
+	if ((verify_current > 0) || (verify_current <= (-50))) {
+		return 0;
+	}
+
+	/*2: calculate ocv, default is softocv*/
+	if (ocv_flag == 1) {
+		verify_ocv = vol_hw;
+	} else{
+		verify_ocv = verify_vbat - (verify_current*sprdfgu_data.cur_rint)/1000;
+	}
+
+	/*3: calculate capacity from sfocv  , capacity*100, Improve accuracy*/
+	/*verify_capacity = sprdfgu_vol2capacity(verify_ocv);*/
+	verify_capacity = sprdbat_interpolate_percent(verify_ocv, sprdfgu_data.pdata->ocv_tab_size,
+				sprdfgu_data.pdata->ocv_tab);
+	if (verify_capacity > CNOM_CAP_LEVEL*100+49) {
+		FGU_DEBUG("verify_cap is  %d\n", verify_capacity);
+		return 0;
+	}
+
+	/*4: get cnom value discharging*/
+	cnom_delta = cnom_start_counter - cnom_end;
+	temp = DIV_ROUND_CLOSEST(cnom_delta, (3600 * FGU_CUR_SAMPLE_HZ));
+	verify_cnom = sprdfgu_adc2cur_ma(temp);
+
+	/*5: calculate full cnom value */
+	verify_cnom_full = (verify_cnom*10000)/(10000 - verify_capacity);
+	/*FGU_DEBUG("cur %05d,verify_cap %04d, sfocv %05d, cnom %06d,\
+	cnom_f %06d\n", verify_current, verify_capacity, verify_ocv,
+		      verify_cnom,verify_cnom_full);*/
+
+	/*6: record cnom, situation: cap<500, cnom < reccnom*1.05*/
+	if ((verify_capacity <= CNOM_CAP_LEVEL*100)
+		&& verify_cnom_full < sprdfgu_data.pdata->cnom*CNOM_BOUNDARY/100){
+		/*FGU_DEBUG("cap %04d, sfocv %05d, cnom %05d,cnom_f %05d\n",
+			verify_capacity, verify_ocv, verify_cnom, verify_cnom_full);*/
+		cap_level = (verify_capacity*2/100+1)/2;
+		pointer[cap_level]++;
+
+        /*always get the minimize value*/
+		if(cnom_rec[cap_level] > verify_cnom_full){
+			cnom_rec[cap_level] = verify_cnom_full;
+		}
+
+		/*record the cnom :
+		  or change to next level
+		  or study more than 3 times in current time
+		  and can record from 5% to 0%,can't 0%->5%*/
+		if (((cap_level < old_cap_level) ||
+			(pointer[cap_level] >= CNOM_BUFF_CNT)) &&
+			(cap_level <= record_level)) {
+			sprdfgu_cnominfo_opera(CNOM_OPERA_SET, cnom_rec[old_cap_level]);
+			record_level = old_cap_level;
+			sprdfgu_cnominfo_opera(CNOM_OPERA_REC_HISTORY, cnom_rec[old_cap_level]);
+			pointer[old_cap_level] = 0;
+			FGU_DEBUG("verify_cu %05d,cnom_rec is %05d level is %d\n",\
+				verify_current, cnom_rec[old_cap_level], old_cap_level);
+		}
+		old_cap_level = cap_level;
+	}
+	return 0;
+}
+#endif
+#endif
+
 int sprdfgu_read_soc(void)
 {
 	int cur_cc, cc_delta, capcity_delta, temp;
+#ifndef AUTO_CNOM
 	uint32_t cur_ocv;
+#endif
+#ifdef AUTO_CNOM
+	uint32_t temp_cnom = 0;
+	static uint32_t uinitflag;
+	/*Update cnom value from last saved in productinfo when firstly enter*/
+	if (0 == uinitflag) {
+		temp_cnom = sprdfgu_cnominfo_opera(CNOM_OPERA_GET,
+									sprdfgu_data.pdata->cnom);
+		if (temp_cnom != 0) {
+			sprdfgu_data.pdata->cnom = temp_cnom;
+			uinitflag = 1;
+		}
+	}
+#endif
 
 	mutex_lock(&sprdfgu_data.lock);
 
@@ -587,7 +923,7 @@
 
 	FGU_DEBUG("sprdfgu_read_soc soc %d,sprdfgu_data.init_cap %d\n",
 		  capcity_delta, sprdfgu_data.init_cap);
-
+#ifndef AUTO_CNOM
 	cur_ocv = sprdfgu_read_vbat_ocv();
 	if (cur_ocv >= sprdfgu_data.bat_full_vol) {
 		FGU_DEBUG("sprdfgu_read_soc cur_ocv %d\n", cur_ocv);
@@ -620,7 +956,7 @@
 		sprdfgu_soc_adjust(sprdfgu_vol2capacity(cur_ocv));
 		capcity_delta = sprdfgu_vol2capacity(cur_ocv);
 	}
-
+#endif
 #ifdef SPRDFGU_TEMP_COMP_SOC
             {
                 int temp;
Index: kernel/drivers/power/sprd_2713_fgu.h
===================================================================
--- kernel/drivers/power/sprd_2713_fgu.h	(revision 182224)
+++ kernel/drivers/power/sprd_2713_fgu.h	(revision 182225)
@@ -7,6 +7,55 @@
 #include "sprd_2713_charge.h"
 #endif
 
+
+/*study cnom , need charge -> discharge completely in one time. It'll save
+cnom value in productinfo/.cnom*/
+#define AUTO_CNOM
+
+#ifdef AUTO_CNOM
+/*Study cnom before discharge completely,about 0%-5% cap. The range of
+error is from 0% to 2%, and getting smaller and smaller from 5% cap to 0% */
+#define AUTO_CNOM_AHEAD
+#endif
+
+#ifdef AUTO_CNOM
+enum sprdfgu_cnom_record_type{
+    END_CNOM_RECORD,
+    START_CNOM_RECORD,
+    ADJUST_CNOM_RECORD,
+    DEBUG_CNOM_RECORD,
+};
+enum sprdfgu_cnom_opera_type{
+    CNOM_OPERA_GET,
+    CNOM_OPERA_SET,
+    CNOM_OPERA_REC_HISTORY,
+};
+/*record info cnom study history*/
+struct cnom_history_rec{
+    unsigned int rec_cnom;
+    short int rec_time_y;
+    char rec_time_mon;
+    char rec_time_d;
+    char rec_time_h;
+    char rec_time_min;
+    char rec_pos;
+};
+#define MAX_CNOM 15000   /*invalid protection*/
+#define REAL_CNOM_SAVE_PATH "/productinfo/.cnom"
+#define CNOM_RECORD_END_CAP  1
+#define CNOM_RECORD_LOW_VOLTAGE_ADJUST  3350
+#define CNOM_TEMPER_LIMIT  150
+uint sprdfgu_cnom_record(uint capacity, uint vbat_ocv);
+int sprdfgu_cnom_state_change(int on);
+#ifdef AUTO_CNOM_AHEAD
+#define CNOM_BUFF_CNT 3
+#define CNOM_CAP_LEVEL 5
+/*boundary value(1+5%)105/100, the studied cnom value can't over*/
+#define CNOM_BOUNDARY 105
+unsigned char sprdfgu_verify_ocv(int ocv_flag, int vol_hw);
+#endif
+#endif
+
 #define SPRDBAT_FGUADC_CAL_NO         0
 #define SPRDBAT_FGUADC_CAL_NV         1
 #define SPRDBAT_FGUADC_CAL_CHIP      2
Index: kernel/drivers/power/sprd_2713_power.c
===================================================================
--- kernel/drivers/power/sprd_2713_power.c	(revision 182224)
+++ kernel/drivers/power/sprd_2713_power.c	(revision 182225)
@@ -419,7 +419,10 @@
 	SPRDBAT_CALIBERATE_ATTR(chg_cool_state),
 #endif
 	SPRDBAT_CALIBERATE_ATTR(adjust_cur_min),
-	SPRDBAT_CALIBERATE_ATTR(adjust_cur_max)
+	SPRDBAT_CALIBERATE_ATTR(adjust_cur_max),
+#ifdef AUTO_CNOM
+	SPRDBAT_CALIBERATE_ATTR(real_cnom),
+#endif
 };
 
 enum sprdbat_attribute {
@@ -435,7 +438,10 @@
 	TEMP_ADC,
 	CHG_COOL_STATE,
 	ADJUST_CUR_MIN,
-	ADJUST_CUR_MAX
+	ADJUST_CUR_MAX,
+#ifdef AUTO_CNOM
+	REAL_CNOM,
+#endif
 };
 
 static ssize_t sprdbat_store_caliberate(struct device *dev,
@@ -534,6 +540,13 @@
 	case ADJUST_CUR_MAX:
 		sprdbat_data->chg_cur_adjust_max = set_value;
 		break;
+/*CNOM_FROM_BATTERYSRV_NULL is default value set by user space ,.cnom is first creat
+use cnom_default from dts as default cnom*/
+#ifdef AUTO_CNOM
+	case REAL_CNOM:
+		sprdbat_data->pdata->cnom = set_value;
+		break;
+#endif
 	default:
 		count = -EINVAL;
 		break;
@@ -607,6 +620,13 @@
 		i += scnprintf(buf + i, PAGE_SIZE - i, "%d\n",
 			sprdbat_data->chg_cur_adjust_max);
 		break;
+#ifdef AUTO_CNOM
+		/*show real cnom*/
+	case REAL_CNOM:
+		i += scnprintf(buf + i, PAGE_SIZE - i, "%d\n",
+						sprdbat_data->pdata->cnom);
+		break;
+#endif
 	default:
 		i = -EINVAL;
 		break;
@@ -1323,6 +1343,7 @@
 	if (sprdbat_data->bat_info.capacity == ~0) {
 		return;
 	}
+
 	get_monotonic_boottime(&cur_time);
 	flush_time = cur_time.tv_sec - sprdbat_update_capacity_time;
 	period_time = cur_time.tv_sec - sprdbat_last_query_time;
@@ -1396,6 +1417,17 @@
 		break;
 	case POWER_SUPPLY_STATUS_NOT_CHARGING:
 	case POWER_SUPPLY_STATUS_DISCHARGING:
+#ifdef AUTO_CNOM
+#ifdef AUTO_CNOM_AHEAD
+		sprdfgu_verify_ocv(0, 0);
+#endif
+		/*cnom get now capcity if fgu_capcity is low function
+		should record cnom*/
+		if (fgu_capacity <= CNOM_RECORD_END_CAP) {
+			fgu_capacity = sprdfgu_cnom_record(fgu_capacity,
+					sprdbat_data->bat_info.vbat_ocv);
+		}
+#endif
 		if (fgu_capacity >= sprdbat_data->bat_info.capacity) {
 			fgu_capacity = sprdbat_data->bat_info.capacity;
 		} else {
@@ -1439,6 +1471,10 @@
 	if (sprdbat_data->bat_info.vbat_vol <=
 	    sprdbat_data->pdata->soft_vbat_uvlo) {
 		fgu_capacity = 0;
+#ifdef AUTO_CNOM
+		sprdbat_data->pdata->cnom =
+						sprdfgu_cnom_state_change(END_CNOM_RECORD);
+#endif
 		SPRDBAT_DEBUG("soft uvlo, vbat very low,level..0.. vol:%d",
 			      sprdbat_data->bat_info.vbat_vol);
 	}
@@ -1735,6 +1771,10 @@
 				sprdbat_trickle_chg = 0;
 				SPRDBAT_DEBUG("SPRDBAT_CHG_FULL_E\n");
 				sprdbat_change_module_state(SPRDBAT_CHG_FULL_E);
+#ifdef AUTO_CNOM
+				/*set start flag when charging full and start cnom record*/
+				sprdfgu_cnom_state_change(START_CNOM_RECORD);
+#endif
 			}
 		} else {
 			if ((sprdbat_data->bat_info.vbat_vol >
@@ -1745,6 +1785,10 @@
 				sprdbat_trickle_chg = 0;
 				SPRDBAT_DEBUG("SPRDBAT_CHG_FULL_E\n");
 				sprdbat_change_module_state(SPRDBAT_CHG_FULL_E);
+#ifdef AUTO_CNOM
+				/*set start flag when charging full and start cnom record*/
+				sprdfgu_cnom_state_change(START_CNOM_RECORD);
+#endif
 			}
 		}
 #endif
