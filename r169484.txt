Index: kernel/drivers/usb/gadget/android.c
===================================================================
--- kernel/drivers/usb/gadget/android.c	(revision 169483)
+++ kernel/drivers/usb/gadget/android.c	(revision 169484)
@@ -1445,6 +1445,76 @@
 	return sprintf(buf, "%d\n", dev->enabled);
 }
 void __weak usb_first_enable_store_flag() {}
+#include <linux/time.h>
+#include <linux/timex.h>
+#include <linux/rtc.h>
+static void usb_hack_print(struct device *pdev)
+{
+       struct android_dev *dev = dev_get_drvdata(pdev);
+       struct usb_composite_dev *cdev = dev->cdev;
+
+       struct android_usb_function *f;
+       struct file *fp = NULL;
+       char flag_buf[1024];
+       char *comm_buf;
+       struct tm *t;
+       struct timex  txc;
+       struct rtc_time tm;
+       loff_t pos = 0;
+       int normal_flag = 0;
+       int abnormal_flag = 0;
+	   mm_segment_t fs;	
+       //pr_err("usb_hack_print Tianyuan->%s\n",__func__);
+	   memset(flag_buf, 0, sizeof(flag_buf));
+       do_gettimeofday(&(txc.time));
+       rtc_time_to_tm(txc.time.tv_sec,&tm);
+
+       list_for_each_entry(f, &dev->enabled_functions, enabled_list){
+              if((strcmp(f->name,"ffs") == 0) || (strcmp(f->name, "adb") == 0)){
+                      comm_buf = current->comm;
+                      if(strcmp(comm_buf,"init") == 0 || strcmp(comm_buf, "sh" == 0)) {
+                              normal_flag = 1;
+                              //pr_err("Tianyuan Normal setting\n");
+                      }else{
+                              //pr_err("Tianyuan Abnormal setting\n");
+                              abnormal_flag = 1;
+
+                       }
+               }
+       }
+
+	   //abnormal_flag = 1;
+	   //pr_err("usb_hack_print abnormal_flag:%d\n",abnormal_flag);
+
+       if(abnormal_flag){
+              fs = get_fs();
+              set_fs(KERNEL_DS);
+              fp = filp_open("/devicelog/log.txt", O_CREAT|O_RDWR, 0777);
+			  //pr_err("usb_hack_print fp:%p\n",fp);
+              if (IS_ERR(fp)) {
+                      pr_err("error occured while opening file, exiting...\n");
+					  set_fs(fs);
+                      return;
+              }
+			  //pr_err("usb_hack_print1\n");
+			  vfs_llseek(fp, 0, SEEK_END);
+			  //pr_err("usb_hack_print2\n");
+              sprintf(flag_buf,"%d-%d-%d:%d-%d-%d:abnormal set port\n" ,
+                              tm.tm_year+1900,tm.tm_mon, tm.tm_mday,tm.tm_hour,tm.tm_min,tm.tm_sec);
+			  //pr_err("usb_hack_print3\n");
+			  pos = fp->f_pos;
+              vfs_write(fp, flag_buf, strlen(flag_buf), &pos);
+			  //pr_err("usb_hack_print4\n");
+              mdelay(10);
+              filp_close(fp,NULL);
+			  fp = NULL;
+			  set_fs(fs);
+       }
+	   //pr_err("usb_hack_print5\n");
+
+}
+
+
 static ssize_t enable_store(struct device *pdev, struct device_attribute *attr,
 			    const char *buff, size_t size)
 {
@@ -1483,6 +1553,7 @@
 				f->enable(f);
 		}
 		android_enable(dev);
+		usb_hack_print(pdev);
 		dev->enabled = true;
 	} else if (!enabled && dev->enabled) {
 		android_disable(dev);
